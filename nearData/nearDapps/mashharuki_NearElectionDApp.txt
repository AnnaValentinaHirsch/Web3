*GitHub Repository "mashharuki/NearElectionDApp"*

'''--- README.md ---
# NearElectionDApp
Near上で動作するDApp開発用のリポジトリです。

### 動かし方メモ

```cmd
======================================================
👋 Welcome to NEAR! Learn more: https://docs.near.org/
🔧 Let's get your dApp ready.
======================================================
(NEAR collects anonymous information on the commands used. No personal information that could identify you is shared)

Creating a new NEAR dApp

======================================================
✅  Success! Created '/Users/harukikondo/git/NearElectionDApp/near-election-dapp/frontend'
   with a smart contract in Rust and a frontend template in React.js.
🦀 If you are new to Rust please visit https://www.rust-lang.org 

  Your next steps:
   - Navigate to your project:
         cd /Users/harukikondo/git/NearElectionDApp/near-election-dapp/frontend
   - Install all dependencies
         npm run deps-install
   - Test your contract in NEAR SandBox:
         npm test
   - Deploy your contract to NEAR TestNet with a temporary dev account:
         npm run deploy
   - Start your frontend:
         npm start

🧠 Read README.md to explore further.
```

### アプリの起動方法

1. あらかじめスマートコントラクトをNear上にデプロイしておくこと
2. frontend/frontend/neardev/dev-account.envにコントラクトIDを登録しておくこと
3. near-election-dapp/frontend配下で`yarn dev`と入力する。
4. 下記の様に出力されていればOK! [http://localhost:1234/](http://localhost:1234/)にアクセスできる。

```cmd
  💡 Remove the above plugins from .postcssrc
    📝 Learn more: https://parceljs.org/languages/css/#default-plugins

  ✨ Built in 221ms
```

5. アプリの画面例

<img src="./assets/imgs/vote.png">  

#### テストの方法

1. `cd near-election-dapp/backend`
2. `cargo test`

レスポンスの例

```cmd
    Finished test [unoptimized + debuginfo] target(s) in 6.89s
     Running unittests src/lib.rs (target/debug/deps/electionnftcontract-ad81a31e0a2e96fc)

running 3 tests
test tests::vote_closed_test ... ok
test tests::mint_test ... ok
test tests::transfer_test ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests electionnftcontract

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s
```

#### ビルド＆デプロイの方法

1. `export NFT_CONTRACT_ID=nftcontract.dev-1660204085773-49134722844982`
2. `echo $NFT_CONTRACT_ID`
3. `near login`
4. `set -e && RUSTFLAGS='-C link-arg=-s' cargo build --target wasm32-unknown-unknown --release && near deploy --wasm-file target/wasm32-unknown-unknown/release/electionnftcontract.wasm --accountId $NFT_CONTRACT_ID`

上記4がうまくいかない場合  

4. `cargo build --target wasm32-unknown-unknown --release`
5. `ls ./target/wasm32-unknown-unknown/release | grep electionnftcontract.wasm`

続いてサブアカウントを作成する  

6. `near create-account nftcontract.dev-1660204085773-49134722844982 --masterAccount dev-1660204085773-49134722844982 --initialBalance 50`

サブアカウントを削除する場合

`near delete nftcontract.dev-1660204085773-49134722844982 dev-1660204085773-49134722844982`

スマートコントラクトをデプロイする。

7. `near deploy --wasmFile target/wasm32-unknown-unknown/release/electionnftcontract.wasm --accountId nftcontract.dev-1660204085773-49134722844982`

NFTコントラクトを初期化する。

8. `near call $NFT_CONTRACT_ID new_default_meta '{"owner_id": "'$NFT_CONTRACT_ID'"}' --accountId $NFT_CONTRACT_ID`

```cmd
https://explorer.testnet.near.org/transactions/Fs7nLnN7vzNjybGHQ8DSgVxoPZ5znJ2tCe8FrRJSopqZ
```

```cmd
https://explorer.testnet.near.org/transactions/D3zbD65MgrwtQRi4WcjMx9mwxG2jmi2rPKAbGs63eFpC
```

NFTをミントする。

9. `near call $NFT_CONTRACT_ID nft_mint '{"metadata": {"title": "Vote Ticket", "description": "First Token", "media": "https://gateway.pinata.cloud/ipfs/QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx", "media_CID": "QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx","token_kind": "vote"}, "receiver_id": "'$NFT_CONTRACT_ID'"}' --accountId $NFT_CONTRACT_ID --amount 0.1`

別の種類のNFTを発行する場合  

9. `near call $NFT_CONTRACT_ID nft_mint '{"metadata": {"title": "Tonny(candidate)", "description": "Fifth Token", "media": "https://gateway.pinata.cloud/ipfs/QmTGtuh3c1qaMdiBUnbiF9k2M3Yr4gZn8yixtAQuVvZueW", "media_CID": "QmTGtuh3c1qaMdiBUnbiF9k2M3Yr4gZn8yixtAQuVvZueW", "candidate_name": "Tonny", "candidate_manifest": "Be yourself everyone else is already taken.", "token_kind": "candidate"}, "receiver_id": "'$NFT_CONTRACT_ID'"}' --accountId $NFT_CONTRACT_ID --amount 0.1`

9. `near call $NFT_CONTRACT_ID nft_mint '{"metadata": {"title": "Rob Stark(candidate)", "description": "Forth Token", "media": "https://gateway.pinata.cloud/ipfs/QmQaBSeg58JcWkCxzGhqHiy9SSUugH9MtV8UnZQ3siMRYA", "media_CID": "QmQaBSeg58JcWkCxzGhqHiy9SSUugH9MtV8UnZQ3siMRYA", "candidate_name": "Rob Stark", "candidate_manifest": "In three words I can sum up everything I have learned about life it goes on.", "token_kind": "candidate"}, "receiver_id": "mashharuki.testnet"}' --accountId $NFT_CONTRACT_ID --amount 0.1`

9. `near call $NFT_CONTRACT_ID nft_mint '{"metadata": {"title": "Jenny Lind(candidate)", "description": "Seventh Token", "media": "https://gateway.pinata.cloud/ipfs/QmWUzLowW5ErzoezkpdSVZNF5LFgWTtMhiwfAdZU9LhcgF", "media_CID": "QmWUzLowW5ErzoezkpdSVZNF5LFgWTtMhiwfAdZU9LhcgF", "candidate_name": "Jenny Lind", "candidate_manifest": "Be yourself everyone else is already taken.", "token_kind": "candidate"}, "receiver_id": "mashharuki.testnet"}' --accountId $NFT_CONTRACT_ID --amount 0.1`

発行例  

<img src="./assets/imgs/mint.png">

うまく行けば下記の様に出力される。  

```cmd
Starting deployment. Account id: nftcontract.dev-1660204085773-49134722844982, node: https://rpc.testnet.near.org, helper: https://helper.testnet.near.org, file: target/wasm32-unknown-unknown/release/electionnftcontract.wasm
Transaction Id 84xHxxS8WPPuqqFBvUG3XSxxepejRyU8C1zeaWSZDeu2
To see the transaction in the transaction explorer, please open this url in your browser
https://explorer.testnet.near.org/transactions/84xHxxS8WPPuqqFBvUG3XSxxepejRyU8C1zeaWSZDeu2
Done deploying to nftcontract.dev-1660204085773-49134722844982
```
発行したトークンの情報を確認するコマンド

10. `near view $NFT_CONTRACT_ID nft_tokens`

レスポンス例  
```json
{
    owner_id: 'nftcontract.dev-1660204085773-49134722844982',
    metadata: {
      title: 'Tonny(candidate)',
      description: 'Fifth Token',
      media: 'https://gateway.pinata.cloud/ipfs/QmTGtuh3c1qaMdiBUnbiF9k2M3Yr4gZn8yixtAQuVvZueW',
      media_CID: 'QmTGtuh3c1qaMdiBUnbiF9k2M3Yr4gZn8yixtAQuVvZueW',
      candidate_name: 'Tonny',
      candidate_manifest: 'Be yourself everyone else is already taken.',
      token_kind: 'candidate',
      token_id: 0
    }
  },
  {
    owner_id: 'nftcontract.dev-1660204085773-49134722844982',
    metadata: {
      title: 'Vote Ticket',
      description: 'First Token',
      media: 'https://gateway.pinata.cloud/ipfs/QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx',
      media_CID: 'QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx',
      candidate_name: null,
      candidate_manifest: null,
      token_kind: 'vote',
      token_id: 1
    }
  }
```

別のアドレスに転送させる場合

11. `near call $NFT_CONTRACT_ID nft_transfer '{"receiver_id": "mashharuki2.testnet", "token_id": 1}' --accountId $NFT_CONTRACT_ID --depositYocto 1`

NFTに紐づく投票数を取得する場合

12. `near call $NFT_CONTRACT_ID nft_return_candidate_likes '{"token_id": 0}' --accountId $NFT_CONTRACT_ID`

レスポンス例  
```cmd
0
```

投票を行う場合

13. `near call $NFT_CONTRACT_ID nft_add_likes_to_candidate '{"token_id": 0}' --accountId $NFT_CONTRACT_ID` 

投票期間が終了しているか確認するコマンド

14. `near view $NFT_CONTRACT_ID if_election_closed`

投票期間を終了させる場合のコマンド

15. `near call $NFT_CONTRACT_ID close_election --accountId $NFT_CONTRACT_ID`

投票を再開させる場合のコマンド

16. `near call $NFT_CONTRACT_ID reopen_election --accountId $NFT_CONTRACT_ID`

#### ディレクトリ構成を出力する方法
 `tree -L 2 -F`  

 出力例  
 ```cmd
./
├── backend/
│   ├── Cargo.lock
│   ├── Cargo.toml
│   ├── src/
│   └── target/
└── frontend/
    ├── README.md
    ├── contract/
    ├── frontend/
    ├── integration-tests/
    └── package.json
 ```

### Taliwindのインストールと設定ファイルを生成するコマンド
 `npm install -D tailwindcss postcss &&  npx tailwindcss init`  

#### トレイトとは

データ型を分類する仕組みのことです。

#### near SDK  Rust

NEARスマートコントラクトを作成するためのRustライブラリ

### #[payable]の役割

 [payable]は token を授受できるようにするための注釈です。

### pub(crate)の役割

pub(crate)とは、このファイル内だけで使用できる関数であることを示しています。

### env-cmdとは

envコマンドとは、LinuxなどのUNIX系OSで標準的に用いられるコマンドの一つで、システムの環境変数（environment variable）に特定の値を設定した状態で指定されたコマンドを実行するもの

### アカウントIDと秘密鍵の情報からNear Walletのアカウントをインポートする方法

1. 下記URLにアカウントIDと秘密鍵を当てはめてアクセス

##### testnet:

https://wallet.testnet.near.org/auto-import-secret-key#YOUR_ACCOUNT_ID/YOUR_PRIVATE_KEY

###### mainnet:

https://wallet.near.org/auto-import-secret-key#YOUR_ACCOUNT_ID/YOUR_PRIVATE_KEY

### NetlifyへのデプロイURL

https://nearelectiondapp.netlify.app

#### 参考文献
 1. <a href="https://tailwindcss.jp"/>Tailwind</a>
 2. <a href="https://postcss.org/">PostCSS</a>
 3. <a href="https://docs.rs/near-sdk/latest/near_sdk/">near SDK</a>
'''
'''--- near-election-dapp/backend/Cargo.toml ---
[package]
name = "electionnftcontract"
version = "0.1.0"
authors = ["mashharuki"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
near-sdk = "4.0.0"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
codegen-units=1
opt-level = "z"
lto = true
debug = false
panic = "abort"
overflow-checks = true
'''
'''--- near-election-dapp/backend/src/enumeration.rs ---
use crate::*;

#[near_bindgen]
impl Contract {

    // get totalSupply
    pub fn nft_total_supply(&self) -> U128 {
        U128(self.token_metadata_by_id.len() as u128)
    }

    // get metadatas in JSON
    pub fn nft_tokens(&self, from_index: Option<U128>, limit: Option<u64>) -> Vec<JsonToken> {
        let start = u128::from(from_index.unwrap_or(U128(0)));

        self.token_metadata_by_id
            .keys()
            .skip(start as usize)
            .take(limit.unwrap_or(50) as usize)
            .map(|token_id| self.nft_token(token_id.clone()).unwrap())
            .collect()
    }

    // get number of token by owner
    pub fn nft_supply_for_owner(&self, account_id: AccountId) -> U128 {
        // get tokens kind set
        let tokens_for_kind_set = self.tokens_per_owner.get(&account_id);

        if let Some(tokens_for_kind_set) = tokens_for_kind_set {
            U128(tokens_for_kind_set.len() as u128)
        } else {
            U128(0)
        }
    }

    pub fn nft_tokens_for_owner(
        &self,
        account_id: AccountId,
        from_index: Option<U128>,
        limit: Option<u64>,
    ) -> Vec<JsonToken> {
        // get tokens for owner
        let tokens_for_owner_set = self.tokens_per_owner.get(&account_id);

        let tokens = if let Some(tokens_for_owner_set) = tokens_for_owner_set {
            tokens_for_owner_set
        } else {
            return vec![];
        };

        let start = u128::from(from_index.unwrap_or(U128(0)));
        // return
        tokens
            .iter()
            .skip(start as usize)
            .take(limit.unwrap_or(50) as usize)
            .map(|token_id| self.nft_token(token_id.clone()).unwrap())
            .collect()
    }

    // get token info for kind
    pub fn nft_tokens_for_kind(
        &self,
        token_kind: TokenKind,
        from_index: Option<U128>,
        limit: Option<u64>,
    ) -> Vec<JsonToken> {
        // get tokens kind set
        let tokens_for_kind_set = self.tokens_per_kind.get(&token_kind);
        // check 
        let tokens = if let Some(tokens_for_kind_set) = tokens_for_kind_set {
            tokens_for_kind_set
        } else {
            return vec![];
        };

        let start = u128::from(from_index.unwrap_or(U128(0)));
        // return
        tokens
            .iter()
            .skip(start as usize)
            .take(limit.unwrap_or(50) as usize)
            .map(|token_id| self.nft_token(token_id.clone()).unwrap())
            .collect()
    }
}
'''
'''--- near-election-dapp/backend/src/internal.rs ---
use crate::*;
use near_sdk::CryptoHash;

// get hash function
pub(crate) fn hash_account_id(account_id: &AccountId) -> CryptoHash {
    let mut hash = CryptoHash::default();
    hash.copy_from_slice(&env::sha256(account_id.as_bytes()));
    hash
}

// refund near function
pub(crate) fn refund_deposit(storage_used: u64) {
    let required_cost = env::storage_byte_cost() * Balance::from(storage_used);
    let attached_deposit = env::attached_deposit();

    assert!(
        required_cost <= attached_deposit,
        "Must attach {} yoctoNear to cover storage",
        required_cost,
    );

    let refund = attached_deposit - required_cost;

    if refund > 1 {
        Promise::new(env::predecessor_account_id()).transfer(refund);
    };
}

// check caller attached one yoctoNEAR 
pub(crate) fn assert_one_yocto() {
    assert_eq!(
        env::attached_deposit(),
        1,
        "Requires attached deposit of exactly 1 yoctoNEAR",
    )
}

impl Contract {

    // add token to owner
    pub(crate) fn internal_add_token_to_owner(
        &mut self,
        account_id: &AccountId,
        token_id: &TokenId,
    ){
        let mut tokens_set = self.tokens_per_owner.get(account_id).unwrap_or_else(|| {
            UnorderedSet::new(
                StorageKey::TokensPerOwnerInner {
                    account_id_hash: hash_account_id(&account_id),
                }
                .try_to_vec()
                .unwrap()
            )
        });
        // insert token id
        &tokens_set.insert(token_id);
        // insert tokens
        self.tokens_per_owner.insert(account_id, &tokens_set);
    }

    // add token to kind map
    pub(crate) fn internal_add_token_to_kind_map(
        &mut self,
        token_id: &TokenId,
        token_kind: TokenKind,
    ){
        // get token kind
        let token_kind_clone = token_kind.clone();

        let mut tokens_set = self
            .tokens_per_kind
            .get(&token_kind_clone)
            .unwrap_or_else(|| {
                UnorderedSet::new(
                    StorageKey::TokensPerKindInner {
                        token_kind: token_kind,
                    }
                    .try_to_vec()
                    .unwrap(),
                )
            });
        // insert 
        tokens_set.insert(&token_id);
        self.tokens_per_kind.insert(&token_kind_clone, &tokens_set);
    }

    // remove function
    pub(crate) fn internal_remove_token_from_owner(
        &mut self,
        account_id: &AccountId,
        token_id: &TokenId,
    ){
        // get token set info
        let mut tokens_set = self
            .tokens_per_owner
            .get(account_id)
            .expect("Token should be owned by the sender");

        //  remove
        tokens_set.remove(token_id);

        // check token_set
        if tokens_set.is_empty() {
            self.tokens_per_owner.remove(account_id);
        } else {
            self.tokens_per_owner.insert(account_id, &tokens_set);
        }
    }

    // transfer method
    pub(crate) fn internal_transfer(
        &mut self,
        sender_id: &AccountId,
        receiver_id: &AccountId,
        token_id: &TokenId,
    ) -> TokenOwner {
        // get token info
        let token = self.tokens_by_id.get(token_id).expect("No token");
        // check sender ID & owner ID
        if sender_id != &token.owner_id {
            env::panic_str("Unauthorized");
        }

        assert_ne!(
            &token.owner_id, receiver_id,
            "The token owner and the receiver should be different"
        );

        // remove nft from owner
        self.internal_remove_token_from_owner(&token.owner_id, token_id);
        // add nft to receiver ID 
        self.internal_add_token_to_owner(receiver_id, token_id);

        // renew token info
        let new_token = TokenOwner {
            owner_id: receiver_id.clone(),
        };
        // insert
        self.tokens_by_id.insert(token_id, &new_token);
        token
    }
}
'''
'''--- near-election-dapp/backend/src/lib.rs ---
/**
 * ============================================================
 * SmartContract
 * ============================================================
 */

use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LazyOption, LookupMap, UnorderedMap, UnorderedSet};
use near_sdk::json_types::U128;
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{env, near_bindgen, AccountId, Balance, CryptoHash, PanicOnDefault, Promise};
// import other rs
mod vote;
mod enumeration;
mod internal;
mod metadata;
mod mint;
mod nft_core;

pub use crate::enumeration::*;
use crate::internal::*;
pub use crate::metadata::*;
pub use crate::mint::*;
pub use crate::nft_core::*;
pub use vote::*;

// struct data of election Contract
#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault)]
pub struct Contract {
    pub owner_id: AccountId,
    pub tokens_per_owner: LookupMap<AccountId, UnorderedSet<TokenId>>,
    pub tokens_per_kind: LookupMap<TokenKind, UnorderedSet<TokenId>>,
    pub tokens_by_id: LookupMap<TokenId, TokenOwner>,
    pub token_metadata_by_id: UnorderedMap<TokenId, TokenMetadata>,
    pub metadata: LazyOption<NFTContractMetadata>,
    pub token_id_counter: u128,
    pub likes_per_candidate: LookupMap<TokenId, Likes>,
    pub added_voter_list: LookupMap<ReceiverId, TokenId>,
    pub voted_voter_list: LookupMap<ReceiverId, u128>,
    pub is_election_closed: bool,
}

// enum of StorageKey
#[derive(BorshSerialize)]
pub enum StorageKey {
    TokensPerOwner,
    TokensPerKind,
    TokensPerOwnerInner { account_id_hash: CryptoHash },
    TokensPerKindInner { token_kind: TokenKind },
    TokensById,
    TokenMetadataById,
    TokensPerTypeInner { token_type_hash: CryptoHash },
    NFTContractMetadata,
    LikesPerCandidate,
    AddedVoterList,
    VotedVoterList,
}

#[near_bindgen]
impl Contract {

    // function for initialization
    #[init]
    pub fn new(owner_id: AccountId, metadata: NFTContractMetadata) -> Self {
        let this = Self {
            owner_id,
            tokens_per_owner: LookupMap::new(StorageKey::TokensPerOwner.try_to_vec().unwrap()),
            tokens_per_kind: LookupMap::new(StorageKey::TokensPerKind.try_to_vec().unwrap()),
            tokens_by_id: LookupMap::new(StorageKey::TokensById.try_to_vec().unwrap()),
            token_metadata_by_id: UnorderedMap::new(StorageKey::TokenMetadataById.try_to_vec().unwrap(),),
            metadata: LazyOption::new(
                StorageKey::NFTContractMetadata.try_to_vec().unwrap(),
                Some(&metadata),
            ),
            token_id_counter: 0,
            likes_per_candidate: LookupMap::new(
                StorageKey::LikesPerCandidate.try_to_vec().unwrap(),
            ),
            added_voter_list: LookupMap::new(StorageKey::AddedVoterList.try_to_vec().unwrap()),
            voted_voter_list: LookupMap::new(StorageKey::VotedVoterList.try_to_vec().unwrap()),
            is_election_closed: false,
        };
        // return
        this
    }

    // initialization function
    #[init]
    pub fn new_default_meta(owner_id: AccountId) -> Self {
        Self::new(
            owner_id,
            NFTContractMetadata {
                spec: "nft-1.0.0".to_string(),
                name: "Near Vote Contact".to_string(),
                reference: "This contract is design for fair election!".to_string(),
            },
        )
    }
}

/**
 * ============================================================
 * test code
 * ============================================================
 */
#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use std::collections::HashMap;
    use super::*;

    const MINT_STORAGE_COST: u128 = 100000000000000000000000;

    /**
     * create virtual Blockchain for test
     */
    fn get_context(predecessor_account_id: AccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id);
        // return
        builder
    }

    /**
     * nft mint test
     */
    #[test]
    fn mint_test() {
        // create virtual env
        let mut context = get_context(accounts(1));
        testing_env!(context.build());
        // create Contract
        let mut contract = Contract::new_default_meta(accounts(1).into());

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(MINT_STORAGE_COST)
            .predecessor_account_id(accounts(1))
            .build()
        );

        // check ID
        assert_eq!(contract.owner_id, accounts(1));
        // mint 
        contract.nft_mint(
            TokenMetadata {
                title: None,
                description: None,
                media: "https...".to_string(),
                media_CID: "Qeo....".to_string(),
                candidate_name: None,
                candidate_manifest: None,
                token_kind: "candidate".to_string(),
                token_id: None,
            },
            accounts(1),
        );

        // check 
        assert_eq!(u128::from(contract.nft_total_supply()), 1);
        // get nft info
        let nft_info = contract.nft_tokens(None, None);
        // check nft infos
        assert_eq!(nft_info[0].metadata.media, "https...".to_string());
        assert_eq!(u128::from(contract.nft_supply_for_owner(accounts(1))), 1);
        assert_eq!(
            nft_info[0].owner_id,
            contract.nft_tokens_for_owner(accounts(1), None, None)[0].owner_id
        );
        assert_eq!(
            nft_info[0].owner_id,
            contract.nft_tokens_for_kind("candidate".to_string(), None, None)[0].owner_id
        );
    }

    /**
     * vote test
     */
    #[test]
    fn vote_closed_test() {
        let mut context = get_context(accounts(1));
        testing_env!(context.build());
        // deploy contract
        let mut contract = Contract::new_default_meta(accounts(1).into());

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(MINT_STORAGE_COST)
            .predecessor_account_id(accounts(1))
            .build()
        );

        // check
        assert_eq!(contract.is_election_closed, false);
        // close election
        contract.close_election();
        // check
        assert_eq!(contract.is_election_closed, true);
        // reopen election
        contract.reopen_election();
        assert_eq!(contract.is_election_closed, false);
    }

    /**
     * transfer test
     */
    #[test]
    fn transfer_test() {
        let mut context = get_context(accounts(1));
        testing_env!(context.build());
        // deploy contract
        let mut contract = Contract::new_default_meta(accounts(1).into());

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(MINT_STORAGE_COST)
            .predecessor_account_id(accounts(1))
            .build()
        );

        // mint
        contract.nft_mint(
            TokenMetadata {
                title: None,
                description: None,
                media: "https....".to_string(),
                media_CID: "Qeo....".to_string(),
                candidate_name: None,
                candidate_manifest: None,
                token_kind: "candidate".to_string(),
                token_id: None,
            },
            accounts(1),
        );

        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(1)
            .predecessor_account_id(accounts(1))
            .build()
        );

        // transfer nft
        contract.nft_transfer(accounts(2), 0);
        // get nft info
        let nft_info = contract.nft_tokens(None, None);
        // check
        assert_eq!(nft_info[0].owner_id, accounts(2));
    }
}
'''
'''--- near-election-dapp/backend/src/metadata.rs ---
use crate::*;
pub type TokenId = u128;
pub type CandidateName = String;
pub type TokenKind = String;
pub type HasVoted = bool;
pub type ReceiverId = AccountId;
pub type Likes = f32;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, Clone)]
#[serde(crate = "near_sdk::serde")]

// metadata of contract
pub struct NFTContractMetadata {
    pub spec: String,
    pub name: String,
    pub reference: String,
}

// metadata of contract
#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct TokenMetadata {
    pub title: Option<String>,
    pub description: Option<String>,
    pub media: String,
    pub media_CID: String,
    pub candidate_name: Option<String>,
    pub candidate_manifest: Option<String>,
    pub token_kind: String,
    pub token_id: Option<u128>,
}

// struct of tokenOwner ID
#[derive(BorshDeserialize, BorshSerialize)]
pub struct TokenOwner {
    pub owner_id: AccountId,
}

// metadata of type of Json (Account ID & token metadata)
#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct JsonToken {
    pub owner_id: AccountId,
    pub metadata: TokenMetadata,
}

// trait of NFTTokenMetadata
pub trait NFTTokenMetadata {
    fn nft_metadata(&self) -> NFTContractMetadata;
}

// impl of NFTTokenMetadata
#[near_bindgen]
impl NFTTokenMetadata for Contract {
    // get contract info function
    fn nft_metadata(&self) -> NFTContractMetadata {
        self.metadata.get().unwrap()
    }
}
'''
'''--- near-election-dapp/backend/src/mint.rs ---
use crate::*;

#[near_bindgen]
impl Contract {
    #[payable]

    // mint token
    pub fn nft_mint(&mut self, mut metadata: TokenMetadata, receiver_id: AccountId) {
        // set token id
        assert!(
            !(&self.is_election_closed),
            "You can add candidate or voter because this election has been closed!"
        );
        // get token id
        metadata.token_id = Some(self.token_id_counter);
        // get data
        let initial_storage_usage = env::storage_usage();
        let receiver_id_clone = receiver_id.clone();
        let token = TokenOwner { owner_id: receiver_id};
        let token_id = self.token_id_counter;
        let token_kind = metadata.token_kind.clone();

        assert!(
            self.tokens_by_id.insert(&self.token_id_counter, &token).is_none(),
            "Token already exists"
        );

        // add info to map 
        self.token_metadata_by_id.insert(&self.token_id_counter, &metadata);
        self.internal_add_token_to_owner(&token.owner_id, &token_id);
        self.internal_add_token_to_kind_map(&token_id, token_kind);
        self.likes_per_candidate.insert(&self.token_id_counter, &(0 as Likes));
        self.added_voter_list.insert(&receiver_id_clone, &self.token_id_counter);
        // increment token id
        self.token_id_count();
        let required_storage_in_bytes = env::storage_usage() - &initial_storage_usage;

        // refund unused payment deposit
        refund_deposit(required_storage_in_bytes);
    }

    // increment method
    pub fn token_id_count(&mut self) {
        self.token_id_counter = self.token_id_counter + 1;
    }

    // get next token id
    pub fn show_token_id_counter(&self) {
        self.token_id_counter;
    }
}
'''
'''--- near-election-dapp/backend/src/nft_core.rs ---
use crate::*;

// trait of NonFungibleTokenCore
pub trait NonFungibleTokenCore {
    // get nft info
    fn nft_token(&self, token_id: TokenId) -> Option<JsonToken>;
    // transfer
    fn nft_transfer(&mut self, receiver_id: AccountId, token_id: TokenId,);
    // add likes
    fn nft_add_likes_to_candidate(&mut self, token_id: TokenId);
}

#[near_bindgen]
impl NonFungibleTokenCore for Contract {
    // get token info
    fn nft_token(&self, token_id: TokenId) -> Option<JsonToken> {

        if let Some(token) = self.tokens_by_id.get(&token_id) {
            // get metadata
            let metadata = self.token_metadata_by_id.get(&token_id).unwrap();
            // return
            Some(JsonToken {
                owner_id: token.owner_id,
                metadata,
            })
        } else {
            None
        }
    }

    // transfer function
    #[payable]
    fn nft_transfer(&mut self, receiver_id: AccountId, token_id: TokenId,) {
        assert!(
            !(&self.is_election_closed),
            "You can no longer vote because it's been closed!"
        );

        assert_one_yocto();
        // get sender ID
        let sender_id = env::predecessor_account_id();
        // transfer
        self.internal_transfer(&sender_id, &receiver_id, &token_id);
    }

    // add likes function
    fn nft_add_likes_to_candidate(&mut self, token_id: TokenId) {
        if self.likes_per_candidate.get(&token_id).is_some() {
            // like
            let mut likes = self.likes_per_candidate.get(&token_id);
            // replace
            likes.replace(likes.unwrap() + 1 as Likes);
            // add like (insert)
            self.likes_per_candidate.insert(&token_id, &likes.unwrap());
        }
    }
}
'''
'''--- near-election-dapp/backend/src/vote.rs ---
use crate::*;

#[near_bindgen]
impl Contract {
    // check if election is closed
    pub fn if_election_closed(&self) -> bool {
        self.is_election_closed
    }

    // close election
    pub fn close_election(&mut self) {
        self.is_election_closed = true;
    }

    // reopen election
    pub fn reopen_election(&mut self) {
        self.is_election_closed = false;
    }

    // get number of likes of specified candidate
    pub fn nft_return_candidate_likes(&self, token_id: TokenId) -> Likes {
        if self.tokens_by_id.get(&token_id).is_some() {
            // get likes
            self.likes_per_candidate.get(&token_id).unwrap()
        } else {
            0 as Likes
        }
    }

    // execute vote
    pub fn voter_voted(&mut self, voter_id: AccountId) {
        self.voted_voter_list.insert(&voter_id, &(0 as u128));
    }

    // check if voter id is in added-list
    pub fn check_voter_has_been_added(&self, voter_id: AccountId) -> TokenId {
        if self.added_voter_list.get(&voter_id).is_some() {
            return self.added_voter_list.get(&voter_id).unwrap();
        } else {
            0
        }
    }

    // check if voter ID is in voted-list
    pub fn check_voter_has_voted(&self, voter_id: AccountId) -> bool {
        if self.voted_voter_list.get(&voter_id).is_some() {
            return true;
        } else {
            false
        }
    }
}
'''
'''--- near-election-dapp/backend/target/.rustc_info.json ---
{"rustc_fingerprint":14851295203915766237,"outputs":{"15697416045686424142":{"success":true,"status":"","code":0,"stdout":"___\nlib___.rlib\nlib___.dylib\nlib___.dylib\nlib___.a\nlib___.dylib\n","stderr":""},"3946321787637119318":{"success":true,"status":"","code":0,"stdout":"___.wasm\nlib___.rlib\n___.wasm\nlib___.a\n/Users/harukikondo/.rustup/toolchains/stable-x86_64-apple-darwin\ndebug_assertions\npanic=\"abort\"\nproc_macro\ntarget_arch=\"wasm32\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_family=\"wasm\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_os=\"unknown\"\ntarget_pointer_width=\"32\"\ntarget_vendor=\"unknown\"\n","stderr":"warning: dropping unsupported crate type `dylib` for target `wasm32-unknown-unknown`\n\nwarning: dropping unsupported crate type `proc-macro` for target `wasm32-unknown-unknown`\n\nwarning: 2 warnings emitted\n\n"},"11308901369924159398":{"success":true,"status":"","code":0,"stdout":"___.wasm\nlib___.rlib\n___.wasm\nlib___.a\n/Users/harukikondo/.rustup/toolchains/stable-x86_64-apple-darwin\ndebug_assertions\npanic=\"abort\"\nproc_macro\ntarget_arch=\"wasm32\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_family=\"wasm\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_os=\"unknown\"\ntarget_pointer_width=\"32\"\ntarget_vendor=\"unknown\"\n","stderr":"warning: dropping unsupported crate type `dylib` for target `wasm32-unknown-unknown`\n\nwarning: dropping unsupported crate type `proc-macro` for target `wasm32-unknown-unknown`\n\nwarning: 2 warnings emitted\n\n"},"4614504638168534921":{"success":true,"status":"","code":0,"stdout":"rustc 1.62.1 (e092d0b6b 2022-07-16)\nbinary: rustc\ncommit-hash: e092d0b6b43f2de967af0887873151bb1c0b18d3\ncommit-date: 2022-07-16\nhost: x86_64-apple-darwin\nrelease: 1.62.1\nLLVM version: 14.0.5\n","stderr":""},"975368113927230398":{"success":false,"status":"exit status: 1","code":1,"stdout":"","stderr":"error: `-Csplit-debuginfo` is unstable on this platform\n\n"},"3041318571841102788":{"success":false,"status":"exit status: 1","code":1,"stdout":"","stderr":"error: `-Csplit-debuginfo` is unstable on this platform\n\n"},"10376369925670944939":{"success":true,"status":"","code":0,"stdout":"___\nlib___.rlib\nlib___.dylib\nlib___.dylib\nlib___.a\nlib___.dylib\n/Users/harukikondo/.rustup/toolchains/stable-x86_64-apple-darwin\ndebug_assertions\npanic=\"unwind\"\nproc_macro\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_family=\"unix\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"sse\"\ntarget_feature=\"sse2\"\ntarget_feature=\"sse3\"\ntarget_feature=\"ssse3\"\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_os=\"macos\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"apple\"\nunix\n","stderr":""}},"successes":{}}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/Inflector-ee02651c6f7bcfa9/lib-inflector.json ---
{"rustc":1963664527410474588,"features":"[]","target":15157828903313475237,"profile":8344124108420085910,"path":5458099275740815010,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/Inflector-ee02651c6f7bcfa9/dep-lib-inflector"}}],"rustflags":[],"metadata":6849597462678386541,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ahash-14c5d5a7675256c7/lib-ahash.json ---
{"rustc":1963664527410474588,"features":"[]","target":17564961922320999190,"profile":8344124108420085910,"path":11592655100402160533,"deps":[[6564554279330852038,"build_script_build",false,12966216455110243621],[13220248725062288935,"once_cell",false,4115908229835501447],[13417499805903997058,"getrandom",false,6749951268054797265]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ahash-14c5d5a7675256c7/dep-lib-ahash"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ahash-337a56dc42b6e580/lib-ahash.json ---
{"rustc":1963664527410474588,"features":"[]","target":17564961922320999190,"profile":8987646332441898785,"path":11592655100402160533,"deps":[[6564554279330852038,"build_script_build",false,12966216455110243621],[13220248725062288935,"once_cell",false,6376011506435932609],[13417499805903997058,"getrandom",false,8297525639777392082]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ahash-337a56dc42b6e580/dep-lib-ahash"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ahash-acb17f1a4928bc2d/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":13294766831966498538,"profile":8344124108420085910,"path":14318470125251974140,"deps":[[16079472387499994964,"version_check",false,1851112722947858316]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ahash-acb17f1a4928bc2d/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ahash-dfca55b834093316/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[6564554279330852038,"build_script_build",false,13346542989792739920]],"local":[{"RerunIfChanged":{"output":"debug/build/ahash-dfca55b834093316/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayref-4dc097dfb0b7bc98/lib-arrayref.json ---
{"rustc":1963664527410474588,"features":"[]","target":15391159540545039354,"profile":8344124108420085910,"path":6384381820534781842,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayref-4dc097dfb0b7bc98/dep-lib-arrayref"}}],"rustflags":[],"metadata":5065701478231546975,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayref-ec8d3723d9f84c6c/lib-arrayref.json ---
{"rustc":1963664527410474588,"features":"[]","target":15391159540545039354,"profile":8987646332441898785,"path":6384381820534781842,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayref-ec8d3723d9f84c6c/dep-lib-arrayref"}}],"rustflags":[],"metadata":5065701478231546975,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayvec-1f1c29fe2474bab0/lib-arrayvec.json ---
{"rustc":1963664527410474588,"features":"[]","target":15141271784968785197,"profile":8987646332441898785,"path":17377580148716190879,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayvec-1f1c29fe2474bab0/dep-lib-arrayvec"}}],"rustflags":[],"metadata":5019420986621020735,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayvec-8b60c119bed40a3e/lib-arrayvec.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":15141271784968785197,"profile":8344124108420085910,"path":11680738415809967567,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayvec-8b60c119bed40a3e/dep-lib-arrayvec"}}],"rustflags":[],"metadata":5019420986621020735,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayvec-9f5180d9fbd82ef4/lib-arrayvec.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":15141271784968785197,"profile":8987646332441898785,"path":11680738415809967567,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayvec-9f5180d9fbd82ef4/dep-lib-arrayvec"}}],"rustflags":[],"metadata":5019420986621020735,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/arrayvec-cdcfe64e6c3feccb/lib-arrayvec.json ---
{"rustc":1963664527410474588,"features":"[]","target":15141271784968785197,"profile":8344124108420085910,"path":17377580148716190879,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/arrayvec-cdcfe64e6c3feccb/dep-lib-arrayvec"}}],"rustflags":[],"metadata":5019420986621020735,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/autocfg-fcea4b88ecedf39f/lib-autocfg.json ---
{"rustc":1963664527410474588,"features":"[]","target":10236397793970852656,"profile":8344124108420085910,"path":4988751156446056492,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/autocfg-fcea4b88ecedf39f/dep-lib-autocfg"}}],"rustflags":[],"metadata":13102859075309379048,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/backend-1507b4f2ae2b12fa/test-lib-backend.json ---
{"rustc":1963664527410474588,"features":"[]","target":3574003880488143577,"profile":11506243869495082934,"path":17523903030608720598,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/backend-1507b4f2ae2b12fa/dep-test-lib-backend"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/backend-40d6fa0a13cd7909/lib-backend.json ---
{"rustc":1963664527410474588,"features":"[]","target":6833007353328602943,"profile":17483045194147818835,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,15633310565471830683]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/backend-40d6fa0a13cd7909/dep-lib-backend"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/backend-870aea16eb7ee127/lib-backend.json ---
{"rustc":1963664527410474588,"features":"[]","target":3574003880488143577,"profile":17483045194147818835,"path":17523903030608720598,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/backend-870aea16eb7ee127/dep-lib-backend"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/backend-88c484b97b92feb8/test-lib-backend.json ---
{"rustc":1963664527410474588,"features":"[]","target":6833007353328602943,"profile":11506243869495082934,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,15633310565471830683]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/backend-88c484b97b92feb8/dep-test-lib-backend"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/base64-37218eb761583953/lib-base64.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":8987646332441898785,"path":16008289472946632070,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/base64-37218eb761583953/dep-lib-base64"}}],"rustflags":[],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/base64-ca1684889064ca4a/lib-base64.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":8344124108420085910,"path":539523164973625176,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/base64-ca1684889064ca4a/dep-lib-base64"}}],"rustflags":[],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/base64-d92a41ccbebf8d36/lib-base64.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":8344124108420085910,"path":16008289472946632070,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/base64-d92a41ccbebf8d36/dep-lib-base64"}}],"rustflags":[],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/base64-da7fa9eeb5ed8b4a/lib-base64.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":8987646332441898785,"path":539523164973625176,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/base64-da7fa9eeb5ed8b4a/dep-lib-base64"}}],"rustflags":[],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bitvec-33e12ba849699fdf/lib-bitvec.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"std\"]","target":9451116993631999717,"profile":8344124108420085910,"path":1549095663386942715,"deps":[[188905226975056936,"radium",false,7608827126224934164],[6290779380211241362,"tap",false,6732243640110977911],[7789681275229131466,"wyz",false,5680406696096355726],[15433456967963170366,"funty",false,16193532011566485945]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bitvec-33e12ba849699fdf/dep-lib-bitvec"}}],"rustflags":[],"metadata":6379644401324879731,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bitvec-85d7495a6d61e93b/lib-bitvec.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"std\"]","target":9451116993631999717,"profile":8987646332441898785,"path":1549095663386942715,"deps":[[188905226975056936,"radium",false,14238793090742193239],[6290779380211241362,"tap",false,4061611696379223262],[7789681275229131466,"wyz",false,12438374401508195552],[15433456967963170366,"funty",false,6770460603466084661]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bitvec-85d7495a6d61e93b/dep-lib-bitvec"}}],"rustflags":[],"metadata":6379644401324879731,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/blake2-5bdae726f38791a5/lib-blake2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":6600672063739359410,"profile":8987646332441898785,"path":13952970897380529528,"deps":[[6014497622236959678,"opaque_debug",false,4912809525159391840],[8884615759848737972,"crypto_mac",false,1770418786077321768],[12829070662860118430,"digest",false,5422999821972481952]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/blake2-5bdae726f38791a5/dep-lib-blake2"}}],"rustflags":[],"metadata":2523818277111752649,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/blake2-86b3c2778c356e5d/lib-blake2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":6600672063739359410,"profile":8344124108420085910,"path":13952970897380529528,"deps":[[6014497622236959678,"opaque_debug",false,9395905032480532833],[8884615759848737972,"crypto_mac",false,4856520564351619290],[12829070662860118430,"digest",false,10218998247402525131]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/blake2-86b3c2778c356e5d/dep-lib-blake2"}}],"rustflags":[],"metadata":2523818277111752649,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/block-buffer-3f06b35f4692a4e2/lib-block-buffer.json ---
{"rustc":1963664527410474588,"features":"[]","target":597966434043285633,"profile":8987646332441898785,"path":4025657485900815131,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/block-buffer-3f06b35f4692a4e2/dep-lib-block-buffer"}}],"rustflags":[],"metadata":5573904726092117450,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/block-buffer-4e6f48f5858f69fa/lib-block-buffer.json ---
{"rustc":1963664527410474588,"features":"[]","target":597966434043285633,"profile":8987646332441898785,"path":7467293101617997022,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/block-buffer-4e6f48f5858f69fa/dep-lib-block-buffer"}}],"rustflags":[],"metadata":15558279325495868285,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/block-buffer-7a57807b0ffb8b4f/lib-block-buffer.json ---
{"rustc":1963664527410474588,"features":"[]","target":597966434043285633,"profile":8344124108420085910,"path":4025657485900815131,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/block-buffer-7a57807b0ffb8b4f/dep-lib-block-buffer"}}],"rustflags":[],"metadata":5573904726092117450,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/block-buffer-d5adaa9f3c7d92ad/lib-block-buffer.json ---
{"rustc":1963664527410474588,"features":"[]","target":597966434043285633,"profile":8344124108420085910,"path":7467293101617997022,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/block-buffer-d5adaa9f3c7d92ad/dep-lib-block-buffer"}}],"rustflags":[],"metadata":15558279325495868285,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/borsh-4c72ce19c5f0842c/lib-borsh.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"rc\", \"std\"]","target":3730488758921852561,"profile":8344124108420085910,"path":3892413332493176036,"deps":[[1759060122986695407,"borsh_derive",false,16096140359278943741],[16284710795702459458,"hashbrown",false,2537459665319219723]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/borsh-4c72ce19c5f0842c/dep-lib-borsh"}}],"rustflags":[],"metadata":7032358266178414993,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/borsh-4eb9693c5b26de6e/lib-borsh.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"rc\", \"std\"]","target":3730488758921852561,"profile":8987646332441898785,"path":3892413332493176036,"deps":[[1759060122986695407,"borsh_derive",false,16096140359278943741],[16284710795702459458,"hashbrown",false,9662428313697234150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/borsh-4eb9693c5b26de6e/dep-lib-borsh"}}],"rustflags":[],"metadata":7032358266178414993,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/borsh-derive-01a505a64569e80b/lib-borsh-derive.json ---
{"rustc":1963664527410474588,"features":"[]","target":4089840889381527766,"profile":8344124108420085910,"path":18349131639082781260,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[2345288959107110519,"borsh_schema_derive_internal",false,13918584014438587212],[3971538142687143787,"proc_macro_crate",false,8781790143229347095],[4114176108478934945,"syn",false,10549874276280742374],[8324001644593655249,"borsh_derive_internal",false,854869240162954885]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/borsh-derive-01a505a64569e80b/dep-lib-borsh-derive"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/borsh-derive-internal-127779fd8e899902/lib-borsh-derive-internal.json ---
{"rustc":1963664527410474588,"features":"[]","target":1036412639898795334,"profile":8344124108420085910,"path":10808473181343775823,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/borsh-derive-internal-127779fd8e899902/dep-lib-borsh-derive-internal"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/borsh-schema-derive-internal-b95a1a154cf74b81/lib-borsh-schema-derive-internal.json ---
{"rustc":1963664527410474588,"features":"[]","target":5421563452239655410,"profile":8344124108420085910,"path":13449352232304404824,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/borsh-schema-derive-internal-b95a1a154cf74b81/dep-lib-borsh-schema-derive-internal"}}],"rustflags":[],"metadata":7685215035480038221,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bs58-a4bdb5d5fd3a91fa/lib-bs58.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\"]","target":4860711247261189145,"profile":8344124108420085910,"path":10538786071282415694,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bs58-a4bdb5d5fd3a91fa/dep-lib-bs58"}}],"rustflags":[],"metadata":13637435404263704389,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bs58-f6f6a7056adfa67c/lib-bs58.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\"]","target":4860711247261189145,"profile":8987646332441898785,"path":10538786071282415694,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bs58-f6f6a7056adfa67c/dep-lib-bs58"}}],"rustflags":[],"metadata":13637435404263704389,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/byte-slice-cast-297676685d38ff3e/lib-byte-slice-cast.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":8099756555744063610,"profile":8987646332441898785,"path":8428324426816428949,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/byte-slice-cast-297676685d38ff3e/dep-lib-byte-slice-cast"}}],"rustflags":[],"metadata":4028636240650239297,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/byte-slice-cast-34e9b46690f8be01/lib-byte-slice-cast.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":8099756555744063610,"profile":8344124108420085910,"path":8428324426816428949,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/byte-slice-cast-34e9b46690f8be01/dep-lib-byte-slice-cast"}}],"rustflags":[],"metadata":4028636240650239297,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/byteorder-389b08afd5556a33/lib-byteorder.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"i128\", \"std\"]","target":6049797839447724599,"profile":8987646332441898785,"path":9498776452000354951,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/byteorder-389b08afd5556a33/dep-lib-byteorder"}}],"rustflags":[],"metadata":5398730104718078656,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/byteorder-450fd0ab6cf63ef9/lib-byteorder.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"i128\", \"std\"]","target":6049797839447724599,"profile":8344124108420085910,"path":9498776452000354951,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/byteorder-450fd0ab6cf63ef9/dep-lib-byteorder"}}],"rustflags":[],"metadata":5398730104718078656,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bytesize-45de9a5b98527cd0/lib-bytesize.json ---
{"rustc":1963664527410474588,"features":"[]","target":2954930511021687035,"profile":8987646332441898785,"path":3924777761397810789,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bytesize-45de9a5b98527cd0/dep-lib-bytesize"}}],"rustflags":[],"metadata":12146819253632092093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/bytesize-fab590761bd521db/lib-bytesize.json ---
{"rustc":1963664527410474588,"features":"[]","target":2954930511021687035,"profile":8344124108420085910,"path":3924777761397810789,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/bytesize-fab590761bd521db/dep-lib-bytesize"}}],"rustflags":[],"metadata":12146819253632092093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/c2-chacha-5a85717a27f1c0d9/lib-c2-chacha.json ---
{"rustc":1963664527410474588,"features":"[\"cipher\", \"default\", \"rustcrypto_api\", \"std\"]","target":9358697090589382005,"profile":8987646332441898785,"path":7123756048700805200,"deps":[[6749292461404294239,"ppv_lite86",false,7644550718745915478],[7120793223608721021,"cipher",false,6600184245801658326]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/c2-chacha-5a85717a27f1c0d9/dep-lib-c2-chacha"}}],"rustflags":[],"metadata":12544136120782019599,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/c2-chacha-8678bdc35df475cb/lib-c2-chacha.json ---
{"rustc":1963664527410474588,"features":"[\"cipher\", \"default\", \"rustcrypto_api\", \"std\"]","target":9358697090589382005,"profile":8344124108420085910,"path":7123756048700805200,"deps":[[6749292461404294239,"ppv_lite86",false,15121598850875826056],[7120793223608721021,"cipher",false,9574198101554540367]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/c2-chacha-8678bdc35df475cb/dep-lib-c2-chacha"}}],"rustflags":[],"metadata":12544136120782019599,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cc-7d370d7d91f4fdcd/lib-cc.json ---
{"rustc":1963664527410474588,"features":"[]","target":2793076990717341772,"profile":8344124108420085910,"path":8530642623832052744,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cc-7d370d7d91f4fdcd/dep-lib-cc"}}],"rustflags":[],"metadata":16504835547841594983,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cfg-if-2416aea0125680e1/lib-cfg-if.json ---
{"rustc":1963664527410474588,"features":"[]","target":10094334937643343087,"profile":8344124108420085910,"path":13461851032644167826,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cfg-if-2416aea0125680e1/dep-lib-cfg-if"}}],"rustflags":[],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cfg-if-6158d710ee6747d0/lib-cfg-if.json ---
{"rustc":1963664527410474588,"features":"[]","target":10094334937643343087,"profile":8987646332441898785,"path":5391915551132702504,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cfg-if-6158d710ee6747d0/dep-lib-cfg-if"}}],"rustflags":[],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cfg-if-c8d8c026676dba17/lib-cfg-if.json ---
{"rustc":1963664527410474588,"features":"[]","target":10094334937643343087,"profile":8987646332441898785,"path":13461851032644167826,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cfg-if-c8d8c026676dba17/dep-lib-cfg-if"}}],"rustflags":[],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cfg-if-e6fce2b47f1e3a40/lib-cfg-if.json ---
{"rustc":1963664527410474588,"features":"[]","target":10094334937643343087,"profile":8344124108420085910,"path":5391915551132702504,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cfg-if-e6fce2b47f1e3a40/dep-lib-cfg-if"}}],"rustflags":[],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/chrono-8e6be57b93ff2938/lib-chrono.json ---
{"rustc":1963664527410474588,"features":"[\"clock\", \"default\", \"iana-time-zone\", \"js-sys\", \"oldtime\", \"serde\", \"std\", \"time\", \"wasm-bindgen\", \"wasmbind\", \"winapi\"]","target":3044988456830924338,"profile":8344124108420085910,"path":15506587513996244027,"deps":[[1494750142361447113,"num_integer",false,6309687047904166703],[8121635694596382552,"num_traits",false,17540752380004346253],[12164459310168382347,"iana_time_zone",false,17443664986560251196],[13938308772454855807,"time",false,9883489725809948077],[14036285059816747405,"serde",false,2709950972696055150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/chrono-8e6be57b93ff2938/dep-lib-chrono"}}],"rustflags":[],"metadata":9803565982372010724,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/chrono-f1fba40f691abe08/lib-chrono.json ---
{"rustc":1963664527410474588,"features":"[\"clock\", \"default\", \"iana-time-zone\", \"js-sys\", \"oldtime\", \"serde\", \"std\", \"time\", \"wasm-bindgen\", \"wasmbind\", \"winapi\"]","target":3044988456830924338,"profile":8987646332441898785,"path":15506587513996244027,"deps":[[1494750142361447113,"num_integer",false,8530135161016749593],[8121635694596382552,"num_traits",false,15079758690088052523],[12164459310168382347,"iana_time_zone",false,2024550802143994305],[13938308772454855807,"time",false,2288925448242638943],[14036285059816747405,"serde",false,11884406638781610086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/chrono-f1fba40f691abe08/dep-lib-chrono"}}],"rustflags":[],"metadata":9803565982372010724,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cipher-8b0a81f6884a7e0d/lib-cipher.json ---
{"rustc":1963664527410474588,"features":"[]","target":14172200846391977974,"profile":8987646332441898785,"path":13692657586718965527,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cipher-8b0a81f6884a7e0d/dep-lib-cipher"}}],"rustflags":[],"metadata":8273356103737446388,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cipher-d16f5ecdd92e4c45/lib-cipher.json ---
{"rustc":1963664527410474588,"features":"[]","target":14172200846391977974,"profile":8344124108420085910,"path":13692657586718965527,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cipher-d16f5ecdd92e4c45/dep-lib-cipher"}}],"rustflags":[],"metadata":8273356103737446388,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/convert_case-8cf5df44c07ff0f9/lib-convert_case.json ---
{"rustc":1963664527410474588,"features":"[]","target":512746362525501667,"profile":8344124108420085910,"path":8931824961799346641,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/convert_case-8cf5df44c07ff0f9/dep-lib-convert_case"}}],"rustflags":[],"metadata":8130279976740482636,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/core-foundation-sys-948a0ba3cb59b3e8/lib-core-foundation-sys.json ---
{"rustc":1963664527410474588,"features":"[]","target":13751265650658462097,"profile":8987646332441898785,"path":9563346094653014683,"deps":[[7819976386783620690,"build_script_build",false,11484239491585838387]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/core-foundation-sys-948a0ba3cb59b3e8/dep-lib-core-foundation-sys"}}],"rustflags":[],"metadata":7246173313922784557,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/core-foundation-sys-9ba72a6ae171dd19/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[7819976386783620690,"build_script_build",false,1521427941191440879]],"local":[{"Precalculated":"0.8.3"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/core-foundation-sys-b6004186fe7b56f7/lib-core-foundation-sys.json ---
{"rustc":1963664527410474588,"features":"[]","target":13751265650658462097,"profile":8344124108420085910,"path":9563346094653014683,"deps":[[7819976386783620690,"build_script_build",false,11484239491585838387]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/core-foundation-sys-b6004186fe7b56f7/dep-lib-core-foundation-sys"}}],"rustflags":[],"metadata":7246173313922784557,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/core-foundation-sys-dbd7668eb10d1727/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":2709041430195671023,"profile":8344124108420085910,"path":8150262585486547367,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/core-foundation-sys-dbd7668eb10d1727/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":7246173313922784557,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cpufeatures-40a5d1de464d9053/lib-cpufeatures.json ---
{"rustc":1963664527410474588,"features":"[]","target":17099120278032617052,"profile":8344124108420085910,"path":4088515382867534994,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cpufeatures-40a5d1de464d9053/dep-lib-cpufeatures"}}],"rustflags":[],"metadata":5592991748584184974,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/cpufeatures-acdaa2329fa961f9/lib-cpufeatures.json ---
{"rustc":1963664527410474588,"features":"[]","target":17099120278032617052,"profile":8987646332441898785,"path":4088515382867534994,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/cpufeatures-acdaa2329fa961f9/dep-lib-cpufeatures"}}],"rustflags":[],"metadata":5592991748584184974,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crunchy-1cc7255f8217e2bb/lib-crunchy.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":163992892306163484,"profile":8344124108420085910,"path":1072757192451343275,"deps":[[15144909498828475009,"build_script_build",false,4250776798129882017]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crunchy-1cc7255f8217e2bb/dep-lib-crunchy"}}],"rustflags":[],"metadata":5553159513701433177,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crunchy-2d2e62f2736c0a61/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[15144909498828475009,"build_script_build",false,12209161707654752351]],"local":[{"Precalculated":"0.2.2"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crunchy-c28a7f51b940c821/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":17917333106078813427,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crunchy-c28a7f51b940c821/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":5553159513701433177,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crunchy-f384760accc75e58/lib-crunchy.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":163992892306163484,"profile":8987646332441898785,"path":1072757192451343275,"deps":[[15144909498828475009,"build_script_build",false,4250776798129882017]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crunchy-f384760accc75e58/dep-lib-crunchy"}}],"rustflags":[],"metadata":5553159513701433177,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crypto-common-6ee7dee3356ef700/lib-crypto-common.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":3769126754866119548,"profile":8344124108420085910,"path":10831145881404960102,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904],[12624213461245346940,"typenum",false,10914389965899927788]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crypto-common-6ee7dee3356ef700/dep-lib-crypto-common"}}],"rustflags":[],"metadata":3401955368041756111,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crypto-common-880daeb18d1d06ff/lib-crypto-common.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":3769126754866119548,"profile":8987646332441898785,"path":10831145881404960102,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633],[12624213461245346940,"typenum",false,16332519118201820102]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crypto-common-880daeb18d1d06ff/dep-lib-crypto-common"}}],"rustflags":[],"metadata":3401955368041756111,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crypto-mac-548dc895f0add32b/lib-crypto-mac.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":3872397700087225744,"profile":8344124108420085910,"path":3032654309770916432,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904],[14156852935330721123,"subtle",false,15395226951360145700]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crypto-mac-548dc895f0add32b/dep-lib-crypto-mac"}}],"rustflags":[],"metadata":2483852330705237446,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/crypto-mac-acfe73b458e618f5/lib-crypto-mac.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":3872397700087225744,"profile":8987646332441898785,"path":3032654309770916432,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633],[14156852935330721123,"subtle",false,14458882809950132760]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/crypto-mac-acfe73b458e618f5/dep-lib-crypto-mac"}}],"rustflags":[],"metadata":2483852330705237446,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/curve25519-dalek-1ed87151a4dba7e2/lib-curve25519-dalek.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\", \"u64_backend\"]","target":6183403647985093347,"profile":8987646332441898785,"path":17768251311186840251,"deps":[[486069622437963759,"byteorder",false,3780392657360757237],[7879775654530620242,"zeroize",false,17158603870683204153],[11761531122794857361,"rand_core",false,1282892383426239576],[12829070662860118430,"digest",false,5422999821972481952],[14156852935330721123,"subtle",false,14458882809950132760]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/curve25519-dalek-1ed87151a4dba7e2/dep-lib-curve25519-dalek"}}],"rustflags":[],"metadata":4666180542459884904,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/curve25519-dalek-3edb1e98684ee8f9/lib-curve25519-dalek.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\", \"u64_backend\"]","target":6183403647985093347,"profile":8344124108420085910,"path":17768251311186840251,"deps":[[486069622437963759,"byteorder",false,4161840726384657771],[7879775654530620242,"zeroize",false,929985933091162516],[11761531122794857361,"rand_core",false,2436618091486944932],[12829070662860118430,"digest",false,10218998247402525131],[14156852935330721123,"subtle",false,15395226951360145700]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/curve25519-dalek-3edb1e98684ee8f9/dep-lib-curve25519-dalek"}}],"rustflags":[],"metadata":4666180542459884904,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/derive_more-f42bd2af951cc3d6/lib-derive_more.json ---
{"rustc":1963664527410474588,"features":"[\"add\", \"add_assign\", \"as_mut\", \"as_ref\", \"constructor\", \"convert_case\", \"default\", \"deref\", \"deref_mut\", \"display\", \"error\", \"from\", \"from_str\", \"index\", \"index_mut\", \"into\", \"into_iterator\", \"is_variant\", \"iterator\", \"mul\", \"mul_assign\", \"not\", \"rustc_version\", \"sum\", \"try_into\", \"unwrap\"]","target":3862627156692456937,"profile":8344124108420085910,"path":9811899029960075943,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[9614823402458505899,"convert_case",false,8882748022435246186]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/derive_more-f42bd2af951cc3d6/dep-lib-derive_more"}}],"rustflags":[],"metadata":8950704488499756937,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/digest-1f0eed6edef00c4f/lib-digest.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"block-buffer\", \"core-api\", \"default\", \"std\"]","target":5694707155508738902,"profile":8987646332441898785,"path":17180929364516153852,"deps":[[8254631742669811977,"block_buffer",false,2676568904908035714],[15349877456970498084,"crypto_common",false,13882470357770517628]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/digest-1f0eed6edef00c4f/dep-lib-digest"}}],"rustflags":[],"metadata":5974257212182257802,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/digest-534b3559892aad18/lib-digest.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"std\"]","target":5694707155508738902,"profile":8987646332441898785,"path":17322352654125990847,"deps":[[10353982180171461258,"generic_array",false,18316184863094839633]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/digest-534b3559892aad18/dep-lib-digest"}}],"rustflags":[],"metadata":5974257212182257802,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/digest-8c7f48790bbe34c9/lib-digest.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"std\"]","target":5694707155508738902,"profile":8344124108420085910,"path":17322352654125990847,"deps":[[10353982180171461258,"generic_array",false,8089683742406995904]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/digest-8c7f48790bbe34c9/dep-lib-digest"}}],"rustflags":[],"metadata":5974257212182257802,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/digest-ef6d0f7863500a00/lib-digest.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"block-buffer\", \"core-api\", \"default\", \"std\"]","target":5694707155508738902,"profile":8344124108420085910,"path":17180929364516153852,"deps":[[8254631742669811977,"block_buffer",false,15740144426299250654],[15349877456970498084,"crypto_common",false,10323392620100920591]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/digest-ef6d0f7863500a00/dep-lib-digest"}}],"rustflags":[],"metadata":5974257212182257802,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/easy-ext-47eae31476894294/lib-easy-ext.json ---
{"rustc":1963664527410474588,"features":"[]","target":11098757358631353596,"profile":8344124108420085910,"path":11597729934225000149,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/easy-ext-47eae31476894294/dep-lib-easy-ext"}}],"rustflags":[],"metadata":12123150640952772219,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ed25519-ad5fb0c9bcc5b915/lib-ed25519.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":5498877648514003975,"profile":8987646332441898785,"path":12885608609969934337,"deps":[[18136973628361069534,"signature",false,5072521421222369744]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ed25519-ad5fb0c9bcc5b915/dep-lib-ed25519"}}],"rustflags":[],"metadata":10784947986374962029,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ed25519-dalek-37d829b18d83c94c/lib-ed25519-dalek.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"rand\", \"serde_crate\", \"std\", \"u64_backend\"]","target":10081800184315445501,"profile":8987646332441898785,"path":5459752263950756357,"deps":[[288937492735761168,"sha2",false,1560379187294185475],[6730075568351986827,"curve25519_dalek",false,5750001716114000319],[7879775654530620242,"zeroize",false,17158603870683204153],[11395199919085576347,"ed25519",false,15767806652803206373],[14036285059816747405,"serde_crate",false,11884406638781610086],[14778545527639897399,"rand",false,15520741759614395833]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ed25519-dalek-37d829b18d83c94c/dep-lib-ed25519-dalek"}}],"rustflags":[],"metadata":14415899641967170644,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ed25519-dalek-ee09c9638eb04f07/lib-ed25519-dalek.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"rand\", \"serde_crate\", \"std\", \"u64_backend\"]","target":10081800184315445501,"profile":8344124108420085910,"path":5459752263950756357,"deps":[[288937492735761168,"sha2",false,14100346264659509529],[6730075568351986827,"curve25519_dalek",false,14008722841574992134],[7879775654530620242,"zeroize",false,929985933091162516],[11395199919085576347,"ed25519",false,15047626808655339025],[14036285059816747405,"serde_crate",false,2709950972696055150],[14778545527639897399,"rand",false,1043004518082117998]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ed25519-dalek-ee09c9638eb04f07/dep-lib-ed25519-dalek"}}],"rustflags":[],"metadata":14415899641967170644,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ed25519-e61d50b32cd29872/lib-ed25519.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":5498877648514003975,"profile":8344124108420085910,"path":12885608609969934337,"deps":[[18136973628361069534,"signature",false,6385370372519045601]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ed25519-e61d50b32cd29872/dep-lib-ed25519"}}],"rustflags":[],"metadata":10784947986374962029,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/electionnftcontract-32b8250efebaed89/test-lib-electionnftcontract.json ---
{"rustc":1963664527410474588,"features":"[]","target":4673246272486568707,"profile":11506243869495082934,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,15633310565471830683]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/electionnftcontract-32b8250efebaed89/dep-test-lib-electionnftcontract"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/electionnftcontract-ad81a31e0a2e96fc/test-lib-electionnftcontract.json ---
{"rustc":1963664527410474588,"features":"[]","target":4673246272486568707,"profile":4734105543796642768,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,18024542680224298534]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/electionnftcontract-ad81a31e0a2e96fc/dep-test-lib-electionnftcontract"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/electionnftcontract-ae45932d09a36204/lib-electionnftcontract.json ---
{"rustc":1963664527410474588,"features":"[]","target":4673246272486568707,"profile":11736316127369858332,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,18024542680224298534]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/electionnftcontract-ae45932d09a36204/dep-lib-electionnftcontract"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/electionnftcontract-d2676b39bf8c49a0/lib-electionnftcontract.json ---
{"rustc":1963664527410474588,"features":"[]","target":4673246272486568707,"profile":17483045194147818835,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,15633310565471830683]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/electionnftcontract-d2676b39bf8c49a0/dep-lib-electionnftcontract"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/fixed-hash-6273d14687bcec55/lib-fixed-hash.json ---
{"rustc":1963664527410474588,"features":"[\"byteorder\", \"rand\", \"rustc-hex\", \"std\"]","target":4091626369126946064,"profile":8344124108420085910,"path":7589947380938661934,"deps":[[486069622437963759,"byteorder",false,4161840726384657771],[5910892534286594076,"rand",false,4670166791335702282],[6476817338883840430,"static_assertions",false,4683982877238169776],[13370790239003944599,"rustc_hex",false,18032675280696240156]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/fixed-hash-6273d14687bcec55/dep-lib-fixed-hash"}}],"rustflags":[],"metadata":13792661670533051741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/fixed-hash-bc9ec2a3440e6860/lib-fixed-hash.json ---
{"rustc":1963664527410474588,"features":"[\"byteorder\", \"rand\", \"rustc-hex\", \"std\"]","target":4091626369126946064,"profile":8987646332441898785,"path":7589947380938661934,"deps":[[486069622437963759,"byteorder",false,3780392657360757237],[5910892534286594076,"rand",false,646366306028428452],[6476817338883840430,"static_assertions",false,16508089408823633268],[13370790239003944599,"rustc_hex",false,15853198890271379007]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/fixed-hash-bc9ec2a3440e6860/dep-lib-fixed-hash"}}],"rustflags":[],"metadata":13792661670533051741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/funty-2dd8aec206756b4e/lib-funty.json ---
{"rustc":1963664527410474588,"features":"[]","target":572259536965956152,"profile":8987646332441898785,"path":277608820934598803,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/funty-2dd8aec206756b4e/dep-lib-funty"}}],"rustflags":[],"metadata":9237712608396048968,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/funty-abd51f1efad3638a/lib-funty.json ---
{"rustc":1963664527410474588,"features":"[]","target":572259536965956152,"profile":8344124108420085910,"path":277608820934598803,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/funty-abd51f1efad3638a/dep-lib-funty"}}],"rustflags":[],"metadata":9237712608396048968,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/generic-array-072a09f2488df80e/lib-generic_array.json ---
{"rustc":1963664527410474588,"features":"[\"more_lengths\"]","target":3609202219292840517,"profile":8987646332441898785,"path":5146348749988988406,"deps":[[10353982180171461258,"build_script_build",false,9636548541261805160],[12624213461245346940,"typenum",false,16332519118201820102]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/generic-array-072a09f2488df80e/dep-lib-generic_array"}}],"rustflags":[],"metadata":3504643559825856545,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/generic-array-12629f4712ece13d/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"more_lengths\"]","target":2709041430195671023,"profile":8344124108420085910,"path":11953424127862850570,"deps":[[16079472387499994964,"version_check",false,1851112722947858316]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/generic-array-12629f4712ece13d/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3504643559825856545,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/generic-array-61e8cd459a9b6890/lib-generic_array.json ---
{"rustc":1963664527410474588,"features":"[\"more_lengths\"]","target":3609202219292840517,"profile":8344124108420085910,"path":5146348749988988406,"deps":[[10353982180171461258,"build_script_build",false,9636548541261805160],[12624213461245346940,"typenum",false,10914389965899927788]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/generic-array-61e8cd459a9b6890/dep-lib-generic_array"}}],"rustflags":[],"metadata":3504643559825856545,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/generic-array-e4011815d4de4cbe/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[10353982180171461258,"build_script_build",false,648236346224802848]],"local":[{"Precalculated":"0.14.6"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-396046ada52e16f3/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13294766831966498538,"profile":8344124108420085910,"path":11392082062951789351,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/getrandom-396046ada52e16f3/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":12606519392706294666,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-72637bb72157b14a/lib-getrandom.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13546511942750895132,"profile":8344124108420085910,"path":16079732171199511478,"deps":[[332204399579859100,"libc",false,18248499529191157943],[2452538001284770427,"cfg_if",false,16414099455413124918],[6453573393678185459,"build_script_build",false,554545900608573930]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/getrandom-72637bb72157b14a/dep-lib-getrandom"}}],"rustflags":[],"metadata":12606519392706294666,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-77fa44e1cf3186fd/lib-getrandom.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13546511942750895132,"profile":8987646332441898785,"path":16079732171199511478,"deps":[[332204399579859100,"libc",false,12952885578662856223],[2452538001284770427,"cfg_if",false,392999193206417812],[6453573393678185459,"build_script_build",false,554545900608573930]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/getrandom-77fa44e1cf3186fd/dep-lib-getrandom"}}],"rustflags":[],"metadata":12606519392706294666,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-a2abc96717d10157/lib-getrandom.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13546511942750895132,"profile":8987646332441898785,"path":229584751272824886,"deps":[[332204399579859100,"libc",false,12952885578662856223],[2452538001284770427,"cfg_if",false,392999193206417812]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/getrandom-a2abc96717d10157/dep-lib-getrandom"}}],"rustflags":[],"metadata":12606519392706294666,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-e7eb29bf46db398a/lib-getrandom.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13546511942750895132,"profile":8344124108420085910,"path":229584751272824886,"deps":[[332204399579859100,"libc",false,18248499529191157943],[2452538001284770427,"cfg_if",false,16414099455413124918]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/getrandom-e7eb29bf46db398a/dep-lib-getrandom"}}],"rustflags":[],"metadata":12606519392706294666,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/getrandom-e9d44f2e33221c36/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[6453573393678185459,"build_script_build",false,7684760871204719617]],"local":[{"Precalculated":"0.1.16"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/hashbrown-288fa9aeac50fbc3/lib-hashbrown.json ---
{"rustc":1963664527410474588,"features":"[\"ahash\", \"default\", \"inline-more\"]","target":7861740280460442625,"profile":8987646332441898785,"path":5501546530421502182,"deps":[[6564554279330852038,"ahash",false,13947457088594584398]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/hashbrown-288fa9aeac50fbc3/dep-lib-hashbrown"}}],"rustflags":[],"metadata":6228333144549390726,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/hashbrown-29959d66c2001355/lib-hashbrown.json ---
{"rustc":1963664527410474588,"features":"[\"ahash\", \"default\", \"inline-more\"]","target":7861740280460442625,"profile":8344124108420085910,"path":5501546530421502182,"deps":[[6564554279330852038,"ahash",false,15195494054183548114]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/hashbrown-29959d66c2001355/dep-lib-hashbrown"}}],"rustflags":[],"metadata":6228333144549390726,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/heck-ce7c7c1c3c4fa4c7/lib-heck.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":13541735487965020728,"profile":8344124108420085910,"path":866371612138716734,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/heck-ce7c7c1c3c4fa4c7/dep-lib-heck"}}],"rustflags":[],"metadata":4968006677088137060,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/hex-9a4ba69305c1736f/lib-hex.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\"]","target":6463897372179782136,"profile":8344124108420085910,"path":12453609235542545506,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/hex-9a4ba69305c1736f/dep-lib-hex"}}],"rustflags":[],"metadata":14751499657425910276,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/hex-fab8279aec9353d2/lib-hex.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\"]","target":6463897372179782136,"profile":8987646332441898785,"path":12453609235542545506,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/hex-fab8279aec9353d2/dep-lib-hex"}}],"rustflags":[],"metadata":14751499657425910276,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/iana-time-zone-67717472551561f4/lib-iana-time-zone.json ---
{"rustc":1963664527410474588,"features":"[\"fallback\"]","target":3328752131985296269,"profile":8987646332441898785,"path":5290468296401567999,"deps":[[7819976386783620690,"core_foundation_sys",false,17047111659529053613]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/iana-time-zone-67717472551561f4/dep-lib-iana-time-zone"}}],"rustflags":[],"metadata":12834561051979666637,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/iana-time-zone-899fa16957dff632/lib-iana-time-zone.json ---
{"rustc":1963664527410474588,"features":"[\"fallback\"]","target":3328752131985296269,"profile":8344124108420085910,"path":5290468296401567999,"deps":[[7819976386783620690,"core_foundation_sys",false,13710387554826871687]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/iana-time-zone-899fa16957dff632/dep-lib-iana-time-zone"}}],"rustflags":[],"metadata":12834561051979666637,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/impl-codec-496b8012c8defd0f/lib-impl-codec.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":12861017974147636940,"profile":8987646332441898785,"path":1367340679860522690,"deps":[[397054333907348796,"parity_scale_codec",false,13134655907509534145]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/impl-codec-496b8012c8defd0f/dep-lib-impl-codec"}}],"rustflags":[],"metadata":5277811016856928684,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/impl-codec-69c0990b555a3fae/lib-impl-codec.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":12861017974147636940,"profile":8344124108420085910,"path":1367340679860522690,"deps":[[397054333907348796,"parity_scale_codec",false,8859710853259697602]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/impl-codec-69c0990b555a3fae/dep-lib-impl-codec"}}],"rustflags":[],"metadata":5277811016856928684,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/impl-trait-for-tuples-3c14b346765dd6d7/lib-impl-trait-for-tuples.json ---
{"rustc":1963664527410474588,"features":"[]","target":18211109677152626130,"profile":8344124108420085910,"path":13795653009115037771,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/impl-trait-for-tuples-3c14b346765dd6d7/dep-lib-impl-trait-for-tuples"}}],"rustflags":[],"metadata":5996218443431542618,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/itoa-070b247f78745b26/lib-itoa.json ---
{"rustc":1963664527410474588,"features":"[]","target":16990797089513230490,"profile":8987646332441898785,"path":243630647066463386,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/itoa-070b247f78745b26/dep-lib-itoa"}}],"rustflags":[],"metadata":851671291587502216,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/itoa-4f834622d3b043ae/lib-itoa.json ---
{"rustc":1963664527410474588,"features":"[]","target":16990797089513230490,"profile":8344124108420085910,"path":243630647066463386,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/itoa-4f834622d3b043ae/dep-lib-itoa"}}],"rustflags":[],"metadata":851671291587502216,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/keccak-29ada344f0a5969e/lib-keccak.json ---
{"rustc":1963664527410474588,"features":"[]","target":187211068562423823,"profile":8344124108420085910,"path":18305575998571113363,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/keccak-29ada344f0a5969e/dep-lib-keccak"}}],"rustflags":[],"metadata":17580716165873092201,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/keccak-95ccfb445a42186e/lib-keccak.json ---
{"rustc":1963664527410474588,"features":"[]","target":187211068562423823,"profile":8987646332441898785,"path":18305575998571113363,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/keccak-95ccfb445a42186e/dep-lib-keccak"}}],"rustflags":[],"metadata":17580716165873092201,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/libc-4d7e71c6a97f15c9/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[332204399579859100,"build_script_build",false,920212043386388798]],"local":[{"RerunIfChanged":{"output":"debug/build/libc-4d7e71c6a97f15c9/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/libc-60fe6c09b368bdd4/lib-libc.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":15721753382687865320,"profile":8987646332441898785,"path":1616774797687716317,"deps":[[332204399579859100,"build_script_build",false,11159275670042619044]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/libc-60fe6c09b368bdd4/dep-lib-libc"}}],"rustflags":[],"metadata":14998826085014762512,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/libc-96ead764b37b951b/lib-libc.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":15721753382687865320,"profile":8344124108420085910,"path":1616774797687716317,"deps":[[332204399579859100,"build_script_build",false,11159275670042619044]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/libc-96ead764b37b951b/dep-lib-libc"}}],"rustflags":[],"metadata":14998826085014762512,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/libc-bf37e5bea2c331c5/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":12253681717557613480,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/libc-bf37e5bea2c331c5/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":14998826085014762512,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/memory_units-8a653236d6742990/lib-memory_units.json ---
{"rustc":1963664527410474588,"features":"[]","target":12813906616754239599,"profile":8987646332441898785,"path":1136550331257194429,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/memory_units-8a653236d6742990/dep-lib-memory_units"}}],"rustflags":[],"metadata":16366510313631463741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/memory_units-a5d1e04eb22417a6/lib-memory_units.json ---
{"rustc":1963664527410474588,"features":"[]","target":12813906616754239599,"profile":8344124108420085910,"path":1136550331257194429,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/memory_units-a5d1e04eb22417a6/dep-lib-memory_units"}}],"rustflags":[],"metadata":16366510313631463741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-account-id-5558138d6fca6495/lib-near-account-id.json ---
{"rustc":1963664527410474588,"features":"[\"borsh\", \"default\", \"internal_unstable\", \"serde\"]","target":14302488225720973152,"profile":8987646332441898785,"path":15693845975986163967,"deps":[[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-account-id-5558138d6fca6495/dep-lib-near-account-id"}}],"rustflags":[],"metadata":6147166356502881175,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-account-id-a84d7333ec471413/lib-near-account-id.json ---
{"rustc":1963664527410474588,"features":"[\"borsh\", \"default\", \"internal_unstable\", \"serde\"]","target":14302488225720973152,"profile":8344124108420085910,"path":15693845975986163967,"deps":[[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-account-id-a84d7333ec471413/dep-lib-near-account-id"}}],"rustflags":[],"metadata":6147166356502881175,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-crypto-3fbc51a513deab4b/lib-near-crypto.json ---
{"rustc":1963664527410474588,"features":"[]","target":5932156083825719681,"profile":8344124108420085910,"path":11832146649323948832,"deps":[[332204399579859100,"libc",false,18248499529191157943],[1468750645555412223,"serde_json",false,7165318677496325063],[1804585685035002727,"thiserror",false,15129539296150725731],[2481462472726891783,"derive_more",false,5151768503295603453],[2711478123133662383,"bs58",false,10928845223081905915],[4174244234723058678,"arrayref",false,6062109325300021905],[6365192779039812325,"near_account_id",false,15966624087195250891],[6730075568351986827,"curve25519_dalek",false,14008722841574992134],[7588362918154833280,"blake2",false,4687846390200914634],[7704765042583084768,"secp256k1",false,14353414539584423545],[11351592370471351887,"c2_chacha",false,14091078531151125310],[11761531122794857361,"rand_core",false,2436618091486944932],[13220248725062288935,"once_cell",false,4115908229835501447],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150],[14156852935330721123,"subtle",false,15395226951360145700],[14242825848293686207,"primitive_types",false,10960596925913671443],[14778545527639897399,"rand",false,1043004518082117998],[16541512147832429655,"ed25519_dalek",false,7849264235968959697]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-crypto-3fbc51a513deab4b/dep-lib-near-crypto"}}],"rustflags":[],"metadata":12117534483879381657,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-crypto-8c1a243bec997ec4/lib-near-crypto.json ---
{"rustc":1963664527410474588,"features":"[]","target":5932156083825719681,"profile":8987646332441898785,"path":11832146649323948832,"deps":[[332204399579859100,"libc",false,12952885578662856223],[1468750645555412223,"serde_json",false,10155884669913232723],[1804585685035002727,"thiserror",false,14834439794600797619],[2481462472726891783,"derive_more",false,5151768503295603453],[2711478123133662383,"bs58",false,11335857119169551568],[4174244234723058678,"arrayref",false,9764379445609552727],[6365192779039812325,"near_account_id",false,7177188579481512300],[6730075568351986827,"curve25519_dalek",false,5750001716114000319],[7588362918154833280,"blake2",false,14416880706697367693],[7704765042583084768,"secp256k1",false,15513582681733258167],[11351592370471351887,"c2_chacha",false,2481765039305517885],[11761531122794857361,"rand_core",false,1282892383426239576],[13220248725062288935,"once_cell",false,6376011506435932609],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086],[14156852935330721123,"subtle",false,14458882809950132760],[14242825848293686207,"primitive_types",false,17726533571550119167],[14778545527639897399,"rand",false,15520741759614395833],[16541512147832429655,"ed25519_dalek",false,11585262352427514366]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-crypto-8c1a243bec997ec4/dep-lib-near-crypto"}}],"rustflags":[],"metadata":12117534483879381657,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-primitives-c1c3b8e07abf06d6/lib-near-primitives.json ---
{"rustc":1963664527410474588,"features":"[]","target":5946018903897914903,"profile":8344124108420085910,"path":10776194233956697530,"deps":[[411404972127885357,"bytesize",false,4622101135256414241],[486069622437963759,"byteorder",false,4161840726384657771],[1468750645555412223,"serde_json",false,7165318677496325063],[1804585685035002727,"thiserror",false,15129539296150725731],[2481462472726891783,"derive_more",false,5151768503295603453],[3246133926868188441,"near_rpc_error_macro",false,312172454317189187],[4485243235582659819,"hex",false,2553079809654645489],[4693600255624897211,"near_primitives_core",false,17256897185240399723],[5211592845914903421,"smart_default",false,12285148759797607258],[5276859243446452557,"strum",false,14001899600640111876],[7546918406050397588,"reed_solomon_erasure",false,13102397190469273295],[7807964959511612856,"near_crypto",false,7787750848387200872],[10143629982311063068,"chrono",false,2290130037770634191],[11872697834757482347,"near_vm_errors",false,13973972151534906700],[11928408529930203077,"num_rational",false,10499819746883075069],[13220248725062288935,"once_cell",false,4115908229835501447],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150],[14242825848293686207,"primitive_types",false,10960596925913671443],[14678326912100390537,"easy_ext",false,5085571863672453906],[14778545527639897399,"rand",false,1043004518082117998]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-primitives-c1c3b8e07abf06d6/dep-lib-near-primitives"}}],"rustflags":[],"metadata":8957259720546107715,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-primitives-core-c60e5357abe98a64/lib-near-primitives-core.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":10856126659311232911,"profile":8987646332441898785,"path":7972170072743282645,"deps":[[2481462472726891783,"derive_more",false,5151768503295603453],[2711478123133662383,"bs58",false,11335857119169551568],[5276859243446452557,"strum",false,7541145407540212814],[6365192779039812325,"near_account_id",false,7177188579481512300],[11928408529930203077,"num_rational",false,8341285521406342411],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086],[14594032103777070403,"base64",false,1740867935935995209],[18290279856424135803,"sha2",false,17865312312638263121]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-primitives-core-c60e5357abe98a64/dep-lib-near-primitives-core"}}],"rustflags":[],"metadata":5142335245828182684,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-primitives-core-e77e68bbbaeb9ca9/lib-near-primitives-core.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":10856126659311232911,"profile":8344124108420085910,"path":7972170072743282645,"deps":[[2481462472726891783,"derive_more",false,5151768503295603453],[2711478123133662383,"bs58",false,10928845223081905915],[5276859243446452557,"strum",false,14001899600640111876],[6365192779039812325,"near_account_id",false,15966624087195250891],[11928408529930203077,"num_rational",false,10499819746883075069],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150],[14594032103777070403,"base64",false,7571059927374177604],[18290279856424135803,"sha2",false,2225213365046869834]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-primitives-core-e77e68bbbaeb9ca9/dep-lib-near-primitives-core"}}],"rustflags":[],"metadata":5142335245828182684,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-primitives-f7aebfd136414474/lib-near-primitives.json ---
{"rustc":1963664527410474588,"features":"[]","target":5946018903897914903,"profile":8987646332441898785,"path":10776194233956697530,"deps":[[411404972127885357,"bytesize",false,14142572500453029875],[486069622437963759,"byteorder",false,3780392657360757237],[1468750645555412223,"serde_json",false,10155884669913232723],[1804585685035002727,"thiserror",false,14834439794600797619],[2481462472726891783,"derive_more",false,5151768503295603453],[3246133926868188441,"near_rpc_error_macro",false,312172454317189187],[4485243235582659819,"hex",false,4526719055568128781],[4693600255624897211,"near_primitives_core",false,9747061400999300967],[5211592845914903421,"smart_default",false,12285148759797607258],[5276859243446452557,"strum",false,7541145407540212814],[7546918406050397588,"reed_solomon_erasure",false,17911450374315362618],[7807964959511612856,"near_crypto",false,2239249640385146398],[10143629982311063068,"chrono",false,3381446252548128205],[11872697834757482347,"near_vm_errors",false,4451082767161619701],[11928408529930203077,"num_rational",false,8341285521406342411],[13220248725062288935,"once_cell",false,6376011506435932609],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086],[14242825848293686207,"primitive_types",false,17726533571550119167],[14678326912100390537,"easy_ext",false,5085571863672453906],[14778545527639897399,"rand",false,15520741759614395833]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-primitives-f7aebfd136414474/dep-lib-near-primitives"}}],"rustflags":[],"metadata":8957259720546107715,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-rpc-error-core-d54ebf8203842fee/lib-near-rpc-error-core.json ---
{"rustc":1963664527410474588,"features":"[]","target":1984817488980915190,"profile":8344124108420085910,"path":14188576978249876118,"deps":[[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[14036285059816747405,"serde",false,5206768074462546104]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-rpc-error-core-d54ebf8203842fee/dep-lib-near-rpc-error-core"}}],"rustflags":[],"metadata":8565167639935453145,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-rpc-error-macro-7791b52650263436/lib-near-rpc-error-macro.json ---
{"rustc":1963664527410474588,"features":"[]","target":2708461817676554199,"profile":8344124108420085910,"path":416573927887721317,"deps":[[4114176108478934945,"syn",false,10549874276280742374],[10414165501289346635,"near_rpc_error_core",false,16774171456528315467],[14036285059816747405,"serde",false,5206768074462546104]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-rpc-error-macro-7791b52650263436/dep-lib-near-rpc-error-macro"}}],"rustflags":[],"metadata":8565167639935453145,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-sdk-6a88c8005d68770c/lib-near-sdk.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"wee_alloc\"]","target":1044266279087180184,"profile":8344124108420085910,"path":9479240943099365527,"deps":[[1468750645555412223,"serde_json",false,7165318677496325063],[2711478123133662383,"bs58",false,10928845223081905915],[3178493835647231921,"wee_alloc",false,8917683074703839970],[4693600255624897211,"near_primitives_core",false,17256897185240399723],[7807964959511612856,"near_crypto",false,7787750848387200872],[9180754061452322375,"base64",false,5042758733059300739],[9608617076544306583,"near_sys",false,17934681598367033523],[10529364699305453004,"near_primitives",false,6042267939264055163],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150],[15072047971274726999,"near_vm_logic",false,8490044189743711245],[15959244235299360742,"near_sdk_macros",false,16590096122091461483]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-sdk-6a88c8005d68770c/dep-lib-near-sdk"}}],"rustflags":[],"metadata":9215943102709044213,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-sdk-9057faee7dcaedbc/lib-near-sdk.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"wee_alloc\"]","target":1044266279087180184,"profile":8987646332441898785,"path":9479240943099365527,"deps":[[1468750645555412223,"serde_json",false,10155884669913232723],[2711478123133662383,"bs58",false,11335857119169551568],[3178493835647231921,"wee_alloc",false,6291235770979289653],[4693600255624897211,"near_primitives_core",false,9747061400999300967],[7807964959511612856,"near_crypto",false,2239249640385146398],[9180754061452322375,"base64",false,18403328734518245573],[9608617076544306583,"near_sys",false,2444803890486167965],[10529364699305453004,"near_primitives",false,17552438290784504208],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086],[15072047971274726999,"near_vm_logic",false,1106368326371416676],[15959244235299360742,"near_sdk_macros",false,16590096122091461483]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-sdk-9057faee7dcaedbc/dep-lib-near-sdk"}}],"rustflags":[],"metadata":9215943102709044213,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-sdk-macros-ac83132011fc1738/lib-near-sdk-macros.json ---
{"rustc":1963664527410474588,"features":"[]","target":2024342235666230958,"profile":8344124108420085910,"path":1771747915337282788,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[7454270075138479745,"inflector",false,9427711607944791049]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-sdk-macros-ac83132011fc1738/dep-lib-near-sdk-macros"}}],"rustflags":[],"metadata":9520434766592551999,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-sys-282e5a1833a2f93a/lib-near-sys.json ---
{"rustc":1963664527410474588,"features":"[]","target":11005017848159897718,"profile":8987646332441898785,"path":5698187451272198236,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-sys-282e5a1833a2f93a/dep-lib-near-sys"}}],"rustflags":[],"metadata":14904885344401450229,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-sys-808883cb4e449f76/lib-near-sys.json ---
{"rustc":1963664527410474588,"features":"[]","target":11005017848159897718,"profile":8344124108420085910,"path":5698187451272198236,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-sys-808883cb4e449f76/dep-lib-near-sys"}}],"rustflags":[],"metadata":14904885344401450229,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-vm-errors-0aa9d83a62e2679b/lib-near-vm-errors.json ---
{"rustc":1963664527410474588,"features":"[]","target":11704073050348967171,"profile":8344124108420085910,"path":4874435662490583556,"deps":[[3246133926868188441,"near_rpc_error_macro",false,312172454317189187],[6365192779039812325,"near_account_id",false,15966624087195250891],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-vm-errors-0aa9d83a62e2679b/dep-lib-near-vm-errors"}}],"rustflags":[],"metadata":8179371643365061792,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-vm-errors-bb1a8abb2a080c34/lib-near-vm-errors.json ---
{"rustc":1963664527410474588,"features":"[]","target":11704073050348967171,"profile":8987646332441898785,"path":4874435662490583556,"deps":[[3246133926868188441,"near_rpc_error_macro",false,312172454317189187],[6365192779039812325,"near_account_id",false,7177188579481512300],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-vm-errors-bb1a8abb2a080c34/dep-lib-near-vm-errors"}}],"rustflags":[],"metadata":8179371643365061792,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-vm-logic-11acc8ea99d12ac5/lib-near-vm-logic.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":7867101672257317764,"profile":8344124108420085910,"path":7883255007912157478,"deps":[[486069622437963759,"byteorder",false,4161840726384657771],[2711478123133662383,"bs58",false,10928845223081905915],[4616624517852771959,"sha3",false,1867636137005838978],[4693600255624897211,"near_primitives_core",false,17256897185240399723],[4864983120644689247,"ripemd",false,11130224401949505622],[6365192779039812325,"near_account_id",false,15966624087195250891],[7807964959511612856,"near_crypto",false,7787750848387200872],[9180754061452322375,"base64",false,5042758733059300739],[10529364699305453004,"near_primitives",false,6042267939264055163],[11872697834757482347,"near_vm_errors",false,13973972151534906700],[13434381959712907675,"borsh",false,5517757772215689069],[14036285059816747405,"serde",false,2709950972696055150],[18290279856424135803,"sha2",false,2225213365046869834]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-vm-logic-11acc8ea99d12ac5/dep-lib-near-vm-logic"}}],"rustflags":[],"metadata":5606999395439952070,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/near-vm-logic-f7de2f9b21ea5121/lib-near-vm-logic.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":7867101672257317764,"profile":8987646332441898785,"path":7883255007912157478,"deps":[[486069622437963759,"byteorder",false,3780392657360757237],[2711478123133662383,"bs58",false,11335857119169551568],[4616624517852771959,"sha3",false,5876704363527105211],[4693600255624897211,"near_primitives_core",false,9747061400999300967],[4864983120644689247,"ripemd",false,15231468389507258780],[6365192779039812325,"near_account_id",false,7177188579481512300],[7807964959511612856,"near_crypto",false,2239249640385146398],[9180754061452322375,"base64",false,18403328734518245573],[10529364699305453004,"near_primitives",false,17552438290784504208],[11872697834757482347,"near_vm_errors",false,4451082767161619701],[13434381959712907675,"borsh",false,1969728116479481253],[14036285059816747405,"serde",false,11884406638781610086],[18290279856424135803,"sha2",false,17865312312638263121]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/near-vm-logic-f7de2f9b21ea5121/dep-lib-near-vm-logic"}}],"rustflags":[],"metadata":5606999395439952070,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-bigint-146dcc7de637c0ab/lib-num-bigint.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":1867104470408149367,"profile":8987646332441898785,"path":8966389422779163995,"deps":[[1494750142361447113,"num_integer",false,8530135161016749593],[7201007571111540716,"build_script_build",false,17370148913793949674],[8121635694596382552,"num_traits",false,15079758690088052523]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-bigint-146dcc7de637c0ab/dep-lib-num-bigint"}}],"rustflags":[],"metadata":10601054166942238371,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-bigint-97627202e8e2b338/lib-num-bigint.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":1867104470408149367,"profile":8344124108420085910,"path":8966389422779163995,"deps":[[1494750142361447113,"num_integer",false,6309687047904166703],[7201007571111540716,"build_script_build",false,17370148913793949674],[8121635694596382552,"num_traits",false,17540752380004346253]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-bigint-97627202e8e2b338/dep-lib-num-bigint"}}],"rustflags":[],"metadata":10601054166942238371,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-bigint-c918f13ecf602703/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":13294766831966498538,"profile":8344124108420085910,"path":2571911926265428226,"deps":[[14832468857926148571,"autocfg",false,18362574818720546170]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-bigint-c918f13ecf602703/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":10601054166942238371,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-bigint-d6f1a02feee433d9/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[7201007571111540716,"build_script_build",false,17574599233079771730]],"local":[{"RerunIfChanged":{"output":"debug/build/num-bigint-d6f1a02feee433d9/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-integer-299b22416364b8f8/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":8698265328913106656,"deps":[[14832468857926148571,"autocfg",false,18362574818720546170]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-integer-299b22416364b8f8/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":58200369117550911,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-integer-460011ae16f254fc/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[1494750142361447113,"build_script_build",false,14410996034781270934]],"local":[{"RerunIfChanged":{"output":"debug/build/num-integer-460011ae16f254fc/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-integer-8730a3bf8edb9110/lib-num-integer.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":12193390843193510638,"profile":8987646332441898785,"path":7688259732013645259,"deps":[[1494750142361447113,"build_script_build",false,10824487546187595539],[8121635694596382552,"num_traits",false,15079758690088052523]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-integer-8730a3bf8edb9110/dep-lib-num-integer"}}],"rustflags":[],"metadata":58200369117550911,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-integer-9b942ee47e7686cf/lib-num-integer.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":12193390843193510638,"profile":8344124108420085910,"path":7688259732013645259,"deps":[[1494750142361447113,"build_script_build",false,10824487546187595539],[8121635694596382552,"num_traits",false,17540752380004346253]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-integer-9b942ee47e7686cf/dep-lib-num-integer"}}],"rustflags":[],"metadata":58200369117550911,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-rational-5767449b671c7e15/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[11928408529930203077,"build_script_build",false,7519906673749275148]],"local":[{"RerunIfChanged":{"output":"debug/build/num-rational-5767449b671c7e15/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-rational-913afb4f003bc4bd/lib-num-rational.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"num-bigint\", \"num-bigint-std\", \"serde\", \"std\"]","target":14411180192080014124,"profile":8987646332441898785,"path":11036719625608918432,"deps":[[1494750142361447113,"num_integer",false,8530135161016749593],[7201007571111540716,"num_bigint",false,6946922340183173036],[8121635694596382552,"num_traits",false,15079758690088052523],[11928408529930203077,"build_script_build",false,8484749486535104508],[14036285059816747405,"serde",false,11884406638781610086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-rational-913afb4f003bc4bd/dep-lib-num-rational"}}],"rustflags":[],"metadata":18311408697950330488,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-rational-d51a0f5f102e330a/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"num-bigint\", \"num-bigint-std\", \"serde\", \"std\"]","target":13294766831966498538,"profile":8344124108420085910,"path":6791475752619960176,"deps":[[14832468857926148571,"autocfg",false,18362574818720546170]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-rational-d51a0f5f102e330a/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":18311408697950330488,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-rational-e7f4f190ee68912c/lib-num-rational.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"num-bigint\", \"num-bigint-std\", \"serde\", \"std\"]","target":14411180192080014124,"profile":8344124108420085910,"path":11036719625608918432,"deps":[[1494750142361447113,"num_integer",false,6309687047904166703],[7201007571111540716,"num_bigint",false,4945691982228497469],[8121635694596382552,"num_traits",false,17540752380004346253],[11928408529930203077,"build_script_build",false,8484749486535104508],[14036285059816747405,"serde",false,2709950972696055150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-rational-e7f4f190ee68912c/dep-lib-num-rational"}}],"rustflags":[],"metadata":18311408697950330488,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-traits-2fb75f08a0a18ef8/lib-num-traits.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":13149273197211247723,"profile":8987646332441898785,"path":10134692628822170452,"deps":[[8121635694596382552,"build_script_build",false,8738828493742632031]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-traits-2fb75f08a0a18ef8/dep-lib-num-traits"}}],"rustflags":[],"metadata":14621636500951049976,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-traits-a976f8e93782608e/lib-num-traits.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":13149273197211247723,"profile":8344124108420085910,"path":10134692628822170452,"deps":[[8121635694596382552,"build_script_build",false,8738828493742632031]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-traits-a976f8e93782608e/dep-lib-num-traits"}}],"rustflags":[],"metadata":14621636500951049976,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-traits-e7667cf8d5ddcd1b/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"i128\", \"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":10237378339559956187,"deps":[[14832468857926148571,"autocfg",false,18362574818720546170]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/num-traits-e7667cf8d5ddcd1b/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":14621636500951049976,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/num-traits-fd837251088ace0a/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[8121635694596382552,"build_script_build",false,16709665938096051528]],"local":[{"RerunIfChanged":{"output":"debug/build/num-traits-fd837251088ace0a/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/once_cell-4bc0c8e208d05104/lib-once_cell.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"race\", \"std\"]","target":15818772897122422038,"profile":8987646332441898785,"path":12592208058068401834,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/once_cell-4bc0c8e208d05104/dep-lib-once_cell"}}],"rustflags":[],"metadata":14177539708254521827,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/once_cell-e8c0717eb4e6ad80/lib-once_cell.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"race\", \"std\"]","target":15818772897122422038,"profile":8344124108420085910,"path":12592208058068401834,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/once_cell-e8c0717eb4e6ad80/dep-lib-once_cell"}}],"rustflags":[],"metadata":14177539708254521827,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/opaque-debug-69c7d9cb8c90c998/lib-opaque-debug.json ---
{"rustc":1963664527410474588,"features":"[]","target":66469288574863249,"profile":8344124108420085910,"path":7250911718410992572,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/opaque-debug-69c7d9cb8c90c998/dep-lib-opaque-debug"}}],"rustflags":[],"metadata":8060500437326165382,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/opaque-debug-98d91db6c7b0cd96/lib-opaque-debug.json ---
{"rustc":1963664527410474588,"features":"[]","target":66469288574863249,"profile":8987646332441898785,"path":7250911718410992572,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/opaque-debug-98d91db6c7b0cd96/dep-lib-opaque-debug"}}],"rustflags":[],"metadata":8060500437326165382,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-scale-codec-8f33a99c64d535fd/lib-parity-scale-codec.json ---
{"rustc":1963664527410474588,"features":"[\"bitvec\", \"chain-error\", \"max-encoded-len\", \"parity-scale-codec-derive\", \"serde\", \"std\"]","target":18160121026398310804,"profile":8987646332441898785,"path":12832342814164852645,"deps":[[6780837041381009114,"parity_scale_codec_derive",false,1518651352674626973],[8013147862121382061,"arrayvec",false,4248826396103682411],[8865365780650178877,"bitvec",false,11422673838860154398],[10242743332300528798,"byte_slice_cast",false,13035818708335806205],[14036285059816747405,"serde",false,11884406638781610086],[15445385477726562306,"impl_trait_for_tuples",false,10163467900524083944]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-scale-codec-8f33a99c64d535fd/dep-lib-parity-scale-codec"}}],"rustflags":[],"metadata":11875060396614366296,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-scale-codec-derive-46c30de26d9742f3/lib-parity-scale-codec-derive.json ---
{"rustc":1963664527410474588,"features":"[\"max-encoded-len\"]","target":13895144180219782041,"profile":8344124108420085910,"path":10485710352173684196,"deps":[[284704373943991055,"proc_macro_crate",false,1116961944485727838],[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-scale-codec-derive-46c30de26d9742f3/dep-lib-parity-scale-codec-derive"}}],"rustflags":[],"metadata":14884885833291977123,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-scale-codec-eb65fc1abc818ef5/lib-parity-scale-codec.json ---
{"rustc":1963664527410474588,"features":"[\"bitvec\", \"chain-error\", \"max-encoded-len\", \"parity-scale-codec-derive\", \"serde\", \"std\"]","target":18160121026398310804,"profile":8344124108420085910,"path":12832342814164852645,"deps":[[6780837041381009114,"parity_scale_codec_derive",false,1518651352674626973],[8013147862121382061,"arrayvec",false,9920366027983482009],[8865365780650178877,"bitvec",false,11162031238535868161],[10242743332300528798,"byte_slice_cast",false,6686237052466512798],[14036285059816747405,"serde",false,2709950972696055150],[15445385477726562306,"impl_trait_for_tuples",false,10163467900524083944]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-scale-codec-eb65fc1abc818ef5/dep-lib-parity-scale-codec"}}],"rustflags":[],"metadata":11875060396614366296,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-secp256k1-349e4dc23eacc28d/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[7704765042583084768,"build_script_build",false,10177423262245685293]],"local":[{"Precalculated":"0.7.0"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-secp256k1-3695afff05bbd6bb/lib-secp256k1.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":558377934124950843,"profile":8987646332441898785,"path":325953408067458950,"deps":[[7704765042583084768,"build_script_build",false,15071831350922728625],[13133975285667102737,"arrayvec",false,11455582461757581143],[14778545527639897399,"rand",false,15520741759614395833]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-secp256k1-3695afff05bbd6bb/dep-lib-secp256k1"}}],"rustflags":[],"metadata":9768936618333975934,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-secp256k1-c5a84f9121b7ee80/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":2709041430195671023,"profile":8344124108420085910,"path":13360018416576119374,"deps":[[5019880723470237578,"cc",false,6776434446887087082],[11311719388751911026,"cfg_if",false,8450922048676755187]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-secp256k1-c5a84f9121b7ee80/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":9768936618333975934,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/parity-secp256k1-cafdc59026b76d3e/lib-secp256k1.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":558377934124950843,"profile":8344124108420085910,"path":325953408067458950,"deps":[[7704765042583084768,"build_script_build",false,15071831350922728625],[13133975285667102737,"arrayvec",false,17605475562467296088],[14778545527639897399,"rand",false,1043004518082117998]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/parity-secp256k1-cafdc59026b76d3e/dep-lib-secp256k1"}}],"rustflags":[],"metadata":9768936618333975934,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ppv-lite86-12bab432e659fbd3/lib-ppv-lite86.json ---
{"rustc":1963664527410474588,"features":"[\"simd\", \"std\"]","target":731041848731596649,"profile":8987646332441898785,"path":11266152659186044582,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ppv-lite86-12bab432e659fbd3/dep-lib-ppv-lite86"}}],"rustflags":[],"metadata":14155036307809790115,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ppv-lite86-9dcf5b97849a38f6/lib-ppv-lite86.json ---
{"rustc":1963664527410474588,"features":"[\"simd\", \"std\"]","target":731041848731596649,"profile":8344124108420085910,"path":11266152659186044582,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ppv-lite86-9dcf5b97849a38f6/dep-lib-ppv-lite86"}}],"rustflags":[],"metadata":14155036307809790115,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/primitive-types-22edce8f8ebaf078/lib-primitive-types.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"impl-codec\", \"std\"]","target":1930657710329582917,"profile":8987646332441898785,"path":3610145502701900516,"deps":[[1048698513431552377,"fixed_hash",false,12073915446759802848],[2354418988992935079,"impl_codec",false,12484380061071567670],[16627482305268480055,"uint",false,13406852280874121538]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/primitive-types-22edce8f8ebaf078/dep-lib-primitive-types"}}],"rustflags":[],"metadata":14754221332772532696,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/primitive-types-8aeef770db01da26/lib-primitive-types.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"impl-codec\", \"std\"]","target":1930657710329582917,"profile":8344124108420085910,"path":3610145502701900516,"deps":[[1048698513431552377,"fixed_hash",false,13756312024120274028],[2354418988992935079,"impl_codec",false,1440800577447208759],[16627482305268480055,"uint",false,10758717458102784806]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/primitive-types-8aeef770db01da26/dep-lib-primitive-types"}}],"rustflags":[],"metadata":14754221332772532696,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/proc-macro-crate-2a21090dbcdca973/lib-proc-macro-crate.json ---
{"rustc":1963664527410474588,"features":"[]","target":10488202467561598967,"profile":8344124108420085910,"path":11562495772240622068,"deps":[[1804585685035002727,"thiserror",false,15129539296150725731],[12643607882224615841,"toml",false,15927531975256668882],[13220248725062288935,"once_cell",false,4115908229835501447]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/proc-macro-crate-2a21090dbcdca973/dep-lib-proc-macro-crate"}}],"rustflags":[],"metadata":4875023412952309093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/proc-macro-crate-ce3b86bf47361a9d/lib-proc-macro-crate.json ---
{"rustc":1963664527410474588,"features":"[]","target":10488202467561598967,"profile":8344124108420085910,"path":9929988983524567196,"deps":[[12643607882224615841,"toml",false,15927531975256668882]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/proc-macro-crate-ce3b86bf47361a9d/dep-lib-proc-macro-crate"}}],"rustflags":[],"metadata":4875023412952309093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/proc-macro2-56fe3ba31296bd10/lib-proc-macro2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":14344298002436322672,"profile":8344124108420085910,"path":18157387444495557922,"deps":[[2303534799027988957,"build_script_build",false,17300296619334679922],[9294524838761079687,"unicode_ident",false,6168132671565892086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/proc-macro2-56fe3ba31296bd10/dep-lib-proc-macro2"}}],"rustflags":[],"metadata":7635439851376710101,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/proc-macro2-8a7317f6c8b1fb0b/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[2303534799027988957,"build_script_build",false,13259035376472464159]],"local":[{"RerunIfChanged":{"output":"debug/build/proc-macro2-8a7317f6c8b1fb0b/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/proc-macro2-eae8f55364a1f65c/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":8344124108420085910,"path":8373503749160907691,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/proc-macro2-eae8f55364a1f65c/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":7635439851376710101,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/quote-09b104d066f91afa/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":8344124108420085910,"path":12427570233756742094,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/quote-09b104d066f91afa/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/quote-2bf29a4346215c6c/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[4658667968557883043,"build_script_build",false,5138084534837673734]],"local":[{"RerunIfChanged":{"output":"debug/build/quote-2bf29a4346215c6c/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/quote-586bddd075c058e6/lib-quote.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":4606197195311606630,"profile":8344124108420085910,"path":18167323669066073144,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4658667968557883043,"build_script_build",false,10734164769136614103]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/quote-586bddd075c058e6/dep-lib-quote"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/radium-0fbfc45ef04458d9/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":13294766831966498538,"profile":8344124108420085910,"path":16745736686746028169,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/radium-0fbfc45ef04458d9/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":13584132765049742942,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/radium-14c41b1e66c46cd9/lib-radium.json ---
{"rustc":1963664527410474588,"features":"[]","target":17147793568388333973,"profile":8987646332441898785,"path":13222535899289466438,"deps":[[188905226975056936,"build_script_build",false,8797331335602399524]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/radium-14c41b1e66c46cd9/dep-lib-radium"}}],"rustflags":[],"metadata":13584132765049742942,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/radium-38be074bc4515a99/lib-radium.json ---
{"rustc":1963664527410474588,"features":"[]","target":17147793568388333973,"profile":8344124108420085910,"path":13222535899289466438,"deps":[[188905226975056936,"build_script_build",false,8797331335602399524]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/radium-38be074bc4515a99/dep-lib-radium"}}],"rustflags":[],"metadata":13584132765049742942,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/radium-46e3fcd7ef1491dd/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[188905226975056936,"build_script_build",false,15967651684154186530]],"local":[{"Precalculated":"0.6.2"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand-62346064d7e82170/lib-rand.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"getrandom\", \"getrandom_package\", \"libc\", \"std\"]","target":8770996785908029621,"profile":8987646332441898785,"path":9874380063054771074,"deps":[[332204399579859100,"libc",false,12952885578662856223],[6453573393678185459,"getrandom_package",false,7539819836610411170],[11761531122794857361,"rand_core",false,1282892383426239576],[15629295216311830669,"rand_chacha",false,7283532888108551754]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand-62346064d7e82170/dep-lib-rand"}}],"rustflags":[],"metadata":7119169968661360791,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand-6401c300bda5f2d7/lib-rand.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"libc\", \"rand_chacha\", \"std\"]","target":8770996785908029621,"profile":8344124108420085910,"path":9306695694955932530,"deps":[[332204399579859100,"libc",false,18248499529191157943],[1974880700686797828,"rand_core",false,5877919026556989674],[12017018019769837221,"rand_chacha",false,4843496477183929488]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand-6401c300bda5f2d7/dep-lib-rand"}}],"rustflags":[],"metadata":16964019146302480911,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand-d10c0f7d99982bdd/lib-rand.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"getrandom\", \"getrandom_package\", \"libc\", \"std\"]","target":8770996785908029621,"profile":8344124108420085910,"path":9874380063054771074,"deps":[[332204399579859100,"libc",false,18248499529191157943],[6453573393678185459,"getrandom_package",false,10791641365577930229],[11761531122794857361,"rand_core",false,2436618091486944932],[15629295216311830669,"rand_chacha",false,4863326727830550471]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand-d10c0f7d99982bdd/dep-lib-rand"}}],"rustflags":[],"metadata":7119169968661360791,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand-e8c702a3a15d9a00/lib-rand.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"libc\", \"rand_chacha\", \"std\"]","target":8770996785908029621,"profile":8987646332441898785,"path":9306695694955932530,"deps":[[332204399579859100,"libc",false,12952885578662856223],[1974880700686797828,"rand_core",false,10136538481584956575],[12017018019769837221,"rand_chacha",false,5290645443843447962]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand-e8c702a3a15d9a00/dep-lib-rand"}}],"rustflags":[],"metadata":16964019146302480911,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_chacha-1b9a3555614ec385/lib-rand_chacha.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":10091652985973831551,"profile":8987646332441898785,"path":2960487936759416511,"deps":[[6749292461404294239,"ppv_lite86",false,7644550718745915478],[11761531122794857361,"rand_core",false,1282892383426239576]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_chacha-1b9a3555614ec385/dep-lib-rand_chacha"}}],"rustflags":[],"metadata":4815341205625856913,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_chacha-1f9b7d9b7c785c70/lib-rand_chacha.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":10091652985973831551,"profile":8344124108420085910,"path":12475438487064789470,"deps":[[1974880700686797828,"rand_core",false,5877919026556989674],[6749292461404294239,"ppv_lite86",false,15121598850875826056]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_chacha-1f9b7d9b7c785c70/dep-lib-rand_chacha"}}],"rustflags":[],"metadata":2235018391756195449,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_chacha-36b0e0358eecf2cb/lib-rand_chacha.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":10091652985973831551,"profile":8344124108420085910,"path":2960487936759416511,"deps":[[6749292461404294239,"ppv_lite86",false,15121598850875826056],[11761531122794857361,"rand_core",false,2436618091486944932]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_chacha-36b0e0358eecf2cb/dep-lib-rand_chacha"}}],"rustflags":[],"metadata":4815341205625856913,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_chacha-b26988cae5f98e86/lib-rand_chacha.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":10091652985973831551,"profile":8987646332441898785,"path":12475438487064789470,"deps":[[1974880700686797828,"rand_core",false,10136538481584956575],[6749292461404294239,"ppv_lite86",false,7644550718745915478]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_chacha-b26988cae5f98e86/dep-lib-rand_chacha"}}],"rustflags":[],"metadata":2235018391756195449,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_core-269249c6e78dd2c2/lib-rand_core.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"std\"]","target":14554634924080965175,"profile":8344124108420085910,"path":5251366445621076876,"deps":[[13417499805903997058,"getrandom",false,6749951268054797265]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_core-269249c6e78dd2c2/dep-lib-rand_core"}}],"rustflags":[],"metadata":3275543247315060703,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_core-2fd0d3a95d78d593/lib-rand_core.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"std\"]","target":14554634924080965175,"profile":8344124108420085910,"path":9186760539308152807,"deps":[[6453573393678185459,"getrandom",false,10791641365577930229]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_core-2fd0d3a95d78d593/dep-lib-rand_core"}}],"rustflags":[],"metadata":3036601509445419820,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_core-7e09a1f488c72f22/lib-rand_core.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"std\"]","target":14554634924080965175,"profile":8987646332441898785,"path":9186760539308152807,"deps":[[6453573393678185459,"getrandom",false,7539819836610411170]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_core-7e09a1f488c72f22/dep-lib-rand_core"}}],"rustflags":[],"metadata":3036601509445419820,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rand_core-d3c257ee1e3bd1a8/lib-rand_core.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"getrandom\", \"std\"]","target":14554634924080965175,"profile":8987646332441898785,"path":5251366445621076876,"deps":[[13417499805903997058,"getrandom",false,8297525639777392082]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rand_core-d3c257ee1e3bd1a8/dep-lib-rand_core"}}],"rustflags":[],"metadata":3275543247315060703,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/reed-solomon-erasure-6481759c75cc8aee/lib-reed-solomon-erasure.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":1720231912075578704,"profile":8344124108420085910,"path":16099290165908469005,"deps":[[7546918406050397588,"build_script_build",false,129483210671740506],[14408672950887868211,"smallvec",false,12300356813397413081]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/reed-solomon-erasure-6481759c75cc8aee/dep-lib-reed-solomon-erasure"}}],"rustflags":[],"metadata":18181909252143981725,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/reed-solomon-erasure-7613c8df48cd12ab/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[7546918406050397588,"build_script_build",false,2998200893653386084]],"local":[{"Precalculated":"4.0.2"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/reed-solomon-erasure-9e097c4c74362a98/lib-reed-solomon-erasure.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":1720231912075578704,"profile":8987646332441898785,"path":16099290165908469005,"deps":[[7546918406050397588,"build_script_build",false,129483210671740506],[14408672950887868211,"smallvec",false,16725419892485734032]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/reed-solomon-erasure-9e097c4c74362a98/dep-lib-reed-solomon-erasure"}}],"rustflags":[],"metadata":18181909252143981725,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/reed-solomon-erasure-beb572cf789e718d/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":13294766831966498538,"profile":8344124108420085910,"path":14284033720654673433,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/reed-solomon-erasure-beb572cf789e718d/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":18181909252143981725,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ripemd-98e1fafaecb9287d/lib-ripemd.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":8109125348685308098,"profile":8344124108420085910,"path":10694752677442691811,"deps":[[139538228852437115,"digest",false,9274483026959282226]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ripemd-98e1fafaecb9287d/dep-lib-ripemd"}}],"rustflags":[],"metadata":14578198798605781854,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ripemd-ec55a8337b65b697/lib-ripemd.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":8109125348685308098,"profile":8987646332441898785,"path":10694752677442691811,"deps":[[139538228852437115,"digest",false,15806948483885855350]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ripemd-ec55a8337b65b697/dep-lib-ripemd"}}],"rustflags":[],"metadata":14578198798605781854,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rustc-hex-64632078620ab62e/lib-rustc-hex.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":683421671917135955,"profile":8987646332441898785,"path":17080032053593056182,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rustc-hex-64632078620ab62e/dep-lib-rustc-hex"}}],"rustflags":[],"metadata":11278451656052502128,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rustc-hex-71e4043f6a184cc4/lib-rustc-hex.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":683421671917135955,"profile":8344124108420085910,"path":17080032053593056182,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rustc-hex-71e4043f6a184cc4/dep-lib-rustc-hex"}}],"rustflags":[],"metadata":11278451656052502128,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rustversion-02d0e43a70a5d587/lib-rustversion.json ---
{"rustc":1963664527410474588,"features":"[]","target":11151850059634677484,"profile":8344124108420085910,"path":7530384361997489628,"deps":[[8011508513125043952,"build_script_build",false,16902483879748428298]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rustversion-02d0e43a70a5d587/dep-lib-rustversion"}}],"rustflags":[],"metadata":11946384680894284015,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rustversion-1909012182aaccab/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[8011508513125043952,"build_script_build",false,14286192809264130433]],"local":[{"Precalculated":"1.0.9"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/rustversion-9e2134889f5872f7/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":13294766831966498538,"profile":8344124108420085910,"path":417793351507592047,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/rustversion-9e2134889f5872f7/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":11946384680894284015,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ryu-0c5689a3583a4353/lib-ryu.json ---
{"rustc":1963664527410474588,"features":"[]","target":8261881835615490997,"profile":8987646332441898785,"path":3120883713387150603,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ryu-0c5689a3583a4353/dep-lib-ryu"}}],"rustflags":[],"metadata":10387617312689919117,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/ryu-3296d14dc9fd089f/lib-ryu.json ---
{"rustc":1963664527410474588,"features":"[]","target":8261881835615490997,"profile":8344124108420085910,"path":3120883713387150603,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/ryu-3296d14dc9fd089f/dep-lib-ryu"}}],"rustflags":[],"metadata":10387617312689919117,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-034bd8589b705603/lib-serde.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"rc\", \"serde_derive\", \"std\"]","target":15771919462364234457,"profile":8987646332441898785,"path":1387100282848832722,"deps":[[6457049817717335835,"serde_derive",false,13954643957618099849],[14036285059816747405,"build_script_build",false,12261362837010795478]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde-034bd8589b705603/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-1610c2ecbd006cdf/lib-serde.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"rc\", \"serde_derive\", \"std\"]","target":15771919462364234457,"profile":8344124108420085910,"path":1387100282848832722,"deps":[[6457049817717335835,"serde_derive",false,13954643957618099849],[14036285059816747405,"build_script_build",false,12261362837010795478]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde-1610c2ecbd006cdf/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-23a927d5661d4e53/lib-serde.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":15771919462364234457,"profile":8344124108420085910,"path":1387100282848832722,"deps":[[6457049817717335835,"serde_derive",false,13954643957618099849],[14036285059816747405,"build_script_build",false,6061023740188305390]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde-23a927d5661d4e53/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-6de38008e63d820c/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[14036285059816747405,"build_script_build",false,3953693971084807279]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-6ee9927458ff8666/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"rc\", \"serde_derive\", \"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":8623646744122958867,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde-6ee9927458ff8666/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-b3bdc83de06106f7/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[14036285059816747405,"build_script_build",false,16576184245989347273]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde-edd2b0e13cde507c/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":2709041430195671023,"profile":8344124108420085910,"path":8623646744122958867,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde-edd2b0e13cde507c/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_derive-1f5ff2ebf7a9834b/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[6457049817717335835,"build_script_build",false,9354370638151525865]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_derive-a4172d88f41e91b8/lib-serde_derive.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":17963269895377715704,"profile":8344124108420085910,"path":9565781282288803278,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[6457049817717335835,"build_script_build",false,9051950424320976595]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde_derive-a4172d88f41e91b8/dep-lib-serde_derive"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_derive-f5f3b11529fa44c3/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":2709041430195671023,"profile":8344124108420085910,"path":4164287412775783218,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde_derive-f5f3b11529fa44c3/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_json-01dd827d2f5cc25c/lib-serde_json.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":2475719121998694108,"profile":8987646332441898785,"path":7382252529011714141,"deps":[[575073654967937391,"ryu",false,10269970637747780612],[1468750645555412223,"build_script_build",false,5147612172434020522],[5877561965226442608,"itoa",false,5462885006086560940],[14036285059816747405,"serde",false,11884406638781610086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde_json-01dd827d2f5cc25c/dep-lib-serde_json"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_json-353821164d99b020/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":13294766831966498538,"profile":8344124108420085910,"path":13016217998012930942,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde_json-353821164d99b020/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_json-df30b3c9fd5acbfc/lib-serde_json.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":2475719121998694108,"profile":8344124108420085910,"path":7382252529011714141,"deps":[[575073654967937391,"ryu",false,18215845053828134756],[1468750645555412223,"build_script_build",false,5147612172434020522],[5877561965226442608,"itoa",false,18138778810773044242],[14036285059816747405,"serde",false,2709950972696055150]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/serde_json-df30b3c9fd5acbfc/dep-lib-serde_json"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/serde_json-f9dc2312313ae752/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[1468750645555412223,"build_script_build",false,16962691183519354899]],"local":[{"Precalculated":"1.0.83"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha2-6068e95102dfdb90/lib-sha2.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":18376301184193729913,"profile":8344124108420085910,"path":12520063762657656477,"deps":[[2452538001284770427,"cfg_if",false,16414099455413124918],[5380073082773161146,"block_buffer",false,17778998027231348605],[6014497622236959678,"opaque_debug",false,9395905032480532833],[6237156905546127309,"cpufeatures",false,7178399324854586734],[12829070662860118430,"digest",false,10218998247402525131]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha2-6068e95102dfdb90/dep-lib-sha2"}}],"rustflags":[],"metadata":13125521705435454745,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha2-dd7f72302d9b3e13/lib-sha2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":18376301184193729913,"profile":8987646332441898785,"path":14644442223518856159,"deps":[[139538228852437115,"digest",false,15806948483885855350],[2452538001284770427,"cfg_if",false,392999193206417812],[6237156905546127309,"cpufeatures",false,10664558097071203812]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha2-dd7f72302d9b3e13/dep-lib-sha2"}}],"rustflags":[],"metadata":13125521705435454745,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha2-ea998426e835b1ed/lib-sha2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":18376301184193729913,"profile":8344124108420085910,"path":14644442223518856159,"deps":[[139538228852437115,"digest",false,9274483026959282226],[2452538001284770427,"cfg_if",false,16414099455413124918],[6237156905546127309,"cpufeatures",false,7178399324854586734]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha2-ea998426e835b1ed/dep-lib-sha2"}}],"rustflags":[],"metadata":13125521705435454745,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha2-f096572c37640be2/lib-sha2.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":18376301184193729913,"profile":8987646332441898785,"path":12520063762657656477,"deps":[[2452538001284770427,"cfg_if",false,392999193206417812],[5380073082773161146,"block_buffer",false,9349288632780550870],[6014497622236959678,"opaque_debug",false,4912809525159391840],[6237156905546127309,"cpufeatures",false,10664558097071203812],[12829070662860118430,"digest",false,5422999821972481952]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha2-f096572c37640be2/dep-lib-sha2"}}],"rustflags":[],"metadata":13125521705435454745,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha3-6d374598a0e7cadc/lib-sha3.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":8349084591288270624,"profile":8987646332441898785,"path":15048252037560451785,"deps":[[139538228852437115,"digest",false,15806948483885855350],[14260985981090283487,"keccak",false,8785289861887085654]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha3-6d374598a0e7cadc/dep-lib-sha3"}}],"rustflags":[],"metadata":1773086615371866852,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/sha3-b566963241a21d94/lib-sha3.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":8349084591288270624,"profile":8344124108420085910,"path":15048252037560451785,"deps":[[139538228852437115,"digest",false,9274483026959282226],[14260985981090283487,"keccak",false,18124861395950896711]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/sha3-b566963241a21d94/dep-lib-sha3"}}],"rustflags":[],"metadata":1773086615371866852,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/signature-0b8d0e1f6e170a09/lib-signature.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":9248393232549153295,"profile":8987646332441898785,"path":11870565783156005749,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/signature-0b8d0e1f6e170a09/dep-lib-signature"}}],"rustflags":[],"metadata":3639813390204373107,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/signature-13e07755ad6ee763/lib-signature.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":9248393232549153295,"profile":8344124108420085910,"path":11870565783156005749,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/signature-13e07755ad6ee763/dep-lib-signature"}}],"rustflags":[],"metadata":3639813390204373107,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/smallvec-d1d165f9c1741c0d/lib-smallvec.json ---
{"rustc":1963664527410474588,"features":"[]","target":8772470761031067052,"profile":8987646332441898785,"path":13890139403818026422,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/smallvec-d1d165f9c1741c0d/dep-lib-smallvec"}}],"rustflags":[],"metadata":15767570753543272391,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/smallvec-e992d0c40b842ca9/lib-smallvec.json ---
{"rustc":1963664527410474588,"features":"[]","target":8772470761031067052,"profile":8344124108420085910,"path":13890139403818026422,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/smallvec-e992d0c40b842ca9/dep-lib-smallvec"}}],"rustflags":[],"metadata":15767570753543272391,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/smart-default-4bf8ce9dd2d899df/lib-smart-default.json ---
{"rustc":1963664527410474588,"features":"[]","target":1026861802505699375,"profile":8344124108420085910,"path":13107242903459191343,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/smart-default-4bf8ce9dd2d899df/dep-lib-smart-default"}}],"rustflags":[],"metadata":14558014737287565990,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/static_assertions-3b0d19dde3bac27b/lib-static_assertions.json ---
{"rustc":1963664527410474588,"features":"[]","target":6569194319579281671,"profile":8344124108420085910,"path":10126580700393186010,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/static_assertions-3b0d19dde3bac27b/dep-lib-static_assertions"}}],"rustflags":[],"metadata":16420956093413671072,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/static_assertions-c6f5b056c09e3d3c/lib-static_assertions.json ---
{"rustc":1963664527410474588,"features":"[]","target":6569194319579281671,"profile":8987646332441898785,"path":10126580700393186010,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/static_assertions-c6f5b056c09e3d3c/dep-lib-static_assertions"}}],"rustflags":[],"metadata":16420956093413671072,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/strum-0f3933cdb26e8553/lib-strum.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"std\", \"strum_macros\"]","target":420884096879218681,"profile":8987646332441898785,"path":7744996248527880622,"deps":[[1446301735678115251,"strum_macros",false,11579582739437875672]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/strum-0f3933cdb26e8553/dep-lib-strum"}}],"rustflags":[],"metadata":11680211291368566339,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/strum-c7c45693f622d054/lib-strum.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"std\", \"strum_macros\"]","target":420884096879218681,"profile":8344124108420085910,"path":7744996248527880622,"deps":[[1446301735678115251,"strum_macros",false,11579582739437875672]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/strum-c7c45693f622d054/dep-lib-strum"}}],"rustflags":[],"metadata":11680211291368566339,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/strum_macros-724a8d0e72d6a387/lib-strum_macros.json ---
{"rustc":1963664527410474588,"features":"[]","target":3739242631039805036,"profile":8344124108420085910,"path":17811217036900761378,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[2473955859471087235,"heck",false,10800276974229963392],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[8011508513125043952,"rustversion",false,3077084629191542969]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/strum_macros-724a8d0e72d6a387/dep-lib-strum_macros"}}],"rustflags":[],"metadata":11680211291368566339,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/subtle-758be4871b74541d/lib-subtle.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"i128\", \"std\"]","target":4524036504181758837,"profile":8987646332441898785,"path":16151172062002282560,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/subtle-758be4871b74541d/dep-lib-subtle"}}],"rustflags":[],"metadata":9136318916805708739,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/subtle-abb77193901dac18/lib-subtle.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"i128\", \"std\"]","target":4524036504181758837,"profile":8344124108420085910,"path":16151172062002282560,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/subtle-abb77193901dac18/dep-lib-subtle"}}],"rustflags":[],"metadata":9136318916805708739,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/syn-11a5da0f0b48f589/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[4114176108478934945,"build_script_build",false,10666228431527987415]],"local":[{"Precalculated":"1.0.99"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/syn-1770a71b91b91781/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":13294766831966498538,"profile":8344124108420085910,"path":17112112725833134457,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/syn-1770a71b91b91781/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/syn-edf657f205172511/lib-syn.json ---
{"rustc":1963664527410474588,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":12020202395954228905,"profile":8344124108420085910,"path":1811155579893772776,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"build_script_build",false,1763498068271118039],[4658667968557883043,"quote",false,3271237541615233840],[9294524838761079687,"unicode_ident",false,6168132671565892086]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/syn-edf657f205172511/dep-lib-syn"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/synstructure-c18868944e9c722f/lib-synstructure.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":1950956023439467450,"profile":8344124108420085910,"path":6182890857844728128,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[18246265509313060657,"unicode_xid",false,5335853255445243756]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/synstructure-c18868944e9c722f/dep-lib-synstructure"}}],"rustflags":[],"metadata":9580494123609316728,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/tap-1122757f3e685608/lib-tap.json ---
{"rustc":1963664527410474588,"features":"[]","target":18196292238300886791,"profile":8987646332441898785,"path":12813118236774486085,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/tap-1122757f3e685608/dep-lib-tap"}}],"rustflags":[],"metadata":6574141762495208141,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/tap-9c7870527c51d6f6/lib-tap.json ---
{"rustc":1963664527410474588,"features":"[]","target":18196292238300886791,"profile":8344124108420085910,"path":12813118236774486085,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/tap-9c7870527c51d6f6/dep-lib-tap"}}],"rustflags":[],"metadata":6574141762495208141,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/thiserror-0bc1fff07966a950/lib-thiserror.json ---
{"rustc":1963664527410474588,"features":"[]","target":17224392688990046903,"profile":8987646332441898785,"path":15707166894039191274,"deps":[[13078788847972923722,"thiserror_impl",false,264886123786601006]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/thiserror-0bc1fff07966a950/dep-lib-thiserror"}}],"rustflags":[],"metadata":11722078131081488174,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/thiserror-9bf10f440f4a5271/lib-thiserror.json ---
{"rustc":1963664527410474588,"features":"[]","target":17224392688990046903,"profile":8344124108420085910,"path":15707166894039191274,"deps":[[13078788847972923722,"thiserror_impl",false,264886123786601006]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/thiserror-9bf10f440f4a5271/dep-lib-thiserror"}}],"rustflags":[],"metadata":11722078131081488174,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/thiserror-impl-33ca139d6769aa2d/lib-thiserror-impl.json ---
{"rustc":1963664527410474588,"features":"[]","target":10035154045347681472,"profile":8344124108420085910,"path":17259128789305987747,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/thiserror-impl-33ca139d6769aa2d/dep-lib-thiserror-impl"}}],"rustflags":[],"metadata":14048383283908260854,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/time-1e4d84cc0e30f621/lib-time.json ---
{"rustc":1963664527410474588,"features":"[]","target":18260296217864427983,"profile":8344124108420085910,"path":5562793586183675284,"deps":[[332204399579859100,"libc",false,18248499529191157943]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/time-1e4d84cc0e30f621/dep-lib-time"}}],"rustflags":[],"metadata":8937303733317455548,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/time-a3bb5d539b833369/lib-time.json ---
{"rustc":1963664527410474588,"features":"[]","target":18260296217864427983,"profile":8987646332441898785,"path":5562793586183675284,"deps":[[332204399579859100,"libc",false,12952885578662856223]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/time-a3bb5d539b833369/dep-lib-time"}}],"rustflags":[],"metadata":8937303733317455548,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/toml-22e87e367b917f0f/lib-toml.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":13462643144348829615,"profile":8344124108420085910,"path":3563773021313154147,"deps":[[14036285059816747405,"serde",false,5206768074462546104]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/toml-22e87e367b917f0f/dep-lib-toml"}}],"rustflags":[],"metadata":15823223228428447826,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/typenum-1154b46cc06d14e6/lib-typenum.json ---
{"rustc":1963664527410474588,"features":"[]","target":9141277588366826021,"profile":8344124108420085910,"path":11970897487265001491,"deps":[[12624213461245346940,"build_script_main",false,5237864013203815352]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/typenum-1154b46cc06d14e6/dep-lib-typenum"}}],"rustflags":[],"metadata":5976975242777358168,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/typenum-35a48041fb3d95f7/lib-typenum.json ---
{"rustc":1963664527410474588,"features":"[]","target":9141277588366826021,"profile":8987646332441898785,"path":11970897487265001491,"deps":[[12624213461245346940,"build_script_main",false,5237864013203815352]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/typenum-35a48041fb3d95f7/dep-lib-typenum"}}],"rustflags":[],"metadata":5976975242777358168,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/typenum-54915f3ebe6f51a3/build-script-build-script-main.json ---
{"rustc":1963664527410474588,"features":"[]","target":2670629102679156082,"profile":8344124108420085910,"path":16849555766575660565,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/typenum-54915f3ebe6f51a3/dep-build-script-build-script-main"}}],"rustflags":[],"metadata":5976975242777358168,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/typenum-752424536c07b4b3/run-build-script-build-script-main.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[12624213461245346940,"build_script_main",false,3520549016811113296]],"local":[{"Precalculated":"1.15.0"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/uint-7240712dfa5ebe10/lib-uint.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":15739060535622530060,"profile":8987646332441898785,"path":8035220200373029418,"deps":[[486069622437963759,"byteorder",false,3780392657360757237],[4485243235582659819,"hex",false,4526719055568128781],[6476817338883840430,"static_assertions",false,16508089408823633268],[15144909498828475009,"crunchy",false,9475567621218230131]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/uint-7240712dfa5ebe10/dep-lib-uint"}}],"rustflags":[],"metadata":7122085937130173941,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/uint-75033e57001ae07f/lib-uint.json ---
{"rustc":1963664527410474588,"features":"[\"std\"]","target":15739060535622530060,"profile":8344124108420085910,"path":8035220200373029418,"deps":[[486069622437963759,"byteorder",false,4161840726384657771],[4485243235582659819,"hex",false,2553079809654645489],[6476817338883840430,"static_assertions",false,4683982877238169776],[15144909498828475009,"crunchy",false,3795648456154923244]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/uint-75033e57001ae07f/dep-lib-uint"}}],"rustflags":[],"metadata":7122085937130173941,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/unicode-ident-3b487932e8754b8f/lib-unicode-ident.json ---
{"rustc":1963664527410474588,"features":"[]","target":796776536126189422,"profile":8344124108420085910,"path":2733291856848635335,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/unicode-ident-3b487932e8754b8f/dep-lib-unicode-ident"}}],"rustflags":[],"metadata":1159190378059262574,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/unicode-xid-112315c40cd038ef/lib-unicode-xid.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":17221491243435642268,"profile":8344124108420085910,"path":795311619868701869,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/unicode-xid-112315c40cd038ef/dep-lib-unicode-xid"}}],"rustflags":[],"metadata":2160514635952713588,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/version_check-f2976251c744213b/lib-version_check.json ---
{"rustc":1963664527410474588,"features":"[]","target":2726911228026723764,"profile":8344124108420085910,"path":15066072318457750607,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/version_check-f2976251c744213b/dep-lib-version_check"}}],"rustflags":[],"metadata":14847206692933921638,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wee_alloc-2156f61cfe3ea655/lib-wee_alloc.json ---
{"rustc":1963664527410474588,"features":"[]","target":7410670272435617587,"profile":8987646332441898785,"path":13300467464470778750,"deps":[[332204399579859100,"libc",false,12952885578662856223],[1429323848562539564,"memory_units",false,3566669221153694056],[3178493835647231921,"build_script_build",false,14261370435691991064],[11311719388751911026,"cfg_if",false,12394957276280554299]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/wee_alloc-2156f61cfe3ea655/dep-lib-wee_alloc"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wee_alloc-6590d45792e2bd3f/lib-wee_alloc.json ---
{"rustc":1963664527410474588,"features":"[]","target":7410670272435617587,"profile":8344124108420085910,"path":13300467464470778750,"deps":[[332204399579859100,"libc",false,18248499529191157943],[1429323848562539564,"memory_units",false,16842549452103699463],[3178493835647231921,"build_script_build",false,14261370435691991064],[11311719388751911026,"cfg_if",false,8450922048676755187]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/wee_alloc-6590d45792e2bd3f/dep-lib-wee_alloc"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wee_alloc-70a35408d6872e30/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[3178493835647231921,"build_script_build",false,3944685983868885955]],"local":[{"RerunIfChanged":{"output":"debug/build/wee_alloc-70a35408d6872e30/output","paths":["./Cargo.toml","./build.rs","./src/lib.rs","./src/imp_static_array.rs"]}},{"RerunIfEnvChanged":{"var":"WEE_ALLOC_STATIC_ARRAY_BACKEND_BYTES","val":null}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wee_alloc-a3280de5f10d3683/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":2709041430195671023,"profile":8344124108420085910,"path":8449987404041412114,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/wee_alloc-a3280de5f10d3683/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wyz-1328c0857e28e219/lib-wyz.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\"]","target":6160605509345097164,"profile":8344124108420085910,"path":7790940507132396396,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/wyz-1328c0857e28e219/dep-lib-wyz"}}],"rustflags":[],"metadata":18109821273324682741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/wyz-9586f7117e22c330/lib-wyz.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\"]","target":6160605509345097164,"profile":8987646332441898785,"path":7790940507132396396,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/wyz-9586f7117e22c330/dep-lib-wyz"}}],"rustflags":[],"metadata":18109821273324682741,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/zeroize-a2c2062b1ce5ffb7/lib-zeroize.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"zeroize_derive\"]","target":12867981632844011919,"profile":8987646332441898785,"path":12227945092812526410,"deps":[[15007571075983118817,"zeroize_derive",false,16030688847797955001]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/zeroize-a2c2062b1ce5ffb7/dep-lib-zeroize"}}],"rustflags":[],"metadata":4317945585732210332,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/zeroize-b5638485fa02a50f/lib-zeroize.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"zeroize_derive\"]","target":12867981632844011919,"profile":8344124108420085910,"path":12227945092812526410,"deps":[[15007571075983118817,"zeroize_derive",false,16030688847797955001]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/zeroize-b5638485fa02a50f/dep-lib-zeroize"}}],"rustflags":[],"metadata":4317945585732210332,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/.fingerprint/zeroize_derive-048dde91e0916a48/lib-zeroize_derive.json ---
{"rustc":1963664527410474588,"features":"[]","target":1780181981675858288,"profile":8344124108420085910,"path":14284943344723254296,"deps":[[2303534799027988957,"proc_macro2",false,1260698883152500826],[4114176108478934945,"syn",false,10549874276280742374],[4658667968557883043,"quote",false,3271237541615233840],[6922375576958570836,"synstructure",false,7314790142785244338]],"local":[{"CheckDepInfo":{"dep_info":"debug/.fingerprint/zeroize_derive-048dde91e0916a48/dep-lib-zeroize_derive"}}],"rustflags":[],"metadata":7526780439083680197,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/debug/build/crunchy-2d2e62f2736c0a61/out/lib.rs ---

/// Unroll the given for loop
///
/// Example:
///
/// ```ignore
/// unroll! {
///   for i in 0..5 {
///     println!("Iteration {}", i);
///   }
/// }
/// ```
///
/// will expand into:
///
/// ```ignore
/// { println!("Iteration {}", 0); }
/// { println!("Iteration {}", 1); }
/// { println!("Iteration {}", 2); }
/// { println!("Iteration {}", 3); }
/// { println!("Iteration {}", 4); }
/// ```
#[macro_export]
macro_rules! unroll {
    (for $v:ident in 0..0 $c:block) => {};

    (for $v:ident < $max:tt in ($start:tt..$end:tt).step_by($val:expr) {$($c:tt)*}) => {
        {
            let step = $val;
            let start = $start;
            let end = start + ($end - start) / step;
            unroll! {
                for val < $max in start..end {
                    let $v: usize = ((val - start) * step) + start;

                    $($c)*
                }
            }
        }
    };

    (for $v:ident in ($start:tt..$end:tt).step_by($val:expr) {$($c:tt)*}) => {
        unroll! {
            for $v < $end in ($start..$end).step_by($val) {$($c)*}
        }
    };

    (for $v:ident in ($start:tt..$end:tt) {$($c:tt)*}) => {
        unroll!{
            for $v in $start..$end {$($c)*}
        }
    };

    (for $v:ident in $start:tt..$end:tt {$($c:tt)*}) => {
        #[allow(non_upper_case_globals)]
        #[allow(unused_comparisons)]
        {
            unroll!(@$v, 0, $end, {
                    if $v >= $start {$($c)*}
                }
            );
        }
    };

    (for $v:ident < $max:tt in $start:tt..$end:tt $c:block) => {
        #[allow(non_upper_case_globals)]
        {
            let range = $start..$end;
            assert!(
                $max >= range.end,
                "`{}` out of range `{:?}`",
                stringify!($max),
                range,
            );
            unroll!(
                @$v,
                0,
                $max,
                {
                    if $v >= range.start && $v < range.end {
                        $c
                    }
                }
            );
        }
    };

    (for $v:ident in 0..$end:tt {$($statement:tt)*}) => {
        #[allow(non_upper_case_globals)]
        { unroll!(@$v, 0, $end, {$($statement)*}); }
    };

    (@$v:ident, $a:expr, 0, $c:block) => {
        { const $v: usize = $a; $c }
    };

    (@$v:ident, $a:expr, 1, $c:block) => {
        { const $v: usize = $a; $c }
    };

    (@$v:ident, $a:expr, 2, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
    };

    (@$v:ident, $a:expr, 3, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
    };

    (@$v:ident, $a:expr, 4, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
    };

    (@$v:ident, $a:expr, 5, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
    };

    (@$v:ident, $a:expr, 6, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
    };

    (@$v:ident, $a:expr, 7, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
    };

    (@$v:ident, $a:expr, 8, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
    };

    (@$v:ident, $a:expr, 9, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
    };

    (@$v:ident, $a:expr, 10, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
    };

    (@$v:ident, $a:expr, 11, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
    };

    (@$v:ident, $a:expr, 12, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
    };

    (@$v:ident, $a:expr, 13, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
    };

    (@$v:ident, $a:expr, 14, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
    };

    (@$v:ident, $a:expr, 15, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
        { const $v: usize = $a + 14; $c }
    };

    (@$v:ident, $a:expr, 16, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
        { const $v: usize = $a + 14; $c }
        { const $v: usize = $a + 15; $c }
    };

    (@$v:ident, $a:expr, 17, $c:block) => {
        unroll!(@$v, $a, 16, $c);
        { const $v: usize = $a + 16; $c }
    };

    (@$v:ident, $a:expr, 18, $c:block) => {
        unroll!(@$v, $a, 9, $c);
        unroll!(@$v, $a + 9, 9, $c);
    };

    (@$v:ident, $a:expr, 19, $c:block) => {
        unroll!(@$v, $a, 18, $c);
        { const $v: usize = $a + 18; $c }
    };

    (@$v:ident, $a:expr, 20, $c:block) => {
        unroll!(@$v, $a, 10, $c);
        unroll!(@$v, $a + 10, 10, $c);
    };

    (@$v:ident, $a:expr, 21, $c:block) => {
        unroll!(@$v, $a, 20, $c);
        { const $v: usize = $a + 20; $c }
    };

    (@$v:ident, $a:expr, 22, $c:block) => {
        unroll!(@$v, $a, 11, $c);
        unroll!(@$v, $a + 11, 11, $c);
    };

    (@$v:ident, $a:expr, 23, $c:block) => {
        unroll!(@$v, $a, 22, $c);
        { const $v: usize = $a + 22; $c }
    };

    (@$v:ident, $a:expr, 24, $c:block) => {
        unroll!(@$v, $a, 12, $c);
        unroll!(@$v, $a + 12, 12, $c);
    };

    (@$v:ident, $a:expr, 25, $c:block) => {
        unroll!(@$v, $a, 24, $c);
        { const $v: usize = $a + 24; $c }
    };

    (@$v:ident, $a:expr, 26, $c:block) => {
        unroll!(@$v, $a, 13, $c);
        unroll!(@$v, $a + 13, 13, $c);
    };

    (@$v:ident, $a:expr, 27, $c:block) => {
        unroll!(@$v, $a, 26, $c);
        { const $v: usize = $a + 26; $c }
    };

    (@$v:ident, $a:expr, 28, $c:block) => {
        unroll!(@$v, $a, 14, $c);
        unroll!(@$v, $a + 14, 14, $c);
    };

    (@$v:ident, $a:expr, 29, $c:block) => {
        unroll!(@$v, $a, 28, $c);
        { const $v: usize = $a + 28; $c }
    };

    (@$v:ident, $a:expr, 30, $c:block) => {
        unroll!(@$v, $a, 15, $c);
        unroll!(@$v, $a + 15, 15, $c);
    };

    (@$v:ident, $a:expr, 31, $c:block) => {
        unroll!(@$v, $a, 30, $c);
        { const $v: usize = $a + 30; $c }
    };

    (@$v:ident, $a:expr, 32, $c:block) => {
        unroll!(@$v, $a, 16, $c);
        unroll!(@$v, $a + 16, 16, $c);
    };

    (@$v:ident, $a:expr, 33, $c:block) => {
        unroll!(@$v, $a, 32, $c);
        { const $v: usize = $a + 32; $c }
    };

    (@$v:ident, $a:expr, 34, $c:block) => {
        unroll!(@$v, $a, 17, $c);
        unroll!(@$v, $a + 17, 17, $c);
    };

    (@$v:ident, $a:expr, 35, $c:block) => {
        unroll!(@$v, $a, 34, $c);
        { const $v: usize = $a + 34; $c }
    };

    (@$v:ident, $a:expr, 36, $c:block) => {
        unroll!(@$v, $a, 18, $c);
        unroll!(@$v, $a + 18, 18, $c);
    };

    (@$v:ident, $a:expr, 37, $c:block) => {
        unroll!(@$v, $a, 36, $c);
        { const $v: usize = $a + 36; $c }
    };

    (@$v:ident, $a:expr, 38, $c:block) => {
        unroll!(@$v, $a, 19, $c);
        unroll!(@$v, $a + 19, 19, $c);
    };

    (@$v:ident, $a:expr, 39, $c:block) => {
        unroll!(@$v, $a, 38, $c);
        { const $v: usize = $a + 38; $c }
    };

    (@$v:ident, $a:expr, 40, $c:block) => {
        unroll!(@$v, $a, 20, $c);
        unroll!(@$v, $a + 20, 20, $c);
    };

    (@$v:ident, $a:expr, 41, $c:block) => {
        unroll!(@$v, $a, 40, $c);
        { const $v: usize = $a + 40; $c }
    };

    (@$v:ident, $a:expr, 42, $c:block) => {
        unroll!(@$v, $a, 21, $c);
        unroll!(@$v, $a + 21, 21, $c);
    };

    (@$v:ident, $a:expr, 43, $c:block) => {
        unroll!(@$v, $a, 42, $c);
        { const $v: usize = $a + 42; $c }
    };

    (@$v:ident, $a:expr, 44, $c:block) => {
        unroll!(@$v, $a, 22, $c);
        unroll!(@$v, $a + 22, 22, $c);
    };

    (@$v:ident, $a:expr, 45, $c:block) => {
        unroll!(@$v, $a, 44, $c);
        { const $v: usize = $a + 44; $c }
    };

    (@$v:ident, $a:expr, 46, $c:block) => {
        unroll!(@$v, $a, 23, $c);
        unroll!(@$v, $a + 23, 23, $c);
    };

    (@$v:ident, $a:expr, 47, $c:block) => {
        unroll!(@$v, $a, 46, $c);
        { const $v: usize = $a + 46; $c }
    };

    (@$v:ident, $a:expr, 48, $c:block) => {
        unroll!(@$v, $a, 24, $c);
        unroll!(@$v, $a + 24, 24, $c);
    };

    (@$v:ident, $a:expr, 49, $c:block) => {
        unroll!(@$v, $a, 48, $c);
        { const $v: usize = $a + 48; $c }
    };

    (@$v:ident, $a:expr, 50, $c:block) => {
        unroll!(@$v, $a, 25, $c);
        unroll!(@$v, $a + 25, 25, $c);
    };

    (@$v:ident, $a:expr, 51, $c:block) => {
        unroll!(@$v, $a, 50, $c);
        { const $v: usize = $a + 50; $c }
    };

    (@$v:ident, $a:expr, 52, $c:block) => {
        unroll!(@$v, $a, 26, $c);
        unroll!(@$v, $a + 26, 26, $c);
    };

    (@$v:ident, $a:expr, 53, $c:block) => {
        unroll!(@$v, $a, 52, $c);
        { const $v: usize = $a + 52; $c }
    };

    (@$v:ident, $a:expr, 54, $c:block) => {
        unroll!(@$v, $a, 27, $c);
        unroll!(@$v, $a + 27, 27, $c);
    };

    (@$v:ident, $a:expr, 55, $c:block) => {
        unroll!(@$v, $a, 54, $c);
        { const $v: usize = $a + 54; $c }
    };

    (@$v:ident, $a:expr, 56, $c:block) => {
        unroll!(@$v, $a, 28, $c);
        unroll!(@$v, $a + 28, 28, $c);
    };

    (@$v:ident, $a:expr, 57, $c:block) => {
        unroll!(@$v, $a, 56, $c);
        { const $v: usize = $a + 56; $c }
    };

    (@$v:ident, $a:expr, 58, $c:block) => {
        unroll!(@$v, $a, 29, $c);
        unroll!(@$v, $a + 29, 29, $c);
    };

    (@$v:ident, $a:expr, 59, $c:block) => {
        unroll!(@$v, $a, 58, $c);
        { const $v: usize = $a + 58; $c }
    };

    (@$v:ident, $a:expr, 60, $c:block) => {
        unroll!(@$v, $a, 30, $c);
        unroll!(@$v, $a + 30, 30, $c);
    };

    (@$v:ident, $a:expr, 61, $c:block) => {
        unroll!(@$v, $a, 60, $c);
        { const $v: usize = $a + 60; $c }
    };

    (@$v:ident, $a:expr, 62, $c:block) => {
        unroll!(@$v, $a, 31, $c);
        unroll!(@$v, $a + 31, 31, $c);
    };

    (@$v:ident, $a:expr, 63, $c:block) => {
        unroll!(@$v, $a, 62, $c);
        { const $v: usize = $a + 62; $c }
    };

    (@$v:ident, $a:expr, 64, $c:block) => {
        unroll!(@$v, $a, 32, $c);
        unroll!(@$v, $a + 32, 32, $c);
    };

}

#[cfg(all(test, feature = "std"))]
mod tests {
    #[test]
    fn invalid_range() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in (5..4) {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![]);
    }

    #[test]
    fn start_at_one_with_step() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in (2..4).step_by(1) {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![2, 3]);
    }

    #[test]
    fn start_at_one() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in 1..4 {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![1, 2, 3]);
    }

    #[test]
    fn test_all() {
        {
            let a: Vec<usize> = vec![];
            unroll! {
                for i in 0..0 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..0).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in 0..1 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..1).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in 0..64 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..64).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            let start = 64 / 4;
            let end = start * 3;
            unroll! {
                for i < 64 in start..end {
                    a.push(i);
                }
            }
            assert_eq!(a, (start..end).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in (0..64).step_by(2) {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..64 / 2).map(|x| x * 2).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            let start = 64 / 4;
            let end = start * 3;
            unroll! {
                for i < 64 in (start..end).step_by(2) {
                    a.push(i);
                }
            }
            assert_eq!(a, (start..end).filter(|x| x % 2 == 0).collect::<Vec<usize>>());
        }
    }
}

'''
'''--- near-election-dapp/backend/target/debug/build/num-bigint-d6f1a02feee433d9/out/radix_bases.rs ---
#[deny(overflowing_literals)]
pub(crate) static BASES_16: [(u16, usize); 257] = [
    (0, 0), // 0
    (0, 0), // 1
    (0, 0), // 2
    (59049, 10), // 3
    (0, 0), // 4
    (15625, 6), // 5
    (46656, 6), // 6
    (16807, 5), // 7
    (0, 0), // 8
    (59049, 5), // 9
    (10000, 4), // 10
    (14641, 4), // 11
    (20736, 4), // 12
    (28561, 4), // 13
    (38416, 4), // 14
    (50625, 4), // 15
    (0, 0), // 16
    (4913, 3), // 17
    (5832, 3), // 18
    (6859, 3), // 19
    (8000, 3), // 20
    (9261, 3), // 21
    (10648, 3), // 22
    (12167, 3), // 23
    (13824, 3), // 24
    (15625, 3), // 25
    (17576, 3), // 26
    (19683, 3), // 27
    (21952, 3), // 28
    (24389, 3), // 29
    (27000, 3), // 30
    (29791, 3), // 31
    (0, 0), // 32
    (35937, 3), // 33
    (39304, 3), // 34
    (42875, 3), // 35
    (46656, 3), // 36
    (50653, 3), // 37
    (54872, 3), // 38
    (59319, 3), // 39
    (64000, 3), // 40
    (1681, 2), // 41
    (1764, 2), // 42
    (1849, 2), // 43
    (1936, 2), // 44
    (2025, 2), // 45
    (2116, 2), // 46
    (2209, 2), // 47
    (2304, 2), // 48
    (2401, 2), // 49
    (2500, 2), // 50
    (2601, 2), // 51
    (2704, 2), // 52
    (2809, 2), // 53
    (2916, 2), // 54
    (3025, 2), // 55
    (3136, 2), // 56
    (3249, 2), // 57
    (3364, 2), // 58
    (3481, 2), // 59
    (3600, 2), // 60
    (3721, 2), // 61
    (3844, 2), // 62
    (3969, 2), // 63
    (0, 0), // 64
    (4225, 2), // 65
    (4356, 2), // 66
    (4489, 2), // 67
    (4624, 2), // 68
    (4761, 2), // 69
    (4900, 2), // 70
    (5041, 2), // 71
    (5184, 2), // 72
    (5329, 2), // 73
    (5476, 2), // 74
    (5625, 2), // 75
    (5776, 2), // 76
    (5929, 2), // 77
    (6084, 2), // 78
    (6241, 2), // 79
    (6400, 2), // 80
    (6561, 2), // 81
    (6724, 2), // 82
    (6889, 2), // 83
    (7056, 2), // 84
    (7225, 2), // 85
    (7396, 2), // 86
    (7569, 2), // 87
    (7744, 2), // 88
    (7921, 2), // 89
    (8100, 2), // 90
    (8281, 2), // 91
    (8464, 2), // 92
    (8649, 2), // 93
    (8836, 2), // 94
    (9025, 2), // 95
    (9216, 2), // 96
    (9409, 2), // 97
    (9604, 2), // 98
    (9801, 2), // 99
    (10000, 2), // 100
    (10201, 2), // 101
    (10404, 2), // 102
    (10609, 2), // 103
    (10816, 2), // 104
    (11025, 2), // 105
    (11236, 2), // 106
    (11449, 2), // 107
    (11664, 2), // 108
    (11881, 2), // 109
    (12100, 2), // 110
    (12321, 2), // 111
    (12544, 2), // 112
    (12769, 2), // 113
    (12996, 2), // 114
    (13225, 2), // 115
    (13456, 2), // 116
    (13689, 2), // 117
    (13924, 2), // 118
    (14161, 2), // 119
    (14400, 2), // 120
    (14641, 2), // 121
    (14884, 2), // 122
    (15129, 2), // 123
    (15376, 2), // 124
    (15625, 2), // 125
    (15876, 2), // 126
    (16129, 2), // 127
    (0, 0), // 128
    (16641, 2), // 129
    (16900, 2), // 130
    (17161, 2), // 131
    (17424, 2), // 132
    (17689, 2), // 133
    (17956, 2), // 134
    (18225, 2), // 135
    (18496, 2), // 136
    (18769, 2), // 137
    (19044, 2), // 138
    (19321, 2), // 139
    (19600, 2), // 140
    (19881, 2), // 141
    (20164, 2), // 142
    (20449, 2), // 143
    (20736, 2), // 144
    (21025, 2), // 145
    (21316, 2), // 146
    (21609, 2), // 147
    (21904, 2), // 148
    (22201, 2), // 149
    (22500, 2), // 150
    (22801, 2), // 151
    (23104, 2), // 152
    (23409, 2), // 153
    (23716, 2), // 154
    (24025, 2), // 155
    (24336, 2), // 156
    (24649, 2), // 157
    (24964, 2), // 158
    (25281, 2), // 159
    (25600, 2), // 160
    (25921, 2), // 161
    (26244, 2), // 162
    (26569, 2), // 163
    (26896, 2), // 164
    (27225, 2), // 165
    (27556, 2), // 166
    (27889, 2), // 167
    (28224, 2), // 168
    (28561, 2), // 169
    (28900, 2), // 170
    (29241, 2), // 171
    (29584, 2), // 172
    (29929, 2), // 173
    (30276, 2), // 174
    (30625, 2), // 175
    (30976, 2), // 176
    (31329, 2), // 177
    (31684, 2), // 178
    (32041, 2), // 179
    (32400, 2), // 180
    (32761, 2), // 181
    (33124, 2), // 182
    (33489, 2), // 183
    (33856, 2), // 184
    (34225, 2), // 185
    (34596, 2), // 186
    (34969, 2), // 187
    (35344, 2), // 188
    (35721, 2), // 189
    (36100, 2), // 190
    (36481, 2), // 191
    (36864, 2), // 192
    (37249, 2), // 193
    (37636, 2), // 194
    (38025, 2), // 195
    (38416, 2), // 196
    (38809, 2), // 197
    (39204, 2), // 198
    (39601, 2), // 199
    (40000, 2), // 200
    (40401, 2), // 201
    (40804, 2), // 202
    (41209, 2), // 203
    (41616, 2), // 204
    (42025, 2), // 205
    (42436, 2), // 206
    (42849, 2), // 207
    (43264, 2), // 208
    (43681, 2), // 209
    (44100, 2), // 210
    (44521, 2), // 211
    (44944, 2), // 212
    (45369, 2), // 213
    (45796, 2), // 214
    (46225, 2), // 215
    (46656, 2), // 216
    (47089, 2), // 217
    (47524, 2), // 218
    (47961, 2), // 219
    (48400, 2), // 220
    (48841, 2), // 221
    (49284, 2), // 222
    (49729, 2), // 223
    (50176, 2), // 224
    (50625, 2), // 225
    (51076, 2), // 226
    (51529, 2), // 227
    (51984, 2), // 228
    (52441, 2), // 229
    (52900, 2), // 230
    (53361, 2), // 231
    (53824, 2), // 232
    (54289, 2), // 233
    (54756, 2), // 234
    (55225, 2), // 235
    (55696, 2), // 236
    (56169, 2), // 237
    (56644, 2), // 238
    (57121, 2), // 239
    (57600, 2), // 240
    (58081, 2), // 241
    (58564, 2), // 242
    (59049, 2), // 243
    (59536, 2), // 244
    (60025, 2), // 245
    (60516, 2), // 246
    (61009, 2), // 247
    (61504, 2), // 248
    (62001, 2), // 249
    (62500, 2), // 250
    (63001, 2), // 251
    (63504, 2), // 252
    (64009, 2), // 253
    (64516, 2), // 254
    (65025, 2), // 255
    (0, 0), // 256
];
#[deny(overflowing_literals)]
pub(crate) static BASES_32: [(u32, usize); 257] = [
    (0, 0), // 0
    (0, 0), // 1
    (0, 0), // 2
    (3486784401, 20), // 3
    (0, 0), // 4
    (1220703125, 13), // 5
    (2176782336, 12), // 6
    (1977326743, 11), // 7
    (0, 0), // 8
    (3486784401, 10), // 9
    (1000000000, 9), // 10
    (2357947691, 9), // 11
    (429981696, 8), // 12
    (815730721, 8), // 13
    (1475789056, 8), // 14
    (2562890625, 8), // 15
    (0, 0), // 16
    (410338673, 7), // 17
    (612220032, 7), // 18
    (893871739, 7), // 19
    (1280000000, 7), // 20
    (1801088541, 7), // 21
    (2494357888, 7), // 22
    (3404825447, 7), // 23
    (191102976, 6), // 24
    (244140625, 6), // 25
    (308915776, 6), // 26
    (387420489, 6), // 27
    (481890304, 6), // 28
    (594823321, 6), // 29
    (729000000, 6), // 30
    (887503681, 6), // 31
    (0, 0), // 32
    (1291467969, 6), // 33
    (1544804416, 6), // 34
    (1838265625, 6), // 35
    (2176782336, 6), // 36
    (2565726409, 6), // 37
    (3010936384, 6), // 38
    (3518743761, 6), // 39
    (4096000000, 6), // 40
    (115856201, 5), // 41
    (130691232, 5), // 42
    (147008443, 5), // 43
    (164916224, 5), // 44
    (184528125, 5), // 45
    (205962976, 5), // 46
    (229345007, 5), // 47
    (254803968, 5), // 48
    (282475249, 5), // 49
    (312500000, 5), // 50
    (345025251, 5), // 51
    (380204032, 5), // 52
    (418195493, 5), // 53
    (459165024, 5), // 54
    (503284375, 5), // 55
    (550731776, 5), // 56
    (601692057, 5), // 57
    (656356768, 5), // 58
    (714924299, 5), // 59
    (777600000, 5), // 60
    (844596301, 5), // 61
    (916132832, 5), // 62
    (992436543, 5), // 63
    (0, 0), // 64
    (1160290625, 5), // 65
    (1252332576, 5), // 66
    (1350125107, 5), // 67
    (1453933568, 5), // 68
    (1564031349, 5), // 69
    (1680700000, 5), // 70
    (1804229351, 5), // 71
    (1934917632, 5), // 72
    (2073071593, 5), // 73
    (2219006624, 5), // 74
    (2373046875, 5), // 75
    (2535525376, 5), // 76
    (2706784157, 5), // 77
    (2887174368, 5), // 78
    (3077056399, 5), // 79
    (3276800000, 5), // 80
    (3486784401, 5), // 81
    (3707398432, 5), // 82
    (3939040643, 5), // 83
    (4182119424, 5), // 84
    (52200625, 4), // 85
    (54700816, 4), // 86
    (57289761, 4), // 87
    (59969536, 4), // 88
    (62742241, 4), // 89
    (65610000, 4), // 90
    (68574961, 4), // 91
    (71639296, 4), // 92
    (74805201, 4), // 93
    (78074896, 4), // 94
    (81450625, 4), // 95
    (84934656, 4), // 96
    (88529281, 4), // 97
    (92236816, 4), // 98
    (96059601, 4), // 99
    (100000000, 4), // 100
    (104060401, 4), // 101
    (108243216, 4), // 102
    (112550881, 4), // 103
    (116985856, 4), // 104
    (121550625, 4), // 105
    (126247696, 4), // 106
    (131079601, 4), // 107
    (136048896, 4), // 108
    (141158161, 4), // 109
    (146410000, 4), // 110
    (151807041, 4), // 111
    (157351936, 4), // 112
    (163047361, 4), // 113
    (168896016, 4), // 114
    (174900625, 4), // 115
    (181063936, 4), // 116
    (187388721, 4), // 117
    (193877776, 4), // 118
    (200533921, 4), // 119
    (207360000, 4), // 120
    (214358881, 4), // 121
    (221533456, 4), // 122
    (228886641, 4), // 123
    (236421376, 4), // 124
    (244140625, 4), // 125
    (252047376, 4), // 126
    (260144641, 4), // 127
    (0, 0), // 128
    (276922881, 4), // 129
    (285610000, 4), // 130
    (294499921, 4), // 131
    (303595776, 4), // 132
    (312900721, 4), // 133
    (322417936, 4), // 134
    (332150625, 4), // 135
    (342102016, 4), // 136
    (352275361, 4), // 137
    (362673936, 4), // 138
    (373301041, 4), // 139
    (384160000, 4), // 140
    (395254161, 4), // 141
    (406586896, 4), // 142
    (418161601, 4), // 143
    (429981696, 4), // 144
    (442050625, 4), // 145
    (454371856, 4), // 146
    (466948881, 4), // 147
    (479785216, 4), // 148
    (492884401, 4), // 149
    (506250000, 4), // 150
    (519885601, 4), // 151
    (533794816, 4), // 152
    (547981281, 4), // 153
    (562448656, 4), // 154
    (577200625, 4), // 155
    (592240896, 4), // 156
    (607573201, 4), // 157
    (623201296, 4), // 158
    (639128961, 4), // 159
    (655360000, 4), // 160
    (671898241, 4), // 161
    (688747536, 4), // 162
    (705911761, 4), // 163
    (723394816, 4), // 164
    (741200625, 4), // 165
    (759333136, 4), // 166
    (777796321, 4), // 167
    (796594176, 4), // 168
    (815730721, 4), // 169
    (835210000, 4), // 170
    (855036081, 4), // 171
    (875213056, 4), // 172
    (895745041, 4), // 173
    (916636176, 4), // 174
    (937890625, 4), // 175
    (959512576, 4), // 176
    (981506241, 4), // 177
    (1003875856, 4), // 178
    (1026625681, 4), // 179
    (1049760000, 4), // 180
    (1073283121, 4), // 181
    (1097199376, 4), // 182
    (1121513121, 4), // 183
    (1146228736, 4), // 184
    (1171350625, 4), // 185
    (1196883216, 4), // 186
    (1222830961, 4), // 187
    (1249198336, 4), // 188
    (1275989841, 4), // 189
    (1303210000, 4), // 190
    (1330863361, 4), // 191
    (1358954496, 4), // 192
    (1387488001, 4), // 193
    (1416468496, 4), // 194
    (1445900625, 4), // 195
    (1475789056, 4), // 196
    (1506138481, 4), // 197
    (1536953616, 4), // 198
    (1568239201, 4), // 199
    (1600000000, 4), // 200
    (1632240801, 4), // 201
    (1664966416, 4), // 202
    (1698181681, 4), // 203
    (1731891456, 4), // 204
    (1766100625, 4), // 205
    (1800814096, 4), // 206
    (1836036801, 4), // 207
    (1871773696, 4), // 208
    (1908029761, 4), // 209
    (1944810000, 4), // 210
    (1982119441, 4), // 211
    (2019963136, 4), // 212
    (2058346161, 4), // 213
    (2097273616, 4), // 214
    (2136750625, 4), // 215
    (2176782336, 4), // 216
    (2217373921, 4), // 217
    (2258530576, 4), // 218
    (2300257521, 4), // 219
    (2342560000, 4), // 220
    (2385443281, 4), // 221
    (2428912656, 4), // 222
    (2472973441, 4), // 223
    (2517630976, 4), // 224
    (2562890625, 4), // 225
    (2608757776, 4), // 226
    (2655237841, 4), // 227
    (2702336256, 4), // 228
    (2750058481, 4), // 229
    (2798410000, 4), // 230
    (2847396321, 4), // 231
    (2897022976, 4), // 232
    (2947295521, 4), // 233
    (2998219536, 4), // 234
    (3049800625, 4), // 235
    (3102044416, 4), // 236
    (3154956561, 4), // 237
    (3208542736, 4), // 238
    (3262808641, 4), // 239
    (3317760000, 4), // 240
    (3373402561, 4), // 241
    (3429742096, 4), // 242
    (3486784401, 4), // 243
    (3544535296, 4), // 244
    (3603000625, 4), // 245
    (3662186256, 4), // 246
    (3722098081, 4), // 247
    (3782742016, 4), // 248
    (3844124001, 4), // 249
    (3906250000, 4), // 250
    (3969126001, 4), // 251
    (4032758016, 4), // 252
    (4097152081, 4), // 253
    (4162314256, 4), // 254
    (4228250625, 4), // 255
    (0, 0), // 256
];
#[deny(overflowing_literals)]
pub(crate) static BASES_64: [(u64, usize); 257] = [
    (0, 0), // 0
    (0, 0), // 1
    (0, 0), // 2
    (12157665459056928801, 40), // 3
    (0, 0), // 4
    (7450580596923828125, 27), // 5
    (4738381338321616896, 24), // 6
    (3909821048582988049, 22), // 7
    (0, 0), // 8
    (12157665459056928801, 20), // 9
    (10000000000000000000, 19), // 10
    (5559917313492231481, 18), // 11
    (2218611106740436992, 17), // 12
    (8650415919381337933, 17), // 13
    (2177953337809371136, 16), // 14
    (6568408355712890625, 16), // 15
    (0, 0), // 16
    (2862423051509815793, 15), // 17
    (6746640616477458432, 15), // 18
    (15181127029874798299, 15), // 19
    (1638400000000000000, 14), // 20
    (3243919932521508681, 14), // 21
    (6221821273427820544, 14), // 22
    (11592836324538749809, 14), // 23
    (876488338465357824, 13), // 24
    (1490116119384765625, 13), // 25
    (2481152873203736576, 13), // 26
    (4052555153018976267, 13), // 27
    (6502111422497947648, 13), // 28
    (10260628712958602189, 13), // 29
    (15943230000000000000, 13), // 30
    (787662783788549761, 12), // 31
    (0, 0), // 32
    (1667889514952984961, 12), // 33
    (2386420683693101056, 12), // 34
    (3379220508056640625, 12), // 35
    (4738381338321616896, 12), // 36
    (6582952005840035281, 12), // 37
    (9065737908494995456, 12), // 38
    (12381557655576425121, 12), // 39
    (16777216000000000000, 12), // 40
    (550329031716248441, 11), // 41
    (717368321110468608, 11), // 42
    (929293739471222707, 11), // 43
    (1196683881290399744, 11), // 44
    (1532278301220703125, 11), // 45
    (1951354384207722496, 11), // 46
    (2472159215084012303, 11), // 47
    (3116402981210161152, 11), // 48
    (3909821048582988049, 11), // 49
    (4882812500000000000, 11), // 50
    (6071163615208263051, 11), // 51
    (7516865509350965248, 11), // 52
    (9269035929372191597, 11), // 53
    (11384956040305711104, 11), // 54
    (13931233916552734375, 11), // 55
    (16985107389382393856, 11), // 56
    (362033331456891249, 10), // 57
    (430804206899405824, 10), // 58
    (511116753300641401, 10), // 59
    (604661760000000000, 10), // 60
    (713342911662882601, 10), // 61
    (839299365868340224, 10), // 62
    (984930291881790849, 10), // 63
    (0, 0), // 64
    (1346274334462890625, 10), // 65
    (1568336880910795776, 10), // 66
    (1822837804551761449, 10), // 67
    (2113922820157210624, 10), // 68
    (2446194060654759801, 10), // 69
    (2824752490000000000, 10), // 70
    (3255243551009881201, 10), // 71
    (3743906242624487424, 10), // 72
    (4297625829703557649, 10), // 73
    (4923990397355877376, 10), // 74
    (5631351470947265625, 10), // 75
    (6428888932339941376, 10), // 76
    (7326680472586200649, 10), // 77
    (8335775831236199424, 10), // 78
    (9468276082626847201, 10), // 79
    (10737418240000000000, 10), // 80
    (12157665459056928801, 10), // 81
    (13744803133596058624, 10), // 82
    (15516041187205853449, 10), // 83
    (17490122876598091776, 10), // 84
    (231616946283203125, 9), // 85
    (257327417311663616, 9), // 86
    (285544154243029527, 9), // 87
    (316478381828866048, 9), // 88
    (350356403707485209, 9), // 89
    (387420489000000000, 9), // 90
    (427929800129788411, 9), // 91
    (472161363286556672, 9), // 92
    (520411082988487293, 9), // 93
    (572994802228616704, 9), // 94
    (630249409724609375, 9), // 95
    (692533995824480256, 9), // 96
    (760231058654565217, 9), // 97
    (833747762130149888, 9), // 98
    (913517247483640899, 9), // 99
    (1000000000000000000, 9), // 100
    (1093685272684360901, 9), // 101
    (1195092568622310912, 9), // 102
    (1304773183829244583, 9), // 103
    (1423311812421484544, 9), // 104
    (1551328215978515625, 9), // 105
    (1689478959002692096, 9), // 106
    (1838459212420154507, 9), // 107
    (1999004627104432128, 9), // 108
    (2171893279442309389, 9), // 109
    (2357947691000000000, 9), // 110
    (2558036924386500591, 9), // 111
    (2773078757450186752, 9), // 112
    (3004041937984268273, 9), // 113
    (3251948521156637184, 9), // 114
    (3517876291919921875, 9), // 115
    (3802961274698203136, 9), // 116
    (4108400332687853397, 9), // 117
    (4435453859151328768, 9), // 118
    (4785448563124474679, 9), // 119
    (5159780352000000000, 9), // 120
    (5559917313492231481, 9), // 121
    (5987402799531080192, 9), // 122
    (6443858614676334363, 9), // 123
    (6930988311686938624, 9), // 124
    (7450580596923828125, 9), // 125
    (8004512848309157376, 9), // 126
    (8594754748609397887, 9), // 127
    (0, 0), // 128
    (9892530380752880769, 9), // 129
    (10604499373000000000, 9), // 130
    (11361656654439817571, 9), // 131
    (12166492167065567232, 9), // 132
    (13021612539908538853, 9), // 133
    (13929745610903012864, 9), // 134
    (14893745087865234375, 9), // 135
    (15916595351771938816, 9), // 136
    (17001416405572203977, 9), // 137
    (18151468971815029248, 9), // 138
    (139353667211683681, 8), // 139
    (147578905600000000, 8), // 140
    (156225851787813921, 8), // 141
    (165312903998914816, 8), // 142
    (174859124550883201, 8), // 143
    (184884258895036416, 8), // 144
    (195408755062890625, 8), // 145
    (206453783524884736, 8), // 146
    (218041257467152161, 8), // 147
    (230193853492166656, 8), // 148
    (242935032749128801, 8), // 149
    (256289062500000000, 8), // 150
    (270281038127131201, 8), // 151
    (284936905588473856, 8), // 152
    (300283484326400961, 8), // 153
    (316348490636206336, 8), // 154
    (333160561500390625, 8), // 155
    (350749278894882816, 8), // 156
    (369145194573386401, 8), // 157
    (388379855336079616, 8), // 158
    (408485828788939521, 8), // 159
    (429496729600000000, 8), // 160
    (451447246258894081, 8), // 161
    (474373168346071296, 8), // 162
    (498311414318121121, 8), // 163
    (523300059815673856, 8), // 164
    (549378366500390625, 8), // 165
    (576586811427594496, 8), // 166
    (604967116961135041, 8), // 167
    (634562281237118976, 8), // 168
    (665416609183179841, 8), // 169
    (697575744100000000, 8), // 170
    (731086699811838561, 8), // 171
    (765997893392859136, 8), // 172
    (802359178476091681, 8), // 173
    (840221879151902976, 8), // 174
    (879638824462890625, 8), // 175
    (920664383502155776, 8), // 176
    (963354501121950081, 8), // 177
    (1007766734259732736, 8), // 178
    (1053960288888713761, 8), // 179
    (1101996057600000000, 8), // 180
    (1151936657823500641, 8), // 181
    (1203846470694789376, 8), // 182
    (1257791680575160641, 8), // 183
    (1313840315232157696, 8), // 184
    (1372062286687890625, 8), // 185
    (1432529432742502656, 8), // 186
    (1495315559180183521, 8), // 187
    (1560496482665168896, 8), // 188
    (1628150074335205281, 8), // 189
    (1698356304100000000, 8), // 190
    (1771197285652216321, 8), // 191
    (1846757322198614016, 8), // 192
    (1925122952918976001, 8), // 193
    (2006383000160502016, 8), // 194
    (2090628617375390625, 8), // 195
    (2177953337809371136, 8), // 196
    (2268453123948987361, 8), // 197
    (2362226417735475456, 8), // 198
    (2459374191553118401, 8), // 199
    (2560000000000000000, 8), // 200
    (2664210032449121601, 8), // 201
    (2772113166407885056, 8), // 202
    (2883821021683985761, 8), // 203
    (2999448015365799936, 8), // 204
    (3119111417625390625, 8), // 205
    (3242931408352297216, 8), // 206
    (3371031134626313601, 8), // 207
    (3503536769037500416, 8), // 208
    (3640577568861717121, 8), // 209
    (3782285936100000000, 8), // 210
    (3928797478390152481, 8), // 211
    (4080251070798954496, 8), // 212
    (4236788918503437921, 8), // 213
    (4398556620369715456, 8), // 214
    (4565703233437890625, 8), // 215
    (4738381338321616896, 8), // 216
    (4916747105530914241, 8), // 217
    (5100960362726891776, 8), // 218
    (5291184662917065441, 8), // 219
    (5487587353600000000, 8), // 220
    (5690339646868044961, 8), // 221
    (5899616690476974336, 8), // 222
    (6115597639891380481, 8), // 223
    (6338465731314712576, 8), // 224
    (6568408355712890625, 8), // 225
    (6805617133840466176, 8), // 226
    (7050287992278341281, 8), // 227
    (7302621240492097536, 8), // 228
    (7562821648920027361, 8), // 229
    (7831098528100000000, 8), // 230
    (8107665808844335041, 8), // 231
    (8392742123471896576, 8), // 232
    (8686550888106661441, 8), // 233
    (8989320386052055296, 8), // 234
    (9301283852250390625, 8), // 235
    (9622679558836781056, 8), // 236
    (9953750901796946721, 8), // 237
    (10294746488738365696, 8), // 238
    (10645920227784266881, 8), // 239
    (11007531417600000000, 8), // 240
    (11379844838561358721, 8), // 241
    (11763130845074473216, 8), // 242
    (12157665459056928801, 8), // 243
    (12563730464589807616, 8), // 244
    (12981613503750390625, 8), // 245
    (13411608173635297536, 8), // 246
    (13854014124583882561, 8), // 247
    (14309137159611744256, 8), // 248
    (14777289335064248001, 8), // 249
    (15258789062500000000, 8), // 250
    (15753961211814252001, 8), // 251
    (16263137215612256256, 8), // 252
    (16786655174842630561, 8), // 253
    (17324859965700833536, 8), // 254
    (17878103347812890625, 8), // 255
    (0, 0), // 256
];

'''
'''--- near-election-dapp/backend/target/debug/build/parity-secp256k1-349e4dc23eacc28d/out/flag_check.c ---
int main(void) { return 0; }
'''
'''--- near-election-dapp/backend/target/debug/build/reed-solomon-erasure-7613c8df48cd12ab/out/table.rs ---
pub static LOG_TABLE: [u8; 256] = [0, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224, 14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226, 152, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84, 250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, 254, 24, 227, 165, 153, 119, 38, 184, 180, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252, 190, 97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90, 203, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175, ];
pub static EXP_TABLE: [u8; 510] = [1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131, 27, 54, 108, 216, 173, 71, 142, 1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131, 27, 54, 108, 216, 173, 71, 142, ];
pub static MUL_TABLE: [[u8; 256]; 256] = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, ],
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 29, 31, 25, 27, 21, 23, 17, 19, 13, 15, 9, 11, 5, 7, 1, 3, 61, 63, 57, 59, 53, 55, 49, 51, 45, 47, 41, 43, 37, 39, 33, 35, 93, 95, 89, 91, 85, 87, 81, 83, 77, 79, 73, 75, 69, 71, 65, 67, 125, 127, 121, 123, 117, 119, 113, 115, 109, 111, 105, 107, 101, 103, 97, 99, 157, 159, 153, 155, 149, 151, 145, 147, 141, 143, 137, 139, 133, 135, 129, 131, 189, 191, 185, 187, 181, 183, 177, 179, 173, 175, 169, 171, 165, 167, 161, 163, 221, 223, 217, 219, 213, 215, 209, 211, 205, 207, 201, 203, 197, 199, 193, 195, 253, 255, 249, 251, 245, 247, 241, 243, 237, 239, 233, 235, 229, 231, 225, 227, ],
[0, 3, 6, 5, 12, 15, 10, 9, 24, 27, 30, 29, 20, 23, 18, 17, 48, 51, 54, 53, 60, 63, 58, 57, 40, 43, 46, 45, 36, 39, 34, 33, 96, 99, 102, 101, 108, 111, 106, 105, 120, 123, 126, 125, 116, 119, 114, 113, 80, 83, 86, 85, 92, 95, 90, 89, 72, 75, 78, 77, 68, 71, 66, 65, 192, 195, 198, 197, 204, 207, 202, 201, 216, 219, 222, 221, 212, 215, 210, 209, 240, 243, 246, 245, 252, 255, 250, 249, 232, 235, 238, 237, 228, 231, 226, 225, 160, 163, 166, 165, 172, 175, 170, 169, 184, 187, 190, 189, 180, 183, 178, 177, 144, 147, 150, 149, 156, 159, 154, 153, 136, 139, 142, 141, 132, 135, 130, 129, 157, 158, 155, 152, 145, 146, 151, 148, 133, 134, 131, 128, 137, 138, 143, 140, 173, 174, 171, 168, 161, 162, 167, 164, 181, 182, 179, 176, 185, 186, 191, 188, 253, 254, 251, 248, 241, 242, 247, 244, 229, 230, 227, 224, 233, 234, 239, 236, 205, 206, 203, 200, 193, 194, 199, 196, 213, 214, 211, 208, 217, 218, 223, 220, 93, 94, 91, 88, 81, 82, 87, 84, 69, 70, 67, 64, 73, 74, 79, 76, 109, 110, 107, 104, 97, 98, 103, 100, 117, 118, 115, 112, 121, 122, 127, 124, 61, 62, 59, 56, 49, 50, 55, 52, 37, 38, 35, 32, 41, 42, 47, 44, 13, 14, 11, 8, 1, 2, 7, 4, 21, 22, 19, 16, 25, 26, 31, 28, ],
[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 29, 25, 21, 17, 13, 9, 5, 1, 61, 57, 53, 49, 45, 41, 37, 33, 93, 89, 85, 81, 77, 73, 69, 65, 125, 121, 117, 113, 109, 105, 101, 97, 157, 153, 149, 145, 141, 137, 133, 129, 189, 185, 181, 177, 173, 169, 165, 161, 221, 217, 213, 209, 205, 201, 197, 193, 253, 249, 245, 241, 237, 233, 229, 225, 58, 62, 50, 54, 42, 46, 34, 38, 26, 30, 18, 22, 10, 14, 2, 6, 122, 126, 114, 118, 106, 110, 98, 102, 90, 94, 82, 86, 74, 78, 66, 70, 186, 190, 178, 182, 170, 174, 162, 166, 154, 158, 146, 150, 138, 142, 130, 134, 250, 254, 242, 246, 234, 238, 226, 230, 218, 222, 210, 214, 202, 206, 194, 198, 39, 35, 47, 43, 55, 51, 63, 59, 7, 3, 15, 11, 23, 19, 31, 27, 103, 99, 111, 107, 119, 115, 127, 123, 71, 67, 79, 75, 87, 83, 95, 91, 167, 163, 175, 171, 183, 179, 191, 187, 135, 131, 143, 139, 151, 147, 159, 155, 231, 227, 239, 235, 247, 243, 255, 251, 199, 195, 207, 203, 215, 211, 223, 219, ],
[0, 5, 10, 15, 20, 17, 30, 27, 40, 45, 34, 39, 60, 57, 54, 51, 80, 85, 90, 95, 68, 65, 78, 75, 120, 125, 114, 119, 108, 105, 102, 99, 160, 165, 170, 175, 180, 177, 190, 187, 136, 141, 130, 135, 156, 153, 150, 147, 240, 245, 250, 255, 228, 225, 238, 235, 216, 221, 210, 215, 204, 201, 198, 195, 93, 88, 87, 82, 73, 76, 67, 70, 117, 112, 127, 122, 97, 100, 107, 110, 13, 8, 7, 2, 25, 28, 19, 22, 37, 32, 47, 42, 49, 52, 59, 62, 253, 248, 247, 242, 233, 236, 227, 230, 213, 208, 223, 218, 193, 196, 203, 206, 173, 168, 167, 162, 185, 188, 179, 182, 133, 128, 143, 138, 145, 148, 155, 158, 186, 191, 176, 181, 174, 171, 164, 161, 146, 151, 152, 157, 134, 131, 140, 137, 234, 239, 224, 229, 254, 251, 244, 241, 194, 199, 200, 205, 214, 211, 220, 217, 26, 31, 16, 21, 14, 11, 4, 1, 50, 55, 56, 61, 38, 35, 44, 41, 74, 79, 64, 69, 94, 91, 84, 81, 98, 103, 104, 109, 118, 115, 124, 121, 231, 226, 237, 232, 243, 246, 249, 252, 207, 202, 197, 192, 219, 222, 209, 212, 183, 178, 189, 184, 163, 166, 169, 172, 159, 154, 149, 144, 139, 142, 129, 132, 71, 66, 77, 72, 83, 86, 89, 92, 111, 106, 101, 96, 123, 126, 113, 116, 23, 18, 29, 24, 3, 6, 9, 12, 63, 58, 53, 48, 43, 46, 33, 36, ],
[0, 6, 12, 10, 24, 30, 20, 18, 48, 54, 60, 58, 40, 46, 36, 34, 96, 102, 108, 106, 120, 126, 116, 114, 80, 86, 92, 90, 72, 78, 68, 66, 192, 198, 204, 202, 216, 222, 212, 210, 240, 246, 252, 250, 232, 238, 228, 226, 160, 166, 172, 170, 184, 190, 180, 178, 144, 150, 156, 154, 136, 142, 132, 130, 157, 155, 145, 151, 133, 131, 137, 143, 173, 171, 161, 167, 181, 179, 185, 191, 253, 251, 241, 247, 229, 227, 233, 239, 205, 203, 193, 199, 213, 211, 217, 223, 93, 91, 81, 87, 69, 67, 73, 79, 109, 107, 97, 103, 117, 115, 121, 127, 61, 59, 49, 55, 37, 35, 41, 47, 13, 11, 1, 7, 21, 19, 25, 31, 39, 33, 43, 45, 63, 57, 51, 53, 23, 17, 27, 29, 15, 9, 3, 5, 71, 65, 75, 77, 95, 89, 83, 85, 119, 113, 123, 125, 111, 105, 99, 101, 231, 225, 235, 237, 255, 249, 243, 245, 215, 209, 219, 221, 207, 201, 195, 197, 135, 129, 139, 141, 159, 153, 147, 149, 183, 177, 187, 189, 175, 169, 163, 165, 186, 188, 182, 176, 162, 164, 174, 168, 138, 140, 134, 128, 146, 148, 158, 152, 218, 220, 214, 208, 194, 196, 206, 200, 234, 236, 230, 224, 242, 244, 254, 248, 122, 124, 118, 112, 98, 100, 110, 104, 74, 76, 70, 64, 82, 84, 94, 88, 26, 28, 22, 16, 2, 4, 14, 8, 42, 44, 38, 32, 50, 52, 62, 56, ],
[0, 7, 14, 9, 28, 27, 18, 21, 56, 63, 54, 49, 36, 35, 42, 45, 112, 119, 126, 121, 108, 107, 98, 101, 72, 79, 70, 65, 84, 83, 90, 93, 224, 231, 238, 233, 252, 251, 242, 245, 216, 223, 214, 209, 196, 195, 202, 205, 144, 151, 158, 153, 140, 139, 130, 133, 168, 175, 166, 161, 180, 179, 186, 189, 221, 218, 211, 212, 193, 198, 207, 200, 229, 226, 235, 236, 249, 254, 247, 240, 173, 170, 163, 164, 177, 182, 191, 184, 149, 146, 155, 156, 137, 142, 135, 128, 61, 58, 51, 52, 33, 38, 47, 40, 5, 2, 11, 12, 25, 30, 23, 16, 77, 74, 67, 68, 81, 86, 95, 88, 117, 114, 123, 124, 105, 110, 103, 96, 167, 160, 169, 174, 187, 188, 181, 178, 159, 152, 145, 150, 131, 132, 141, 138, 215, 208, 217, 222, 203, 204, 197, 194, 239, 232, 225, 230, 243, 244, 253, 250, 71, 64, 73, 78, 91, 92, 85, 82, 127, 120, 113, 118, 99, 100, 109, 106, 55, 48, 57, 62, 43, 44, 37, 34, 15, 8, 1, 6, 19, 20, 29, 26, 122, 125, 116, 115, 102, 97, 104, 111, 66, 69, 76, 75, 94, 89, 80, 87, 10, 13, 4, 3, 22, 17, 24, 31, 50, 53, 60, 59, 46, 41, 32, 39, 154, 157, 148, 147, 134, 129, 136, 143, 162, 165, 172, 171, 190, 185, 176, 183, 234, 237, 228, 227, 246, 241, 248, 255, 210, 213, 220, 219, 206, 201, 192, 199, ],
[0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 29, 21, 13, 5, 61, 53, 45, 37, 93, 85, 77, 69, 125, 117, 109, 101, 157, 149, 141, 133, 189, 181, 173, 165, 221, 213, 205, 197, 253, 245, 237, 229, 58, 50, 42, 34, 26, 18, 10, 2, 122, 114, 106, 98, 90, 82, 74, 66, 186, 178, 170, 162, 154, 146, 138, 130, 250, 242, 234, 226, 218, 210, 202, 194, 39, 47, 55, 63, 7, 15, 23, 31, 103, 111, 119, 127, 71, 79, 87, 95, 167, 175, 183, 191, 135, 143, 151, 159, 231, 239, 247, 255, 199, 207, 215, 223, 116, 124, 100, 108, 84, 92, 68, 76, 52, 60, 36, 44, 20, 28, 4, 12, 244, 252, 228, 236, 212, 220, 196, 204, 180, 188, 164, 172, 148, 156, 132, 140, 105, 97, 121, 113, 73, 65, 89, 81, 41, 33, 57, 49, 9, 1, 25, 17, 233, 225, 249, 241, 201, 193, 217, 209, 169, 161, 185, 177, 137, 129, 153, 145, 78, 70, 94, 86, 110, 102, 126, 118, 14, 6, 30, 22, 46, 38, 62, 54, 206, 198, 222, 214, 238, 230, 254, 246, 142, 134, 158, 150, 174, 166, 190, 182, 83, 91, 67, 75, 115, 123, 99, 107, 19, 27, 3, 11, 51, 59, 35, 43, 211, 219, 195, 203, 243, 251, 227, 235, 147, 155, 131, 139, 179, 187, 163, 171, ],
[0, 9, 18, 27, 36, 45, 54, 63, 72, 65, 90, 83, 108, 101, 126, 119, 144, 153, 130, 139, 180, 189, 166, 175, 216, 209, 202, 195, 252, 245, 238, 231, 61, 52, 47, 38, 25, 16, 11, 2, 117, 124, 103, 110, 81, 88, 67, 74, 173, 164, 191, 182, 137, 128, 155, 146, 229, 236, 247, 254, 193, 200, 211, 218, 122, 115, 104, 97, 94, 87, 76, 69, 50, 59, 32, 41, 22, 31, 4, 13, 234, 227, 248, 241, 206, 199, 220, 213, 162, 171, 176, 185, 134, 143, 148, 157, 71, 78, 85, 92, 99, 106, 113, 120, 15, 6, 29, 20, 43, 34, 57, 48, 215, 222, 197, 204, 243, 250, 225, 232, 159, 150, 141, 132, 187, 178, 169, 160, 244, 253, 230, 239, 208, 217, 194, 203, 188, 181, 174, 167, 152, 145, 138, 131, 100, 109, 118, 127, 64, 73, 82, 91, 44, 37, 62, 55, 8, 1, 26, 19, 201, 192, 219, 210, 237, 228, 255, 246, 129, 136, 147, 154, 165, 172, 183, 190, 89, 80, 75, 66, 125, 116, 111, 102, 17, 24, 3, 10, 53, 60, 39, 46, 142, 135, 156, 149, 170, 163, 184, 177, 198, 207, 212, 221, 226, 235, 240, 249, 30, 23, 12, 5, 58, 51, 40, 33, 86, 95, 68, 77, 114, 123, 96, 105, 179, 186, 161, 168, 151, 158, 133, 140, 251, 242, 233, 224, 223, 214, 205, 196, 35, 42, 49, 56, 7, 14, 21, 28, 107, 98, 121, 112, 79, 70, 93, 84, ],
[0, 10, 20, 30, 40, 34, 60, 54, 80, 90, 68, 78, 120, 114, 108, 102, 160, 170, 180, 190, 136, 130, 156, 150, 240, 250, 228, 238, 216, 210, 204, 198, 93, 87, 73, 67, 117, 127, 97, 107, 13, 7, 25, 19, 37, 47, 49, 59, 253, 247, 233, 227, 213, 223, 193, 203, 173, 167, 185, 179, 133, 143, 145, 155, 186, 176, 174, 164, 146, 152, 134, 140, 234, 224, 254, 244, 194, 200, 214, 220, 26, 16, 14, 4, 50, 56, 38, 44, 74, 64, 94, 84, 98, 104, 118, 124, 231, 237, 243, 249, 207, 197, 219, 209, 183, 189, 163, 169, 159, 149, 139, 129, 71, 77, 83, 89, 111, 101, 123, 113, 23, 29, 3, 9, 63, 53, 43, 33, 105, 99, 125, 119, 65, 75, 85, 95, 57, 51, 45, 39, 17, 27, 5, 15, 201, 195, 221, 215, 225, 235, 245, 255, 153, 147, 141, 135, 177, 187, 165, 175, 52, 62, 32, 42, 28, 22, 8, 2, 100, 110, 112, 122, 76, 70, 88, 82, 148, 158, 128, 138, 188, 182, 168, 162, 196, 206, 208, 218, 236, 230, 248, 242, 211, 217, 199, 205, 251, 241, 239, 229, 131, 137, 151, 157, 171, 161, 191, 181, 115, 121, 103, 109, 91, 81, 79, 69, 35, 41, 55, 61, 11, 1, 31, 21, 142, 132, 154, 144, 166, 172, 178, 184, 222, 212, 202, 192, 246, 252, 226, 232, 46, 36, 58, 48, 6, 12, 18, 24, 126, 116, 106, 96, 86, 92, 66, 72, ],
[0, 11, 22, 29, 44, 39, 58, 49, 88, 83, 78, 69, 116, 127, 98, 105, 176, 187, 166, 173, 156, 151, 138, 129, 232, 227, 254, 245, 196, 207, 210, 217, 125, 118, 107, 96, 81, 90, 71, 76, 37, 46, 51, 56, 9, 2, 31, 20, 205, 198, 219, 208, 225, 234, 247, 252, 149, 158, 131, 136, 185, 178, 175, 164, 250, 241, 236, 231, 214, 221, 192, 203, 162, 169, 180, 191, 142, 133, 152, 147, 74, 65, 92, 87, 102, 109, 112, 123, 18, 25, 4, 15, 62, 53, 40, 35, 135, 140, 145, 154, 171, 160, 189, 182, 223, 212, 201, 194, 243, 248, 229, 238, 55, 60, 33, 42, 27, 16, 13, 6, 111, 100, 121, 114, 67, 72, 85, 94, 233, 226, 255, 244, 197, 206, 211, 216, 177, 186, 167, 172, 157, 150, 139, 128, 89, 82, 79, 68, 117, 126, 99, 104, 1, 10, 23, 28, 45, 38, 59, 48, 148, 159, 130, 137, 184, 179, 174, 165, 204, 199, 218, 209, 224, 235, 246, 253, 36, 47, 50, 57, 8, 3, 30, 21, 124, 119, 106, 97, 80, 91, 70, 77, 19, 24, 5, 14, 63, 52, 41, 34, 75, 64, 93, 86, 103, 108, 113, 122, 163, 168, 181, 190, 143, 132, 153, 146, 251, 240, 237, 230, 215, 220, 193, 202, 110, 101, 120, 115, 66, 73, 84, 95, 54, 61, 32, 43, 26, 17, 12, 7, 222, 213, 200, 195, 242, 249, 228, 239, 134, 141, 144, 155, 170, 161, 188, 183, ],
[0, 12, 24, 20, 48, 60, 40, 36, 96, 108, 120, 116, 80, 92, 72, 68, 192, 204, 216, 212, 240, 252, 232, 228, 160, 172, 184, 180, 144, 156, 136, 132, 157, 145, 133, 137, 173, 161, 181, 185, 253, 241, 229, 233, 205, 193, 213, 217, 93, 81, 69, 73, 109, 97, 117, 121, 61, 49, 37, 41, 13, 1, 21, 25, 39, 43, 63, 51, 23, 27, 15, 3, 71, 75, 95, 83, 119, 123, 111, 99, 231, 235, 255, 243, 215, 219, 207, 195, 135, 139, 159, 147, 183, 187, 175, 163, 186, 182, 162, 174, 138, 134, 146, 158, 218, 214, 194, 206, 234, 230, 242, 254, 122, 118, 98, 110, 74, 70, 82, 94, 26, 22, 2, 14, 42, 38, 50, 62, 78, 66, 86, 90, 126, 114, 102, 106, 46, 34, 54, 58, 30, 18, 6, 10, 142, 130, 150, 154, 190, 178, 166, 170, 238, 226, 246, 250, 222, 210, 198, 202, 211, 223, 203, 199, 227, 239, 251, 247, 179, 191, 171, 167, 131, 143, 155, 151, 19, 31, 11, 7, 35, 47, 59, 55, 115, 127, 107, 103, 67, 79, 91, 87, 105, 101, 113, 125, 89, 85, 65, 77, 9, 5, 17, 29, 57, 53, 33, 45, 169, 165, 177, 189, 153, 149, 129, 141, 201, 197, 209, 221, 249, 245, 225, 237, 244, 248, 236, 224, 196, 200, 220, 208, 148, 152, 140, 128, 164, 168, 188, 176, 52, 56, 44, 32, 4, 8, 28, 16, 84, 88, 76, 64, 100, 104, 124, 112, ],
[0, 13, 26, 23, 52, 57, 46, 35, 104, 101, 114, 127, 92, 81, 70, 75, 208, 221, 202, 199, 228, 233, 254, 243, 184, 181, 162, 175, 140, 129, 150, 155, 189, 176, 167, 170, 137, 132, 147, 158, 213, 216, 207, 194, 225, 236, 251, 246, 109, 96, 119, 122, 89, 84, 67, 78, 5, 8, 31, 18, 49, 60, 43, 38, 103, 106, 125, 112, 83, 94, 73, 68, 15, 2, 21, 24, 59, 54, 33, 44, 183, 186, 173, 160, 131, 142, 153, 148, 223, 210, 197, 200, 235, 230, 241, 252, 218, 215, 192, 205, 238, 227, 244, 249, 178, 191, 168, 165, 134, 139, 156, 145, 10, 7, 16, 29, 62, 51, 36, 41, 98, 111, 120, 117, 86, 91, 76, 65, 206, 195, 212, 217, 250, 247, 224, 237, 166, 171, 188, 177, 146, 159, 136, 133, 30, 19, 4, 9, 42, 39, 48, 61, 118, 123, 108, 97, 66, 79, 88, 85, 115, 126, 105, 100, 71, 74, 93, 80, 27, 22, 1, 12, 47, 34, 53, 56, 163, 174, 185, 180, 151, 154, 141, 128, 203, 198, 209, 220, 255, 242, 229, 232, 169, 164, 179, 190, 157, 144, 135, 138, 193, 204, 219, 214, 245, 248, 239, 226, 121, 116, 99, 110, 77, 64, 87, 90, 17, 28, 11, 6, 37, 40, 63, 50, 20, 25, 14, 3, 32, 45, 58, 55, 124, 113, 102, 107, 72, 69, 82, 95, 196, 201, 222, 211, 240, 253, 234, 231, 172, 161, 182, 187, 152, 149, 130, 143, ],
[0, 14, 28, 18, 56, 54, 36, 42, 112, 126, 108, 98, 72, 70, 84, 90, 224, 238, 252, 242, 216, 214, 196, 202, 144, 158, 140, 130, 168, 166, 180, 186, 221, 211, 193, 207, 229, 235, 249, 247, 173, 163, 177, 191, 149, 155, 137, 135, 61, 51, 33, 47, 5, 11, 25, 23, 77, 67, 81, 95, 117, 123, 105, 103, 167, 169, 187, 181, 159, 145, 131, 141, 215, 217, 203, 197, 239, 225, 243, 253, 71, 73, 91, 85, 127, 113, 99, 109, 55, 57, 43, 37, 15, 1, 19, 29, 122, 116, 102, 104, 66, 76, 94, 80, 10, 4, 22, 24, 50, 60, 46, 32, 154, 148, 134, 136, 162, 172, 190, 176, 234, 228, 246, 248, 210, 220, 206, 192, 83, 93, 79, 65, 107, 101, 119, 121, 35, 45, 63, 49, 27, 21, 7, 9, 179, 189, 175, 161, 139, 133, 151, 153, 195, 205, 223, 209, 251, 245, 231, 233, 142, 128, 146, 156, 182, 184, 170, 164, 254, 240, 226, 236, 198, 200, 218, 212, 110, 96, 114, 124, 86, 88, 74, 68, 30, 16, 2, 12, 38, 40, 58, 52, 244, 250, 232, 230, 204, 194, 208, 222, 132, 138, 152, 150, 188, 178, 160, 174, 20, 26, 8, 6, 44, 34, 48, 62, 100, 106, 120, 118, 92, 82, 64, 78, 41, 39, 53, 59, 17, 31, 13, 3, 89, 87, 69, 75, 97, 111, 125, 115, 201, 199, 213, 219, 241, 255, 237, 227, 185, 183, 165, 171, 129, 143, 157, 147, ],
[0, 15, 30, 17, 60, 51, 34, 45, 120, 119, 102, 105, 68, 75, 90, 85, 240, 255, 238, 225, 204, 195, 210, 221, 136, 135, 150, 153, 180, 187, 170, 165, 253, 242, 227, 236, 193, 206, 223, 208, 133, 138, 155, 148, 185, 182, 167, 168, 13, 2, 19, 28, 49, 62, 47, 32, 117, 122, 107, 100, 73, 70, 87, 88, 231, 232, 249, 246, 219, 212, 197, 202, 159, 144, 129, 142, 163, 172, 189, 178, 23, 24, 9, 6, 43, 36, 53, 58, 111, 96, 113, 126, 83, 92, 77, 66, 26, 21, 4, 11, 38, 41, 56, 55, 98, 109, 124, 115, 94, 81, 64, 79, 234, 229, 244, 251, 214, 217, 200, 199, 146, 157, 140, 131, 174, 161, 176, 191, 211, 220, 205, 194, 239, 224, 241, 254, 171, 164, 181, 186, 151, 152, 137, 134, 35, 44, 61, 50, 31, 16, 1, 14, 91, 84, 69, 74, 103, 104, 121, 118, 46, 33, 48, 63, 18, 29, 12, 3, 86, 89, 72, 71, 106, 101, 116, 123, 222, 209, 192, 207, 226, 237, 252, 243, 166, 169, 184, 183, 154, 149, 132, 139, 52, 59, 42, 37, 8, 7, 22, 25, 76, 67, 82, 93, 112, 127, 110, 97, 196, 203, 218, 213, 248, 247, 230, 233, 188, 179, 162, 173, 128, 143, 158, 145, 201, 198, 215, 216, 245, 250, 235, 228, 177, 190, 175, 160, 141, 130, 147, 156, 57, 54, 39, 40, 5, 10, 27, 20, 65, 78, 95, 80, 125, 114, 99, 108, ],
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 29, 13, 61, 45, 93, 77, 125, 109, 157, 141, 189, 173, 221, 205, 253, 237, 58, 42, 26, 10, 122, 106, 90, 74, 186, 170, 154, 138, 250, 234, 218, 202, 39, 55, 7, 23, 103, 119, 71, 87, 167, 183, 135, 151, 231, 247, 199, 215, 116, 100, 84, 68, 52, 36, 20, 4, 244, 228, 212, 196, 180, 164, 148, 132, 105, 121, 73, 89, 41, 57, 9, 25, 233, 249, 201, 217, 169, 185, 137, 153, 78, 94, 110, 126, 14, 30, 46, 62, 206, 222, 238, 254, 142, 158, 174, 190, 83, 67, 115, 99, 19, 3, 51, 35, 211, 195, 243, 227, 147, 131, 179, 163, 232, 248, 200, 216, 168, 184, 136, 152, 104, 120, 72, 88, 40, 56, 8, 24, 245, 229, 213, 197, 181, 165, 149, 133, 117, 101, 85, 69, 53, 37, 21, 5, 210, 194, 242, 226, 146, 130, 178, 162, 82, 66, 114, 98, 18, 2, 50, 34, 207, 223, 239, 255, 143, 159, 175, 191, 79, 95, 111, 127, 15, 31, 47, 63, 156, 140, 188, 172, 220, 204, 252, 236, 28, 12, 60, 44, 92, 76, 124, 108, 129, 145, 161, 177, 193, 209, 225, 241, 1, 17, 33, 49, 65, 81, 97, 113, 166, 182, 134, 150, 230, 246, 198, 214, 38, 54, 6, 22, 102, 118, 70, 86, 187, 171, 155, 139, 251, 235, 219, 203, 59, 43, 27, 11, 123, 107, 91, 75, ],
[0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 13, 28, 47, 62, 73, 88, 107, 122, 133, 148, 167, 182, 193, 208, 227, 242, 26, 11, 56, 41, 94, 79, 124, 109, 146, 131, 176, 161, 214, 199, 244, 229, 23, 6, 53, 36, 83, 66, 113, 96, 159, 142, 189, 172, 219, 202, 249, 232, 52, 37, 22, 7, 112, 97, 82, 67, 188, 173, 158, 143, 248, 233, 218, 203, 57, 40, 27, 10, 125, 108, 95, 78, 177, 160, 147, 130, 245, 228, 215, 198, 46, 63, 12, 29, 106, 123, 72, 89, 166, 183, 132, 149, 226, 243, 192, 209, 35, 50, 1, 16, 103, 118, 69, 84, 171, 186, 137, 152, 239, 254, 205, 220, 104, 121, 74, 91, 44, 61, 14, 31, 224, 241, 194, 211, 164, 181, 134, 151, 101, 116, 71, 86, 33, 48, 3, 18, 237, 252, 207, 222, 169, 184, 139, 154, 114, 99, 80, 65, 54, 39, 20, 5, 250, 235, 216, 201, 190, 175, 156, 141, 127, 110, 93, 76, 59, 42, 25, 8, 247, 230, 213, 196, 179, 162, 145, 128, 92, 77, 126, 111, 24, 9, 58, 43, 212, 197, 246, 231, 144, 129, 178, 163, 81, 64, 115, 98, 21, 4, 55, 38, 217, 200, 251, 234, 157, 140, 191, 174, 70, 87, 100, 117, 2, 19, 32, 49, 206, 223, 236, 253, 138, 155, 168, 185, 75, 90, 105, 120, 15, 30, 45, 60, 195, 210, 225, 240, 135, 150, 165, 180, ],
[0, 18, 36, 54, 72, 90, 108, 126, 144, 130, 180, 166, 216, 202, 252, 238, 61, 47, 25, 11, 117, 103, 81, 67, 173, 191, 137, 155, 229, 247, 193, 211, 122, 104, 94, 76, 50, 32, 22, 4, 234, 248, 206, 220, 162, 176, 134, 148, 71, 85, 99, 113, 15, 29, 43, 57, 215, 197, 243, 225, 159, 141, 187, 169, 244, 230, 208, 194, 188, 174, 152, 138, 100, 118, 64, 82, 44, 62, 8, 26, 201, 219, 237, 255, 129, 147, 165, 183, 89, 75, 125, 111, 17, 3, 53, 39, 142, 156, 170, 184, 198, 212, 226, 240, 30, 12, 58, 40, 86, 68, 114, 96, 179, 161, 151, 133, 251, 233, 223, 205, 35, 49, 7, 21, 107, 121, 79, 93, 245, 231, 209, 195, 189, 175, 153, 139, 101, 119, 65, 83, 45, 63, 9, 27, 200, 218, 236, 254, 128, 146, 164, 182, 88, 74, 124, 110, 16, 2, 52, 38, 143, 157, 171, 185, 199, 213, 227, 241, 31, 13, 59, 41, 87, 69, 115, 97, 178, 160, 150, 132, 250, 232, 222, 204, 34, 48, 6, 20, 106, 120, 78, 92, 1, 19, 37, 55, 73, 91, 109, 127, 145, 131, 181, 167, 217, 203, 253, 239, 60, 46, 24, 10, 116, 102, 80, 66, 172, 190, 136, 154, 228, 246, 192, 210, 123, 105, 95, 77, 51, 33, 23, 5, 235, 249, 207, 221, 163, 177, 135, 149, 70, 84, 98, 112, 14, 28, 42, 56, 214, 196, 242, 224, 158, 140, 186, 168, ],
[0, 19, 38, 53, 76, 95, 106, 121, 152, 139, 190, 173, 212, 199, 242, 225, 45, 62, 11, 24, 97, 114, 71, 84, 181, 166, 147, 128, 249, 234, 223, 204, 90, 73, 124, 111, 22, 5, 48, 35, 194, 209, 228, 247, 142, 157, 168, 187, 119, 100, 81, 66, 59, 40, 29, 14, 239, 252, 201, 218, 163, 176, 133, 150, 180, 167, 146, 129, 248, 235, 222, 205, 44, 63, 10, 25, 96, 115, 70, 85, 153, 138, 191, 172, 213, 198, 243, 224, 1, 18, 39, 52, 77, 94, 107, 120, 238, 253, 200, 219, 162, 177, 132, 151, 118, 101, 80, 67, 58, 41, 28, 15, 195, 208, 229, 246, 143, 156, 169, 186, 91, 72, 125, 110, 23, 4, 49, 34, 117, 102, 83, 64, 57, 42, 31, 12, 237, 254, 203, 216, 161, 178, 135, 148, 88, 75, 126, 109, 20, 7, 50, 33, 192, 211, 230, 245, 140, 159, 170, 185, 47, 60, 9, 26, 99, 112, 69, 86, 183, 164, 145, 130, 251, 232, 221, 206, 2, 17, 36, 55, 78, 93, 104, 123, 154, 137, 188, 175, 214, 197, 240, 227, 193, 210, 231, 244, 141, 158, 171, 184, 89, 74, 127, 108, 21, 6, 51, 32, 236, 255, 202, 217, 160, 179, 134, 149, 116, 103, 82, 65, 56, 43, 30, 13, 155, 136, 189, 174, 215, 196, 241, 226, 3, 16, 37, 54, 79, 92, 105, 122, 182, 165, 144, 131, 250, 233, 220, 207, 46, 61, 8, 27, 98, 113, 68, 87, ],
[0, 20, 40, 60, 80, 68, 120, 108, 160, 180, 136, 156, 240, 228, 216, 204, 93, 73, 117, 97, 13, 25, 37, 49, 253, 233, 213, 193, 173, 185, 133, 145, 186, 174, 146, 134, 234, 254, 194, 214, 26, 14, 50, 38, 74, 94, 98, 118, 231, 243, 207, 219, 183, 163, 159, 139, 71, 83, 111, 123, 23, 3, 63, 43, 105, 125, 65, 85, 57, 45, 17, 5, 201, 221, 225, 245, 153, 141, 177, 165, 52, 32, 28, 8, 100, 112, 76, 88, 148, 128, 188, 168, 196, 208, 236, 248, 211, 199, 251, 239, 131, 151, 171, 191, 115, 103, 91, 79, 35, 55, 11, 31, 142, 154, 166, 178, 222, 202, 246, 226, 46, 58, 6, 18, 126, 106, 86, 66, 210, 198, 250, 238, 130, 150, 170, 190, 114, 102, 90, 78, 34, 54, 10, 30, 143, 155, 167, 179, 223, 203, 247, 227, 47, 59, 7, 19, 127, 107, 87, 67, 104, 124, 64, 84, 56, 44, 16, 4, 200, 220, 224, 244, 152, 140, 176, 164, 53, 33, 29, 9, 101, 113, 77, 89, 149, 129, 189, 169, 197, 209, 237, 249, 187, 175, 147, 135, 235, 255, 195, 215, 27, 15, 51, 39, 75, 95, 99, 119, 230, 242, 206, 218, 182, 162, 158, 138, 70, 82, 110, 122, 22, 2, 62, 42, 1, 21, 41, 61, 81, 69, 121, 109, 161, 181, 137, 157, 241, 229, 217, 205, 92, 72, 116, 96, 12, 24, 36, 48, 252, 232, 212, 192, 172, 184, 132, 144, ],
[0, 21, 42, 63, 84, 65, 126, 107, 168, 189, 130, 151, 252, 233, 214, 195, 77, 88, 103, 114, 25, 12, 51, 38, 229, 240, 207, 218, 177, 164, 155, 142, 154, 143, 176, 165, 206, 219, 228, 241, 50, 39, 24, 13, 102, 115, 76, 89, 215, 194, 253, 232, 131, 150, 169, 188, 127, 106, 85, 64, 43, 62, 1, 20, 41, 60, 3, 22, 125, 104, 87, 66, 129, 148, 171, 190, 213, 192, 255, 234, 100, 113, 78, 91, 48, 37, 26, 15, 204, 217, 230, 243, 152, 141, 178, 167, 179, 166, 153, 140, 231, 242, 205, 216, 27, 14, 49, 36, 79, 90, 101, 112, 254, 235, 212, 193, 170, 191, 128, 149, 86, 67, 124, 105, 2, 23, 40, 61, 82, 71, 120, 109, 6, 19, 44, 57, 250, 239, 208, 197, 174, 187, 132, 145, 31, 10, 53, 32, 75, 94, 97, 116, 183, 162, 157, 136, 227, 246, 201, 220, 200, 221, 226, 247, 156, 137, 182, 163, 96, 117, 74, 95, 52, 33, 30, 11, 133, 144, 175, 186, 209, 196, 251, 238, 45, 56, 7, 18, 121, 108, 83, 70, 123, 110, 81, 68, 47, 58, 5, 16, 211, 198, 249, 236, 135, 146, 173, 184, 54, 35, 28, 9, 98, 119, 72, 93, 158, 139, 180, 161, 202, 223, 224, 245, 225, 244, 203, 222, 181, 160, 159, 138, 73, 92, 99, 118, 29, 8, 55, 34, 172, 185, 134, 147, 248, 237, 210, 199, 4, 17, 46, 59, 80, 69, 122, 111, ],
[0, 22, 44, 58, 88, 78, 116, 98, 176, 166, 156, 138, 232, 254, 196, 210, 125, 107, 81, 71, 37, 51, 9, 31, 205, 219, 225, 247, 149, 131, 185, 175, 250, 236, 214, 192, 162, 180, 142, 152, 74, 92, 102, 112, 18, 4, 62, 40, 135, 145, 171, 189, 223, 201, 243, 229, 55, 33, 27, 13, 111, 121, 67, 85, 233, 255, 197, 211, 177, 167, 157, 139, 89, 79, 117, 99, 1, 23, 45, 59, 148, 130, 184, 174, 204, 218, 224, 246, 36, 50, 8, 30, 124, 106, 80, 70, 19, 5, 63, 41, 75, 93, 103, 113, 163, 181, 143, 153, 251, 237, 215, 193, 110, 120, 66, 84, 54, 32, 26, 12, 222, 200, 242, 228, 134, 144, 170, 188, 207, 217, 227, 245, 151, 129, 187, 173, 127, 105, 83, 69, 39, 49, 11, 29, 178, 164, 158, 136, 234, 252, 198, 208, 2, 20, 46, 56, 90, 76, 118, 96, 53, 35, 25, 15, 109, 123, 65, 87, 133, 147, 169, 191, 221, 203, 241, 231, 72, 94, 100, 114, 16, 6, 60, 42, 248, 238, 212, 194, 160, 182, 140, 154, 38, 48, 10, 28, 126, 104, 82, 68, 150, 128, 186, 172, 206, 216, 226, 244, 91, 77, 119, 97, 3, 21, 47, 57, 235, 253, 199, 209, 179, 165, 159, 137, 220, 202, 240, 230, 132, 146, 168, 190, 108, 122, 64, 86, 52, 34, 24, 14, 161, 183, 141, 155, 249, 239, 213, 195, 17, 7, 61, 43, 73, 95, 101, 115, ],
[0, 23, 46, 57, 92, 75, 114, 101, 184, 175, 150, 129, 228, 243, 202, 221, 109, 122, 67, 84, 49, 38, 31, 8, 213, 194, 251, 236, 137, 158, 167, 176, 218, 205, 244, 227, 134, 145, 168, 191, 98, 117, 76, 91, 62, 41, 16, 7, 183, 160, 153, 142, 235, 252, 197, 210, 15, 24, 33, 54, 83, 68, 125, 106, 169, 190, 135, 144, 245, 226, 219, 204, 17, 6, 63, 40, 77, 90, 99, 116, 196, 211, 234, 253, 152, 143, 182, 161, 124, 107, 82, 69, 32, 55, 14, 25, 115, 100, 93, 74, 47, 56, 1, 22, 203, 220, 229, 242, 151, 128, 185, 174, 30, 9, 48, 39, 66, 85, 108, 123, 166, 177, 136, 159, 250, 237, 212, 195, 79, 88, 97, 118, 19, 4, 61, 42, 247, 224, 217, 206, 171, 188, 133, 146, 34, 53, 12, 27, 126, 105, 80, 71, 154, 141, 180, 163, 198, 209, 232, 255, 149, 130, 187, 172, 201, 222, 231, 240, 45, 58, 3, 20, 113, 102, 95, 72, 248, 239, 214, 193, 164, 179, 138, 157, 64, 87, 110, 121, 28, 11, 50, 37, 230, 241, 200, 223, 186, 173, 148, 131, 94, 73, 112, 103, 2, 21, 44, 59, 139, 156, 165, 178, 215, 192, 249, 238, 51, 36, 29, 10, 111, 120, 65, 86, 60, 43, 18, 5, 96, 119, 78, 89, 132, 147, 170, 189, 216, 207, 246, 225, 81, 70, 127, 104, 13, 26, 35, 52, 233, 254, 199, 208, 181, 162, 155, 140, ],
[0, 24, 48, 40, 96, 120, 80, 72, 192, 216, 240, 232, 160, 184, 144, 136, 157, 133, 173, 181, 253, 229, 205, 213, 93, 69, 109, 117, 61, 37, 13, 21, 39, 63, 23, 15, 71, 95, 119, 111, 231, 255, 215, 207, 135, 159, 183, 175, 186, 162, 138, 146, 218, 194, 234, 242, 122, 98, 74, 82, 26, 2, 42, 50, 78, 86, 126, 102, 46, 54, 30, 6, 142, 150, 190, 166, 238, 246, 222, 198, 211, 203, 227, 251, 179, 171, 131, 155, 19, 11, 35, 59, 115, 107, 67, 91, 105, 113, 89, 65, 9, 17, 57, 33, 169, 177, 153, 129, 201, 209, 249, 225, 244, 236, 196, 220, 148, 140, 164, 188, 52, 44, 4, 28, 84, 76, 100, 124, 156, 132, 172, 180, 252, 228, 204, 212, 92, 68, 108, 116, 60, 36, 12, 20, 1, 25, 49, 41, 97, 121, 81, 73, 193, 217, 241, 233, 161, 185, 145, 137, 187, 163, 139, 147, 219, 195, 235, 243, 123, 99, 75, 83, 27, 3, 43, 51, 38, 62, 22, 14, 70, 94, 118, 110, 230, 254, 214, 206, 134, 158, 182, 174, 210, 202, 226, 250, 178, 170, 130, 154, 18, 10, 34, 58, 114, 106, 66, 90, 79, 87, 127, 103, 47, 55, 31, 7, 143, 151, 191, 167, 239, 247, 223, 199, 245, 237, 197, 221, 149, 141, 165, 189, 53, 45, 5, 29, 85, 77, 101, 125, 104, 112, 88, 64, 8, 16, 56, 32, 168, 176, 152, 128, 200, 208, 248, 224, ],
[0, 25, 50, 43, 100, 125, 86, 79, 200, 209, 250, 227, 172, 181, 158, 135, 141, 148, 191, 166, 233, 240, 219, 194, 69, 92, 119, 110, 33, 56, 19, 10, 7, 30, 53, 44, 99, 122, 81, 72, 207, 214, 253, 228, 171, 178, 153, 128, 138, 147, 184, 161, 238, 247, 220, 197, 66, 91, 112, 105, 38, 63, 20, 13, 14, 23, 60, 37, 106, 115, 88, 65, 198, 223, 244, 237, 162, 187, 144, 137, 131, 154, 177, 168, 231, 254, 213, 204, 75, 82, 121, 96, 47, 54, 29, 4, 9, 16, 59, 34, 109, 116, 95, 70, 193, 216, 243, 234, 165, 188, 151, 142, 132, 157, 182, 175, 224, 249, 210, 203, 76, 85, 126, 103, 40, 49, 26, 3, 28, 5, 46, 55, 120, 97, 74, 83, 212, 205, 230, 255, 176, 169, 130, 155, 145, 136, 163, 186, 245, 236, 199, 222, 89, 64, 107, 114, 61, 36, 15, 22, 27, 2, 41, 48, 127, 102, 77, 84, 211, 202, 225, 248, 183, 174, 133, 156, 150, 143, 164, 189, 242, 235, 192, 217, 94, 71, 108, 117, 58, 35, 8, 17, 18, 11, 32, 57, 118, 111, 68, 93, 218, 195, 232, 241, 190, 167, 140, 149, 159, 134, 173, 180, 251, 226, 201, 208, 87, 78, 101, 124, 51, 42, 1, 24, 21, 12, 39, 62, 113, 104, 67, 90, 221, 196, 239, 246, 185, 160, 139, 146, 152, 129, 170, 179, 252, 229, 206, 215, 80, 73, 98, 123, 52, 45, 6, 31, ],
[0, 26, 52, 46, 104, 114, 92, 70, 208, 202, 228, 254, 184, 162, 140, 150, 189, 167, 137, 147, 213, 207, 225, 251, 109, 119, 89, 67, 5, 31, 49, 43, 103, 125, 83, 73, 15, 21, 59, 33, 183, 173, 131, 153, 223, 197, 235, 241, 218, 192, 238, 244, 178, 168, 134, 156, 10, 16, 62, 36, 98, 120, 86, 76, 206, 212, 250, 224, 166, 188, 146, 136, 30, 4, 42, 48, 118, 108, 66, 88, 115, 105, 71, 93, 27, 1, 47, 53, 163, 185, 151, 141, 203, 209, 255, 229, 169, 179, 157, 135, 193, 219, 245, 239, 121, 99, 77, 87, 17, 11, 37, 63, 20, 14, 32, 58, 124, 102, 72, 82, 196, 222, 240, 234, 172, 182, 152, 130, 129, 155, 181, 175, 233, 243, 221, 199, 81, 75, 101, 127, 57, 35, 13, 23, 60, 38, 8, 18, 84, 78, 96, 122, 236, 246, 216, 194, 132, 158, 176, 170, 230, 252, 210, 200, 142, 148, 186, 160, 54, 44, 2, 24, 94, 68, 106, 112, 91, 65, 111, 117, 51, 41, 7, 29, 139, 145, 191, 165, 227, 249, 215, 205, 79, 85, 123, 97, 39, 61, 19, 9, 159, 133, 171, 177, 247, 237, 195, 217, 242, 232, 198, 220, 154, 128, 174, 180, 34, 56, 22, 12, 74, 80, 126, 100, 40, 50, 28, 6, 64, 90, 116, 110, 248, 226, 204, 214, 144, 138, 164, 190, 149, 143, 161, 187, 253, 231, 201, 211, 69, 95, 113, 107, 45, 55, 25, 3, ],
[0, 27, 54, 45, 108, 119, 90, 65, 216, 195, 238, 245, 180, 175, 130, 153, 173, 182, 155, 128, 193, 218, 247, 236, 117, 110, 67, 88, 25, 2, 47, 52, 71, 92, 113, 106, 43, 48, 29, 6, 159, 132, 169, 178, 243, 232, 197, 222, 234, 241, 220, 199, 134, 157, 176, 171, 50, 41, 4, 31, 94, 69, 104, 115, 142, 149, 184, 163, 226, 249, 212, 207, 86, 77, 96, 123, 58, 33, 12, 23, 35, 56, 21, 14, 79, 84, 121, 98, 251, 224, 205, 214, 151, 140, 161, 186, 201, 210, 255, 228, 165, 190, 147, 136, 17, 10, 39, 60, 125, 102, 75, 80, 100, 127, 82, 73, 8, 19, 62, 37, 188, 167, 138, 145, 208, 203, 230, 253, 1, 26, 55, 44, 109, 118, 91, 64, 217, 194, 239, 244, 181, 174, 131, 152, 172, 183, 154, 129, 192, 219, 246, 237, 116, 111, 66, 89, 24, 3, 46, 53, 70, 93, 112, 107, 42, 49, 28, 7, 158, 133, 168, 179, 242, 233, 196, 223, 235, 240, 221, 198, 135, 156, 177, 170, 51, 40, 5, 30, 95, 68, 105, 114, 143, 148, 185, 162, 227, 248, 213, 206, 87, 76, 97, 122, 59, 32, 13, 22, 34, 57, 20, 15, 78, 85, 120, 99, 250, 225, 204, 215, 150, 141, 160, 187, 200, 211, 254, 229, 164, 191, 146, 137, 16, 11, 38, 61, 124, 103, 74, 81, 101, 126, 83, 72, 9, 18, 63, 36, 189, 166, 139, 144, 209, 202, 231, 252, ],
[0, 28, 56, 36, 112, 108, 72, 84, 224, 252, 216, 196, 144, 140, 168, 180, 221, 193, 229, 249, 173, 177, 149, 137, 61, 33, 5, 25, 77, 81, 117, 105, 167, 187, 159, 131, 215, 203, 239, 243, 71, 91, 127, 99, 55, 43, 15, 19, 122, 102, 66, 94, 10, 22, 50, 46, 154, 134, 162, 190, 234, 246, 210, 206, 83, 79, 107, 119, 35, 63, 27, 7, 179, 175, 139, 151, 195, 223, 251, 231, 142, 146, 182, 170, 254, 226, 198, 218, 110, 114, 86, 74, 30, 2, 38, 58, 244, 232, 204, 208, 132, 152, 188, 160, 20, 8, 44, 48, 100, 120, 92, 64, 41, 53, 17, 13, 89, 69, 97, 125, 201, 213, 241, 237, 185, 165, 129, 157, 166, 186, 158, 130, 214, 202, 238, 242, 70, 90, 126, 98, 54, 42, 14, 18, 123, 103, 67, 95, 11, 23, 51, 47, 155, 135, 163, 191, 235, 247, 211, 207, 1, 29, 57, 37, 113, 109, 73, 85, 225, 253, 217, 197, 145, 141, 169, 181, 220, 192, 228, 248, 172, 176, 148, 136, 60, 32, 4, 24, 76, 80, 116, 104, 245, 233, 205, 209, 133, 153, 189, 161, 21, 9, 45, 49, 101, 121, 93, 65, 40, 52, 16, 12, 88, 68, 96, 124, 200, 212, 240, 236, 184, 164, 128, 156, 82, 78, 106, 118, 34, 62, 26, 6, 178, 174, 138, 150, 194, 222, 250, 230, 143, 147, 183, 171, 255, 227, 199, 219, 111, 115, 87, 75, 31, 3, 39, 59, ],
[0, 29, 58, 39, 116, 105, 78, 83, 232, 245, 210, 207, 156, 129, 166, 187, 205, 208, 247, 234, 185, 164, 131, 158, 37, 56, 31, 2, 81, 76, 107, 118, 135, 154, 189, 160, 243, 238, 201, 212, 111, 114, 85, 72, 27, 6, 33, 60, 74, 87, 112, 109, 62, 35, 4, 25, 162, 191, 152, 133, 214, 203, 236, 241, 19, 14, 41, 52, 103, 122, 93, 64, 251, 230, 193, 220, 143, 146, 181, 168, 222, 195, 228, 249, 170, 183, 144, 141, 54, 43, 12, 17, 66, 95, 120, 101, 148, 137, 174, 179, 224, 253, 218, 199, 124, 97, 70, 91, 8, 21, 50, 47, 89, 68, 99, 126, 45, 48, 23, 10, 177, 172, 139, 150, 197, 216, 255, 226, 38, 59, 28, 1, 82, 79, 104, 117, 206, 211, 244, 233, 186, 167, 128, 157, 235, 246, 209, 204, 159, 130, 165, 184, 3, 30, 57, 36, 119, 106, 77, 80, 161, 188, 155, 134, 213, 200, 239, 242, 73, 84, 115, 110, 61, 32, 7, 26, 108, 113, 86, 75, 24, 5, 34, 63, 132, 153, 190, 163, 240, 237, 202, 215, 53, 40, 15, 18, 65, 92, 123, 102, 221, 192, 231, 250, 169, 180, 147, 142, 248, 229, 194, 223, 140, 145, 182, 171, 16, 13, 42, 55, 100, 121, 94, 67, 178, 175, 136, 149, 198, 219, 252, 225, 90, 71, 96, 125, 46, 51, 20, 9, 127, 98, 69, 88, 11, 22, 49, 44, 151, 138, 173, 176, 227, 254, 217, 196, ],
[0, 30, 60, 34, 120, 102, 68, 90, 240, 238, 204, 210, 136, 150, 180, 170, 253, 227, 193, 223, 133, 155, 185, 167, 13, 19, 49, 47, 117, 107, 73, 87, 231, 249, 219, 197, 159, 129, 163, 189, 23, 9, 43, 53, 111, 113, 83, 77, 26, 4, 38, 56, 98, 124, 94, 64, 234, 244, 214, 200, 146, 140, 174, 176, 211, 205, 239, 241, 171, 181, 151, 137, 35, 61, 31, 1, 91, 69, 103, 121, 46, 48, 18, 12, 86, 72, 106, 116, 222, 192, 226, 252, 166, 184, 154, 132, 52, 42, 8, 22, 76, 82, 112, 110, 196, 218, 248, 230, 188, 162, 128, 158, 201, 215, 245, 235, 177, 175, 141, 147, 57, 39, 5, 27, 65, 95, 125, 99, 187, 165, 135, 153, 195, 221, 255, 225, 75, 85, 119, 105, 51, 45, 15, 17, 70, 88, 122, 100, 62, 32, 2, 28, 182, 168, 138, 148, 206, 208, 242, 236, 92, 66, 96, 126, 36, 58, 24, 6, 172, 178, 144, 142, 212, 202, 232, 246, 161, 191, 157, 131, 217, 199, 229, 251, 81, 79, 109, 115, 41, 55, 21, 11, 104, 118, 84, 74, 16, 14, 44, 50, 152, 134, 164, 186, 224, 254, 220, 194, 149, 139, 169, 183, 237, 243, 209, 207, 101, 123, 89, 71, 29, 3, 33, 63, 143, 145, 179, 173, 247, 233, 203, 213, 127, 97, 67, 93, 7, 25, 59, 37, 114, 108, 78, 80, 10, 20, 54, 40, 130, 156, 190, 160, 250, 228, 198, 216, ],
[0, 31, 62, 33, 124, 99, 66, 93, 248, 231, 198, 217, 132, 155, 186, 165, 237, 242, 211, 204, 145, 142, 175, 176, 21, 10, 43, 52, 105, 118, 87, 72, 199, 216, 249, 230, 187, 164, 133, 154, 63, 32, 1, 30, 67, 92, 125, 98, 42, 53, 20, 11, 86, 73, 104, 119, 210, 205, 236, 243, 174, 177, 144, 143, 147, 140, 173, 178, 239, 240, 209, 206, 107, 116, 85, 74, 23, 8, 41, 54, 126, 97, 64, 95, 2, 29, 60, 35, 134, 153, 184, 167, 250, 229, 196, 219, 84, 75, 106, 117, 40, 55, 22, 9, 172, 179, 146, 141, 208, 207, 238, 241, 185, 166, 135, 152, 197, 218, 251, 228, 65, 94, 127, 96, 61, 34, 3, 28, 59, 36, 5, 26, 71, 88, 121, 102, 195, 220, 253, 226, 191, 160, 129, 158, 214, 201, 232, 247, 170, 181, 148, 139, 46, 49, 16, 15, 82, 77, 108, 115, 252, 227, 194, 221, 128, 159, 190, 161, 4, 27, 58, 37, 120, 103, 70, 89, 17, 14, 47, 48, 109, 114, 83, 76, 233, 246, 215, 200, 149, 138, 171, 180, 168, 183, 150, 137, 212, 203, 234, 245, 80, 79, 110, 113, 44, 51, 18, 13, 69, 90, 123, 100, 57, 38, 7, 24, 189, 162, 131, 156, 193, 222, 255, 224, 111, 112, 81, 78, 19, 12, 45, 50, 151, 136, 169, 182, 235, 244, 213, 202, 130, 157, 188, 163, 254, 225, 192, 223, 122, 101, 68, 91, 6, 25, 56, 39, ],
[0, 32, 64, 96, 128, 160, 192, 224, 29, 61, 93, 125, 157, 189, 221, 253, 58, 26, 122, 90, 186, 154, 250, 218, 39, 7, 103, 71, 167, 135, 231, 199, 116, 84, 52, 20, 244, 212, 180, 148, 105, 73, 41, 9, 233, 201, 169, 137, 78, 110, 14, 46, 206, 238, 142, 174, 83, 115, 19, 51, 211, 243, 147, 179, 232, 200, 168, 136, 104, 72, 40, 8, 245, 213, 181, 149, 117, 85, 53, 21, 210, 242, 146, 178, 82, 114, 18, 50, 207, 239, 143, 175, 79, 111, 15, 47, 156, 188, 220, 252, 28, 60, 92, 124, 129, 161, 193, 225, 1, 33, 65, 97, 166, 134, 230, 198, 38, 6, 102, 70, 187, 155, 251, 219, 59, 27, 123, 91, 205, 237, 141, 173, 77, 109, 13, 45, 208, 240, 144, 176, 80, 112, 16, 48, 247, 215, 183, 151, 119, 87, 55, 23, 234, 202, 170, 138, 106, 74, 42, 10, 185, 153, 249, 217, 57, 25, 121, 89, 164, 132, 228, 196, 36, 4, 100, 68, 131, 163, 195, 227, 3, 35, 67, 99, 158, 190, 222, 254, 30, 62, 94, 126, 37, 5, 101, 69, 165, 133, 229, 197, 56, 24, 120, 88, 184, 152, 248, 216, 31, 63, 95, 127, 159, 191, 223, 255, 2, 34, 66, 98, 130, 162, 194, 226, 81, 113, 17, 49, 209, 241, 145, 177, 76, 108, 12, 44, 204, 236, 140, 172, 107, 75, 43, 11, 235, 203, 171, 139, 118, 86, 54, 22, 246, 214, 182, 150, ],
[0, 33, 66, 99, 132, 165, 198, 231, 21, 52, 87, 118, 145, 176, 211, 242, 42, 11, 104, 73, 174, 143, 236, 205, 63, 30, 125, 92, 187, 154, 249, 216, 84, 117, 22, 55, 208, 241, 146, 179, 65, 96, 3, 34, 197, 228, 135, 166, 126, 95, 60, 29, 250, 219, 184, 153, 107, 74, 41, 8, 239, 206, 173, 140, 168, 137, 234, 203, 44, 13, 110, 79, 189, 156, 255, 222, 57, 24, 123, 90, 130, 163, 192, 225, 6, 39, 68, 101, 151, 182, 213, 244, 19, 50, 81, 112, 252, 221, 190, 159, 120, 89, 58, 27, 233, 200, 171, 138, 109, 76, 47, 14, 214, 247, 148, 181, 82, 115, 16, 49, 195, 226, 129, 160, 71, 102, 5, 36, 77, 108, 15, 46, 201, 232, 139, 170, 88, 121, 26, 59, 220, 253, 158, 191, 103, 70, 37, 4, 227, 194, 161, 128, 114, 83, 48, 17, 246, 215, 180, 149, 25, 56, 91, 122, 157, 188, 223, 254, 12, 45, 78, 111, 136, 169, 202, 235, 51, 18, 113, 80, 183, 150, 245, 212, 38, 7, 100, 69, 162, 131, 224, 193, 229, 196, 167, 134, 97, 64, 35, 2, 240, 209, 178, 147, 116, 85, 54, 23, 207, 238, 141, 172, 75, 106, 9, 40, 218, 251, 152, 185, 94, 127, 28, 61, 177, 144, 243, 210, 53, 20, 119, 86, 164, 133, 230, 199, 32, 1, 98, 67, 155, 186, 217, 248, 31, 62, 93, 124, 142, 175, 204, 237, 10, 43, 72, 105, ],
[0, 34, 68, 102, 136, 170, 204, 238, 13, 47, 73, 107, 133, 167, 193, 227, 26, 56, 94, 124, 146, 176, 214, 244, 23, 53, 83, 113, 159, 189, 219, 249, 52, 22, 112, 82, 188, 158, 248, 218, 57, 27, 125, 95, 177, 147, 245, 215, 46, 12, 106, 72, 166, 132, 226, 192, 35, 1, 103, 69, 171, 137, 239, 205, 104, 74, 44, 14, 224, 194, 164, 134, 101, 71, 33, 3, 237, 207, 169, 139, 114, 80, 54, 20, 250, 216, 190, 156, 127, 93, 59, 25, 247, 213, 179, 145, 92, 126, 24, 58, 212, 246, 144, 178, 81, 115, 21, 55, 217, 251, 157, 191, 70, 100, 2, 32, 206, 236, 138, 168, 75, 105, 15, 45, 195, 225, 135, 165, 208, 242, 148, 182, 88, 122, 28, 62, 221, 255, 153, 187, 85, 119, 17, 51, 202, 232, 142, 172, 66, 96, 6, 36, 199, 229, 131, 161, 79, 109, 11, 41, 228, 198, 160, 130, 108, 78, 40, 10, 233, 203, 173, 143, 97, 67, 37, 7, 254, 220, 186, 152, 118, 84, 50, 16, 243, 209, 183, 149, 123, 89, 63, 29, 184, 154, 252, 222, 48, 18, 116, 86, 181, 151, 241, 211, 61, 31, 121, 91, 162, 128, 230, 196, 42, 8, 110, 76, 175, 141, 235, 201, 39, 5, 99, 65, 140, 174, 200, 234, 4, 38, 64, 98, 129, 163, 197, 231, 9, 43, 77, 111, 150, 180, 210, 240, 30, 60, 90, 120, 155, 185, 223, 253, 19, 49, 87, 117, ],
[0, 35, 70, 101, 140, 175, 202, 233, 5, 38, 67, 96, 137, 170, 207, 236, 10, 41, 76, 111, 134, 165, 192, 227, 15, 44, 73, 106, 131, 160, 197, 230, 20, 55, 82, 113, 152, 187, 222, 253, 17, 50, 87, 116, 157, 190, 219, 248, 30, 61, 88, 123, 146, 177, 212, 247, 27, 56, 93, 126, 151, 180, 209, 242, 40, 11, 110, 77, 164, 135, 226, 193, 45, 14, 107, 72, 161, 130, 231, 196, 34, 1, 100, 71, 174, 141, 232, 203, 39, 4, 97, 66, 171, 136, 237, 206, 60, 31, 122, 89, 176, 147, 246, 213, 57, 26, 127, 92, 181, 150, 243, 208, 54, 21, 112, 83, 186, 153, 252, 223, 51, 16, 117, 86, 191, 156, 249, 218, 80, 115, 22, 53, 220, 255, 154, 185, 85, 118, 19, 48, 217, 250, 159, 188, 90, 121, 28, 63, 214, 245, 144, 179, 95, 124, 25, 58, 211, 240, 149, 182, 68, 103, 2, 33, 200, 235, 142, 173, 65, 98, 7, 36, 205, 238, 139, 168, 78, 109, 8, 43, 194, 225, 132, 167, 75, 104, 13, 46, 199, 228, 129, 162, 120, 91, 62, 29, 244, 215, 178, 145, 125, 94, 59, 24, 241, 210, 183, 148, 114, 81, 52, 23, 254, 221, 184, 155, 119, 84, 49, 18, 251, 216, 189, 158, 108, 79, 42, 9, 224, 195, 166, 133, 105, 74, 47, 12, 229, 198, 163, 128, 102, 69, 32, 3, 234, 201, 172, 143, 99, 64, 37, 6, 239, 204, 169, 138, ],
[0, 36, 72, 108, 144, 180, 216, 252, 61, 25, 117, 81, 173, 137, 229, 193, 122, 94, 50, 22, 234, 206, 162, 134, 71, 99, 15, 43, 215, 243, 159, 187, 244, 208, 188, 152, 100, 64, 44, 8, 201, 237, 129, 165, 89, 125, 17, 53, 142, 170, 198, 226, 30, 58, 86, 114, 179, 151, 251, 223, 35, 7, 107, 79, 245, 209, 189, 153, 101, 65, 45, 9, 200, 236, 128, 164, 88, 124, 16, 52, 143, 171, 199, 227, 31, 59, 87, 115, 178, 150, 250, 222, 34, 6, 106, 78, 1, 37, 73, 109, 145, 181, 217, 253, 60, 24, 116, 80, 172, 136, 228, 192, 123, 95, 51, 23, 235, 207, 163, 135, 70, 98, 14, 42, 214, 242, 158, 186, 247, 211, 191, 155, 103, 67, 47, 11, 202, 238, 130, 166, 90, 126, 18, 54, 141, 169, 197, 225, 29, 57, 85, 113, 176, 148, 248, 220, 32, 4, 104, 76, 3, 39, 75, 111, 147, 183, 219, 255, 62, 26, 118, 82, 174, 138, 230, 194, 121, 93, 49, 21, 233, 205, 161, 133, 68, 96, 12, 40, 212, 240, 156, 184, 2, 38, 74, 110, 146, 182, 218, 254, 63, 27, 119, 83, 175, 139, 231, 195, 120, 92, 48, 20, 232, 204, 160, 132, 69, 97, 13, 41, 213, 241, 157, 185, 246, 210, 190, 154, 102, 66, 46, 10, 203, 239, 131, 167, 91, 127, 19, 55, 140, 168, 196, 224, 28, 56, 84, 112, 177, 149, 249, 221, 33, 5, 105, 77, ],
[0, 37, 74, 111, 148, 177, 222, 251, 53, 16, 127, 90, 161, 132, 235, 206, 106, 79, 32, 5, 254, 219, 180, 145, 95, 122, 21, 48, 203, 238, 129, 164, 212, 241, 158, 187, 64, 101, 10, 47, 225, 196, 171, 142, 117, 80, 63, 26, 190, 155, 244, 209, 42, 15, 96, 69, 139, 174, 193, 228, 31, 58, 85, 112, 181, 144, 255, 218, 33, 4, 107, 78, 128, 165, 202, 239, 20, 49, 94, 123, 223, 250, 149, 176, 75, 110, 1, 36, 234, 207, 160, 133, 126, 91, 52, 17, 97, 68, 43, 14, 245, 208, 191, 154, 84, 113, 30, 59, 192, 229, 138, 175, 11, 46, 65, 100, 159, 186, 213, 240, 62, 27, 116, 81, 170, 143, 224, 197, 119, 82, 61, 24, 227, 198, 169, 140, 66, 103, 8, 45, 214, 243, 156, 185, 29, 56, 87, 114, 137, 172, 195, 230, 40, 13, 98, 71, 188, 153, 246, 211, 163, 134, 233, 204, 55, 18, 125, 88, 150, 179, 220, 249, 2, 39, 72, 109, 201, 236, 131, 166, 93, 120, 23, 50, 252, 217, 182, 147, 104, 77, 34, 7, 194, 231, 136, 173, 86, 115, 28, 57, 247, 210, 189, 152, 99, 70, 41, 12, 168, 141, 226, 199, 60, 25, 118, 83, 157, 184, 215, 242, 9, 44, 67, 102, 22, 51, 92, 121, 130, 167, 200, 237, 35, 6, 105, 76, 183, 146, 253, 216, 124, 89, 54, 19, 232, 205, 162, 135, 73, 108, 3, 38, 221, 248, 151, 178, ],
[0, 38, 76, 106, 152, 190, 212, 242, 45, 11, 97, 71, 181, 147, 249, 223, 90, 124, 22, 48, 194, 228, 142, 168, 119, 81, 59, 29, 239, 201, 163, 133, 180, 146, 248, 222, 44, 10, 96, 70, 153, 191, 213, 243, 1, 39, 77, 107, 238, 200, 162, 132, 118, 80, 58, 28, 195, 229, 143, 169, 91, 125, 23, 49, 117, 83, 57, 31, 237, 203, 161, 135, 88, 126, 20, 50, 192, 230, 140, 170, 47, 9, 99, 69, 183, 145, 251, 221, 2, 36, 78, 104, 154, 188, 214, 240, 193, 231, 141, 171, 89, 127, 21, 51, 236, 202, 160, 134, 116, 82, 56, 30, 155, 189, 215, 241, 3, 37, 79, 105, 182, 144, 250, 220, 46, 8, 98, 68, 234, 204, 166, 128, 114, 84, 62, 24, 199, 225, 139, 173, 95, 121, 19, 53, 176, 150, 252, 218, 40, 14, 100, 66, 157, 187, 209, 247, 5, 35, 73, 111, 94, 120, 18, 52, 198, 224, 138, 172, 115, 85, 63, 25, 235, 205, 167, 129, 4, 34, 72, 110, 156, 186, 208, 246, 41, 15, 101, 67, 177, 151, 253, 219, 159, 185, 211, 245, 7, 33, 75, 109, 178, 148, 254, 216, 42, 12, 102, 64, 197, 227, 137, 175, 93, 123, 17, 55, 232, 206, 164, 130, 112, 86, 60, 26, 43, 13, 103, 65, 179, 149, 255, 217, 6, 32, 74, 108, 158, 184, 210, 244, 113, 87, 61, 27, 233, 207, 165, 131, 92, 122, 16, 54, 196, 226, 136, 174, ],
[0, 39, 78, 105, 156, 187, 210, 245, 37, 2, 107, 76, 185, 158, 247, 208, 74, 109, 4, 35, 214, 241, 152, 191, 111, 72, 33, 6, 243, 212, 189, 154, 148, 179, 218, 253, 8, 47, 70, 97, 177, 150, 255, 216, 45, 10, 99, 68, 222, 249, 144, 183, 66, 101, 12, 43, 251, 220, 181, 146, 103, 64, 41, 14, 53, 18, 123, 92, 169, 142, 231, 192, 16, 55, 94, 121, 140, 171, 194, 229, 127, 88, 49, 22, 227, 196, 173, 138, 90, 125, 20, 51, 198, 225, 136, 175, 161, 134, 239, 200, 61, 26, 115, 84, 132, 163, 202, 237, 24, 63, 86, 113, 235, 204, 165, 130, 119, 80, 57, 30, 206, 233, 128, 167, 82, 117, 28, 59, 106, 77, 36, 3, 246, 209, 184, 159, 79, 104, 1, 38, 211, 244, 157, 186, 32, 7, 110, 73, 188, 155, 242, 213, 5, 34, 75, 108, 153, 190, 215, 240, 254, 217, 176, 151, 98, 69, 44, 11, 219, 252, 149, 178, 71, 96, 9, 46, 180, 147, 250, 221, 40, 15, 102, 65, 145, 182, 223, 248, 13, 42, 67, 100, 95, 120, 17, 54, 195, 228, 141, 170, 122, 93, 52, 19, 230, 193, 168, 143, 21, 50, 91, 124, 137, 174, 199, 224, 48, 23, 126, 89, 172, 139, 226, 197, 203, 236, 133, 162, 87, 112, 25, 62, 238, 201, 160, 135, 114, 85, 60, 27, 129, 166, 207, 232, 29, 58, 83, 116, 164, 131, 234, 205, 56, 31, 118, 81, ],
[0, 40, 80, 120, 160, 136, 240, 216, 93, 117, 13, 37, 253, 213, 173, 133, 186, 146, 234, 194, 26, 50, 74, 98, 231, 207, 183, 159, 71, 111, 23, 63, 105, 65, 57, 17, 201, 225, 153, 177, 52, 28, 100, 76, 148, 188, 196, 236, 211, 251, 131, 171, 115, 91, 35, 11, 142, 166, 222, 246, 46, 6, 126, 86, 210, 250, 130, 170, 114, 90, 34, 10, 143, 167, 223, 247, 47, 7, 127, 87, 104, 64, 56, 16, 200, 224, 152, 176, 53, 29, 101, 77, 149, 189, 197, 237, 187, 147, 235, 195, 27, 51, 75, 99, 230, 206, 182, 158, 70, 110, 22, 62, 1, 41, 81, 121, 161, 137, 241, 217, 92, 116, 12, 36, 252, 212, 172, 132, 185, 145, 233, 193, 25, 49, 73, 97, 228, 204, 180, 156, 68, 108, 20, 60, 3, 43, 83, 123, 163, 139, 243, 219, 94, 118, 14, 38, 254, 214, 174, 134, 208, 248, 128, 168, 112, 88, 32, 8, 141, 165, 221, 245, 45, 5, 125, 85, 106, 66, 58, 18, 202, 226, 154, 178, 55, 31, 103, 79, 151, 191, 199, 239, 107, 67, 59, 19, 203, 227, 155, 179, 54, 30, 102, 78, 150, 190, 198, 238, 209, 249, 129, 169, 113, 89, 33, 9, 140, 164, 220, 244, 44, 4, 124, 84, 2, 42, 82, 122, 162, 138, 242, 218, 95, 119, 15, 39, 255, 215, 175, 135, 184, 144, 232, 192, 24, 48, 72, 96, 229, 205, 181, 157, 69, 109, 21, 61, ],
[0, 41, 82, 123, 164, 141, 246, 223, 85, 124, 7, 46, 241, 216, 163, 138, 170, 131, 248, 209, 14, 39, 92, 117, 255, 214, 173, 132, 91, 114, 9, 32, 73, 96, 27, 50, 237, 196, 191, 150, 28, 53, 78, 103, 184, 145, 234, 195, 227, 202, 177, 152, 71, 110, 21, 60, 182, 159, 228, 205, 18, 59, 64, 105, 146, 187, 192, 233, 54, 31, 100, 77, 199, 238, 149, 188, 99, 74, 49, 24, 56, 17, 106, 67, 156, 181, 206, 231, 109, 68, 63, 22, 201, 224, 155, 178, 219, 242, 137, 160, 127, 86, 45, 4, 142, 167, 220, 245, 42, 3, 120, 81, 113, 88, 35, 10, 213, 252, 135, 174, 36, 13, 118, 95, 128, 169, 210, 251, 57, 16, 107, 66, 157, 180, 207, 230, 108, 69, 62, 23, 200, 225, 154, 179, 147, 186, 193, 232, 55, 30, 101, 76, 198, 239, 148, 189, 98, 75, 48, 25, 112, 89, 34, 11, 212, 253, 134, 175, 37, 12, 119, 94, 129, 168, 211, 250, 218, 243, 136, 161, 126, 87, 44, 5, 143, 166, 221, 244, 43, 2, 121, 80, 171, 130, 249, 208, 15, 38, 93, 116, 254, 215, 172, 133, 90, 115, 8, 33, 1, 40, 83, 122, 165, 140, 247, 222, 84, 125, 6, 47, 240, 217, 162, 139, 226, 203, 176, 153, 70, 111, 20, 61, 183, 158, 229, 204, 19, 58, 65, 104, 72, 97, 26, 51, 236, 197, 190, 151, 29, 52, 79, 102, 185, 144, 235, 194, ],
[0, 42, 84, 126, 168, 130, 252, 214, 77, 103, 25, 51, 229, 207, 177, 155, 154, 176, 206, 228, 50, 24, 102, 76, 215, 253, 131, 169, 127, 85, 43, 1, 41, 3, 125, 87, 129, 171, 213, 255, 100, 78, 48, 26, 204, 230, 152, 178, 179, 153, 231, 205, 27, 49, 79, 101, 254, 212, 170, 128, 86, 124, 2, 40, 82, 120, 6, 44, 250, 208, 174, 132, 31, 53, 75, 97, 183, 157, 227, 201, 200, 226, 156, 182, 96, 74, 52, 30, 133, 175, 209, 251, 45, 7, 121, 83, 123, 81, 47, 5, 211, 249, 135, 173, 54, 28, 98, 72, 158, 180, 202, 224, 225, 203, 181, 159, 73, 99, 29, 55, 172, 134, 248, 210, 4, 46, 80, 122, 164, 142, 240, 218, 12, 38, 88, 114, 233, 195, 189, 151, 65, 107, 21, 63, 62, 20, 106, 64, 150, 188, 194, 232, 115, 89, 39, 13, 219, 241, 143, 165, 141, 167, 217, 243, 37, 15, 113, 91, 192, 234, 148, 190, 104, 66, 60, 22, 23, 61, 67, 105, 191, 149, 235, 193, 90, 112, 14, 36, 242, 216, 166, 140, 246, 220, 162, 136, 94, 116, 10, 32, 187, 145, 239, 197, 19, 57, 71, 109, 108, 70, 56, 18, 196, 238, 144, 186, 33, 11, 117, 95, 137, 163, 221, 247, 223, 245, 139, 161, 119, 93, 35, 9, 146, 184, 198, 236, 58, 16, 110, 68, 69, 111, 17, 59, 237, 199, 185, 147, 8, 34, 92, 118, 160, 138, 244, 222, ],
[0, 43, 86, 125, 172, 135, 250, 209, 69, 110, 19, 56, 233, 194, 191, 148, 138, 161, 220, 247, 38, 13, 112, 91, 207, 228, 153, 178, 99, 72, 53, 30, 9, 34, 95, 116, 165, 142, 243, 216, 76, 103, 26, 49, 224, 203, 182, 157, 131, 168, 213, 254, 47, 4, 121, 82, 198, 237, 144, 187, 106, 65, 60, 23, 18, 57, 68, 111, 190, 149, 232, 195, 87, 124, 1, 42, 251, 208, 173, 134, 152, 179, 206, 229, 52, 31, 98, 73, 221, 246, 139, 160, 113, 90, 39, 12, 27, 48, 77, 102, 183, 156, 225, 202, 94, 117, 8, 35, 242, 217, 164, 143, 145, 186, 199, 236, 61, 22, 107, 64, 212, 255, 130, 169, 120, 83, 46, 5, 36, 15, 114, 89, 136, 163, 222, 245, 97, 74, 55, 28, 205, 230, 155, 176, 174, 133, 248, 211, 2, 41, 84, 127, 235, 192, 189, 150, 71, 108, 17, 58, 45, 6, 123, 80, 129, 170, 215, 252, 104, 67, 62, 21, 196, 239, 146, 185, 167, 140, 241, 218, 11, 32, 93, 118, 226, 201, 180, 159, 78, 101, 24, 51, 54, 29, 96, 75, 154, 177, 204, 231, 115, 88, 37, 14, 223, 244, 137, 162, 188, 151, 234, 193, 16, 59, 70, 109, 249, 210, 175, 132, 85, 126, 3, 40, 63, 20, 105, 66, 147, 184, 197, 238, 122, 81, 44, 7, 214, 253, 128, 171, 181, 158, 227, 200, 25, 50, 79, 100, 240, 219, 166, 141, 92, 119, 10, 33, ],
[0, 44, 88, 116, 176, 156, 232, 196, 125, 81, 37, 9, 205, 225, 149, 185, 250, 214, 162, 142, 74, 102, 18, 62, 135, 171, 223, 243, 55, 27, 111, 67, 233, 197, 177, 157, 89, 117, 1, 45, 148, 184, 204, 224, 36, 8, 124, 80, 19, 63, 75, 103, 163, 143, 251, 215, 110, 66, 54, 26, 222, 242, 134, 170, 207, 227, 151, 187, 127, 83, 39, 11, 178, 158, 234, 198, 2, 46, 90, 118, 53, 25, 109, 65, 133, 169, 221, 241, 72, 100, 16, 60, 248, 212, 160, 140, 38, 10, 126, 82, 150, 186, 206, 226, 91, 119, 3, 47, 235, 199, 179, 159, 220, 240, 132, 168, 108, 64, 52, 24, 161, 141, 249, 213, 17, 61, 73, 101, 131, 175, 219, 247, 51, 31, 107, 71, 254, 210, 166, 138, 78, 98, 22, 58, 121, 85, 33, 13, 201, 229, 145, 189, 4, 40, 92, 112, 180, 152, 236, 192, 106, 70, 50, 30, 218, 246, 130, 174, 23, 59, 79, 99, 167, 139, 255, 211, 144, 188, 200, 228, 32, 12, 120, 84, 237, 193, 181, 153, 93, 113, 5, 41, 76, 96, 20, 56, 252, 208, 164, 136, 49, 29, 105, 69, 129, 173, 217, 245, 182, 154, 238, 194, 6, 42, 94, 114, 203, 231, 147, 191, 123, 87, 35, 15, 165, 137, 253, 209, 21, 57, 77, 97, 216, 244, 128, 172, 104, 68, 48, 28, 95, 115, 7, 43, 239, 195, 183, 155, 34, 14, 122, 86, 146, 190, 202, 230, ],
[0, 45, 90, 119, 180, 153, 238, 195, 117, 88, 47, 2, 193, 236, 155, 182, 234, 199, 176, 157, 94, 115, 4, 41, 159, 178, 197, 232, 43, 6, 113, 92, 201, 228, 147, 190, 125, 80, 39, 10, 188, 145, 230, 203, 8, 37, 82, 127, 35, 14, 121, 84, 151, 186, 205, 224, 86, 123, 12, 33, 226, 207, 184, 149, 143, 162, 213, 248, 59, 22, 97, 76, 250, 215, 160, 141, 78, 99, 20, 57, 101, 72, 63, 18, 209, 252, 139, 166, 16, 61, 74, 103, 164, 137, 254, 211, 70, 107, 28, 49, 242, 223, 168, 133, 51, 30, 105, 68, 135, 170, 221, 240, 172, 129, 246, 219, 24, 53, 66, 111, 217, 244, 131, 174, 109, 64, 55, 26, 3, 46, 89, 116, 183, 154, 237, 192, 118, 91, 44, 1, 194, 239, 152, 181, 233, 196, 179, 158, 93, 112, 7, 42, 156, 177, 198, 235, 40, 5, 114, 95, 202, 231, 144, 189, 126, 83, 36, 9, 191, 146, 229, 200, 11, 38, 81, 124, 32, 13, 122, 87, 148, 185, 206, 227, 85, 120, 15, 34, 225, 204, 187, 150, 140, 161, 214, 251, 56, 21, 98, 79, 249, 212, 163, 142, 77, 96, 23, 58, 102, 75, 60, 17, 210, 255, 136, 165, 19, 62, 73, 100, 167, 138, 253, 208, 69, 104, 31, 50, 241, 220, 171, 134, 48, 29, 106, 71, 132, 169, 222, 243, 175, 130, 245, 216, 27, 54, 65, 108, 218, 247, 128, 173, 110, 67, 52, 25, ],
[0, 46, 92, 114, 184, 150, 228, 202, 109, 67, 49, 31, 213, 251, 137, 167, 218, 244, 134, 168, 98, 76, 62, 16, 183, 153, 235, 197, 15, 33, 83, 125, 169, 135, 245, 219, 17, 63, 77, 99, 196, 234, 152, 182, 124, 82, 32, 14, 115, 93, 47, 1, 203, 229, 151, 185, 30, 48, 66, 108, 166, 136, 250, 212, 79, 97, 19, 61, 247, 217, 171, 133, 34, 12, 126, 80, 154, 180, 198, 232, 149, 187, 201, 231, 45, 3, 113, 95, 248, 214, 164, 138, 64, 110, 28, 50, 230, 200, 186, 148, 94, 112, 2, 44, 139, 165, 215, 249, 51, 29, 111, 65, 60, 18, 96, 78, 132, 170, 216, 246, 81, 127, 13, 35, 233, 199, 181, 155, 158, 176, 194, 236, 38, 8, 122, 84, 243, 221, 175, 129, 75, 101, 23, 57, 68, 106, 24, 54, 252, 210, 160, 142, 41, 7, 117, 91, 145, 191, 205, 227, 55, 25, 107, 69, 143, 161, 211, 253, 90, 116, 6, 40, 226, 204, 190, 144, 237, 195, 177, 159, 85, 123, 9, 39, 128, 174, 220, 242, 56, 22, 100, 74, 209, 255, 141, 163, 105, 71, 53, 27, 188, 146, 224, 206, 4, 42, 88, 118, 11, 37, 87, 121, 179, 157, 239, 193, 102, 72, 58, 20, 222, 240, 130, 172, 120, 86, 36, 10, 192, 238, 156, 178, 21, 59, 73, 103, 173, 131, 241, 223, 162, 140, 254, 208, 26, 52, 70, 104, 207, 225, 147, 189, 119, 89, 43, 5, ],
[0, 47, 94, 113, 188, 147, 226, 205, 101, 74, 59, 20, 217, 246, 135, 168, 202, 229, 148, 187, 118, 89, 40, 7, 175, 128, 241, 222, 19, 60, 77, 98, 137, 166, 215, 248, 53, 26, 107, 68, 236, 195, 178, 157, 80, 127, 14, 33, 67, 108, 29, 50, 255, 208, 161, 142, 38, 9, 120, 87, 154, 181, 196, 235, 15, 32, 81, 126, 179, 156, 237, 194, 106, 69, 52, 27, 214, 249, 136, 167, 197, 234, 155, 180, 121, 86, 39, 8, 160, 143, 254, 209, 28, 51, 66, 109, 134, 169, 216, 247, 58, 21, 100, 75, 227, 204, 189, 146, 95, 112, 1, 46, 76, 99, 18, 61, 240, 223, 174, 129, 41, 6, 119, 88, 149, 186, 203, 228, 30, 49, 64, 111, 162, 141, 252, 211, 123, 84, 37, 10, 199, 232, 153, 182, 212, 251, 138, 165, 104, 71, 54, 25, 177, 158, 239, 192, 13, 34, 83, 124, 151, 184, 201, 230, 43, 4, 117, 90, 242, 221, 172, 131, 78, 97, 16, 63, 93, 114, 3, 44, 225, 206, 191, 144, 56, 23, 102, 73, 132, 171, 218, 245, 17, 62, 79, 96, 173, 130, 243, 220, 116, 91, 42, 5, 200, 231, 150, 185, 219, 244, 133, 170, 103, 72, 57, 22, 190, 145, 224, 207, 2, 45, 92, 115, 152, 183, 198, 233, 36, 11, 122, 85, 253, 210, 163, 140, 65, 110, 31, 48, 82, 125, 12, 35, 238, 193, 176, 159, 55, 24, 105, 70, 139, 164, 213, 250, ],
[0, 48, 96, 80, 192, 240, 160, 144, 157, 173, 253, 205, 93, 109, 61, 13, 39, 23, 71, 119, 231, 215, 135, 183, 186, 138, 218, 234, 122, 74, 26, 42, 78, 126, 46, 30, 142, 190, 238, 222, 211, 227, 179, 131, 19, 35, 115, 67, 105, 89, 9, 57, 169, 153, 201, 249, 244, 196, 148, 164, 52, 4, 84, 100, 156, 172, 252, 204, 92, 108, 60, 12, 1, 49, 97, 81, 193, 241, 161, 145, 187, 139, 219, 235, 123, 75, 27, 43, 38, 22, 70, 118, 230, 214, 134, 182, 210, 226, 178, 130, 18, 34, 114, 66, 79, 127, 47, 31, 143, 191, 239, 223, 245, 197, 149, 165, 53, 5, 85, 101, 104, 88, 8, 56, 168, 152, 200, 248, 37, 21, 69, 117, 229, 213, 133, 181, 184, 136, 216, 232, 120, 72, 24, 40, 2, 50, 98, 82, 194, 242, 162, 146, 159, 175, 255, 207, 95, 111, 63, 15, 107, 91, 11, 59, 171, 155, 203, 251, 246, 198, 150, 166, 54, 6, 86, 102, 76, 124, 44, 28, 140, 188, 236, 220, 209, 225, 177, 129, 17, 33, 113, 65, 185, 137, 217, 233, 121, 73, 25, 41, 36, 20, 68, 116, 228, 212, 132, 180, 158, 174, 254, 206, 94, 110, 62, 14, 3, 51, 99, 83, 195, 243, 163, 147, 247, 199, 151, 167, 55, 7, 87, 103, 106, 90, 10, 58, 170, 154, 202, 250, 208, 224, 176, 128, 16, 32, 112, 64, 77, 125, 45, 29, 141, 189, 237, 221, ],
[0, 49, 98, 83, 196, 245, 166, 151, 149, 164, 247, 198, 81, 96, 51, 2, 55, 6, 85, 100, 243, 194, 145, 160, 162, 147, 192, 241, 102, 87, 4, 53, 110, 95, 12, 61, 170, 155, 200, 249, 251, 202, 153, 168, 63, 14, 93, 108, 89, 104, 59, 10, 157, 172, 255, 206, 204, 253, 174, 159, 8, 57, 106, 91, 220, 237, 190, 143, 24, 41, 122, 75, 73, 120, 43, 26, 141, 188, 239, 222, 235, 218, 137, 184, 47, 30, 77, 124, 126, 79, 28, 45, 186, 139, 216, 233, 178, 131, 208, 225, 118, 71, 20, 37, 39, 22, 69, 116, 227, 210, 129, 176, 133, 180, 231, 214, 65, 112, 35, 18, 16, 33, 114, 67, 212, 229, 182, 135, 165, 148, 199, 246, 97, 80, 3, 50, 48, 1, 82, 99, 244, 197, 150, 167, 146, 163, 240, 193, 86, 103, 52, 5, 7, 54, 101, 84, 195, 242, 161, 144, 203, 250, 169, 152, 15, 62, 109, 92, 94, 111, 60, 13, 154, 171, 248, 201, 252, 205, 158, 175, 56, 9, 90, 107, 105, 88, 11, 58, 173, 156, 207, 254, 121, 72, 27, 42, 189, 140, 223, 238, 236, 221, 142, 191, 40, 25, 74, 123, 78, 127, 44, 29, 138, 187, 232, 217, 219, 234, 185, 136, 31, 46, 125, 76, 23, 38, 117, 68, 211, 226, 177, 128, 130, 179, 224, 209, 70, 119, 36, 21, 32, 17, 66, 115, 228, 213, 134, 183, 181, 132, 215, 230, 113, 64, 19, 34, ],
[0, 50, 100, 86, 200, 250, 172, 158, 141, 191, 233, 219, 69, 119, 33, 19, 7, 53, 99, 81, 207, 253, 171, 153, 138, 184, 238, 220, 66, 112, 38, 20, 14, 60, 106, 88, 198, 244, 162, 144, 131, 177, 231, 213, 75, 121, 47, 29, 9, 59, 109, 95, 193, 243, 165, 151, 132, 182, 224, 210, 76, 126, 40, 26, 28, 46, 120, 74, 212, 230, 176, 130, 145, 163, 245, 199, 89, 107, 61, 15, 27, 41, 127, 77, 211, 225, 183, 133, 150, 164, 242, 192, 94, 108, 58, 8, 18, 32, 118, 68, 218, 232, 190, 140, 159, 173, 251, 201, 87, 101, 51, 1, 21, 39, 113, 67, 221, 239, 185, 139, 152, 170, 252, 206, 80, 98, 52, 6, 56, 10, 92, 110, 240, 194, 148, 166, 181, 135, 209, 227, 125, 79, 25, 43, 63, 13, 91, 105, 247, 197, 147, 161, 178, 128, 214, 228, 122, 72, 30, 44, 54, 4, 82, 96, 254, 204, 154, 168, 187, 137, 223, 237, 115, 65, 23, 37, 49, 3, 85, 103, 249, 203, 157, 175, 188, 142, 216, 234, 116, 70, 16, 34, 36, 22, 64, 114, 236, 222, 136, 186, 169, 155, 205, 255, 97, 83, 5, 55, 35, 17, 71, 117, 235, 217, 143, 189, 174, 156, 202, 248, 102, 84, 2, 48, 42, 24, 78, 124, 226, 208, 134, 180, 167, 149, 195, 241, 111, 93, 11, 57, 45, 31, 73, 123, 229, 215, 129, 179, 160, 146, 196, 246, 104, 90, 12, 62, ],
[0, 51, 102, 85, 204, 255, 170, 153, 133, 182, 227, 208, 73, 122, 47, 28, 23, 36, 113, 66, 219, 232, 189, 142, 146, 161, 244, 199, 94, 109, 56, 11, 46, 29, 72, 123, 226, 209, 132, 183, 171, 152, 205, 254, 103, 84, 1, 50, 57, 10, 95, 108, 245, 198, 147, 160, 188, 143, 218, 233, 112, 67, 22, 37, 92, 111, 58, 9, 144, 163, 246, 197, 217, 234, 191, 140, 21, 38, 115, 64, 75, 120, 45, 30, 135, 180, 225, 210, 206, 253, 168, 155, 2, 49, 100, 87, 114, 65, 20, 39, 190, 141, 216, 235, 247, 196, 145, 162, 59, 8, 93, 110, 101, 86, 3, 48, 169, 154, 207, 252, 224, 211, 134, 181, 44, 31, 74, 121, 184, 139, 222, 237, 116, 71, 18, 33, 61, 14, 91, 104, 241, 194, 151, 164, 175, 156, 201, 250, 99, 80, 5, 54, 42, 25, 76, 127, 230, 213, 128, 179, 150, 165, 240, 195, 90, 105, 60, 15, 19, 32, 117, 70, 223, 236, 185, 138, 129, 178, 231, 212, 77, 126, 43, 24, 4, 55, 98, 81, 200, 251, 174, 157, 228, 215, 130, 177, 40, 27, 78, 125, 97, 82, 7, 52, 173, 158, 203, 248, 243, 192, 149, 166, 63, 12, 89, 106, 118, 69, 16, 35, 186, 137, 220, 239, 202, 249, 172, 159, 6, 53, 96, 83, 79, 124, 41, 26, 131, 176, 229, 214, 221, 238, 187, 136, 17, 34, 119, 68, 88, 107, 62, 13, 148, 167, 242, 193, ],
[0, 52, 104, 92, 208, 228, 184, 140, 189, 137, 213, 225, 109, 89, 5, 49, 103, 83, 15, 59, 183, 131, 223, 235, 218, 238, 178, 134, 10, 62, 98, 86, 206, 250, 166, 146, 30, 42, 118, 66, 115, 71, 27, 47, 163, 151, 203, 255, 169, 157, 193, 245, 121, 77, 17, 37, 20, 32, 124, 72, 196, 240, 172, 152, 129, 181, 233, 221, 81, 101, 57, 13, 60, 8, 84, 96, 236, 216, 132, 176, 230, 210, 142, 186, 54, 2, 94, 106, 91, 111, 51, 7, 139, 191, 227, 215, 79, 123, 39, 19, 159, 171, 247, 195, 242, 198, 154, 174, 34, 22, 74, 126, 40, 28, 64, 116, 248, 204, 144, 164, 149, 161, 253, 201, 69, 113, 45, 25, 31, 43, 119, 67, 207, 251, 167, 147, 162, 150, 202, 254, 114, 70, 26, 46, 120, 76, 16, 36, 168, 156, 192, 244, 197, 241, 173, 153, 21, 33, 125, 73, 209, 229, 185, 141, 1, 53, 105, 93, 108, 88, 4, 48, 188, 136, 212, 224, 182, 130, 222, 234, 102, 82, 14, 58, 11, 63, 99, 87, 219, 239, 179, 135, 158, 170, 246, 194, 78, 122, 38, 18, 35, 23, 75, 127, 243, 199, 155, 175, 249, 205, 145, 165, 41, 29, 65, 117, 68, 112, 44, 24, 148, 160, 252, 200, 80, 100, 56, 12, 128, 180, 232, 220, 237, 217, 133, 177, 61, 9, 85, 97, 55, 3, 95, 107, 231, 211, 143, 187, 138, 190, 226, 214, 90, 110, 50, 6, ],
[0, 53, 106, 95, 212, 225, 190, 139, 181, 128, 223, 234, 97, 84, 11, 62, 119, 66, 29, 40, 163, 150, 201, 252, 194, 247, 168, 157, 22, 35, 124, 73, 238, 219, 132, 177, 58, 15, 80, 101, 91, 110, 49, 4, 143, 186, 229, 208, 153, 172, 243, 198, 77, 120, 39, 18, 44, 25, 70, 115, 248, 205, 146, 167, 193, 244, 171, 158, 21, 32, 127, 74, 116, 65, 30, 43, 160, 149, 202, 255, 182, 131, 220, 233, 98, 87, 8, 61, 3, 54, 105, 92, 215, 226, 189, 136, 47, 26, 69, 112, 251, 206, 145, 164, 154, 175, 240, 197, 78, 123, 36, 17, 88, 109, 50, 7, 140, 185, 230, 211, 237, 216, 135, 178, 57, 12, 83, 102, 159, 170, 245, 192, 75, 126, 33, 20, 42, 31, 64, 117, 254, 203, 148, 161, 232, 221, 130, 183, 60, 9, 86, 99, 93, 104, 55, 2, 137, 188, 227, 214, 113, 68, 27, 46, 165, 144, 207, 250, 196, 241, 174, 155, 16, 37, 122, 79, 6, 51, 108, 89, 210, 231, 184, 141, 179, 134, 217, 236, 103, 82, 13, 56, 94, 107, 52, 1, 138, 191, 224, 213, 235, 222, 129, 180, 63, 10, 85, 96, 41, 28, 67, 118, 253, 200, 151, 162, 156, 169, 246, 195, 72, 125, 34, 23, 176, 133, 218, 239, 100, 81, 14, 59, 5, 48, 111, 90, 209, 228, 187, 142, 199, 242, 173, 152, 19, 38, 121, 76, 114, 71, 24, 45, 166, 147, 204, 249, ],
[0, 54, 108, 90, 216, 238, 180, 130, 173, 155, 193, 247, 117, 67, 25, 47, 71, 113, 43, 29, 159, 169, 243, 197, 234, 220, 134, 176, 50, 4, 94, 104, 142, 184, 226, 212, 86, 96, 58, 12, 35, 21, 79, 121, 251, 205, 151, 161, 201, 255, 165, 147, 17, 39, 125, 75, 100, 82, 8, 62, 188, 138, 208, 230, 1, 55, 109, 91, 217, 239, 181, 131, 172, 154, 192, 246, 116, 66, 24, 46, 70, 112, 42, 28, 158, 168, 242, 196, 235, 221, 135, 177, 51, 5, 95, 105, 143, 185, 227, 213, 87, 97, 59, 13, 34, 20, 78, 120, 250, 204, 150, 160, 200, 254, 164, 146, 16, 38, 124, 74, 101, 83, 9, 63, 189, 139, 209, 231, 2, 52, 110, 88, 218, 236, 182, 128, 175, 153, 195, 245, 119, 65, 27, 45, 69, 115, 41, 31, 157, 171, 241, 199, 232, 222, 132, 178, 48, 6, 92, 106, 140, 186, 224, 214, 84, 98, 56, 14, 33, 23, 77, 123, 249, 207, 149, 163, 203, 253, 167, 145, 19, 37, 127, 73, 102, 80, 10, 60, 190, 136, 210, 228, 3, 53, 111, 89, 219, 237, 183, 129, 174, 152, 194, 244, 118, 64, 26, 44, 68, 114, 40, 30, 156, 170, 240, 198, 233, 223, 133, 179, 49, 7, 93, 107, 141, 187, 225, 215, 85, 99, 57, 15, 32, 22, 76, 122, 248, 206, 148, 162, 202, 252, 166, 144, 18, 36, 126, 72, 103, 81, 11, 61, 191, 137, 211, 229, ],
[0, 55, 110, 89, 220, 235, 178, 133, 165, 146, 203, 252, 121, 78, 23, 32, 87, 96, 57, 14, 139, 188, 229, 210, 242, 197, 156, 171, 46, 25, 64, 119, 174, 153, 192, 247, 114, 69, 28, 43, 11, 60, 101, 82, 215, 224, 185, 142, 249, 206, 151, 160, 37, 18, 75, 124, 92, 107, 50, 5, 128, 183, 238, 217, 65, 118, 47, 24, 157, 170, 243, 196, 228, 211, 138, 189, 56, 15, 86, 97, 22, 33, 120, 79, 202, 253, 164, 147, 179, 132, 221, 234, 111, 88, 1, 54, 239, 216, 129, 182, 51, 4, 93, 106, 74, 125, 36, 19, 150, 161, 248, 207, 184, 143, 214, 225, 100, 83, 10, 61, 29, 42, 115, 68, 193, 246, 175, 152, 130, 181, 236, 219, 94, 105, 48, 7, 39, 16, 73, 126, 251, 204, 149, 162, 213, 226, 187, 140, 9, 62, 103, 80, 112, 71, 30, 41, 172, 155, 194, 245, 44, 27, 66, 117, 240, 199, 158, 169, 137, 190, 231, 208, 85, 98, 59, 12, 123, 76, 21, 34, 167, 144, 201, 254, 222, 233, 176, 135, 2, 53, 108, 91, 195, 244, 173, 154, 31, 40, 113, 70, 102, 81, 8, 63, 186, 141, 212, 227, 148, 163, 250, 205, 72, 127, 38, 17, 49, 6, 95, 104, 237, 218, 131, 180, 109, 90, 3, 52, 177, 134, 223, 232, 200, 255, 166, 145, 20, 35, 122, 77, 58, 13, 84, 99, 230, 209, 136, 191, 159, 168, 241, 198, 67, 116, 45, 26, ],
[0, 56, 112, 72, 224, 216, 144, 168, 221, 229, 173, 149, 61, 5, 77, 117, 167, 159, 215, 239, 71, 127, 55, 15, 122, 66, 10, 50, 154, 162, 234, 210, 83, 107, 35, 27, 179, 139, 195, 251, 142, 182, 254, 198, 110, 86, 30, 38, 244, 204, 132, 188, 20, 44, 100, 92, 41, 17, 89, 97, 201, 241, 185, 129, 166, 158, 214, 238, 70, 126, 54, 14, 123, 67, 11, 51, 155, 163, 235, 211, 1, 57, 113, 73, 225, 217, 145, 169, 220, 228, 172, 148, 60, 4, 76, 116, 245, 205, 133, 189, 21, 45, 101, 93, 40, 16, 88, 96, 200, 240, 184, 128, 82, 106, 34, 26, 178, 138, 194, 250, 143, 183, 255, 199, 111, 87, 31, 39, 81, 105, 33, 25, 177, 137, 193, 249, 140, 180, 252, 196, 108, 84, 28, 36, 246, 206, 134, 190, 22, 46, 102, 94, 43, 19, 91, 99, 203, 243, 187, 131, 2, 58, 114, 74, 226, 218, 146, 170, 223, 231, 175, 151, 63, 7, 79, 119, 165, 157, 213, 237, 69, 125, 53, 13, 120, 64, 8, 48, 152, 160, 232, 208, 247, 207, 135, 191, 23, 47, 103, 95, 42, 18, 90, 98, 202, 242, 186, 130, 80, 104, 32, 24, 176, 136, 192, 248, 141, 181, 253, 197, 109, 85, 29, 37, 164, 156, 212, 236, 68, 124, 52, 12, 121, 65, 9, 49, 153, 161, 233, 209, 3, 59, 115, 75, 227, 219, 147, 171, 222, 230, 174, 150, 62, 6, 78, 118, ],
[0, 57, 114, 75, 228, 221, 150, 175, 213, 236, 167, 158, 49, 8, 67, 122, 183, 142, 197, 252, 83, 106, 33, 24, 98, 91, 16, 41, 134, 191, 244, 205, 115, 74, 1, 56, 151, 174, 229, 220, 166, 159, 212, 237, 66, 123, 48, 9, 196, 253, 182, 143, 32, 25, 82, 107, 17, 40, 99, 90, 245, 204, 135, 190, 230, 223, 148, 173, 2, 59, 112, 73, 51, 10, 65, 120, 215, 238, 165, 156, 81, 104, 35, 26, 181, 140, 199, 254, 132, 189, 246, 207, 96, 89, 18, 43, 149, 172, 231, 222, 113, 72, 3, 58, 64, 121, 50, 11, 164, 157, 214, 239, 34, 27, 80, 105, 198, 255, 180, 141, 247, 206, 133, 188, 19, 42, 97, 88, 209, 232, 163, 154, 53, 12, 71, 126, 4, 61, 118, 79, 224, 217, 146, 171, 102, 95, 20, 45, 130, 187, 240, 201, 179, 138, 193, 248, 87, 110, 37, 28, 162, 155, 208, 233, 70, 127, 52, 13, 119, 78, 5, 60, 147, 170, 225, 216, 21, 44, 103, 94, 241, 200, 131, 186, 192, 249, 178, 139, 36, 29, 86, 111, 55, 14, 69, 124, 211, 234, 161, 152, 226, 219, 144, 169, 6, 63, 116, 77, 128, 185, 242, 203, 100, 93, 22, 47, 85, 108, 39, 30, 177, 136, 195, 250, 68, 125, 54, 15, 160, 153, 210, 235, 145, 168, 227, 218, 117, 76, 7, 62, 243, 202, 129, 184, 23, 46, 101, 92, 38, 31, 84, 109, 194, 251, 176, 137, ],
[0, 58, 116, 78, 232, 210, 156, 166, 205, 247, 185, 131, 37, 31, 81, 107, 135, 189, 243, 201, 111, 85, 27, 33, 74, 112, 62, 4, 162, 152, 214, 236, 19, 41, 103, 93, 251, 193, 143, 181, 222, 228, 170, 144, 54, 12, 66, 120, 148, 174, 224, 218, 124, 70, 8, 50, 89, 99, 45, 23, 177, 139, 197, 255, 38, 28, 82, 104, 206, 244, 186, 128, 235, 209, 159, 165, 3, 57, 119, 77, 161, 155, 213, 239, 73, 115, 61, 7, 108, 86, 24, 34, 132, 190, 240, 202, 53, 15, 65, 123, 221, 231, 169, 147, 248, 194, 140, 182, 16, 42, 100, 94, 178, 136, 198, 252, 90, 96, 46, 20, 127, 69, 11, 49, 151, 173, 227, 217, 76, 118, 56, 2, 164, 158, 208, 234, 129, 187, 245, 207, 105, 83, 29, 39, 203, 241, 191, 133, 35, 25, 87, 109, 6, 60, 114, 72, 238, 212, 154, 160, 95, 101, 43, 17, 183, 141, 195, 249, 146, 168, 230, 220, 122, 64, 14, 52, 216, 226, 172, 150, 48, 10, 68, 126, 21, 47, 97, 91, 253, 199, 137, 179, 106, 80, 30, 36, 130, 184, 246, 204, 167, 157, 211, 233, 79, 117, 59, 1, 237, 215, 153, 163, 5, 63, 113, 75, 32, 26, 84, 110, 200, 242, 188, 134, 121, 67, 13, 55, 145, 171, 229, 223, 180, 142, 192, 250, 92, 102, 40, 18, 254, 196, 138, 176, 22, 44, 98, 88, 51, 9, 71, 125, 219, 225, 175, 149, ],
[0, 59, 118, 77, 236, 215, 154, 161, 197, 254, 179, 136, 41, 18, 95, 100, 151, 172, 225, 218, 123, 64, 13, 54, 82, 105, 36, 31, 190, 133, 200, 243, 51, 8, 69, 126, 223, 228, 169, 146, 246, 205, 128, 187, 26, 33, 108, 87, 164, 159, 210, 233, 72, 115, 62, 5, 97, 90, 23, 44, 141, 182, 251, 192, 102, 93, 16, 43, 138, 177, 252, 199, 163, 152, 213, 238, 79, 116, 57, 2, 241, 202, 135, 188, 29, 38, 107, 80, 52, 15, 66, 121, 216, 227, 174, 149, 85, 110, 35, 24, 185, 130, 207, 244, 144, 171, 230, 221, 124, 71, 10, 49, 194, 249, 180, 143, 46, 21, 88, 99, 7, 60, 113, 74, 235, 208, 157, 166, 204, 247, 186, 129, 32, 27, 86, 109, 9, 50, 127, 68, 229, 222, 147, 168, 91, 96, 45, 22, 183, 140, 193, 250, 158, 165, 232, 211, 114, 73, 4, 63, 255, 196, 137, 178, 19, 40, 101, 94, 58, 1, 76, 119, 214, 237, 160, 155, 104, 83, 30, 37, 132, 191, 242, 201, 173, 150, 219, 224, 65, 122, 55, 12, 170, 145, 220, 231, 70, 125, 48, 11, 111, 84, 25, 34, 131, 184, 245, 206, 61, 6, 75, 112, 209, 234, 167, 156, 248, 195, 142, 181, 20, 47, 98, 89, 153, 162, 239, 212, 117, 78, 3, 56, 92, 103, 42, 17, 176, 139, 198, 253, 14, 53, 120, 67, 226, 217, 148, 175, 203, 240, 189, 134, 39, 28, 81, 106, ],
[0, 60, 120, 68, 240, 204, 136, 180, 253, 193, 133, 185, 13, 49, 117, 73, 231, 219, 159, 163, 23, 43, 111, 83, 26, 38, 98, 94, 234, 214, 146, 174, 211, 239, 171, 151, 35, 31, 91, 103, 46, 18, 86, 106, 222, 226, 166, 154, 52, 8, 76, 112, 196, 248, 188, 128, 201, 245, 177, 141, 57, 5, 65, 125, 187, 135, 195, 255, 75, 119, 51, 15, 70, 122, 62, 2, 182, 138, 206, 242, 92, 96, 36, 24, 172, 144, 212, 232, 161, 157, 217, 229, 81, 109, 41, 21, 104, 84, 16, 44, 152, 164, 224, 220, 149, 169, 237, 209, 101, 89, 29, 33, 143, 179, 247, 203, 127, 67, 7, 59, 114, 78, 10, 54, 130, 190, 250, 198, 107, 87, 19, 47, 155, 167, 227, 223, 150, 170, 238, 210, 102, 90, 30, 34, 140, 176, 244, 200, 124, 64, 4, 56, 113, 77, 9, 53, 129, 189, 249, 197, 184, 132, 192, 252, 72, 116, 48, 12, 69, 121, 61, 1, 181, 137, 205, 241, 95, 99, 39, 27, 175, 147, 215, 235, 162, 158, 218, 230, 82, 110, 42, 22, 208, 236, 168, 148, 32, 28, 88, 100, 45, 17, 85, 105, 221, 225, 165, 153, 55, 11, 79, 115, 199, 251, 191, 131, 202, 246, 178, 142, 58, 6, 66, 126, 3, 63, 123, 71, 243, 207, 139, 183, 254, 194, 134, 186, 14, 50, 118, 74, 228, 216, 156, 160, 20, 40, 108, 80, 25, 37, 97, 93, 233, 213, 145, 173, ],
[0, 61, 122, 71, 244, 201, 142, 179, 245, 200, 143, 178, 1, 60, 123, 70, 247, 202, 141, 176, 3, 62, 121, 68, 2, 63, 120, 69, 246, 203, 140, 177, 243, 206, 137, 180, 7, 58, 125, 64, 6, 59, 124, 65, 242, 207, 136, 181, 4, 57, 126, 67, 240, 205, 138, 183, 241, 204, 139, 182, 5, 56, 127, 66, 251, 198, 129, 188, 15, 50, 117, 72, 14, 51, 116, 73, 250, 199, 128, 189, 12, 49, 118, 75, 248, 197, 130, 191, 249, 196, 131, 190, 13, 48, 119, 74, 8, 53, 114, 79, 252, 193, 134, 187, 253, 192, 135, 186, 9, 52, 115, 78, 255, 194, 133, 184, 11, 54, 113, 76, 10, 55, 112, 77, 254, 195, 132, 185, 235, 214, 145, 172, 31, 34, 101, 88, 30, 35, 100, 89, 234, 215, 144, 173, 28, 33, 102, 91, 232, 213, 146, 175, 233, 212, 147, 174, 29, 32, 103, 90, 24, 37, 98, 95, 236, 209, 150, 171, 237, 208, 151, 170, 25, 36, 99, 94, 239, 210, 149, 168, 27, 38, 97, 92, 26, 39, 96, 93, 238, 211, 148, 169, 16, 45, 106, 87, 228, 217, 158, 163, 229, 216, 159, 162, 17, 44, 107, 86, 231, 218, 157, 160, 19, 46, 105, 84, 18, 47, 104, 85, 230, 219, 156, 161, 227, 222, 153, 164, 23, 42, 109, 80, 22, 43, 108, 81, 226, 223, 152, 165, 20, 41, 110, 83, 224, 221, 154, 167, 225, 220, 155, 166, 21, 40, 111, 82, ],
[0, 62, 124, 66, 248, 198, 132, 186, 237, 211, 145, 175, 21, 43, 105, 87, 199, 249, 187, 133, 63, 1, 67, 125, 42, 20, 86, 104, 210, 236, 174, 144, 147, 173, 239, 209, 107, 85, 23, 41, 126, 64, 2, 60, 134, 184, 250, 196, 84, 106, 40, 22, 172, 146, 208, 238, 185, 135, 197, 251, 65, 127, 61, 3, 59, 5, 71, 121, 195, 253, 191, 129, 214, 232, 170, 148, 46, 16, 82, 108, 252, 194, 128, 190, 4, 58, 120, 70, 17, 47, 109, 83, 233, 215, 149, 171, 168, 150, 212, 234, 80, 110, 44, 18, 69, 123, 57, 7, 189, 131, 193, 255, 111, 81, 19, 45, 151, 169, 235, 213, 130, 188, 254, 192, 122, 68, 6, 56, 118, 72, 10, 52, 142, 176, 242, 204, 155, 165, 231, 217, 99, 93, 31, 33, 177, 143, 205, 243, 73, 119, 53, 11, 92, 98, 32, 30, 164, 154, 216, 230, 229, 219, 153, 167, 29, 35, 97, 95, 8, 54, 116, 74, 240, 206, 140, 178, 34, 28, 94, 96, 218, 228, 166, 152, 207, 241, 179, 141, 55, 9, 75, 117, 77, 115, 49, 15, 181, 139, 201, 247, 160, 158, 220, 226, 88, 102, 36, 26, 138, 180, 246, 200, 114, 76, 14, 48, 103, 89, 27, 37, 159, 161, 227, 221, 222, 224, 162, 156, 38, 24, 90, 100, 51, 13, 79, 113, 203, 245, 183, 137, 25, 39, 101, 91, 225, 223, 157, 163, 244, 202, 136, 182, 12, 50, 112, 78, ],
[0, 63, 126, 65, 252, 195, 130, 189, 229, 218, 155, 164, 25, 38, 103, 88, 215, 232, 169, 150, 43, 20, 85, 106, 50, 13, 76, 115, 206, 241, 176, 143, 179, 140, 205, 242, 79, 112, 49, 14, 86, 105, 40, 23, 170, 149, 212, 235, 100, 91, 26, 37, 152, 167, 230, 217, 129, 190, 255, 192, 125, 66, 3, 60, 123, 68, 5, 58, 135, 184, 249, 198, 158, 161, 224, 223, 98, 93, 28, 35, 172, 147, 210, 237, 80, 111, 46, 17, 73, 118, 55, 8, 181, 138, 203, 244, 200, 247, 182, 137, 52, 11, 74, 117, 45, 18, 83, 108, 209, 238, 175, 144, 31, 32, 97, 94, 227, 220, 157, 162, 250, 197, 132, 187, 6, 57, 120, 71, 246, 201, 136, 183, 10, 53, 116, 75, 19, 44, 109, 82, 239, 208, 145, 174, 33, 30, 95, 96, 221, 226, 163, 156, 196, 251, 186, 133, 56, 7, 70, 121, 69, 122, 59, 4, 185, 134, 199, 248, 160, 159, 222, 225, 92, 99, 34, 29, 146, 173, 236, 211, 110, 81, 16, 47, 119, 72, 9, 54, 139, 180, 245, 202, 141, 178, 243, 204, 113, 78, 15, 48, 104, 87, 22, 41, 148, 171, 234, 213, 90, 101, 36, 27, 166, 153, 216, 231, 191, 128, 193, 254, 67, 124, 61, 2, 62, 1, 64, 127, 194, 253, 188, 131, 219, 228, 165, 154, 39, 24, 89, 102, 233, 214, 151, 168, 21, 42, 107, 84, 12, 51, 114, 77, 240, 207, 142, 177, ],
[0, 64, 128, 192, 29, 93, 157, 221, 58, 122, 186, 250, 39, 103, 167, 231, 116, 52, 244, 180, 105, 41, 233, 169, 78, 14, 206, 142, 83, 19, 211, 147, 232, 168, 104, 40, 245, 181, 117, 53, 210, 146, 82, 18, 207, 143, 79, 15, 156, 220, 28, 92, 129, 193, 1, 65, 166, 230, 38, 102, 187, 251, 59, 123, 205, 141, 77, 13, 208, 144, 80, 16, 247, 183, 119, 55, 234, 170, 106, 42, 185, 249, 57, 121, 164, 228, 36, 100, 131, 195, 3, 67, 158, 222, 30, 94, 37, 101, 165, 229, 56, 120, 184, 248, 31, 95, 159, 223, 2, 66, 130, 194, 81, 17, 209, 145, 76, 12, 204, 140, 107, 43, 235, 171, 118, 54, 246, 182, 135, 199, 7, 71, 154, 218, 26, 90, 189, 253, 61, 125, 160, 224, 32, 96, 243, 179, 115, 51, 238, 174, 110, 46, 201, 137, 73, 9, 212, 148, 84, 20, 111, 47, 239, 175, 114, 50, 242, 178, 85, 21, 213, 149, 72, 8, 200, 136, 27, 91, 155, 219, 6, 70, 134, 198, 33, 97, 161, 225, 60, 124, 188, 252, 74, 10, 202, 138, 87, 23, 215, 151, 112, 48, 240, 176, 109, 45, 237, 173, 62, 126, 190, 254, 35, 99, 163, 227, 4, 68, 132, 196, 25, 89, 153, 217, 162, 226, 34, 98, 191, 255, 63, 127, 152, 216, 24, 88, 133, 197, 5, 69, 214, 150, 86, 22, 203, 139, 75, 11, 236, 172, 108, 44, 241, 177, 113, 49, ],
[0, 65, 130, 195, 25, 88, 155, 218, 50, 115, 176, 241, 43, 106, 169, 232, 100, 37, 230, 167, 125, 60, 255, 190, 86, 23, 212, 149, 79, 14, 205, 140, 200, 137, 74, 11, 209, 144, 83, 18, 250, 187, 120, 57, 227, 162, 97, 32, 172, 237, 46, 111, 181, 244, 55, 118, 158, 223, 28, 93, 135, 198, 5, 68, 141, 204, 15, 78, 148, 213, 22, 87, 191, 254, 61, 124, 166, 231, 36, 101, 233, 168, 107, 42, 240, 177, 114, 51, 219, 154, 89, 24, 194, 131, 64, 1, 69, 4, 199, 134, 92, 29, 222, 159, 119, 54, 245, 180, 110, 47, 236, 173, 33, 96, 163, 226, 56, 121, 186, 251, 19, 82, 145, 208, 10, 75, 136, 201, 7, 70, 133, 196, 30, 95, 156, 221, 53, 116, 183, 246, 44, 109, 174, 239, 99, 34, 225, 160, 122, 59, 248, 185, 81, 16, 211, 146, 72, 9, 202, 139, 207, 142, 77, 12, 214, 151, 84, 21, 253, 188, 127, 62, 228, 165, 102, 39, 171, 234, 41, 104, 178, 243, 48, 113, 153, 216, 27, 90, 128, 193, 2, 67, 138, 203, 8, 73, 147, 210, 17, 80, 184, 249, 58, 123, 161, 224, 35, 98, 238, 175, 108, 45, 247, 182, 117, 52, 220, 157, 94, 31, 197, 132, 71, 6, 66, 3, 192, 129, 91, 26, 217, 152, 112, 49, 242, 179, 105, 40, 235, 170, 38, 103, 164, 229, 63, 126, 189, 252, 20, 85, 150, 215, 13, 76, 143, 206, ],
[0, 66, 132, 198, 21, 87, 145, 211, 42, 104, 174, 236, 63, 125, 187, 249, 84, 22, 208, 146, 65, 3, 197, 135, 126, 60, 250, 184, 107, 41, 239, 173, 168, 234, 44, 110, 189, 255, 57, 123, 130, 192, 6, 68, 151, 213, 19, 81, 252, 190, 120, 58, 233, 171, 109, 47, 214, 148, 82, 16, 195, 129, 71, 5, 77, 15, 201, 139, 88, 26, 220, 158, 103, 37, 227, 161, 114, 48, 246, 180, 25, 91, 157, 223, 12, 78, 136, 202, 51, 113, 183, 245, 38, 100, 162, 224, 229, 167, 97, 35, 240, 178, 116, 54, 207, 141, 75, 9, 218, 152, 94, 28, 177, 243, 53, 119, 164, 230, 32, 98, 155, 217, 31, 93, 142, 204, 10, 72, 154, 216, 30, 92, 143, 205, 11, 73, 176, 242, 52, 118, 165, 231, 33, 99, 206, 140, 74, 8, 219, 153, 95, 29, 228, 166, 96, 34, 241, 179, 117, 55, 50, 112, 182, 244, 39, 101, 163, 225, 24, 90, 156, 222, 13, 79, 137, 203, 102, 36, 226, 160, 115, 49, 247, 181, 76, 14, 200, 138, 89, 27, 221, 159, 215, 149, 83, 17, 194, 128, 70, 4, 253, 191, 121, 59, 232, 170, 108, 46, 131, 193, 7, 69, 150, 212, 18, 80, 169, 235, 45, 111, 188, 254, 56, 122, 127, 61, 251, 185, 106, 40, 238, 172, 85, 23, 209, 147, 64, 2, 196, 134, 43, 105, 175, 237, 62, 124, 186, 248, 1, 67, 133, 199, 20, 86, 144, 210, ],
[0, 67, 134, 197, 17, 82, 151, 212, 34, 97, 164, 231, 51, 112, 181, 246, 68, 7, 194, 129, 85, 22, 211, 144, 102, 37, 224, 163, 119, 52, 241, 178, 136, 203, 14, 77, 153, 218, 31, 92, 170, 233, 44, 111, 187, 248, 61, 126, 204, 143, 74, 9, 221, 158, 91, 24, 238, 173, 104, 43, 255, 188, 121, 58, 13, 78, 139, 200, 28, 95, 154, 217, 47, 108, 169, 234, 62, 125, 184, 251, 73, 10, 207, 140, 88, 27, 222, 157, 107, 40, 237, 174, 122, 57, 252, 191, 133, 198, 3, 64, 148, 215, 18, 81, 167, 228, 33, 98, 182, 245, 48, 115, 193, 130, 71, 4, 208, 147, 86, 21, 227, 160, 101, 38, 242, 177, 116, 55, 26, 89, 156, 223, 11, 72, 141, 206, 56, 123, 190, 253, 41, 106, 175, 236, 94, 29, 216, 155, 79, 12, 201, 138, 124, 63, 250, 185, 109, 46, 235, 168, 146, 209, 20, 87, 131, 192, 5, 70, 176, 243, 54, 117, 161, 226, 39, 100, 214, 149, 80, 19, 199, 132, 65, 2, 244, 183, 114, 49, 229, 166, 99, 32, 23, 84, 145, 210, 6, 69, 128, 195, 53, 118, 179, 240, 36, 103, 162, 225, 83, 16, 213, 150, 66, 1, 196, 135, 113, 50, 247, 180, 96, 35, 230, 165, 159, 220, 25, 90, 142, 205, 8, 75, 189, 254, 59, 120, 172, 239, 42, 105, 219, 152, 93, 30, 202, 137, 76, 15, 249, 186, 127, 60, 232, 171, 110, 45, ],
[0, 68, 136, 204, 13, 73, 133, 193, 26, 94, 146, 214, 23, 83, 159, 219, 52, 112, 188, 248, 57, 125, 177, 245, 46, 106, 166, 226, 35, 103, 171, 239, 104, 44, 224, 164, 101, 33, 237, 169, 114, 54, 250, 190, 127, 59, 247, 179, 92, 24, 212, 144, 81, 21, 217, 157, 70, 2, 206, 138, 75, 15, 195, 135, 208, 148, 88, 28, 221, 153, 85, 17, 202, 142, 66, 6, 199, 131, 79, 11, 228, 160, 108, 40, 233, 173, 97, 37, 254, 186, 118, 50, 243, 183, 123, 63, 184, 252, 48, 116, 181, 241, 61, 121, 162, 230, 42, 110, 175, 235, 39, 99, 140, 200, 4, 64, 129, 197, 9, 77, 150, 210, 30, 90, 155, 223, 19, 87, 189, 249, 53, 113, 176, 244, 56, 124, 167, 227, 47, 107, 170, 238, 34, 102, 137, 205, 1, 69, 132, 192, 12, 72, 147, 215, 27, 95, 158, 218, 22, 82, 213, 145, 93, 25, 216, 156, 80, 20, 207, 139, 71, 3, 194, 134, 74, 14, 225, 165, 105, 45, 236, 168, 100, 32, 251, 191, 115, 55, 246, 178, 126, 58, 109, 41, 229, 161, 96, 36, 232, 172, 119, 51, 255, 187, 122, 62, 242, 182, 89, 29, 209, 149, 84, 16, 220, 152, 67, 7, 203, 143, 78, 10, 198, 130, 5, 65, 141, 201, 8, 76, 128, 196, 31, 91, 151, 211, 18, 86, 154, 222, 49, 117, 185, 253, 60, 120, 180, 240, 43, 111, 163, 231, 38, 98, 174, 234, ],
[0, 69, 138, 207, 9, 76, 131, 198, 18, 87, 152, 221, 27, 94, 145, 212, 36, 97, 174, 235, 45, 104, 167, 226, 54, 115, 188, 249, 63, 122, 181, 240, 72, 13, 194, 135, 65, 4, 203, 142, 90, 31, 208, 149, 83, 22, 217, 156, 108, 41, 230, 163, 101, 32, 239, 170, 126, 59, 244, 177, 119, 50, 253, 184, 144, 213, 26, 95, 153, 220, 19, 86, 130, 199, 8, 77, 139, 206, 1, 68, 180, 241, 62, 123, 189, 248, 55, 114, 166, 227, 44, 105, 175, 234, 37, 96, 216, 157, 82, 23, 209, 148, 91, 30, 202, 143, 64, 5, 195, 134, 73, 12, 252, 185, 118, 51, 245, 176, 127, 58, 238, 171, 100, 33, 231, 162, 109, 40, 61, 120, 183, 242, 52, 113, 190, 251, 47, 106, 165, 224, 38, 99, 172, 233, 25, 92, 147, 214, 16, 85, 154, 223, 11, 78, 129, 196, 2, 71, 136, 205, 117, 48, 255, 186, 124, 57, 246, 179, 103, 34, 237, 168, 110, 43, 228, 161, 81, 20, 219, 158, 88, 29, 210, 151, 67, 6, 201, 140, 74, 15, 192, 133, 173, 232, 39, 98, 164, 225, 46, 107, 191, 250, 53, 112, 182, 243, 60, 121, 137, 204, 3, 70, 128, 197, 10, 79, 155, 222, 17, 84, 146, 215, 24, 93, 229, 160, 111, 42, 236, 169, 102, 35, 247, 178, 125, 56, 254, 187, 116, 49, 193, 132, 75, 14, 200, 141, 66, 7, 211, 150, 89, 28, 218, 159, 80, 21, ],
[0, 70, 140, 202, 5, 67, 137, 207, 10, 76, 134, 192, 15, 73, 131, 197, 20, 82, 152, 222, 17, 87, 157, 219, 30, 88, 146, 212, 27, 93, 151, 209, 40, 110, 164, 226, 45, 107, 161, 231, 34, 100, 174, 232, 39, 97, 171, 237, 60, 122, 176, 246, 57, 127, 181, 243, 54, 112, 186, 252, 51, 117, 191, 249, 80, 22, 220, 154, 85, 19, 217, 159, 90, 28, 214, 144, 95, 25, 211, 149, 68, 2, 200, 142, 65, 7, 205, 139, 78, 8, 194, 132, 75, 13, 199, 129, 120, 62, 244, 178, 125, 59, 241, 183, 114, 52, 254, 184, 119, 49, 251, 189, 108, 42, 224, 166, 105, 47, 229, 163, 102, 32, 234, 172, 99, 37, 239, 169, 160, 230, 44, 106, 165, 227, 41, 111, 170, 236, 38, 96, 175, 233, 35, 101, 180, 242, 56, 126, 177, 247, 61, 123, 190, 248, 50, 116, 187, 253, 55, 113, 136, 206, 4, 66, 141, 203, 1, 71, 130, 196, 14, 72, 135, 193, 11, 77, 156, 218, 16, 86, 153, 223, 21, 83, 150, 208, 26, 92, 147, 213, 31, 89, 240, 182, 124, 58, 245, 179, 121, 63, 250, 188, 118, 48, 255, 185, 115, 53, 228, 162, 104, 46, 225, 167, 109, 43, 238, 168, 98, 36, 235, 173, 103, 33, 216, 158, 84, 18, 221, 155, 81, 23, 210, 148, 94, 24, 215, 145, 91, 29, 204, 138, 64, 6, 201, 143, 69, 3, 198, 128, 74, 12, 195, 133, 79, 9, ],
[0, 71, 142, 201, 1, 70, 143, 200, 2, 69, 140, 203, 3, 68, 141, 202, 4, 67, 138, 205, 5, 66, 139, 204, 6, 65, 136, 207, 7, 64, 137, 206, 8, 79, 134, 193, 9, 78, 135, 192, 10, 77, 132, 195, 11, 76, 133, 194, 12, 75, 130, 197, 13, 74, 131, 196, 14, 73, 128, 199, 15, 72, 129, 198, 16, 87, 158, 217, 17, 86, 159, 216, 18, 85, 156, 219, 19, 84, 157, 218, 20, 83, 154, 221, 21, 82, 155, 220, 22, 81, 152, 223, 23, 80, 153, 222, 24, 95, 150, 209, 25, 94, 151, 208, 26, 93, 148, 211, 27, 92, 149, 210, 28, 91, 146, 213, 29, 90, 147, 212, 30, 89, 144, 215, 31, 88, 145, 214, 32, 103, 174, 233, 33, 102, 175, 232, 34, 101, 172, 235, 35, 100, 173, 234, 36, 99, 170, 237, 37, 98, 171, 236, 38, 97, 168, 239, 39, 96, 169, 238, 40, 111, 166, 225, 41, 110, 167, 224, 42, 109, 164, 227, 43, 108, 165, 226, 44, 107, 162, 229, 45, 106, 163, 228, 46, 105, 160, 231, 47, 104, 161, 230, 48, 119, 190, 249, 49, 118, 191, 248, 50, 117, 188, 251, 51, 116, 189, 250, 52, 115, 186, 253, 53, 114, 187, 252, 54, 113, 184, 255, 55, 112, 185, 254, 56, 127, 182, 241, 57, 126, 183, 240, 58, 125, 180, 243, 59, 124, 181, 242, 60, 123, 178, 245, 61, 122, 179, 244, 62, 121, 176, 247, 63, 120, 177, 246, ],
[0, 72, 144, 216, 61, 117, 173, 229, 122, 50, 234, 162, 71, 15, 215, 159, 244, 188, 100, 44, 201, 129, 89, 17, 142, 198, 30, 86, 179, 251, 35, 107, 245, 189, 101, 45, 200, 128, 88, 16, 143, 199, 31, 87, 178, 250, 34, 106, 1, 73, 145, 217, 60, 116, 172, 228, 123, 51, 235, 163, 70, 14, 214, 158, 247, 191, 103, 47, 202, 130, 90, 18, 141, 197, 29, 85, 176, 248, 32, 104, 3, 75, 147, 219, 62, 118, 174, 230, 121, 49, 233, 161, 68, 12, 212, 156, 2, 74, 146, 218, 63, 119, 175, 231, 120, 48, 232, 160, 69, 13, 213, 157, 246, 190, 102, 46, 203, 131, 91, 19, 140, 196, 28, 84, 177, 249, 33, 105, 243, 187, 99, 43, 206, 134, 94, 22, 137, 193, 25, 81, 180, 252, 36, 108, 7, 79, 151, 223, 58, 114, 170, 226, 125, 53, 237, 165, 64, 8, 208, 152, 6, 78, 150, 222, 59, 115, 171, 227, 124, 52, 236, 164, 65, 9, 209, 153, 242, 186, 98, 42, 207, 135, 95, 23, 136, 192, 24, 80, 181, 253, 37, 109, 4, 76, 148, 220, 57, 113, 169, 225, 126, 54, 238, 166, 67, 11, 211, 155, 240, 184, 96, 40, 205, 133, 93, 21, 138, 194, 26, 82, 183, 255, 39, 111, 241, 185, 97, 41, 204, 132, 92, 20, 139, 195, 27, 83, 182, 254, 38, 110, 5, 77, 149, 221, 56, 112, 168, 224, 127, 55, 239, 167, 66, 10, 210, 154, ],
[0, 73, 146, 219, 57, 112, 171, 226, 114, 59, 224, 169, 75, 2, 217, 144, 228, 173, 118, 63, 221, 148, 79, 6, 150, 223, 4, 77, 175, 230, 61, 116, 213, 156, 71, 14, 236, 165, 126, 55, 167, 238, 53, 124, 158, 215, 12, 69, 49, 120, 163, 234, 8, 65, 154, 211, 67, 10, 209, 152, 122, 51, 232, 161, 183, 254, 37, 108, 142, 199, 28, 85, 197, 140, 87, 30, 252, 181, 110, 39, 83, 26, 193, 136, 106, 35, 248, 177, 33, 104, 179, 250, 24, 81, 138, 195, 98, 43, 240, 185, 91, 18, 201, 128, 16, 89, 130, 203, 41, 96, 187, 242, 134, 207, 20, 93, 191, 246, 45, 100, 244, 189, 102, 47, 205, 132, 95, 22, 115, 58, 225, 168, 74, 3, 216, 145, 1, 72, 147, 218, 56, 113, 170, 227, 151, 222, 5, 76, 174, 231, 60, 117, 229, 172, 119, 62, 220, 149, 78, 7, 166, 239, 52, 125, 159, 214, 13, 68, 212, 157, 70, 15, 237, 164, 127, 54, 66, 11, 208, 153, 123, 50, 233, 160, 48, 121, 162, 235, 9, 64, 155, 210, 196, 141, 86, 31, 253, 180, 111, 38, 182, 255, 36, 109, 143, 198, 29, 84, 32, 105, 178, 251, 25, 80, 139, 194, 82, 27, 192, 137, 107, 34, 249, 176, 17, 88, 131, 202, 40, 97, 186, 243, 99, 42, 241, 184, 90, 19, 200, 129, 245, 188, 103, 46, 204, 133, 94, 23, 135, 206, 21, 92, 190, 247, 44, 101, ],
[0, 74, 148, 222, 53, 127, 161, 235, 106, 32, 254, 180, 95, 21, 203, 129, 212, 158, 64, 10, 225, 171, 117, 63, 190, 244, 42, 96, 139, 193, 31, 85, 181, 255, 33, 107, 128, 202, 20, 94, 223, 149, 75, 1, 234, 160, 126, 52, 97, 43, 245, 191, 84, 30, 192, 138, 11, 65, 159, 213, 62, 116, 170, 224, 119, 61, 227, 169, 66, 8, 214, 156, 29, 87, 137, 195, 40, 98, 188, 246, 163, 233, 55, 125, 150, 220, 2, 72, 201, 131, 93, 23, 252, 182, 104, 34, 194, 136, 86, 28, 247, 189, 99, 41, 168, 226, 60, 118, 157, 215, 9, 67, 22, 92, 130, 200, 35, 105, 183, 253, 124, 54, 232, 162, 73, 3, 221, 151, 238, 164, 122, 48, 219, 145, 79, 5, 132, 206, 16, 90, 177, 251, 37, 111, 58, 112, 174, 228, 15, 69, 155, 209, 80, 26, 196, 142, 101, 47, 241, 187, 91, 17, 207, 133, 110, 36, 250, 176, 49, 123, 165, 239, 4, 78, 144, 218, 143, 197, 27, 81, 186, 240, 46, 100, 229, 175, 113, 59, 208, 154, 68, 14, 153, 211, 13, 71, 172, 230, 56, 114, 243, 185, 103, 45, 198, 140, 82, 24, 77, 7, 217, 147, 120, 50, 236, 166, 39, 109, 179, 249, 18, 88, 134, 204, 44, 102, 184, 242, 25, 83, 141, 199, 70, 12, 210, 152, 115, 57, 231, 173, 248, 178, 108, 38, 205, 135, 89, 19, 146, 216, 6, 76, 167, 237, 51, 121, ],
[0, 75, 150, 221, 49, 122, 167, 236, 98, 41, 244, 191, 83, 24, 197, 142, 196, 143, 82, 25, 245, 190, 99, 40, 166, 237, 48, 123, 151, 220, 1, 74, 149, 222, 3, 72, 164, 239, 50, 121, 247, 188, 97, 42, 198, 141, 80, 27, 81, 26, 199, 140, 96, 43, 246, 189, 51, 120, 165, 238, 2, 73, 148, 223, 55, 124, 161, 234, 6, 77, 144, 219, 85, 30, 195, 136, 100, 47, 242, 185, 243, 184, 101, 46, 194, 137, 84, 31, 145, 218, 7, 76, 160, 235, 54, 125, 162, 233, 52, 127, 147, 216, 5, 78, 192, 139, 86, 29, 241, 186, 103, 44, 102, 45, 240, 187, 87, 28, 193, 138, 4, 79, 146, 217, 53, 126, 163, 232, 110, 37, 248, 179, 95, 20, 201, 130, 12, 71, 154, 209, 61, 118, 171, 224, 170, 225, 60, 119, 155, 208, 13, 70, 200, 131, 94, 21, 249, 178, 111, 36, 251, 176, 109, 38, 202, 129, 92, 23, 153, 210, 15, 68, 168, 227, 62, 117, 63, 116, 169, 226, 14, 69, 152, 211, 93, 22, 203, 128, 108, 39, 250, 177, 89, 18, 207, 132, 104, 35, 254, 181, 59, 112, 173, 230, 10, 65, 156, 215, 157, 214, 11, 64, 172, 231, 58, 113, 255, 180, 105, 34, 206, 133, 88, 19, 204, 135, 90, 17, 253, 182, 107, 32, 174, 229, 56, 115, 159, 212, 9, 66, 8, 67, 158, 213, 57, 114, 175, 228, 106, 33, 252, 183, 91, 16, 205, 134, ],
[0, 76, 152, 212, 45, 97, 181, 249, 90, 22, 194, 142, 119, 59, 239, 163, 180, 248, 44, 96, 153, 213, 1, 77, 238, 162, 118, 58, 195, 143, 91, 23, 117, 57, 237, 161, 88, 20, 192, 140, 47, 99, 183, 251, 2, 78, 154, 214, 193, 141, 89, 21, 236, 160, 116, 56, 155, 215, 3, 79, 182, 250, 46, 98, 234, 166, 114, 62, 199, 139, 95, 19, 176, 252, 40, 100, 157, 209, 5, 73, 94, 18, 198, 138, 115, 63, 235, 167, 4, 72, 156, 208, 41, 101, 177, 253, 159, 211, 7, 75, 178, 254, 42, 102, 197, 137, 93, 17, 232, 164, 112, 60, 43, 103, 179, 255, 6, 74, 158, 210, 113, 61, 233, 165, 92, 16, 196, 136, 201, 133, 81, 29, 228, 168, 124, 48, 147, 223, 11, 71, 190, 242, 38, 106, 125, 49, 229, 169, 80, 28, 200, 132, 39, 107, 191, 243, 10, 70, 146, 222, 188, 240, 36, 104, 145, 221, 9, 69, 230, 170, 126, 50, 203, 135, 83, 31, 8, 68, 144, 220, 37, 105, 189, 241, 82, 30, 202, 134, 127, 51, 231, 171, 35, 111, 187, 247, 14, 66, 150, 218, 121, 53, 225, 173, 84, 24, 204, 128, 151, 219, 15, 67, 186, 246, 34, 110, 205, 129, 85, 25, 224, 172, 120, 52, 86, 26, 206, 130, 123, 55, 227, 175, 12, 64, 148, 216, 33, 109, 185, 245, 226, 174, 122, 54, 207, 131, 87, 27, 184, 244, 32, 108, 149, 217, 13, 65, ],
[0, 77, 154, 215, 41, 100, 179, 254, 82, 31, 200, 133, 123, 54, 225, 172, 164, 233, 62, 115, 141, 192, 23, 90, 246, 187, 108, 33, 223, 146, 69, 8, 85, 24, 207, 130, 124, 49, 230, 171, 7, 74, 157, 208, 46, 99, 180, 249, 241, 188, 107, 38, 216, 149, 66, 15, 163, 238, 57, 116, 138, 199, 16, 93, 170, 231, 48, 125, 131, 206, 25, 84, 248, 181, 98, 47, 209, 156, 75, 6, 14, 67, 148, 217, 39, 106, 189, 240, 92, 17, 198, 139, 117, 56, 239, 162, 255, 178, 101, 40, 214, 155, 76, 1, 173, 224, 55, 122, 132, 201, 30, 83, 91, 22, 193, 140, 114, 63, 232, 165, 9, 68, 147, 222, 32, 109, 186, 247, 73, 4, 211, 158, 96, 45, 250, 183, 27, 86, 129, 204, 50, 127, 168, 229, 237, 160, 119, 58, 196, 137, 94, 19, 191, 242, 37, 104, 150, 219, 12, 65, 28, 81, 134, 203, 53, 120, 175, 226, 78, 3, 212, 153, 103, 42, 253, 176, 184, 245, 34, 111, 145, 220, 11, 70, 234, 167, 112, 61, 195, 142, 89, 20, 227, 174, 121, 52, 202, 135, 80, 29, 177, 252, 43, 102, 152, 213, 2, 79, 71, 10, 221, 144, 110, 35, 244, 185, 21, 88, 143, 194, 60, 113, 166, 235, 182, 251, 44, 97, 159, 210, 5, 72, 228, 169, 126, 51, 205, 128, 87, 26, 18, 95, 136, 197, 59, 118, 161, 236, 64, 13, 218, 151, 105, 36, 243, 190, ],
[0, 78, 156, 210, 37, 107, 185, 247, 74, 4, 214, 152, 111, 33, 243, 189, 148, 218, 8, 70, 177, 255, 45, 99, 222, 144, 66, 12, 251, 181, 103, 41, 53, 123, 169, 231, 16, 94, 140, 194, 127, 49, 227, 173, 90, 20, 198, 136, 161, 239, 61, 115, 132, 202, 24, 86, 235, 165, 119, 57, 206, 128, 82, 28, 106, 36, 246, 184, 79, 1, 211, 157, 32, 110, 188, 242, 5, 75, 153, 215, 254, 176, 98, 44, 219, 149, 71, 9, 180, 250, 40, 102, 145, 223, 13, 67, 95, 17, 195, 141, 122, 52, 230, 168, 21, 91, 137, 199, 48, 126, 172, 226, 203, 133, 87, 25, 238, 160, 114, 60, 129, 207, 29, 83, 164, 234, 56, 118, 212, 154, 72, 6, 241, 191, 109, 35, 158, 208, 2, 76, 187, 245, 39, 105, 64, 14, 220, 146, 101, 43, 249, 183, 10, 68, 150, 216, 47, 97, 179, 253, 225, 175, 125, 51, 196, 138, 88, 22, 171, 229, 55, 121, 142, 192, 18, 92, 117, 59, 233, 167, 80, 30, 204, 130, 63, 113, 163, 237, 26, 84, 134, 200, 190, 240, 34, 108, 155, 213, 7, 73, 244, 186, 104, 38, 209, 159, 77, 3, 42, 100, 182, 248, 15, 65, 147, 221, 96, 46, 252, 178, 69, 11, 217, 151, 139, 197, 23, 89, 174, 224, 50, 124, 193, 143, 93, 19, 228, 170, 120, 54, 31, 81, 131, 205, 58, 116, 166, 232, 85, 27, 201, 135, 112, 62, 236, 162, ],
[0, 79, 158, 209, 33, 110, 191, 240, 66, 13, 220, 147, 99, 44, 253, 178, 132, 203, 26, 85, 165, 234, 59, 116, 198, 137, 88, 23, 231, 168, 121, 54, 21, 90, 139, 196, 52, 123, 170, 229, 87, 24, 201, 134, 118, 57, 232, 167, 145, 222, 15, 64, 176, 255, 46, 97, 211, 156, 77, 2, 242, 189, 108, 35, 42, 101, 180, 251, 11, 68, 149, 218, 104, 39, 246, 185, 73, 6, 215, 152, 174, 225, 48, 127, 143, 192, 17, 94, 236, 163, 114, 61, 205, 130, 83, 28, 63, 112, 161, 238, 30, 81, 128, 207, 125, 50, 227, 172, 92, 19, 194, 141, 187, 244, 37, 106, 154, 213, 4, 75, 249, 182, 103, 40, 216, 151, 70, 9, 84, 27, 202, 133, 117, 58, 235, 164, 22, 89, 136, 199, 55, 120, 169, 230, 208, 159, 78, 1, 241, 190, 111, 32, 146, 221, 12, 67, 179, 252, 45, 98, 65, 14, 223, 144, 96, 47, 254, 177, 3, 76, 157, 210, 34, 109, 188, 243, 197, 138, 91, 20, 228, 171, 122, 53, 135, 200, 25, 86, 166, 233, 56, 119, 126, 49, 224, 175, 95, 16, 193, 142, 60, 115, 162, 237, 29, 82, 131, 204, 250, 181, 100, 43, 219, 148, 69, 10, 184, 247, 38, 105, 153, 214, 7, 72, 107, 36, 245, 186, 74, 5, 212, 155, 41, 102, 183, 248, 8, 71, 150, 217, 239, 160, 113, 62, 206, 129, 80, 31, 173, 226, 51, 124, 140, 195, 18, 93, ],
[0, 80, 160, 240, 93, 13, 253, 173, 186, 234, 26, 74, 231, 183, 71, 23, 105, 57, 201, 153, 52, 100, 148, 196, 211, 131, 115, 35, 142, 222, 46, 126, 210, 130, 114, 34, 143, 223, 47, 127, 104, 56, 200, 152, 53, 101, 149, 197, 187, 235, 27, 75, 230, 182, 70, 22, 1, 81, 161, 241, 92, 12, 252, 172, 185, 233, 25, 73, 228, 180, 68, 20, 3, 83, 163, 243, 94, 14, 254, 174, 208, 128, 112, 32, 141, 221, 45, 125, 106, 58, 202, 154, 55, 103, 151, 199, 107, 59, 203, 155, 54, 102, 150, 198, 209, 129, 113, 33, 140, 220, 44, 124, 2, 82, 162, 242, 95, 15, 255, 175, 184, 232, 24, 72, 229, 181, 69, 21, 111, 63, 207, 159, 50, 98, 146, 194, 213, 133, 117, 37, 136, 216, 40, 120, 6, 86, 166, 246, 91, 11, 251, 171, 188, 236, 28, 76, 225, 177, 65, 17, 189, 237, 29, 77, 224, 176, 64, 16, 7, 87, 167, 247, 90, 10, 250, 170, 212, 132, 116, 36, 137, 217, 41, 121, 110, 62, 206, 158, 51, 99, 147, 195, 214, 134, 118, 38, 139, 219, 43, 123, 108, 60, 204, 156, 49, 97, 145, 193, 191, 239, 31, 79, 226, 178, 66, 18, 5, 85, 165, 245, 88, 8, 248, 168, 4, 84, 164, 244, 89, 9, 249, 169, 190, 238, 30, 78, 227, 179, 67, 19, 109, 61, 205, 157, 48, 96, 144, 192, 215, 135, 119, 39, 138, 218, 42, 122, ],
[0, 81, 162, 243, 89, 8, 251, 170, 178, 227, 16, 65, 235, 186, 73, 24, 121, 40, 219, 138, 32, 113, 130, 211, 203, 154, 105, 56, 146, 195, 48, 97, 242, 163, 80, 1, 171, 250, 9, 88, 64, 17, 226, 179, 25, 72, 187, 234, 139, 218, 41, 120, 210, 131, 112, 33, 57, 104, 155, 202, 96, 49, 194, 147, 249, 168, 91, 10, 160, 241, 2, 83, 75, 26, 233, 184, 18, 67, 176, 225, 128, 209, 34, 115, 217, 136, 123, 42, 50, 99, 144, 193, 107, 58, 201, 152, 11, 90, 169, 248, 82, 3, 240, 161, 185, 232, 27, 74, 224, 177, 66, 19, 114, 35, 208, 129, 43, 122, 137, 216, 192, 145, 98, 51, 153, 200, 59, 106, 239, 190, 77, 28, 182, 231, 20, 69, 93, 12, 255, 174, 4, 85, 166, 247, 150, 199, 52, 101, 207, 158, 109, 60, 36, 117, 134, 215, 125, 44, 223, 142, 29, 76, 191, 238, 68, 21, 230, 183, 175, 254, 13, 92, 246, 167, 84, 5, 100, 53, 198, 151, 61, 108, 159, 206, 214, 135, 116, 37, 143, 222, 45, 124, 22, 71, 180, 229, 79, 30, 237, 188, 164, 245, 6, 87, 253, 172, 95, 14, 111, 62, 205, 156, 54, 103, 148, 197, 221, 140, 127, 46, 132, 213, 38, 119, 228, 181, 70, 23, 189, 236, 31, 78, 86, 7, 244, 165, 15, 94, 173, 252, 157, 204, 63, 110, 196, 149, 102, 55, 47, 126, 141, 220, 118, 39, 212, 133, ],
[0, 82, 164, 246, 85, 7, 241, 163, 170, 248, 14, 92, 255, 173, 91, 9, 73, 27, 237, 191, 28, 78, 184, 234, 227, 177, 71, 21, 182, 228, 18, 64, 146, 192, 54, 100, 199, 149, 99, 49, 56, 106, 156, 206, 109, 63, 201, 155, 219, 137, 127, 45, 142, 220, 42, 120, 113, 35, 213, 135, 36, 118, 128, 210, 57, 107, 157, 207, 108, 62, 200, 154, 147, 193, 55, 101, 198, 148, 98, 48, 112, 34, 212, 134, 37, 119, 129, 211, 218, 136, 126, 44, 143, 221, 43, 121, 171, 249, 15, 93, 254, 172, 90, 8, 1, 83, 165, 247, 84, 6, 240, 162, 226, 176, 70, 20, 183, 229, 19, 65, 72, 26, 236, 190, 29, 79, 185, 235, 114, 32, 214, 132, 39, 117, 131, 209, 216, 138, 124, 46, 141, 223, 41, 123, 59, 105, 159, 205, 110, 60, 202, 152, 145, 195, 53, 103, 196, 150, 96, 50, 224, 178, 68, 22, 181, 231, 17, 67, 74, 24, 238, 188, 31, 77, 187, 233, 169, 251, 13, 95, 252, 174, 88, 10, 3, 81, 167, 245, 86, 4, 242, 160, 75, 25, 239, 189, 30, 76, 186, 232, 225, 179, 69, 23, 180, 230, 16, 66, 2, 80, 166, 244, 87, 5, 243, 161, 168, 250, 12, 94, 253, 175, 89, 11, 217, 139, 125, 47, 140, 222, 40, 122, 115, 33, 215, 133, 38, 116, 130, 208, 144, 194, 52, 102, 197, 151, 97, 51, 58, 104, 158, 204, 111, 61, 203, 153, ],
[0, 83, 166, 245, 81, 2, 247, 164, 162, 241, 4, 87, 243, 160, 85, 6, 89, 10, 255, 172, 8, 91, 174, 253, 251, 168, 93, 14, 170, 249, 12, 95, 178, 225, 20, 71, 227, 176, 69, 22, 16, 67, 182, 229, 65, 18, 231, 180, 235, 184, 77, 30, 186, 233, 28, 79, 73, 26, 239, 188, 24, 75, 190, 237, 121, 42, 223, 140, 40, 123, 142, 221, 219, 136, 125, 46, 138, 217, 44, 127, 32, 115, 134, 213, 113, 34, 215, 132, 130, 209, 36, 119, 211, 128, 117, 38, 203, 152, 109, 62, 154, 201, 60, 111, 105, 58, 207, 156, 56, 107, 158, 205, 146, 193, 52, 103, 195, 144, 101, 54, 48, 99, 150, 197, 97, 50, 199, 148, 242, 161, 84, 7, 163, 240, 5, 86, 80, 3, 246, 165, 1, 82, 167, 244, 171, 248, 13, 94, 250, 169, 92, 15, 9, 90, 175, 252, 88, 11, 254, 173, 64, 19, 230, 181, 17, 66, 183, 228, 226, 177, 68, 23, 179, 224, 21, 70, 25, 74, 191, 236, 72, 27, 238, 189, 187, 232, 29, 78, 234, 185, 76, 31, 139, 216, 45, 126, 218, 137, 124, 47, 41, 122, 143, 220, 120, 43, 222, 141, 210, 129, 116, 39, 131, 208, 37, 118, 112, 35, 214, 133, 33, 114, 135, 212, 57, 106, 159, 204, 104, 59, 206, 157, 155, 200, 61, 110, 202, 153, 108, 63, 96, 51, 198, 149, 49, 98, 151, 196, 194, 145, 100, 55, 147, 192, 53, 102, ],
[0, 84, 168, 252, 77, 25, 229, 177, 154, 206, 50, 102, 215, 131, 127, 43, 41, 125, 129, 213, 100, 48, 204, 152, 179, 231, 27, 79, 254, 170, 86, 2, 82, 6, 250, 174, 31, 75, 183, 227, 200, 156, 96, 52, 133, 209, 45, 121, 123, 47, 211, 135, 54, 98, 158, 202, 225, 181, 73, 29, 172, 248, 4, 80, 164, 240, 12, 88, 233, 189, 65, 21, 62, 106, 150, 194, 115, 39, 219, 143, 141, 217, 37, 113, 192, 148, 104, 60, 23, 67, 191, 235, 90, 14, 242, 166, 246, 162, 94, 10, 187, 239, 19, 71, 108, 56, 196, 144, 33, 117, 137, 221, 223, 139, 119, 35, 146, 198, 58, 110, 69, 17, 237, 185, 8, 92, 160, 244, 85, 1, 253, 169, 24, 76, 176, 228, 207, 155, 103, 51, 130, 214, 42, 126, 124, 40, 212, 128, 49, 101, 153, 205, 230, 178, 78, 26, 171, 255, 3, 87, 7, 83, 175, 251, 74, 30, 226, 182, 157, 201, 53, 97, 208, 132, 120, 44, 46, 122, 134, 210, 99, 55, 203, 159, 180, 224, 28, 72, 249, 173, 81, 5, 241, 165, 89, 13, 188, 232, 20, 64, 107, 63, 195, 151, 38, 114, 142, 218, 216, 140, 112, 36, 149, 193, 61, 105, 66, 22, 234, 190, 15, 91, 167, 243, 163, 247, 11, 95, 238, 186, 70, 18, 57, 109, 145, 197, 116, 32, 220, 136, 138, 222, 34, 118, 199, 147, 111, 59, 16, 68, 184, 236, 93, 9, 245, 161, ],
[0, 85, 170, 255, 73, 28, 227, 182, 146, 199, 56, 109, 219, 142, 113, 36, 57, 108, 147, 198, 112, 37, 218, 143, 171, 254, 1, 84, 226, 183, 72, 29, 114, 39, 216, 141, 59, 110, 145, 196, 224, 181, 74, 31, 169, 252, 3, 86, 75, 30, 225, 180, 2, 87, 168, 253, 217, 140, 115, 38, 144, 197, 58, 111, 228, 177, 78, 27, 173, 248, 7, 82, 118, 35, 220, 137, 63, 106, 149, 192, 221, 136, 119, 34, 148, 193, 62, 107, 79, 26, 229, 176, 6, 83, 172, 249, 150, 195, 60, 105, 223, 138, 117, 32, 4, 81, 174, 251, 77, 24, 231, 178, 175, 250, 5, 80, 230, 179, 76, 25, 61, 104, 151, 194, 116, 33, 222, 139, 213, 128, 127, 42, 156, 201, 54, 99, 71, 18, 237, 184, 14, 91, 164, 241, 236, 185, 70, 19, 165, 240, 15, 90, 126, 43, 212, 129, 55, 98, 157, 200, 167, 242, 13, 88, 238, 187, 68, 17, 53, 96, 159, 202, 124, 41, 214, 131, 158, 203, 52, 97, 215, 130, 125, 40, 12, 89, 166, 243, 69, 16, 239, 186, 49, 100, 155, 206, 120, 45, 210, 135, 163, 246, 9, 92, 234, 191, 64, 21, 8, 93, 162, 247, 65, 20, 235, 190, 154, 207, 48, 101, 211, 134, 121, 44, 67, 22, 233, 188, 10, 95, 160, 245, 209, 132, 123, 46, 152, 205, 50, 103, 122, 47, 208, 133, 51, 102, 153, 204, 232, 189, 66, 23, 161, 244, 11, 94, ],
[0, 86, 172, 250, 69, 19, 233, 191, 138, 220, 38, 112, 207, 153, 99, 53, 9, 95, 165, 243, 76, 26, 224, 182, 131, 213, 47, 121, 198, 144, 106, 60, 18, 68, 190, 232, 87, 1, 251, 173, 152, 206, 52, 98, 221, 139, 113, 39, 27, 77, 183, 225, 94, 8, 242, 164, 145, 199, 61, 107, 212, 130, 120, 46, 36, 114, 136, 222, 97, 55, 205, 155, 174, 248, 2, 84, 235, 189, 71, 17, 45, 123, 129, 215, 104, 62, 196, 146, 167, 241, 11, 93, 226, 180, 78, 24, 54, 96, 154, 204, 115, 37, 223, 137, 188, 234, 16, 70, 249, 175, 85, 3, 63, 105, 147, 197, 122, 44, 214, 128, 181, 227, 25, 79, 240, 166, 92, 10, 72, 30, 228, 178, 13, 91, 161, 247, 194, 148, 110, 56, 135, 209, 43, 125, 65, 23, 237, 187, 4, 82, 168, 254, 203, 157, 103, 49, 142, 216, 34, 116, 90, 12, 246, 160, 31, 73, 179, 229, 208, 134, 124, 42, 149, 195, 57, 111, 83, 5, 255, 169, 22, 64, 186, 236, 217, 143, 117, 35, 156, 202, 48, 102, 108, 58, 192, 150, 41, 127, 133, 211, 230, 176, 74, 28, 163, 245, 15, 89, 101, 51, 201, 159, 32, 118, 140, 218, 239, 185, 67, 21, 170, 252, 6, 80, 126, 40, 210, 132, 59, 109, 151, 193, 244, 162, 88, 14, 177, 231, 29, 75, 119, 33, 219, 141, 50, 100, 158, 200, 253, 171, 81, 7, 184, 238, 20, 66, ],
[0, 87, 174, 249, 65, 22, 239, 184, 130, 213, 44, 123, 195, 148, 109, 58, 25, 78, 183, 224, 88, 15, 246, 161, 155, 204, 53, 98, 218, 141, 116, 35, 50, 101, 156, 203, 115, 36, 221, 138, 176, 231, 30, 73, 241, 166, 95, 8, 43, 124, 133, 210, 106, 61, 196, 147, 169, 254, 7, 80, 232, 191, 70, 17, 100, 51, 202, 157, 37, 114, 139, 220, 230, 177, 72, 31, 167, 240, 9, 94, 125, 42, 211, 132, 60, 107, 146, 197, 255, 168, 81, 6, 190, 233, 16, 71, 86, 1, 248, 175, 23, 64, 185, 238, 212, 131, 122, 45, 149, 194, 59, 108, 79, 24, 225, 182, 14, 89, 160, 247, 205, 154, 99, 52, 140, 219, 34, 117, 200, 159, 102, 49, 137, 222, 39, 112, 74, 29, 228, 179, 11, 92, 165, 242, 209, 134, 127, 40, 144, 199, 62, 105, 83, 4, 253, 170, 18, 69, 188, 235, 250, 173, 84, 3, 187, 236, 21, 66, 120, 47, 214, 129, 57, 110, 151, 192, 227, 180, 77, 26, 162, 245, 12, 91, 97, 54, 207, 152, 32, 119, 142, 217, 172, 251, 2, 85, 237, 186, 67, 20, 46, 121, 128, 215, 111, 56, 193, 150, 181, 226, 27, 76, 244, 163, 90, 13, 55, 96, 153, 206, 118, 33, 216, 143, 158, 201, 48, 103, 223, 136, 113, 38, 28, 75, 178, 229, 93, 10, 243, 164, 135, 208, 41, 126, 198, 145, 104, 63, 5, 82, 171, 252, 68, 19, 234, 189, ],
[0, 88, 176, 232, 125, 37, 205, 149, 250, 162, 74, 18, 135, 223, 55, 111, 233, 177, 89, 1, 148, 204, 36, 124, 19, 75, 163, 251, 110, 54, 222, 134, 207, 151, 127, 39, 178, 234, 2, 90, 53, 109, 133, 221, 72, 16, 248, 160, 38, 126, 150, 206, 91, 3, 235, 179, 220, 132, 108, 52, 161, 249, 17, 73, 131, 219, 51, 107, 254, 166, 78, 22, 121, 33, 201, 145, 4, 92, 180, 236, 106, 50, 218, 130, 23, 79, 167, 255, 144, 200, 32, 120, 237, 181, 93, 5, 76, 20, 252, 164, 49, 105, 129, 217, 182, 238, 6, 94, 203, 147, 123, 35, 165, 253, 21, 77, 216, 128, 104, 48, 95, 7, 239, 183, 34, 122, 146, 202, 27, 67, 171, 243, 102, 62, 214, 142, 225, 185, 81, 9, 156, 196, 44, 116, 242, 170, 66, 26, 143, 215, 63, 103, 8, 80, 184, 224, 117, 45, 197, 157, 212, 140, 100, 60, 169, 241, 25, 65, 46, 118, 158, 198, 83, 11, 227, 187, 61, 101, 141, 213, 64, 24, 240, 168, 199, 159, 119, 47, 186, 226, 10, 82, 152, 192, 40, 112, 229, 189, 85, 13, 98, 58, 210, 138, 31, 71, 175, 247, 113, 41, 193, 153, 12, 84, 188, 228, 139, 211, 59, 99, 246, 174, 70, 30, 87, 15, 231, 191, 42, 114, 154, 194, 173, 245, 29, 69, 208, 136, 96, 56, 190, 230, 14, 86, 195, 155, 115, 43, 68, 28, 244, 172, 57, 97, 137, 209, ],
[0, 89, 178, 235, 121, 32, 203, 146, 242, 171, 64, 25, 139, 210, 57, 96, 249, 160, 75, 18, 128, 217, 50, 107, 11, 82, 185, 224, 114, 43, 192, 153, 239, 182, 93, 4, 150, 207, 36, 125, 29, 68, 175, 246, 100, 61, 214, 143, 22, 79, 164, 253, 111, 54, 221, 132, 228, 189, 86, 15, 157, 196, 47, 118, 195, 154, 113, 40, 186, 227, 8, 81, 49, 104, 131, 218, 72, 17, 250, 163, 58, 99, 136, 209, 67, 26, 241, 168, 200, 145, 122, 35, 177, 232, 3, 90, 44, 117, 158, 199, 85, 12, 231, 190, 222, 135, 108, 53, 167, 254, 21, 76, 213, 140, 103, 62, 172, 245, 30, 71, 39, 126, 149, 204, 94, 7, 236, 181, 155, 194, 41, 112, 226, 187, 80, 9, 105, 48, 219, 130, 16, 73, 162, 251, 98, 59, 208, 137, 27, 66, 169, 240, 144, 201, 34, 123, 233, 176, 91, 2, 116, 45, 198, 159, 13, 84, 191, 230, 134, 223, 52, 109, 255, 166, 77, 20, 141, 212, 63, 102, 244, 173, 70, 31, 127, 38, 205, 148, 6, 95, 180, 237, 88, 1, 234, 179, 33, 120, 147, 202, 170, 243, 24, 65, 211, 138, 97, 56, 161, 248, 19, 74, 216, 129, 106, 51, 83, 10, 225, 184, 42, 115, 152, 193, 183, 238, 5, 92, 206, 151, 124, 37, 69, 28, 247, 174, 60, 101, 142, 215, 78, 23, 252, 165, 55, 110, 133, 220, 188, 229, 14, 87, 197, 156, 119, 46, ],
[0, 90, 180, 238, 117, 47, 193, 155, 234, 176, 94, 4, 159, 197, 43, 113, 201, 147, 125, 39, 188, 230, 8, 82, 35, 121, 151, 205, 86, 12, 226, 184, 143, 213, 59, 97, 250, 160, 78, 20, 101, 63, 209, 139, 16, 74, 164, 254, 70, 28, 242, 168, 51, 105, 135, 221, 172, 246, 24, 66, 217, 131, 109, 55, 3, 89, 183, 237, 118, 44, 194, 152, 233, 179, 93, 7, 156, 198, 40, 114, 202, 144, 126, 36, 191, 229, 11, 81, 32, 122, 148, 206, 85, 15, 225, 187, 140, 214, 56, 98, 249, 163, 77, 23, 102, 60, 210, 136, 19, 73, 167, 253, 69, 31, 241, 171, 48, 106, 132, 222, 175, 245, 27, 65, 218, 128, 110, 52, 6, 92, 178, 232, 115, 41, 199, 157, 236, 182, 88, 2, 153, 195, 45, 119, 207, 149, 123, 33, 186, 224, 14, 84, 37, 127, 145, 203, 80, 10, 228, 190, 137, 211, 61, 103, 252, 166, 72, 18, 99, 57, 215, 141, 22, 76, 162, 248, 64, 26, 244, 174, 53, 111, 129, 219, 170, 240, 30, 68, 223, 133, 107, 49, 5, 95, 177, 235, 112, 42, 196, 158, 239, 181, 91, 1, 154, 192, 46, 116, 204, 150, 120, 34, 185, 227, 13, 87, 38, 124, 146, 200, 83, 9, 231, 189, 138, 208, 62, 100, 255, 165, 75, 17, 96, 58, 212, 142, 21, 79, 161, 251, 67, 25, 247, 173, 54, 108, 130, 216, 169, 243, 29, 71, 220, 134, 104, 50, ],
[0, 91, 182, 237, 113, 42, 199, 156, 226, 185, 84, 15, 147, 200, 37, 126, 217, 130, 111, 52, 168, 243, 30, 69, 59, 96, 141, 214, 74, 17, 252, 167, 175, 244, 25, 66, 222, 133, 104, 51, 77, 22, 251, 160, 60, 103, 138, 209, 118, 45, 192, 155, 7, 92, 177, 234, 148, 207, 34, 121, 229, 190, 83, 8, 67, 24, 245, 174, 50, 105, 132, 223, 161, 250, 23, 76, 208, 139, 102, 61, 154, 193, 44, 119, 235, 176, 93, 6, 120, 35, 206, 149, 9, 82, 191, 228, 236, 183, 90, 1, 157, 198, 43, 112, 14, 85, 184, 227, 127, 36, 201, 146, 53, 110, 131, 216, 68, 31, 242, 169, 215, 140, 97, 58, 166, 253, 16, 75, 134, 221, 48, 107, 247, 172, 65, 26, 100, 63, 210, 137, 21, 78, 163, 248, 95, 4, 233, 178, 46, 117, 152, 195, 189, 230, 11, 80, 204, 151, 122, 33, 41, 114, 159, 196, 88, 3, 238, 181, 203, 144, 125, 38, 186, 225, 12, 87, 240, 171, 70, 29, 129, 218, 55, 108, 18, 73, 164, 255, 99, 56, 213, 142, 197, 158, 115, 40, 180, 239, 2, 89, 39, 124, 145, 202, 86, 13, 224, 187, 28, 71, 170, 241, 109, 54, 219, 128, 254, 165, 72, 19, 143, 212, 57, 98, 106, 49, 220, 135, 27, 64, 173, 246, 136, 211, 62, 101, 249, 162, 79, 20, 179, 232, 5, 94, 194, 153, 116, 47, 81, 10, 231, 188, 32, 123, 150, 205, ],
[0, 92, 184, 228, 109, 49, 213, 137, 218, 134, 98, 62, 183, 235, 15, 83, 169, 245, 17, 77, 196, 152, 124, 32, 115, 47, 203, 151, 30, 66, 166, 250, 79, 19, 247, 171, 34, 126, 154, 198, 149, 201, 45, 113, 248, 164, 64, 28, 230, 186, 94, 2, 139, 215, 51, 111, 60, 96, 132, 216, 81, 13, 233, 181, 158, 194, 38, 122, 243, 175, 75, 23, 68, 24, 252, 160, 41, 117, 145, 205, 55, 107, 143, 211, 90, 6, 226, 190, 237, 177, 85, 9, 128, 220, 56, 100, 209, 141, 105, 53, 188, 224, 4, 88, 11, 87, 179, 239, 102, 58, 222, 130, 120, 36, 192, 156, 21, 73, 173, 241, 162, 254, 26, 70, 207, 147, 119, 43, 33, 125, 153, 197, 76, 16, 244, 168, 251, 167, 67, 31, 150, 202, 46, 114, 136, 212, 48, 108, 229, 185, 93, 1, 82, 14, 234, 182, 63, 99, 135, 219, 110, 50, 214, 138, 3, 95, 187, 231, 180, 232, 12, 80, 217, 133, 97, 61, 199, 155, 127, 35, 170, 246, 18, 78, 29, 65, 165, 249, 112, 44, 200, 148, 191, 227, 7, 91, 210, 142, 106, 54, 101, 57, 221, 129, 8, 84, 176, 236, 22, 74, 174, 242, 123, 39, 195, 159, 204, 144, 116, 40, 161, 253, 25, 69, 240, 172, 72, 20, 157, 193, 37, 121, 42, 118, 146, 206, 71, 27, 255, 163, 89, 5, 225, 189, 52, 104, 140, 208, 131, 223, 59, 103, 238, 178, 86, 10, ],
[0, 93, 186, 231, 105, 52, 211, 142, 210, 143, 104, 53, 187, 230, 1, 92, 185, 228, 3, 94, 208, 141, 106, 55, 107, 54, 209, 140, 2, 95, 184, 229, 111, 50, 213, 136, 6, 91, 188, 225, 189, 224, 7, 90, 212, 137, 110, 51, 214, 139, 108, 49, 191, 226, 5, 88, 4, 89, 190, 227, 109, 48, 215, 138, 222, 131, 100, 57, 183, 234, 13, 80, 12, 81, 182, 235, 101, 56, 223, 130, 103, 58, 221, 128, 14, 83, 180, 233, 181, 232, 15, 82, 220, 129, 102, 59, 177, 236, 11, 86, 216, 133, 98, 63, 99, 62, 217, 132, 10, 87, 176, 237, 8, 85, 178, 239, 97, 60, 219, 134, 218, 135, 96, 61, 179, 238, 9, 84, 161, 252, 27, 70, 200, 149, 114, 47, 115, 46, 201, 148, 26, 71, 160, 253, 24, 69, 162, 255, 113, 44, 203, 150, 202, 151, 112, 45, 163, 254, 25, 68, 206, 147, 116, 41, 167, 250, 29, 64, 28, 65, 166, 251, 117, 40, 207, 146, 119, 42, 205, 144, 30, 67, 164, 249, 165, 248, 31, 66, 204, 145, 118, 43, 127, 34, 197, 152, 22, 75, 172, 241, 173, 240, 23, 74, 196, 153, 126, 35, 198, 155, 124, 33, 175, 242, 21, 72, 20, 73, 174, 243, 125, 32, 199, 154, 16, 77, 170, 247, 121, 36, 195, 158, 194, 159, 120, 37, 171, 246, 17, 76, 169, 244, 19, 78, 192, 157, 122, 39, 123, 38, 193, 156, 18, 79, 168, 245, ],
[0, 94, 188, 226, 101, 59, 217, 135, 202, 148, 118, 40, 175, 241, 19, 77, 137, 215, 53, 107, 236, 178, 80, 14, 67, 29, 255, 161, 38, 120, 154, 196, 15, 81, 179, 237, 106, 52, 214, 136, 197, 155, 121, 39, 160, 254, 28, 66, 134, 216, 58, 100, 227, 189, 95, 1, 76, 18, 240, 174, 41, 119, 149, 203, 30, 64, 162, 252, 123, 37, 199, 153, 212, 138, 104, 54, 177, 239, 13, 83, 151, 201, 43, 117, 242, 172, 78, 16, 93, 3, 225, 191, 56, 102, 132, 218, 17, 79, 173, 243, 116, 42, 200, 150, 219, 133, 103, 57, 190, 224, 2, 92, 152, 198, 36, 122, 253, 163, 65, 31, 82, 12, 238, 176, 55, 105, 139, 213, 60, 98, 128, 222, 89, 7, 229, 187, 246, 168, 74, 20, 147, 205, 47, 113, 181, 235, 9, 87, 208, 142, 108, 50, 127, 33, 195, 157, 26, 68, 166, 248, 51, 109, 143, 209, 86, 8, 234, 180, 249, 167, 69, 27, 156, 194, 32, 126, 186, 228, 6, 88, 223, 129, 99, 61, 112, 46, 204, 146, 21, 75, 169, 247, 34, 124, 158, 192, 71, 25, 251, 165, 232, 182, 84, 10, 141, 211, 49, 111, 171, 245, 23, 73, 206, 144, 114, 44, 97, 63, 221, 131, 4, 90, 184, 230, 45, 115, 145, 207, 72, 22, 244, 170, 231, 185, 91, 5, 130, 220, 62, 96, 164, 250, 24, 70, 193, 159, 125, 35, 110, 48, 210, 140, 11, 85, 183, 233, ],
[0, 95, 190, 225, 97, 62, 223, 128, 194, 157, 124, 35, 163, 252, 29, 66, 153, 198, 39, 120, 248, 167, 70, 25, 91, 4, 229, 186, 58, 101, 132, 219, 47, 112, 145, 206, 78, 17, 240, 175, 237, 178, 83, 12, 140, 211, 50, 109, 182, 233, 8, 87, 215, 136, 105, 54, 116, 43, 202, 149, 21, 74, 171, 244, 94, 1, 224, 191, 63, 96, 129, 222, 156, 195, 34, 125, 253, 162, 67, 28, 199, 152, 121, 38, 166, 249, 24, 71, 5, 90, 187, 228, 100, 59, 218, 133, 113, 46, 207, 144, 16, 79, 174, 241, 179, 236, 13, 82, 210, 141, 108, 51, 232, 183, 86, 9, 137, 214, 55, 104, 42, 117, 148, 203, 75, 20, 245, 170, 188, 227, 2, 93, 221, 130, 99, 60, 126, 33, 192, 159, 31, 64, 161, 254, 37, 122, 155, 196, 68, 27, 250, 165, 231, 184, 89, 6, 134, 217, 56, 103, 147, 204, 45, 114, 242, 173, 76, 19, 81, 14, 239, 176, 48, 111, 142, 209, 10, 85, 180, 235, 107, 52, 213, 138, 200, 151, 118, 41, 169, 246, 23, 72, 226, 189, 92, 3, 131, 220, 61, 98, 32, 127, 158, 193, 65, 30, 255, 160, 123, 36, 197, 154, 26, 69, 164, 251, 185, 230, 7, 88, 216, 135, 102, 57, 205, 146, 115, 44, 172, 243, 18, 77, 15, 80, 177, 238, 110, 49, 208, 143, 84, 11, 234, 181, 53, 106, 139, 212, 150, 201, 40, 119, 247, 168, 73, 22, ],
[0, 96, 192, 160, 157, 253, 93, 61, 39, 71, 231, 135, 186, 218, 122, 26, 78, 46, 142, 238, 211, 179, 19, 115, 105, 9, 169, 201, 244, 148, 52, 84, 156, 252, 92, 60, 1, 97, 193, 161, 187, 219, 123, 27, 38, 70, 230, 134, 210, 178, 18, 114, 79, 47, 143, 239, 245, 149, 53, 85, 104, 8, 168, 200, 37, 69, 229, 133, 184, 216, 120, 24, 2, 98, 194, 162, 159, 255, 95, 63, 107, 11, 171, 203, 246, 150, 54, 86, 76, 44, 140, 236, 209, 177, 17, 113, 185, 217, 121, 25, 36, 68, 228, 132, 158, 254, 94, 62, 3, 99, 195, 163, 247, 151, 55, 87, 106, 10, 170, 202, 208, 176, 16, 112, 77, 45, 141, 237, 74, 42, 138, 234, 215, 183, 23, 119, 109, 13, 173, 205, 240, 144, 48, 80, 4, 100, 196, 164, 153, 249, 89, 57, 35, 67, 227, 131, 190, 222, 126, 30, 214, 182, 22, 118, 75, 43, 139, 235, 241, 145, 49, 81, 108, 12, 172, 204, 152, 248, 88, 56, 5, 101, 197, 165, 191, 223, 127, 31, 34, 66, 226, 130, 111, 15, 175, 207, 242, 146, 50, 82, 72, 40, 136, 232, 213, 181, 21, 117, 33, 65, 225, 129, 188, 220, 124, 28, 6, 102, 198, 166, 155, 251, 91, 59, 243, 147, 51, 83, 110, 14, 174, 206, 212, 180, 20, 116, 73, 41, 137, 233, 189, 221, 125, 29, 32, 64, 224, 128, 154, 250, 90, 58, 7, 103, 199, 167, ],
[0, 97, 194, 163, 153, 248, 91, 58, 47, 78, 237, 140, 182, 215, 116, 21, 94, 63, 156, 253, 199, 166, 5, 100, 113, 16, 179, 210, 232, 137, 42, 75, 188, 221, 126, 31, 37, 68, 231, 134, 147, 242, 81, 48, 10, 107, 200, 169, 226, 131, 32, 65, 123, 26, 185, 216, 205, 172, 15, 110, 84, 53, 150, 247, 101, 4, 167, 198, 252, 157, 62, 95, 74, 43, 136, 233, 211, 178, 17, 112, 59, 90, 249, 152, 162, 195, 96, 1, 20, 117, 214, 183, 141, 236, 79, 46, 217, 184, 27, 122, 64, 33, 130, 227, 246, 151, 52, 85, 111, 14, 173, 204, 135, 230, 69, 36, 30, 127, 220, 189, 168, 201, 106, 11, 49, 80, 243, 146, 202, 171, 8, 105, 83, 50, 145, 240, 229, 132, 39, 70, 124, 29, 190, 223, 148, 245, 86, 55, 13, 108, 207, 174, 187, 218, 121, 24, 34, 67, 224, 129, 118, 23, 180, 213, 239, 142, 45, 76, 89, 56, 155, 250, 192, 161, 2, 99, 40, 73, 234, 139, 177, 208, 115, 18, 7, 102, 197, 164, 158, 255, 92, 61, 175, 206, 109, 12, 54, 87, 244, 149, 128, 225, 66, 35, 25, 120, 219, 186, 241, 144, 51, 82, 104, 9, 170, 203, 222, 191, 28, 125, 71, 38, 133, 228, 19, 114, 209, 176, 138, 235, 72, 41, 60, 93, 254, 159, 165, 196, 103, 6, 77, 44, 143, 238, 212, 181, 22, 119, 98, 3, 160, 193, 251, 154, 57, 88, ],
[0, 98, 196, 166, 149, 247, 81, 51, 55, 85, 243, 145, 162, 192, 102, 4, 110, 12, 170, 200, 251, 153, 63, 93, 89, 59, 157, 255, 204, 174, 8, 106, 220, 190, 24, 122, 73, 43, 141, 239, 235, 137, 47, 77, 126, 28, 186, 216, 178, 208, 118, 20, 39, 69, 227, 129, 133, 231, 65, 35, 16, 114, 212, 182, 165, 199, 97, 3, 48, 82, 244, 150, 146, 240, 86, 52, 7, 101, 195, 161, 203, 169, 15, 109, 94, 60, 154, 248, 252, 158, 56, 90, 105, 11, 173, 207, 121, 27, 189, 223, 236, 142, 40, 74, 78, 44, 138, 232, 219, 185, 31, 125, 23, 117, 211, 177, 130, 224, 70, 36, 32, 66, 228, 134, 181, 215, 113, 19, 87, 53, 147, 241, 194, 160, 6, 100, 96, 2, 164, 198, 245, 151, 49, 83, 57, 91, 253, 159, 172, 206, 104, 10, 14, 108, 202, 168, 155, 249, 95, 61, 139, 233, 79, 45, 30, 124, 218, 184, 188, 222, 120, 26, 41, 75, 237, 143, 229, 135, 33, 67, 112, 18, 180, 214, 210, 176, 22, 116, 71, 37, 131, 225, 242, 144, 54, 84, 103, 5, 163, 193, 197, 167, 1, 99, 80, 50, 148, 246, 156, 254, 88, 58, 9, 107, 205, 175, 171, 201, 111, 13, 62, 92, 250, 152, 46, 76, 234, 136, 187, 217, 127, 29, 25, 123, 221, 191, 140, 238, 72, 42, 64, 34, 132, 230, 213, 183, 17, 115, 119, 21, 179, 209, 226, 128, 38, 68, ],
[0, 99, 198, 165, 145, 242, 87, 52, 63, 92, 249, 154, 174, 205, 104, 11, 126, 29, 184, 219, 239, 140, 41, 74, 65, 34, 135, 228, 208, 179, 22, 117, 252, 159, 58, 89, 109, 14, 171, 200, 195, 160, 5, 102, 82, 49, 148, 247, 130, 225, 68, 39, 19, 112, 213, 182, 189, 222, 123, 24, 44, 79, 234, 137, 229, 134, 35, 64, 116, 23, 178, 209, 218, 185, 28, 127, 75, 40, 141, 238, 155, 248, 93, 62, 10, 105, 204, 175, 164, 199, 98, 1, 53, 86, 243, 144, 25, 122, 223, 188, 136, 235, 78, 45, 38, 69, 224, 131, 183, 212, 113, 18, 103, 4, 161, 194, 246, 149, 48, 83, 88, 59, 158, 253, 201, 170, 15, 108, 215, 180, 17, 114, 70, 37, 128, 227, 232, 139, 46, 77, 121, 26, 191, 220, 169, 202, 111, 12, 56, 91, 254, 157, 150, 245, 80, 51, 7, 100, 193, 162, 43, 72, 237, 142, 186, 217, 124, 31, 20, 119, 210, 177, 133, 230, 67, 32, 85, 54, 147, 240, 196, 167, 2, 97, 106, 9, 172, 207, 251, 152, 61, 94, 50, 81, 244, 151, 163, 192, 101, 6, 13, 110, 203, 168, 156, 255, 90, 57, 76, 47, 138, 233, 221, 190, 27, 120, 115, 16, 181, 214, 226, 129, 36, 71, 206, 173, 8, 107, 95, 60, 153, 250, 241, 146, 55, 84, 96, 3, 166, 197, 176, 211, 118, 21, 33, 66, 231, 132, 143, 236, 73, 42, 30, 125, 216, 187, ],
[0, 100, 200, 172, 141, 233, 69, 33, 7, 99, 207, 171, 138, 238, 66, 38, 14, 106, 198, 162, 131, 231, 75, 47, 9, 109, 193, 165, 132, 224, 76, 40, 28, 120, 212, 176, 145, 245, 89, 61, 27, 127, 211, 183, 150, 242, 94, 58, 18, 118, 218, 190, 159, 251, 87, 51, 21, 113, 221, 185, 152, 252, 80, 52, 56, 92, 240, 148, 181, 209, 125, 25, 63, 91, 247, 147, 178, 214, 122, 30, 54, 82, 254, 154, 187, 223, 115, 23, 49, 85, 249, 157, 188, 216, 116, 16, 36, 64, 236, 136, 169, 205, 97, 5, 35, 71, 235, 143, 174, 202, 102, 2, 42, 78, 226, 134, 167, 195, 111, 11, 45, 73, 229, 129, 160, 196, 104, 12, 112, 20, 184, 220, 253, 153, 53, 81, 119, 19, 191, 219, 250, 158, 50, 86, 126, 26, 182, 210, 243, 151, 59, 95, 121, 29, 177, 213, 244, 144, 60, 88, 108, 8, 164, 192, 225, 133, 41, 77, 107, 15, 163, 199, 230, 130, 46, 74, 98, 6, 170, 206, 239, 139, 39, 67, 101, 1, 173, 201, 232, 140, 32, 68, 72, 44, 128, 228, 197, 161, 13, 105, 79, 43, 135, 227, 194, 166, 10, 110, 70, 34, 142, 234, 203, 175, 3, 103, 65, 37, 137, 237, 204, 168, 4, 96, 84, 48, 156, 248, 217, 189, 17, 117, 83, 55, 155, 255, 222, 186, 22, 114, 90, 62, 146, 246, 215, 179, 31, 123, 93, 57, 149, 241, 208, 180, 24, 124, ],
[0, 101, 202, 175, 137, 236, 67, 38, 15, 106, 197, 160, 134, 227, 76, 41, 30, 123, 212, 177, 151, 242, 93, 56, 17, 116, 219, 190, 152, 253, 82, 55, 60, 89, 246, 147, 181, 208, 127, 26, 51, 86, 249, 156, 186, 223, 112, 21, 34, 71, 232, 141, 171, 206, 97, 4, 45, 72, 231, 130, 164, 193, 110, 11, 120, 29, 178, 215, 241, 148, 59, 94, 119, 18, 189, 216, 254, 155, 52, 81, 102, 3, 172, 201, 239, 138, 37, 64, 105, 12, 163, 198, 224, 133, 42, 79, 68, 33, 142, 235, 205, 168, 7, 98, 75, 46, 129, 228, 194, 167, 8, 109, 90, 63, 144, 245, 211, 182, 25, 124, 85, 48, 159, 250, 220, 185, 22, 115, 240, 149, 58, 95, 121, 28, 179, 214, 255, 154, 53, 80, 118, 19, 188, 217, 238, 139, 36, 65, 103, 2, 173, 200, 225, 132, 43, 78, 104, 13, 162, 199, 204, 169, 6, 99, 69, 32, 143, 234, 195, 166, 9, 108, 74, 47, 128, 229, 210, 183, 24, 125, 91, 62, 145, 244, 221, 184, 23, 114, 84, 49, 158, 251, 136, 237, 66, 39, 1, 100, 203, 174, 135, 226, 77, 40, 14, 107, 196, 161, 150, 243, 92, 57, 31, 122, 213, 176, 153, 252, 83, 54, 16, 117, 218, 191, 180, 209, 126, 27, 61, 88, 247, 146, 187, 222, 113, 20, 50, 87, 248, 157, 170, 207, 96, 5, 35, 70, 233, 140, 165, 192, 111, 10, 44, 73, 230, 131, ],
[0, 102, 204, 170, 133, 227, 73, 47, 23, 113, 219, 189, 146, 244, 94, 56, 46, 72, 226, 132, 171, 205, 103, 1, 57, 95, 245, 147, 188, 218, 112, 22, 92, 58, 144, 246, 217, 191, 21, 115, 75, 45, 135, 225, 206, 168, 2, 100, 114, 20, 190, 216, 247, 145, 59, 93, 101, 3, 169, 207, 224, 134, 44, 74, 184, 222, 116, 18, 61, 91, 241, 151, 175, 201, 99, 5, 42, 76, 230, 128, 150, 240, 90, 60, 19, 117, 223, 185, 129, 231, 77, 43, 4, 98, 200, 174, 228, 130, 40, 78, 97, 7, 173, 203, 243, 149, 63, 89, 118, 16, 186, 220, 202, 172, 6, 96, 79, 41, 131, 229, 221, 187, 17, 119, 88, 62, 148, 242, 109, 11, 161, 199, 232, 142, 36, 66, 122, 28, 182, 208, 255, 153, 51, 85, 67, 37, 143, 233, 198, 160, 10, 108, 84, 50, 152, 254, 209, 183, 29, 123, 49, 87, 253, 155, 180, 210, 120, 30, 38, 64, 234, 140, 163, 197, 111, 9, 31, 121, 211, 181, 154, 252, 86, 48, 8, 110, 196, 162, 141, 235, 65, 39, 213, 179, 25, 127, 80, 54, 156, 250, 194, 164, 14, 104, 71, 33, 139, 237, 251, 157, 55, 81, 126, 24, 178, 212, 236, 138, 32, 70, 105, 15, 165, 195, 137, 239, 69, 35, 12, 106, 192, 166, 158, 248, 82, 52, 27, 125, 215, 177, 167, 193, 107, 13, 34, 68, 238, 136, 176, 214, 124, 26, 53, 83, 249, 159, ],
[0, 103, 206, 169, 129, 230, 79, 40, 31, 120, 209, 182, 158, 249, 80, 55, 62, 89, 240, 151, 191, 216, 113, 22, 33, 70, 239, 136, 160, 199, 110, 9, 124, 27, 178, 213, 253, 154, 51, 84, 99, 4, 173, 202, 226, 133, 44, 75, 66, 37, 140, 235, 195, 164, 13, 106, 93, 58, 147, 244, 220, 187, 18, 117, 248, 159, 54, 81, 121, 30, 183, 208, 231, 128, 41, 78, 102, 1, 168, 207, 198, 161, 8, 111, 71, 32, 137, 238, 217, 190, 23, 112, 88, 63, 150, 241, 132, 227, 74, 45, 5, 98, 203, 172, 155, 252, 85, 50, 26, 125, 212, 179, 186, 221, 116, 19, 59, 92, 245, 146, 165, 194, 107, 12, 36, 67, 234, 141, 237, 138, 35, 68, 108, 11, 162, 197, 242, 149, 60, 91, 115, 20, 189, 218, 211, 180, 29, 122, 82, 53, 156, 251, 204, 171, 2, 101, 77, 42, 131, 228, 145, 246, 95, 56, 16, 119, 222, 185, 142, 233, 64, 39, 15, 104, 193, 166, 175, 200, 97, 6, 46, 73, 224, 135, 176, 215, 126, 25, 49, 86, 255, 152, 21, 114, 219, 188, 148, 243, 90, 61, 10, 109, 196, 163, 139, 236, 69, 34, 43, 76, 229, 130, 170, 205, 100, 3, 52, 83, 250, 157, 181, 210, 123, 28, 105, 14, 167, 192, 232, 143, 38, 65, 118, 17, 184, 223, 247, 144, 57, 94, 87, 48, 153, 254, 214, 177, 24, 127, 72, 47, 134, 225, 201, 174, 7, 96, ],
[0, 104, 208, 184, 189, 213, 109, 5, 103, 15, 183, 223, 218, 178, 10, 98, 206, 166, 30, 118, 115, 27, 163, 203, 169, 193, 121, 17, 20, 124, 196, 172, 129, 233, 81, 57, 60, 84, 236, 132, 230, 142, 54, 94, 91, 51, 139, 227, 79, 39, 159, 247, 242, 154, 34, 74, 40, 64, 248, 144, 149, 253, 69, 45, 31, 119, 207, 167, 162, 202, 114, 26, 120, 16, 168, 192, 197, 173, 21, 125, 209, 185, 1, 105, 108, 4, 188, 212, 182, 222, 102, 14, 11, 99, 219, 179, 158, 246, 78, 38, 35, 75, 243, 155, 249, 145, 41, 65, 68, 44, 148, 252, 80, 56, 128, 232, 237, 133, 61, 85, 55, 95, 231, 143, 138, 226, 90, 50, 62, 86, 238, 134, 131, 235, 83, 59, 89, 49, 137, 225, 228, 140, 52, 92, 240, 152, 32, 72, 77, 37, 157, 245, 151, 255, 71, 47, 42, 66, 250, 146, 191, 215, 111, 7, 2, 106, 210, 186, 216, 176, 8, 96, 101, 13, 181, 221, 113, 25, 161, 201, 204, 164, 28, 116, 22, 126, 198, 174, 171, 195, 123, 19, 33, 73, 241, 153, 156, 244, 76, 36, 70, 46, 150, 254, 251, 147, 43, 67, 239, 135, 63, 87, 82, 58, 130, 234, 136, 224, 88, 48, 53, 93, 229, 141, 160, 200, 112, 24, 29, 117, 205, 165, 199, 175, 23, 127, 122, 18, 170, 194, 110, 6, 190, 214, 211, 187, 3, 107, 9, 97, 217, 177, 180, 220, 100, 12, ],
[0, 105, 210, 187, 185, 208, 107, 2, 111, 6, 189, 212, 214, 191, 4, 109, 222, 183, 12, 101, 103, 14, 181, 220, 177, 216, 99, 10, 8, 97, 218, 179, 161, 200, 115, 26, 24, 113, 202, 163, 206, 167, 28, 117, 119, 30, 165, 204, 127, 22, 173, 196, 198, 175, 20, 125, 16, 121, 194, 171, 169, 192, 123, 18, 95, 54, 141, 228, 230, 143, 52, 93, 48, 89, 226, 139, 137, 224, 91, 50, 129, 232, 83, 58, 56, 81, 234, 131, 238, 135, 60, 85, 87, 62, 133, 236, 254, 151, 44, 69, 71, 46, 149, 252, 145, 248, 67, 42, 40, 65, 250, 147, 32, 73, 242, 155, 153, 240, 75, 34, 79, 38, 157, 244, 246, 159, 36, 77, 190, 215, 108, 5, 7, 110, 213, 188, 209, 184, 3, 106, 104, 1, 186, 211, 96, 9, 178, 219, 217, 176, 11, 98, 15, 102, 221, 180, 182, 223, 100, 13, 31, 118, 205, 164, 166, 207, 116, 29, 112, 25, 162, 203, 201, 160, 27, 114, 193, 168, 19, 122, 120, 17, 170, 195, 174, 199, 124, 21, 23, 126, 197, 172, 225, 136, 51, 90, 88, 49, 138, 227, 142, 231, 92, 53, 55, 94, 229, 140, 63, 86, 237, 132, 134, 239, 84, 61, 80, 57, 130, 235, 233, 128, 59, 82, 64, 41, 146, 251, 249, 144, 43, 66, 47, 70, 253, 148, 150, 255, 68, 45, 158, 247, 76, 37, 39, 78, 245, 156, 241, 152, 35, 74, 72, 33, 154, 243, ],
[0, 106, 212, 190, 181, 223, 97, 11, 119, 29, 163, 201, 194, 168, 22, 124, 238, 132, 58, 80, 91, 49, 143, 229, 153, 243, 77, 39, 44, 70, 248, 146, 193, 171, 21, 127, 116, 30, 160, 202, 182, 220, 98, 8, 3, 105, 215, 189, 47, 69, 251, 145, 154, 240, 78, 36, 88, 50, 140, 230, 237, 135, 57, 83, 159, 245, 75, 33, 42, 64, 254, 148, 232, 130, 60, 86, 93, 55, 137, 227, 113, 27, 165, 207, 196, 174, 16, 122, 6, 108, 210, 184, 179, 217, 103, 13, 94, 52, 138, 224, 235, 129, 63, 85, 41, 67, 253, 151, 156, 246, 72, 34, 176, 218, 100, 14, 5, 111, 209, 187, 199, 173, 19, 121, 114, 24, 166, 204, 35, 73, 247, 157, 150, 252, 66, 40, 84, 62, 128, 234, 225, 139, 53, 95, 205, 167, 25, 115, 120, 18, 172, 198, 186, 208, 110, 4, 15, 101, 219, 177, 226, 136, 54, 92, 87, 61, 131, 233, 149, 255, 65, 43, 32, 74, 244, 158, 12, 102, 216, 178, 185, 211, 109, 7, 123, 17, 175, 197, 206, 164, 26, 112, 188, 214, 104, 2, 9, 99, 221, 183, 203, 161, 31, 117, 126, 20, 170, 192, 82, 56, 134, 236, 231, 141, 51, 89, 37, 79, 241, 155, 144, 250, 68, 46, 125, 23, 169, 195, 200, 162, 28, 118, 10, 96, 222, 180, 191, 213, 107, 1, 147, 249, 71, 45, 38, 76, 242, 152, 228, 142, 48, 90, 81, 59, 133, 239, ],
[0, 107, 214, 189, 177, 218, 103, 12, 127, 20, 169, 194, 206, 165, 24, 115, 254, 149, 40, 67, 79, 36, 153, 242, 129, 234, 87, 60, 48, 91, 230, 141, 225, 138, 55, 92, 80, 59, 134, 237, 158, 245, 72, 35, 47, 68, 249, 146, 31, 116, 201, 162, 174, 197, 120, 19, 96, 11, 182, 221, 209, 186, 7, 108, 223, 180, 9, 98, 110, 5, 184, 211, 160, 203, 118, 29, 17, 122, 199, 172, 33, 74, 247, 156, 144, 251, 70, 45, 94, 53, 136, 227, 239, 132, 57, 82, 62, 85, 232, 131, 143, 228, 89, 50, 65, 42, 151, 252, 240, 155, 38, 77, 192, 171, 22, 125, 113, 26, 167, 204, 191, 212, 105, 2, 14, 101, 216, 179, 163, 200, 117, 30, 18, 121, 196, 175, 220, 183, 10, 97, 109, 6, 187, 208, 93, 54, 139, 224, 236, 135, 58, 81, 34, 73, 244, 159, 147, 248, 69, 46, 66, 41, 148, 255, 243, 152, 37, 78, 61, 86, 235, 128, 140, 231, 90, 49, 188, 215, 106, 1, 13, 102, 219, 176, 195, 168, 21, 126, 114, 25, 164, 207, 124, 23, 170, 193, 205, 166, 27, 112, 3, 104, 213, 190, 178, 217, 100, 15, 130, 233, 84, 63, 51, 88, 229, 142, 253, 150, 43, 64, 76, 39, 154, 241, 157, 246, 75, 32, 44, 71, 250, 145, 226, 137, 52, 95, 83, 56, 133, 238, 99, 8, 181, 222, 210, 185, 4, 111, 28, 119, 202, 161, 173, 198, 123, 16, ],
[0, 108, 216, 180, 173, 193, 117, 25, 71, 43, 159, 243, 234, 134, 50, 94, 142, 226, 86, 58, 35, 79, 251, 151, 201, 165, 17, 125, 100, 8, 188, 208, 1, 109, 217, 181, 172, 192, 116, 24, 70, 42, 158, 242, 235, 135, 51, 95, 143, 227, 87, 59, 34, 78, 250, 150, 200, 164, 16, 124, 101, 9, 189, 209, 2, 110, 218, 182, 175, 195, 119, 27, 69, 41, 157, 241, 232, 132, 48, 92, 140, 224, 84, 56, 33, 77, 249, 149, 203, 167, 19, 127, 102, 10, 190, 210, 3, 111, 219, 183, 174, 194, 118, 26, 68, 40, 156, 240, 233, 133, 49, 93, 141, 225, 85, 57, 32, 76, 248, 148, 202, 166, 18, 126, 103, 11, 191, 211, 4, 104, 220, 176, 169, 197, 113, 29, 67, 47, 155, 247, 238, 130, 54, 90, 138, 230, 82, 62, 39, 75, 255, 147, 205, 161, 21, 121, 96, 12, 184, 212, 5, 105, 221, 177, 168, 196, 112, 28, 66, 46, 154, 246, 239, 131, 55, 91, 139, 231, 83, 63, 38, 74, 254, 146, 204, 160, 20, 120, 97, 13, 185, 213, 6, 106, 222, 178, 171, 199, 115, 31, 65, 45, 153, 245, 236, 128, 52, 88, 136, 228, 80, 60, 37, 73, 253, 145, 207, 163, 23, 123, 98, 14, 186, 214, 7, 107, 223, 179, 170, 198, 114, 30, 64, 44, 152, 244, 237, 129, 53, 89, 137, 229, 81, 61, 36, 72, 252, 144, 206, 162, 22, 122, 99, 15, 187, 215, ],
[0, 109, 218, 183, 169, 196, 115, 30, 79, 34, 149, 248, 230, 139, 60, 81, 158, 243, 68, 41, 55, 90, 237, 128, 209, 188, 11, 102, 120, 21, 162, 207, 33, 76, 251, 150, 136, 229, 82, 63, 110, 3, 180, 217, 199, 170, 29, 112, 191, 210, 101, 8, 22, 123, 204, 161, 240, 157, 42, 71, 89, 52, 131, 238, 66, 47, 152, 245, 235, 134, 49, 92, 13, 96, 215, 186, 164, 201, 126, 19, 220, 177, 6, 107, 117, 24, 175, 194, 147, 254, 73, 36, 58, 87, 224, 141, 99, 14, 185, 212, 202, 167, 16, 125, 44, 65, 246, 155, 133, 232, 95, 50, 253, 144, 39, 74, 84, 57, 142, 227, 178, 223, 104, 5, 27, 118, 193, 172, 132, 233, 94, 51, 45, 64, 247, 154, 203, 166, 17, 124, 98, 15, 184, 213, 26, 119, 192, 173, 179, 222, 105, 4, 85, 56, 143, 226, 252, 145, 38, 75, 165, 200, 127, 18, 12, 97, 214, 187, 234, 135, 48, 93, 67, 46, 153, 244, 59, 86, 225, 140, 146, 255, 72, 37, 116, 25, 174, 195, 221, 176, 7, 106, 198, 171, 28, 113, 111, 2, 181, 216, 137, 228, 83, 62, 32, 77, 250, 151, 88, 53, 130, 239, 241, 156, 43, 70, 23, 122, 205, 160, 190, 211, 100, 9, 231, 138, 61, 80, 78, 35, 148, 249, 168, 197, 114, 31, 1, 108, 219, 182, 121, 20, 163, 206, 208, 189, 10, 103, 54, 91, 236, 129, 159, 242, 69, 40, ],
[0, 110, 220, 178, 165, 203, 121, 23, 87, 57, 139, 229, 242, 156, 46, 64, 174, 192, 114, 28, 11, 101, 215, 185, 249, 151, 37, 75, 92, 50, 128, 238, 65, 47, 157, 243, 228, 138, 56, 86, 22, 120, 202, 164, 179, 221, 111, 1, 239, 129, 51, 93, 74, 36, 150, 248, 184, 214, 100, 10, 29, 115, 193, 175, 130, 236, 94, 48, 39, 73, 251, 149, 213, 187, 9, 103, 112, 30, 172, 194, 44, 66, 240, 158, 137, 231, 85, 59, 123, 21, 167, 201, 222, 176, 2, 108, 195, 173, 31, 113, 102, 8, 186, 212, 148, 250, 72, 38, 49, 95, 237, 131, 109, 3, 177, 223, 200, 166, 20, 122, 58, 84, 230, 136, 159, 241, 67, 45, 25, 119, 197, 171, 188, 210, 96, 14, 78, 32, 146, 252, 235, 133, 55, 89, 183, 217, 107, 5, 18, 124, 206, 160, 224, 142, 60, 82, 69, 43, 153, 247, 88, 54, 132, 234, 253, 147, 33, 79, 15, 97, 211, 189, 170, 196, 118, 24, 246, 152, 42, 68, 83, 61, 143, 225, 161, 207, 125, 19, 4, 106, 216, 182, 155, 245, 71, 41, 62, 80, 226, 140, 204, 162, 16, 126, 105, 7, 181, 219, 53, 91, 233, 135, 144, 254, 76, 34, 98, 12, 190, 208, 199, 169, 27, 117, 218, 180, 6, 104, 127, 17, 163, 205, 141, 227, 81, 63, 40, 70, 244, 154, 116, 26, 168, 198, 209, 191, 13, 99, 35, 77, 255, 145, 134, 232, 90, 52, ],
[0, 111, 222, 177, 161, 206, 127, 16, 95, 48, 129, 238, 254, 145, 32, 79, 190, 209, 96, 15, 31, 112, 193, 174, 225, 142, 63, 80, 64, 47, 158, 241, 97, 14, 191, 208, 192, 175, 30, 113, 62, 81, 224, 143, 159, 240, 65, 46, 223, 176, 1, 110, 126, 17, 160, 207, 128, 239, 94, 49, 33, 78, 255, 144, 194, 173, 28, 115, 99, 12, 189, 210, 157, 242, 67, 44, 60, 83, 226, 141, 124, 19, 162, 205, 221, 178, 3, 108, 35, 76, 253, 146, 130, 237, 92, 51, 163, 204, 125, 18, 2, 109, 220, 179, 252, 147, 34, 77, 93, 50, 131, 236, 29, 114, 195, 172, 188, 211, 98, 13, 66, 45, 156, 243, 227, 140, 61, 82, 153, 246, 71, 40, 56, 87, 230, 137, 198, 169, 24, 119, 103, 8, 185, 214, 39, 72, 249, 150, 134, 233, 88, 55, 120, 23, 166, 201, 217, 182, 7, 104, 248, 151, 38, 73, 89, 54, 135, 232, 167, 200, 121, 22, 6, 105, 216, 183, 70, 41, 152, 247, 231, 136, 57, 86, 25, 118, 199, 168, 184, 215, 102, 9, 91, 52, 133, 234, 250, 149, 36, 75, 4, 107, 218, 181, 165, 202, 123, 20, 229, 138, 59, 84, 68, 43, 154, 245, 186, 213, 100, 11, 27, 116, 197, 170, 58, 85, 228, 139, 155, 244, 69, 42, 101, 10, 187, 212, 196, 171, 26, 117, 132, 235, 90, 53, 37, 74, 251, 148, 219, 180, 5, 106, 122, 21, 164, 203, ],
[0, 112, 224, 144, 221, 173, 61, 77, 167, 215, 71, 55, 122, 10, 154, 234, 83, 35, 179, 195, 142, 254, 110, 30, 244, 132, 20, 100, 41, 89, 201, 185, 166, 214, 70, 54, 123, 11, 155, 235, 1, 113, 225, 145, 220, 172, 60, 76, 245, 133, 21, 101, 40, 88, 200, 184, 82, 34, 178, 194, 143, 255, 111, 31, 81, 33, 177, 193, 140, 252, 108, 28, 246, 134, 22, 102, 43, 91, 203, 187, 2, 114, 226, 146, 223, 175, 63, 79, 165, 213, 69, 53, 120, 8, 152, 232, 247, 135, 23, 103, 42, 90, 202, 186, 80, 32, 176, 192, 141, 253, 109, 29, 164, 212, 68, 52, 121, 9, 153, 233, 3, 115, 227, 147, 222, 174, 62, 78, 162, 210, 66, 50, 127, 15, 159, 239, 5, 117, 229, 149, 216, 168, 56, 72, 241, 129, 17, 97, 44, 92, 204, 188, 86, 38, 182, 198, 139, 251, 107, 27, 4, 116, 228, 148, 217, 169, 57, 73, 163, 211, 67, 51, 126, 14, 158, 238, 87, 39, 183, 199, 138, 250, 106, 26, 240, 128, 16, 96, 45, 93, 205, 189, 243, 131, 19, 99, 46, 94, 206, 190, 84, 36, 180, 196, 137, 249, 105, 25, 160, 208, 64, 48, 125, 13, 157, 237, 7, 119, 231, 151, 218, 170, 58, 74, 85, 37, 181, 197, 136, 248, 104, 24, 242, 130, 18, 98, 47, 95, 207, 191, 6, 118, 230, 150, 219, 171, 59, 75, 161, 209, 65, 49, 124, 12, 156, 236, ],
[0, 113, 226, 147, 217, 168, 59, 74, 175, 222, 77, 60, 118, 7, 148, 229, 67, 50, 161, 208, 154, 235, 120, 9, 236, 157, 14, 127, 53, 68, 215, 166, 134, 247, 100, 21, 95, 46, 189, 204, 41, 88, 203, 186, 240, 129, 18, 99, 197, 180, 39, 86, 28, 109, 254, 143, 106, 27, 136, 249, 179, 194, 81, 32, 17, 96, 243, 130, 200, 185, 42, 91, 190, 207, 92, 45, 103, 22, 133, 244, 82, 35, 176, 193, 139, 250, 105, 24, 253, 140, 31, 110, 36, 85, 198, 183, 151, 230, 117, 4, 78, 63, 172, 221, 56, 73, 218, 171, 225, 144, 3, 114, 212, 165, 54, 71, 13, 124, 239, 158, 123, 10, 153, 232, 162, 211, 64, 49, 34, 83, 192, 177, 251, 138, 25, 104, 141, 252, 111, 30, 84, 37, 182, 199, 97, 16, 131, 242, 184, 201, 90, 43, 206, 191, 44, 93, 23, 102, 245, 132, 164, 213, 70, 55, 125, 12, 159, 238, 11, 122, 233, 152, 210, 163, 48, 65, 231, 150, 5, 116, 62, 79, 220, 173, 72, 57, 170, 219, 145, 224, 115, 2, 51, 66, 209, 160, 234, 155, 8, 121, 156, 237, 126, 15, 69, 52, 167, 214, 112, 1, 146, 227, 169, 216, 75, 58, 223, 174, 61, 76, 6, 119, 228, 149, 181, 196, 87, 38, 108, 29, 142, 255, 26, 107, 248, 137, 195, 178, 33, 80, 246, 135, 20, 101, 47, 94, 205, 188, 89, 40, 187, 202, 128, 241, 98, 19, ],
[0, 114, 228, 150, 213, 167, 49, 67, 183, 197, 83, 33, 98, 16, 134, 244, 115, 1, 151, 229, 166, 212, 66, 48, 196, 182, 32, 82, 17, 99, 245, 135, 230, 148, 2, 112, 51, 65, 215, 165, 81, 35, 181, 199, 132, 246, 96, 18, 149, 231, 113, 3, 64, 50, 164, 214, 34, 80, 198, 180, 247, 133, 19, 97, 209, 163, 53, 71, 4, 118, 224, 146, 102, 20, 130, 240, 179, 193, 87, 37, 162, 208, 70, 52, 119, 5, 147, 225, 21, 103, 241, 131, 192, 178, 36, 86, 55, 69, 211, 161, 226, 144, 6, 116, 128, 242, 100, 22, 85, 39, 177, 195, 68, 54, 160, 210, 145, 227, 117, 7, 243, 129, 23, 101, 38, 84, 194, 176, 191, 205, 91, 41, 106, 24, 142, 252, 8, 122, 236, 158, 221, 175, 57, 75, 204, 190, 40, 90, 25, 107, 253, 143, 123, 9, 159, 237, 174, 220, 74, 56, 89, 43, 189, 207, 140, 254, 104, 26, 238, 156, 10, 120, 59, 73, 223, 173, 42, 88, 206, 188, 255, 141, 27, 105, 157, 239, 121, 11, 72, 58, 172, 222, 110, 28, 138, 248, 187, 201, 95, 45, 217, 171, 61, 79, 12, 126, 232, 154, 29, 111, 249, 139, 200, 186, 44, 94, 170, 216, 78, 60, 127, 13, 155, 233, 136, 250, 108, 30, 93, 47, 185, 203, 63, 77, 219, 169, 234, 152, 14, 124, 251, 137, 31, 109, 46, 92, 202, 184, 76, 62, 168, 218, 153, 235, 125, 15, ],
[0, 115, 230, 149, 209, 162, 55, 68, 191, 204, 89, 42, 110, 29, 136, 251, 99, 16, 133, 246, 178, 193, 84, 39, 220, 175, 58, 73, 13, 126, 235, 152, 198, 181, 32, 83, 23, 100, 241, 130, 121, 10, 159, 236, 168, 219, 78, 61, 165, 214, 67, 48, 116, 7, 146, 225, 26, 105, 252, 143, 203, 184, 45, 94, 145, 226, 119, 4, 64, 51, 166, 213, 46, 93, 200, 187, 255, 140, 25, 106, 242, 129, 20, 103, 35, 80, 197, 182, 77, 62, 171, 216, 156, 239, 122, 9, 87, 36, 177, 194, 134, 245, 96, 19, 232, 155, 14, 125, 57, 74, 223, 172, 52, 71, 210, 161, 229, 150, 3, 112, 139, 248, 109, 30, 90, 41, 188, 207, 63, 76, 217, 170, 238, 157, 8, 123, 128, 243, 102, 21, 81, 34, 183, 196, 92, 47, 186, 201, 141, 254, 107, 24, 227, 144, 5, 118, 50, 65, 212, 167, 249, 138, 31, 108, 40, 91, 206, 189, 70, 53, 160, 211, 151, 228, 113, 2, 154, 233, 124, 15, 75, 56, 173, 222, 37, 86, 195, 176, 244, 135, 18, 97, 174, 221, 72, 59, 127, 12, 153, 234, 17, 98, 247, 132, 192, 179, 38, 85, 205, 190, 43, 88, 28, 111, 250, 137, 114, 1, 148, 231, 163, 208, 69, 54, 104, 27, 142, 253, 185, 202, 95, 44, 215, 164, 49, 66, 6, 117, 224, 147, 11, 120, 237, 158, 218, 169, 60, 79, 180, 199, 82, 33, 101, 22, 131, 240, ],
[0, 116, 232, 156, 205, 185, 37, 81, 135, 243, 111, 27, 74, 62, 162, 214, 19, 103, 251, 143, 222, 170, 54, 66, 148, 224, 124, 8, 89, 45, 177, 197, 38, 82, 206, 186, 235, 159, 3, 119, 161, 213, 73, 61, 108, 24, 132, 240, 53, 65, 221, 169, 248, 140, 16, 100, 178, 198, 90, 46, 127, 11, 151, 227, 76, 56, 164, 208, 129, 245, 105, 29, 203, 191, 35, 87, 6, 114, 238, 154, 95, 43, 183, 195, 146, 230, 122, 14, 216, 172, 48, 68, 21, 97, 253, 137, 106, 30, 130, 246, 167, 211, 79, 59, 237, 153, 5, 113, 32, 84, 200, 188, 121, 13, 145, 229, 180, 192, 92, 40, 254, 138, 22, 98, 51, 71, 219, 175, 152, 236, 112, 4, 85, 33, 189, 201, 31, 107, 247, 131, 210, 166, 58, 78, 139, 255, 99, 23, 70, 50, 174, 218, 12, 120, 228, 144, 193, 181, 41, 93, 190, 202, 86, 34, 115, 7, 155, 239, 57, 77, 209, 165, 244, 128, 28, 104, 173, 217, 69, 49, 96, 20, 136, 252, 42, 94, 194, 182, 231, 147, 15, 123, 212, 160, 60, 72, 25, 109, 241, 133, 83, 39, 187, 207, 158, 234, 118, 2, 199, 179, 47, 91, 10, 126, 226, 150, 64, 52, 168, 220, 141, 249, 101, 17, 242, 134, 26, 110, 63, 75, 215, 163, 117, 1, 157, 233, 184, 204, 80, 36, 225, 149, 9, 125, 44, 88, 196, 176, 102, 18, 142, 250, 171, 223, 67, 55, ],
[0, 117, 234, 159, 201, 188, 35, 86, 143, 250, 101, 16, 70, 51, 172, 217, 3, 118, 233, 156, 202, 191, 32, 85, 140, 249, 102, 19, 69, 48, 175, 218, 6, 115, 236, 153, 207, 186, 37, 80, 137, 252, 99, 22, 64, 53, 170, 223, 5, 112, 239, 154, 204, 185, 38, 83, 138, 255, 96, 21, 67, 54, 169, 220, 12, 121, 230, 147, 197, 176, 47, 90, 131, 246, 105, 28, 74, 63, 160, 213, 15, 122, 229, 144, 198, 179, 44, 89, 128, 245, 106, 31, 73, 60, 163, 214, 10, 127, 224, 149, 195, 182, 41, 92, 133, 240, 111, 26, 76, 57, 166, 211, 9, 124, 227, 150, 192, 181, 42, 95, 134, 243, 108, 25, 79, 58, 165, 208, 24, 109, 242, 135, 209, 164, 59, 78, 151, 226, 125, 8, 94, 43, 180, 193, 27, 110, 241, 132, 210, 167, 56, 77, 148, 225, 126, 11, 93, 40, 183, 194, 30, 107, 244, 129, 215, 162, 61, 72, 145, 228, 123, 14, 88, 45, 178, 199, 29, 104, 247, 130, 212, 161, 62, 75, 146, 231, 120, 13, 91, 46, 177, 196, 20, 97, 254, 139, 221, 168, 55, 66, 155, 238, 113, 4, 82, 39, 184, 205, 23, 98, 253, 136, 222, 171, 52, 65, 152, 237, 114, 7, 81, 36, 187, 206, 18, 103, 248, 141, 219, 174, 49, 68, 157, 232, 119, 2, 84, 33, 190, 203, 17, 100, 251, 142, 216, 173, 50, 71, 158, 235, 116, 1, 87, 34, 189, 200, ],
[0, 118, 236, 154, 197, 179, 41, 95, 151, 225, 123, 13, 82, 36, 190, 200, 51, 69, 223, 169, 246, 128, 26, 108, 164, 210, 72, 62, 97, 23, 141, 251, 102, 16, 138, 252, 163, 213, 79, 57, 241, 135, 29, 107, 52, 66, 216, 174, 85, 35, 185, 207, 144, 230, 124, 10, 194, 180, 46, 88, 7, 113, 235, 157, 204, 186, 32, 86, 9, 127, 229, 147, 91, 45, 183, 193, 158, 232, 114, 4, 255, 137, 19, 101, 58, 76, 214, 160, 104, 30, 132, 242, 173, 219, 65, 55, 170, 220, 70, 48, 111, 25, 131, 245, 61, 75, 209, 167, 248, 142, 20, 98, 153, 239, 117, 3, 92, 42, 176, 198, 14, 120, 226, 148, 203, 189, 39, 81, 133, 243, 105, 31, 64, 54, 172, 218, 18, 100, 254, 136, 215, 161, 59, 77, 182, 192, 90, 44, 115, 5, 159, 233, 33, 87, 205, 187, 228, 146, 8, 126, 227, 149, 15, 121, 38, 80, 202, 188, 116, 2, 152, 238, 177, 199, 93, 43, 208, 166, 60, 74, 21, 99, 249, 143, 71, 49, 171, 221, 130, 244, 110, 24, 73, 63, 165, 211, 140, 250, 96, 22, 222, 168, 50, 68, 27, 109, 247, 129, 122, 12, 150, 224, 191, 201, 83, 37, 237, 155, 1, 119, 40, 94, 196, 178, 47, 89, 195, 181, 234, 156, 6, 112, 184, 206, 84, 34, 125, 11, 145, 231, 28, 106, 240, 134, 217, 175, 53, 67, 139, 253, 103, 17, 78, 56, 162, 212, ],
[0, 119, 238, 153, 193, 182, 47, 88, 159, 232, 113, 6, 94, 41, 176, 199, 35, 84, 205, 186, 226, 149, 12, 123, 188, 203, 82, 37, 125, 10, 147, 228, 70, 49, 168, 223, 135, 240, 105, 30, 217, 174, 55, 64, 24, 111, 246, 129, 101, 18, 139, 252, 164, 211, 74, 61, 250, 141, 20, 99, 59, 76, 213, 162, 140, 251, 98, 21, 77, 58, 163, 212, 19, 100, 253, 138, 210, 165, 60, 75, 175, 216, 65, 54, 110, 25, 128, 247, 48, 71, 222, 169, 241, 134, 31, 104, 202, 189, 36, 83, 11, 124, 229, 146, 85, 34, 187, 204, 148, 227, 122, 13, 233, 158, 7, 112, 40, 95, 198, 177, 118, 1, 152, 239, 183, 192, 89, 46, 5, 114, 235, 156, 196, 179, 42, 93, 154, 237, 116, 3, 91, 44, 181, 194, 38, 81, 200, 191, 231, 144, 9, 126, 185, 206, 87, 32, 120, 15, 150, 225, 67, 52, 173, 218, 130, 245, 108, 27, 220, 171, 50, 69, 29, 106, 243, 132, 96, 23, 142, 249, 161, 214, 79, 56, 255, 136, 17, 102, 62, 73, 208, 167, 137, 254, 103, 16, 72, 63, 166, 209, 22, 97, 248, 143, 215, 160, 57, 78, 170, 221, 68, 51, 107, 28, 133, 242, 53, 66, 219, 172, 244, 131, 26, 109, 207, 184, 33, 86, 14, 121, 224, 151, 80, 39, 190, 201, 145, 230, 127, 8, 236, 155, 2, 117, 45, 90, 195, 180, 115, 4, 157, 234, 178, 197, 92, 43, ],
[0, 120, 240, 136, 253, 133, 13, 117, 231, 159, 23, 111, 26, 98, 234, 146, 211, 171, 35, 91, 46, 86, 222, 166, 52, 76, 196, 188, 201, 177, 57, 65, 187, 195, 75, 51, 70, 62, 182, 206, 92, 36, 172, 212, 161, 217, 81, 41, 104, 16, 152, 224, 149, 237, 101, 29, 143, 247, 127, 7, 114, 10, 130, 250, 107, 19, 155, 227, 150, 238, 102, 30, 140, 244, 124, 4, 113, 9, 129, 249, 184, 192, 72, 48, 69, 61, 181, 205, 95, 39, 175, 215, 162, 218, 82, 42, 208, 168, 32, 88, 45, 85, 221, 165, 55, 79, 199, 191, 202, 178, 58, 66, 3, 123, 243, 139, 254, 134, 14, 118, 228, 156, 20, 108, 25, 97, 233, 145, 214, 174, 38, 94, 43, 83, 219, 163, 49, 73, 193, 185, 204, 180, 60, 68, 5, 125, 245, 141, 248, 128, 8, 112, 226, 154, 18, 106, 31, 103, 239, 151, 109, 21, 157, 229, 144, 232, 96, 24, 138, 242, 122, 2, 119, 15, 135, 255, 190, 198, 78, 54, 67, 59, 179, 203, 89, 33, 169, 209, 164, 220, 84, 44, 189, 197, 77, 53, 64, 56, 176, 200, 90, 34, 170, 210, 167, 223, 87, 47, 110, 22, 158, 230, 147, 235, 99, 27, 137, 241, 121, 1, 116, 12, 132, 252, 6, 126, 246, 142, 251, 131, 11, 115, 225, 153, 17, 105, 28, 100, 236, 148, 213, 173, 37, 93, 40, 80, 216, 160, 50, 74, 194, 186, 207, 183, 63, 71, ],
[0, 121, 242, 139, 249, 128, 11, 114, 239, 150, 29, 100, 22, 111, 228, 157, 195, 186, 49, 72, 58, 67, 200, 177, 44, 85, 222, 167, 213, 172, 39, 94, 155, 226, 105, 16, 98, 27, 144, 233, 116, 13, 134, 255, 141, 244, 127, 6, 88, 33, 170, 211, 161, 216, 83, 42, 183, 206, 69, 60, 78, 55, 188, 197, 43, 82, 217, 160, 210, 171, 32, 89, 196, 189, 54, 79, 61, 68, 207, 182, 232, 145, 26, 99, 17, 104, 227, 154, 7, 126, 245, 140, 254, 135, 12, 117, 176, 201, 66, 59, 73, 48, 187, 194, 95, 38, 173, 212, 166, 223, 84, 45, 115, 10, 129, 248, 138, 243, 120, 1, 156, 229, 110, 23, 101, 28, 151, 238, 86, 47, 164, 221, 175, 214, 93, 36, 185, 192, 75, 50, 64, 57, 178, 203, 149, 236, 103, 30, 108, 21, 158, 231, 122, 3, 136, 241, 131, 250, 113, 8, 205, 180, 63, 70, 52, 77, 198, 191, 34, 91, 208, 169, 219, 162, 41, 80, 14, 119, 252, 133, 247, 142, 5, 124, 225, 152, 19, 106, 24, 97, 234, 147, 125, 4, 143, 246, 132, 253, 118, 15, 146, 235, 96, 25, 107, 18, 153, 224, 190, 199, 76, 53, 71, 62, 181, 204, 81, 40, 163, 218, 168, 209, 90, 35, 230, 159, 20, 109, 31, 102, 237, 148, 9, 112, 251, 130, 240, 137, 2, 123, 37, 92, 215, 174, 220, 165, 46, 87, 202, 179, 56, 65, 51, 74, 193, 184, ],
[0, 122, 244, 142, 245, 143, 1, 123, 247, 141, 3, 121, 2, 120, 246, 140, 243, 137, 7, 125, 6, 124, 242, 136, 4, 126, 240, 138, 241, 139, 5, 127, 251, 129, 15, 117, 14, 116, 250, 128, 12, 118, 248, 130, 249, 131, 13, 119, 8, 114, 252, 134, 253, 135, 9, 115, 255, 133, 11, 113, 10, 112, 254, 132, 235, 145, 31, 101, 30, 100, 234, 144, 28, 102, 232, 146, 233, 147, 29, 103, 24, 98, 236, 150, 237, 151, 25, 99, 239, 149, 27, 97, 26, 96, 238, 148, 16, 106, 228, 158, 229, 159, 17, 107, 231, 157, 19, 105, 18, 104, 230, 156, 227, 153, 23, 109, 22, 108, 226, 152, 20, 110, 224, 154, 225, 155, 21, 111, 203, 177, 63, 69, 62, 68, 202, 176, 60, 70, 200, 178, 201, 179, 61, 71, 56, 66, 204, 182, 205, 183, 57, 67, 207, 181, 59, 65, 58, 64, 206, 180, 48, 74, 196, 190, 197, 191, 49, 75, 199, 189, 51, 73, 50, 72, 198, 188, 195, 185, 55, 77, 54, 76, 194, 184, 52, 78, 192, 186, 193, 187, 53, 79, 32, 90, 212, 174, 213, 175, 33, 91, 215, 173, 35, 89, 34, 88, 214, 172, 211, 169, 39, 93, 38, 92, 210, 168, 36, 94, 208, 170, 209, 171, 37, 95, 219, 161, 47, 85, 46, 84, 218, 160, 44, 86, 216, 162, 217, 163, 45, 87, 40, 82, 220, 166, 221, 167, 41, 83, 223, 165, 43, 81, 42, 80, 222, 164, ],
[0, 123, 246, 141, 241, 138, 7, 124, 255, 132, 9, 114, 14, 117, 248, 131, 227, 152, 21, 110, 18, 105, 228, 159, 28, 103, 234, 145, 237, 150, 27, 96, 219, 160, 45, 86, 42, 81, 220, 167, 36, 95, 210, 169, 213, 174, 35, 88, 56, 67, 206, 181, 201, 178, 63, 68, 199, 188, 49, 74, 54, 77, 192, 187, 171, 208, 93, 38, 90, 33, 172, 215, 84, 47, 162, 217, 165, 222, 83, 40, 72, 51, 190, 197, 185, 194, 79, 52, 183, 204, 65, 58, 70, 61, 176, 203, 112, 11, 134, 253, 129, 250, 119, 12, 143, 244, 121, 2, 126, 5, 136, 243, 147, 232, 101, 30, 98, 25, 148, 239, 108, 23, 154, 225, 157, 230, 107, 16, 75, 48, 189, 198, 186, 193, 76, 55, 180, 207, 66, 57, 69, 62, 179, 200, 168, 211, 94, 37, 89, 34, 175, 212, 87, 44, 161, 218, 166, 221, 80, 43, 144, 235, 102, 29, 97, 26, 151, 236, 111, 20, 153, 226, 158, 229, 104, 19, 115, 8, 133, 254, 130, 249, 116, 15, 140, 247, 122, 1, 125, 6, 139, 240, 224, 155, 22, 109, 17, 106, 231, 156, 31, 100, 233, 146, 238, 149, 24, 99, 3, 120, 245, 142, 242, 137, 4, 127, 252, 135, 10, 113, 13, 118, 251, 128, 59, 64, 205, 182, 202, 177, 60, 71, 196, 191, 50, 73, 53, 78, 195, 184, 216, 163, 46, 85, 41, 82, 223, 164, 39, 92, 209, 170, 214, 173, 32, 91, ],
[0, 124, 248, 132, 237, 145, 21, 105, 199, 187, 63, 67, 42, 86, 210, 174, 147, 239, 107, 23, 126, 2, 134, 250, 84, 40, 172, 208, 185, 197, 65, 61, 59, 71, 195, 191, 214, 170, 46, 82, 252, 128, 4, 120, 17, 109, 233, 149, 168, 212, 80, 44, 69, 57, 189, 193, 111, 19, 151, 235, 130, 254, 122, 6, 118, 10, 142, 242, 155, 231, 99, 31, 177, 205, 73, 53, 92, 32, 164, 216, 229, 153, 29, 97, 8, 116, 240, 140, 34, 94, 218, 166, 207, 179, 55, 75, 77, 49, 181, 201, 160, 220, 88, 36, 138, 246, 114, 14, 103, 27, 159, 227, 222, 162, 38, 90, 51, 79, 203, 183, 25, 101, 225, 157, 244, 136, 12, 112, 236, 144, 20, 104, 1, 125, 249, 133, 43, 87, 211, 175, 198, 186, 62, 66, 127, 3, 135, 251, 146, 238, 106, 22, 184, 196, 64, 60, 85, 41, 173, 209, 215, 171, 47, 83, 58, 70, 194, 190, 16, 108, 232, 148, 253, 129, 5, 121, 68, 56, 188, 192, 169, 213, 81, 45, 131, 255, 123, 7, 110, 18, 150, 234, 154, 230, 98, 30, 119, 11, 143, 243, 93, 33, 165, 217, 176, 204, 72, 52, 9, 117, 241, 141, 228, 152, 28, 96, 206, 178, 54, 74, 35, 95, 219, 167, 161, 221, 89, 37, 76, 48, 180, 200, 102, 26, 158, 226, 139, 247, 115, 15, 50, 78, 202, 182, 223, 163, 39, 91, 245, 137, 13, 113, 24, 100, 224, 156, ],
[0, 125, 250, 135, 233, 148, 19, 110, 207, 178, 53, 72, 38, 91, 220, 161, 131, 254, 121, 4, 106, 23, 144, 237, 76, 49, 182, 203, 165, 216, 95, 34, 27, 102, 225, 156, 242, 143, 8, 117, 212, 169, 46, 83, 61, 64, 199, 186, 152, 229, 98, 31, 113, 12, 139, 246, 87, 42, 173, 208, 190, 195, 68, 57, 54, 75, 204, 177, 223, 162, 37, 88, 249, 132, 3, 126, 16, 109, 234, 151, 181, 200, 79, 50, 92, 33, 166, 219, 122, 7, 128, 253, 147, 238, 105, 20, 45, 80, 215, 170, 196, 185, 62, 67, 226, 159, 24, 101, 11, 118, 241, 140, 174, 211, 84, 41, 71, 58, 189, 192, 97, 28, 155, 230, 136, 245, 114, 15, 108, 17, 150, 235, 133, 248, 127, 2, 163, 222, 89, 36, 74, 55, 176, 205, 239, 146, 21, 104, 6, 123, 252, 129, 32, 93, 218, 167, 201, 180, 51, 78, 119, 10, 141, 240, 158, 227, 100, 25, 184, 197, 66, 63, 81, 44, 171, 214, 244, 137, 14, 115, 29, 96, 231, 154, 59, 70, 193, 188, 210, 175, 40, 85, 90, 39, 160, 221, 179, 206, 73, 52, 149, 232, 111, 18, 124, 1, 134, 251, 217, 164, 35, 94, 48, 77, 202, 183, 22, 107, 236, 145, 255, 130, 5, 120, 65, 60, 187, 198, 168, 213, 82, 47, 142, 243, 116, 9, 103, 26, 157, 224, 194, 191, 56, 69, 43, 86, 209, 172, 13, 112, 247, 138, 228, 153, 30, 99, ],
[0, 126, 252, 130, 229, 155, 25, 103, 215, 169, 43, 85, 50, 76, 206, 176, 179, 205, 79, 49, 86, 40, 170, 212, 100, 26, 152, 230, 129, 255, 125, 3, 123, 5, 135, 249, 158, 224, 98, 28, 172, 210, 80, 46, 73, 55, 181, 203, 200, 182, 52, 74, 45, 83, 209, 175, 31, 97, 227, 157, 250, 132, 6, 120, 246, 136, 10, 116, 19, 109, 239, 145, 33, 95, 221, 163, 196, 186, 56, 70, 69, 59, 185, 199, 160, 222, 92, 34, 146, 236, 110, 16, 119, 9, 139, 245, 141, 243, 113, 15, 104, 22, 148, 234, 90, 36, 166, 216, 191, 193, 67, 61, 62, 64, 194, 188, 219, 165, 39, 89, 233, 151, 21, 107, 12, 114, 240, 142, 241, 143, 13, 115, 20, 106, 232, 150, 38, 88, 218, 164, 195, 189, 63, 65, 66, 60, 190, 192, 167, 217, 91, 37, 149, 235, 105, 23, 112, 14, 140, 242, 138, 244, 118, 8, 111, 17, 147, 237, 93, 35, 161, 223, 184, 198, 68, 58, 57, 71, 197, 187, 220, 162, 32, 94, 238, 144, 18, 108, 11, 117, 247, 137, 7, 121, 251, 133, 226, 156, 30, 96, 208, 174, 44, 82, 53, 75, 201, 183, 180, 202, 72, 54, 81, 47, 173, 211, 99, 29, 159, 225, 134, 248, 122, 4, 124, 2, 128, 254, 153, 231, 101, 27, 171, 213, 87, 41, 78, 48, 178, 204, 207, 177, 51, 77, 42, 84, 214, 168, 24, 102, 228, 154, 253, 131, 1, 127, ],
[0, 127, 254, 129, 225, 158, 31, 96, 223, 160, 33, 94, 62, 65, 192, 191, 163, 220, 93, 34, 66, 61, 188, 195, 124, 3, 130, 253, 157, 226, 99, 28, 91, 36, 165, 218, 186, 197, 68, 59, 132, 251, 122, 5, 101, 26, 155, 228, 248, 135, 6, 121, 25, 102, 231, 152, 39, 88, 217, 166, 198, 185, 56, 71, 182, 201, 72, 55, 87, 40, 169, 214, 105, 22, 151, 232, 136, 247, 118, 9, 21, 106, 235, 148, 244, 139, 10, 117, 202, 181, 52, 75, 43, 84, 213, 170, 237, 146, 19, 108, 12, 115, 242, 141, 50, 77, 204, 179, 211, 172, 45, 82, 78, 49, 176, 207, 175, 208, 81, 46, 145, 238, 111, 16, 112, 15, 142, 241, 113, 14, 143, 240, 144, 239, 110, 17, 174, 209, 80, 47, 79, 48, 177, 206, 210, 173, 44, 83, 51, 76, 205, 178, 13, 114, 243, 140, 236, 147, 18, 109, 42, 85, 212, 171, 203, 180, 53, 74, 245, 138, 11, 116, 20, 107, 234, 149, 137, 246, 119, 8, 104, 23, 150, 233, 86, 41, 168, 215, 183, 200, 73, 54, 199, 184, 57, 70, 38, 89, 216, 167, 24, 103, 230, 153, 249, 134, 7, 120, 100, 27, 154, 229, 133, 250, 123, 4, 187, 196, 69, 58, 90, 37, 164, 219, 156, 227, 98, 29, 125, 2, 131, 252, 67, 60, 189, 194, 162, 221, 92, 35, 63, 64, 193, 190, 222, 161, 32, 95, 224, 159, 30, 97, 1, 126, 255, 128, ],
[0, 128, 29, 157, 58, 186, 39, 167, 116, 244, 105, 233, 78, 206, 83, 211, 232, 104, 245, 117, 210, 82, 207, 79, 156, 28, 129, 1, 166, 38, 187, 59, 205, 77, 208, 80, 247, 119, 234, 106, 185, 57, 164, 36, 131, 3, 158, 30, 37, 165, 56, 184, 31, 159, 2, 130, 81, 209, 76, 204, 107, 235, 118, 246, 135, 7, 154, 26, 189, 61, 160, 32, 243, 115, 238, 110, 201, 73, 212, 84, 111, 239, 114, 242, 85, 213, 72, 200, 27, 155, 6, 134, 33, 161, 60, 188, 74, 202, 87, 215, 112, 240, 109, 237, 62, 190, 35, 163, 4, 132, 25, 153, 162, 34, 191, 63, 152, 24, 133, 5, 214, 86, 203, 75, 236, 108, 241, 113, 19, 147, 14, 142, 41, 169, 52, 180, 103, 231, 122, 250, 93, 221, 64, 192, 251, 123, 230, 102, 193, 65, 220, 92, 143, 15, 146, 18, 181, 53, 168, 40, 222, 94, 195, 67, 228, 100, 249, 121, 170, 42, 183, 55, 144, 16, 141, 13, 54, 182, 43, 171, 12, 140, 17, 145, 66, 194, 95, 223, 120, 248, 101, 229, 148, 20, 137, 9, 174, 46, 179, 51, 224, 96, 253, 125, 218, 90, 199, 71, 124, 252, 97, 225, 70, 198, 91, 219, 8, 136, 21, 149, 50, 178, 47, 175, 89, 217, 68, 196, 99, 227, 126, 254, 45, 173, 48, 176, 23, 151, 10, 138, 177, 49, 172, 44, 139, 11, 150, 22, 197, 69, 216, 88, 255, 127, 226, 98, ],
[0, 129, 31, 158, 62, 191, 33, 160, 124, 253, 99, 226, 66, 195, 93, 220, 248, 121, 231, 102, 198, 71, 217, 88, 132, 5, 155, 26, 186, 59, 165, 36, 237, 108, 242, 115, 211, 82, 204, 77, 145, 16, 142, 15, 175, 46, 176, 49, 21, 148, 10, 139, 43, 170, 52, 181, 105, 232, 118, 247, 87, 214, 72, 201, 199, 70, 216, 89, 249, 120, 230, 103, 187, 58, 164, 37, 133, 4, 154, 27, 63, 190, 32, 161, 1, 128, 30, 159, 67, 194, 92, 221, 125, 252, 98, 227, 42, 171, 53, 180, 20, 149, 11, 138, 86, 215, 73, 200, 104, 233, 119, 246, 210, 83, 205, 76, 236, 109, 243, 114, 174, 47, 177, 48, 144, 17, 143, 14, 147, 18, 140, 13, 173, 44, 178, 51, 239, 110, 240, 113, 209, 80, 206, 79, 107, 234, 116, 245, 85, 212, 74, 203, 23, 150, 8, 137, 41, 168, 54, 183, 126, 255, 97, 224, 64, 193, 95, 222, 2, 131, 29, 156, 60, 189, 35, 162, 134, 7, 153, 24, 184, 57, 167, 38, 250, 123, 229, 100, 196, 69, 219, 90, 84, 213, 75, 202, 106, 235, 117, 244, 40, 169, 55, 182, 22, 151, 9, 136, 172, 45, 179, 50, 146, 19, 141, 12, 208, 81, 207, 78, 238, 111, 241, 112, 185, 56, 166, 39, 135, 6, 152, 25, 197, 68, 218, 91, 251, 122, 228, 101, 65, 192, 94, 223, 127, 254, 96, 225, 61, 188, 34, 163, 3, 130, 28, 157, ],
[0, 130, 25, 155, 50, 176, 43, 169, 100, 230, 125, 255, 86, 212, 79, 205, 200, 74, 209, 83, 250, 120, 227, 97, 172, 46, 181, 55, 158, 28, 135, 5, 141, 15, 148, 22, 191, 61, 166, 36, 233, 107, 240, 114, 219, 89, 194, 64, 69, 199, 92, 222, 119, 245, 110, 236, 33, 163, 56, 186, 19, 145, 10, 136, 7, 133, 30, 156, 53, 183, 44, 174, 99, 225, 122, 248, 81, 211, 72, 202, 207, 77, 214, 84, 253, 127, 228, 102, 171, 41, 178, 48, 153, 27, 128, 2, 138, 8, 147, 17, 184, 58, 161, 35, 238, 108, 247, 117, 220, 94, 197, 71, 66, 192, 91, 217, 112, 242, 105, 235, 38, 164, 63, 189, 20, 150, 13, 143, 14, 140, 23, 149, 60, 190, 37, 167, 106, 232, 115, 241, 88, 218, 65, 195, 198, 68, 223, 93, 244, 118, 237, 111, 162, 32, 187, 57, 144, 18, 137, 11, 131, 1, 154, 24, 177, 51, 168, 42, 231, 101, 254, 124, 213, 87, 204, 78, 75, 201, 82, 208, 121, 251, 96, 226, 47, 173, 54, 180, 29, 159, 4, 134, 9, 139, 16, 146, 59, 185, 34, 160, 109, 239, 116, 246, 95, 221, 70, 196, 193, 67, 216, 90, 243, 113, 234, 104, 165, 39, 188, 62, 151, 21, 142, 12, 132, 6, 157, 31, 182, 52, 175, 45, 224, 98, 249, 123, 210, 80, 203, 73, 76, 206, 85, 215, 126, 252, 103, 229, 40, 170, 49, 179, 26, 152, 3, 129, ],
[0, 131, 27, 152, 54, 181, 45, 174, 108, 239, 119, 244, 90, 217, 65, 194, 216, 91, 195, 64, 238, 109, 245, 118, 180, 55, 175, 44, 130, 1, 153, 26, 173, 46, 182, 53, 155, 24, 128, 3, 193, 66, 218, 89, 247, 116, 236, 111, 117, 246, 110, 237, 67, 192, 88, 219, 25, 154, 2, 129, 47, 172, 52, 183, 71, 196, 92, 223, 113, 242, 106, 233, 43, 168, 48, 179, 29, 158, 6, 133, 159, 28, 132, 7, 169, 42, 178, 49, 243, 112, 232, 107, 197, 70, 222, 93, 234, 105, 241, 114, 220, 95, 199, 68, 134, 5, 157, 30, 176, 51, 171, 40, 50, 177, 41, 170, 4, 135, 31, 156, 94, 221, 69, 198, 104, 235, 115, 240, 142, 13, 149, 22, 184, 59, 163, 32, 226, 97, 249, 122, 212, 87, 207, 76, 86, 213, 77, 206, 96, 227, 123, 248, 58, 185, 33, 162, 12, 143, 23, 148, 35, 160, 56, 187, 21, 150, 14, 141, 79, 204, 84, 215, 121, 250, 98, 225, 251, 120, 224, 99, 205, 78, 214, 85, 151, 20, 140, 15, 161, 34, 186, 57, 201, 74, 210, 81, 255, 124, 228, 103, 165, 38, 190, 61, 147, 16, 136, 11, 17, 146, 10, 137, 39, 164, 60, 191, 125, 254, 102, 229, 75, 200, 80, 211, 100, 231, 127, 252, 82, 209, 73, 202, 8, 139, 19, 144, 62, 189, 37, 166, 188, 63, 167, 36, 138, 9, 145, 18, 208, 83, 203, 72, 230, 101, 253, 126, ],
[0, 132, 21, 145, 42, 174, 63, 187, 84, 208, 65, 197, 126, 250, 107, 239, 168, 44, 189, 57, 130, 6, 151, 19, 252, 120, 233, 109, 214, 82, 195, 71, 77, 201, 88, 220, 103, 227, 114, 246, 25, 157, 12, 136, 51, 183, 38, 162, 229, 97, 240, 116, 207, 75, 218, 94, 177, 53, 164, 32, 155, 31, 142, 10, 154, 30, 143, 11, 176, 52, 165, 33, 206, 74, 219, 95, 228, 96, 241, 117, 50, 182, 39, 163, 24, 156, 13, 137, 102, 226, 115, 247, 76, 200, 89, 221, 215, 83, 194, 70, 253, 121, 232, 108, 131, 7, 150, 18, 169, 45, 188, 56, 127, 251, 106, 238, 85, 209, 64, 196, 43, 175, 62, 186, 1, 133, 20, 144, 41, 173, 60, 184, 3, 135, 22, 146, 125, 249, 104, 236, 87, 211, 66, 198, 129, 5, 148, 16, 171, 47, 190, 58, 213, 81, 192, 68, 255, 123, 234, 110, 100, 224, 113, 245, 78, 202, 91, 223, 48, 180, 37, 161, 26, 158, 15, 139, 204, 72, 217, 93, 230, 98, 243, 119, 152, 28, 141, 9, 178, 54, 167, 35, 179, 55, 166, 34, 153, 29, 140, 8, 231, 99, 242, 118, 205, 73, 216, 92, 27, 159, 14, 138, 49, 181, 36, 160, 79, 203, 90, 222, 101, 225, 112, 244, 254, 122, 235, 111, 212, 80, 193, 69, 170, 46, 191, 59, 128, 4, 149, 17, 86, 210, 67, 199, 124, 248, 105, 237, 2, 134, 23, 147, 40, 172, 61, 185, ],
[0, 133, 23, 146, 46, 171, 57, 188, 92, 217, 75, 206, 114, 247, 101, 224, 184, 61, 175, 42, 150, 19, 129, 4, 228, 97, 243, 118, 202, 79, 221, 88, 109, 232, 122, 255, 67, 198, 84, 209, 49, 180, 38, 163, 31, 154, 8, 141, 213, 80, 194, 71, 251, 126, 236, 105, 137, 12, 158, 27, 167, 34, 176, 53, 218, 95, 205, 72, 244, 113, 227, 102, 134, 3, 145, 20, 168, 45, 191, 58, 98, 231, 117, 240, 76, 201, 91, 222, 62, 187, 41, 172, 16, 149, 7, 130, 183, 50, 160, 37, 153, 28, 142, 11, 235, 110, 252, 121, 197, 64, 210, 87, 15, 138, 24, 157, 33, 164, 54, 179, 83, 214, 68, 193, 125, 248, 106, 239, 169, 44, 190, 59, 135, 2, 144, 21, 245, 112, 226, 103, 219, 94, 204, 73, 17, 148, 6, 131, 63, 186, 40, 173, 77, 200, 90, 223, 99, 230, 116, 241, 196, 65, 211, 86, 234, 111, 253, 120, 152, 29, 143, 10, 182, 51, 161, 36, 124, 249, 107, 238, 82, 215, 69, 192, 32, 165, 55, 178, 14, 139, 25, 156, 115, 246, 100, 225, 93, 216, 74, 207, 47, 170, 56, 189, 1, 132, 22, 147, 203, 78, 220, 89, 229, 96, 242, 119, 151, 18, 128, 5, 185, 60, 174, 43, 30, 155, 9, 140, 48, 181, 39, 162, 66, 199, 85, 208, 108, 233, 123, 254, 166, 35, 177, 52, 136, 13, 159, 26, 250, 127, 237, 104, 212, 81, 195, 70, ],
[0, 134, 17, 151, 34, 164, 51, 181, 68, 194, 85, 211, 102, 224, 119, 241, 136, 14, 153, 31, 170, 44, 187, 61, 204, 74, 221, 91, 238, 104, 255, 121, 13, 139, 28, 154, 47, 169, 62, 184, 73, 207, 88, 222, 107, 237, 122, 252, 133, 3, 148, 18, 167, 33, 182, 48, 193, 71, 208, 86, 227, 101, 242, 116, 26, 156, 11, 141, 56, 190, 41, 175, 94, 216, 79, 201, 124, 250, 109, 235, 146, 20, 131, 5, 176, 54, 161, 39, 214, 80, 199, 65, 244, 114, 229, 99, 23, 145, 6, 128, 53, 179, 36, 162, 83, 213, 66, 196, 113, 247, 96, 230, 159, 25, 142, 8, 189, 59, 172, 42, 219, 93, 202, 76, 249, 127, 232, 110, 52, 178, 37, 163, 22, 144, 7, 129, 112, 246, 97, 231, 82, 212, 67, 197, 188, 58, 173, 43, 158, 24, 143, 9, 248, 126, 233, 111, 218, 92, 203, 77, 57, 191, 40, 174, 27, 157, 10, 140, 125, 251, 108, 234, 95, 217, 78, 200, 177, 55, 160, 38, 147, 21, 130, 4, 245, 115, 228, 98, 215, 81, 198, 64, 46, 168, 63, 185, 12, 138, 29, 155, 106, 236, 123, 253, 72, 206, 89, 223, 166, 32, 183, 49, 132, 2, 149, 19, 226, 100, 243, 117, 192, 70, 209, 87, 35, 165, 50, 180, 1, 135, 16, 150, 103, 225, 118, 240, 69, 195, 84, 210, 171, 45, 186, 60, 137, 15, 152, 30, 239, 105, 254, 120, 205, 75, 220, 90, ],
[0, 135, 19, 148, 38, 161, 53, 178, 76, 203, 95, 216, 106, 237, 121, 254, 152, 31, 139, 12, 190, 57, 173, 42, 212, 83, 199, 64, 242, 117, 225, 102, 45, 170, 62, 185, 11, 140, 24, 159, 97, 230, 114, 245, 71, 192, 84, 211, 181, 50, 166, 33, 147, 20, 128, 7, 249, 126, 234, 109, 223, 88, 204, 75, 90, 221, 73, 206, 124, 251, 111, 232, 22, 145, 5, 130, 48, 183, 35, 164, 194, 69, 209, 86, 228, 99, 247, 112, 142, 9, 157, 26, 168, 47, 187, 60, 119, 240, 100, 227, 81, 214, 66, 197, 59, 188, 40, 175, 29, 154, 14, 137, 239, 104, 252, 123, 201, 78, 218, 93, 163, 36, 176, 55, 133, 2, 150, 17, 180, 51, 167, 32, 146, 21, 129, 6, 248, 127, 235, 108, 222, 89, 205, 74, 44, 171, 63, 184, 10, 141, 25, 158, 96, 231, 115, 244, 70, 193, 85, 210, 153, 30, 138, 13, 191, 56, 172, 43, 213, 82, 198, 65, 243, 116, 224, 103, 1, 134, 18, 149, 39, 160, 52, 179, 77, 202, 94, 217, 107, 236, 120, 255, 238, 105, 253, 122, 200, 79, 219, 92, 162, 37, 177, 54, 132, 3, 151, 16, 118, 241, 101, 226, 80, 215, 67, 196, 58, 189, 41, 174, 28, 155, 15, 136, 195, 68, 208, 87, 229, 98, 246, 113, 143, 8, 156, 27, 169, 46, 186, 61, 91, 220, 72, 207, 125, 250, 110, 233, 23, 144, 4, 131, 49, 182, 34, 165, ],
[0, 136, 13, 133, 26, 146, 23, 159, 52, 188, 57, 177, 46, 166, 35, 171, 104, 224, 101, 237, 114, 250, 127, 247, 92, 212, 81, 217, 70, 206, 75, 195, 208, 88, 221, 85, 202, 66, 199, 79, 228, 108, 233, 97, 254, 118, 243, 123, 184, 48, 181, 61, 162, 42, 175, 39, 140, 4, 129, 9, 150, 30, 155, 19, 189, 53, 176, 56, 167, 47, 170, 34, 137, 1, 132, 12, 147, 27, 158, 22, 213, 93, 216, 80, 207, 71, 194, 74, 225, 105, 236, 100, 251, 115, 246, 126, 109, 229, 96, 232, 119, 255, 122, 242, 89, 209, 84, 220, 67, 203, 78, 198, 5, 141, 8, 128, 31, 151, 18, 154, 49, 185, 60, 180, 43, 163, 38, 174, 103, 239, 106, 226, 125, 245, 112, 248, 83, 219, 94, 214, 73, 193, 68, 204, 15, 135, 2, 138, 21, 157, 24, 144, 59, 179, 54, 190, 33, 169, 44, 164, 183, 63, 186, 50, 173, 37, 160, 40, 131, 11, 142, 6, 153, 17, 148, 28, 223, 87, 210, 90, 197, 77, 200, 64, 235, 99, 230, 110, 241, 121, 252, 116, 218, 82, 215, 95, 192, 72, 205, 69, 238, 102, 227, 107, 244, 124, 249, 113, 178, 58, 191, 55, 168, 32, 165, 45, 134, 14, 139, 3, 156, 20, 145, 25, 10, 130, 7, 143, 16, 152, 29, 149, 62, 182, 51, 187, 36, 172, 41, 161, 98, 234, 111, 231, 120, 240, 117, 253, 86, 222, 91, 211, 76, 196, 65, 201, ],
[0, 137, 15, 134, 30, 151, 17, 152, 60, 181, 51, 186, 34, 171, 45, 164, 120, 241, 119, 254, 102, 239, 105, 224, 68, 205, 75, 194, 90, 211, 85, 220, 240, 121, 255, 118, 238, 103, 225, 104, 204, 69, 195, 74, 210, 91, 221, 84, 136, 1, 135, 14, 150, 31, 153, 16, 180, 61, 187, 50, 170, 35, 165, 44, 253, 116, 242, 123, 227, 106, 236, 101, 193, 72, 206, 71, 223, 86, 208, 89, 133, 12, 138, 3, 155, 18, 148, 29, 185, 48, 182, 63, 167, 46, 168, 33, 13, 132, 2, 139, 19, 154, 28, 149, 49, 184, 62, 183, 47, 166, 32, 169, 117, 252, 122, 243, 107, 226, 100, 237, 73, 192, 70, 207, 87, 222, 88, 209, 231, 110, 232, 97, 249, 112, 246, 127, 219, 82, 212, 93, 197, 76, 202, 67, 159, 22, 144, 25, 129, 8, 142, 7, 163, 42, 172, 37, 189, 52, 178, 59, 23, 158, 24, 145, 9, 128, 6, 143, 43, 162, 36, 173, 53, 188, 58, 179, 111, 230, 96, 233, 113, 248, 126, 247, 83, 218, 92, 213, 77, 196, 66, 203, 26, 147, 21, 156, 4, 141, 11, 130, 38, 175, 41, 160, 56, 177, 55, 190, 98, 235, 109, 228, 124, 245, 115, 250, 94, 215, 81, 216, 64, 201, 79, 198, 234, 99, 229, 108, 244, 125, 251, 114, 214, 95, 217, 80, 200, 65, 199, 78, 146, 27, 157, 20, 140, 5, 131, 10, 174, 39, 161, 40, 176, 57, 191, 54, ],
[0, 138, 9, 131, 18, 152, 27, 145, 36, 174, 45, 167, 54, 188, 63, 181, 72, 194, 65, 203, 90, 208, 83, 217, 108, 230, 101, 239, 126, 244, 119, 253, 144, 26, 153, 19, 130, 8, 139, 1, 180, 62, 189, 55, 166, 44, 175, 37, 216, 82, 209, 91, 202, 64, 195, 73, 252, 118, 245, 127, 238, 100, 231, 109, 61, 183, 52, 190, 47, 165, 38, 172, 25, 147, 16, 154, 11, 129, 2, 136, 117, 255, 124, 246, 103, 237, 110, 228, 81, 219, 88, 210, 67, 201, 74, 192, 173, 39, 164, 46, 191, 53, 182, 60, 137, 3, 128, 10, 155, 17, 146, 24, 229, 111, 236, 102, 247, 125, 254, 116, 193, 75, 200, 66, 211, 89, 218, 80, 122, 240, 115, 249, 104, 226, 97, 235, 94, 212, 87, 221, 76, 198, 69, 207, 50, 184, 59, 177, 32, 170, 41, 163, 22, 156, 31, 149, 4, 142, 13, 135, 234, 96, 227, 105, 248, 114, 241, 123, 206, 68, 199, 77, 220, 86, 213, 95, 162, 40, 171, 33, 176, 58, 185, 51, 134, 12, 143, 5, 148, 30, 157, 23, 71, 205, 78, 196, 85, 223, 92, 214, 99, 233, 106, 224, 113, 251, 120, 242, 15, 133, 6, 140, 29, 151, 20, 158, 43, 161, 34, 168, 57, 179, 48, 186, 215, 93, 222, 84, 197, 79, 204, 70, 243, 121, 250, 112, 225, 107, 232, 98, 159, 21, 150, 28, 141, 7, 132, 14, 187, 49, 178, 56, 169, 35, 160, 42, ],
[0, 139, 11, 128, 22, 157, 29, 150, 44, 167, 39, 172, 58, 177, 49, 186, 88, 211, 83, 216, 78, 197, 69, 206, 116, 255, 127, 244, 98, 233, 105, 226, 176, 59, 187, 48, 166, 45, 173, 38, 156, 23, 151, 28, 138, 1, 129, 10, 232, 99, 227, 104, 254, 117, 245, 126, 196, 79, 207, 68, 210, 89, 217, 82, 125, 246, 118, 253, 107, 224, 96, 235, 81, 218, 90, 209, 71, 204, 76, 199, 37, 174, 46, 165, 51, 184, 56, 179, 9, 130, 2, 137, 31, 148, 20, 159, 205, 70, 198, 77, 219, 80, 208, 91, 225, 106, 234, 97, 247, 124, 252, 119, 149, 30, 158, 21, 131, 8, 136, 3, 185, 50, 178, 57, 175, 36, 164, 47, 250, 113, 241, 122, 236, 103, 231, 108, 214, 93, 221, 86, 192, 75, 203, 64, 162, 41, 169, 34, 180, 63, 191, 52, 142, 5, 133, 14, 152, 19, 147, 24, 74, 193, 65, 202, 92, 215, 87, 220, 102, 237, 109, 230, 112, 251, 123, 240, 18, 153, 25, 146, 4, 143, 15, 132, 62, 181, 53, 190, 40, 163, 35, 168, 135, 12, 140, 7, 145, 26, 154, 17, 171, 32, 160, 43, 189, 54, 182, 61, 223, 84, 212, 95, 201, 66, 194, 73, 243, 120, 248, 115, 229, 110, 238, 101, 55, 188, 60, 183, 33, 170, 42, 161, 27, 144, 16, 155, 13, 134, 6, 141, 111, 228, 100, 239, 121, 242, 114, 249, 67, 200, 72, 195, 85, 222, 94, 213, ],
[0, 140, 5, 137, 10, 134, 15, 131, 20, 152, 17, 157, 30, 146, 27, 151, 40, 164, 45, 161, 34, 174, 39, 171, 60, 176, 57, 181, 54, 186, 51, 191, 80, 220, 85, 217, 90, 214, 95, 211, 68, 200, 65, 205, 78, 194, 75, 199, 120, 244, 125, 241, 114, 254, 119, 251, 108, 224, 105, 229, 102, 234, 99, 239, 160, 44, 165, 41, 170, 38, 175, 35, 180, 56, 177, 61, 190, 50, 187, 55, 136, 4, 141, 1, 130, 14, 135, 11, 156, 16, 153, 21, 150, 26, 147, 31, 240, 124, 245, 121, 250, 118, 255, 115, 228, 104, 225, 109, 238, 98, 235, 103, 216, 84, 221, 81, 210, 94, 215, 91, 204, 64, 201, 69, 198, 74, 195, 79, 93, 209, 88, 212, 87, 219, 82, 222, 73, 197, 76, 192, 67, 207, 70, 202, 117, 249, 112, 252, 127, 243, 122, 246, 97, 237, 100, 232, 107, 231, 110, 226, 13, 129, 8, 132, 7, 139, 2, 142, 25, 149, 28, 144, 19, 159, 22, 154, 37, 169, 32, 172, 47, 163, 42, 166, 49, 189, 52, 184, 59, 183, 62, 178, 253, 113, 248, 116, 247, 123, 242, 126, 233, 101, 236, 96, 227, 111, 230, 106, 213, 89, 208, 92, 223, 83, 218, 86, 193, 77, 196, 72, 203, 71, 206, 66, 173, 33, 168, 36, 167, 43, 162, 46, 185, 53, 188, 48, 179, 63, 182, 58, 133, 9, 128, 12, 143, 3, 138, 6, 145, 29, 148, 24, 155, 23, 158, 18, ],
[0, 141, 7, 138, 14, 131, 9, 132, 28, 145, 27, 150, 18, 159, 21, 152, 56, 181, 63, 178, 54, 187, 49, 188, 36, 169, 35, 174, 42, 167, 45, 160, 112, 253, 119, 250, 126, 243, 121, 244, 108, 225, 107, 230, 98, 239, 101, 232, 72, 197, 79, 194, 70, 203, 65, 204, 84, 217, 83, 222, 90, 215, 93, 208, 224, 109, 231, 106, 238, 99, 233, 100, 252, 113, 251, 118, 242, 127, 245, 120, 216, 85, 223, 82, 214, 91, 209, 92, 196, 73, 195, 78, 202, 71, 205, 64, 144, 29, 151, 26, 158, 19, 153, 20, 140, 1, 139, 6, 130, 15, 133, 8, 168, 37, 175, 34, 166, 43, 161, 44, 180, 57, 179, 62, 186, 55, 189, 48, 221, 80, 218, 87, 211, 94, 212, 89, 193, 76, 198, 75, 207, 66, 200, 69, 229, 104, 226, 111, 235, 102, 236, 97, 249, 116, 254, 115, 247, 122, 240, 125, 173, 32, 170, 39, 163, 46, 164, 41, 177, 60, 182, 59, 191, 50, 184, 53, 149, 24, 146, 31, 155, 22, 156, 17, 137, 4, 142, 3, 135, 10, 128, 13, 61, 176, 58, 183, 51, 190, 52, 185, 33, 172, 38, 171, 47, 162, 40, 165, 5, 136, 2, 143, 11, 134, 12, 129, 25, 148, 30, 147, 23, 154, 16, 157, 77, 192, 74, 199, 67, 206, 68, 201, 81, 220, 86, 219, 95, 210, 88, 213, 117, 248, 114, 255, 123, 246, 124, 241, 105, 228, 110, 227, 103, 234, 96, 237, ],
[0, 142, 1, 143, 2, 140, 3, 141, 4, 138, 5, 139, 6, 136, 7, 137, 8, 134, 9, 135, 10, 132, 11, 133, 12, 130, 13, 131, 14, 128, 15, 129, 16, 158, 17, 159, 18, 156, 19, 157, 20, 154, 21, 155, 22, 152, 23, 153, 24, 150, 25, 151, 26, 148, 27, 149, 28, 146, 29, 147, 30, 144, 31, 145, 32, 174, 33, 175, 34, 172, 35, 173, 36, 170, 37, 171, 38, 168, 39, 169, 40, 166, 41, 167, 42, 164, 43, 165, 44, 162, 45, 163, 46, 160, 47, 161, 48, 190, 49, 191, 50, 188, 51, 189, 52, 186, 53, 187, 54, 184, 55, 185, 56, 182, 57, 183, 58, 180, 59, 181, 60, 178, 61, 179, 62, 176, 63, 177, 64, 206, 65, 207, 66, 204, 67, 205, 68, 202, 69, 203, 70, 200, 71, 201, 72, 198, 73, 199, 74, 196, 75, 197, 76, 194, 77, 195, 78, 192, 79, 193, 80, 222, 81, 223, 82, 220, 83, 221, 84, 218, 85, 219, 86, 216, 87, 217, 88, 214, 89, 215, 90, 212, 91, 213, 92, 210, 93, 211, 94, 208, 95, 209, 96, 238, 97, 239, 98, 236, 99, 237, 100, 234, 101, 235, 102, 232, 103, 233, 104, 230, 105, 231, 106, 228, 107, 229, 108, 226, 109, 227, 110, 224, 111, 225, 112, 254, 113, 255, 114, 252, 115, 253, 116, 250, 117, 251, 118, 248, 119, 249, 120, 246, 121, 247, 122, 244, 123, 245, 124, 242, 125, 243, 126, 240, 127, 241, ],
[0, 143, 3, 140, 6, 137, 5, 138, 12, 131, 15, 128, 10, 133, 9, 134, 24, 151, 27, 148, 30, 145, 29, 146, 20, 155, 23, 152, 18, 157, 17, 158, 48, 191, 51, 188, 54, 185, 53, 186, 60, 179, 63, 176, 58, 181, 57, 182, 40, 167, 43, 164, 46, 161, 45, 162, 36, 171, 39, 168, 34, 173, 33, 174, 96, 239, 99, 236, 102, 233, 101, 234, 108, 227, 111, 224, 106, 229, 105, 230, 120, 247, 123, 244, 126, 241, 125, 242, 116, 251, 119, 248, 114, 253, 113, 254, 80, 223, 83, 220, 86, 217, 85, 218, 92, 211, 95, 208, 90, 213, 89, 214, 72, 199, 75, 196, 78, 193, 77, 194, 68, 203, 71, 200, 66, 205, 65, 206, 192, 79, 195, 76, 198, 73, 197, 74, 204, 67, 207, 64, 202, 69, 201, 70, 216, 87, 219, 84, 222, 81, 221, 82, 212, 91, 215, 88, 210, 93, 209, 94, 240, 127, 243, 124, 246, 121, 245, 122, 252, 115, 255, 112, 250, 117, 249, 118, 232, 103, 235, 100, 238, 97, 237, 98, 228, 107, 231, 104, 226, 109, 225, 110, 160, 47, 163, 44, 166, 41, 165, 42, 172, 35, 175, 32, 170, 37, 169, 38, 184, 55, 187, 52, 190, 49, 189, 50, 180, 59, 183, 56, 178, 61, 177, 62, 144, 31, 147, 28, 150, 25, 149, 26, 156, 19, 159, 16, 154, 21, 153, 22, 136, 7, 139, 4, 142, 1, 141, 2, 132, 11, 135, 8, 130, 13, 129, 14, ],
[0, 144, 61, 173, 122, 234, 71, 215, 244, 100, 201, 89, 142, 30, 179, 35, 245, 101, 200, 88, 143, 31, 178, 34, 1, 145, 60, 172, 123, 235, 70, 214, 247, 103, 202, 90, 141, 29, 176, 32, 3, 147, 62, 174, 121, 233, 68, 212, 2, 146, 63, 175, 120, 232, 69, 213, 246, 102, 203, 91, 140, 28, 177, 33, 243, 99, 206, 94, 137, 25, 180, 36, 7, 151, 58, 170, 125, 237, 64, 208, 6, 150, 59, 171, 124, 236, 65, 209, 242, 98, 207, 95, 136, 24, 181, 37, 4, 148, 57, 169, 126, 238, 67, 211, 240, 96, 205, 93, 138, 26, 183, 39, 241, 97, 204, 92, 139, 27, 182, 38, 5, 149, 56, 168, 127, 239, 66, 210, 251, 107, 198, 86, 129, 17, 188, 44, 15, 159, 50, 162, 117, 229, 72, 216, 14, 158, 51, 163, 116, 228, 73, 217, 250, 106, 199, 87, 128, 16, 189, 45, 12, 156, 49, 161, 118, 230, 75, 219, 248, 104, 197, 85, 130, 18, 191, 47, 249, 105, 196, 84, 131, 19, 190, 46, 13, 157, 48, 160, 119, 231, 74, 218, 8, 152, 53, 165, 114, 226, 79, 223, 252, 108, 193, 81, 134, 22, 187, 43, 253, 109, 192, 80, 135, 23, 186, 42, 9, 153, 52, 164, 115, 227, 78, 222, 255, 111, 194, 82, 133, 21, 184, 40, 11, 155, 54, 166, 113, 225, 76, 220, 10, 154, 55, 167, 112, 224, 77, 221, 254, 110, 195, 83, 132, 20, 185, 41, ],
[0, 145, 63, 174, 126, 239, 65, 208, 252, 109, 195, 82, 130, 19, 189, 44, 229, 116, 218, 75, 155, 10, 164, 53, 25, 136, 38, 183, 103, 246, 88, 201, 215, 70, 232, 121, 169, 56, 150, 7, 43, 186, 20, 133, 85, 196, 106, 251, 50, 163, 13, 156, 76, 221, 115, 226, 206, 95, 241, 96, 176, 33, 143, 30, 179, 34, 140, 29, 205, 92, 242, 99, 79, 222, 112, 225, 49, 160, 14, 159, 86, 199, 105, 248, 40, 185, 23, 134, 170, 59, 149, 4, 212, 69, 235, 122, 100, 245, 91, 202, 26, 139, 37, 180, 152, 9, 167, 54, 230, 119, 217, 72, 129, 16, 190, 47, 255, 110, 192, 81, 125, 236, 66, 211, 3, 146, 60, 173, 123, 234, 68, 213, 5, 148, 58, 171, 135, 22, 184, 41, 249, 104, 198, 87, 158, 15, 161, 48, 224, 113, 223, 78, 98, 243, 93, 204, 28, 141, 35, 178, 172, 61, 147, 2, 210, 67, 237, 124, 80, 193, 111, 254, 46, 191, 17, 128, 73, 216, 118, 231, 55, 166, 8, 153, 181, 36, 138, 27, 203, 90, 244, 101, 200, 89, 247, 102, 182, 39, 137, 24, 52, 165, 11, 154, 74, 219, 117, 228, 45, 188, 18, 131, 83, 194, 108, 253, 209, 64, 238, 127, 175, 62, 144, 1, 31, 142, 32, 177, 97, 240, 94, 207, 227, 114, 220, 77, 157, 12, 162, 51, 250, 107, 197, 84, 132, 21, 187, 42, 6, 151, 57, 168, 120, 233, 71, 214, ],
[0, 146, 57, 171, 114, 224, 75, 217, 228, 118, 221, 79, 150, 4, 175, 61, 213, 71, 236, 126, 167, 53, 158, 12, 49, 163, 8, 154, 67, 209, 122, 232, 183, 37, 142, 28, 197, 87, 252, 110, 83, 193, 106, 248, 33, 179, 24, 138, 98, 240, 91, 201, 16, 130, 41, 187, 134, 20, 191, 45, 244, 102, 205, 95, 115, 225, 74, 216, 1, 147, 56, 170, 151, 5, 174, 60, 229, 119, 220, 78, 166, 52, 159, 13, 212, 70, 237, 127, 66, 208, 123, 233, 48, 162, 9, 155, 196, 86, 253, 111, 182, 36, 143, 29, 32, 178, 25, 139, 82, 192, 107, 249, 17, 131, 40, 186, 99, 241, 90, 200, 245, 103, 204, 94, 135, 21, 190, 44, 230, 116, 223, 77, 148, 6, 173, 63, 2, 144, 59, 169, 112, 226, 73, 219, 51, 161, 10, 152, 65, 211, 120, 234, 215, 69, 238, 124, 165, 55, 156, 14, 81, 195, 104, 250, 35, 177, 26, 136, 181, 39, 140, 30, 199, 85, 254, 108, 132, 22, 189, 47, 246, 100, 207, 93, 96, 242, 89, 203, 18, 128, 43, 185, 149, 7, 172, 62, 231, 117, 222, 76, 113, 227, 72, 218, 3, 145, 58, 168, 64, 210, 121, 235, 50, 160, 11, 153, 164, 54, 157, 15, 214, 68, 239, 125, 34, 176, 27, 137, 80, 194, 105, 251, 198, 84, 255, 109, 180, 38, 141, 31, 247, 101, 206, 92, 133, 23, 188, 46, 19, 129, 42, 184, 97, 243, 88, 202, ],
[0, 147, 59, 168, 118, 229, 77, 222, 236, 127, 215, 68, 154, 9, 161, 50, 197, 86, 254, 109, 179, 32, 136, 27, 41, 186, 18, 129, 95, 204, 100, 247, 151, 4, 172, 63, 225, 114, 218, 73, 123, 232, 64, 211, 13, 158, 54, 165, 82, 193, 105, 250, 36, 183, 31, 140, 190, 45, 133, 22, 200, 91, 243, 96, 51, 160, 8, 155, 69, 214, 126, 237, 223, 76, 228, 119, 169, 58, 146, 1, 246, 101, 205, 94, 128, 19, 187, 40, 26, 137, 33, 178, 108, 255, 87, 196, 164, 55, 159, 12, 210, 65, 233, 122, 72, 219, 115, 224, 62, 173, 5, 150, 97, 242, 90, 201, 23, 132, 44, 191, 141, 30, 182, 37, 251, 104, 192, 83, 102, 245, 93, 206, 16, 131, 43, 184, 138, 25, 177, 34, 252, 111, 199, 84, 163, 48, 152, 11, 213, 70, 238, 125, 79, 220, 116, 231, 57, 170, 2, 145, 241, 98, 202, 89, 135, 20, 188, 47, 29, 142, 38, 181, 107, 248, 80, 195, 52, 167, 15, 156, 66, 209, 121, 234, 216, 75, 227, 112, 174, 61, 149, 6, 85, 198, 110, 253, 35, 176, 24, 139, 185, 42, 130, 17, 207, 92, 244, 103, 144, 3, 171, 56, 230, 117, 221, 78, 124, 239, 71, 212, 10, 153, 49, 162, 194, 81, 249, 106, 180, 39, 143, 28, 46, 189, 21, 134, 88, 203, 99, 240, 7, 148, 60, 175, 113, 226, 74, 217, 235, 120, 208, 67, 157, 14, 166, 53, ],
[0, 148, 53, 161, 106, 254, 95, 203, 212, 64, 225, 117, 190, 42, 139, 31, 181, 33, 128, 20, 223, 75, 234, 126, 97, 245, 84, 192, 11, 159, 62, 170, 119, 227, 66, 214, 29, 137, 40, 188, 163, 55, 150, 2, 201, 93, 252, 104, 194, 86, 247, 99, 168, 60, 157, 9, 22, 130, 35, 183, 124, 232, 73, 221, 238, 122, 219, 79, 132, 16, 177, 37, 58, 174, 15, 155, 80, 196, 101, 241, 91, 207, 110, 250, 49, 165, 4, 144, 143, 27, 186, 46, 229, 113, 208, 68, 153, 13, 172, 56, 243, 103, 198, 82, 77, 217, 120, 236, 39, 179, 18, 134, 44, 184, 25, 141, 70, 210, 115, 231, 248, 108, 205, 89, 146, 6, 167, 51, 193, 85, 244, 96, 171, 63, 158, 10, 21, 129, 32, 180, 127, 235, 74, 222, 116, 224, 65, 213, 30, 138, 43, 191, 160, 52, 149, 1, 202, 94, 255, 107, 182, 34, 131, 23, 220, 72, 233, 125, 98, 246, 87, 195, 8, 156, 61, 169, 3, 151, 54, 162, 105, 253, 92, 200, 215, 67, 226, 118, 189, 41, 136, 28, 47, 187, 26, 142, 69, 209, 112, 228, 251, 111, 206, 90, 145, 5, 164, 48, 154, 14, 175, 59, 240, 100, 197, 81, 78, 218, 123, 239, 36, 176, 17, 133, 88, 204, 109, 249, 50, 166, 7, 147, 140, 24, 185, 45, 230, 114, 211, 71, 237, 121, 216, 76, 135, 19, 178, 38, 57, 173, 12, 152, 83, 199, 102, 242, ],
[0, 149, 55, 162, 110, 251, 89, 204, 220, 73, 235, 126, 178, 39, 133, 16, 165, 48, 146, 7, 203, 94, 252, 105, 121, 236, 78, 219, 23, 130, 32, 181, 87, 194, 96, 245, 57, 172, 14, 155, 139, 30, 188, 41, 229, 112, 210, 71, 242, 103, 197, 80, 156, 9, 171, 62, 46, 187, 25, 140, 64, 213, 119, 226, 174, 59, 153, 12, 192, 85, 247, 98, 114, 231, 69, 208, 28, 137, 43, 190, 11, 158, 60, 169, 101, 240, 82, 199, 215, 66, 224, 117, 185, 44, 142, 27, 249, 108, 206, 91, 151, 2, 160, 53, 37, 176, 18, 135, 75, 222, 124, 233, 92, 201, 107, 254, 50, 167, 5, 144, 128, 21, 183, 34, 238, 123, 217, 76, 65, 212, 118, 227, 47, 186, 24, 141, 157, 8, 170, 63, 243, 102, 196, 81, 228, 113, 211, 70, 138, 31, 189, 40, 56, 173, 15, 154, 86, 195, 97, 244, 22, 131, 33, 180, 120, 237, 79, 218, 202, 95, 253, 104, 164, 49, 147, 6, 179, 38, 132, 17, 221, 72, 234, 127, 111, 250, 88, 205, 1, 148, 54, 163, 239, 122, 216, 77, 129, 20, 182, 35, 51, 166, 4, 145, 93, 200, 106, 255, 74, 223, 125, 232, 36, 177, 19, 134, 150, 3, 161, 52, 248, 109, 207, 90, 184, 45, 143, 26, 214, 67, 225, 116, 100, 241, 83, 198, 10, 159, 61, 168, 29, 136, 42, 191, 115, 230, 68, 209, 193, 84, 246, 99, 175, 58, 152, 13, ],
[0, 150, 49, 167, 98, 244, 83, 197, 196, 82, 245, 99, 166, 48, 151, 1, 149, 3, 164, 50, 247, 97, 198, 80, 81, 199, 96, 246, 51, 165, 2, 148, 55, 161, 6, 144, 85, 195, 100, 242, 243, 101, 194, 84, 145, 7, 160, 54, 162, 52, 147, 5, 192, 86, 241, 103, 102, 240, 87, 193, 4, 146, 53, 163, 110, 248, 95, 201, 12, 154, 61, 171, 170, 60, 155, 13, 200, 94, 249, 111, 251, 109, 202, 92, 153, 15, 168, 62, 63, 169, 14, 152, 93, 203, 108, 250, 89, 207, 104, 254, 59, 173, 10, 156, 157, 11, 172, 58, 255, 105, 206, 88, 204, 90, 253, 107, 174, 56, 159, 9, 8, 158, 57, 175, 106, 252, 91, 205, 220, 74, 237, 123, 190, 40, 143, 25, 24, 142, 41, 191, 122, 236, 75, 221, 73, 223, 120, 238, 43, 189, 26, 140, 141, 27, 188, 42, 239, 121, 222, 72, 235, 125, 218, 76, 137, 31, 184, 46, 47, 185, 30, 136, 77, 219, 124, 234, 126, 232, 79, 217, 28, 138, 45, 187, 186, 44, 139, 29, 216, 78, 233, 127, 178, 36, 131, 21, 208, 70, 225, 119, 118, 224, 71, 209, 20, 130, 37, 179, 39, 177, 22, 128, 69, 211, 116, 226, 227, 117, 210, 68, 129, 23, 176, 38, 133, 19, 180, 34, 231, 113, 214, 64, 65, 215, 112, 230, 35, 181, 18, 132, 16, 134, 33, 183, 114, 228, 67, 213, 212, 66, 229, 115, 182, 32, 135, 17, ],
[0, 151, 51, 164, 102, 241, 85, 194, 204, 91, 255, 104, 170, 61, 153, 14, 133, 18, 182, 33, 227, 116, 208, 71, 73, 222, 122, 237, 47, 184, 28, 139, 23, 128, 36, 179, 113, 230, 66, 213, 219, 76, 232, 127, 189, 42, 142, 25, 146, 5, 161, 54, 244, 99, 199, 80, 94, 201, 109, 250, 56, 175, 11, 156, 46, 185, 29, 138, 72, 223, 123, 236, 226, 117, 209, 70, 132, 19, 183, 32, 171, 60, 152, 15, 205, 90, 254, 105, 103, 240, 84, 195, 1, 150, 50, 165, 57, 174, 10, 157, 95, 200, 108, 251, 245, 98, 198, 81, 147, 4, 160, 55, 188, 43, 143, 24, 218, 77, 233, 126, 112, 231, 67, 212, 22, 129, 37, 178, 92, 203, 111, 248, 58, 173, 9, 158, 144, 7, 163, 52, 246, 97, 197, 82, 217, 78, 234, 125, 191, 40, 140, 27, 21, 130, 38, 177, 115, 228, 64, 215, 75, 220, 120, 239, 45, 186, 30, 137, 135, 16, 180, 35, 225, 118, 210, 69, 206, 89, 253, 106, 168, 63, 155, 12, 2, 149, 49, 166, 100, 243, 87, 192, 114, 229, 65, 214, 20, 131, 39, 176, 190, 41, 141, 26, 216, 79, 235, 124, 247, 96, 196, 83, 145, 6, 162, 53, 59, 172, 8, 159, 93, 202, 110, 249, 101, 242, 86, 193, 3, 148, 48, 167, 169, 62, 154, 13, 207, 88, 252, 107, 224, 119, 211, 68, 134, 17, 181, 34, 44, 187, 31, 136, 74, 221, 121, 238, ],
[0, 152, 45, 181, 90, 194, 119, 239, 180, 44, 153, 1, 238, 118, 195, 91, 117, 237, 88, 192, 47, 183, 2, 154, 193, 89, 236, 116, 155, 3, 182, 46, 234, 114, 199, 95, 176, 40, 157, 5, 94, 198, 115, 235, 4, 156, 41, 177, 159, 7, 178, 42, 197, 93, 232, 112, 43, 179, 6, 158, 113, 233, 92, 196, 201, 81, 228, 124, 147, 11, 190, 38, 125, 229, 80, 200, 39, 191, 10, 146, 188, 36, 145, 9, 230, 126, 203, 83, 8, 144, 37, 189, 82, 202, 127, 231, 35, 187, 14, 150, 121, 225, 84, 204, 151, 15, 186, 34, 205, 85, 224, 120, 86, 206, 123, 227, 12, 148, 33, 185, 226, 122, 207, 87, 184, 32, 149, 13, 143, 23, 162, 58, 213, 77, 248, 96, 59, 163, 22, 142, 97, 249, 76, 212, 250, 98, 215, 79, 160, 56, 141, 21, 78, 214, 99, 251, 20, 140, 57, 161, 101, 253, 72, 208, 63, 167, 18, 138, 209, 73, 252, 100, 139, 19, 166, 62, 16, 136, 61, 165, 74, 210, 103, 255, 164, 60, 137, 17, 254, 102, 211, 75, 70, 222, 107, 243, 28, 132, 49, 169, 242, 106, 223, 71, 168, 48, 133, 29, 51, 171, 30, 134, 105, 241, 68, 220, 135, 31, 170, 50, 221, 69, 240, 104, 172, 52, 129, 25, 246, 110, 219, 67, 24, 128, 53, 173, 66, 218, 111, 247, 217, 65, 244, 108, 131, 27, 174, 54, 109, 245, 64, 216, 55, 175, 26, 130, ],
[0, 153, 47, 182, 94, 199, 113, 232, 188, 37, 147, 10, 226, 123, 205, 84, 101, 252, 74, 211, 59, 162, 20, 141, 217, 64, 246, 111, 135, 30, 168, 49, 202, 83, 229, 124, 148, 13, 187, 34, 118, 239, 89, 192, 40, 177, 7, 158, 175, 54, 128, 25, 241, 104, 222, 71, 19, 138, 60, 165, 77, 212, 98, 251, 137, 16, 166, 63, 215, 78, 248, 97, 53, 172, 26, 131, 107, 242, 68, 221, 236, 117, 195, 90, 178, 43, 157, 4, 80, 201, 127, 230, 14, 151, 33, 184, 67, 218, 108, 245, 29, 132, 50, 171, 255, 102, 208, 73, 161, 56, 142, 23, 38, 191, 9, 144, 120, 225, 87, 206, 154, 3, 181, 44, 196, 93, 235, 114, 15, 150, 32, 185, 81, 200, 126, 231, 179, 42, 156, 5, 237, 116, 194, 91, 106, 243, 69, 220, 52, 173, 27, 130, 214, 79, 249, 96, 136, 17, 167, 62, 197, 92, 234, 115, 155, 2, 180, 45, 121, 224, 86, 207, 39, 190, 8, 145, 160, 57, 143, 22, 254, 103, 209, 72, 28, 133, 51, 170, 66, 219, 109, 244, 134, 31, 169, 48, 216, 65, 247, 110, 58, 163, 21, 140, 100, 253, 75, 210, 227, 122, 204, 85, 189, 36, 146, 11, 95, 198, 112, 233, 1, 152, 46, 183, 76, 213, 99, 250, 18, 139, 61, 164, 240, 105, 223, 70, 174, 55, 129, 24, 41, 176, 6, 159, 119, 238, 88, 193, 149, 12, 186, 35, 203, 82, 228, 125, ],
[0, 154, 41, 179, 82, 200, 123, 225, 164, 62, 141, 23, 246, 108, 223, 69, 85, 207, 124, 230, 7, 157, 46, 180, 241, 107, 216, 66, 163, 57, 138, 16, 170, 48, 131, 25, 248, 98, 209, 75, 14, 148, 39, 189, 92, 198, 117, 239, 255, 101, 214, 76, 173, 55, 132, 30, 91, 193, 114, 232, 9, 147, 32, 186, 73, 211, 96, 250, 27, 129, 50, 168, 237, 119, 196, 94, 191, 37, 150, 12, 28, 134, 53, 175, 78, 212, 103, 253, 184, 34, 145, 11, 234, 112, 195, 89, 227, 121, 202, 80, 177, 43, 152, 2, 71, 221, 110, 244, 21, 143, 60, 166, 182, 44, 159, 5, 228, 126, 205, 87, 18, 136, 59, 161, 64, 218, 105, 243, 146, 8, 187, 33, 192, 90, 233, 115, 54, 172, 31, 133, 100, 254, 77, 215, 199, 93, 238, 116, 149, 15, 188, 38, 99, 249, 74, 208, 49, 171, 24, 130, 56, 162, 17, 139, 106, 240, 67, 217, 156, 6, 181, 47, 206, 84, 231, 125, 109, 247, 68, 222, 63, 165, 22, 140, 201, 83, 224, 122, 155, 1, 178, 40, 219, 65, 242, 104, 137, 19, 160, 58, 127, 229, 86, 204, 45, 183, 4, 158, 142, 20, 167, 61, 220, 70, 245, 111, 42, 176, 3, 153, 120, 226, 81, 203, 113, 235, 88, 194, 35, 185, 10, 144, 213, 79, 252, 102, 135, 29, 174, 52, 36, 190, 13, 151, 118, 236, 95, 197, 128, 26, 169, 51, 210, 72, 251, 97, ],
[0, 155, 43, 176, 86, 205, 125, 230, 172, 55, 135, 28, 250, 97, 209, 74, 69, 222, 110, 245, 19, 136, 56, 163, 233, 114, 194, 89, 191, 36, 148, 15, 138, 17, 161, 58, 220, 71, 247, 108, 38, 189, 13, 150, 112, 235, 91, 192, 207, 84, 228, 127, 153, 2, 178, 41, 99, 248, 72, 211, 53, 174, 30, 133, 9, 146, 34, 185, 95, 196, 116, 239, 165, 62, 142, 21, 243, 104, 216, 67, 76, 215, 103, 252, 26, 129, 49, 170, 224, 123, 203, 80, 182, 45, 157, 6, 131, 24, 168, 51, 213, 78, 254, 101, 47, 180, 4, 159, 121, 226, 82, 201, 198, 93, 237, 118, 144, 11, 187, 32, 106, 241, 65, 218, 60, 167, 23, 140, 18, 137, 57, 162, 68, 223, 111, 244, 190, 37, 149, 14, 232, 115, 195, 88, 87, 204, 124, 231, 1, 154, 42, 177, 251, 96, 208, 75, 173, 54, 134, 29, 152, 3, 179, 40, 206, 85, 229, 126, 52, 175, 31, 132, 98, 249, 73, 210, 221, 70, 246, 109, 139, 16, 160, 59, 113, 234, 90, 193, 39, 188, 12, 151, 27, 128, 48, 171, 77, 214, 102, 253, 183, 44, 156, 7, 225, 122, 202, 81, 94, 197, 117, 238, 8, 147, 35, 184, 242, 105, 217, 66, 164, 63, 143, 20, 145, 10, 186, 33, 199, 92, 236, 119, 61, 166, 22, 141, 107, 240, 64, 219, 212, 79, 255, 100, 130, 25, 169, 50, 120, 227, 83, 200, 46, 181, 5, 158, ],
[0, 156, 37, 185, 74, 214, 111, 243, 148, 8, 177, 45, 222, 66, 251, 103, 53, 169, 16, 140, 127, 227, 90, 198, 161, 61, 132, 24, 235, 119, 206, 82, 106, 246, 79, 211, 32, 188, 5, 153, 254, 98, 219, 71, 180, 40, 145, 13, 95, 195, 122, 230, 21, 137, 48, 172, 203, 87, 238, 114, 129, 29, 164, 56, 212, 72, 241, 109, 158, 2, 187, 39, 64, 220, 101, 249, 10, 150, 47, 179, 225, 125, 196, 88, 171, 55, 142, 18, 117, 233, 80, 204, 63, 163, 26, 134, 190, 34, 155, 7, 244, 104, 209, 77, 42, 182, 15, 147, 96, 252, 69, 217, 139, 23, 174, 50, 193, 93, 228, 120, 31, 131, 58, 166, 85, 201, 112, 236, 181, 41, 144, 12, 255, 99, 218, 70, 33, 189, 4, 152, 107, 247, 78, 210, 128, 28, 165, 57, 202, 86, 239, 115, 20, 136, 49, 173, 94, 194, 123, 231, 223, 67, 250, 102, 149, 9, 176, 44, 75, 215, 110, 242, 1, 157, 36, 184, 234, 118, 207, 83, 160, 60, 133, 25, 126, 226, 91, 199, 52, 168, 17, 141, 97, 253, 68, 216, 43, 183, 14, 146, 245, 105, 208, 76, 191, 35, 154, 6, 84, 200, 113, 237, 30, 130, 59, 167, 192, 92, 229, 121, 138, 22, 175, 51, 11, 151, 46, 178, 65, 221, 100, 248, 159, 3, 186, 38, 213, 73, 240, 108, 62, 162, 27, 135, 116, 232, 81, 205, 170, 54, 143, 19, 224, 124, 197, 89, ],
[0, 157, 39, 186, 78, 211, 105, 244, 156, 1, 187, 38, 210, 79, 245, 104, 37, 184, 2, 159, 107, 246, 76, 209, 185, 36, 158, 3, 247, 106, 208, 77, 74, 215, 109, 240, 4, 153, 35, 190, 214, 75, 241, 108, 152, 5, 191, 34, 111, 242, 72, 213, 33, 188, 6, 155, 243, 110, 212, 73, 189, 32, 154, 7, 148, 9, 179, 46, 218, 71, 253, 96, 8, 149, 47, 178, 70, 219, 97, 252, 177, 44, 150, 11, 255, 98, 216, 69, 45, 176, 10, 151, 99, 254, 68, 217, 222, 67, 249, 100, 144, 13, 183, 42, 66, 223, 101, 248, 12, 145, 43, 182, 251, 102, 220, 65, 181, 40, 146, 15, 103, 250, 64, 221, 41, 180, 14, 147, 53, 168, 18, 143, 123, 230, 92, 193, 169, 52, 142, 19, 231, 122, 192, 93, 16, 141, 55, 170, 94, 195, 121, 228, 140, 17, 171, 54, 194, 95, 229, 120, 127, 226, 88, 197, 49, 172, 22, 139, 227, 126, 196, 89, 173, 48, 138, 23, 90, 199, 125, 224, 20, 137, 51, 174, 198, 91, 225, 124, 136, 21, 175, 50, 161, 60, 134, 27, 239, 114, 200, 85, 61, 160, 26, 135, 115, 238, 84, 201, 132, 25, 163, 62, 202, 87, 237, 112, 24, 133, 63, 162, 86, 203, 113, 236, 235, 118, 204, 81, 165, 56, 130, 31, 119, 234, 80, 205, 57, 164, 30, 131, 206, 83, 233, 116, 128, 29, 167, 58, 82, 207, 117, 232, 28, 129, 59, 166, ],
[0, 158, 33, 191, 66, 220, 99, 253, 132, 26, 165, 59, 198, 88, 231, 121, 21, 139, 52, 170, 87, 201, 118, 232, 145, 15, 176, 46, 211, 77, 242, 108, 42, 180, 11, 149, 104, 246, 73, 215, 174, 48, 143, 17, 236, 114, 205, 83, 63, 161, 30, 128, 125, 227, 92, 194, 187, 37, 154, 4, 249, 103, 216, 70, 84, 202, 117, 235, 22, 136, 55, 169, 208, 78, 241, 111, 146, 12, 179, 45, 65, 223, 96, 254, 3, 157, 34, 188, 197, 91, 228, 122, 135, 25, 166, 56, 126, 224, 95, 193, 60, 162, 29, 131, 250, 100, 219, 69, 184, 38, 153, 7, 107, 245, 74, 212, 41, 183, 8, 150, 239, 113, 206, 80, 173, 51, 140, 18, 168, 54, 137, 23, 234, 116, 203, 85, 44, 178, 13, 147, 110, 240, 79, 209, 189, 35, 156, 2, 255, 97, 222, 64, 57, 167, 24, 134, 123, 229, 90, 196, 130, 28, 163, 61, 192, 94, 225, 127, 6, 152, 39, 185, 68, 218, 101, 251, 151, 9, 182, 40, 213, 75, 244, 106, 19, 141, 50, 172, 81, 207, 112, 238, 252, 98, 221, 67, 190, 32, 159, 1, 120, 230, 89, 199, 58, 164, 27, 133, 233, 119, 200, 86, 171, 53, 138, 20, 109, 243, 76, 210, 47, 177, 14, 144, 214, 72, 247, 105, 148, 10, 181, 43, 82, 204, 115, 237, 16, 142, 49, 175, 195, 93, 226, 124, 129, 31, 160, 62, 71, 217, 102, 248, 5, 155, 36, 186, ],
[0, 159, 35, 188, 70, 217, 101, 250, 140, 19, 175, 48, 202, 85, 233, 118, 5, 154, 38, 185, 67, 220, 96, 255, 137, 22, 170, 53, 207, 80, 236, 115, 10, 149, 41, 182, 76, 211, 111, 240, 134, 25, 165, 58, 192, 95, 227, 124, 15, 144, 44, 179, 73, 214, 106, 245, 131, 28, 160, 63, 197, 90, 230, 121, 20, 139, 55, 168, 82, 205, 113, 238, 152, 7, 187, 36, 222, 65, 253, 98, 17, 142, 50, 173, 87, 200, 116, 235, 157, 2, 190, 33, 219, 68, 248, 103, 30, 129, 61, 162, 88, 199, 123, 228, 146, 13, 177, 46, 212, 75, 247, 104, 27, 132, 56, 167, 93, 194, 126, 225, 151, 8, 180, 43, 209, 78, 242, 109, 40, 183, 11, 148, 110, 241, 77, 210, 164, 59, 135, 24, 226, 125, 193, 94, 45, 178, 14, 145, 107, 244, 72, 215, 161, 62, 130, 29, 231, 120, 196, 91, 34, 189, 1, 158, 100, 251, 71, 216, 174, 49, 141, 18, 232, 119, 203, 84, 39, 184, 4, 155, 97, 254, 66, 221, 171, 52, 136, 23, 237, 114, 206, 81, 60, 163, 31, 128, 122, 229, 89, 198, 176, 47, 147, 12, 246, 105, 213, 74, 57, 166, 26, 133, 127, 224, 92, 195, 181, 42, 150, 9, 243, 108, 208, 79, 54, 169, 21, 138, 112, 239, 83, 204, 186, 37, 153, 6, 252, 99, 223, 64, 51, 172, 16, 143, 117, 234, 86, 201, 191, 32, 156, 3, 249, 102, 218, 69, ],
[0, 160, 93, 253, 186, 26, 231, 71, 105, 201, 52, 148, 211, 115, 142, 46, 210, 114, 143, 47, 104, 200, 53, 149, 187, 27, 230, 70, 1, 161, 92, 252, 185, 25, 228, 68, 3, 163, 94, 254, 208, 112, 141, 45, 106, 202, 55, 151, 107, 203, 54, 150, 209, 113, 140, 44, 2, 162, 95, 255, 184, 24, 229, 69, 111, 207, 50, 146, 213, 117, 136, 40, 6, 166, 91, 251, 188, 28, 225, 65, 189, 29, 224, 64, 7, 167, 90, 250, 212, 116, 137, 41, 110, 206, 51, 147, 214, 118, 139, 43, 108, 204, 49, 145, 191, 31, 226, 66, 5, 165, 88, 248, 4, 164, 89, 249, 190, 30, 227, 67, 109, 205, 48, 144, 215, 119, 138, 42, 222, 126, 131, 35, 100, 196, 57, 153, 183, 23, 234, 74, 13, 173, 80, 240, 12, 172, 81, 241, 182, 22, 235, 75, 101, 197, 56, 152, 223, 127, 130, 34, 103, 199, 58, 154, 221, 125, 128, 32, 14, 174, 83, 243, 180, 20, 233, 73, 181, 21, 232, 72, 15, 175, 82, 242, 220, 124, 129, 33, 102, 198, 59, 155, 177, 17, 236, 76, 11, 171, 86, 246, 216, 120, 133, 37, 98, 194, 63, 159, 99, 195, 62, 158, 217, 121, 132, 36, 10, 170, 87, 247, 176, 16, 237, 77, 8, 168, 85, 245, 178, 18, 239, 79, 97, 193, 60, 156, 219, 123, 134, 38, 218, 122, 135, 39, 96, 192, 61, 157, 179, 19, 238, 78, 9, 169, 84, 244, ],
[0, 161, 95, 254, 190, 31, 225, 64, 97, 192, 62, 159, 223, 126, 128, 33, 194, 99, 157, 60, 124, 221, 35, 130, 163, 2, 252, 93, 29, 188, 66, 227, 153, 56, 198, 103, 39, 134, 120, 217, 248, 89, 167, 6, 70, 231, 25, 184, 91, 250, 4, 165, 229, 68, 186, 27, 58, 155, 101, 196, 132, 37, 219, 122, 47, 142, 112, 209, 145, 48, 206, 111, 78, 239, 17, 176, 240, 81, 175, 14, 237, 76, 178, 19, 83, 242, 12, 173, 140, 45, 211, 114, 50, 147, 109, 204, 182, 23, 233, 72, 8, 169, 87, 246, 215, 118, 136, 41, 105, 200, 54, 151, 116, 213, 43, 138, 202, 107, 149, 52, 21, 180, 74, 235, 171, 10, 244, 85, 94, 255, 1, 160, 224, 65, 191, 30, 63, 158, 96, 193, 129, 32, 222, 127, 156, 61, 195, 98, 34, 131, 125, 220, 253, 92, 162, 3, 67, 226, 28, 189, 199, 102, 152, 57, 121, 216, 38, 135, 166, 7, 249, 88, 24, 185, 71, 230, 5, 164, 90, 251, 187, 26, 228, 69, 100, 197, 59, 154, 218, 123, 133, 36, 113, 208, 46, 143, 207, 110, 144, 49, 16, 177, 79, 238, 174, 15, 241, 80, 179, 18, 236, 77, 13, 172, 82, 243, 210, 115, 141, 44, 108, 205, 51, 146, 232, 73, 183, 22, 86, 247, 9, 168, 137, 40, 214, 119, 55, 150, 104, 201, 42, 139, 117, 212, 148, 53, 203, 106, 75, 234, 20, 181, 245, 84, 170, 11, ],
[0, 162, 89, 251, 178, 16, 235, 73, 121, 219, 32, 130, 203, 105, 146, 48, 242, 80, 171, 9, 64, 226, 25, 187, 139, 41, 210, 112, 57, 155, 96, 194, 249, 91, 160, 2, 75, 233, 18, 176, 128, 34, 217, 123, 50, 144, 107, 201, 11, 169, 82, 240, 185, 27, 224, 66, 114, 208, 43, 137, 192, 98, 153, 59, 239, 77, 182, 20, 93, 255, 4, 166, 150, 52, 207, 109, 36, 134, 125, 223, 29, 191, 68, 230, 175, 13, 246, 84, 100, 198, 61, 159, 214, 116, 143, 45, 22, 180, 79, 237, 164, 6, 253, 95, 111, 205, 54, 148, 221, 127, 132, 38, 228, 70, 189, 31, 86, 244, 15, 173, 157, 63, 196, 102, 47, 141, 118, 212, 195, 97, 154, 56, 113, 211, 40, 138, 186, 24, 227, 65, 8, 170, 81, 243, 49, 147, 104, 202, 131, 33, 218, 120, 72, 234, 17, 179, 250, 88, 163, 1, 58, 152, 99, 193, 136, 42, 209, 115, 67, 225, 26, 184, 241, 83, 168, 10, 200, 106, 145, 51, 122, 216, 35, 129, 177, 19, 232, 74, 3, 161, 90, 248, 44, 142, 117, 215, 158, 60, 199, 101, 85, 247, 12, 174, 231, 69, 190, 28, 222, 124, 135, 37, 108, 206, 53, 151, 167, 5, 254, 92, 21, 183, 76, 238, 213, 119, 140, 46, 103, 197, 62, 156, 172, 14, 245, 87, 30, 188, 71, 229, 39, 133, 126, 220, 149, 55, 204, 110, 94, 252, 7, 165, 236, 78, 181, 23, ],
[0, 163, 91, 248, 182, 21, 237, 78, 113, 210, 42, 137, 199, 100, 156, 63, 226, 65, 185, 26, 84, 247, 15, 172, 147, 48, 200, 107, 37, 134, 126, 221, 217, 122, 130, 33, 111, 204, 52, 151, 168, 11, 243, 80, 30, 189, 69, 230, 59, 152, 96, 195, 141, 46, 214, 117, 74, 233, 17, 178, 252, 95, 167, 4, 175, 12, 244, 87, 25, 186, 66, 225, 222, 125, 133, 38, 104, 203, 51, 144, 77, 238, 22, 181, 251, 88, 160, 3, 60, 159, 103, 196, 138, 41, 209, 114, 118, 213, 45, 142, 192, 99, 155, 56, 7, 164, 92, 255, 177, 18, 234, 73, 148, 55, 207, 108, 34, 129, 121, 218, 229, 70, 190, 29, 83, 240, 8, 171, 67, 224, 24, 187, 245, 86, 174, 13, 50, 145, 105, 202, 132, 39, 223, 124, 161, 2, 250, 89, 23, 180, 76, 239, 208, 115, 139, 40, 102, 197, 61, 158, 154, 57, 193, 98, 44, 143, 119, 212, 235, 72, 176, 19, 93, 254, 6, 165, 120, 219, 35, 128, 206, 109, 149, 54, 9, 170, 82, 241, 191, 28, 228, 71, 236, 79, 183, 20, 90, 249, 1, 162, 157, 62, 198, 101, 43, 136, 112, 211, 14, 173, 85, 246, 184, 27, 227, 64, 127, 220, 36, 135, 201, 106, 146, 49, 53, 150, 110, 205, 131, 32, 216, 123, 68, 231, 31, 188, 242, 81, 169, 10, 215, 116, 140, 47, 97, 194, 58, 153, 166, 5, 253, 94, 16, 179, 75, 232, ],
[0, 164, 85, 241, 170, 14, 255, 91, 73, 237, 28, 184, 227, 71, 182, 18, 146, 54, 199, 99, 56, 156, 109, 201, 219, 127, 142, 42, 113, 213, 36, 128, 57, 157, 108, 200, 147, 55, 198, 98, 112, 212, 37, 129, 218, 126, 143, 43, 171, 15, 254, 90, 1, 165, 84, 240, 226, 70, 183, 19, 72, 236, 29, 185, 114, 214, 39, 131, 216, 124, 141, 41, 59, 159, 110, 202, 145, 53, 196, 96, 224, 68, 181, 17, 74, 238, 31, 187, 169, 13, 252, 88, 3, 167, 86, 242, 75, 239, 30, 186, 225, 69, 180, 16, 2, 166, 87, 243, 168, 12, 253, 89, 217, 125, 140, 40, 115, 215, 38, 130, 144, 52, 197, 97, 58, 158, 111, 203, 228, 64, 177, 21, 78, 234, 27, 191, 173, 9, 248, 92, 7, 163, 82, 246, 118, 210, 35, 135, 220, 120, 137, 45, 63, 155, 106, 206, 149, 49, 192, 100, 221, 121, 136, 44, 119, 211, 34, 134, 148, 48, 193, 101, 62, 154, 107, 207, 79, 235, 26, 190, 229, 65, 176, 20, 6, 162, 83, 247, 172, 8, 249, 93, 150, 50, 195, 103, 60, 152, 105, 205, 223, 123, 138, 46, 117, 209, 32, 132, 4, 160, 81, 245, 174, 10, 251, 95, 77, 233, 24, 188, 231, 67, 178, 22, 175, 11, 250, 94, 5, 161, 80, 244, 230, 66, 179, 23, 76, 232, 25, 189, 61, 153, 104, 204, 151, 51, 194, 102, 116, 208, 33, 133, 222, 122, 139, 47, ],
[0, 165, 87, 242, 174, 11, 249, 92, 65, 228, 22, 179, 239, 74, 184, 29, 130, 39, 213, 112, 44, 137, 123, 222, 195, 102, 148, 49, 109, 200, 58, 159, 25, 188, 78, 235, 183, 18, 224, 69, 88, 253, 15, 170, 246, 83, 161, 4, 155, 62, 204, 105, 53, 144, 98, 199, 218, 127, 141, 40, 116, 209, 35, 134, 50, 151, 101, 192, 156, 57, 203, 110, 115, 214, 36, 129, 221, 120, 138, 47, 176, 21, 231, 66, 30, 187, 73, 236, 241, 84, 166, 3, 95, 250, 8, 173, 43, 142, 124, 217, 133, 32, 210, 119, 106, 207, 61, 152, 196, 97, 147, 54, 169, 12, 254, 91, 7, 162, 80, 245, 232, 77, 191, 26, 70, 227, 17, 180, 100, 193, 51, 150, 202, 111, 157, 56, 37, 128, 114, 215, 139, 46, 220, 121, 230, 67, 177, 20, 72, 237, 31, 186, 167, 2, 240, 85, 9, 172, 94, 251, 125, 216, 42, 143, 211, 118, 132, 33, 60, 153, 107, 206, 146, 55, 197, 96, 255, 90, 168, 13, 81, 244, 6, 163, 190, 27, 233, 76, 16, 181, 71, 226, 86, 243, 1, 164, 248, 93, 175, 10, 23, 178, 64, 229, 185, 28, 238, 75, 212, 113, 131, 38, 122, 223, 45, 136, 149, 48, 194, 103, 59, 158, 108, 201, 79, 234, 24, 189, 225, 68, 182, 19, 14, 171, 89, 252, 160, 5, 247, 82, 205, 104, 154, 63, 99, 198, 52, 145, 140, 41, 219, 126, 34, 135, 117, 208, ],
[0, 166, 81, 247, 162, 4, 243, 85, 89, 255, 8, 174, 251, 93, 170, 12, 178, 20, 227, 69, 16, 182, 65, 231, 235, 77, 186, 28, 73, 239, 24, 190, 121, 223, 40, 142, 219, 125, 138, 44, 32, 134, 113, 215, 130, 36, 211, 117, 203, 109, 154, 60, 105, 207, 56, 158, 146, 52, 195, 101, 48, 150, 97, 199, 242, 84, 163, 5, 80, 246, 1, 167, 171, 13, 250, 92, 9, 175, 88, 254, 64, 230, 17, 183, 226, 68, 179, 21, 25, 191, 72, 238, 187, 29, 234, 76, 139, 45, 218, 124, 41, 143, 120, 222, 210, 116, 131, 37, 112, 214, 33, 135, 57, 159, 104, 206, 155, 61, 202, 108, 96, 198, 49, 151, 194, 100, 147, 53, 249, 95, 168, 14, 91, 253, 10, 172, 160, 6, 241, 87, 2, 164, 83, 245, 75, 237, 26, 188, 233, 79, 184, 30, 18, 180, 67, 229, 176, 22, 225, 71, 128, 38, 209, 119, 34, 132, 115, 213, 217, 127, 136, 46, 123, 221, 42, 140, 50, 148, 99, 197, 144, 54, 193, 103, 107, 205, 58, 156, 201, 111, 152, 62, 11, 173, 90, 252, 169, 15, 248, 94, 82, 244, 3, 165, 240, 86, 161, 7, 185, 31, 232, 78, 27, 189, 74, 236, 224, 70, 177, 23, 66, 228, 19, 181, 114, 212, 35, 133, 208, 118, 129, 39, 43, 141, 122, 220, 137, 47, 216, 126, 192, 102, 145, 55, 98, 196, 51, 149, 153, 63, 200, 110, 59, 157, 106, 204, ],
[0, 167, 83, 244, 166, 1, 245, 82, 81, 246, 2, 165, 247, 80, 164, 3, 162, 5, 241, 86, 4, 163, 87, 240, 243, 84, 160, 7, 85, 242, 6, 161, 89, 254, 10, 173, 255, 88, 172, 11, 8, 175, 91, 252, 174, 9, 253, 90, 251, 92, 168, 15, 93, 250, 14, 169, 170, 13, 249, 94, 12, 171, 95, 248, 178, 21, 225, 70, 20, 179, 71, 224, 227, 68, 176, 23, 69, 226, 22, 177, 16, 183, 67, 228, 182, 17, 229, 66, 65, 230, 18, 181, 231, 64, 180, 19, 235, 76, 184, 31, 77, 234, 30, 185, 186, 29, 233, 78, 28, 187, 79, 232, 73, 238, 26, 189, 239, 72, 188, 27, 24, 191, 75, 236, 190, 25, 237, 74, 121, 222, 42, 141, 223, 120, 140, 43, 40, 143, 123, 220, 142, 41, 221, 122, 219, 124, 136, 47, 125, 218, 46, 137, 138, 45, 217, 126, 44, 139, 127, 216, 32, 135, 115, 212, 134, 33, 213, 114, 113, 214, 34, 133, 215, 112, 132, 35, 130, 37, 209, 118, 36, 131, 119, 208, 211, 116, 128, 39, 117, 210, 38, 129, 203, 108, 152, 63, 109, 202, 62, 153, 154, 61, 201, 110, 60, 155, 111, 200, 105, 206, 58, 157, 207, 104, 156, 59, 56, 159, 107, 204, 158, 57, 205, 106, 146, 53, 193, 102, 52, 147, 103, 192, 195, 100, 144, 55, 101, 194, 54, 145, 48, 151, 99, 196, 150, 49, 197, 98, 97, 198, 50, 149, 199, 96, 148, 51, ],
[0, 168, 77, 229, 154, 50, 215, 127, 41, 129, 100, 204, 179, 27, 254, 86, 82, 250, 31, 183, 200, 96, 133, 45, 123, 211, 54, 158, 225, 73, 172, 4, 164, 12, 233, 65, 62, 150, 115, 219, 141, 37, 192, 104, 23, 191, 90, 242, 246, 94, 187, 19, 108, 196, 33, 137, 223, 119, 146, 58, 69, 237, 8, 160, 85, 253, 24, 176, 207, 103, 130, 42, 124, 212, 49, 153, 230, 78, 171, 3, 7, 175, 74, 226, 157, 53, 208, 120, 46, 134, 99, 203, 180, 28, 249, 81, 241, 89, 188, 20, 107, 195, 38, 142, 216, 112, 149, 61, 66, 234, 15, 167, 163, 11, 238, 70, 57, 145, 116, 220, 138, 34, 199, 111, 16, 184, 93, 245, 170, 2, 231, 79, 48, 152, 125, 213, 131, 43, 206, 102, 25, 177, 84, 252, 248, 80, 181, 29, 98, 202, 47, 135, 209, 121, 156, 52, 75, 227, 6, 174, 14, 166, 67, 235, 148, 60, 217, 113, 39, 143, 106, 194, 189, 21, 240, 88, 92, 244, 17, 185, 198, 110, 139, 35, 117, 221, 56, 144, 239, 71, 162, 10, 255, 87, 178, 26, 101, 205, 40, 128, 214, 126, 155, 51, 76, 228, 1, 169, 173, 5, 224, 72, 55, 159, 122, 210, 132, 44, 201, 97, 30, 182, 83, 251, 91, 243, 22, 190, 193, 105, 140, 36, 114, 218, 63, 151, 232, 64, 165, 13, 9, 161, 68, 236, 147, 59, 222, 118, 32, 136, 109, 197, 186, 18, 247, 95, ],
[0, 169, 79, 230, 158, 55, 209, 120, 33, 136, 110, 199, 191, 22, 240, 89, 66, 235, 13, 164, 220, 117, 147, 58, 99, 202, 44, 133, 253, 84, 178, 27, 132, 45, 203, 98, 26, 179, 85, 252, 165, 12, 234, 67, 59, 146, 116, 221, 198, 111, 137, 32, 88, 241, 23, 190, 231, 78, 168, 1, 121, 208, 54, 159, 21, 188, 90, 243, 139, 34, 196, 109, 52, 157, 123, 210, 170, 3, 229, 76, 87, 254, 24, 177, 201, 96, 134, 47, 118, 223, 57, 144, 232, 65, 167, 14, 145, 56, 222, 119, 15, 166, 64, 233, 176, 25, 255, 86, 46, 135, 97, 200, 211, 122, 156, 53, 77, 228, 2, 171, 242, 91, 189, 20, 108, 197, 35, 138, 42, 131, 101, 204, 180, 29, 251, 82, 11, 162, 68, 237, 149, 60, 218, 115, 104, 193, 39, 142, 246, 95, 185, 16, 73, 224, 6, 175, 215, 126, 152, 49, 174, 7, 225, 72, 48, 153, 127, 214, 143, 38, 192, 105, 17, 184, 94, 247, 236, 69, 163, 10, 114, 219, 61, 148, 205, 100, 130, 43, 83, 250, 28, 181, 63, 150, 112, 217, 161, 8, 238, 71, 30, 183, 81, 248, 128, 41, 207, 102, 125, 212, 50, 155, 227, 74, 172, 5, 92, 245, 19, 186, 194, 107, 141, 36, 187, 18, 244, 93, 37, 140, 106, 195, 154, 51, 213, 124, 4, 173, 75, 226, 249, 80, 182, 31, 103, 206, 40, 129, 216, 113, 151, 62, 70, 239, 9, 160, ],
[0, 170, 73, 227, 146, 56, 219, 113, 57, 147, 112, 218, 171, 1, 226, 72, 114, 216, 59, 145, 224, 74, 169, 3, 75, 225, 2, 168, 217, 115, 144, 58, 228, 78, 173, 7, 118, 220, 63, 149, 221, 119, 148, 62, 79, 229, 6, 172, 150, 60, 223, 117, 4, 174, 77, 231, 175, 5, 230, 76, 61, 151, 116, 222, 213, 127, 156, 54, 71, 237, 14, 164, 236, 70, 165, 15, 126, 212, 55, 157, 167, 13, 238, 68, 53, 159, 124, 214, 158, 52, 215, 125, 12, 166, 69, 239, 49, 155, 120, 210, 163, 9, 234, 64, 8, 162, 65, 235, 154, 48, 211, 121, 67, 233, 10, 160, 209, 123, 152, 50, 122, 208, 51, 153, 232, 66, 161, 11, 183, 29, 254, 84, 37, 143, 108, 198, 142, 36, 199, 109, 28, 182, 85, 255, 197, 111, 140, 38, 87, 253, 30, 180, 252, 86, 181, 31, 110, 196, 39, 141, 83, 249, 26, 176, 193, 107, 136, 34, 106, 192, 35, 137, 248, 82, 177, 27, 33, 139, 104, 194, 179, 25, 250, 80, 24, 178, 81, 251, 138, 32, 195, 105, 98, 200, 43, 129, 240, 90, 185, 19, 91, 241, 18, 184, 201, 99, 128, 42, 16, 186, 89, 243, 130, 40, 203, 97, 41, 131, 96, 202, 187, 17, 242, 88, 134, 44, 207, 101, 20, 190, 93, 247, 191, 21, 246, 92, 45, 135, 100, 206, 244, 94, 189, 23, 102, 204, 47, 133, 205, 103, 132, 46, 95, 245, 22, 188, ],
[0, 171, 75, 224, 150, 61, 221, 118, 49, 154, 122, 209, 167, 12, 236, 71, 98, 201, 41, 130, 244, 95, 191, 20, 83, 248, 24, 179, 197, 110, 142, 37, 196, 111, 143, 36, 82, 249, 25, 178, 245, 94, 190, 21, 99, 200, 40, 131, 166, 13, 237, 70, 48, 155, 123, 208, 151, 60, 220, 119, 1, 170, 74, 225, 149, 62, 222, 117, 3, 168, 72, 227, 164, 15, 239, 68, 50, 153, 121, 210, 247, 92, 188, 23, 97, 202, 42, 129, 198, 109, 141, 38, 80, 251, 27, 176, 81, 250, 26, 177, 199, 108, 140, 39, 96, 203, 43, 128, 246, 93, 189, 22, 51, 152, 120, 211, 165, 14, 238, 69, 2, 169, 73, 226, 148, 63, 223, 116, 55, 156, 124, 215, 161, 10, 234, 65, 6, 173, 77, 230, 144, 59, 219, 112, 85, 254, 30, 181, 195, 104, 136, 35, 100, 207, 47, 132, 242, 89, 185, 18, 243, 88, 184, 19, 101, 206, 46, 133, 194, 105, 137, 34, 84, 255, 31, 180, 145, 58, 218, 113, 7, 172, 76, 231, 160, 11, 235, 64, 54, 157, 125, 214, 162, 9, 233, 66, 52, 159, 127, 212, 147, 56, 216, 115, 5, 174, 78, 229, 192, 107, 139, 32, 86, 253, 29, 182, 241, 90, 186, 17, 103, 204, 44, 135, 102, 205, 45, 134, 240, 91, 187, 16, 87, 252, 28, 183, 193, 106, 138, 33, 4, 175, 79, 228, 146, 57, 217, 114, 53, 158, 126, 213, 163, 8, 232, 67, ],
[0, 172, 69, 233, 138, 38, 207, 99, 9, 165, 76, 224, 131, 47, 198, 106, 18, 190, 87, 251, 152, 52, 221, 113, 27, 183, 94, 242, 145, 61, 212, 120, 36, 136, 97, 205, 174, 2, 235, 71, 45, 129, 104, 196, 167, 11, 226, 78, 54, 154, 115, 223, 188, 16, 249, 85, 63, 147, 122, 214, 181, 25, 240, 92, 72, 228, 13, 161, 194, 110, 135, 43, 65, 237, 4, 168, 203, 103, 142, 34, 90, 246, 31, 179, 208, 124, 149, 57, 83, 255, 22, 186, 217, 117, 156, 48, 108, 192, 41, 133, 230, 74, 163, 15, 101, 201, 32, 140, 239, 67, 170, 6, 126, 210, 59, 151, 244, 88, 177, 29, 119, 219, 50, 158, 253, 81, 184, 20, 144, 60, 213, 121, 26, 182, 95, 243, 153, 53, 220, 112, 19, 191, 86, 250, 130, 46, 199, 107, 8, 164, 77, 225, 139, 39, 206, 98, 1, 173, 68, 232, 180, 24, 241, 93, 62, 146, 123, 215, 189, 17, 248, 84, 55, 155, 114, 222, 166, 10, 227, 79, 44, 128, 105, 197, 175, 3, 234, 70, 37, 137, 96, 204, 216, 116, 157, 49, 82, 254, 23, 187, 209, 125, 148, 56, 91, 247, 30, 178, 202, 102, 143, 35, 64, 236, 5, 169, 195, 111, 134, 42, 73, 229, 12, 160, 252, 80, 185, 21, 118, 218, 51, 159, 245, 89, 176, 28, 127, 211, 58, 150, 238, 66, 171, 7, 100, 200, 33, 141, 231, 75, 162, 14, 109, 193, 40, 132, ],
[0, 173, 71, 234, 142, 35, 201, 100, 1, 172, 70, 235, 143, 34, 200, 101, 2, 175, 69, 232, 140, 33, 203, 102, 3, 174, 68, 233, 141, 32, 202, 103, 4, 169, 67, 238, 138, 39, 205, 96, 5, 168, 66, 239, 139, 38, 204, 97, 6, 171, 65, 236, 136, 37, 207, 98, 7, 170, 64, 237, 137, 36, 206, 99, 8, 165, 79, 226, 134, 43, 193, 108, 9, 164, 78, 227, 135, 42, 192, 109, 10, 167, 77, 224, 132, 41, 195, 110, 11, 166, 76, 225, 133, 40, 194, 111, 12, 161, 75, 230, 130, 47, 197, 104, 13, 160, 74, 231, 131, 46, 196, 105, 14, 163, 73, 228, 128, 45, 199, 106, 15, 162, 72, 229, 129, 44, 198, 107, 16, 189, 87, 250, 158, 51, 217, 116, 17, 188, 86, 251, 159, 50, 216, 117, 18, 191, 85, 248, 156, 49, 219, 118, 19, 190, 84, 249, 157, 48, 218, 119, 20, 185, 83, 254, 154, 55, 221, 112, 21, 184, 82, 255, 155, 54, 220, 113, 22, 187, 81, 252, 152, 53, 223, 114, 23, 186, 80, 253, 153, 52, 222, 115, 24, 181, 95, 242, 150, 59, 209, 124, 25, 180, 94, 243, 151, 58, 208, 125, 26, 183, 93, 240, 148, 57, 211, 126, 27, 182, 92, 241, 149, 56, 210, 127, 28, 177, 91, 246, 146, 63, 213, 120, 29, 176, 90, 247, 147, 62, 212, 121, 30, 179, 89, 244, 144, 61, 215, 122, 31, 178, 88, 245, 145, 60, 214, 123, ],
[0, 174, 65, 239, 130, 44, 195, 109, 25, 183, 88, 246, 155, 53, 218, 116, 50, 156, 115, 221, 176, 30, 241, 95, 43, 133, 106, 196, 169, 7, 232, 70, 100, 202, 37, 139, 230, 72, 167, 9, 125, 211, 60, 146, 255, 81, 190, 16, 86, 248, 23, 185, 212, 122, 149, 59, 79, 225, 14, 160, 205, 99, 140, 34, 200, 102, 137, 39, 74, 228, 11, 165, 209, 127, 144, 62, 83, 253, 18, 188, 250, 84, 187, 21, 120, 214, 57, 151, 227, 77, 162, 12, 97, 207, 32, 142, 172, 2, 237, 67, 46, 128, 111, 193, 181, 27, 244, 90, 55, 153, 118, 216, 158, 48, 223, 113, 28, 178, 93, 243, 135, 41, 198, 104, 5, 171, 68, 234, 141, 35, 204, 98, 15, 161, 78, 224, 148, 58, 213, 123, 22, 184, 87, 249, 191, 17, 254, 80, 61, 147, 124, 210, 166, 8, 231, 73, 36, 138, 101, 203, 233, 71, 168, 6, 107, 197, 42, 132, 240, 94, 177, 31, 114, 220, 51, 157, 219, 117, 154, 52, 89, 247, 24, 182, 194, 108, 131, 45, 64, 238, 1, 175, 69, 235, 4, 170, 199, 105, 134, 40, 92, 242, 29, 179, 222, 112, 159, 49, 119, 217, 54, 152, 245, 91, 180, 26, 110, 192, 47, 129, 236, 66, 173, 3, 33, 143, 96, 206, 163, 13, 226, 76, 56, 150, 121, 215, 186, 20, 251, 85, 19, 189, 82, 252, 145, 63, 208, 126, 10, 164, 75, 229, 136, 38, 201, 103, ],
[0, 175, 67, 236, 134, 41, 197, 106, 17, 190, 82, 253, 151, 56, 212, 123, 34, 141, 97, 206, 164, 11, 231, 72, 51, 156, 112, 223, 181, 26, 246, 89, 68, 235, 7, 168, 194, 109, 129, 46, 85, 250, 22, 185, 211, 124, 144, 63, 102, 201, 37, 138, 224, 79, 163, 12, 119, 216, 52, 155, 241, 94, 178, 29, 136, 39, 203, 100, 14, 161, 77, 226, 153, 54, 218, 117, 31, 176, 92, 243, 170, 5, 233, 70, 44, 131, 111, 192, 187, 20, 248, 87, 61, 146, 126, 209, 204, 99, 143, 32, 74, 229, 9, 166, 221, 114, 158, 49, 91, 244, 24, 183, 238, 65, 173, 2, 104, 199, 43, 132, 255, 80, 188, 19, 121, 214, 58, 149, 13, 162, 78, 225, 139, 36, 200, 103, 28, 179, 95, 240, 154, 53, 217, 118, 47, 128, 108, 195, 169, 6, 234, 69, 62, 145, 125, 210, 184, 23, 251, 84, 73, 230, 10, 165, 207, 96, 140, 35, 88, 247, 27, 180, 222, 113, 157, 50, 107, 196, 40, 135, 237, 66, 174, 1, 122, 213, 57, 150, 252, 83, 191, 16, 133, 42, 198, 105, 3, 172, 64, 239, 148, 59, 215, 120, 18, 189, 81, 254, 167, 8, 228, 75, 33, 142, 98, 205, 182, 25, 245, 90, 48, 159, 115, 220, 193, 110, 130, 45, 71, 232, 4, 171, 208, 127, 147, 60, 86, 249, 21, 186, 227, 76, 160, 15, 101, 202, 38, 137, 242, 93, 177, 30, 116, 219, 55, 152, ],
[0, 176, 125, 205, 250, 74, 135, 55, 233, 89, 148, 36, 19, 163, 110, 222, 207, 127, 178, 2, 53, 133, 72, 248, 38, 150, 91, 235, 220, 108, 161, 17, 131, 51, 254, 78, 121, 201, 4, 180, 106, 218, 23, 167, 144, 32, 237, 93, 76, 252, 49, 129, 182, 6, 203, 123, 165, 21, 216, 104, 95, 239, 34, 146, 27, 171, 102, 214, 225, 81, 156, 44, 242, 66, 143, 63, 8, 184, 117, 197, 212, 100, 169, 25, 46, 158, 83, 227, 61, 141, 64, 240, 199, 119, 186, 10, 152, 40, 229, 85, 98, 210, 31, 175, 113, 193, 12, 188, 139, 59, 246, 70, 87, 231, 42, 154, 173, 29, 208, 96, 190, 14, 195, 115, 68, 244, 57, 137, 54, 134, 75, 251, 204, 124, 177, 1, 223, 111, 162, 18, 37, 149, 88, 232, 249, 73, 132, 52, 3, 179, 126, 206, 16, 160, 109, 221, 234, 90, 151, 39, 181, 5, 200, 120, 79, 255, 50, 130, 92, 236, 33, 145, 166, 22, 219, 107, 122, 202, 7, 183, 128, 48, 253, 77, 147, 35, 238, 94, 105, 217, 20, 164, 45, 157, 80, 224, 215, 103, 170, 26, 196, 116, 185, 9, 62, 142, 67, 243, 226, 82, 159, 47, 24, 168, 101, 213, 11, 187, 118, 198, 241, 65, 140, 60, 174, 30, 211, 99, 84, 228, 41, 153, 71, 247, 58, 138, 189, 13, 192, 112, 97, 209, 28, 172, 155, 43, 230, 86, 136, 56, 245, 69, 114, 194, 15, 191, ],
[0, 177, 127, 206, 254, 79, 129, 48, 225, 80, 158, 47, 31, 174, 96, 209, 223, 110, 160, 17, 33, 144, 94, 239, 62, 143, 65, 240, 192, 113, 191, 14, 163, 18, 220, 109, 93, 236, 34, 147, 66, 243, 61, 140, 188, 13, 195, 114, 124, 205, 3, 178, 130, 51, 253, 76, 157, 44, 226, 83, 99, 210, 28, 173, 91, 234, 36, 149, 165, 20, 218, 107, 186, 11, 197, 116, 68, 245, 59, 138, 132, 53, 251, 74, 122, 203, 5, 180, 101, 212, 26, 171, 155, 42, 228, 85, 248, 73, 135, 54, 6, 183, 121, 200, 25, 168, 102, 215, 231, 86, 152, 41, 39, 150, 88, 233, 217, 104, 166, 23, 198, 119, 185, 8, 56, 137, 71, 246, 182, 7, 201, 120, 72, 249, 55, 134, 87, 230, 40, 153, 169, 24, 214, 103, 105, 216, 22, 167, 151, 38, 232, 89, 136, 57, 247, 70, 118, 199, 9, 184, 21, 164, 106, 219, 235, 90, 148, 37, 244, 69, 139, 58, 10, 187, 117, 196, 202, 123, 181, 4, 52, 133, 75, 250, 43, 154, 84, 229, 213, 100, 170, 27, 237, 92, 146, 35, 19, 162, 108, 221, 12, 189, 115, 194, 242, 67, 141, 60, 50, 131, 77, 252, 204, 125, 179, 2, 211, 98, 172, 29, 45, 156, 82, 227, 78, 255, 49, 128, 176, 1, 207, 126, 175, 30, 208, 97, 81, 224, 46, 159, 145, 32, 238, 95, 111, 222, 16, 161, 112, 193, 15, 190, 142, 63, 241, 64, ],
[0, 178, 121, 203, 242, 64, 139, 57, 249, 75, 128, 50, 11, 185, 114, 192, 239, 93, 150, 36, 29, 175, 100, 214, 22, 164, 111, 221, 228, 86, 157, 47, 195, 113, 186, 8, 49, 131, 72, 250, 58, 136, 67, 241, 200, 122, 177, 3, 44, 158, 85, 231, 222, 108, 167, 21, 213, 103, 172, 30, 39, 149, 94, 236, 155, 41, 226, 80, 105, 219, 16, 162, 98, 208, 27, 169, 144, 34, 233, 91, 116, 198, 13, 191, 134, 52, 255, 77, 141, 63, 244, 70, 127, 205, 6, 180, 88, 234, 33, 147, 170, 24, 211, 97, 161, 19, 216, 106, 83, 225, 42, 152, 183, 5, 206, 124, 69, 247, 60, 142, 78, 252, 55, 133, 188, 14, 197, 119, 43, 153, 82, 224, 217, 107, 160, 18, 210, 96, 171, 25, 32, 146, 89, 235, 196, 118, 189, 15, 54, 132, 79, 253, 61, 143, 68, 246, 207, 125, 182, 4, 232, 90, 145, 35, 26, 168, 99, 209, 17, 163, 104, 218, 227, 81, 154, 40, 7, 181, 126, 204, 245, 71, 140, 62, 254, 76, 135, 53, 12, 190, 117, 199, 176, 2, 201, 123, 66, 240, 59, 137, 73, 251, 48, 130, 187, 9, 194, 112, 95, 237, 38, 148, 173, 31, 212, 102, 166, 20, 223, 109, 84, 230, 45, 159, 115, 193, 10, 184, 129, 51, 248, 74, 138, 56, 243, 65, 120, 202, 1, 179, 156, 46, 229, 87, 110, 220, 23, 165, 101, 215, 28, 174, 151, 37, 238, 92, ],
[0, 179, 123, 200, 246, 69, 141, 62, 241, 66, 138, 57, 7, 180, 124, 207, 255, 76, 132, 55, 9, 186, 114, 193, 14, 189, 117, 198, 248, 75, 131, 48, 227, 80, 152, 43, 21, 166, 110, 221, 18, 161, 105, 218, 228, 87, 159, 44, 28, 175, 103, 212, 234, 89, 145, 34, 237, 94, 150, 37, 27, 168, 96, 211, 219, 104, 160, 19, 45, 158, 86, 229, 42, 153, 81, 226, 220, 111, 167, 20, 36, 151, 95, 236, 210, 97, 169, 26, 213, 102, 174, 29, 35, 144, 88, 235, 56, 139, 67, 240, 206, 125, 181, 6, 201, 122, 178, 1, 63, 140, 68, 247, 199, 116, 188, 15, 49, 130, 74, 249, 54, 133, 77, 254, 192, 115, 187, 8, 171, 24, 208, 99, 93, 238, 38, 149, 90, 233, 33, 146, 172, 31, 215, 100, 84, 231, 47, 156, 162, 17, 217, 106, 165, 22, 222, 109, 83, 224, 40, 155, 72, 251, 51, 128, 190, 13, 197, 118, 185, 10, 194, 113, 79, 252, 52, 135, 183, 4, 204, 127, 65, 242, 58, 137, 70, 245, 61, 142, 176, 3, 203, 120, 112, 195, 11, 184, 134, 53, 253, 78, 129, 50, 250, 73, 119, 196, 12, 191, 143, 60, 244, 71, 121, 202, 2, 177, 126, 205, 5, 182, 136, 59, 243, 64, 147, 32, 232, 91, 101, 214, 30, 173, 98, 209, 25, 170, 148, 39, 239, 92, 108, 223, 23, 164, 154, 41, 225, 82, 157, 46, 230, 85, 107, 216, 16, 163, ],
[0, 180, 117, 193, 234, 94, 159, 43, 201, 125, 188, 8, 35, 151, 86, 226, 143, 59, 250, 78, 101, 209, 16, 164, 70, 242, 51, 135, 172, 24, 217, 109, 3, 183, 118, 194, 233, 93, 156, 40, 202, 126, 191, 11, 32, 148, 85, 225, 140, 56, 249, 77, 102, 210, 19, 167, 69, 241, 48, 132, 175, 27, 218, 110, 6, 178, 115, 199, 236, 88, 153, 45, 207, 123, 186, 14, 37, 145, 80, 228, 137, 61, 252, 72, 99, 215, 22, 162, 64, 244, 53, 129, 170, 30, 223, 107, 5, 177, 112, 196, 239, 91, 154, 46, 204, 120, 185, 13, 38, 146, 83, 231, 138, 62, 255, 75, 96, 212, 21, 161, 67, 247, 54, 130, 169, 29, 220, 104, 12, 184, 121, 205, 230, 82, 147, 39, 197, 113, 176, 4, 47, 155, 90, 238, 131, 55, 246, 66, 105, 221, 28, 168, 74, 254, 63, 139, 160, 20, 213, 97, 15, 187, 122, 206, 229, 81, 144, 36, 198, 114, 179, 7, 44, 152, 89, 237, 128, 52, 245, 65, 106, 222, 31, 171, 73, 253, 60, 136, 163, 23, 214, 98, 10, 190, 127, 203, 224, 84, 149, 33, 195, 119, 182, 2, 41, 157, 92, 232, 133, 49, 240, 68, 111, 219, 26, 174, 76, 248, 57, 141, 166, 18, 211, 103, 9, 189, 124, 200, 227, 87, 150, 34, 192, 116, 181, 1, 42, 158, 95, 235, 134, 50, 243, 71, 108, 216, 25, 173, 79, 251, 58, 142, 165, 17, 208, 100, ],
[0, 181, 119, 194, 238, 91, 153, 44, 193, 116, 182, 3, 47, 154, 88, 237, 159, 42, 232, 93, 113, 196, 6, 179, 94, 235, 41, 156, 176, 5, 199, 114, 35, 150, 84, 225, 205, 120, 186, 15, 226, 87, 149, 32, 12, 185, 123, 206, 188, 9, 203, 126, 82, 231, 37, 144, 125, 200, 10, 191, 147, 38, 228, 81, 70, 243, 49, 132, 168, 29, 223, 106, 135, 50, 240, 69, 105, 220, 30, 171, 217, 108, 174, 27, 55, 130, 64, 245, 24, 173, 111, 218, 246, 67, 129, 52, 101, 208, 18, 167, 139, 62, 252, 73, 164, 17, 211, 102, 74, 255, 61, 136, 250, 79, 141, 56, 20, 161, 99, 214, 59, 142, 76, 249, 213, 96, 162, 23, 140, 57, 251, 78, 98, 215, 21, 160, 77, 248, 58, 143, 163, 22, 212, 97, 19, 166, 100, 209, 253, 72, 138, 63, 210, 103, 165, 16, 60, 137, 75, 254, 175, 26, 216, 109, 65, 244, 54, 131, 110, 219, 25, 172, 128, 53, 247, 66, 48, 133, 71, 242, 222, 107, 169, 28, 241, 68, 134, 51, 31, 170, 104, 221, 202, 127, 189, 8, 36, 145, 83, 230, 11, 190, 124, 201, 229, 80, 146, 39, 85, 224, 34, 151, 187, 14, 204, 121, 148, 33, 227, 86, 122, 207, 13, 184, 233, 92, 158, 43, 7, 178, 112, 197, 40, 157, 95, 234, 198, 115, 177, 4, 118, 195, 1, 180, 152, 45, 239, 90, 183, 2, 192, 117, 89, 236, 46, 155, ],
[0, 182, 113, 199, 226, 84, 147, 37, 217, 111, 168, 30, 59, 141, 74, 252, 175, 25, 222, 104, 77, 251, 60, 138, 118, 192, 7, 177, 148, 34, 229, 83, 67, 245, 50, 132, 161, 23, 208, 102, 154, 44, 235, 93, 120, 206, 9, 191, 236, 90, 157, 43, 14, 184, 127, 201, 53, 131, 68, 242, 215, 97, 166, 16, 134, 48, 247, 65, 100, 210, 21, 163, 95, 233, 46, 152, 189, 11, 204, 122, 41, 159, 88, 238, 203, 125, 186, 12, 240, 70, 129, 55, 18, 164, 99, 213, 197, 115, 180, 2, 39, 145, 86, 224, 28, 170, 109, 219, 254, 72, 143, 57, 106, 220, 27, 173, 136, 62, 249, 79, 179, 5, 194, 116, 81, 231, 32, 150, 17, 167, 96, 214, 243, 69, 130, 52, 200, 126, 185, 15, 42, 156, 91, 237, 190, 8, 207, 121, 92, 234, 45, 155, 103, 209, 22, 160, 133, 51, 244, 66, 82, 228, 35, 149, 176, 6, 193, 119, 139, 61, 250, 76, 105, 223, 24, 174, 253, 75, 140, 58, 31, 169, 110, 216, 36, 146, 85, 227, 198, 112, 183, 1, 151, 33, 230, 80, 117, 195, 4, 178, 78, 248, 63, 137, 172, 26, 221, 107, 56, 142, 73, 255, 218, 108, 171, 29, 225, 87, 144, 38, 3, 181, 114, 196, 212, 98, 165, 19, 54, 128, 71, 241, 13, 187, 124, 202, 239, 89, 158, 40, 123, 205, 10, 188, 153, 47, 232, 94, 162, 20, 211, 101, 64, 246, 49, 135, ],
[0, 183, 115, 196, 230, 81, 149, 34, 209, 102, 162, 21, 55, 128, 68, 243, 191, 8, 204, 123, 89, 238, 42, 157, 110, 217, 29, 170, 136, 63, 251, 76, 99, 212, 16, 167, 133, 50, 246, 65, 178, 5, 193, 118, 84, 227, 39, 144, 220, 107, 175, 24, 58, 141, 73, 254, 13, 186, 126, 201, 235, 92, 152, 47, 198, 113, 181, 2, 32, 151, 83, 228, 23, 160, 100, 211, 241, 70, 130, 53, 121, 206, 10, 189, 159, 40, 236, 91, 168, 31, 219, 108, 78, 249, 61, 138, 165, 18, 214, 97, 67, 244, 48, 135, 116, 195, 7, 176, 146, 37, 225, 86, 26, 173, 105, 222, 252, 75, 143, 56, 203, 124, 184, 15, 45, 154, 94, 233, 145, 38, 226, 85, 119, 192, 4, 179, 64, 247, 51, 132, 166, 17, 213, 98, 46, 153, 93, 234, 200, 127, 187, 12, 255, 72, 140, 59, 25, 174, 106, 221, 242, 69, 129, 54, 20, 163, 103, 208, 35, 148, 80, 231, 197, 114, 182, 1, 77, 250, 62, 137, 171, 28, 216, 111, 156, 43, 239, 88, 122, 205, 9, 190, 87, 224, 36, 147, 177, 6, 194, 117, 134, 49, 245, 66, 96, 215, 19, 164, 232, 95, 155, 44, 14, 185, 125, 202, 57, 142, 74, 253, 223, 104, 172, 27, 52, 131, 71, 240, 210, 101, 161, 22, 229, 82, 150, 33, 3, 180, 112, 199, 139, 60, 248, 79, 109, 218, 30, 169, 90, 237, 41, 158, 188, 11, 207, 120, ],
[0, 184, 109, 213, 218, 98, 183, 15, 169, 17, 196, 124, 115, 203, 30, 166, 79, 247, 34, 154, 149, 45, 248, 64, 230, 94, 139, 51, 60, 132, 81, 233, 158, 38, 243, 75, 68, 252, 41, 145, 55, 143, 90, 226, 237, 85, 128, 56, 209, 105, 188, 4, 11, 179, 102, 222, 120, 192, 21, 173, 162, 26, 207, 119, 33, 153, 76, 244, 251, 67, 150, 46, 136, 48, 229, 93, 82, 234, 63, 135, 110, 214, 3, 187, 180, 12, 217, 97, 199, 127, 170, 18, 29, 165, 112, 200, 191, 7, 210, 106, 101, 221, 8, 176, 22, 174, 123, 195, 204, 116, 161, 25, 240, 72, 157, 37, 42, 146, 71, 255, 89, 225, 52, 140, 131, 59, 238, 86, 66, 250, 47, 151, 152, 32, 245, 77, 235, 83, 134, 62, 49, 137, 92, 228, 13, 181, 96, 216, 215, 111, 186, 2, 164, 28, 201, 113, 126, 198, 19, 171, 220, 100, 177, 9, 6, 190, 107, 211, 117, 205, 24, 160, 175, 23, 194, 122, 147, 43, 254, 70, 73, 241, 36, 156, 58, 130, 87, 239, 224, 88, 141, 53, 99, 219, 14, 182, 185, 1, 212, 108, 202, 114, 167, 31, 16, 168, 125, 197, 44, 148, 65, 249, 246, 78, 155, 35, 133, 61, 232, 80, 95, 231, 50, 138, 253, 69, 144, 40, 39, 159, 74, 242, 84, 236, 57, 129, 142, 54, 227, 91, 178, 10, 223, 103, 104, 208, 5, 189, 27, 163, 118, 206, 193, 121, 172, 20, ],
[0, 185, 111, 214, 222, 103, 177, 8, 161, 24, 206, 119, 127, 198, 16, 169, 95, 230, 48, 137, 129, 56, 238, 87, 254, 71, 145, 40, 32, 153, 79, 246, 190, 7, 209, 104, 96, 217, 15, 182, 31, 166, 112, 201, 193, 120, 174, 23, 225, 88, 142, 55, 63, 134, 80, 233, 64, 249, 47, 150, 158, 39, 241, 72, 97, 216, 14, 183, 191, 6, 208, 105, 192, 121, 175, 22, 30, 167, 113, 200, 62, 135, 81, 232, 224, 89, 143, 54, 159, 38, 240, 73, 65, 248, 46, 151, 223, 102, 176, 9, 1, 184, 110, 215, 126, 199, 17, 168, 160, 25, 207, 118, 128, 57, 239, 86, 94, 231, 49, 136, 33, 152, 78, 247, 255, 70, 144, 41, 194, 123, 173, 20, 28, 165, 115, 202, 99, 218, 12, 181, 189, 4, 210, 107, 157, 36, 242, 75, 67, 250, 44, 149, 60, 133, 83, 234, 226, 91, 141, 52, 124, 197, 19, 170, 162, 27, 205, 116, 221, 100, 178, 11, 3, 186, 108, 213, 35, 154, 76, 245, 253, 68, 146, 43, 130, 59, 237, 84, 92, 229, 51, 138, 163, 26, 204, 117, 125, 196, 18, 171, 2, 187, 109, 212, 220, 101, 179, 10, 252, 69, 147, 42, 34, 155, 77, 244, 93, 228, 50, 139, 131, 58, 236, 85, 29, 164, 114, 203, 195, 122, 172, 21, 188, 5, 211, 106, 98, 219, 13, 180, 66, 251, 45, 148, 156, 37, 243, 74, 227, 90, 140, 53, 61, 132, 82, 235, ],
[0, 186, 105, 211, 210, 104, 187, 1, 185, 3, 208, 106, 107, 209, 2, 184, 111, 213, 6, 188, 189, 7, 212, 110, 214, 108, 191, 5, 4, 190, 109, 215, 222, 100, 183, 13, 12, 182, 101, 223, 103, 221, 14, 180, 181, 15, 220, 102, 177, 11, 216, 98, 99, 217, 10, 176, 8, 178, 97, 219, 218, 96, 179, 9, 161, 27, 200, 114, 115, 201, 26, 160, 24, 162, 113, 203, 202, 112, 163, 25, 206, 116, 167, 29, 28, 166, 117, 207, 119, 205, 30, 164, 165, 31, 204, 118, 127, 197, 22, 172, 173, 23, 196, 126, 198, 124, 175, 21, 20, 174, 125, 199, 16, 170, 121, 195, 194, 120, 171, 17, 169, 19, 192, 122, 123, 193, 18, 168, 95, 229, 54, 140, 141, 55, 228, 94, 230, 92, 143, 53, 52, 142, 93, 231, 48, 138, 89, 227, 226, 88, 139, 49, 137, 51, 224, 90, 91, 225, 50, 136, 129, 59, 232, 82, 83, 233, 58, 128, 56, 130, 81, 235, 234, 80, 131, 57, 238, 84, 135, 61, 60, 134, 85, 239, 87, 237, 62, 132, 133, 63, 236, 86, 254, 68, 151, 45, 44, 150, 69, 255, 71, 253, 46, 148, 149, 47, 252, 70, 145, 43, 248, 66, 67, 249, 42, 144, 40, 146, 65, 251, 250, 64, 147, 41, 32, 154, 73, 243, 242, 72, 155, 33, 153, 35, 240, 74, 75, 241, 34, 152, 79, 245, 38, 156, 157, 39, 244, 78, 246, 76, 159, 37, 36, 158, 77, 247, ],
[0, 187, 107, 208, 214, 109, 189, 6, 177, 10, 218, 97, 103, 220, 12, 183, 127, 196, 20, 175, 169, 18, 194, 121, 206, 117, 165, 30, 24, 163, 115, 200, 254, 69, 149, 46, 40, 147, 67, 248, 79, 244, 36, 159, 153, 34, 242, 73, 129, 58, 234, 81, 87, 236, 60, 135, 48, 139, 91, 224, 230, 93, 141, 54, 225, 90, 138, 49, 55, 140, 92, 231, 80, 235, 59, 128, 134, 61, 237, 86, 158, 37, 245, 78, 72, 243, 35, 152, 47, 148, 68, 255, 249, 66, 146, 41, 31, 164, 116, 207, 201, 114, 162, 25, 174, 21, 197, 126, 120, 195, 19, 168, 96, 219, 11, 176, 182, 13, 221, 102, 209, 106, 186, 1, 7, 188, 108, 215, 223, 100, 180, 15, 9, 178, 98, 217, 110, 213, 5, 190, 184, 3, 211, 104, 160, 27, 203, 112, 118, 205, 29, 166, 17, 170, 122, 193, 199, 124, 172, 23, 33, 154, 74, 241, 247, 76, 156, 39, 144, 43, 251, 64, 70, 253, 45, 150, 94, 229, 53, 142, 136, 51, 227, 88, 239, 84, 132, 63, 57, 130, 82, 233, 62, 133, 85, 238, 232, 83, 131, 56, 143, 52, 228, 95, 89, 226, 50, 137, 65, 250, 42, 145, 151, 44, 252, 71, 240, 75, 155, 32, 38, 157, 77, 246, 192, 123, 171, 16, 22, 173, 125, 198, 113, 202, 26, 161, 167, 28, 204, 119, 191, 4, 212, 111, 105, 210, 2, 185, 14, 181, 101, 222, 216, 99, 179, 8, ],
[0, 188, 101, 217, 202, 118, 175, 19, 137, 53, 236, 80, 67, 255, 38, 154, 15, 179, 106, 214, 197, 121, 160, 28, 134, 58, 227, 95, 76, 240, 41, 149, 30, 162, 123, 199, 212, 104, 177, 13, 151, 43, 242, 78, 93, 225, 56, 132, 17, 173, 116, 200, 219, 103, 190, 2, 152, 36, 253, 65, 82, 238, 55, 139, 60, 128, 89, 229, 246, 74, 147, 47, 181, 9, 208, 108, 127, 195, 26, 166, 51, 143, 86, 234, 249, 69, 156, 32, 186, 6, 223, 99, 112, 204, 21, 169, 34, 158, 71, 251, 232, 84, 141, 49, 171, 23, 206, 114, 97, 221, 4, 184, 45, 145, 72, 244, 231, 91, 130, 62, 164, 24, 193, 125, 110, 210, 11, 183, 120, 196, 29, 161, 178, 14, 215, 107, 241, 77, 148, 40, 59, 135, 94, 226, 119, 203, 18, 174, 189, 1, 216, 100, 254, 66, 155, 39, 52, 136, 81, 237, 102, 218, 3, 191, 172, 16, 201, 117, 239, 83, 138, 54, 37, 153, 64, 252, 105, 213, 12, 176, 163, 31, 198, 122, 224, 92, 133, 57, 42, 150, 79, 243, 68, 248, 33, 157, 142, 50, 235, 87, 205, 113, 168, 20, 7, 187, 98, 222, 75, 247, 46, 146, 129, 61, 228, 88, 194, 126, 167, 27, 8, 180, 109, 209, 90, 230, 63, 131, 144, 44, 245, 73, 211, 111, 182, 10, 25, 165, 124, 192, 85, 233, 48, 140, 159, 35, 250, 70, 220, 96, 185, 5, 22, 170, 115, 207, ],
[0, 189, 103, 218, 206, 115, 169, 20, 129, 60, 230, 91, 79, 242, 40, 149, 31, 162, 120, 197, 209, 108, 182, 11, 158, 35, 249, 68, 80, 237, 55, 138, 62, 131, 89, 228, 240, 77, 151, 42, 191, 2, 216, 101, 113, 204, 22, 171, 33, 156, 70, 251, 239, 82, 136, 53, 160, 29, 199, 122, 110, 211, 9, 180, 124, 193, 27, 166, 178, 15, 213, 104, 253, 64, 154, 39, 51, 142, 84, 233, 99, 222, 4, 185, 173, 16, 202, 119, 226, 95, 133, 56, 44, 145, 75, 246, 66, 255, 37, 152, 140, 49, 235, 86, 195, 126, 164, 25, 13, 176, 106, 215, 93, 224, 58, 135, 147, 46, 244, 73, 220, 97, 187, 6, 18, 175, 117, 200, 248, 69, 159, 34, 54, 139, 81, 236, 121, 196, 30, 163, 183, 10, 208, 109, 231, 90, 128, 61, 41, 148, 78, 243, 102, 219, 1, 188, 168, 21, 207, 114, 198, 123, 161, 28, 8, 181, 111, 210, 71, 250, 32, 157, 137, 52, 238, 83, 217, 100, 190, 3, 23, 170, 112, 205, 88, 229, 63, 130, 150, 43, 241, 76, 132, 57, 227, 94, 74, 247, 45, 144, 5, 184, 98, 223, 203, 118, 172, 17, 155, 38, 252, 65, 85, 232, 50, 143, 26, 167, 125, 192, 212, 105, 179, 14, 186, 7, 221, 96, 116, 201, 19, 174, 59, 134, 92, 225, 245, 72, 146, 47, 165, 24, 194, 127, 107, 214, 12, 177, 36, 153, 67, 254, 234, 87, 141, 48, ],
[0, 190, 97, 223, 194, 124, 163, 29, 153, 39, 248, 70, 91, 229, 58, 132, 47, 145, 78, 240, 237, 83, 140, 50, 182, 8, 215, 105, 116, 202, 21, 171, 94, 224, 63, 129, 156, 34, 253, 67, 199, 121, 166, 24, 5, 187, 100, 218, 113, 207, 16, 174, 179, 13, 210, 108, 232, 86, 137, 55, 42, 148, 75, 245, 188, 2, 221, 99, 126, 192, 31, 161, 37, 155, 68, 250, 231, 89, 134, 56, 147, 45, 242, 76, 81, 239, 48, 142, 10, 180, 107, 213, 200, 118, 169, 23, 226, 92, 131, 61, 32, 158, 65, 255, 123, 197, 26, 164, 185, 7, 216, 102, 205, 115, 172, 18, 15, 177, 110, 208, 84, 234, 53, 139, 150, 40, 247, 73, 101, 219, 4, 186, 167, 25, 198, 120, 252, 66, 157, 35, 62, 128, 95, 225, 74, 244, 43, 149, 136, 54, 233, 87, 211, 109, 178, 12, 17, 175, 112, 206, 59, 133, 90, 228, 249, 71, 152, 38, 162, 28, 195, 125, 96, 222, 1, 191, 20, 170, 117, 203, 214, 104, 183, 9, 141, 51, 236, 82, 79, 241, 46, 144, 217, 103, 184, 6, 27, 165, 122, 196, 64, 254, 33, 159, 130, 60, 227, 93, 246, 72, 151, 41, 52, 138, 85, 235, 111, 209, 14, 176, 173, 19, 204, 114, 135, 57, 230, 88, 69, 251, 36, 154, 30, 160, 127, 193, 220, 98, 189, 3, 168, 22, 201, 119, 106, 212, 11, 181, 49, 143, 80, 238, 243, 77, 146, 44, ],
[0, 191, 99, 220, 198, 121, 165, 26, 145, 46, 242, 77, 87, 232, 52, 139, 63, 128, 92, 227, 249, 70, 154, 37, 174, 17, 205, 114, 104, 215, 11, 180, 126, 193, 29, 162, 184, 7, 219, 100, 239, 80, 140, 51, 41, 150, 74, 245, 65, 254, 34, 157, 135, 56, 228, 91, 208, 111, 179, 12, 22, 169, 117, 202, 252, 67, 159, 32, 58, 133, 89, 230, 109, 210, 14, 177, 171, 20, 200, 119, 195, 124, 160, 31, 5, 186, 102, 217, 82, 237, 49, 142, 148, 43, 247, 72, 130, 61, 225, 94, 68, 251, 39, 152, 19, 172, 112, 207, 213, 106, 182, 9, 189, 2, 222, 97, 123, 196, 24, 167, 44, 147, 79, 240, 234, 85, 137, 54, 229, 90, 134, 57, 35, 156, 64, 255, 116, 203, 23, 168, 178, 13, 209, 110, 218, 101, 185, 6, 28, 163, 127, 192, 75, 244, 40, 151, 141, 50, 238, 81, 155, 36, 248, 71, 93, 226, 62, 129, 10, 181, 105, 214, 204, 115, 175, 16, 164, 27, 199, 120, 98, 221, 1, 190, 53, 138, 86, 233, 243, 76, 144, 47, 25, 166, 122, 197, 223, 96, 188, 3, 136, 55, 235, 84, 78, 241, 45, 146, 38, 153, 69, 250, 224, 95, 131, 60, 183, 8, 212, 107, 113, 206, 18, 173, 103, 216, 4, 187, 161, 30, 194, 125, 246, 73, 149, 42, 48, 143, 83, 236, 88, 231, 59, 132, 158, 33, 253, 66, 201, 118, 170, 21, 15, 176, 108, 211, ],
[0, 192, 157, 93, 39, 231, 186, 122, 78, 142, 211, 19, 105, 169, 244, 52, 156, 92, 1, 193, 187, 123, 38, 230, 210, 18, 79, 143, 245, 53, 104, 168, 37, 229, 184, 120, 2, 194, 159, 95, 107, 171, 246, 54, 76, 140, 209, 17, 185, 121, 36, 228, 158, 94, 3, 195, 247, 55, 106, 170, 208, 16, 77, 141, 74, 138, 215, 23, 109, 173, 240, 48, 4, 196, 153, 89, 35, 227, 190, 126, 214, 22, 75, 139, 241, 49, 108, 172, 152, 88, 5, 197, 191, 127, 34, 226, 111, 175, 242, 50, 72, 136, 213, 21, 33, 225, 188, 124, 6, 198, 155, 91, 243, 51, 110, 174, 212, 20, 73, 137, 189, 125, 32, 224, 154, 90, 7, 199, 148, 84, 9, 201, 179, 115, 46, 238, 218, 26, 71, 135, 253, 61, 96, 160, 8, 200, 149, 85, 47, 239, 178, 114, 70, 134, 219, 27, 97, 161, 252, 60, 177, 113, 44, 236, 150, 86, 11, 203, 255, 63, 98, 162, 216, 24, 69, 133, 45, 237, 176, 112, 10, 202, 151, 87, 99, 163, 254, 62, 68, 132, 217, 25, 222, 30, 67, 131, 249, 57, 100, 164, 144, 80, 13, 205, 183, 119, 42, 234, 66, 130, 223, 31, 101, 165, 248, 56, 12, 204, 145, 81, 43, 235, 182, 118, 251, 59, 102, 166, 220, 28, 65, 129, 181, 117, 40, 232, 146, 82, 15, 207, 103, 167, 250, 58, 64, 128, 221, 29, 41, 233, 180, 116, 14, 206, 147, 83, ],
[0, 193, 159, 94, 35, 226, 188, 125, 70, 135, 217, 24, 101, 164, 250, 59, 140, 77, 19, 210, 175, 110, 48, 241, 202, 11, 85, 148, 233, 40, 118, 183, 5, 196, 154, 91, 38, 231, 185, 120, 67, 130, 220, 29, 96, 161, 255, 62, 137, 72, 22, 215, 170, 107, 53, 244, 207, 14, 80, 145, 236, 45, 115, 178, 10, 203, 149, 84, 41, 232, 182, 119, 76, 141, 211, 18, 111, 174, 240, 49, 134, 71, 25, 216, 165, 100, 58, 251, 192, 1, 95, 158, 227, 34, 124, 189, 15, 206, 144, 81, 44, 237, 179, 114, 73, 136, 214, 23, 106, 171, 245, 52, 131, 66, 28, 221, 160, 97, 63, 254, 197, 4, 90, 155, 230, 39, 121, 184, 20, 213, 139, 74, 55, 246, 168, 105, 82, 147, 205, 12, 113, 176, 238, 47, 152, 89, 7, 198, 187, 122, 36, 229, 222, 31, 65, 128, 253, 60, 98, 163, 17, 208, 142, 79, 50, 243, 173, 108, 87, 150, 200, 9, 116, 181, 235, 42, 157, 92, 2, 195, 190, 127, 33, 224, 219, 26, 68, 133, 248, 57, 103, 166, 30, 223, 129, 64, 61, 252, 162, 99, 88, 153, 199, 6, 123, 186, 228, 37, 146, 83, 13, 204, 177, 112, 46, 239, 212, 21, 75, 138, 247, 54, 104, 169, 27, 218, 132, 69, 56, 249, 167, 102, 93, 156, 194, 3, 126, 191, 225, 32, 151, 86, 8, 201, 180, 117, 43, 234, 209, 16, 78, 143, 242, 51, 109, 172, ],
[0, 194, 153, 91, 47, 237, 182, 116, 94, 156, 199, 5, 113, 179, 232, 42, 188, 126, 37, 231, 147, 81, 10, 200, 226, 32, 123, 185, 205, 15, 84, 150, 101, 167, 252, 62, 74, 136, 211, 17, 59, 249, 162, 96, 20, 214, 141, 79, 217, 27, 64, 130, 246, 52, 111, 173, 135, 69, 30, 220, 168, 106, 49, 243, 202, 8, 83, 145, 229, 39, 124, 190, 148, 86, 13, 207, 187, 121, 34, 224, 118, 180, 239, 45, 89, 155, 192, 2, 40, 234, 177, 115, 7, 197, 158, 92, 175, 109, 54, 244, 128, 66, 25, 219, 241, 51, 104, 170, 222, 28, 71, 133, 19, 209, 138, 72, 60, 254, 165, 103, 77, 143, 212, 22, 98, 160, 251, 57, 137, 75, 16, 210, 166, 100, 63, 253, 215, 21, 78, 140, 248, 58, 97, 163, 53, 247, 172, 110, 26, 216, 131, 65, 107, 169, 242, 48, 68, 134, 221, 31, 236, 46, 117, 183, 195, 1, 90, 152, 178, 112, 43, 233, 157, 95, 4, 198, 80, 146, 201, 11, 127, 189, 230, 36, 14, 204, 151, 85, 33, 227, 184, 122, 67, 129, 218, 24, 108, 174, 245, 55, 29, 223, 132, 70, 50, 240, 171, 105, 255, 61, 102, 164, 208, 18, 73, 139, 161, 99, 56, 250, 142, 76, 23, 213, 38, 228, 191, 125, 9, 203, 144, 82, 120, 186, 225, 35, 87, 149, 206, 12, 154, 88, 3, 193, 181, 119, 44, 238, 196, 6, 93, 159, 235, 41, 114, 176, ],
[0, 195, 155, 88, 43, 232, 176, 115, 86, 149, 205, 14, 125, 190, 230, 37, 172, 111, 55, 244, 135, 68, 28, 223, 250, 57, 97, 162, 209, 18, 74, 137, 69, 134, 222, 29, 110, 173, 245, 54, 19, 208, 136, 75, 56, 251, 163, 96, 233, 42, 114, 177, 194, 1, 89, 154, 191, 124, 36, 231, 148, 87, 15, 204, 138, 73, 17, 210, 161, 98, 58, 249, 220, 31, 71, 132, 247, 52, 108, 175, 38, 229, 189, 126, 13, 206, 150, 85, 112, 179, 235, 40, 91, 152, 192, 3, 207, 12, 84, 151, 228, 39, 127, 188, 153, 90, 2, 193, 178, 113, 41, 234, 99, 160, 248, 59, 72, 139, 211, 16, 53, 246, 174, 109, 30, 221, 133, 70, 9, 202, 146, 81, 34, 225, 185, 122, 95, 156, 196, 7, 116, 183, 239, 44, 165, 102, 62, 253, 142, 77, 21, 214, 243, 48, 104, 171, 216, 27, 67, 128, 76, 143, 215, 20, 103, 164, 252, 63, 26, 217, 129, 66, 49, 242, 170, 105, 224, 35, 123, 184, 203, 8, 80, 147, 182, 117, 45, 238, 157, 94, 6, 197, 131, 64, 24, 219, 168, 107, 51, 240, 213, 22, 78, 141, 254, 61, 101, 166, 47, 236, 180, 119, 4, 199, 159, 92, 121, 186, 226, 33, 82, 145, 201, 10, 198, 5, 93, 158, 237, 46, 118, 181, 144, 83, 11, 200, 187, 120, 32, 227, 106, 169, 241, 50, 65, 130, 218, 25, 60, 255, 167, 100, 23, 212, 140, 79, ],
[0, 196, 149, 81, 55, 243, 162, 102, 110, 170, 251, 63, 89, 157, 204, 8, 220, 24, 73, 141, 235, 47, 126, 186, 178, 118, 39, 227, 133, 65, 16, 212, 165, 97, 48, 244, 146, 86, 7, 195, 203, 15, 94, 154, 252, 56, 105, 173, 121, 189, 236, 40, 78, 138, 219, 31, 23, 211, 130, 70, 32, 228, 181, 113, 87, 147, 194, 6, 96, 164, 245, 49, 57, 253, 172, 104, 14, 202, 155, 95, 139, 79, 30, 218, 188, 120, 41, 237, 229, 33, 112, 180, 210, 22, 71, 131, 242, 54, 103, 163, 197, 1, 80, 148, 156, 88, 9, 205, 171, 111, 62, 250, 46, 234, 187, 127, 25, 221, 140, 72, 64, 132, 213, 17, 119, 179, 226, 38, 174, 106, 59, 255, 153, 93, 12, 200, 192, 4, 85, 145, 247, 51, 98, 166, 114, 182, 231, 35, 69, 129, 208, 20, 28, 216, 137, 77, 43, 239, 190, 122, 11, 207, 158, 90, 60, 248, 169, 109, 101, 161, 240, 52, 82, 150, 199, 3, 215, 19, 66, 134, 224, 36, 117, 177, 185, 125, 44, 232, 142, 74, 27, 223, 249, 61, 108, 168, 206, 10, 91, 159, 151, 83, 2, 198, 160, 100, 53, 241, 37, 225, 176, 116, 18, 214, 135, 67, 75, 143, 222, 26, 124, 184, 233, 45, 92, 152, 201, 13, 107, 175, 254, 58, 50, 246, 167, 99, 5, 193, 144, 84, 128, 68, 21, 209, 183, 115, 34, 230, 238, 42, 123, 191, 217, 29, 76, 136, ],
[0, 197, 151, 82, 51, 246, 164, 97, 102, 163, 241, 52, 85, 144, 194, 7, 204, 9, 91, 158, 255, 58, 104, 173, 170, 111, 61, 248, 153, 92, 14, 203, 133, 64, 18, 215, 182, 115, 33, 228, 227, 38, 116, 177, 208, 21, 71, 130, 73, 140, 222, 27, 122, 191, 237, 40, 47, 234, 184, 125, 28, 217, 139, 78, 23, 210, 128, 69, 36, 225, 179, 118, 113, 180, 230, 35, 66, 135, 213, 16, 219, 30, 76, 137, 232, 45, 127, 186, 189, 120, 42, 239, 142, 75, 25, 220, 146, 87, 5, 192, 161, 100, 54, 243, 244, 49, 99, 166, 199, 2, 80, 149, 94, 155, 201, 12, 109, 168, 250, 63, 56, 253, 175, 106, 11, 206, 156, 89, 46, 235, 185, 124, 29, 216, 138, 79, 72, 141, 223, 26, 123, 190, 236, 41, 226, 39, 117, 176, 209, 20, 70, 131, 132, 65, 19, 214, 183, 114, 32, 229, 171, 110, 60, 249, 152, 93, 15, 202, 205, 8, 90, 159, 254, 59, 105, 172, 103, 162, 240, 53, 84, 145, 195, 6, 1, 196, 150, 83, 50, 247, 165, 96, 57, 252, 174, 107, 10, 207, 157, 88, 95, 154, 200, 13, 108, 169, 251, 62, 245, 48, 98, 167, 198, 3, 81, 148, 147, 86, 4, 193, 160, 101, 55, 242, 188, 121, 43, 238, 143, 74, 24, 221, 218, 31, 77, 136, 233, 44, 126, 187, 112, 181, 231, 34, 67, 134, 212, 17, 22, 211, 129, 68, 37, 224, 178, 119, ],
[0, 198, 145, 87, 63, 249, 174, 104, 126, 184, 239, 41, 65, 135, 208, 22, 252, 58, 109, 171, 195, 5, 82, 148, 130, 68, 19, 213, 189, 123, 44, 234, 229, 35, 116, 178, 218, 28, 75, 141, 155, 93, 10, 204, 164, 98, 53, 243, 25, 223, 136, 78, 38, 224, 183, 113, 103, 161, 246, 48, 88, 158, 201, 15, 215, 17, 70, 128, 232, 46, 121, 191, 169, 111, 56, 254, 150, 80, 7, 193, 43, 237, 186, 124, 20, 210, 133, 67, 85, 147, 196, 2, 106, 172, 251, 61, 50, 244, 163, 101, 13, 203, 156, 90, 76, 138, 221, 27, 115, 181, 226, 36, 206, 8, 95, 153, 241, 55, 96, 166, 176, 118, 33, 231, 143, 73, 30, 216, 179, 117, 34, 228, 140, 74, 29, 219, 205, 11, 92, 154, 242, 52, 99, 165, 79, 137, 222, 24, 112, 182, 225, 39, 49, 247, 160, 102, 14, 200, 159, 89, 86, 144, 199, 1, 105, 175, 248, 62, 40, 238, 185, 127, 23, 209, 134, 64, 170, 108, 59, 253, 149, 83, 4, 194, 212, 18, 69, 131, 235, 45, 122, 188, 100, 162, 245, 51, 91, 157, 202, 12, 26, 220, 139, 77, 37, 227, 180, 114, 152, 94, 9, 207, 167, 97, 54, 240, 230, 32, 119, 177, 217, 31, 72, 142, 129, 71, 16, 214, 190, 120, 47, 233, 255, 57, 110, 168, 192, 6, 81, 151, 125, 187, 236, 42, 66, 132, 211, 21, 3, 197, 146, 84, 60, 250, 173, 107, ],
[0, 199, 147, 84, 59, 252, 168, 111, 118, 177, 229, 34, 77, 138, 222, 25, 236, 43, 127, 184, 215, 16, 68, 131, 154, 93, 9, 206, 161, 102, 50, 245, 197, 2, 86, 145, 254, 57, 109, 170, 179, 116, 32, 231, 136, 79, 27, 220, 41, 238, 186, 125, 18, 213, 129, 70, 95, 152, 204, 11, 100, 163, 247, 48, 151, 80, 4, 195, 172, 107, 63, 248, 225, 38, 114, 181, 218, 29, 73, 142, 123, 188, 232, 47, 64, 135, 211, 20, 13, 202, 158, 89, 54, 241, 165, 98, 82, 149, 193, 6, 105, 174, 250, 61, 36, 227, 183, 112, 31, 216, 140, 75, 190, 121, 45, 234, 133, 66, 22, 209, 200, 15, 91, 156, 243, 52, 96, 167, 51, 244, 160, 103, 8, 207, 155, 92, 69, 130, 214, 17, 126, 185, 237, 42, 223, 24, 76, 139, 228, 35, 119, 176, 169, 110, 58, 253, 146, 85, 1, 198, 246, 49, 101, 162, 205, 10, 94, 153, 128, 71, 19, 212, 187, 124, 40, 239, 26, 221, 137, 78, 33, 230, 178, 117, 108, 171, 255, 56, 87, 144, 196, 3, 164, 99, 55, 240, 159, 88, 12, 203, 210, 21, 65, 134, 233, 46, 122, 189, 72, 143, 219, 28, 115, 180, 224, 39, 62, 249, 173, 106, 5, 194, 150, 81, 97, 166, 242, 53, 90, 157, 201, 14, 23, 208, 132, 67, 44, 235, 191, 120, 141, 74, 30, 217, 182, 113, 37, 226, 251, 60, 104, 175, 192, 7, 83, 148, ],
[0, 200, 141, 69, 7, 207, 138, 66, 14, 198, 131, 75, 9, 193, 132, 76, 28, 212, 145, 89, 27, 211, 150, 94, 18, 218, 159, 87, 21, 221, 152, 80, 56, 240, 181, 125, 63, 247, 178, 122, 54, 254, 187, 115, 49, 249, 188, 116, 36, 236, 169, 97, 35, 235, 174, 102, 42, 226, 167, 111, 45, 229, 160, 104, 112, 184, 253, 53, 119, 191, 250, 50, 126, 182, 243, 59, 121, 177, 244, 60, 108, 164, 225, 41, 107, 163, 230, 46, 98, 170, 239, 39, 101, 173, 232, 32, 72, 128, 197, 13, 79, 135, 194, 10, 70, 142, 203, 3, 65, 137, 204, 4, 84, 156, 217, 17, 83, 155, 222, 22, 90, 146, 215, 31, 93, 149, 208, 24, 224, 40, 109, 165, 231, 47, 106, 162, 238, 38, 99, 171, 233, 33, 100, 172, 252, 52, 113, 185, 251, 51, 118, 190, 242, 58, 127, 183, 245, 61, 120, 176, 216, 16, 85, 157, 223, 23, 82, 154, 214, 30, 91, 147, 209, 25, 92, 148, 196, 12, 73, 129, 195, 11, 78, 134, 202, 2, 71, 143, 205, 5, 64, 136, 144, 88, 29, 213, 151, 95, 26, 210, 158, 86, 19, 219, 153, 81, 20, 220, 140, 68, 1, 201, 139, 67, 6, 206, 130, 74, 15, 199, 133, 77, 8, 192, 168, 96, 37, 237, 175, 103, 34, 234, 166, 110, 43, 227, 161, 105, 44, 228, 180, 124, 57, 241, 179, 123, 62, 246, 186, 114, 55, 255, 189, 117, 48, 248, ],
[0, 201, 143, 70, 3, 202, 140, 69, 6, 207, 137, 64, 5, 204, 138, 67, 12, 197, 131, 74, 15, 198, 128, 73, 10, 195, 133, 76, 9, 192, 134, 79, 24, 209, 151, 94, 27, 210, 148, 93, 30, 215, 145, 88, 29, 212, 146, 91, 20, 221, 155, 82, 23, 222, 152, 81, 18, 219, 157, 84, 17, 216, 158, 87, 48, 249, 191, 118, 51, 250, 188, 117, 54, 255, 185, 112, 53, 252, 186, 115, 60, 245, 179, 122, 63, 246, 176, 121, 58, 243, 181, 124, 57, 240, 182, 127, 40, 225, 167, 110, 43, 226, 164, 109, 46, 231, 161, 104, 45, 228, 162, 107, 36, 237, 171, 98, 39, 238, 168, 97, 34, 235, 173, 100, 33, 232, 174, 103, 96, 169, 239, 38, 99, 170, 236, 37, 102, 175, 233, 32, 101, 172, 234, 35, 108, 165, 227, 42, 111, 166, 224, 41, 106, 163, 229, 44, 105, 160, 230, 47, 120, 177, 247, 62, 123, 178, 244, 61, 126, 183, 241, 56, 125, 180, 242, 59, 116, 189, 251, 50, 119, 190, 248, 49, 114, 187, 253, 52, 113, 184, 254, 55, 80, 153, 223, 22, 83, 154, 220, 21, 86, 159, 217, 16, 85, 156, 218, 19, 92, 149, 211, 26, 95, 150, 208, 25, 90, 147, 213, 28, 89, 144, 214, 31, 72, 129, 199, 14, 75, 130, 196, 13, 78, 135, 193, 8, 77, 132, 194, 11, 68, 141, 203, 2, 71, 142, 200, 1, 66, 139, 205, 4, 65, 136, 206, 7, ],
[0, 202, 137, 67, 15, 197, 134, 76, 30, 212, 151, 93, 17, 219, 152, 82, 60, 246, 181, 127, 51, 249, 186, 112, 34, 232, 171, 97, 45, 231, 164, 110, 120, 178, 241, 59, 119, 189, 254, 52, 102, 172, 239, 37, 105, 163, 224, 42, 68, 142, 205, 7, 75, 129, 194, 8, 90, 144, 211, 25, 85, 159, 220, 22, 240, 58, 121, 179, 255, 53, 118, 188, 238, 36, 103, 173, 225, 43, 104, 162, 204, 6, 69, 143, 195, 9, 74, 128, 210, 24, 91, 145, 221, 23, 84, 158, 136, 66, 1, 203, 135, 77, 14, 196, 150, 92, 31, 213, 153, 83, 16, 218, 180, 126, 61, 247, 187, 113, 50, 248, 170, 96, 35, 233, 165, 111, 44, 230, 253, 55, 116, 190, 242, 56, 123, 177, 227, 41, 106, 160, 236, 38, 101, 175, 193, 11, 72, 130, 206, 4, 71, 141, 223, 21, 86, 156, 208, 26, 89, 147, 133, 79, 12, 198, 138, 64, 3, 201, 155, 81, 18, 216, 148, 94, 29, 215, 185, 115, 48, 250, 182, 124, 63, 245, 167, 109, 46, 228, 168, 98, 33, 235, 13, 199, 132, 78, 2, 200, 139, 65, 19, 217, 154, 80, 28, 214, 149, 95, 49, 251, 184, 114, 62, 244, 183, 125, 47, 229, 166, 108, 32, 234, 169, 99, 117, 191, 252, 54, 122, 176, 243, 57, 107, 161, 226, 40, 100, 174, 237, 39, 73, 131, 192, 10, 70, 140, 207, 5, 87, 157, 222, 20, 88, 146, 209, 27, ],
[0, 203, 139, 64, 11, 192, 128, 75, 22, 221, 157, 86, 29, 214, 150, 93, 44, 231, 167, 108, 39, 236, 172, 103, 58, 241, 177, 122, 49, 250, 186, 113, 88, 147, 211, 24, 83, 152, 216, 19, 78, 133, 197, 14, 69, 142, 206, 5, 116, 191, 255, 52, 127, 180, 244, 63, 98, 169, 233, 34, 105, 162, 226, 41, 176, 123, 59, 240, 187, 112, 48, 251, 166, 109, 45, 230, 173, 102, 38, 237, 156, 87, 23, 220, 151, 92, 28, 215, 138, 65, 1, 202, 129, 74, 10, 193, 232, 35, 99, 168, 227, 40, 104, 163, 254, 53, 117, 190, 245, 62, 126, 181, 196, 15, 79, 132, 207, 4, 68, 143, 210, 25, 89, 146, 217, 18, 82, 153, 125, 182, 246, 61, 118, 189, 253, 54, 107, 160, 224, 43, 96, 171, 235, 32, 81, 154, 218, 17, 90, 145, 209, 26, 71, 140, 204, 7, 76, 135, 199, 12, 37, 238, 174, 101, 46, 229, 165, 110, 51, 248, 184, 115, 56, 243, 179, 120, 9, 194, 130, 73, 2, 201, 137, 66, 31, 212, 148, 95, 20, 223, 159, 84, 205, 6, 70, 141, 198, 13, 77, 134, 219, 16, 80, 155, 208, 27, 91, 144, 225, 42, 106, 161, 234, 33, 97, 170, 247, 60, 124, 183, 252, 55, 119, 188, 149, 94, 30, 213, 158, 85, 21, 222, 131, 72, 8, 195, 136, 67, 3, 200, 185, 114, 50, 249, 178, 121, 57, 242, 175, 100, 36, 239, 164, 111, 47, 228, ],
[0, 204, 133, 73, 23, 219, 146, 94, 46, 226, 171, 103, 57, 245, 188, 112, 92, 144, 217, 21, 75, 135, 206, 2, 114, 190, 247, 59, 101, 169, 224, 44, 184, 116, 61, 241, 175, 99, 42, 230, 150, 90, 19, 223, 129, 77, 4, 200, 228, 40, 97, 173, 243, 63, 118, 186, 202, 6, 79, 131, 221, 17, 88, 148, 109, 161, 232, 36, 122, 182, 255, 51, 67, 143, 198, 10, 84, 152, 209, 29, 49, 253, 180, 120, 38, 234, 163, 111, 31, 211, 154, 86, 8, 196, 141, 65, 213, 25, 80, 156, 194, 14, 71, 139, 251, 55, 126, 178, 236, 32, 105, 165, 137, 69, 12, 192, 158, 82, 27, 215, 167, 107, 34, 238, 176, 124, 53, 249, 218, 22, 95, 147, 205, 1, 72, 132, 244, 56, 113, 189, 227, 47, 102, 170, 134, 74, 3, 207, 145, 93, 20, 216, 168, 100, 45, 225, 191, 115, 58, 246, 98, 174, 231, 43, 117, 185, 240, 60, 76, 128, 201, 5, 91, 151, 222, 18, 62, 242, 187, 119, 41, 229, 172, 96, 16, 220, 149, 89, 7, 203, 130, 78, 183, 123, 50, 254, 160, 108, 37, 233, 153, 85, 28, 208, 142, 66, 11, 199, 235, 39, 110, 162, 252, 48, 121, 181, 197, 9, 64, 140, 210, 30, 87, 155, 15, 195, 138, 70, 24, 212, 157, 81, 33, 237, 164, 104, 54, 250, 179, 127, 83, 159, 214, 26, 68, 136, 193, 13, 125, 177, 248, 52, 106, 166, 239, 35, ],
[0, 205, 135, 74, 19, 222, 148, 89, 38, 235, 161, 108, 53, 248, 178, 127, 76, 129, 203, 6, 95, 146, 216, 21, 106, 167, 237, 32, 121, 180, 254, 51, 152, 85, 31, 210, 139, 70, 12, 193, 190, 115, 57, 244, 173, 96, 42, 231, 212, 25, 83, 158, 199, 10, 64, 141, 242, 63, 117, 184, 225, 44, 102, 171, 45, 224, 170, 103, 62, 243, 185, 116, 11, 198, 140, 65, 24, 213, 159, 82, 97, 172, 230, 43, 114, 191, 245, 56, 71, 138, 192, 13, 84, 153, 211, 30, 181, 120, 50, 255, 166, 107, 33, 236, 147, 94, 20, 217, 128, 77, 7, 202, 249, 52, 126, 179, 234, 39, 109, 160, 223, 18, 88, 149, 204, 1, 75, 134, 90, 151, 221, 16, 73, 132, 206, 3, 124, 177, 251, 54, 111, 162, 232, 37, 22, 219, 145, 92, 5, 200, 130, 79, 48, 253, 183, 122, 35, 238, 164, 105, 194, 15, 69, 136, 209, 28, 86, 155, 228, 41, 99, 174, 247, 58, 112, 189, 142, 67, 9, 196, 157, 80, 26, 215, 168, 101, 47, 226, 187, 118, 60, 241, 119, 186, 240, 61, 100, 169, 227, 46, 81, 156, 214, 27, 66, 143, 197, 8, 59, 246, 188, 113, 40, 229, 175, 98, 29, 208, 154, 87, 14, 195, 137, 68, 239, 34, 104, 165, 252, 49, 123, 182, 201, 4, 78, 131, 218, 23, 93, 144, 163, 110, 36, 233, 176, 125, 55, 250, 133, 72, 2, 207, 150, 91, 17, 220, ],
[0, 206, 129, 79, 31, 209, 158, 80, 62, 240, 191, 113, 33, 239, 160, 110, 124, 178, 253, 51, 99, 173, 226, 44, 66, 140, 195, 13, 93, 147, 220, 18, 248, 54, 121, 183, 231, 41, 102, 168, 198, 8, 71, 137, 217, 23, 88, 150, 132, 74, 5, 203, 155, 85, 26, 212, 186, 116, 59, 245, 165, 107, 36, 234, 237, 35, 108, 162, 242, 60, 115, 189, 211, 29, 82, 156, 204, 2, 77, 131, 145, 95, 16, 222, 142, 64, 15, 193, 175, 97, 46, 224, 176, 126, 49, 255, 21, 219, 148, 90, 10, 196, 139, 69, 43, 229, 170, 100, 52, 250, 181, 123, 105, 167, 232, 38, 118, 184, 247, 57, 87, 153, 214, 24, 72, 134, 201, 7, 199, 9, 70, 136, 216, 22, 89, 151, 249, 55, 120, 182, 230, 40, 103, 169, 187, 117, 58, 244, 164, 106, 37, 235, 133, 75, 4, 202, 154, 84, 27, 213, 63, 241, 190, 112, 32, 238, 161, 111, 1, 207, 128, 78, 30, 208, 159, 81, 67, 141, 194, 12, 92, 146, 221, 19, 125, 179, 252, 50, 98, 172, 227, 45, 42, 228, 171, 101, 53, 251, 180, 122, 20, 218, 149, 91, 11, 197, 138, 68, 86, 152, 215, 25, 73, 135, 200, 6, 104, 166, 233, 39, 119, 185, 246, 56, 210, 28, 83, 157, 205, 3, 76, 130, 236, 34, 109, 163, 243, 61, 114, 188, 174, 96, 47, 225, 177, 127, 48, 254, 144, 94, 17, 223, 143, 65, 14, 192, ],
[0, 207, 131, 76, 27, 212, 152, 87, 54, 249, 181, 122, 45, 226, 174, 97, 108, 163, 239, 32, 119, 184, 244, 59, 90, 149, 217, 22, 65, 142, 194, 13, 216, 23, 91, 148, 195, 12, 64, 143, 238, 33, 109, 162, 245, 58, 118, 185, 180, 123, 55, 248, 175, 96, 44, 227, 130, 77, 1, 206, 153, 86, 26, 213, 173, 98, 46, 225, 182, 121, 53, 250, 155, 84, 24, 215, 128, 79, 3, 204, 193, 14, 66, 141, 218, 21, 89, 150, 247, 56, 116, 187, 236, 35, 111, 160, 117, 186, 246, 57, 110, 161, 237, 34, 67, 140, 192, 15, 88, 151, 219, 20, 25, 214, 154, 85, 2, 205, 129, 78, 47, 224, 172, 99, 52, 251, 183, 120, 71, 136, 196, 11, 92, 147, 223, 16, 113, 190, 242, 61, 106, 165, 233, 38, 43, 228, 168, 103, 48, 255, 179, 124, 29, 210, 158, 81, 6, 201, 133, 74, 159, 80, 28, 211, 132, 75, 7, 200, 169, 102, 42, 229, 178, 125, 49, 254, 243, 60, 112, 191, 232, 39, 107, 164, 197, 10, 70, 137, 222, 17, 93, 146, 234, 37, 105, 166, 241, 62, 114, 189, 220, 19, 95, 144, 199, 8, 68, 139, 134, 73, 5, 202, 157, 82, 30, 209, 176, 127, 51, 252, 171, 100, 40, 231, 50, 253, 177, 126, 41, 230, 170, 101, 4, 203, 135, 72, 31, 208, 156, 83, 94, 145, 221, 18, 69, 138, 198, 9, 104, 167, 235, 36, 115, 188, 240, 63, ],
[0, 208, 189, 109, 103, 183, 218, 10, 206, 30, 115, 163, 169, 121, 20, 196, 129, 81, 60, 236, 230, 54, 91, 139, 79, 159, 242, 34, 40, 248, 149, 69, 31, 207, 162, 114, 120, 168, 197, 21, 209, 1, 108, 188, 182, 102, 11, 219, 158, 78, 35, 243, 249, 41, 68, 148, 80, 128, 237, 61, 55, 231, 138, 90, 62, 238, 131, 83, 89, 137, 228, 52, 240, 32, 77, 157, 151, 71, 42, 250, 191, 111, 2, 210, 216, 8, 101, 181, 113, 161, 204, 28, 22, 198, 171, 123, 33, 241, 156, 76, 70, 150, 251, 43, 239, 63, 82, 130, 136, 88, 53, 229, 160, 112, 29, 205, 199, 23, 122, 170, 110, 190, 211, 3, 9, 217, 180, 100, 124, 172, 193, 17, 27, 203, 166, 118, 178, 98, 15, 223, 213, 5, 104, 184, 253, 45, 64, 144, 154, 74, 39, 247, 51, 227, 142, 94, 84, 132, 233, 57, 99, 179, 222, 14, 4, 212, 185, 105, 173, 125, 16, 192, 202, 26, 119, 167, 226, 50, 95, 143, 133, 85, 56, 232, 44, 252, 145, 65, 75, 155, 246, 38, 66, 146, 255, 47, 37, 245, 152, 72, 140, 92, 49, 225, 235, 59, 86, 134, 195, 19, 126, 174, 164, 116, 25, 201, 13, 221, 176, 96, 106, 186, 215, 7, 93, 141, 224, 48, 58, 234, 135, 87, 147, 67, 46, 254, 244, 36, 73, 153, 220, 12, 97, 177, 187, 107, 6, 214, 18, 194, 175, 127, 117, 165, 200, 24, ],
[0, 209, 191, 110, 99, 178, 220, 13, 198, 23, 121, 168, 165, 116, 26, 203, 145, 64, 46, 255, 242, 35, 77, 156, 87, 134, 232, 57, 52, 229, 139, 90, 63, 238, 128, 81, 92, 141, 227, 50, 249, 40, 70, 151, 154, 75, 37, 244, 174, 127, 17, 192, 205, 28, 114, 163, 104, 185, 215, 6, 11, 218, 180, 101, 126, 175, 193, 16, 29, 204, 162, 115, 184, 105, 7, 214, 219, 10, 100, 181, 239, 62, 80, 129, 140, 93, 51, 226, 41, 248, 150, 71, 74, 155, 245, 36, 65, 144, 254, 47, 34, 243, 157, 76, 135, 86, 56, 233, 228, 53, 91, 138, 208, 1, 111, 190, 179, 98, 12, 221, 22, 199, 169, 120, 117, 164, 202, 27, 252, 45, 67, 146, 159, 78, 32, 241, 58, 235, 133, 84, 89, 136, 230, 55, 109, 188, 210, 3, 14, 223, 177, 96, 171, 122, 20, 197, 200, 25, 119, 166, 195, 18, 124, 173, 160, 113, 31, 206, 5, 212, 186, 107, 102, 183, 217, 8, 82, 131, 237, 60, 49, 224, 142, 95, 148, 69, 43, 250, 247, 38, 72, 153, 130, 83, 61, 236, 225, 48, 94, 143, 68, 149, 251, 42, 39, 246, 152, 73, 19, 194, 172, 125, 112, 161, 207, 30, 213, 4, 106, 187, 182, 103, 9, 216, 189, 108, 2, 211, 222, 15, 97, 176, 123, 170, 196, 21, 24, 201, 167, 118, 44, 253, 147, 66, 79, 158, 240, 33, 234, 59, 85, 132, 137, 88, 54, 231, ],
[0, 210, 185, 107, 111, 189, 214, 4, 222, 12, 103, 181, 177, 99, 8, 218, 161, 115, 24, 202, 206, 28, 119, 165, 127, 173, 198, 20, 16, 194, 169, 123, 95, 141, 230, 52, 48, 226, 137, 91, 129, 83, 56, 234, 238, 60, 87, 133, 254, 44, 71, 149, 145, 67, 40, 250, 32, 242, 153, 75, 79, 157, 246, 36, 190, 108, 7, 213, 209, 3, 104, 186, 96, 178, 217, 11, 15, 221, 182, 100, 31, 205, 166, 116, 112, 162, 201, 27, 193, 19, 120, 170, 174, 124, 23, 197, 225, 51, 88, 138, 142, 92, 55, 229, 63, 237, 134, 84, 80, 130, 233, 59, 64, 146, 249, 43, 47, 253, 150, 68, 158, 76, 39, 245, 241, 35, 72, 154, 97, 179, 216, 10, 14, 220, 183, 101, 191, 109, 6, 212, 208, 2, 105, 187, 192, 18, 121, 171, 175, 125, 22, 196, 30, 204, 167, 117, 113, 163, 200, 26, 62, 236, 135, 85, 81, 131, 232, 58, 224, 50, 89, 139, 143, 93, 54, 228, 159, 77, 38, 244, 240, 34, 73, 155, 65, 147, 248, 42, 46, 252, 151, 69, 223, 13, 102, 180, 176, 98, 9, 219, 1, 211, 184, 106, 110, 188, 215, 5, 126, 172, 199, 21, 17, 195, 168, 122, 160, 114, 25, 203, 207, 29, 118, 164, 128, 82, 57, 235, 239, 61, 86, 132, 94, 140, 231, 53, 49, 227, 136, 90, 33, 243, 152, 74, 78, 156, 247, 37, 255, 45, 70, 148, 144, 66, 41, 251, ],
[0, 211, 187, 104, 107, 184, 208, 3, 214, 5, 109, 190, 189, 110, 6, 213, 177, 98, 10, 217, 218, 9, 97, 178, 103, 180, 220, 15, 12, 223, 183, 100, 127, 172, 196, 23, 20, 199, 175, 124, 169, 122, 18, 193, 194, 17, 121, 170, 206, 29, 117, 166, 165, 118, 30, 205, 24, 203, 163, 112, 115, 160, 200, 27, 254, 45, 69, 150, 149, 70, 46, 253, 40, 251, 147, 64, 67, 144, 248, 43, 79, 156, 244, 39, 36, 247, 159, 76, 153, 74, 34, 241, 242, 33, 73, 154, 129, 82, 58, 233, 234, 57, 81, 130, 87, 132, 236, 63, 60, 239, 135, 84, 48, 227, 139, 88, 91, 136, 224, 51, 230, 53, 93, 142, 141, 94, 54, 229, 225, 50, 90, 137, 138, 89, 49, 226, 55, 228, 140, 95, 92, 143, 231, 52, 80, 131, 235, 56, 59, 232, 128, 83, 134, 85, 61, 238, 237, 62, 86, 133, 158, 77, 37, 246, 245, 38, 78, 157, 72, 155, 243, 32, 35, 240, 152, 75, 47, 252, 148, 71, 68, 151, 255, 44, 249, 42, 66, 145, 146, 65, 41, 250, 31, 204, 164, 119, 116, 167, 207, 28, 201, 26, 114, 161, 162, 113, 25, 202, 174, 125, 21, 198, 197, 22, 126, 173, 120, 171, 195, 16, 19, 192, 168, 123, 96, 179, 219, 8, 11, 216, 176, 99, 182, 101, 13, 222, 221, 14, 102, 181, 209, 2, 106, 185, 186, 105, 1, 210, 7, 212, 188, 111, 108, 191, 215, 4, ],
[0, 212, 181, 97, 119, 163, 194, 22, 238, 58, 91, 143, 153, 77, 44, 248, 193, 21, 116, 160, 182, 98, 3, 215, 47, 251, 154, 78, 88, 140, 237, 57, 159, 75, 42, 254, 232, 60, 93, 137, 113, 165, 196, 16, 6, 210, 179, 103, 94, 138, 235, 63, 41, 253, 156, 72, 176, 100, 5, 209, 199, 19, 114, 166, 35, 247, 150, 66, 84, 128, 225, 53, 205, 25, 120, 172, 186, 110, 15, 219, 226, 54, 87, 131, 149, 65, 32, 244, 12, 216, 185, 109, 123, 175, 206, 26, 188, 104, 9, 221, 203, 31, 126, 170, 82, 134, 231, 51, 37, 241, 144, 68, 125, 169, 200, 28, 10, 222, 191, 107, 147, 71, 38, 242, 228, 48, 81, 133, 70, 146, 243, 39, 49, 229, 132, 80, 168, 124, 29, 201, 223, 11, 106, 190, 135, 83, 50, 230, 240, 36, 69, 145, 105, 189, 220, 8, 30, 202, 171, 127, 217, 13, 108, 184, 174, 122, 27, 207, 55, 227, 130, 86, 64, 148, 245, 33, 24, 204, 173, 121, 111, 187, 218, 14, 246, 34, 67, 151, 129, 85, 52, 224, 101, 177, 208, 4, 18, 198, 167, 115, 139, 95, 62, 234, 252, 40, 73, 157, 164, 112, 17, 197, 211, 7, 102, 178, 74, 158, 255, 43, 61, 233, 136, 92, 250, 46, 79, 155, 141, 89, 56, 236, 20, 192, 161, 117, 99, 183, 214, 2, 59, 239, 142, 90, 76, 152, 249, 45, 213, 1, 96, 180, 162, 118, 23, 195, ],
[0, 213, 183, 98, 115, 166, 196, 17, 230, 51, 81, 132, 149, 64, 34, 247, 209, 4, 102, 179, 162, 119, 21, 192, 55, 226, 128, 85, 68, 145, 243, 38, 191, 106, 8, 221, 204, 25, 123, 174, 89, 140, 238, 59, 42, 255, 157, 72, 110, 187, 217, 12, 29, 200, 170, 127, 136, 93, 63, 234, 251, 46, 76, 153, 99, 182, 212, 1, 16, 197, 167, 114, 133, 80, 50, 231, 246, 35, 65, 148, 178, 103, 5, 208, 193, 20, 118, 163, 84, 129, 227, 54, 39, 242, 144, 69, 220, 9, 107, 190, 175, 122, 24, 205, 58, 239, 141, 88, 73, 156, 254, 43, 13, 216, 186, 111, 126, 171, 201, 28, 235, 62, 92, 137, 152, 77, 47, 250, 198, 19, 113, 164, 181, 96, 2, 215, 32, 245, 151, 66, 83, 134, 228, 49, 23, 194, 160, 117, 100, 177, 211, 6, 241, 36, 70, 147, 130, 87, 53, 224, 121, 172, 206, 27, 10, 223, 189, 104, 159, 74, 40, 253, 236, 57, 91, 142, 168, 125, 31, 202, 219, 14, 108, 185, 78, 155, 249, 44, 61, 232, 138, 95, 165, 112, 18, 199, 214, 3, 97, 180, 67, 150, 244, 33, 48, 229, 135, 82, 116, 161, 195, 22, 7, 210, 176, 101, 146, 71, 37, 240, 225, 52, 86, 131, 26, 207, 173, 120, 105, 188, 222, 11, 252, 41, 75, 158, 143, 90, 56, 237, 203, 30, 124, 169, 184, 109, 15, 218, 45, 248, 154, 79, 94, 139, 233, 60, ],
[0, 214, 177, 103, 127, 169, 206, 24, 254, 40, 79, 153, 129, 87, 48, 230, 225, 55, 80, 134, 158, 72, 47, 249, 31, 201, 174, 120, 96, 182, 209, 7, 223, 9, 110, 184, 160, 118, 17, 199, 33, 247, 144, 70, 94, 136, 239, 57, 62, 232, 143, 89, 65, 151, 240, 38, 192, 22, 113, 167, 191, 105, 14, 216, 163, 117, 18, 196, 220, 10, 109, 187, 93, 139, 236, 58, 34, 244, 147, 69, 66, 148, 243, 37, 61, 235, 140, 90, 188, 106, 13, 219, 195, 21, 114, 164, 124, 170, 205, 27, 3, 213, 178, 100, 130, 84, 51, 229, 253, 43, 76, 154, 157, 75, 44, 250, 226, 52, 83, 133, 99, 181, 210, 4, 28, 202, 173, 123, 91, 141, 234, 60, 36, 242, 149, 67, 165, 115, 20, 194, 218, 12, 107, 189, 186, 108, 11, 221, 197, 19, 116, 162, 68, 146, 245, 35, 59, 237, 138, 92, 132, 82, 53, 227, 251, 45, 74, 156, 122, 172, 203, 29, 5, 211, 180, 98, 101, 179, 212, 2, 26, 204, 171, 125, 155, 77, 42, 252, 228, 50, 85, 131, 248, 46, 73, 159, 135, 81, 54, 224, 6, 208, 183, 97, 121, 175, 200, 30, 25, 207, 168, 126, 102, 176, 215, 1, 231, 49, 86, 128, 152, 78, 41, 255, 39, 241, 150, 64, 88, 142, 233, 63, 217, 15, 104, 190, 166, 112, 23, 193, 198, 16, 119, 161, 185, 111, 8, 222, 56, 238, 137, 95, 71, 145, 246, 32, ],
[0, 215, 179, 100, 123, 172, 200, 31, 246, 33, 69, 146, 141, 90, 62, 233, 241, 38, 66, 149, 138, 93, 57, 238, 7, 208, 180, 99, 124, 171, 207, 24, 255, 40, 76, 155, 132, 83, 55, 224, 9, 222, 186, 109, 114, 165, 193, 22, 14, 217, 189, 106, 117, 162, 198, 17, 248, 47, 75, 156, 131, 84, 48, 231, 227, 52, 80, 135, 152, 79, 43, 252, 21, 194, 166, 113, 110, 185, 221, 10, 18, 197, 161, 118, 105, 190, 218, 13, 228, 51, 87, 128, 159, 72, 44, 251, 28, 203, 175, 120, 103, 176, 212, 3, 234, 61, 89, 142, 145, 70, 34, 245, 237, 58, 94, 137, 150, 65, 37, 242, 27, 204, 168, 127, 96, 183, 211, 4, 219, 12, 104, 191, 160, 119, 19, 196, 45, 250, 158, 73, 86, 129, 229, 50, 42, 253, 153, 78, 81, 134, 226, 53, 220, 11, 111, 184, 167, 112, 20, 195, 36, 243, 151, 64, 95, 136, 236, 59, 210, 5, 97, 182, 169, 126, 26, 205, 213, 2, 102, 177, 174, 121, 29, 202, 35, 244, 144, 71, 88, 143, 235, 60, 56, 239, 139, 92, 67, 148, 240, 39, 206, 25, 125, 170, 181, 98, 6, 209, 201, 30, 122, 173, 178, 101, 1, 214, 63, 232, 140, 91, 68, 147, 247, 32, 199, 16, 116, 163, 188, 107, 15, 216, 49, 230, 130, 85, 74, 157, 249, 46, 54, 225, 133, 82, 77, 154, 254, 41, 192, 23, 115, 164, 187, 108, 8, 223, ],
[0, 216, 173, 117, 71, 159, 234, 50, 142, 86, 35, 251, 201, 17, 100, 188, 1, 217, 172, 116, 70, 158, 235, 51, 143, 87, 34, 250, 200, 16, 101, 189, 2, 218, 175, 119, 69, 157, 232, 48, 140, 84, 33, 249, 203, 19, 102, 190, 3, 219, 174, 118, 68, 156, 233, 49, 141, 85, 32, 248, 202, 18, 103, 191, 4, 220, 169, 113, 67, 155, 238, 54, 138, 82, 39, 255, 205, 21, 96, 184, 5, 221, 168, 112, 66, 154, 239, 55, 139, 83, 38, 254, 204, 20, 97, 185, 6, 222, 171, 115, 65, 153, 236, 52, 136, 80, 37, 253, 207, 23, 98, 186, 7, 223, 170, 114, 64, 152, 237, 53, 137, 81, 36, 252, 206, 22, 99, 187, 8, 208, 165, 125, 79, 151, 226, 58, 134, 94, 43, 243, 193, 25, 108, 180, 9, 209, 164, 124, 78, 150, 227, 59, 135, 95, 42, 242, 192, 24, 109, 181, 10, 210, 167, 127, 77, 149, 224, 56, 132, 92, 41, 241, 195, 27, 110, 182, 11, 211, 166, 126, 76, 148, 225, 57, 133, 93, 40, 240, 194, 26, 111, 183, 12, 212, 161, 121, 75, 147, 230, 62, 130, 90, 47, 247, 197, 29, 104, 176, 13, 213, 160, 120, 74, 146, 231, 63, 131, 91, 46, 246, 196, 28, 105, 177, 14, 214, 163, 123, 73, 145, 228, 60, 128, 88, 45, 245, 199, 31, 106, 178, 15, 215, 162, 122, 72, 144, 229, 61, 129, 89, 44, 244, 198, 30, 107, 179, ],
[0, 217, 175, 118, 67, 154, 236, 53, 134, 95, 41, 240, 197, 28, 106, 179, 17, 200, 190, 103, 82, 139, 253, 36, 151, 78, 56, 225, 212, 13, 123, 162, 34, 251, 141, 84, 97, 184, 206, 23, 164, 125, 11, 210, 231, 62, 72, 145, 51, 234, 156, 69, 112, 169, 223, 6, 181, 108, 26, 195, 246, 47, 89, 128, 68, 157, 235, 50, 7, 222, 168, 113, 194, 27, 109, 180, 129, 88, 46, 247, 85, 140, 250, 35, 22, 207, 185, 96, 211, 10, 124, 165, 144, 73, 63, 230, 102, 191, 201, 16, 37, 252, 138, 83, 224, 57, 79, 150, 163, 122, 12, 213, 119, 174, 216, 1, 52, 237, 155, 66, 241, 40, 94, 135, 178, 107, 29, 196, 136, 81, 39, 254, 203, 18, 100, 189, 14, 215, 161, 120, 77, 148, 226, 59, 153, 64, 54, 239, 218, 3, 117, 172, 31, 198, 176, 105, 92, 133, 243, 42, 170, 115, 5, 220, 233, 48, 70, 159, 44, 245, 131, 90, 111, 182, 192, 25, 187, 98, 20, 205, 248, 33, 87, 142, 61, 228, 146, 75, 126, 167, 209, 8, 204, 21, 99, 186, 143, 86, 32, 249, 74, 147, 229, 60, 9, 208, 166, 127, 221, 4, 114, 171, 158, 71, 49, 232, 91, 130, 244, 45, 24, 193, 183, 110, 238, 55, 65, 152, 173, 116, 2, 219, 104, 177, 199, 30, 43, 242, 132, 93, 255, 38, 80, 137, 188, 101, 19, 202, 121, 160, 214, 15, 58, 227, 149, 76, ],
[0, 218, 169, 115, 79, 149, 230, 60, 158, 68, 55, 237, 209, 11, 120, 162, 33, 251, 136, 82, 110, 180, 199, 29, 191, 101, 22, 204, 240, 42, 89, 131, 66, 152, 235, 49, 13, 215, 164, 126, 220, 6, 117, 175, 147, 73, 58, 224, 99, 185, 202, 16, 44, 246, 133, 95, 253, 39, 84, 142, 178, 104, 27, 193, 132, 94, 45, 247, 203, 17, 98, 184, 26, 192, 179, 105, 85, 143, 252, 38, 165, 127, 12, 214, 234, 48, 67, 153, 59, 225, 146, 72, 116, 174, 221, 7, 198, 28, 111, 181, 137, 83, 32, 250, 88, 130, 241, 43, 23, 205, 190, 100, 231, 61, 78, 148, 168, 114, 1, 219, 121, 163, 208, 10, 54, 236, 159, 69, 21, 207, 188, 102, 90, 128, 243, 41, 139, 81, 34, 248, 196, 30, 109, 183, 52, 238, 157, 71, 123, 161, 210, 8, 170, 112, 3, 217, 229, 63, 76, 150, 87, 141, 254, 36, 24, 194, 177, 107, 201, 19, 96, 186, 134, 92, 47, 245, 118, 172, 223, 5, 57, 227, 144, 74, 232, 50, 65, 155, 167, 125, 14, 212, 145, 75, 56, 226, 222, 4, 119, 173, 15, 213, 166, 124, 64, 154, 233, 51, 176, 106, 25, 195, 255, 37, 86, 140, 46, 244, 135, 93, 97, 187, 200, 18, 211, 9, 122, 160, 156, 70, 53, 239, 77, 151, 228, 62, 2, 216, 171, 113, 242, 40, 91, 129, 189, 103, 20, 206, 108, 182, 197, 31, 35, 249, 138, 80, ],
[0, 219, 171, 112, 75, 144, 224, 59, 150, 77, 61, 230, 221, 6, 118, 173, 49, 234, 154, 65, 122, 161, 209, 10, 167, 124, 12, 215, 236, 55, 71, 156, 98, 185, 201, 18, 41, 242, 130, 89, 244, 47, 95, 132, 191, 100, 20, 207, 83, 136, 248, 35, 24, 195, 179, 104, 197, 30, 110, 181, 142, 85, 37, 254, 196, 31, 111, 180, 143, 84, 36, 255, 82, 137, 249, 34, 25, 194, 178, 105, 245, 46, 94, 133, 190, 101, 21, 206, 99, 184, 200, 19, 40, 243, 131, 88, 166, 125, 13, 214, 237, 54, 70, 157, 48, 235, 155, 64, 123, 160, 208, 11, 151, 76, 60, 231, 220, 7, 119, 172, 1, 218, 170, 113, 74, 145, 225, 58, 149, 78, 62, 229, 222, 5, 117, 174, 3, 216, 168, 115, 72, 147, 227, 56, 164, 127, 15, 212, 239, 52, 68, 159, 50, 233, 153, 66, 121, 162, 210, 9, 247, 44, 92, 135, 188, 103, 23, 204, 97, 186, 202, 17, 42, 241, 129, 90, 198, 29, 109, 182, 141, 86, 38, 253, 80, 139, 251, 32, 27, 192, 176, 107, 81, 138, 250, 33, 26, 193, 177, 106, 199, 28, 108, 183, 140, 87, 39, 252, 96, 187, 203, 16, 43, 240, 128, 91, 246, 45, 93, 134, 189, 102, 22, 205, 51, 232, 152, 67, 120, 163, 211, 8, 165, 126, 14, 213, 238, 53, 69, 158, 2, 217, 169, 114, 73, 146, 226, 57, 148, 79, 63, 228, 223, 4, 116, 175, ],
[0, 220, 165, 121, 87, 139, 242, 46, 174, 114, 11, 215, 249, 37, 92, 128, 65, 157, 228, 56, 22, 202, 179, 111, 239, 51, 74, 150, 184, 100, 29, 193, 130, 94, 39, 251, 213, 9, 112, 172, 44, 240, 137, 85, 123, 167, 222, 2, 195, 31, 102, 186, 148, 72, 49, 237, 109, 177, 200, 20, 58, 230, 159, 67, 25, 197, 188, 96, 78, 146, 235, 55, 183, 107, 18, 206, 224, 60, 69, 153, 88, 132, 253, 33, 15, 211, 170, 118, 246, 42, 83, 143, 161, 125, 4, 216, 155, 71, 62, 226, 204, 16, 105, 181, 53, 233, 144, 76, 98, 190, 199, 27, 218, 6, 127, 163, 141, 81, 40, 244, 116, 168, 209, 13, 35, 255, 134, 90, 50, 238, 151, 75, 101, 185, 192, 28, 156, 64, 57, 229, 203, 23, 110, 178, 115, 175, 214, 10, 36, 248, 129, 93, 221, 1, 120, 164, 138, 86, 47, 243, 176, 108, 21, 201, 231, 59, 66, 158, 30, 194, 187, 103, 73, 149, 236, 48, 241, 45, 84, 136, 166, 122, 3, 223, 95, 131, 250, 38, 8, 212, 173, 113, 43, 247, 142, 82, 124, 160, 217, 5, 133, 89, 32, 252, 210, 14, 119, 171, 106, 182, 207, 19, 61, 225, 152, 68, 196, 24, 97, 189, 147, 79, 54, 234, 169, 117, 12, 208, 254, 34, 91, 135, 7, 219, 162, 126, 80, 140, 245, 41, 232, 52, 77, 145, 191, 99, 26, 198, 70, 154, 227, 63, 17, 205, 180, 104, ],
[0, 221, 167, 122, 83, 142, 244, 41, 166, 123, 1, 220, 245, 40, 82, 143, 81, 140, 246, 43, 2, 223, 165, 120, 247, 42, 80, 141, 164, 121, 3, 222, 162, 127, 5, 216, 241, 44, 86, 139, 4, 217, 163, 126, 87, 138, 240, 45, 243, 46, 84, 137, 160, 125, 7, 218, 85, 136, 242, 47, 6, 219, 161, 124, 89, 132, 254, 35, 10, 215, 173, 112, 255, 34, 88, 133, 172, 113, 11, 214, 8, 213, 175, 114, 91, 134, 252, 33, 174, 115, 9, 212, 253, 32, 90, 135, 251, 38, 92, 129, 168, 117, 15, 210, 93, 128, 250, 39, 14, 211, 169, 116, 170, 119, 13, 208, 249, 36, 94, 131, 12, 209, 171, 118, 95, 130, 248, 37, 178, 111, 21, 200, 225, 60, 70, 155, 20, 201, 179, 110, 71, 154, 224, 61, 227, 62, 68, 153, 176, 109, 23, 202, 69, 152, 226, 63, 22, 203, 177, 108, 16, 205, 183, 106, 67, 158, 228, 57, 182, 107, 17, 204, 229, 56, 66, 159, 65, 156, 230, 59, 18, 207, 181, 104, 231, 58, 64, 157, 180, 105, 19, 206, 235, 54, 76, 145, 184, 101, 31, 194, 77, 144, 234, 55, 30, 195, 185, 100, 186, 103, 29, 192, 233, 52, 78, 147, 28, 193, 187, 102, 79, 146, 232, 53, 73, 148, 238, 51, 26, 199, 189, 96, 239, 50, 72, 149, 188, 97, 27, 198, 24, 197, 191, 98, 75, 150, 236, 49, 190, 99, 25, 196, 237, 48, 74, 151, ],
[0, 222, 161, 127, 95, 129, 254, 32, 190, 96, 31, 193, 225, 63, 64, 158, 97, 191, 192, 30, 62, 224, 159, 65, 223, 1, 126, 160, 128, 94, 33, 255, 194, 28, 99, 189, 157, 67, 60, 226, 124, 162, 221, 3, 35, 253, 130, 92, 163, 125, 2, 220, 252, 34, 93, 131, 29, 195, 188, 98, 66, 156, 227, 61, 153, 71, 56, 230, 198, 24, 103, 185, 39, 249, 134, 88, 120, 166, 217, 7, 248, 38, 89, 135, 167, 121, 6, 216, 70, 152, 231, 57, 25, 199, 184, 102, 91, 133, 250, 36, 4, 218, 165, 123, 229, 59, 68, 154, 186, 100, 27, 197, 58, 228, 155, 69, 101, 187, 196, 26, 132, 90, 37, 251, 219, 5, 122, 164, 47, 241, 142, 80, 112, 174, 209, 15, 145, 79, 48, 238, 206, 16, 111, 177, 78, 144, 239, 49, 17, 207, 176, 110, 240, 46, 81, 143, 175, 113, 14, 208, 237, 51, 76, 146, 178, 108, 19, 205, 83, 141, 242, 44, 12, 210, 173, 115, 140, 82, 45, 243, 211, 13, 114, 172, 50, 236, 147, 77, 109, 179, 204, 18, 182, 104, 23, 201, 233, 55, 72, 150, 8, 214, 169, 119, 87, 137, 246, 40, 215, 9, 118, 168, 136, 86, 41, 247, 105, 183, 200, 22, 54, 232, 151, 73, 116, 170, 213, 11, 43, 245, 138, 84, 202, 20, 107, 181, 149, 75, 52, 234, 21, 203, 180, 106, 74, 148, 235, 53, 171, 117, 10, 212, 244, 42, 85, 139, ],
[0, 223, 163, 124, 91, 132, 248, 39, 182, 105, 21, 202, 237, 50, 78, 145, 113, 174, 210, 13, 42, 245, 137, 86, 199, 24, 100, 187, 156, 67, 63, 224, 226, 61, 65, 158, 185, 102, 26, 197, 84, 139, 247, 40, 15, 208, 172, 115, 147, 76, 48, 239, 200, 23, 107, 180, 37, 250, 134, 89, 126, 161, 221, 2, 217, 6, 122, 165, 130, 93, 33, 254, 111, 176, 204, 19, 52, 235, 151, 72, 168, 119, 11, 212, 243, 44, 80, 143, 30, 193, 189, 98, 69, 154, 230, 57, 59, 228, 152, 71, 96, 191, 195, 28, 141, 82, 46, 241, 214, 9, 117, 170, 74, 149, 233, 54, 17, 206, 178, 109, 252, 35, 95, 128, 167, 120, 4, 219, 175, 112, 12, 211, 244, 43, 87, 136, 25, 198, 186, 101, 66, 157, 225, 62, 222, 1, 125, 162, 133, 90, 38, 249, 104, 183, 203, 20, 51, 236, 144, 79, 77, 146, 238, 49, 22, 201, 181, 106, 251, 36, 88, 135, 160, 127, 3, 220, 60, 227, 159, 64, 103, 184, 196, 27, 138, 85, 41, 246, 209, 14, 114, 173, 118, 169, 213, 10, 45, 242, 142, 81, 192, 31, 99, 188, 155, 68, 56, 231, 7, 216, 164, 123, 92, 131, 255, 32, 177, 110, 18, 205, 234, 53, 73, 150, 148, 75, 55, 232, 207, 16, 108, 179, 34, 253, 129, 94, 121, 166, 218, 5, 229, 58, 70, 153, 190, 97, 29, 194, 83, 140, 240, 47, 8, 215, 171, 116, ],
[0, 224, 221, 61, 167, 71, 122, 154, 83, 179, 142, 110, 244, 20, 41, 201, 166, 70, 123, 155, 1, 225, 220, 60, 245, 21, 40, 200, 82, 178, 143, 111, 81, 177, 140, 108, 246, 22, 43, 203, 2, 226, 223, 63, 165, 69, 120, 152, 247, 23, 42, 202, 80, 176, 141, 109, 164, 68, 121, 153, 3, 227, 222, 62, 162, 66, 127, 159, 5, 229, 216, 56, 241, 17, 44, 204, 86, 182, 139, 107, 4, 228, 217, 57, 163, 67, 126, 158, 87, 183, 138, 106, 240, 16, 45, 205, 243, 19, 46, 206, 84, 180, 137, 105, 160, 64, 125, 157, 7, 231, 218, 58, 85, 181, 136, 104, 242, 18, 47, 207, 6, 230, 219, 59, 161, 65, 124, 156, 89, 185, 132, 100, 254, 30, 35, 195, 10, 234, 215, 55, 173, 77, 112, 144, 255, 31, 34, 194, 88, 184, 133, 101, 172, 76, 113, 145, 11, 235, 214, 54, 8, 232, 213, 53, 175, 79, 114, 146, 91, 187, 134, 102, 252, 28, 33, 193, 174, 78, 115, 147, 9, 233, 212, 52, 253, 29, 32, 192, 90, 186, 135, 103, 251, 27, 38, 198, 92, 188, 129, 97, 168, 72, 117, 149, 15, 239, 210, 50, 93, 189, 128, 96, 250, 26, 39, 199, 14, 238, 211, 51, 169, 73, 116, 148, 170, 74, 119, 151, 13, 237, 208, 48, 249, 25, 36, 196, 94, 190, 131, 99, 12, 236, 209, 49, 171, 75, 118, 150, 95, 191, 130, 98, 248, 24, 37, 197, ],
[0, 225, 223, 62, 163, 66, 124, 157, 91, 186, 132, 101, 248, 25, 39, 198, 182, 87, 105, 136, 21, 244, 202, 43, 237, 12, 50, 211, 78, 175, 145, 112, 113, 144, 174, 79, 210, 51, 13, 236, 42, 203, 245, 20, 137, 104, 86, 183, 199, 38, 24, 249, 100, 133, 187, 90, 156, 125, 67, 162, 63, 222, 224, 1, 226, 3, 61, 220, 65, 160, 158, 127, 185, 88, 102, 135, 26, 251, 197, 36, 84, 181, 139, 106, 247, 22, 40, 201, 15, 238, 208, 49, 172, 77, 115, 146, 147, 114, 76, 173, 48, 209, 239, 14, 200, 41, 23, 246, 107, 138, 180, 85, 37, 196, 250, 27, 134, 103, 89, 184, 126, 159, 161, 64, 221, 60, 2, 227, 217, 56, 6, 231, 122, 155, 165, 68, 130, 99, 93, 188, 33, 192, 254, 31, 111, 142, 176, 81, 204, 45, 19, 242, 52, 213, 235, 10, 151, 118, 72, 169, 168, 73, 119, 150, 11, 234, 212, 53, 243, 18, 44, 205, 80, 177, 143, 110, 30, 255, 193, 32, 189, 92, 98, 131, 69, 164, 154, 123, 230, 7, 57, 216, 59, 218, 228, 5, 152, 121, 71, 166, 96, 129, 191, 94, 195, 34, 28, 253, 141, 108, 82, 179, 46, 207, 241, 16, 214, 55, 9, 232, 117, 148, 170, 75, 74, 171, 149, 116, 233, 8, 54, 215, 17, 240, 206, 47, 178, 83, 109, 140, 252, 29, 35, 194, 95, 190, 128, 97, 167, 70, 120, 153, 4, 229, 219, 58, ],
[0, 226, 217, 59, 175, 77, 118, 148, 67, 161, 154, 120, 236, 14, 53, 215, 134, 100, 95, 189, 41, 203, 240, 18, 197, 39, 28, 254, 106, 136, 179, 81, 17, 243, 200, 42, 190, 92, 103, 133, 82, 176, 139, 105, 253, 31, 36, 198, 151, 117, 78, 172, 56, 218, 225, 3, 212, 54, 13, 239, 123, 153, 162, 64, 34, 192, 251, 25, 141, 111, 84, 182, 97, 131, 184, 90, 206, 44, 23, 245, 164, 70, 125, 159, 11, 233, 210, 48, 231, 5, 62, 220, 72, 170, 145, 115, 51, 209, 234, 8, 156, 126, 69, 167, 112, 146, 169, 75, 223, 61, 6, 228, 181, 87, 108, 142, 26, 248, 195, 33, 246, 20, 47, 205, 89, 187, 128, 98, 68, 166, 157, 127, 235, 9, 50, 208, 7, 229, 222, 60, 168, 74, 113, 147, 194, 32, 27, 249, 109, 143, 180, 86, 129, 99, 88, 186, 46, 204, 247, 21, 85, 183, 140, 110, 250, 24, 35, 193, 22, 244, 207, 45, 185, 91, 96, 130, 211, 49, 10, 232, 124, 158, 165, 71, 144, 114, 73, 171, 63, 221, 230, 4, 102, 132, 191, 93, 201, 43, 16, 242, 37, 199, 252, 30, 138, 104, 83, 177, 224, 2, 57, 219, 79, 173, 150, 116, 163, 65, 122, 152, 12, 238, 213, 55, 119, 149, 174, 76, 216, 58, 1, 227, 52, 214, 237, 15, 155, 121, 66, 160, 241, 19, 40, 202, 94, 188, 135, 101, 178, 80, 107, 137, 29, 255, 196, 38, ],
[0, 227, 219, 56, 171, 72, 112, 147, 75, 168, 144, 115, 224, 3, 59, 216, 150, 117, 77, 174, 61, 222, 230, 5, 221, 62, 6, 229, 118, 149, 173, 78, 49, 210, 234, 9, 154, 121, 65, 162, 122, 153, 161, 66, 209, 50, 10, 233, 167, 68, 124, 159, 12, 239, 215, 52, 236, 15, 55, 212, 71, 164, 156, 127, 98, 129, 185, 90, 201, 42, 18, 241, 41, 202, 242, 17, 130, 97, 89, 186, 244, 23, 47, 204, 95, 188, 132, 103, 191, 92, 100, 135, 20, 247, 207, 44, 83, 176, 136, 107, 248, 27, 35, 192, 24, 251, 195, 32, 179, 80, 104, 139, 197, 38, 30, 253, 110, 141, 181, 86, 142, 109, 85, 182, 37, 198, 254, 29, 196, 39, 31, 252, 111, 140, 180, 87, 143, 108, 84, 183, 36, 199, 255, 28, 82, 177, 137, 106, 249, 26, 34, 193, 25, 250, 194, 33, 178, 81, 105, 138, 245, 22, 46, 205, 94, 189, 133, 102, 190, 93, 101, 134, 21, 246, 206, 45, 99, 128, 184, 91, 200, 43, 19, 240, 40, 203, 243, 16, 131, 96, 88, 187, 166, 69, 125, 158, 13, 238, 214, 53, 237, 14, 54, 213, 70, 165, 157, 126, 48, 211, 235, 8, 155, 120, 64, 163, 123, 152, 160, 67, 208, 51, 11, 232, 151, 116, 76, 175, 60, 223, 231, 4, 220, 63, 7, 228, 119, 148, 172, 79, 1, 226, 218, 57, 170, 73, 113, 146, 74, 169, 145, 114, 225, 2, 58, 217, ],
[0, 228, 213, 49, 183, 83, 98, 134, 115, 151, 166, 66, 196, 32, 17, 245, 230, 2, 51, 215, 81, 181, 132, 96, 149, 113, 64, 164, 34, 198, 247, 19, 209, 53, 4, 224, 102, 130, 179, 87, 162, 70, 119, 147, 21, 241, 192, 36, 55, 211, 226, 6, 128, 100, 85, 177, 68, 160, 145, 117, 243, 23, 38, 194, 191, 91, 106, 142, 8, 236, 221, 57, 204, 40, 25, 253, 123, 159, 174, 74, 89, 189, 140, 104, 238, 10, 59, 223, 42, 206, 255, 27, 157, 121, 72, 172, 110, 138, 187, 95, 217, 61, 12, 232, 29, 249, 200, 44, 170, 78, 127, 155, 136, 108, 93, 185, 63, 219, 234, 14, 251, 31, 46, 202, 76, 168, 153, 125, 99, 135, 182, 82, 212, 48, 1, 229, 16, 244, 197, 33, 167, 67, 114, 150, 133, 97, 80, 180, 50, 214, 231, 3, 246, 18, 35, 199, 65, 165, 148, 112, 178, 86, 103, 131, 5, 225, 208, 52, 193, 37, 20, 240, 118, 146, 163, 71, 84, 176, 129, 101, 227, 7, 54, 210, 39, 195, 242, 22, 144, 116, 69, 161, 220, 56, 9, 237, 107, 143, 190, 90, 175, 75, 122, 158, 24, 252, 205, 41, 58, 222, 239, 11, 141, 105, 88, 188, 73, 173, 156, 120, 254, 26, 43, 207, 13, 233, 216, 60, 186, 94, 111, 139, 126, 154, 171, 79, 201, 45, 28, 248, 235, 15, 62, 218, 92, 184, 137, 109, 152, 124, 77, 169, 47, 203, 250, 30, ],
[0, 229, 215, 50, 179, 86, 100, 129, 123, 158, 172, 73, 200, 45, 31, 250, 246, 19, 33, 196, 69, 160, 146, 119, 141, 104, 90, 191, 62, 219, 233, 12, 241, 20, 38, 195, 66, 167, 149, 112, 138, 111, 93, 184, 57, 220, 238, 11, 7, 226, 208, 53, 180, 81, 99, 134, 124, 153, 171, 78, 207, 42, 24, 253, 255, 26, 40, 205, 76, 169, 155, 126, 132, 97, 83, 182, 55, 210, 224, 5, 9, 236, 222, 59, 186, 95, 109, 136, 114, 151, 165, 64, 193, 36, 22, 243, 14, 235, 217, 60, 189, 88, 106, 143, 117, 144, 162, 71, 198, 35, 17, 244, 248, 29, 47, 202, 75, 174, 156, 121, 131, 102, 84, 177, 48, 213, 231, 2, 227, 6, 52, 209, 80, 181, 135, 98, 152, 125, 79, 170, 43, 206, 252, 25, 21, 240, 194, 39, 166, 67, 113, 148, 110, 139, 185, 92, 221, 56, 10, 239, 18, 247, 197, 32, 161, 68, 118, 147, 105, 140, 190, 91, 218, 63, 13, 232, 228, 1, 51, 214, 87, 178, 128, 101, 159, 122, 72, 173, 44, 201, 251, 30, 28, 249, 203, 46, 175, 74, 120, 157, 103, 130, 176, 85, 212, 49, 3, 230, 234, 15, 61, 216, 89, 188, 142, 107, 145, 116, 70, 163, 34, 199, 245, 16, 237, 8, 58, 223, 94, 187, 137, 108, 150, 115, 65, 164, 37, 192, 242, 23, 27, 254, 204, 41, 168, 77, 127, 154, 96, 133, 183, 82, 211, 54, 4, 225, ],
[0, 230, 209, 55, 191, 89, 110, 136, 99, 133, 178, 84, 220, 58, 13, 235, 198, 32, 23, 241, 121, 159, 168, 78, 165, 67, 116, 146, 26, 252, 203, 45, 145, 119, 64, 166, 46, 200, 255, 25, 242, 20, 35, 197, 77, 171, 156, 122, 87, 177, 134, 96, 232, 14, 57, 223, 52, 210, 229, 3, 139, 109, 90, 188, 63, 217, 238, 8, 128, 102, 81, 183, 92, 186, 141, 107, 227, 5, 50, 212, 249, 31, 40, 206, 70, 160, 151, 113, 154, 124, 75, 173, 37, 195, 244, 18, 174, 72, 127, 153, 17, 247, 192, 38, 205, 43, 28, 250, 114, 148, 163, 69, 104, 142, 185, 95, 215, 49, 6, 224, 11, 237, 218, 60, 180, 82, 101, 131, 126, 152, 175, 73, 193, 39, 16, 246, 29, 251, 204, 42, 162, 68, 115, 149, 184, 94, 105, 143, 7, 225, 214, 48, 219, 61, 10, 236, 100, 130, 181, 83, 239, 9, 62, 216, 80, 182, 129, 103, 140, 106, 93, 187, 51, 213, 226, 4, 41, 207, 248, 30, 150, 112, 71, 161, 74, 172, 155, 125, 245, 19, 36, 194, 65, 167, 144, 118, 254, 24, 47, 201, 34, 196, 243, 21, 157, 123, 76, 170, 135, 97, 86, 176, 56, 222, 233, 15, 228, 2, 53, 211, 91, 189, 138, 108, 208, 54, 1, 231, 111, 137, 190, 88, 179, 85, 98, 132, 12, 234, 221, 59, 22, 240, 199, 33, 169, 79, 120, 158, 117, 147, 164, 66, 202, 44, 27, 253, ],
[0, 231, 211, 52, 187, 92, 104, 143, 107, 140, 184, 95, 208, 55, 3, 228, 214, 49, 5, 226, 109, 138, 190, 89, 189, 90, 110, 137, 6, 225, 213, 50, 177, 86, 98, 133, 10, 237, 217, 62, 218, 61, 9, 238, 97, 134, 178, 85, 103, 128, 180, 83, 220, 59, 15, 232, 12, 235, 223, 56, 183, 80, 100, 131, 127, 152, 172, 75, 196, 35, 23, 240, 20, 243, 199, 32, 175, 72, 124, 155, 169, 78, 122, 157, 18, 245, 193, 38, 194, 37, 17, 246, 121, 158, 170, 77, 206, 41, 29, 250, 117, 146, 166, 65, 165, 66, 118, 145, 30, 249, 205, 42, 24, 255, 203, 44, 163, 68, 112, 151, 115, 148, 160, 71, 200, 47, 27, 252, 254, 25, 45, 202, 69, 162, 150, 113, 149, 114, 70, 161, 46, 201, 253, 26, 40, 207, 251, 28, 147, 116, 64, 167, 67, 164, 144, 119, 248, 31, 43, 204, 79, 168, 156, 123, 244, 19, 39, 192, 36, 195, 247, 16, 159, 120, 76, 171, 153, 126, 74, 173, 34, 197, 241, 22, 242, 21, 33, 198, 73, 174, 154, 125, 129, 102, 82, 181, 58, 221, 233, 14, 234, 13, 57, 222, 81, 182, 130, 101, 87, 176, 132, 99, 236, 11, 63, 216, 60, 219, 239, 8, 135, 96, 84, 179, 48, 215, 227, 4, 139, 108, 88, 191, 91, 188, 136, 111, 224, 7, 51, 212, 230, 1, 53, 210, 93, 186, 142, 105, 141, 106, 94, 185, 54, 209, 229, 2, ],
[0, 232, 205, 37, 135, 111, 74, 162, 19, 251, 222, 54, 148, 124, 89, 177, 38, 206, 235, 3, 161, 73, 108, 132, 53, 221, 248, 16, 178, 90, 127, 151, 76, 164, 129, 105, 203, 35, 6, 238, 95, 183, 146, 122, 216, 48, 21, 253, 106, 130, 167, 79, 237, 5, 32, 200, 121, 145, 180, 92, 254, 22, 51, 219, 152, 112, 85, 189, 31, 247, 210, 58, 139, 99, 70, 174, 12, 228, 193, 41, 190, 86, 115, 155, 57, 209, 244, 28, 173, 69, 96, 136, 42, 194, 231, 15, 212, 60, 25, 241, 83, 187, 158, 118, 199, 47, 10, 226, 64, 168, 141, 101, 242, 26, 63, 215, 117, 157, 184, 80, 225, 9, 44, 196, 102, 142, 171, 67, 45, 197, 224, 8, 170, 66, 103, 143, 62, 214, 243, 27, 185, 81, 116, 156, 11, 227, 198, 46, 140, 100, 65, 169, 24, 240, 213, 61, 159, 119, 82, 186, 97, 137, 172, 68, 230, 14, 43, 195, 114, 154, 191, 87, 245, 29, 56, 208, 71, 175, 138, 98, 192, 40, 13, 229, 84, 188, 153, 113, 211, 59, 30, 246, 181, 93, 120, 144, 50, 218, 255, 23, 166, 78, 107, 131, 33, 201, 236, 4, 147, 123, 94, 182, 20, 252, 217, 49, 128, 104, 77, 165, 7, 239, 202, 34, 249, 17, 52, 220, 126, 150, 179, 91, 234, 2, 39, 207, 109, 133, 160, 72, 223, 55, 18, 250, 88, 176, 149, 125, 204, 36, 1, 233, 75, 163, 134, 110, ],
[0, 233, 207, 38, 131, 106, 76, 165, 27, 242, 212, 61, 152, 113, 87, 190, 54, 223, 249, 16, 181, 92, 122, 147, 45, 196, 226, 11, 174, 71, 97, 136, 108, 133, 163, 74, 239, 6, 32, 201, 119, 158, 184, 81, 244, 29, 59, 210, 90, 179, 149, 124, 217, 48, 22, 255, 65, 168, 142, 103, 194, 43, 13, 228, 216, 49, 23, 254, 91, 178, 148, 125, 195, 42, 12, 229, 64, 169, 143, 102, 238, 7, 33, 200, 109, 132, 162, 75, 245, 28, 58, 211, 118, 159, 185, 80, 180, 93, 123, 146, 55, 222, 248, 17, 175, 70, 96, 137, 44, 197, 227, 10, 130, 107, 77, 164, 1, 232, 206, 39, 153, 112, 86, 191, 26, 243, 213, 60, 173, 68, 98, 139, 46, 199, 225, 8, 182, 95, 121, 144, 53, 220, 250, 19, 155, 114, 84, 189, 24, 241, 215, 62, 128, 105, 79, 166, 3, 234, 204, 37, 193, 40, 14, 231, 66, 171, 141, 100, 218, 51, 21, 252, 89, 176, 150, 127, 247, 30, 56, 209, 116, 157, 187, 82, 236, 5, 35, 202, 111, 134, 160, 73, 117, 156, 186, 83, 246, 31, 57, 208, 110, 135, 161, 72, 237, 4, 34, 203, 67, 170, 140, 101, 192, 41, 15, 230, 88, 177, 151, 126, 219, 50, 20, 253, 25, 240, 214, 63, 154, 115, 85, 188, 2, 235, 205, 36, 129, 104, 78, 167, 47, 198, 224, 9, 172, 69, 99, 138, 52, 221, 251, 18, 183, 94, 120, 145, ],
[0, 234, 201, 35, 143, 101, 70, 172, 3, 233, 202, 32, 140, 102, 69, 175, 6, 236, 207, 37, 137, 99, 64, 170, 5, 239, 204, 38, 138, 96, 67, 169, 12, 230, 197, 47, 131, 105, 74, 160, 15, 229, 198, 44, 128, 106, 73, 163, 10, 224, 195, 41, 133, 111, 76, 166, 9, 227, 192, 42, 134, 108, 79, 165, 24, 242, 209, 59, 151, 125, 94, 180, 27, 241, 210, 56, 148, 126, 93, 183, 30, 244, 215, 61, 145, 123, 88, 178, 29, 247, 212, 62, 146, 120, 91, 177, 20, 254, 221, 55, 155, 113, 82, 184, 23, 253, 222, 52, 152, 114, 81, 187, 18, 248, 219, 49, 157, 119, 84, 190, 17, 251, 216, 50, 158, 116, 87, 189, 48, 218, 249, 19, 191, 85, 118, 156, 51, 217, 250, 16, 188, 86, 117, 159, 54, 220, 255, 21, 185, 83, 112, 154, 53, 223, 252, 22, 186, 80, 115, 153, 60, 214, 245, 31, 179, 89, 122, 144, 63, 213, 246, 28, 176, 90, 121, 147, 58, 208, 243, 25, 181, 95, 124, 150, 57, 211, 240, 26, 182, 92, 127, 149, 40, 194, 225, 11, 167, 77, 110, 132, 43, 193, 226, 8, 164, 78, 109, 135, 46, 196, 231, 13, 161, 75, 104, 130, 45, 199, 228, 14, 162, 72, 107, 129, 36, 206, 237, 7, 171, 65, 98, 136, 39, 205, 238, 4, 168, 66, 97, 139, 34, 200, 235, 1, 173, 71, 100, 142, 33, 203, 232, 2, 174, 68, 103, 141, ],
[0, 235, 203, 32, 139, 96, 64, 171, 11, 224, 192, 43, 128, 107, 75, 160, 22, 253, 221, 54, 157, 118, 86, 189, 29, 246, 214, 61, 150, 125, 93, 182, 44, 199, 231, 12, 167, 76, 108, 135, 39, 204, 236, 7, 172, 71, 103, 140, 58, 209, 241, 26, 177, 90, 122, 145, 49, 218, 250, 17, 186, 81, 113, 154, 88, 179, 147, 120, 211, 56, 24, 243, 83, 184, 152, 115, 216, 51, 19, 248, 78, 165, 133, 110, 197, 46, 14, 229, 69, 174, 142, 101, 206, 37, 5, 238, 116, 159, 191, 84, 255, 20, 52, 223, 127, 148, 180, 95, 244, 31, 63, 212, 98, 137, 169, 66, 233, 2, 34, 201, 105, 130, 162, 73, 226, 9, 41, 194, 176, 91, 123, 144, 59, 208, 240, 27, 187, 80, 112, 155, 48, 219, 251, 16, 166, 77, 109, 134, 45, 198, 230, 13, 173, 70, 102, 141, 38, 205, 237, 6, 156, 119, 87, 188, 23, 252, 220, 55, 151, 124, 92, 183, 28, 247, 215, 60, 138, 97, 65, 170, 1, 234, 202, 33, 129, 106, 74, 161, 10, 225, 193, 42, 232, 3, 35, 200, 99, 136, 168, 67, 227, 8, 40, 195, 104, 131, 163, 72, 254, 21, 53, 222, 117, 158, 190, 85, 245, 30, 62, 213, 126, 149, 181, 94, 196, 47, 15, 228, 79, 164, 132, 111, 207, 36, 4, 239, 68, 175, 143, 100, 210, 57, 25, 242, 89, 178, 146, 121, 217, 50, 18, 249, 82, 185, 153, 114, ],
[0, 236, 197, 41, 151, 123, 82, 190, 51, 223, 246, 26, 164, 72, 97, 141, 102, 138, 163, 79, 241, 29, 52, 216, 85, 185, 144, 124, 194, 46, 7, 235, 204, 32, 9, 229, 91, 183, 158, 114, 255, 19, 58, 214, 104, 132, 173, 65, 170, 70, 111, 131, 61, 209, 248, 20, 153, 117, 92, 176, 14, 226, 203, 39, 133, 105, 64, 172, 18, 254, 215, 59, 182, 90, 115, 159, 33, 205, 228, 8, 227, 15, 38, 202, 116, 152, 177, 93, 208, 60, 21, 249, 71, 171, 130, 110, 73, 165, 140, 96, 222, 50, 27, 247, 122, 150, 191, 83, 237, 1, 40, 196, 47, 195, 234, 6, 184, 84, 125, 145, 28, 240, 217, 53, 139, 103, 78, 162, 23, 251, 210, 62, 128, 108, 69, 169, 36, 200, 225, 13, 179, 95, 118, 154, 113, 157, 180, 88, 230, 10, 35, 207, 66, 174, 135, 107, 213, 57, 16, 252, 219, 55, 30, 242, 76, 160, 137, 101, 232, 4, 45, 193, 127, 147, 186, 86, 189, 81, 120, 148, 42, 198, 239, 3, 142, 98, 75, 167, 25, 245, 220, 48, 146, 126, 87, 187, 5, 233, 192, 44, 161, 77, 100, 136, 54, 218, 243, 31, 244, 24, 49, 221, 99, 143, 166, 74, 199, 43, 2, 238, 80, 188, 149, 121, 94, 178, 155, 119, 201, 37, 12, 224, 109, 129, 168, 68, 250, 22, 63, 211, 56, 212, 253, 17, 175, 67, 106, 134, 11, 231, 206, 34, 156, 112, 89, 181, ],
[0, 237, 199, 42, 147, 126, 84, 185, 59, 214, 252, 17, 168, 69, 111, 130, 118, 155, 177, 92, 229, 8, 34, 207, 77, 160, 138, 103, 222, 51, 25, 244, 236, 1, 43, 198, 127, 146, 184, 85, 215, 58, 16, 253, 68, 169, 131, 110, 154, 119, 93, 176, 9, 228, 206, 35, 161, 76, 102, 139, 50, 223, 245, 24, 197, 40, 2, 239, 86, 187, 145, 124, 254, 19, 57, 212, 109, 128, 170, 71, 179, 94, 116, 153, 32, 205, 231, 10, 136, 101, 79, 162, 27, 246, 220, 49, 41, 196, 238, 3, 186, 87, 125, 144, 18, 255, 213, 56, 129, 108, 70, 171, 95, 178, 152, 117, 204, 33, 11, 230, 100, 137, 163, 78, 247, 26, 48, 221, 151, 122, 80, 189, 4, 233, 195, 46, 172, 65, 107, 134, 63, 210, 248, 21, 225, 12, 38, 203, 114, 159, 181, 88, 218, 55, 29, 240, 73, 164, 142, 99, 123, 150, 188, 81, 232, 5, 47, 194, 64, 173, 135, 106, 211, 62, 20, 249, 13, 224, 202, 39, 158, 115, 89, 180, 54, 219, 241, 28, 165, 72, 98, 143, 82, 191, 149, 120, 193, 44, 6, 235, 105, 132, 174, 67, 250, 23, 61, 208, 36, 201, 227, 14, 183, 90, 112, 157, 31, 242, 216, 53, 140, 97, 75, 166, 190, 83, 121, 148, 45, 192, 234, 7, 133, 104, 66, 175, 22, 251, 209, 60, 200, 37, 15, 226, 91, 182, 156, 113, 243, 30, 52, 217, 96, 141, 167, 74, ],
[0, 238, 193, 47, 159, 113, 94, 176, 35, 205, 226, 12, 188, 82, 125, 147, 70, 168, 135, 105, 217, 55, 24, 246, 101, 139, 164, 74, 250, 20, 59, 213, 140, 98, 77, 163, 19, 253, 210, 60, 175, 65, 110, 128, 48, 222, 241, 31, 202, 36, 11, 229, 85, 187, 148, 122, 233, 7, 40, 198, 118, 152, 183, 89, 5, 235, 196, 42, 154, 116, 91, 181, 38, 200, 231, 9, 185, 87, 120, 150, 67, 173, 130, 108, 220, 50, 29, 243, 96, 142, 161, 79, 255, 17, 62, 208, 137, 103, 72, 166, 22, 248, 215, 57, 170, 68, 107, 133, 53, 219, 244, 26, 207, 33, 14, 224, 80, 190, 145, 127, 236, 2, 45, 195, 115, 157, 178, 92, 10, 228, 203, 37, 149, 123, 84, 186, 41, 199, 232, 6, 182, 88, 119, 153, 76, 162, 141, 99, 211, 61, 18, 252, 111, 129, 174, 64, 240, 30, 49, 223, 134, 104, 71, 169, 25, 247, 216, 54, 165, 75, 100, 138, 58, 212, 251, 21, 192, 46, 1, 239, 95, 177, 158, 112, 227, 13, 34, 204, 124, 146, 189, 83, 15, 225, 206, 32, 144, 126, 81, 191, 44, 194, 237, 3, 179, 93, 114, 156, 73, 167, 136, 102, 214, 56, 23, 249, 106, 132, 171, 69, 245, 27, 52, 218, 131, 109, 66, 172, 28, 242, 221, 51, 160, 78, 97, 143, 63, 209, 254, 16, 197, 43, 4, 234, 90, 180, 155, 117, 230, 8, 39, 201, 121, 151, 184, 86, ],
[0, 239, 195, 44, 155, 116, 88, 183, 43, 196, 232, 7, 176, 95, 115, 156, 86, 185, 149, 122, 205, 34, 14, 225, 125, 146, 190, 81, 230, 9, 37, 202, 172, 67, 111, 128, 55, 216, 244, 27, 135, 104, 68, 171, 28, 243, 223, 48, 250, 21, 57, 214, 97, 142, 162, 77, 209, 62, 18, 253, 74, 165, 137, 102, 69, 170, 134, 105, 222, 49, 29, 242, 110, 129, 173, 66, 245, 26, 54, 217, 19, 252, 208, 63, 136, 103, 75, 164, 56, 215, 251, 20, 163, 76, 96, 143, 233, 6, 42, 197, 114, 157, 177, 94, 194, 45, 1, 238, 89, 182, 154, 117, 191, 80, 124, 147, 36, 203, 231, 8, 148, 123, 87, 184, 15, 224, 204, 35, 138, 101, 73, 166, 17, 254, 210, 61, 161, 78, 98, 141, 58, 213, 249, 22, 220, 51, 31, 240, 71, 168, 132, 107, 247, 24, 52, 219, 108, 131, 175, 64, 38, 201, 229, 10, 189, 82, 126, 145, 13, 226, 206, 33, 150, 121, 85, 186, 112, 159, 179, 92, 235, 4, 40, 199, 91, 180, 152, 119, 192, 47, 3, 236, 207, 32, 12, 227, 84, 187, 151, 120, 228, 11, 39, 200, 127, 144, 188, 83, 153, 118, 90, 181, 2, 237, 193, 46, 178, 93, 113, 158, 41, 198, 234, 5, 99, 140, 160, 79, 248, 23, 59, 212, 72, 167, 139, 100, 211, 60, 16, 255, 53, 218, 246, 25, 174, 65, 109, 130, 30, 241, 221, 50, 133, 106, 70, 169, ],
[0, 240, 253, 13, 231, 23, 26, 234, 211, 35, 46, 222, 52, 196, 201, 57, 187, 75, 70, 182, 92, 172, 161, 81, 104, 152, 149, 101, 143, 127, 114, 130, 107, 155, 150, 102, 140, 124, 113, 129, 184, 72, 69, 181, 95, 175, 162, 82, 208, 32, 45, 221, 55, 199, 202, 58, 3, 243, 254, 14, 228, 20, 25, 233, 214, 38, 43, 219, 49, 193, 204, 60, 5, 245, 248, 8, 226, 18, 31, 239, 109, 157, 144, 96, 138, 122, 119, 135, 190, 78, 67, 179, 89, 169, 164, 84, 189, 77, 64, 176, 90, 170, 167, 87, 110, 158, 147, 99, 137, 121, 116, 132, 6, 246, 251, 11, 225, 17, 28, 236, 213, 37, 40, 216, 50, 194, 207, 63, 177, 65, 76, 188, 86, 166, 171, 91, 98, 146, 159, 111, 133, 117, 120, 136, 10, 250, 247, 7, 237, 29, 16, 224, 217, 41, 36, 212, 62, 206, 195, 51, 218, 42, 39, 215, 61, 205, 192, 48, 9, 249, 244, 4, 238, 30, 19, 227, 97, 145, 156, 108, 134, 118, 123, 139, 178, 66, 79, 191, 85, 165, 168, 88, 103, 151, 154, 106, 128, 112, 125, 141, 180, 68, 73, 185, 83, 163, 174, 94, 220, 44, 33, 209, 59, 203, 198, 54, 15, 255, 242, 2, 232, 24, 21, 229, 12, 252, 241, 1, 235, 27, 22, 230, 223, 47, 34, 210, 56, 200, 197, 53, 183, 71, 74, 186, 80, 160, 173, 93, 100, 148, 153, 105, 131, 115, 126, 142, ],
[0, 241, 255, 14, 227, 18, 28, 237, 219, 42, 36, 213, 56, 201, 199, 54, 171, 90, 84, 165, 72, 185, 183, 70, 112, 129, 143, 126, 147, 98, 108, 157, 75, 186, 180, 69, 168, 89, 87, 166, 144, 97, 111, 158, 115, 130, 140, 125, 224, 17, 31, 238, 3, 242, 252, 13, 59, 202, 196, 53, 216, 41, 39, 214, 150, 103, 105, 152, 117, 132, 138, 123, 77, 188, 178, 67, 174, 95, 81, 160, 61, 204, 194, 51, 222, 47, 33, 208, 230, 23, 25, 232, 5, 244, 250, 11, 221, 44, 34, 211, 62, 207, 193, 48, 6, 247, 249, 8, 229, 20, 26, 235, 118, 135, 137, 120, 149, 100, 106, 155, 173, 92, 82, 163, 78, 191, 177, 64, 49, 192, 206, 63, 210, 35, 45, 220, 234, 27, 21, 228, 9, 248, 246, 7, 154, 107, 101, 148, 121, 136, 134, 119, 65, 176, 190, 79, 162, 83, 93, 172, 122, 139, 133, 116, 153, 104, 102, 151, 161, 80, 94, 175, 66, 179, 189, 76, 209, 32, 46, 223, 50, 195, 205, 60, 10, 251, 245, 4, 233, 24, 22, 231, 167, 86, 88, 169, 68, 181, 187, 74, 124, 141, 131, 114, 159, 110, 96, 145, 12, 253, 243, 2, 239, 30, 16, 225, 215, 38, 40, 217, 52, 197, 203, 58, 236, 29, 19, 226, 15, 254, 240, 1, 55, 198, 200, 57, 212, 37, 43, 218, 71, 182, 184, 73, 164, 85, 91, 170, 156, 109, 99, 146, 127, 142, 128, 113, ],
[0, 242, 249, 11, 239, 29, 22, 228, 195, 49, 58, 200, 44, 222, 213, 39, 155, 105, 98, 144, 116, 134, 141, 127, 88, 170, 161, 83, 183, 69, 78, 188, 43, 217, 210, 32, 196, 54, 61, 207, 232, 26, 17, 227, 7, 245, 254, 12, 176, 66, 73, 187, 95, 173, 166, 84, 115, 129, 138, 120, 156, 110, 101, 151, 86, 164, 175, 93, 185, 75, 64, 178, 149, 103, 108, 158, 122, 136, 131, 113, 205, 63, 52, 198, 34, 208, 219, 41, 14, 252, 247, 5, 225, 19, 24, 234, 125, 143, 132, 118, 146, 96, 107, 153, 190, 76, 71, 181, 81, 163, 168, 90, 230, 20, 31, 237, 9, 251, 240, 2, 37, 215, 220, 46, 202, 56, 51, 193, 172, 94, 85, 167, 67, 177, 186, 72, 111, 157, 150, 100, 128, 114, 121, 139, 55, 197, 206, 60, 216, 42, 33, 211, 244, 6, 13, 255, 27, 233, 226, 16, 135, 117, 126, 140, 104, 154, 145, 99, 68, 182, 189, 79, 171, 89, 82, 160, 28, 238, 229, 23, 243, 1, 10, 248, 223, 45, 38, 212, 48, 194, 201, 59, 250, 8, 3, 241, 21, 231, 236, 30, 57, 203, 192, 50, 214, 36, 47, 221, 97, 147, 152, 106, 142, 124, 119, 133, 162, 80, 91, 169, 77, 191, 180, 70, 209, 35, 40, 218, 62, 204, 199, 53, 18, 224, 235, 25, 253, 15, 4, 246, 74, 184, 179, 65, 165, 87, 92, 174, 137, 123, 112, 130, 102, 148, 159, 109, ],
[0, 243, 251, 8, 235, 24, 16, 227, 203, 56, 48, 195, 32, 211, 219, 40, 139, 120, 112, 131, 96, 147, 155, 104, 64, 179, 187, 72, 171, 88, 80, 163, 11, 248, 240, 3, 224, 19, 27, 232, 192, 51, 59, 200, 43, 216, 208, 35, 128, 115, 123, 136, 107, 152, 144, 99, 75, 184, 176, 67, 160, 83, 91, 168, 22, 229, 237, 30, 253, 14, 6, 245, 221, 46, 38, 213, 54, 197, 205, 62, 157, 110, 102, 149, 118, 133, 141, 126, 86, 165, 173, 94, 189, 78, 70, 181, 29, 238, 230, 21, 246, 5, 13, 254, 214, 37, 45, 222, 61, 206, 198, 53, 150, 101, 109, 158, 125, 142, 134, 117, 93, 174, 166, 85, 182, 69, 77, 190, 44, 223, 215, 36, 199, 52, 60, 207, 231, 20, 28, 239, 12, 255, 247, 4, 167, 84, 92, 175, 76, 191, 183, 68, 108, 159, 151, 100, 135, 116, 124, 143, 39, 212, 220, 47, 204, 63, 55, 196, 236, 31, 23, 228, 7, 244, 252, 15, 172, 95, 87, 164, 71, 180, 188, 79, 103, 148, 156, 111, 140, 127, 119, 132, 58, 201, 193, 50, 209, 34, 42, 217, 241, 2, 10, 249, 26, 233, 225, 18, 177, 66, 74, 185, 90, 169, 161, 82, 122, 137, 129, 114, 145, 98, 106, 153, 49, 194, 202, 57, 218, 41, 33, 210, 250, 9, 1, 242, 17, 226, 234, 25, 186, 73, 65, 178, 81, 162, 170, 89, 113, 130, 138, 121, 154, 105, 97, 146, ],
[0, 244, 245, 1, 247, 3, 2, 246, 243, 7, 6, 242, 4, 240, 241, 5, 251, 15, 14, 250, 12, 248, 249, 13, 8, 252, 253, 9, 255, 11, 10, 254, 235, 31, 30, 234, 28, 232, 233, 29, 24, 236, 237, 25, 239, 27, 26, 238, 16, 228, 229, 17, 231, 19, 18, 230, 227, 23, 22, 226, 20, 224, 225, 21, 203, 63, 62, 202, 60, 200, 201, 61, 56, 204, 205, 57, 207, 59, 58, 206, 48, 196, 197, 49, 199, 51, 50, 198, 195, 55, 54, 194, 52, 192, 193, 53, 32, 212, 213, 33, 215, 35, 34, 214, 211, 39, 38, 210, 36, 208, 209, 37, 219, 47, 46, 218, 44, 216, 217, 45, 40, 220, 221, 41, 223, 43, 42, 222, 139, 127, 126, 138, 124, 136, 137, 125, 120, 140, 141, 121, 143, 123, 122, 142, 112, 132, 133, 113, 135, 115, 114, 134, 131, 119, 118, 130, 116, 128, 129, 117, 96, 148, 149, 97, 151, 99, 98, 150, 147, 103, 102, 146, 100, 144, 145, 101, 155, 111, 110, 154, 108, 152, 153, 109, 104, 156, 157, 105, 159, 107, 106, 158, 64, 180, 181, 65, 183, 67, 66, 182, 179, 71, 70, 178, 68, 176, 177, 69, 187, 79, 78, 186, 76, 184, 185, 77, 72, 188, 189, 73, 191, 75, 74, 190, 171, 95, 94, 170, 92, 168, 169, 93, 88, 172, 173, 89, 175, 91, 90, 174, 80, 164, 165, 81, 167, 83, 82, 166, 163, 87, 86, 162, 84, 160, 161, 85, ],
[0, 245, 247, 2, 243, 6, 4, 241, 251, 14, 12, 249, 8, 253, 255, 10, 235, 30, 28, 233, 24, 237, 239, 26, 16, 229, 231, 18, 227, 22, 20, 225, 203, 62, 60, 201, 56, 205, 207, 58, 48, 197, 199, 50, 195, 54, 52, 193, 32, 213, 215, 34, 211, 38, 36, 209, 219, 46, 44, 217, 40, 221, 223, 42, 139, 126, 124, 137, 120, 141, 143, 122, 112, 133, 135, 114, 131, 118, 116, 129, 96, 149, 151, 98, 147, 102, 100, 145, 155, 110, 108, 153, 104, 157, 159, 106, 64, 181, 183, 66, 179, 70, 68, 177, 187, 78, 76, 185, 72, 189, 191, 74, 171, 94, 92, 169, 88, 173, 175, 90, 80, 165, 167, 82, 163, 86, 84, 161, 11, 254, 252, 9, 248, 13, 15, 250, 240, 5, 7, 242, 3, 246, 244, 1, 224, 21, 23, 226, 19, 230, 228, 17, 27, 238, 236, 25, 232, 29, 31, 234, 192, 53, 55, 194, 51, 198, 196, 49, 59, 206, 204, 57, 200, 61, 63, 202, 43, 222, 220, 41, 216, 45, 47, 218, 208, 37, 39, 210, 35, 214, 212, 33, 128, 117, 119, 130, 115, 134, 132, 113, 123, 142, 140, 121, 136, 125, 127, 138, 107, 158, 156, 105, 152, 109, 111, 154, 144, 101, 103, 146, 99, 150, 148, 97, 75, 190, 188, 73, 184, 77, 79, 186, 176, 69, 71, 178, 67, 182, 180, 65, 160, 85, 87, 162, 83, 166, 164, 81, 91, 174, 172, 89, 168, 93, 95, 170, ],
[0, 246, 241, 7, 255, 9, 14, 248, 227, 21, 18, 228, 28, 234, 237, 27, 219, 45, 42, 220, 36, 210, 213, 35, 56, 206, 201, 63, 199, 49, 54, 192, 171, 93, 90, 172, 84, 162, 165, 83, 72, 190, 185, 79, 183, 65, 70, 176, 112, 134, 129, 119, 143, 121, 126, 136, 147, 101, 98, 148, 108, 154, 157, 107, 75, 189, 186, 76, 180, 66, 69, 179, 168, 94, 89, 175, 87, 161, 166, 80, 144, 102, 97, 151, 111, 153, 158, 104, 115, 133, 130, 116, 140, 122, 125, 139, 224, 22, 17, 231, 31, 233, 238, 24, 3, 245, 242, 4, 252, 10, 13, 251, 59, 205, 202, 60, 196, 50, 53, 195, 216, 46, 41, 223, 39, 209, 214, 32, 150, 96, 103, 145, 105, 159, 152, 110, 117, 131, 132, 114, 138, 124, 123, 141, 77, 187, 188, 74, 178, 68, 67, 181, 174, 88, 95, 169, 81, 167, 160, 86, 61, 203, 204, 58, 194, 52, 51, 197, 222, 40, 47, 217, 33, 215, 208, 38, 230, 16, 23, 225, 25, 239, 232, 30, 5, 243, 244, 2, 250, 12, 11, 253, 221, 43, 44, 218, 34, 212, 211, 37, 62, 200, 207, 57, 193, 55, 48, 198, 6, 240, 247, 1, 249, 15, 8, 254, 229, 19, 20, 226, 26, 236, 235, 29, 118, 128, 135, 113, 137, 127, 120, 142, 149, 99, 100, 146, 106, 156, 155, 109, 173, 91, 92, 170, 82, 164, 163, 85, 78, 184, 191, 73, 177, 71, 64, 182, ],
[0, 247, 243, 4, 251, 12, 8, 255, 235, 28, 24, 239, 16, 231, 227, 20, 203, 60, 56, 207, 48, 199, 195, 52, 32, 215, 211, 36, 219, 44, 40, 223, 139, 124, 120, 143, 112, 135, 131, 116, 96, 151, 147, 100, 155, 108, 104, 159, 64, 183, 179, 68, 187, 76, 72, 191, 171, 92, 88, 175, 80, 167, 163, 84, 11, 252, 248, 15, 240, 7, 3, 244, 224, 23, 19, 228, 27, 236, 232, 31, 192, 55, 51, 196, 59, 204, 200, 63, 43, 220, 216, 47, 208, 39, 35, 212, 128, 119, 115, 132, 123, 140, 136, 127, 107, 156, 152, 111, 144, 103, 99, 148, 75, 188, 184, 79, 176, 71, 67, 180, 160, 87, 83, 164, 91, 172, 168, 95, 22, 225, 229, 18, 237, 26, 30, 233, 253, 10, 14, 249, 6, 241, 245, 2, 221, 42, 46, 217, 38, 209, 213, 34, 54, 193, 197, 50, 205, 58, 62, 201, 157, 106, 110, 153, 102, 145, 149, 98, 118, 129, 133, 114, 141, 122, 126, 137, 86, 161, 165, 82, 173, 90, 94, 169, 189, 74, 78, 185, 70, 177, 181, 66, 29, 234, 238, 25, 230, 17, 21, 226, 246, 1, 5, 242, 13, 250, 254, 9, 214, 33, 37, 210, 45, 218, 222, 41, 61, 202, 206, 57, 198, 49, 53, 194, 150, 97, 101, 146, 109, 154, 158, 105, 125, 138, 142, 121, 134, 113, 117, 130, 93, 170, 174, 89, 166, 81, 85, 162, 182, 65, 69, 178, 77, 186, 190, 73, ],
[0, 248, 237, 21, 199, 63, 42, 210, 147, 107, 126, 134, 84, 172, 185, 65, 59, 195, 214, 46, 252, 4, 17, 233, 168, 80, 69, 189, 111, 151, 130, 122, 118, 142, 155, 99, 177, 73, 92, 164, 229, 29, 8, 240, 34, 218, 207, 55, 77, 181, 160, 88, 138, 114, 103, 159, 222, 38, 51, 203, 25, 225, 244, 12, 236, 20, 1, 249, 43, 211, 198, 62, 127, 135, 146, 106, 184, 64, 85, 173, 215, 47, 58, 194, 16, 232, 253, 5, 68, 188, 169, 81, 131, 123, 110, 150, 154, 98, 119, 143, 93, 165, 176, 72, 9, 241, 228, 28, 206, 54, 35, 219, 161, 89, 76, 180, 102, 158, 139, 115, 50, 202, 223, 39, 245, 13, 24, 224, 197, 61, 40, 208, 2, 250, 239, 23, 86, 174, 187, 67, 145, 105, 124, 132, 254, 6, 19, 235, 57, 193, 212, 44, 109, 149, 128, 120, 170, 82, 71, 191, 179, 75, 94, 166, 116, 140, 153, 97, 32, 216, 205, 53, 231, 31, 10, 242, 136, 112, 101, 157, 79, 183, 162, 90, 27, 227, 246, 14, 220, 36, 49, 201, 41, 209, 196, 60, 238, 22, 3, 251, 186, 66, 87, 175, 125, 133, 144, 104, 18, 234, 255, 7, 213, 45, 56, 192, 129, 121, 108, 148, 70, 190, 171, 83, 95, 167, 178, 74, 152, 96, 117, 141, 204, 52, 33, 217, 11, 243, 230, 30, 100, 156, 137, 113, 163, 91, 78, 182, 247, 15, 26, 226, 48, 200, 221, 37, ],
[0, 249, 239, 22, 195, 58, 44, 213, 155, 98, 116, 141, 88, 161, 183, 78, 43, 210, 196, 61, 232, 17, 7, 254, 176, 73, 95, 166, 115, 138, 156, 101, 86, 175, 185, 64, 149, 108, 122, 131, 205, 52, 34, 219, 14, 247, 225, 24, 125, 132, 146, 107, 190, 71, 81, 168, 230, 31, 9, 240, 37, 220, 202, 51, 172, 85, 67, 186, 111, 150, 128, 121, 55, 206, 216, 33, 244, 13, 27, 226, 135, 126, 104, 145, 68, 189, 171, 82, 28, 229, 243, 10, 223, 38, 48, 201, 250, 3, 21, 236, 57, 192, 214, 47, 97, 152, 142, 119, 162, 91, 77, 180, 209, 40, 62, 199, 18, 235, 253, 4, 74, 179, 165, 92, 137, 112, 102, 159, 69, 188, 170, 83, 134, 127, 105, 144, 222, 39, 49, 200, 29, 228, 242, 11, 110, 151, 129, 120, 173, 84, 66, 187, 245, 12, 26, 227, 54, 207, 217, 32, 19, 234, 252, 5, 208, 41, 63, 198, 136, 113, 103, 158, 75, 178, 164, 93, 56, 193, 215, 46, 251, 2, 20, 237, 163, 90, 76, 181, 96, 153, 143, 118, 233, 16, 6, 255, 42, 211, 197, 60, 114, 139, 157, 100, 177, 72, 94, 167, 194, 59, 45, 212, 1, 248, 238, 23, 89, 160, 182, 79, 154, 99, 117, 140, 191, 70, 80, 169, 124, 133, 147, 106, 36, 221, 203, 50, 231, 30, 8, 241, 148, 109, 123, 130, 87, 174, 184, 65, 15, 246, 224, 25, 204, 53, 35, 218, ],
[0, 250, 233, 19, 207, 53, 38, 220, 131, 121, 106, 144, 76, 182, 165, 95, 27, 225, 242, 8, 212, 46, 61, 199, 152, 98, 113, 139, 87, 173, 190, 68, 54, 204, 223, 37, 249, 3, 16, 234, 181, 79, 92, 166, 122, 128, 147, 105, 45, 215, 196, 62, 226, 24, 11, 241, 174, 84, 71, 189, 97, 155, 136, 114, 108, 150, 133, 127, 163, 89, 74, 176, 239, 21, 6, 252, 32, 218, 201, 51, 119, 141, 158, 100, 184, 66, 81, 171, 244, 14, 29, 231, 59, 193, 210, 40, 90, 160, 179, 73, 149, 111, 124, 134, 217, 35, 48, 202, 22, 236, 255, 5, 65, 187, 168, 82, 142, 116, 103, 157, 194, 56, 43, 209, 13, 247, 228, 30, 216, 34, 49, 203, 23, 237, 254, 4, 91, 161, 178, 72, 148, 110, 125, 135, 195, 57, 42, 208, 12, 246, 229, 31, 64, 186, 169, 83, 143, 117, 102, 156, 238, 20, 7, 253, 33, 219, 200, 50, 109, 151, 132, 126, 162, 88, 75, 177, 245, 15, 28, 230, 58, 192, 211, 41, 118, 140, 159, 101, 185, 67, 80, 170, 180, 78, 93, 167, 123, 129, 146, 104, 55, 205, 222, 36, 248, 2, 17, 235, 175, 85, 70, 188, 96, 154, 137, 115, 44, 214, 197, 63, 227, 25, 10, 240, 130, 120, 107, 145, 77, 183, 164, 94, 1, 251, 232, 18, 206, 52, 39, 221, 153, 99, 112, 138, 86, 172, 191, 69, 26, 224, 243, 9, 213, 47, 60, 198, ],
[0, 251, 235, 16, 203, 48, 32, 219, 139, 112, 96, 155, 64, 187, 171, 80, 11, 240, 224, 27, 192, 59, 43, 208, 128, 123, 107, 144, 75, 176, 160, 91, 22, 237, 253, 6, 221, 38, 54, 205, 157, 102, 118, 141, 86, 173, 189, 70, 29, 230, 246, 13, 214, 45, 61, 198, 150, 109, 125, 134, 93, 166, 182, 77, 44, 215, 199, 60, 231, 28, 12, 247, 167, 92, 76, 183, 108, 151, 135, 124, 39, 220, 204, 55, 236, 23, 7, 252, 172, 87, 71, 188, 103, 156, 140, 119, 58, 193, 209, 42, 241, 10, 26, 225, 177, 74, 90, 161, 122, 129, 145, 106, 49, 202, 218, 33, 250, 1, 17, 234, 186, 65, 81, 170, 113, 138, 154, 97, 88, 163, 179, 72, 147, 104, 120, 131, 211, 40, 56, 195, 24, 227, 243, 8, 83, 168, 184, 67, 152, 99, 115, 136, 216, 35, 51, 200, 19, 232, 248, 3, 78, 181, 165, 94, 133, 126, 110, 149, 197, 62, 46, 213, 14, 245, 229, 30, 69, 190, 174, 85, 142, 117, 101, 158, 206, 53, 37, 222, 5, 254, 238, 21, 116, 143, 159, 100, 191, 68, 84, 175, 255, 4, 20, 239, 52, 207, 223, 36, 127, 132, 148, 111, 180, 79, 95, 164, 244, 15, 31, 228, 63, 196, 212, 47, 98, 153, 137, 114, 169, 82, 66, 185, 233, 18, 2, 249, 34, 217, 201, 50, 105, 146, 130, 121, 162, 89, 73, 178, 226, 25, 9, 242, 41, 210, 194, 57, ],
[0, 252, 229, 25, 215, 43, 50, 206, 179, 79, 86, 170, 100, 152, 129, 125, 123, 135, 158, 98, 172, 80, 73, 181, 200, 52, 45, 209, 31, 227, 250, 6, 246, 10, 19, 239, 33, 221, 196, 56, 69, 185, 160, 92, 146, 110, 119, 139, 141, 113, 104, 148, 90, 166, 191, 67, 62, 194, 219, 39, 233, 21, 12, 240, 241, 13, 20, 232, 38, 218, 195, 63, 66, 190, 167, 91, 149, 105, 112, 140, 138, 118, 111, 147, 93, 161, 184, 68, 57, 197, 220, 32, 238, 18, 11, 247, 7, 251, 226, 30, 208, 44, 53, 201, 180, 72, 81, 173, 99, 159, 134, 122, 124, 128, 153, 101, 171, 87, 78, 178, 207, 51, 42, 214, 24, 228, 253, 1, 255, 3, 26, 230, 40, 212, 205, 49, 76, 176, 169, 85, 155, 103, 126, 130, 132, 120, 97, 157, 83, 175, 182, 74, 55, 203, 210, 46, 224, 28, 5, 249, 9, 245, 236, 16, 222, 34, 59, 199, 186, 70, 95, 163, 109, 145, 136, 116, 114, 142, 151, 107, 165, 89, 64, 188, 193, 61, 36, 216, 22, 234, 243, 15, 14, 242, 235, 23, 217, 37, 60, 192, 189, 65, 88, 164, 106, 150, 143, 115, 117, 137, 144, 108, 162, 94, 71, 187, 198, 58, 35, 223, 17, 237, 244, 8, 248, 4, 29, 225, 47, 211, 202, 54, 75, 183, 174, 82, 156, 96, 121, 133, 131, 127, 102, 154, 84, 168, 177, 77, 48, 204, 213, 41, 231, 27, 2, 254, ],
[0, 253, 231, 26, 211, 46, 52, 201, 187, 70, 92, 161, 104, 149, 143, 114, 107, 150, 140, 113, 184, 69, 95, 162, 208, 45, 55, 202, 3, 254, 228, 25, 214, 43, 49, 204, 5, 248, 226, 31, 109, 144, 138, 119, 190, 67, 89, 164, 189, 64, 90, 167, 110, 147, 137, 116, 6, 251, 225, 28, 213, 40, 50, 207, 177, 76, 86, 171, 98, 159, 133, 120, 10, 247, 237, 16, 217, 36, 62, 195, 218, 39, 61, 192, 9, 244, 238, 19, 97, 156, 134, 123, 178, 79, 85, 168, 103, 154, 128, 125, 180, 73, 83, 174, 220, 33, 59, 198, 15, 242, 232, 21, 12, 241, 235, 22, 223, 34, 56, 197, 183, 74, 80, 173, 100, 153, 131, 126, 127, 130, 152, 101, 172, 81, 75, 182, 196, 57, 35, 222, 23, 234, 240, 13, 20, 233, 243, 14, 199, 58, 32, 221, 175, 82, 72, 181, 124, 129, 155, 102, 169, 84, 78, 179, 122, 135, 157, 96, 18, 239, 245, 8, 193, 60, 38, 219, 194, 63, 37, 216, 17, 236, 246, 11, 121, 132, 158, 99, 170, 87, 77, 176, 206, 51, 41, 212, 29, 224, 250, 7, 117, 136, 146, 111, 166, 91, 65, 188, 165, 88, 66, 191, 118, 139, 145, 108, 30, 227, 249, 4, 205, 48, 42, 215, 24, 229, 255, 2, 203, 54, 44, 209, 163, 94, 68, 185, 112, 141, 151, 106, 115, 142, 148, 105, 160, 93, 71, 186, 200, 53, 47, 210, 27, 230, 252, 1, ],
[0, 254, 225, 31, 223, 33, 62, 192, 163, 93, 66, 188, 124, 130, 157, 99, 91, 165, 186, 68, 132, 122, 101, 155, 248, 6, 25, 231, 39, 217, 198, 56, 182, 72, 87, 169, 105, 151, 136, 118, 21, 235, 244, 10, 202, 52, 43, 213, 237, 19, 12, 242, 50, 204, 211, 45, 78, 176, 175, 81, 145, 111, 112, 142, 113, 143, 144, 110, 174, 80, 79, 177, 210, 44, 51, 205, 13, 243, 236, 18, 42, 212, 203, 53, 245, 11, 20, 234, 137, 119, 104, 150, 86, 168, 183, 73, 199, 57, 38, 216, 24, 230, 249, 7, 100, 154, 133, 123, 187, 69, 90, 164, 156, 98, 125, 131, 67, 189, 162, 92, 63, 193, 222, 32, 224, 30, 1, 255, 226, 28, 3, 253, 61, 195, 220, 34, 65, 191, 160, 94, 158, 96, 127, 129, 185, 71, 88, 166, 102, 152, 135, 121, 26, 228, 251, 5, 197, 59, 36, 218, 84, 170, 181, 75, 139, 117, 106, 148, 247, 9, 22, 232, 40, 214, 201, 55, 15, 241, 238, 16, 208, 46, 49, 207, 172, 82, 77, 179, 115, 141, 146, 108, 147, 109, 114, 140, 76, 178, 173, 83, 48, 206, 209, 47, 239, 17, 14, 240, 200, 54, 41, 215, 23, 233, 246, 8, 107, 149, 138, 116, 180, 74, 85, 171, 37, 219, 196, 58, 250, 4, 27, 229, 134, 120, 103, 153, 89, 167, 184, 70, 126, 128, 159, 97, 161, 95, 64, 190, 221, 35, 60, 194, 2, 252, 227, 29, ],
[0, 255, 227, 28, 219, 36, 56, 199, 171, 84, 72, 183, 112, 143, 147, 108, 75, 180, 168, 87, 144, 111, 115, 140, 224, 31, 3, 252, 59, 196, 216, 39, 150, 105, 117, 138, 77, 178, 174, 81, 61, 194, 222, 33, 230, 25, 5, 250, 221, 34, 62, 193, 6, 249, 229, 26, 118, 137, 149, 106, 173, 82, 78, 177, 49, 206, 210, 45, 234, 21, 9, 246, 154, 101, 121, 134, 65, 190, 162, 93, 122, 133, 153, 102, 161, 94, 66, 189, 209, 46, 50, 205, 10, 245, 233, 22, 167, 88, 68, 187, 124, 131, 159, 96, 12, 243, 239, 16, 215, 40, 52, 203, 236, 19, 15, 240, 55, 200, 212, 43, 71, 184, 164, 91, 156, 99, 127, 128, 98, 157, 129, 126, 185, 70, 90, 165, 201, 54, 42, 213, 18, 237, 241, 14, 41, 214, 202, 53, 242, 13, 17, 238, 130, 125, 97, 158, 89, 166, 186, 69, 244, 11, 23, 232, 47, 208, 204, 51, 95, 160, 188, 67, 132, 123, 103, 152, 191, 64, 92, 163, 100, 155, 135, 120, 20, 235, 247, 8, 207, 48, 44, 211, 83, 172, 176, 79, 136, 119, 107, 148, 248, 7, 27, 228, 35, 220, 192, 63, 24, 231, 251, 4, 195, 60, 32, 223, 179, 76, 80, 175, 104, 151, 139, 116, 197, 58, 38, 217, 30, 225, 253, 2, 110, 145, 141, 114, 181, 74, 86, 169, 142, 113, 109, 146, 85, 170, 182, 73, 37, 218, 198, 57, 254, 1, 29, 226, ],
];

'''
'''--- near-election-dapp/backend/target/debug/build/typenum-752424536c07b4b3/out/consts.rs ---

/**
Type aliases for many constants.

This file is generated by typenum's build script.

For unsigned integers, the format is `U` followed by the number. We define aliases for

- Numbers 0 through 1024
- Powers of 2 below `u64::MAX`
- Powers of 10 below `u64::MAX`

These alias definitions look like this:

```rust
use typenum::{B0, B1, UInt, UTerm};

# #[allow(dead_code)]
type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;
```

For positive signed integers, the format is `P` followed by the number and for negative
signed integers it is `N` followed by the number. For the signed integer zero, we use
`Z0`. We define aliases for

- Numbers -1024 through 1024
- Powers of 2 between `i64::MIN` and `i64::MAX`
- Powers of 10 between `i64::MIN` and `i64::MAX`

These alias definitions look like this:

```rust
use typenum::{B0, B1, UInt, UTerm, PInt, NInt};

# #[allow(dead_code)]
type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;
# #[allow(dead_code)]
type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;
```

# Example
```rust
# #[allow(unused_imports)]
use typenum::{U0, U1, U2, U3, U4, U5, U6};
# #[allow(unused_imports)]
use typenum::{N3, N2, N1, Z0, P1, P2, P3};
# #[allow(unused_imports)]
use typenum::{U774, N17, N10000, P1024, P4096};
```

We also define the aliases `False` and `True` for `B0` and `B1`, respectively.
*/
#[allow(missing_docs)]
pub mod consts {
    use crate::uint::{UInt, UTerm};
    use crate::int::{PInt, NInt};

    pub use crate::bit::{B0, B1};
    pub use crate::int::Z0;

    pub type True = B1;
    pub type False = B0;
    pub type U0 = UTerm;
    pub type U1 = UInt<UTerm, B1>;
    pub type P1 = PInt<U1>; pub type N1 = NInt<U1>;
    pub type U2 = UInt<UInt<UTerm, B1>, B0>;
    pub type P2 = PInt<U2>; pub type N2 = NInt<U2>;
    pub type U3 = UInt<UInt<UTerm, B1>, B1>;
    pub type P3 = PInt<U3>; pub type N3 = NInt<U3>;
    pub type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    pub type P4 = PInt<U4>; pub type N4 = NInt<U4>;
    pub type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    pub type P5 = PInt<U5>; pub type N5 = NInt<U5>;
    pub type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;
    pub type P6 = PInt<U6>; pub type N6 = NInt<U6>;
    pub type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;
    pub type P7 = PInt<U7>; pub type N7 = NInt<U7>;
    pub type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;
    pub type P8 = PInt<U8>; pub type N8 = NInt<U8>;
    pub type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;
    pub type P9 = PInt<U9>; pub type N9 = NInt<U9>;
    pub type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;
    pub type P10 = PInt<U10>; pub type N10 = NInt<U10>;
    pub type U11 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>;
    pub type P11 = PInt<U11>; pub type N11 = NInt<U11>;
    pub type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;
    pub type P12 = PInt<U12>; pub type N12 = NInt<U12>;
    pub type U13 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>;
    pub type P13 = PInt<U13>; pub type N13 = NInt<U13>;
    pub type U14 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>;
    pub type P14 = PInt<U14>; pub type N14 = NInt<U14>;
    pub type U15 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>;
    pub type P15 = PInt<U15>; pub type N15 = NInt<U15>;
    pub type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;
    pub type P16 = PInt<U16>; pub type N16 = NInt<U16>;
    pub type U17 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>;
    pub type P17 = PInt<U17>; pub type N17 = NInt<U17>;
    pub type U18 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>;
    pub type P18 = PInt<U18>; pub type N18 = NInt<U18>;
    pub type U19 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>;
    pub type P19 = PInt<U19>; pub type N19 = NInt<U19>;
    pub type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;
    pub type P20 = PInt<U20>; pub type N20 = NInt<U20>;
    pub type U21 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>;
    pub type P21 = PInt<U21>; pub type N21 = NInt<U21>;
    pub type U22 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>;
    pub type P22 = PInt<U22>; pub type N22 = NInt<U22>;
    pub type U23 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>;
    pub type P23 = PInt<U23>; pub type N23 = NInt<U23>;
    pub type U24 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>;
    pub type P24 = PInt<U24>; pub type N24 = NInt<U24>;
    pub type U25 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>;
    pub type P25 = PInt<U25>; pub type N25 = NInt<U25>;
    pub type U26 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>;
    pub type P26 = PInt<U26>; pub type N26 = NInt<U26>;
    pub type U27 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>;
    pub type P27 = PInt<U27>; pub type N27 = NInt<U27>;
    pub type U28 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>;
    pub type P28 = PInt<U28>; pub type N28 = NInt<U28>;
    pub type U29 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>;
    pub type P29 = PInt<U29>; pub type N29 = NInt<U29>;
    pub type U30 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>;
    pub type P30 = PInt<U30>; pub type N30 = NInt<U30>;
    pub type U31 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>;
    pub type P31 = PInt<U31>; pub type N31 = NInt<U31>;
    pub type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P32 = PInt<U32>; pub type N32 = NInt<U32>;
    pub type U33 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P33 = PInt<U33>; pub type N33 = NInt<U33>;
    pub type U34 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P34 = PInt<U34>; pub type N34 = NInt<U34>;
    pub type U35 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P35 = PInt<U35>; pub type N35 = NInt<U35>;
    pub type U36 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P36 = PInt<U36>; pub type N36 = NInt<U36>;
    pub type U37 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P37 = PInt<U37>; pub type N37 = NInt<U37>;
    pub type U38 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P38 = PInt<U38>; pub type N38 = NInt<U38>;
    pub type U39 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P39 = PInt<U39>; pub type N39 = NInt<U39>;
    pub type U40 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P40 = PInt<U40>; pub type N40 = NInt<U40>;
    pub type U41 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P41 = PInt<U41>; pub type N41 = NInt<U41>;
    pub type U42 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P42 = PInt<U42>; pub type N42 = NInt<U42>;
    pub type U43 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P43 = PInt<U43>; pub type N43 = NInt<U43>;
    pub type U44 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P44 = PInt<U44>; pub type N44 = NInt<U44>;
    pub type U45 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P45 = PInt<U45>; pub type N45 = NInt<U45>;
    pub type U46 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P46 = PInt<U46>; pub type N46 = NInt<U46>;
    pub type U47 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P47 = PInt<U47>; pub type N47 = NInt<U47>;
    pub type U48 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P48 = PInt<U48>; pub type N48 = NInt<U48>;
    pub type U49 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P49 = PInt<U49>; pub type N49 = NInt<U49>;
    pub type U50 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P50 = PInt<U50>; pub type N50 = NInt<U50>;
    pub type U51 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P51 = PInt<U51>; pub type N51 = NInt<U51>;
    pub type U52 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P52 = PInt<U52>; pub type N52 = NInt<U52>;
    pub type U53 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P53 = PInt<U53>; pub type N53 = NInt<U53>;
    pub type U54 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P54 = PInt<U54>; pub type N54 = NInt<U54>;
    pub type U55 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P55 = PInt<U55>; pub type N55 = NInt<U55>;
    pub type U56 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P56 = PInt<U56>; pub type N56 = NInt<U56>;
    pub type U57 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P57 = PInt<U57>; pub type N57 = NInt<U57>;
    pub type U58 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P58 = PInt<U58>; pub type N58 = NInt<U58>;
    pub type U59 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P59 = PInt<U59>; pub type N59 = NInt<U59>;
    pub type U60 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P60 = PInt<U60>; pub type N60 = NInt<U60>;
    pub type U61 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P61 = PInt<U61>; pub type N61 = NInt<U61>;
    pub type U62 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P62 = PInt<U62>; pub type N62 = NInt<U62>;
    pub type U63 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P63 = PInt<U63>; pub type N63 = NInt<U63>;
    pub type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P64 = PInt<U64>; pub type N64 = NInt<U64>;
    pub type U65 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P65 = PInt<U65>; pub type N65 = NInt<U65>;
    pub type U66 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P66 = PInt<U66>; pub type N66 = NInt<U66>;
    pub type U67 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P67 = PInt<U67>; pub type N67 = NInt<U67>;
    pub type U68 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P68 = PInt<U68>; pub type N68 = NInt<U68>;
    pub type U69 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P69 = PInt<U69>; pub type N69 = NInt<U69>;
    pub type U70 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P70 = PInt<U70>; pub type N70 = NInt<U70>;
    pub type U71 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P71 = PInt<U71>; pub type N71 = NInt<U71>;
    pub type U72 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P72 = PInt<U72>; pub type N72 = NInt<U72>;
    pub type U73 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P73 = PInt<U73>; pub type N73 = NInt<U73>;
    pub type U74 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P74 = PInt<U74>; pub type N74 = NInt<U74>;
    pub type U75 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P75 = PInt<U75>; pub type N75 = NInt<U75>;
    pub type U76 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P76 = PInt<U76>; pub type N76 = NInt<U76>;
    pub type U77 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P77 = PInt<U77>; pub type N77 = NInt<U77>;
    pub type U78 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P78 = PInt<U78>; pub type N78 = NInt<U78>;
    pub type U79 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P79 = PInt<U79>; pub type N79 = NInt<U79>;
    pub type U80 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P80 = PInt<U80>; pub type N80 = NInt<U80>;
    pub type U81 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P81 = PInt<U81>; pub type N81 = NInt<U81>;
    pub type U82 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P82 = PInt<U82>; pub type N82 = NInt<U82>;
    pub type U83 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P83 = PInt<U83>; pub type N83 = NInt<U83>;
    pub type U84 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P84 = PInt<U84>; pub type N84 = NInt<U84>;
    pub type U85 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P85 = PInt<U85>; pub type N85 = NInt<U85>;
    pub type U86 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P86 = PInt<U86>; pub type N86 = NInt<U86>;
    pub type U87 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P87 = PInt<U87>; pub type N87 = NInt<U87>;
    pub type U88 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P88 = PInt<U88>; pub type N88 = NInt<U88>;
    pub type U89 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P89 = PInt<U89>; pub type N89 = NInt<U89>;
    pub type U90 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P90 = PInt<U90>; pub type N90 = NInt<U90>;
    pub type U91 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P91 = PInt<U91>; pub type N91 = NInt<U91>;
    pub type U92 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P92 = PInt<U92>; pub type N92 = NInt<U92>;
    pub type U93 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P93 = PInt<U93>; pub type N93 = NInt<U93>;
    pub type U94 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P94 = PInt<U94>; pub type N94 = NInt<U94>;
    pub type U95 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P95 = PInt<U95>; pub type N95 = NInt<U95>;
    pub type U96 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P96 = PInt<U96>; pub type N96 = NInt<U96>;
    pub type U97 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P97 = PInt<U97>; pub type N97 = NInt<U97>;
    pub type U98 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P98 = PInt<U98>; pub type N98 = NInt<U98>;
    pub type U99 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P99 = PInt<U99>; pub type N99 = NInt<U99>;
    pub type U100 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P100 = PInt<U100>; pub type N100 = NInt<U100>;
    pub type U101 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P101 = PInt<U101>; pub type N101 = NInt<U101>;
    pub type U102 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P102 = PInt<U102>; pub type N102 = NInt<U102>;
    pub type U103 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P103 = PInt<U103>; pub type N103 = NInt<U103>;
    pub type U104 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P104 = PInt<U104>; pub type N104 = NInt<U104>;
    pub type U105 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P105 = PInt<U105>; pub type N105 = NInt<U105>;
    pub type U106 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P106 = PInt<U106>; pub type N106 = NInt<U106>;
    pub type U107 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P107 = PInt<U107>; pub type N107 = NInt<U107>;
    pub type U108 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P108 = PInt<U108>; pub type N108 = NInt<U108>;
    pub type U109 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P109 = PInt<U109>; pub type N109 = NInt<U109>;
    pub type U110 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P110 = PInt<U110>; pub type N110 = NInt<U110>;
    pub type U111 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P111 = PInt<U111>; pub type N111 = NInt<U111>;
    pub type U112 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P112 = PInt<U112>; pub type N112 = NInt<U112>;
    pub type U113 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P113 = PInt<U113>; pub type N113 = NInt<U113>;
    pub type U114 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P114 = PInt<U114>; pub type N114 = NInt<U114>;
    pub type U115 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P115 = PInt<U115>; pub type N115 = NInt<U115>;
    pub type U116 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P116 = PInt<U116>; pub type N116 = NInt<U116>;
    pub type U117 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P117 = PInt<U117>; pub type N117 = NInt<U117>;
    pub type U118 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P118 = PInt<U118>; pub type N118 = NInt<U118>;
    pub type U119 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P119 = PInt<U119>; pub type N119 = NInt<U119>;
    pub type U120 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P120 = PInt<U120>; pub type N120 = NInt<U120>;
    pub type U121 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P121 = PInt<U121>; pub type N121 = NInt<U121>;
    pub type U122 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P122 = PInt<U122>; pub type N122 = NInt<U122>;
    pub type U123 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P123 = PInt<U123>; pub type N123 = NInt<U123>;
    pub type U124 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P124 = PInt<U124>; pub type N124 = NInt<U124>;
    pub type U125 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P125 = PInt<U125>; pub type N125 = NInt<U125>;
    pub type U126 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P126 = PInt<U126>; pub type N126 = NInt<U126>;
    pub type U127 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P127 = PInt<U127>; pub type N127 = NInt<U127>;
    pub type U128 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P128 = PInt<U128>; pub type N128 = NInt<U128>;
    pub type U129 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P129 = PInt<U129>; pub type N129 = NInt<U129>;
    pub type U130 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P130 = PInt<U130>; pub type N130 = NInt<U130>;
    pub type U131 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P131 = PInt<U131>; pub type N131 = NInt<U131>;
    pub type U132 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P132 = PInt<U132>; pub type N132 = NInt<U132>;
    pub type U133 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P133 = PInt<U133>; pub type N133 = NInt<U133>;
    pub type U134 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P134 = PInt<U134>; pub type N134 = NInt<U134>;
    pub type U135 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P135 = PInt<U135>; pub type N135 = NInt<U135>;
    pub type U136 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P136 = PInt<U136>; pub type N136 = NInt<U136>;
    pub type U137 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P137 = PInt<U137>; pub type N137 = NInt<U137>;
    pub type U138 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P138 = PInt<U138>; pub type N138 = NInt<U138>;
    pub type U139 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P139 = PInt<U139>; pub type N139 = NInt<U139>;
    pub type U140 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P140 = PInt<U140>; pub type N140 = NInt<U140>;
    pub type U141 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P141 = PInt<U141>; pub type N141 = NInt<U141>;
    pub type U142 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P142 = PInt<U142>; pub type N142 = NInt<U142>;
    pub type U143 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P143 = PInt<U143>; pub type N143 = NInt<U143>;
    pub type U144 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P144 = PInt<U144>; pub type N144 = NInt<U144>;
    pub type U145 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P145 = PInt<U145>; pub type N145 = NInt<U145>;
    pub type U146 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P146 = PInt<U146>; pub type N146 = NInt<U146>;
    pub type U147 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P147 = PInt<U147>; pub type N147 = NInt<U147>;
    pub type U148 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P148 = PInt<U148>; pub type N148 = NInt<U148>;
    pub type U149 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P149 = PInt<U149>; pub type N149 = NInt<U149>;
    pub type U150 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P150 = PInt<U150>; pub type N150 = NInt<U150>;
    pub type U151 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P151 = PInt<U151>; pub type N151 = NInt<U151>;
    pub type U152 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P152 = PInt<U152>; pub type N152 = NInt<U152>;
    pub type U153 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P153 = PInt<U153>; pub type N153 = NInt<U153>;
    pub type U154 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P154 = PInt<U154>; pub type N154 = NInt<U154>;
    pub type U155 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P155 = PInt<U155>; pub type N155 = NInt<U155>;
    pub type U156 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P156 = PInt<U156>; pub type N156 = NInt<U156>;
    pub type U157 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P157 = PInt<U157>; pub type N157 = NInt<U157>;
    pub type U158 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P158 = PInt<U158>; pub type N158 = NInt<U158>;
    pub type U159 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P159 = PInt<U159>; pub type N159 = NInt<U159>;
    pub type U160 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P160 = PInt<U160>; pub type N160 = NInt<U160>;
    pub type U161 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P161 = PInt<U161>; pub type N161 = NInt<U161>;
    pub type U162 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P162 = PInt<U162>; pub type N162 = NInt<U162>;
    pub type U163 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P163 = PInt<U163>; pub type N163 = NInt<U163>;
    pub type U164 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P164 = PInt<U164>; pub type N164 = NInt<U164>;
    pub type U165 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P165 = PInt<U165>; pub type N165 = NInt<U165>;
    pub type U166 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P166 = PInt<U166>; pub type N166 = NInt<U166>;
    pub type U167 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P167 = PInt<U167>; pub type N167 = NInt<U167>;
    pub type U168 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P168 = PInt<U168>; pub type N168 = NInt<U168>;
    pub type U169 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P169 = PInt<U169>; pub type N169 = NInt<U169>;
    pub type U170 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P170 = PInt<U170>; pub type N170 = NInt<U170>;
    pub type U171 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P171 = PInt<U171>; pub type N171 = NInt<U171>;
    pub type U172 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P172 = PInt<U172>; pub type N172 = NInt<U172>;
    pub type U173 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P173 = PInt<U173>; pub type N173 = NInt<U173>;
    pub type U174 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P174 = PInt<U174>; pub type N174 = NInt<U174>;
    pub type U175 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P175 = PInt<U175>; pub type N175 = NInt<U175>;
    pub type U176 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P176 = PInt<U176>; pub type N176 = NInt<U176>;
    pub type U177 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P177 = PInt<U177>; pub type N177 = NInt<U177>;
    pub type U178 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P178 = PInt<U178>; pub type N178 = NInt<U178>;
    pub type U179 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P179 = PInt<U179>; pub type N179 = NInt<U179>;
    pub type U180 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P180 = PInt<U180>; pub type N180 = NInt<U180>;
    pub type U181 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P181 = PInt<U181>; pub type N181 = NInt<U181>;
    pub type U182 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P182 = PInt<U182>; pub type N182 = NInt<U182>;
    pub type U183 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P183 = PInt<U183>; pub type N183 = NInt<U183>;
    pub type U184 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P184 = PInt<U184>; pub type N184 = NInt<U184>;
    pub type U185 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P185 = PInt<U185>; pub type N185 = NInt<U185>;
    pub type U186 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P186 = PInt<U186>; pub type N186 = NInt<U186>;
    pub type U187 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P187 = PInt<U187>; pub type N187 = NInt<U187>;
    pub type U188 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P188 = PInt<U188>; pub type N188 = NInt<U188>;
    pub type U189 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P189 = PInt<U189>; pub type N189 = NInt<U189>;
    pub type U190 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P190 = PInt<U190>; pub type N190 = NInt<U190>;
    pub type U191 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P191 = PInt<U191>; pub type N191 = NInt<U191>;
    pub type U192 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P192 = PInt<U192>; pub type N192 = NInt<U192>;
    pub type U193 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P193 = PInt<U193>; pub type N193 = NInt<U193>;
    pub type U194 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P194 = PInt<U194>; pub type N194 = NInt<U194>;
    pub type U195 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P195 = PInt<U195>; pub type N195 = NInt<U195>;
    pub type U196 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P196 = PInt<U196>; pub type N196 = NInt<U196>;
    pub type U197 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P197 = PInt<U197>; pub type N197 = NInt<U197>;
    pub type U198 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P198 = PInt<U198>; pub type N198 = NInt<U198>;
    pub type U199 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P199 = PInt<U199>; pub type N199 = NInt<U199>;
    pub type U200 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P200 = PInt<U200>; pub type N200 = NInt<U200>;
    pub type U201 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P201 = PInt<U201>; pub type N201 = NInt<U201>;
    pub type U202 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P202 = PInt<U202>; pub type N202 = NInt<U202>;
    pub type U203 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P203 = PInt<U203>; pub type N203 = NInt<U203>;
    pub type U204 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P204 = PInt<U204>; pub type N204 = NInt<U204>;
    pub type U205 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P205 = PInt<U205>; pub type N205 = NInt<U205>;
    pub type U206 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P206 = PInt<U206>; pub type N206 = NInt<U206>;
    pub type U207 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P207 = PInt<U207>; pub type N207 = NInt<U207>;
    pub type U208 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P208 = PInt<U208>; pub type N208 = NInt<U208>;
    pub type U209 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P209 = PInt<U209>; pub type N209 = NInt<U209>;
    pub type U210 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P210 = PInt<U210>; pub type N210 = NInt<U210>;
    pub type U211 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P211 = PInt<U211>; pub type N211 = NInt<U211>;
    pub type U212 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P212 = PInt<U212>; pub type N212 = NInt<U212>;
    pub type U213 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P213 = PInt<U213>; pub type N213 = NInt<U213>;
    pub type U214 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P214 = PInt<U214>; pub type N214 = NInt<U214>;
    pub type U215 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P215 = PInt<U215>; pub type N215 = NInt<U215>;
    pub type U216 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P216 = PInt<U216>; pub type N216 = NInt<U216>;
    pub type U217 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P217 = PInt<U217>; pub type N217 = NInt<U217>;
    pub type U218 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P218 = PInt<U218>; pub type N218 = NInt<U218>;
    pub type U219 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P219 = PInt<U219>; pub type N219 = NInt<U219>;
    pub type U220 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P220 = PInt<U220>; pub type N220 = NInt<U220>;
    pub type U221 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P221 = PInt<U221>; pub type N221 = NInt<U221>;
    pub type U222 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P222 = PInt<U222>; pub type N222 = NInt<U222>;
    pub type U223 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P223 = PInt<U223>; pub type N223 = NInt<U223>;
    pub type U224 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P224 = PInt<U224>; pub type N224 = NInt<U224>;
    pub type U225 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P225 = PInt<U225>; pub type N225 = NInt<U225>;
    pub type U226 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P226 = PInt<U226>; pub type N226 = NInt<U226>;
    pub type U227 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P227 = PInt<U227>; pub type N227 = NInt<U227>;
    pub type U228 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P228 = PInt<U228>; pub type N228 = NInt<U228>;
    pub type U229 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P229 = PInt<U229>; pub type N229 = NInt<U229>;
    pub type U230 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P230 = PInt<U230>; pub type N230 = NInt<U230>;
    pub type U231 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P231 = PInt<U231>; pub type N231 = NInt<U231>;
    pub type U232 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P232 = PInt<U232>; pub type N232 = NInt<U232>;
    pub type U233 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P233 = PInt<U233>; pub type N233 = NInt<U233>;
    pub type U234 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P234 = PInt<U234>; pub type N234 = NInt<U234>;
    pub type U235 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P235 = PInt<U235>; pub type N235 = NInt<U235>;
    pub type U236 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P236 = PInt<U236>; pub type N236 = NInt<U236>;
    pub type U237 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P237 = PInt<U237>; pub type N237 = NInt<U237>;
    pub type U238 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P238 = PInt<U238>; pub type N238 = NInt<U238>;
    pub type U239 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P239 = PInt<U239>; pub type N239 = NInt<U239>;
    pub type U240 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P240 = PInt<U240>; pub type N240 = NInt<U240>;
    pub type U241 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P241 = PInt<U241>; pub type N241 = NInt<U241>;
    pub type U242 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P242 = PInt<U242>; pub type N242 = NInt<U242>;
    pub type U243 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P243 = PInt<U243>; pub type N243 = NInt<U243>;
    pub type U244 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P244 = PInt<U244>; pub type N244 = NInt<U244>;
    pub type U245 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P245 = PInt<U245>; pub type N245 = NInt<U245>;
    pub type U246 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P246 = PInt<U246>; pub type N246 = NInt<U246>;
    pub type U247 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P247 = PInt<U247>; pub type N247 = NInt<U247>;
    pub type U248 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P248 = PInt<U248>; pub type N248 = NInt<U248>;
    pub type U249 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P249 = PInt<U249>; pub type N249 = NInt<U249>;
    pub type U250 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P250 = PInt<U250>; pub type N250 = NInt<U250>;
    pub type U251 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P251 = PInt<U251>; pub type N251 = NInt<U251>;
    pub type U252 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P252 = PInt<U252>; pub type N252 = NInt<U252>;
    pub type U253 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P253 = PInt<U253>; pub type N253 = NInt<U253>;
    pub type U254 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P254 = PInt<U254>; pub type N254 = NInt<U254>;
    pub type U255 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P255 = PInt<U255>; pub type N255 = NInt<U255>;
    pub type U256 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P256 = PInt<U256>; pub type N256 = NInt<U256>;
    pub type U257 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P257 = PInt<U257>; pub type N257 = NInt<U257>;
    pub type U258 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P258 = PInt<U258>; pub type N258 = NInt<U258>;
    pub type U259 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P259 = PInt<U259>; pub type N259 = NInt<U259>;
    pub type U260 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P260 = PInt<U260>; pub type N260 = NInt<U260>;
    pub type U261 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P261 = PInt<U261>; pub type N261 = NInt<U261>;
    pub type U262 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P262 = PInt<U262>; pub type N262 = NInt<U262>;
    pub type U263 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P263 = PInt<U263>; pub type N263 = NInt<U263>;
    pub type U264 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P264 = PInt<U264>; pub type N264 = NInt<U264>;
    pub type U265 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P265 = PInt<U265>; pub type N265 = NInt<U265>;
    pub type U266 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P266 = PInt<U266>; pub type N266 = NInt<U266>;
    pub type U267 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P267 = PInt<U267>; pub type N267 = NInt<U267>;
    pub type U268 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P268 = PInt<U268>; pub type N268 = NInt<U268>;
    pub type U269 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P269 = PInt<U269>; pub type N269 = NInt<U269>;
    pub type U270 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P270 = PInt<U270>; pub type N270 = NInt<U270>;
    pub type U271 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P271 = PInt<U271>; pub type N271 = NInt<U271>;
    pub type U272 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P272 = PInt<U272>; pub type N272 = NInt<U272>;
    pub type U273 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P273 = PInt<U273>; pub type N273 = NInt<U273>;
    pub type U274 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P274 = PInt<U274>; pub type N274 = NInt<U274>;
    pub type U275 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P275 = PInt<U275>; pub type N275 = NInt<U275>;
    pub type U276 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P276 = PInt<U276>; pub type N276 = NInt<U276>;
    pub type U277 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P277 = PInt<U277>; pub type N277 = NInt<U277>;
    pub type U278 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P278 = PInt<U278>; pub type N278 = NInt<U278>;
    pub type U279 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P279 = PInt<U279>; pub type N279 = NInt<U279>;
    pub type U280 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P280 = PInt<U280>; pub type N280 = NInt<U280>;
    pub type U281 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P281 = PInt<U281>; pub type N281 = NInt<U281>;
    pub type U282 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P282 = PInt<U282>; pub type N282 = NInt<U282>;
    pub type U283 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P283 = PInt<U283>; pub type N283 = NInt<U283>;
    pub type U284 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P284 = PInt<U284>; pub type N284 = NInt<U284>;
    pub type U285 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P285 = PInt<U285>; pub type N285 = NInt<U285>;
    pub type U286 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P286 = PInt<U286>; pub type N286 = NInt<U286>;
    pub type U287 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P287 = PInt<U287>; pub type N287 = NInt<U287>;
    pub type U288 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P288 = PInt<U288>; pub type N288 = NInt<U288>;
    pub type U289 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P289 = PInt<U289>; pub type N289 = NInt<U289>;
    pub type U290 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P290 = PInt<U290>; pub type N290 = NInt<U290>;
    pub type U291 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P291 = PInt<U291>; pub type N291 = NInt<U291>;
    pub type U292 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P292 = PInt<U292>; pub type N292 = NInt<U292>;
    pub type U293 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P293 = PInt<U293>; pub type N293 = NInt<U293>;
    pub type U294 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P294 = PInt<U294>; pub type N294 = NInt<U294>;
    pub type U295 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P295 = PInt<U295>; pub type N295 = NInt<U295>;
    pub type U296 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P296 = PInt<U296>; pub type N296 = NInt<U296>;
    pub type U297 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P297 = PInt<U297>; pub type N297 = NInt<U297>;
    pub type U298 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P298 = PInt<U298>; pub type N298 = NInt<U298>;
    pub type U299 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P299 = PInt<U299>; pub type N299 = NInt<U299>;
    pub type U300 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P300 = PInt<U300>; pub type N300 = NInt<U300>;
    pub type U301 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P301 = PInt<U301>; pub type N301 = NInt<U301>;
    pub type U302 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P302 = PInt<U302>; pub type N302 = NInt<U302>;
    pub type U303 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P303 = PInt<U303>; pub type N303 = NInt<U303>;
    pub type U304 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P304 = PInt<U304>; pub type N304 = NInt<U304>;
    pub type U305 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P305 = PInt<U305>; pub type N305 = NInt<U305>;
    pub type U306 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P306 = PInt<U306>; pub type N306 = NInt<U306>;
    pub type U307 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P307 = PInt<U307>; pub type N307 = NInt<U307>;
    pub type U308 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P308 = PInt<U308>; pub type N308 = NInt<U308>;
    pub type U309 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P309 = PInt<U309>; pub type N309 = NInt<U309>;
    pub type U310 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P310 = PInt<U310>; pub type N310 = NInt<U310>;
    pub type U311 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P311 = PInt<U311>; pub type N311 = NInt<U311>;
    pub type U312 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P312 = PInt<U312>; pub type N312 = NInt<U312>;
    pub type U313 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P313 = PInt<U313>; pub type N313 = NInt<U313>;
    pub type U314 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P314 = PInt<U314>; pub type N314 = NInt<U314>;
    pub type U315 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P315 = PInt<U315>; pub type N315 = NInt<U315>;
    pub type U316 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P316 = PInt<U316>; pub type N316 = NInt<U316>;
    pub type U317 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P317 = PInt<U317>; pub type N317 = NInt<U317>;
    pub type U318 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P318 = PInt<U318>; pub type N318 = NInt<U318>;
    pub type U319 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P319 = PInt<U319>; pub type N319 = NInt<U319>;
    pub type U320 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P320 = PInt<U320>; pub type N320 = NInt<U320>;
    pub type U321 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P321 = PInt<U321>; pub type N321 = NInt<U321>;
    pub type U322 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P322 = PInt<U322>; pub type N322 = NInt<U322>;
    pub type U323 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P323 = PInt<U323>; pub type N323 = NInt<U323>;
    pub type U324 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P324 = PInt<U324>; pub type N324 = NInt<U324>;
    pub type U325 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P325 = PInt<U325>; pub type N325 = NInt<U325>;
    pub type U326 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P326 = PInt<U326>; pub type N326 = NInt<U326>;
    pub type U327 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P327 = PInt<U327>; pub type N327 = NInt<U327>;
    pub type U328 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P328 = PInt<U328>; pub type N328 = NInt<U328>;
    pub type U329 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P329 = PInt<U329>; pub type N329 = NInt<U329>;
    pub type U330 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P330 = PInt<U330>; pub type N330 = NInt<U330>;
    pub type U331 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P331 = PInt<U331>; pub type N331 = NInt<U331>;
    pub type U332 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P332 = PInt<U332>; pub type N332 = NInt<U332>;
    pub type U333 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P333 = PInt<U333>; pub type N333 = NInt<U333>;
    pub type U334 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P334 = PInt<U334>; pub type N334 = NInt<U334>;
    pub type U335 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P335 = PInt<U335>; pub type N335 = NInt<U335>;
    pub type U336 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P336 = PInt<U336>; pub type N336 = NInt<U336>;
    pub type U337 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P337 = PInt<U337>; pub type N337 = NInt<U337>;
    pub type U338 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P338 = PInt<U338>; pub type N338 = NInt<U338>;
    pub type U339 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P339 = PInt<U339>; pub type N339 = NInt<U339>;
    pub type U340 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P340 = PInt<U340>; pub type N340 = NInt<U340>;
    pub type U341 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P341 = PInt<U341>; pub type N341 = NInt<U341>;
    pub type U342 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P342 = PInt<U342>; pub type N342 = NInt<U342>;
    pub type U343 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P343 = PInt<U343>; pub type N343 = NInt<U343>;
    pub type U344 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P344 = PInt<U344>; pub type N344 = NInt<U344>;
    pub type U345 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P345 = PInt<U345>; pub type N345 = NInt<U345>;
    pub type U346 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P346 = PInt<U346>; pub type N346 = NInt<U346>;
    pub type U347 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P347 = PInt<U347>; pub type N347 = NInt<U347>;
    pub type U348 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P348 = PInt<U348>; pub type N348 = NInt<U348>;
    pub type U349 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P349 = PInt<U349>; pub type N349 = NInt<U349>;
    pub type U350 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P350 = PInt<U350>; pub type N350 = NInt<U350>;
    pub type U351 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P351 = PInt<U351>; pub type N351 = NInt<U351>;
    pub type U352 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P352 = PInt<U352>; pub type N352 = NInt<U352>;
    pub type U353 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P353 = PInt<U353>; pub type N353 = NInt<U353>;
    pub type U354 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P354 = PInt<U354>; pub type N354 = NInt<U354>;
    pub type U355 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P355 = PInt<U355>; pub type N355 = NInt<U355>;
    pub type U356 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P356 = PInt<U356>; pub type N356 = NInt<U356>;
    pub type U357 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P357 = PInt<U357>; pub type N357 = NInt<U357>;
    pub type U358 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P358 = PInt<U358>; pub type N358 = NInt<U358>;
    pub type U359 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P359 = PInt<U359>; pub type N359 = NInt<U359>;
    pub type U360 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P360 = PInt<U360>; pub type N360 = NInt<U360>;
    pub type U361 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P361 = PInt<U361>; pub type N361 = NInt<U361>;
    pub type U362 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P362 = PInt<U362>; pub type N362 = NInt<U362>;
    pub type U363 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P363 = PInt<U363>; pub type N363 = NInt<U363>;
    pub type U364 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P364 = PInt<U364>; pub type N364 = NInt<U364>;
    pub type U365 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P365 = PInt<U365>; pub type N365 = NInt<U365>;
    pub type U366 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P366 = PInt<U366>; pub type N366 = NInt<U366>;
    pub type U367 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P367 = PInt<U367>; pub type N367 = NInt<U367>;
    pub type U368 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P368 = PInt<U368>; pub type N368 = NInt<U368>;
    pub type U369 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P369 = PInt<U369>; pub type N369 = NInt<U369>;
    pub type U370 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P370 = PInt<U370>; pub type N370 = NInt<U370>;
    pub type U371 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P371 = PInt<U371>; pub type N371 = NInt<U371>;
    pub type U372 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P372 = PInt<U372>; pub type N372 = NInt<U372>;
    pub type U373 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P373 = PInt<U373>; pub type N373 = NInt<U373>;
    pub type U374 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P374 = PInt<U374>; pub type N374 = NInt<U374>;
    pub type U375 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P375 = PInt<U375>; pub type N375 = NInt<U375>;
    pub type U376 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P376 = PInt<U376>; pub type N376 = NInt<U376>;
    pub type U377 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P377 = PInt<U377>; pub type N377 = NInt<U377>;
    pub type U378 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P378 = PInt<U378>; pub type N378 = NInt<U378>;
    pub type U379 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P379 = PInt<U379>; pub type N379 = NInt<U379>;
    pub type U380 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P380 = PInt<U380>; pub type N380 = NInt<U380>;
    pub type U381 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P381 = PInt<U381>; pub type N381 = NInt<U381>;
    pub type U382 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P382 = PInt<U382>; pub type N382 = NInt<U382>;
    pub type U383 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P383 = PInt<U383>; pub type N383 = NInt<U383>;
    pub type U384 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P384 = PInt<U384>; pub type N384 = NInt<U384>;
    pub type U385 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P385 = PInt<U385>; pub type N385 = NInt<U385>;
    pub type U386 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P386 = PInt<U386>; pub type N386 = NInt<U386>;
    pub type U387 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P387 = PInt<U387>; pub type N387 = NInt<U387>;
    pub type U388 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P388 = PInt<U388>; pub type N388 = NInt<U388>;
    pub type U389 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P389 = PInt<U389>; pub type N389 = NInt<U389>;
    pub type U390 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P390 = PInt<U390>; pub type N390 = NInt<U390>;
    pub type U391 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P391 = PInt<U391>; pub type N391 = NInt<U391>;
    pub type U392 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P392 = PInt<U392>; pub type N392 = NInt<U392>;
    pub type U393 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P393 = PInt<U393>; pub type N393 = NInt<U393>;
    pub type U394 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P394 = PInt<U394>; pub type N394 = NInt<U394>;
    pub type U395 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P395 = PInt<U395>; pub type N395 = NInt<U395>;
    pub type U396 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P396 = PInt<U396>; pub type N396 = NInt<U396>;
    pub type U397 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P397 = PInt<U397>; pub type N397 = NInt<U397>;
    pub type U398 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P398 = PInt<U398>; pub type N398 = NInt<U398>;
    pub type U399 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P399 = PInt<U399>; pub type N399 = NInt<U399>;
    pub type U400 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P400 = PInt<U400>; pub type N400 = NInt<U400>;
    pub type U401 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P401 = PInt<U401>; pub type N401 = NInt<U401>;
    pub type U402 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P402 = PInt<U402>; pub type N402 = NInt<U402>;
    pub type U403 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P403 = PInt<U403>; pub type N403 = NInt<U403>;
    pub type U404 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P404 = PInt<U404>; pub type N404 = NInt<U404>;
    pub type U405 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P405 = PInt<U405>; pub type N405 = NInt<U405>;
    pub type U406 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P406 = PInt<U406>; pub type N406 = NInt<U406>;
    pub type U407 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P407 = PInt<U407>; pub type N407 = NInt<U407>;
    pub type U408 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P408 = PInt<U408>; pub type N408 = NInt<U408>;
    pub type U409 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P409 = PInt<U409>; pub type N409 = NInt<U409>;
    pub type U410 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P410 = PInt<U410>; pub type N410 = NInt<U410>;
    pub type U411 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P411 = PInt<U411>; pub type N411 = NInt<U411>;
    pub type U412 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P412 = PInt<U412>; pub type N412 = NInt<U412>;
    pub type U413 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P413 = PInt<U413>; pub type N413 = NInt<U413>;
    pub type U414 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P414 = PInt<U414>; pub type N414 = NInt<U414>;
    pub type U415 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P415 = PInt<U415>; pub type N415 = NInt<U415>;
    pub type U416 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P416 = PInt<U416>; pub type N416 = NInt<U416>;
    pub type U417 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P417 = PInt<U417>; pub type N417 = NInt<U417>;
    pub type U418 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P418 = PInt<U418>; pub type N418 = NInt<U418>;
    pub type U419 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P419 = PInt<U419>; pub type N419 = NInt<U419>;
    pub type U420 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P420 = PInt<U420>; pub type N420 = NInt<U420>;
    pub type U421 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P421 = PInt<U421>; pub type N421 = NInt<U421>;
    pub type U422 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P422 = PInt<U422>; pub type N422 = NInt<U422>;
    pub type U423 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P423 = PInt<U423>; pub type N423 = NInt<U423>;
    pub type U424 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P424 = PInt<U424>; pub type N424 = NInt<U424>;
    pub type U425 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P425 = PInt<U425>; pub type N425 = NInt<U425>;
    pub type U426 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P426 = PInt<U426>; pub type N426 = NInt<U426>;
    pub type U427 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P427 = PInt<U427>; pub type N427 = NInt<U427>;
    pub type U428 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P428 = PInt<U428>; pub type N428 = NInt<U428>;
    pub type U429 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P429 = PInt<U429>; pub type N429 = NInt<U429>;
    pub type U430 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P430 = PInt<U430>; pub type N430 = NInt<U430>;
    pub type U431 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P431 = PInt<U431>; pub type N431 = NInt<U431>;
    pub type U432 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P432 = PInt<U432>; pub type N432 = NInt<U432>;
    pub type U433 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P433 = PInt<U433>; pub type N433 = NInt<U433>;
    pub type U434 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P434 = PInt<U434>; pub type N434 = NInt<U434>;
    pub type U435 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P435 = PInt<U435>; pub type N435 = NInt<U435>;
    pub type U436 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P436 = PInt<U436>; pub type N436 = NInt<U436>;
    pub type U437 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P437 = PInt<U437>; pub type N437 = NInt<U437>;
    pub type U438 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P438 = PInt<U438>; pub type N438 = NInt<U438>;
    pub type U439 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P439 = PInt<U439>; pub type N439 = NInt<U439>;
    pub type U440 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P440 = PInt<U440>; pub type N440 = NInt<U440>;
    pub type U441 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P441 = PInt<U441>; pub type N441 = NInt<U441>;
    pub type U442 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P442 = PInt<U442>; pub type N442 = NInt<U442>;
    pub type U443 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P443 = PInt<U443>; pub type N443 = NInt<U443>;
    pub type U444 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P444 = PInt<U444>; pub type N444 = NInt<U444>;
    pub type U445 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P445 = PInt<U445>; pub type N445 = NInt<U445>;
    pub type U446 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P446 = PInt<U446>; pub type N446 = NInt<U446>;
    pub type U447 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P447 = PInt<U447>; pub type N447 = NInt<U447>;
    pub type U448 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P448 = PInt<U448>; pub type N448 = NInt<U448>;
    pub type U449 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P449 = PInt<U449>; pub type N449 = NInt<U449>;
    pub type U450 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P450 = PInt<U450>; pub type N450 = NInt<U450>;
    pub type U451 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P451 = PInt<U451>; pub type N451 = NInt<U451>;
    pub type U452 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P452 = PInt<U452>; pub type N452 = NInt<U452>;
    pub type U453 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P453 = PInt<U453>; pub type N453 = NInt<U453>;
    pub type U454 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P454 = PInt<U454>; pub type N454 = NInt<U454>;
    pub type U455 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P455 = PInt<U455>; pub type N455 = NInt<U455>;
    pub type U456 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P456 = PInt<U456>; pub type N456 = NInt<U456>;
    pub type U457 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P457 = PInt<U457>; pub type N457 = NInt<U457>;
    pub type U458 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P458 = PInt<U458>; pub type N458 = NInt<U458>;
    pub type U459 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P459 = PInt<U459>; pub type N459 = NInt<U459>;
    pub type U460 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P460 = PInt<U460>; pub type N460 = NInt<U460>;
    pub type U461 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P461 = PInt<U461>; pub type N461 = NInt<U461>;
    pub type U462 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P462 = PInt<U462>; pub type N462 = NInt<U462>;
    pub type U463 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P463 = PInt<U463>; pub type N463 = NInt<U463>;
    pub type U464 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P464 = PInt<U464>; pub type N464 = NInt<U464>;
    pub type U465 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P465 = PInt<U465>; pub type N465 = NInt<U465>;
    pub type U466 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P466 = PInt<U466>; pub type N466 = NInt<U466>;
    pub type U467 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P467 = PInt<U467>; pub type N467 = NInt<U467>;
    pub type U468 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P468 = PInt<U468>; pub type N468 = NInt<U468>;
    pub type U469 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P469 = PInt<U469>; pub type N469 = NInt<U469>;
    pub type U470 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P470 = PInt<U470>; pub type N470 = NInt<U470>;
    pub type U471 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P471 = PInt<U471>; pub type N471 = NInt<U471>;
    pub type U472 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P472 = PInt<U472>; pub type N472 = NInt<U472>;
    pub type U473 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P473 = PInt<U473>; pub type N473 = NInt<U473>;
    pub type U474 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P474 = PInt<U474>; pub type N474 = NInt<U474>;
    pub type U475 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P475 = PInt<U475>; pub type N475 = NInt<U475>;
    pub type U476 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P476 = PInt<U476>; pub type N476 = NInt<U476>;
    pub type U477 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P477 = PInt<U477>; pub type N477 = NInt<U477>;
    pub type U478 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P478 = PInt<U478>; pub type N478 = NInt<U478>;
    pub type U479 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P479 = PInt<U479>; pub type N479 = NInt<U479>;
    pub type U480 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P480 = PInt<U480>; pub type N480 = NInt<U480>;
    pub type U481 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P481 = PInt<U481>; pub type N481 = NInt<U481>;
    pub type U482 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P482 = PInt<U482>; pub type N482 = NInt<U482>;
    pub type U483 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P483 = PInt<U483>; pub type N483 = NInt<U483>;
    pub type U484 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P484 = PInt<U484>; pub type N484 = NInt<U484>;
    pub type U485 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P485 = PInt<U485>; pub type N485 = NInt<U485>;
    pub type U486 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P486 = PInt<U486>; pub type N486 = NInt<U486>;
    pub type U487 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P487 = PInt<U487>; pub type N487 = NInt<U487>;
    pub type U488 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P488 = PInt<U488>; pub type N488 = NInt<U488>;
    pub type U489 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P489 = PInt<U489>; pub type N489 = NInt<U489>;
    pub type U490 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P490 = PInt<U490>; pub type N490 = NInt<U490>;
    pub type U491 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P491 = PInt<U491>; pub type N491 = NInt<U491>;
    pub type U492 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P492 = PInt<U492>; pub type N492 = NInt<U492>;
    pub type U493 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P493 = PInt<U493>; pub type N493 = NInt<U493>;
    pub type U494 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P494 = PInt<U494>; pub type N494 = NInt<U494>;
    pub type U495 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P495 = PInt<U495>; pub type N495 = NInt<U495>;
    pub type U496 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P496 = PInt<U496>; pub type N496 = NInt<U496>;
    pub type U497 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P497 = PInt<U497>; pub type N497 = NInt<U497>;
    pub type U498 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P498 = PInt<U498>; pub type N498 = NInt<U498>;
    pub type U499 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P499 = PInt<U499>; pub type N499 = NInt<U499>;
    pub type U500 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P500 = PInt<U500>; pub type N500 = NInt<U500>;
    pub type U501 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P501 = PInt<U501>; pub type N501 = NInt<U501>;
    pub type U502 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P502 = PInt<U502>; pub type N502 = NInt<U502>;
    pub type U503 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P503 = PInt<U503>; pub type N503 = NInt<U503>;
    pub type U504 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P504 = PInt<U504>; pub type N504 = NInt<U504>;
    pub type U505 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P505 = PInt<U505>; pub type N505 = NInt<U505>;
    pub type U506 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P506 = PInt<U506>; pub type N506 = NInt<U506>;
    pub type U507 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P507 = PInt<U507>; pub type N507 = NInt<U507>;
    pub type U508 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P508 = PInt<U508>; pub type N508 = NInt<U508>;
    pub type U509 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P509 = PInt<U509>; pub type N509 = NInt<U509>;
    pub type U510 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P510 = PInt<U510>; pub type N510 = NInt<U510>;
    pub type U511 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P511 = PInt<U511>; pub type N511 = NInt<U511>;
    pub type U512 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P512 = PInt<U512>; pub type N512 = NInt<U512>;
    pub type U513 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P513 = PInt<U513>; pub type N513 = NInt<U513>;
    pub type U514 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P514 = PInt<U514>; pub type N514 = NInt<U514>;
    pub type U515 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P515 = PInt<U515>; pub type N515 = NInt<U515>;
    pub type U516 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P516 = PInt<U516>; pub type N516 = NInt<U516>;
    pub type U517 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P517 = PInt<U517>; pub type N517 = NInt<U517>;
    pub type U518 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P518 = PInt<U518>; pub type N518 = NInt<U518>;
    pub type U519 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P519 = PInt<U519>; pub type N519 = NInt<U519>;
    pub type U520 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P520 = PInt<U520>; pub type N520 = NInt<U520>;
    pub type U521 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P521 = PInt<U521>; pub type N521 = NInt<U521>;
    pub type U522 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P522 = PInt<U522>; pub type N522 = NInt<U522>;
    pub type U523 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P523 = PInt<U523>; pub type N523 = NInt<U523>;
    pub type U524 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P524 = PInt<U524>; pub type N524 = NInt<U524>;
    pub type U525 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P525 = PInt<U525>; pub type N525 = NInt<U525>;
    pub type U526 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P526 = PInt<U526>; pub type N526 = NInt<U526>;
    pub type U527 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P527 = PInt<U527>; pub type N527 = NInt<U527>;
    pub type U528 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P528 = PInt<U528>; pub type N528 = NInt<U528>;
    pub type U529 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P529 = PInt<U529>; pub type N529 = NInt<U529>;
    pub type U530 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P530 = PInt<U530>; pub type N530 = NInt<U530>;
    pub type U531 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P531 = PInt<U531>; pub type N531 = NInt<U531>;
    pub type U532 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P532 = PInt<U532>; pub type N532 = NInt<U532>;
    pub type U533 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P533 = PInt<U533>; pub type N533 = NInt<U533>;
    pub type U534 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P534 = PInt<U534>; pub type N534 = NInt<U534>;
    pub type U535 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P535 = PInt<U535>; pub type N535 = NInt<U535>;
    pub type U536 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P536 = PInt<U536>; pub type N536 = NInt<U536>;
    pub type U537 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P537 = PInt<U537>; pub type N537 = NInt<U537>;
    pub type U538 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P538 = PInt<U538>; pub type N538 = NInt<U538>;
    pub type U539 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P539 = PInt<U539>; pub type N539 = NInt<U539>;
    pub type U540 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P540 = PInt<U540>; pub type N540 = NInt<U540>;
    pub type U541 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P541 = PInt<U541>; pub type N541 = NInt<U541>;
    pub type U542 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P542 = PInt<U542>; pub type N542 = NInt<U542>;
    pub type U543 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P543 = PInt<U543>; pub type N543 = NInt<U543>;
    pub type U544 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P544 = PInt<U544>; pub type N544 = NInt<U544>;
    pub type U545 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P545 = PInt<U545>; pub type N545 = NInt<U545>;
    pub type U546 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P546 = PInt<U546>; pub type N546 = NInt<U546>;
    pub type U547 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P547 = PInt<U547>; pub type N547 = NInt<U547>;
    pub type U548 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P548 = PInt<U548>; pub type N548 = NInt<U548>;
    pub type U549 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P549 = PInt<U549>; pub type N549 = NInt<U549>;
    pub type U550 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P550 = PInt<U550>; pub type N550 = NInt<U550>;
    pub type U551 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P551 = PInt<U551>; pub type N551 = NInt<U551>;
    pub type U552 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P552 = PInt<U552>; pub type N552 = NInt<U552>;
    pub type U553 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P553 = PInt<U553>; pub type N553 = NInt<U553>;
    pub type U554 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P554 = PInt<U554>; pub type N554 = NInt<U554>;
    pub type U555 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P555 = PInt<U555>; pub type N555 = NInt<U555>;
    pub type U556 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P556 = PInt<U556>; pub type N556 = NInt<U556>;
    pub type U557 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P557 = PInt<U557>; pub type N557 = NInt<U557>;
    pub type U558 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P558 = PInt<U558>; pub type N558 = NInt<U558>;
    pub type U559 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P559 = PInt<U559>; pub type N559 = NInt<U559>;
    pub type U560 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P560 = PInt<U560>; pub type N560 = NInt<U560>;
    pub type U561 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P561 = PInt<U561>; pub type N561 = NInt<U561>;
    pub type U562 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P562 = PInt<U562>; pub type N562 = NInt<U562>;
    pub type U563 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P563 = PInt<U563>; pub type N563 = NInt<U563>;
    pub type U564 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P564 = PInt<U564>; pub type N564 = NInt<U564>;
    pub type U565 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P565 = PInt<U565>; pub type N565 = NInt<U565>;
    pub type U566 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P566 = PInt<U566>; pub type N566 = NInt<U566>;
    pub type U567 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P567 = PInt<U567>; pub type N567 = NInt<U567>;
    pub type U568 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P568 = PInt<U568>; pub type N568 = NInt<U568>;
    pub type U569 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P569 = PInt<U569>; pub type N569 = NInt<U569>;
    pub type U570 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P570 = PInt<U570>; pub type N570 = NInt<U570>;
    pub type U571 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P571 = PInt<U571>; pub type N571 = NInt<U571>;
    pub type U572 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P572 = PInt<U572>; pub type N572 = NInt<U572>;
    pub type U573 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P573 = PInt<U573>; pub type N573 = NInt<U573>;
    pub type U574 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P574 = PInt<U574>; pub type N574 = NInt<U574>;
    pub type U575 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P575 = PInt<U575>; pub type N575 = NInt<U575>;
    pub type U576 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P576 = PInt<U576>; pub type N576 = NInt<U576>;
    pub type U577 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P577 = PInt<U577>; pub type N577 = NInt<U577>;
    pub type U578 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P578 = PInt<U578>; pub type N578 = NInt<U578>;
    pub type U579 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P579 = PInt<U579>; pub type N579 = NInt<U579>;
    pub type U580 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P580 = PInt<U580>; pub type N580 = NInt<U580>;
    pub type U581 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P581 = PInt<U581>; pub type N581 = NInt<U581>;
    pub type U582 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P582 = PInt<U582>; pub type N582 = NInt<U582>;
    pub type U583 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P583 = PInt<U583>; pub type N583 = NInt<U583>;
    pub type U584 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P584 = PInt<U584>; pub type N584 = NInt<U584>;
    pub type U585 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P585 = PInt<U585>; pub type N585 = NInt<U585>;
    pub type U586 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P586 = PInt<U586>; pub type N586 = NInt<U586>;
    pub type U587 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P587 = PInt<U587>; pub type N587 = NInt<U587>;
    pub type U588 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P588 = PInt<U588>; pub type N588 = NInt<U588>;
    pub type U589 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P589 = PInt<U589>; pub type N589 = NInt<U589>;
    pub type U590 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P590 = PInt<U590>; pub type N590 = NInt<U590>;
    pub type U591 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P591 = PInt<U591>; pub type N591 = NInt<U591>;
    pub type U592 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P592 = PInt<U592>; pub type N592 = NInt<U592>;
    pub type U593 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P593 = PInt<U593>; pub type N593 = NInt<U593>;
    pub type U594 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P594 = PInt<U594>; pub type N594 = NInt<U594>;
    pub type U595 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P595 = PInt<U595>; pub type N595 = NInt<U595>;
    pub type U596 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P596 = PInt<U596>; pub type N596 = NInt<U596>;
    pub type U597 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P597 = PInt<U597>; pub type N597 = NInt<U597>;
    pub type U598 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P598 = PInt<U598>; pub type N598 = NInt<U598>;
    pub type U599 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P599 = PInt<U599>; pub type N599 = NInt<U599>;
    pub type U600 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P600 = PInt<U600>; pub type N600 = NInt<U600>;
    pub type U601 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P601 = PInt<U601>; pub type N601 = NInt<U601>;
    pub type U602 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P602 = PInt<U602>; pub type N602 = NInt<U602>;
    pub type U603 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P603 = PInt<U603>; pub type N603 = NInt<U603>;
    pub type U604 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P604 = PInt<U604>; pub type N604 = NInt<U604>;
    pub type U605 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P605 = PInt<U605>; pub type N605 = NInt<U605>;
    pub type U606 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P606 = PInt<U606>; pub type N606 = NInt<U606>;
    pub type U607 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P607 = PInt<U607>; pub type N607 = NInt<U607>;
    pub type U608 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P608 = PInt<U608>; pub type N608 = NInt<U608>;
    pub type U609 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P609 = PInt<U609>; pub type N609 = NInt<U609>;
    pub type U610 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P610 = PInt<U610>; pub type N610 = NInt<U610>;
    pub type U611 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P611 = PInt<U611>; pub type N611 = NInt<U611>;
    pub type U612 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P612 = PInt<U612>; pub type N612 = NInt<U612>;
    pub type U613 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P613 = PInt<U613>; pub type N613 = NInt<U613>;
    pub type U614 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P614 = PInt<U614>; pub type N614 = NInt<U614>;
    pub type U615 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P615 = PInt<U615>; pub type N615 = NInt<U615>;
    pub type U616 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P616 = PInt<U616>; pub type N616 = NInt<U616>;
    pub type U617 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P617 = PInt<U617>; pub type N617 = NInt<U617>;
    pub type U618 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P618 = PInt<U618>; pub type N618 = NInt<U618>;
    pub type U619 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P619 = PInt<U619>; pub type N619 = NInt<U619>;
    pub type U620 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P620 = PInt<U620>; pub type N620 = NInt<U620>;
    pub type U621 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P621 = PInt<U621>; pub type N621 = NInt<U621>;
    pub type U622 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P622 = PInt<U622>; pub type N622 = NInt<U622>;
    pub type U623 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P623 = PInt<U623>; pub type N623 = NInt<U623>;
    pub type U624 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P624 = PInt<U624>; pub type N624 = NInt<U624>;
    pub type U625 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P625 = PInt<U625>; pub type N625 = NInt<U625>;
    pub type U626 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P626 = PInt<U626>; pub type N626 = NInt<U626>;
    pub type U627 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P627 = PInt<U627>; pub type N627 = NInt<U627>;
    pub type U628 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P628 = PInt<U628>; pub type N628 = NInt<U628>;
    pub type U629 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P629 = PInt<U629>; pub type N629 = NInt<U629>;
    pub type U630 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P630 = PInt<U630>; pub type N630 = NInt<U630>;
    pub type U631 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P631 = PInt<U631>; pub type N631 = NInt<U631>;
    pub type U632 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P632 = PInt<U632>; pub type N632 = NInt<U632>;
    pub type U633 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P633 = PInt<U633>; pub type N633 = NInt<U633>;
    pub type U634 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P634 = PInt<U634>; pub type N634 = NInt<U634>;
    pub type U635 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P635 = PInt<U635>; pub type N635 = NInt<U635>;
    pub type U636 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P636 = PInt<U636>; pub type N636 = NInt<U636>;
    pub type U637 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P637 = PInt<U637>; pub type N637 = NInt<U637>;
    pub type U638 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P638 = PInt<U638>; pub type N638 = NInt<U638>;
    pub type U639 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P639 = PInt<U639>; pub type N639 = NInt<U639>;
    pub type U640 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P640 = PInt<U640>; pub type N640 = NInt<U640>;
    pub type U641 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P641 = PInt<U641>; pub type N641 = NInt<U641>;
    pub type U642 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P642 = PInt<U642>; pub type N642 = NInt<U642>;
    pub type U643 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P643 = PInt<U643>; pub type N643 = NInt<U643>;
    pub type U644 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P644 = PInt<U644>; pub type N644 = NInt<U644>;
    pub type U645 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P645 = PInt<U645>; pub type N645 = NInt<U645>;
    pub type U646 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P646 = PInt<U646>; pub type N646 = NInt<U646>;
    pub type U647 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P647 = PInt<U647>; pub type N647 = NInt<U647>;
    pub type U648 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P648 = PInt<U648>; pub type N648 = NInt<U648>;
    pub type U649 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P649 = PInt<U649>; pub type N649 = NInt<U649>;
    pub type U650 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P650 = PInt<U650>; pub type N650 = NInt<U650>;
    pub type U651 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P651 = PInt<U651>; pub type N651 = NInt<U651>;
    pub type U652 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P652 = PInt<U652>; pub type N652 = NInt<U652>;
    pub type U653 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P653 = PInt<U653>; pub type N653 = NInt<U653>;
    pub type U654 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P654 = PInt<U654>; pub type N654 = NInt<U654>;
    pub type U655 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P655 = PInt<U655>; pub type N655 = NInt<U655>;
    pub type U656 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P656 = PInt<U656>; pub type N656 = NInt<U656>;
    pub type U657 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P657 = PInt<U657>; pub type N657 = NInt<U657>;
    pub type U658 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P658 = PInt<U658>; pub type N658 = NInt<U658>;
    pub type U659 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P659 = PInt<U659>; pub type N659 = NInt<U659>;
    pub type U660 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P660 = PInt<U660>; pub type N660 = NInt<U660>;
    pub type U661 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P661 = PInt<U661>; pub type N661 = NInt<U661>;
    pub type U662 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P662 = PInt<U662>; pub type N662 = NInt<U662>;
    pub type U663 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P663 = PInt<U663>; pub type N663 = NInt<U663>;
    pub type U664 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P664 = PInt<U664>; pub type N664 = NInt<U664>;
    pub type U665 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P665 = PInt<U665>; pub type N665 = NInt<U665>;
    pub type U666 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P666 = PInt<U666>; pub type N666 = NInt<U666>;
    pub type U667 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P667 = PInt<U667>; pub type N667 = NInt<U667>;
    pub type U668 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P668 = PInt<U668>; pub type N668 = NInt<U668>;
    pub type U669 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P669 = PInt<U669>; pub type N669 = NInt<U669>;
    pub type U670 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P670 = PInt<U670>; pub type N670 = NInt<U670>;
    pub type U671 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P671 = PInt<U671>; pub type N671 = NInt<U671>;
    pub type U672 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P672 = PInt<U672>; pub type N672 = NInt<U672>;
    pub type U673 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P673 = PInt<U673>; pub type N673 = NInt<U673>;
    pub type U674 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P674 = PInt<U674>; pub type N674 = NInt<U674>;
    pub type U675 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P675 = PInt<U675>; pub type N675 = NInt<U675>;
    pub type U676 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P676 = PInt<U676>; pub type N676 = NInt<U676>;
    pub type U677 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P677 = PInt<U677>; pub type N677 = NInt<U677>;
    pub type U678 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P678 = PInt<U678>; pub type N678 = NInt<U678>;
    pub type U679 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P679 = PInt<U679>; pub type N679 = NInt<U679>;
    pub type U680 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P680 = PInt<U680>; pub type N680 = NInt<U680>;
    pub type U681 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P681 = PInt<U681>; pub type N681 = NInt<U681>;
    pub type U682 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P682 = PInt<U682>; pub type N682 = NInt<U682>;
    pub type U683 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P683 = PInt<U683>; pub type N683 = NInt<U683>;
    pub type U684 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P684 = PInt<U684>; pub type N684 = NInt<U684>;
    pub type U685 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P685 = PInt<U685>; pub type N685 = NInt<U685>;
    pub type U686 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P686 = PInt<U686>; pub type N686 = NInt<U686>;
    pub type U687 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P687 = PInt<U687>; pub type N687 = NInt<U687>;
    pub type U688 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P688 = PInt<U688>; pub type N688 = NInt<U688>;
    pub type U689 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P689 = PInt<U689>; pub type N689 = NInt<U689>;
    pub type U690 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P690 = PInt<U690>; pub type N690 = NInt<U690>;
    pub type U691 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P691 = PInt<U691>; pub type N691 = NInt<U691>;
    pub type U692 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P692 = PInt<U692>; pub type N692 = NInt<U692>;
    pub type U693 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P693 = PInt<U693>; pub type N693 = NInt<U693>;
    pub type U694 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P694 = PInt<U694>; pub type N694 = NInt<U694>;
    pub type U695 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P695 = PInt<U695>; pub type N695 = NInt<U695>;
    pub type U696 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P696 = PInt<U696>; pub type N696 = NInt<U696>;
    pub type U697 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P697 = PInt<U697>; pub type N697 = NInt<U697>;
    pub type U698 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P698 = PInt<U698>; pub type N698 = NInt<U698>;
    pub type U699 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P699 = PInt<U699>; pub type N699 = NInt<U699>;
    pub type U700 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P700 = PInt<U700>; pub type N700 = NInt<U700>;
    pub type U701 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P701 = PInt<U701>; pub type N701 = NInt<U701>;
    pub type U702 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P702 = PInt<U702>; pub type N702 = NInt<U702>;
    pub type U703 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P703 = PInt<U703>; pub type N703 = NInt<U703>;
    pub type U704 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P704 = PInt<U704>; pub type N704 = NInt<U704>;
    pub type U705 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P705 = PInt<U705>; pub type N705 = NInt<U705>;
    pub type U706 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P706 = PInt<U706>; pub type N706 = NInt<U706>;
    pub type U707 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P707 = PInt<U707>; pub type N707 = NInt<U707>;
    pub type U708 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P708 = PInt<U708>; pub type N708 = NInt<U708>;
    pub type U709 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P709 = PInt<U709>; pub type N709 = NInt<U709>;
    pub type U710 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P710 = PInt<U710>; pub type N710 = NInt<U710>;
    pub type U711 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P711 = PInt<U711>; pub type N711 = NInt<U711>;
    pub type U712 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P712 = PInt<U712>; pub type N712 = NInt<U712>;
    pub type U713 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P713 = PInt<U713>; pub type N713 = NInt<U713>;
    pub type U714 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P714 = PInt<U714>; pub type N714 = NInt<U714>;
    pub type U715 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P715 = PInt<U715>; pub type N715 = NInt<U715>;
    pub type U716 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P716 = PInt<U716>; pub type N716 = NInt<U716>;
    pub type U717 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P717 = PInt<U717>; pub type N717 = NInt<U717>;
    pub type U718 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P718 = PInt<U718>; pub type N718 = NInt<U718>;
    pub type U719 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P719 = PInt<U719>; pub type N719 = NInt<U719>;
    pub type U720 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P720 = PInt<U720>; pub type N720 = NInt<U720>;
    pub type U721 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P721 = PInt<U721>; pub type N721 = NInt<U721>;
    pub type U722 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P722 = PInt<U722>; pub type N722 = NInt<U722>;
    pub type U723 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P723 = PInt<U723>; pub type N723 = NInt<U723>;
    pub type U724 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P724 = PInt<U724>; pub type N724 = NInt<U724>;
    pub type U725 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P725 = PInt<U725>; pub type N725 = NInt<U725>;
    pub type U726 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P726 = PInt<U726>; pub type N726 = NInt<U726>;
    pub type U727 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P727 = PInt<U727>; pub type N727 = NInt<U727>;
    pub type U728 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P728 = PInt<U728>; pub type N728 = NInt<U728>;
    pub type U729 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P729 = PInt<U729>; pub type N729 = NInt<U729>;
    pub type U730 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P730 = PInt<U730>; pub type N730 = NInt<U730>;
    pub type U731 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P731 = PInt<U731>; pub type N731 = NInt<U731>;
    pub type U732 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P732 = PInt<U732>; pub type N732 = NInt<U732>;
    pub type U733 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P733 = PInt<U733>; pub type N733 = NInt<U733>;
    pub type U734 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P734 = PInt<U734>; pub type N734 = NInt<U734>;
    pub type U735 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P735 = PInt<U735>; pub type N735 = NInt<U735>;
    pub type U736 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P736 = PInt<U736>; pub type N736 = NInt<U736>;
    pub type U737 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P737 = PInt<U737>; pub type N737 = NInt<U737>;
    pub type U738 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P738 = PInt<U738>; pub type N738 = NInt<U738>;
    pub type U739 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P739 = PInt<U739>; pub type N739 = NInt<U739>;
    pub type U740 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P740 = PInt<U740>; pub type N740 = NInt<U740>;
    pub type U741 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P741 = PInt<U741>; pub type N741 = NInt<U741>;
    pub type U742 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P742 = PInt<U742>; pub type N742 = NInt<U742>;
    pub type U743 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P743 = PInt<U743>; pub type N743 = NInt<U743>;
    pub type U744 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P744 = PInt<U744>; pub type N744 = NInt<U744>;
    pub type U745 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P745 = PInt<U745>; pub type N745 = NInt<U745>;
    pub type U746 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P746 = PInt<U746>; pub type N746 = NInt<U746>;
    pub type U747 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P747 = PInt<U747>; pub type N747 = NInt<U747>;
    pub type U748 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P748 = PInt<U748>; pub type N748 = NInt<U748>;
    pub type U749 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P749 = PInt<U749>; pub type N749 = NInt<U749>;
    pub type U750 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P750 = PInt<U750>; pub type N750 = NInt<U750>;
    pub type U751 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P751 = PInt<U751>; pub type N751 = NInt<U751>;
    pub type U752 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P752 = PInt<U752>; pub type N752 = NInt<U752>;
    pub type U753 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P753 = PInt<U753>; pub type N753 = NInt<U753>;
    pub type U754 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P754 = PInt<U754>; pub type N754 = NInt<U754>;
    pub type U755 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P755 = PInt<U755>; pub type N755 = NInt<U755>;
    pub type U756 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P756 = PInt<U756>; pub type N756 = NInt<U756>;
    pub type U757 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P757 = PInt<U757>; pub type N757 = NInt<U757>;
    pub type U758 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P758 = PInt<U758>; pub type N758 = NInt<U758>;
    pub type U759 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P759 = PInt<U759>; pub type N759 = NInt<U759>;
    pub type U760 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P760 = PInt<U760>; pub type N760 = NInt<U760>;
    pub type U761 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P761 = PInt<U761>; pub type N761 = NInt<U761>;
    pub type U762 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P762 = PInt<U762>; pub type N762 = NInt<U762>;
    pub type U763 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P763 = PInt<U763>; pub type N763 = NInt<U763>;
    pub type U764 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P764 = PInt<U764>; pub type N764 = NInt<U764>;
    pub type U765 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P765 = PInt<U765>; pub type N765 = NInt<U765>;
    pub type U766 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P766 = PInt<U766>; pub type N766 = NInt<U766>;
    pub type U767 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P767 = PInt<U767>; pub type N767 = NInt<U767>;
    pub type U768 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P768 = PInt<U768>; pub type N768 = NInt<U768>;
    pub type U769 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P769 = PInt<U769>; pub type N769 = NInt<U769>;
    pub type U770 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P770 = PInt<U770>; pub type N770 = NInt<U770>;
    pub type U771 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P771 = PInt<U771>; pub type N771 = NInt<U771>;
    pub type U772 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P772 = PInt<U772>; pub type N772 = NInt<U772>;
    pub type U773 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P773 = PInt<U773>; pub type N773 = NInt<U773>;
    pub type U774 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P774 = PInt<U774>; pub type N774 = NInt<U774>;
    pub type U775 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P775 = PInt<U775>; pub type N775 = NInt<U775>;
    pub type U776 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P776 = PInt<U776>; pub type N776 = NInt<U776>;
    pub type U777 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P777 = PInt<U777>; pub type N777 = NInt<U777>;
    pub type U778 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P778 = PInt<U778>; pub type N778 = NInt<U778>;
    pub type U779 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P779 = PInt<U779>; pub type N779 = NInt<U779>;
    pub type U780 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P780 = PInt<U780>; pub type N780 = NInt<U780>;
    pub type U781 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P781 = PInt<U781>; pub type N781 = NInt<U781>;
    pub type U782 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P782 = PInt<U782>; pub type N782 = NInt<U782>;
    pub type U783 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P783 = PInt<U783>; pub type N783 = NInt<U783>;
    pub type U784 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P784 = PInt<U784>; pub type N784 = NInt<U784>;
    pub type U785 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P785 = PInt<U785>; pub type N785 = NInt<U785>;
    pub type U786 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P786 = PInt<U786>; pub type N786 = NInt<U786>;
    pub type U787 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P787 = PInt<U787>; pub type N787 = NInt<U787>;
    pub type U788 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P788 = PInt<U788>; pub type N788 = NInt<U788>;
    pub type U789 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P789 = PInt<U789>; pub type N789 = NInt<U789>;
    pub type U790 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P790 = PInt<U790>; pub type N790 = NInt<U790>;
    pub type U791 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P791 = PInt<U791>; pub type N791 = NInt<U791>;
    pub type U792 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P792 = PInt<U792>; pub type N792 = NInt<U792>;
    pub type U793 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P793 = PInt<U793>; pub type N793 = NInt<U793>;
    pub type U794 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P794 = PInt<U794>; pub type N794 = NInt<U794>;
    pub type U795 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P795 = PInt<U795>; pub type N795 = NInt<U795>;
    pub type U796 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P796 = PInt<U796>; pub type N796 = NInt<U796>;
    pub type U797 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P797 = PInt<U797>; pub type N797 = NInt<U797>;
    pub type U798 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P798 = PInt<U798>; pub type N798 = NInt<U798>;
    pub type U799 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P799 = PInt<U799>; pub type N799 = NInt<U799>;
    pub type U800 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P800 = PInt<U800>; pub type N800 = NInt<U800>;
    pub type U801 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P801 = PInt<U801>; pub type N801 = NInt<U801>;
    pub type U802 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P802 = PInt<U802>; pub type N802 = NInt<U802>;
    pub type U803 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P803 = PInt<U803>; pub type N803 = NInt<U803>;
    pub type U804 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P804 = PInt<U804>; pub type N804 = NInt<U804>;
    pub type U805 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P805 = PInt<U805>; pub type N805 = NInt<U805>;
    pub type U806 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P806 = PInt<U806>; pub type N806 = NInt<U806>;
    pub type U807 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P807 = PInt<U807>; pub type N807 = NInt<U807>;
    pub type U808 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P808 = PInt<U808>; pub type N808 = NInt<U808>;
    pub type U809 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P809 = PInt<U809>; pub type N809 = NInt<U809>;
    pub type U810 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P810 = PInt<U810>; pub type N810 = NInt<U810>;
    pub type U811 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P811 = PInt<U811>; pub type N811 = NInt<U811>;
    pub type U812 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P812 = PInt<U812>; pub type N812 = NInt<U812>;
    pub type U813 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P813 = PInt<U813>; pub type N813 = NInt<U813>;
    pub type U814 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P814 = PInt<U814>; pub type N814 = NInt<U814>;
    pub type U815 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P815 = PInt<U815>; pub type N815 = NInt<U815>;
    pub type U816 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P816 = PInt<U816>; pub type N816 = NInt<U816>;
    pub type U817 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P817 = PInt<U817>; pub type N817 = NInt<U817>;
    pub type U818 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P818 = PInt<U818>; pub type N818 = NInt<U818>;
    pub type U819 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P819 = PInt<U819>; pub type N819 = NInt<U819>;
    pub type U820 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P820 = PInt<U820>; pub type N820 = NInt<U820>;
    pub type U821 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P821 = PInt<U821>; pub type N821 = NInt<U821>;
    pub type U822 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P822 = PInt<U822>; pub type N822 = NInt<U822>;
    pub type U823 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P823 = PInt<U823>; pub type N823 = NInt<U823>;
    pub type U824 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P824 = PInt<U824>; pub type N824 = NInt<U824>;
    pub type U825 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P825 = PInt<U825>; pub type N825 = NInt<U825>;
    pub type U826 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P826 = PInt<U826>; pub type N826 = NInt<U826>;
    pub type U827 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P827 = PInt<U827>; pub type N827 = NInt<U827>;
    pub type U828 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P828 = PInt<U828>; pub type N828 = NInt<U828>;
    pub type U829 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P829 = PInt<U829>; pub type N829 = NInt<U829>;
    pub type U830 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P830 = PInt<U830>; pub type N830 = NInt<U830>;
    pub type U831 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P831 = PInt<U831>; pub type N831 = NInt<U831>;
    pub type U832 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P832 = PInt<U832>; pub type N832 = NInt<U832>;
    pub type U833 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P833 = PInt<U833>; pub type N833 = NInt<U833>;
    pub type U834 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P834 = PInt<U834>; pub type N834 = NInt<U834>;
    pub type U835 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P835 = PInt<U835>; pub type N835 = NInt<U835>;
    pub type U836 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P836 = PInt<U836>; pub type N836 = NInt<U836>;
    pub type U837 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P837 = PInt<U837>; pub type N837 = NInt<U837>;
    pub type U838 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P838 = PInt<U838>; pub type N838 = NInt<U838>;
    pub type U839 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P839 = PInt<U839>; pub type N839 = NInt<U839>;
    pub type U840 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P840 = PInt<U840>; pub type N840 = NInt<U840>;
    pub type U841 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P841 = PInt<U841>; pub type N841 = NInt<U841>;
    pub type U842 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P842 = PInt<U842>; pub type N842 = NInt<U842>;
    pub type U843 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P843 = PInt<U843>; pub type N843 = NInt<U843>;
    pub type U844 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P844 = PInt<U844>; pub type N844 = NInt<U844>;
    pub type U845 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P845 = PInt<U845>; pub type N845 = NInt<U845>;
    pub type U846 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P846 = PInt<U846>; pub type N846 = NInt<U846>;
    pub type U847 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P847 = PInt<U847>; pub type N847 = NInt<U847>;
    pub type U848 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P848 = PInt<U848>; pub type N848 = NInt<U848>;
    pub type U849 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P849 = PInt<U849>; pub type N849 = NInt<U849>;
    pub type U850 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P850 = PInt<U850>; pub type N850 = NInt<U850>;
    pub type U851 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P851 = PInt<U851>; pub type N851 = NInt<U851>;
    pub type U852 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P852 = PInt<U852>; pub type N852 = NInt<U852>;
    pub type U853 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P853 = PInt<U853>; pub type N853 = NInt<U853>;
    pub type U854 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P854 = PInt<U854>; pub type N854 = NInt<U854>;
    pub type U855 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P855 = PInt<U855>; pub type N855 = NInt<U855>;
    pub type U856 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P856 = PInt<U856>; pub type N856 = NInt<U856>;
    pub type U857 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P857 = PInt<U857>; pub type N857 = NInt<U857>;
    pub type U858 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P858 = PInt<U858>; pub type N858 = NInt<U858>;
    pub type U859 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P859 = PInt<U859>; pub type N859 = NInt<U859>;
    pub type U860 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P860 = PInt<U860>; pub type N860 = NInt<U860>;
    pub type U861 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P861 = PInt<U861>; pub type N861 = NInt<U861>;
    pub type U862 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P862 = PInt<U862>; pub type N862 = NInt<U862>;
    pub type U863 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P863 = PInt<U863>; pub type N863 = NInt<U863>;
    pub type U864 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P864 = PInt<U864>; pub type N864 = NInt<U864>;
    pub type U865 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P865 = PInt<U865>; pub type N865 = NInt<U865>;
    pub type U866 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P866 = PInt<U866>; pub type N866 = NInt<U866>;
    pub type U867 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P867 = PInt<U867>; pub type N867 = NInt<U867>;
    pub type U868 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P868 = PInt<U868>; pub type N868 = NInt<U868>;
    pub type U869 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P869 = PInt<U869>; pub type N869 = NInt<U869>;
    pub type U870 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P870 = PInt<U870>; pub type N870 = NInt<U870>;
    pub type U871 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P871 = PInt<U871>; pub type N871 = NInt<U871>;
    pub type U872 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P872 = PInt<U872>; pub type N872 = NInt<U872>;
    pub type U873 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P873 = PInt<U873>; pub type N873 = NInt<U873>;
    pub type U874 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P874 = PInt<U874>; pub type N874 = NInt<U874>;
    pub type U875 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P875 = PInt<U875>; pub type N875 = NInt<U875>;
    pub type U876 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P876 = PInt<U876>; pub type N876 = NInt<U876>;
    pub type U877 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P877 = PInt<U877>; pub type N877 = NInt<U877>;
    pub type U878 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P878 = PInt<U878>; pub type N878 = NInt<U878>;
    pub type U879 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P879 = PInt<U879>; pub type N879 = NInt<U879>;
    pub type U880 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P880 = PInt<U880>; pub type N880 = NInt<U880>;
    pub type U881 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P881 = PInt<U881>; pub type N881 = NInt<U881>;
    pub type U882 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P882 = PInt<U882>; pub type N882 = NInt<U882>;
    pub type U883 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P883 = PInt<U883>; pub type N883 = NInt<U883>;
    pub type U884 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P884 = PInt<U884>; pub type N884 = NInt<U884>;
    pub type U885 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P885 = PInt<U885>; pub type N885 = NInt<U885>;
    pub type U886 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P886 = PInt<U886>; pub type N886 = NInt<U886>;
    pub type U887 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P887 = PInt<U887>; pub type N887 = NInt<U887>;
    pub type U888 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P888 = PInt<U888>; pub type N888 = NInt<U888>;
    pub type U889 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P889 = PInt<U889>; pub type N889 = NInt<U889>;
    pub type U890 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P890 = PInt<U890>; pub type N890 = NInt<U890>;
    pub type U891 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P891 = PInt<U891>; pub type N891 = NInt<U891>;
    pub type U892 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P892 = PInt<U892>; pub type N892 = NInt<U892>;
    pub type U893 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P893 = PInt<U893>; pub type N893 = NInt<U893>;
    pub type U894 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P894 = PInt<U894>; pub type N894 = NInt<U894>;
    pub type U895 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P895 = PInt<U895>; pub type N895 = NInt<U895>;
    pub type U896 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P896 = PInt<U896>; pub type N896 = NInt<U896>;
    pub type U897 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P897 = PInt<U897>; pub type N897 = NInt<U897>;
    pub type U898 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P898 = PInt<U898>; pub type N898 = NInt<U898>;
    pub type U899 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P899 = PInt<U899>; pub type N899 = NInt<U899>;
    pub type U900 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P900 = PInt<U900>; pub type N900 = NInt<U900>;
    pub type U901 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P901 = PInt<U901>; pub type N901 = NInt<U901>;
    pub type U902 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P902 = PInt<U902>; pub type N902 = NInt<U902>;
    pub type U903 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P903 = PInt<U903>; pub type N903 = NInt<U903>;
    pub type U904 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P904 = PInt<U904>; pub type N904 = NInt<U904>;
    pub type U905 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P905 = PInt<U905>; pub type N905 = NInt<U905>;
    pub type U906 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P906 = PInt<U906>; pub type N906 = NInt<U906>;
    pub type U907 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P907 = PInt<U907>; pub type N907 = NInt<U907>;
    pub type U908 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P908 = PInt<U908>; pub type N908 = NInt<U908>;
    pub type U909 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P909 = PInt<U909>; pub type N909 = NInt<U909>;
    pub type U910 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P910 = PInt<U910>; pub type N910 = NInt<U910>;
    pub type U911 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P911 = PInt<U911>; pub type N911 = NInt<U911>;
    pub type U912 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P912 = PInt<U912>; pub type N912 = NInt<U912>;
    pub type U913 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P913 = PInt<U913>; pub type N913 = NInt<U913>;
    pub type U914 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P914 = PInt<U914>; pub type N914 = NInt<U914>;
    pub type U915 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P915 = PInt<U915>; pub type N915 = NInt<U915>;
    pub type U916 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P916 = PInt<U916>; pub type N916 = NInt<U916>;
    pub type U917 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P917 = PInt<U917>; pub type N917 = NInt<U917>;
    pub type U918 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P918 = PInt<U918>; pub type N918 = NInt<U918>;
    pub type U919 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P919 = PInt<U919>; pub type N919 = NInt<U919>;
    pub type U920 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P920 = PInt<U920>; pub type N920 = NInt<U920>;
    pub type U921 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P921 = PInt<U921>; pub type N921 = NInt<U921>;
    pub type U922 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P922 = PInt<U922>; pub type N922 = NInt<U922>;
    pub type U923 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P923 = PInt<U923>; pub type N923 = NInt<U923>;
    pub type U924 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P924 = PInt<U924>; pub type N924 = NInt<U924>;
    pub type U925 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P925 = PInt<U925>; pub type N925 = NInt<U925>;
    pub type U926 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P926 = PInt<U926>; pub type N926 = NInt<U926>;
    pub type U927 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P927 = PInt<U927>; pub type N927 = NInt<U927>;
    pub type U928 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P928 = PInt<U928>; pub type N928 = NInt<U928>;
    pub type U929 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P929 = PInt<U929>; pub type N929 = NInt<U929>;
    pub type U930 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P930 = PInt<U930>; pub type N930 = NInt<U930>;
    pub type U931 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P931 = PInt<U931>; pub type N931 = NInt<U931>;
    pub type U932 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P932 = PInt<U932>; pub type N932 = NInt<U932>;
    pub type U933 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P933 = PInt<U933>; pub type N933 = NInt<U933>;
    pub type U934 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P934 = PInt<U934>; pub type N934 = NInt<U934>;
    pub type U935 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P935 = PInt<U935>; pub type N935 = NInt<U935>;
    pub type U936 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P936 = PInt<U936>; pub type N936 = NInt<U936>;
    pub type U937 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P937 = PInt<U937>; pub type N937 = NInt<U937>;
    pub type U938 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P938 = PInt<U938>; pub type N938 = NInt<U938>;
    pub type U939 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P939 = PInt<U939>; pub type N939 = NInt<U939>;
    pub type U940 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P940 = PInt<U940>; pub type N940 = NInt<U940>;
    pub type U941 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P941 = PInt<U941>; pub type N941 = NInt<U941>;
    pub type U942 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P942 = PInt<U942>; pub type N942 = NInt<U942>;
    pub type U943 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P943 = PInt<U943>; pub type N943 = NInt<U943>;
    pub type U944 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P944 = PInt<U944>; pub type N944 = NInt<U944>;
    pub type U945 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P945 = PInt<U945>; pub type N945 = NInt<U945>;
    pub type U946 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P946 = PInt<U946>; pub type N946 = NInt<U946>;
    pub type U947 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P947 = PInt<U947>; pub type N947 = NInt<U947>;
    pub type U948 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P948 = PInt<U948>; pub type N948 = NInt<U948>;
    pub type U949 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P949 = PInt<U949>; pub type N949 = NInt<U949>;
    pub type U950 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P950 = PInt<U950>; pub type N950 = NInt<U950>;
    pub type U951 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P951 = PInt<U951>; pub type N951 = NInt<U951>;
    pub type U952 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P952 = PInt<U952>; pub type N952 = NInt<U952>;
    pub type U953 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P953 = PInt<U953>; pub type N953 = NInt<U953>;
    pub type U954 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P954 = PInt<U954>; pub type N954 = NInt<U954>;
    pub type U955 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P955 = PInt<U955>; pub type N955 = NInt<U955>;
    pub type U956 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P956 = PInt<U956>; pub type N956 = NInt<U956>;
    pub type U957 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P957 = PInt<U957>; pub type N957 = NInt<U957>;
    pub type U958 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P958 = PInt<U958>; pub type N958 = NInt<U958>;
    pub type U959 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P959 = PInt<U959>; pub type N959 = NInt<U959>;
    pub type U960 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P960 = PInt<U960>; pub type N960 = NInt<U960>;
    pub type U961 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>;
    pub type P961 = PInt<U961>; pub type N961 = NInt<U961>;
    pub type U962 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>;
    pub type P962 = PInt<U962>; pub type N962 = NInt<U962>;
    pub type U963 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>;
    pub type P963 = PInt<U963>; pub type N963 = NInt<U963>;
    pub type U964 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>;
    pub type P964 = PInt<U964>; pub type N964 = NInt<U964>;
    pub type U965 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>;
    pub type P965 = PInt<U965>; pub type N965 = NInt<U965>;
    pub type U966 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>;
    pub type P966 = PInt<U966>; pub type N966 = NInt<U966>;
    pub type U967 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>;
    pub type P967 = PInt<U967>; pub type N967 = NInt<U967>;
    pub type U968 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>;
    pub type P968 = PInt<U968>; pub type N968 = NInt<U968>;
    pub type U969 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>;
    pub type P969 = PInt<U969>; pub type N969 = NInt<U969>;
    pub type U970 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>;
    pub type P970 = PInt<U970>; pub type N970 = NInt<U970>;
    pub type U971 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B1>;
    pub type P971 = PInt<U971>; pub type N971 = NInt<U971>;
    pub type U972 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>;
    pub type P972 = PInt<U972>; pub type N972 = NInt<U972>;
    pub type U973 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>;
    pub type P973 = PInt<U973>; pub type N973 = NInt<U973>;
    pub type U974 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>;
    pub type P974 = PInt<U974>; pub type N974 = NInt<U974>;
    pub type U975 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B1>;
    pub type P975 = PInt<U975>; pub type N975 = NInt<U975>;
    pub type U976 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P976 = PInt<U976>; pub type N976 = NInt<U976>;
    pub type U977 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>;
    pub type P977 = PInt<U977>; pub type N977 = NInt<U977>;
    pub type U978 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>;
    pub type P978 = PInt<U978>; pub type N978 = NInt<U978>;
    pub type U979 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>;
    pub type P979 = PInt<U979>; pub type N979 = NInt<U979>;
    pub type U980 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>;
    pub type P980 = PInt<U980>; pub type N980 = NInt<U980>;
    pub type U981 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B1>;
    pub type P981 = PInt<U981>; pub type N981 = NInt<U981>;
    pub type U982 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>;
    pub type P982 = PInt<U982>; pub type N982 = NInt<U982>;
    pub type U983 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>;
    pub type P983 = PInt<U983>; pub type N983 = NInt<U983>;
    pub type U984 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>;
    pub type P984 = PInt<U984>; pub type N984 = NInt<U984>;
    pub type U985 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>;
    pub type P985 = PInt<U985>; pub type N985 = NInt<U985>;
    pub type U986 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>;
    pub type P986 = PInt<U986>; pub type N986 = NInt<U986>;
    pub type U987 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>;
    pub type P987 = PInt<U987>; pub type N987 = NInt<U987>;
    pub type U988 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>;
    pub type P988 = PInt<U988>; pub type N988 = NInt<U988>;
    pub type U989 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>;
    pub type P989 = PInt<U989>; pub type N989 = NInt<U989>;
    pub type U990 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>;
    pub type P990 = PInt<U990>; pub type N990 = NInt<U990>;
    pub type U991 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>;
    pub type P991 = PInt<U991>; pub type N991 = NInt<U991>;
    pub type U992 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P992 = PInt<U992>; pub type N992 = NInt<U992>;
    pub type U993 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>;
    pub type P993 = PInt<U993>; pub type N993 = NInt<U993>;
    pub type U994 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>;
    pub type P994 = PInt<U994>; pub type N994 = NInt<U994>;
    pub type U995 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>;
    pub type P995 = PInt<U995>; pub type N995 = NInt<U995>;
    pub type U996 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>;
    pub type P996 = PInt<U996>; pub type N996 = NInt<U996>;
    pub type U997 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>;
    pub type P997 = PInt<U997>; pub type N997 = NInt<U997>;
    pub type U998 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>;
    pub type P998 = PInt<U998>; pub type N998 = NInt<U998>;
    pub type U999 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>;
    pub type P999 = PInt<U999>; pub type N999 = NInt<U999>;
    pub type U1000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>;
    pub type P1000 = PInt<U1000>; pub type N1000 = NInt<U1000>;
    pub type U1001 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>;
    pub type P1001 = PInt<U1001>; pub type N1001 = NInt<U1001>;
    pub type U1002 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>;
    pub type P1002 = PInt<U1002>; pub type N1002 = NInt<U1002>;
    pub type U1003 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>;
    pub type P1003 = PInt<U1003>; pub type N1003 = NInt<U1003>;
    pub type U1004 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>;
    pub type P1004 = PInt<U1004>; pub type N1004 = NInt<U1004>;
    pub type U1005 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>;
    pub type P1005 = PInt<U1005>; pub type N1005 = NInt<U1005>;
    pub type U1006 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>;
    pub type P1006 = PInt<U1006>; pub type N1006 = NInt<U1006>;
    pub type U1007 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B1>;
    pub type P1007 = PInt<U1007>; pub type N1007 = NInt<U1007>;
    pub type U1008 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>;
    pub type P1008 = PInt<U1008>; pub type N1008 = NInt<U1008>;
    pub type U1009 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;
    pub type P1009 = PInt<U1009>; pub type N1009 = NInt<U1009>;
    pub type U1010 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>;
    pub type P1010 = PInt<U1010>; pub type N1010 = NInt<U1010>;
    pub type U1011 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;
    pub type P1011 = PInt<U1011>; pub type N1011 = NInt<U1011>;
    pub type U1012 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>;
    pub type P1012 = PInt<U1012>; pub type N1012 = NInt<U1012>;
    pub type U1013 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>;
    pub type P1013 = PInt<U1013>; pub type N1013 = NInt<U1013>;
    pub type U1014 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B0>;
    pub type P1014 = PInt<U1014>; pub type N1014 = NInt<U1014>;
    pub type U1015 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>, B1>;
    pub type P1015 = PInt<U1015>; pub type N1015 = NInt<U1015>;
    pub type U1016 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>;
    pub type P1016 = PInt<U1016>; pub type N1016 = NInt<U1016>;
    pub type U1017 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>;
    pub type P1017 = PInt<U1017>; pub type N1017 = NInt<U1017>;
    pub type U1018 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>;
    pub type P1018 = PInt<U1018>; pub type N1018 = NInt<U1018>;
    pub type U1019 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B1>;
    pub type P1019 = PInt<U1019>; pub type N1019 = NInt<U1019>;
    pub type U1020 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>;
    pub type P1020 = PInt<U1020>; pub type N1020 = NInt<U1020>;
    pub type U1021 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>;
    pub type P1021 = PInt<U1021>; pub type N1021 = NInt<U1021>;
    pub type U1022 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B0>;
    pub type P1022 = PInt<U1022>; pub type N1022 = NInt<U1022>;
    pub type U1023 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>, B1>;
    pub type P1023 = PInt<U1023>; pub type N1023 = NInt<U1023>;
    pub type U1024 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1024 = PInt<U1024>; pub type N1024 = NInt<U1024>;
    pub type U2048 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2048 = PInt<U2048>; pub type N2048 = NInt<U2048>;
    pub type U4096 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4096 = PInt<U4096>; pub type N4096 = NInt<U4096>;
    pub type U8192 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P8192 = PInt<U8192>; pub type N8192 = NInt<U8192>;
    pub type U16384 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P16384 = PInt<U16384>; pub type N16384 = NInt<U16384>;
    pub type U32768 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P32768 = PInt<U32768>; pub type N32768 = NInt<U32768>;
    pub type U65536 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P65536 = PInt<U65536>; pub type N65536 = NInt<U65536>;
    pub type U131072 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P131072 = PInt<U131072>; pub type N131072 = NInt<U131072>;
    pub type U262144 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P262144 = PInt<U262144>; pub type N262144 = NInt<U262144>;
    pub type U524288 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P524288 = PInt<U524288>; pub type N524288 = NInt<U524288>;
    pub type U1048576 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1048576 = PInt<U1048576>; pub type N1048576 = NInt<U1048576>;
    pub type U2097152 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2097152 = PInt<U2097152>; pub type N2097152 = NInt<U2097152>;
    pub type U4194304 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4194304 = PInt<U4194304>; pub type N4194304 = NInt<U4194304>;
    pub type U8388608 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P8388608 = PInt<U8388608>; pub type N8388608 = NInt<U8388608>;
    pub type U16777216 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P16777216 = PInt<U16777216>; pub type N16777216 = NInt<U16777216>;
    pub type U33554432 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P33554432 = PInt<U33554432>; pub type N33554432 = NInt<U33554432>;
    pub type U67108864 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P67108864 = PInt<U67108864>; pub type N67108864 = NInt<U67108864>;
    pub type U134217728 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P134217728 = PInt<U134217728>; pub type N134217728 = NInt<U134217728>;
    pub type U268435456 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P268435456 = PInt<U268435456>; pub type N268435456 = NInt<U268435456>;
    pub type U536870912 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P536870912 = PInt<U536870912>; pub type N536870912 = NInt<U536870912>;
    pub type U1073741824 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1073741824 = PInt<U1073741824>; pub type N1073741824 = NInt<U1073741824>;
    pub type U2147483648 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2147483648 = PInt<U2147483648>; pub type N2147483648 = NInt<U2147483648>;
    pub type U4294967296 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4294967296 = PInt<U4294967296>; pub type N4294967296 = NInt<U4294967296>;
    pub type U8589934592 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P8589934592 = PInt<U8589934592>; pub type N8589934592 = NInt<U8589934592>;
    pub type U17179869184 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P17179869184 = PInt<U17179869184>; pub type N17179869184 = NInt<U17179869184>;
    pub type U34359738368 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P34359738368 = PInt<U34359738368>; pub type N34359738368 = NInt<U34359738368>;
    pub type U68719476736 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P68719476736 = PInt<U68719476736>; pub type N68719476736 = NInt<U68719476736>;
    pub type U137438953472 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P137438953472 = PInt<U137438953472>; pub type N137438953472 = NInt<U137438953472>;
    pub type U274877906944 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P274877906944 = PInt<U274877906944>; pub type N274877906944 = NInt<U274877906944>;
    pub type U549755813888 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P549755813888 = PInt<U549755813888>; pub type N549755813888 = NInt<U549755813888>;
    pub type U1099511627776 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1099511627776 = PInt<U1099511627776>; pub type N1099511627776 = NInt<U1099511627776>;
    pub type U2199023255552 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2199023255552 = PInt<U2199023255552>; pub type N2199023255552 = NInt<U2199023255552>;
    pub type U4398046511104 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4398046511104 = PInt<U4398046511104>; pub type N4398046511104 = NInt<U4398046511104>;
    pub type U8796093022208 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P8796093022208 = PInt<U8796093022208>; pub type N8796093022208 = NInt<U8796093022208>;
    pub type U17592186044416 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P17592186044416 = PInt<U17592186044416>; pub type N17592186044416 = NInt<U17592186044416>;
    pub type U35184372088832 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P35184372088832 = PInt<U35184372088832>; pub type N35184372088832 = NInt<U35184372088832>;
    pub type U70368744177664 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P70368744177664 = PInt<U70368744177664>; pub type N70368744177664 = NInt<U70368744177664>;
    pub type U140737488355328 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P140737488355328 = PInt<U140737488355328>; pub type N140737488355328 = NInt<U140737488355328>;
    pub type U281474976710656 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P281474976710656 = PInt<U281474976710656>; pub type N281474976710656 = NInt<U281474976710656>;
    pub type U562949953421312 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P562949953421312 = PInt<U562949953421312>; pub type N562949953421312 = NInt<U562949953421312>;
    pub type U1125899906842624 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1125899906842624 = PInt<U1125899906842624>; pub type N1125899906842624 = NInt<U1125899906842624>;
    pub type U2251799813685248 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2251799813685248 = PInt<U2251799813685248>; pub type N2251799813685248 = NInt<U2251799813685248>;
    pub type U4503599627370496 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4503599627370496 = PInt<U4503599627370496>; pub type N4503599627370496 = NInt<U4503599627370496>;
    pub type U9007199254740992 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P9007199254740992 = PInt<U9007199254740992>; pub type N9007199254740992 = NInt<U9007199254740992>;
    pub type U18014398509481984 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P18014398509481984 = PInt<U18014398509481984>; pub type N18014398509481984 = NInt<U18014398509481984>;
    pub type U36028797018963968 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P36028797018963968 = PInt<U36028797018963968>; pub type N36028797018963968 = NInt<U36028797018963968>;
    pub type U72057594037927936 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P72057594037927936 = PInt<U72057594037927936>; pub type N72057594037927936 = NInt<U72057594037927936>;
    pub type U144115188075855872 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P144115188075855872 = PInt<U144115188075855872>; pub type N144115188075855872 = NInt<U144115188075855872>;
    pub type U288230376151711744 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P288230376151711744 = PInt<U288230376151711744>; pub type N288230376151711744 = NInt<U288230376151711744>;
    pub type U576460752303423488 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P576460752303423488 = PInt<U576460752303423488>; pub type N576460752303423488 = NInt<U576460752303423488>;
    pub type U1152921504606846976 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1152921504606846976 = PInt<U1152921504606846976>; pub type N1152921504606846976 = NInt<U1152921504606846976>;
    pub type U2305843009213693952 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P2305843009213693952 = PInt<U2305843009213693952>; pub type N2305843009213693952 = NInt<U2305843009213693952>;
    pub type U4611686018427387904 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P4611686018427387904 = PInt<U4611686018427387904>; pub type N4611686018427387904 = NInt<U4611686018427387904>;
    pub type U9223372036854775808 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type U10000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>;
    pub type P10000 = PInt<U10000>; pub type N10000 = NInt<U10000>;
    pub type U100000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;
    pub type P100000 = PInt<U100000>; pub type N100000 = NInt<U100000>;
    pub type U1000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1000000 = PInt<U1000000>; pub type N1000000 = NInt<U1000000>;
    pub type U10000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P10000000 = PInt<U10000000>; pub type N10000000 = NInt<U10000000>;
    pub type U100000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P100000000 = PInt<U100000000>; pub type N100000000 = NInt<U100000000>;
    pub type U1000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1000000000 = PInt<U1000000000>; pub type N1000000000 = NInt<U1000000000>;
    pub type U10000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P10000000000 = PInt<U10000000000>; pub type N10000000000 = NInt<U10000000000>;
    pub type U100000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P100000000000 = PInt<U100000000000>; pub type N100000000000 = NInt<U100000000000>;
    pub type U1000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1000000000000 = PInt<U1000000000000>; pub type N1000000000000 = NInt<U1000000000000>;
    pub type U10000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P10000000000000 = PInt<U10000000000000>; pub type N10000000000000 = NInt<U10000000000000>;
    pub type U100000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P100000000000000 = PInt<U100000000000000>; pub type N100000000000000 = NInt<U100000000000000>;
    pub type U1000000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1000000000000000 = PInt<U1000000000000000>; pub type N1000000000000000 = NInt<U1000000000000000>;
    pub type U10000000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P10000000000000000 = PInt<U10000000000000000>; pub type N10000000000000000 = NInt<U10000000000000000>;
    pub type U100000000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P100000000000000000 = PInt<U100000000000000000>; pub type N100000000000000000 = NInt<U100000000000000000>;
    pub type U1000000000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B1>, B1>, B0>, B1>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
    pub type P1000000000000000000 = PInt<U1000000000000000000>; pub type N1000000000000000000 = NInt<U1000000000000000000>;
    pub type U10000000000000000000 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B1>, B0>, B1>, B0>, B1>, B1>, B0>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B1>, B0>, B0>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B0>, B0>, B0>, B1>, B0>, B0>, B1>, B1>, B1>, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;
}
'''
'''--- near-election-dapp/backend/target/debug/build/typenum-752424536c07b4b3/out/op.rs ---

/**
Convenient type operations.

Any types representing values must be able to be expressed as `ident`s. That means they need to be
in scope.

For example, `P5` is okay, but `typenum::P5` is not.

You may combine operators arbitrarily, although doing so excessively may require raising the
recursion limit.

# Example
```rust
#![recursion_limit="128"]
#[macro_use] extern crate typenum;
use typenum::consts::*;

fn main() {
    assert_type!(
        op!(min((P1 - P2) * (N3 + N7), P5 * (P3 + P4)) == P10)
    );
}
```
Operators are evaluated based on the operator precedence outlined
[here](https://doc.rust-lang.org/reference.html#operator-precedence).

The full list of supported operators and functions is as follows:

`*`, `/`, `%`, `+`, `-`, `<<`, `>>`, `&`, `^`, `|`, `==`, `!=`, `<=`, `>=`, `<`, `>`, `cmp`, `sqr`, `sqrt`, `abs`, `cube`, `pow`, `min`, `max`, `log2`, `gcd`

They all expand to type aliases defined in the `operator_aliases` module. Here is an expanded list,
including examples:

---
Operator `*`. Expands to `Prod`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P2 * P3), P6);
# }
```

---
Operator `/`. Expands to `Quot`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P6 / P2), P3);
# }
```

---
Operator `%`. Expands to `Mod`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P5 % P3), P2);
# }
```

---
Operator `+`. Expands to `Sum`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P2 + P3), P5);
# }
```

---
Operator `-`. Expands to `Diff`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P2 - P3), N1);
# }
```

---
Operator `<<`. Expands to `Shleft`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(U1 << U5), U32);
# }
```

---
Operator `>>`. Expands to `Shright`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(U32 >> U5), U1);
# }
```

---
Operator `&`. Expands to `And`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(U5 & U3), U1);
# }
```

---
Operator `^`. Expands to `Xor`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(U5 ^ U3), U6);
# }
```

---
Operator `|`. Expands to `Or`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(U5 | U3), U7);
# }
```

---
Operator `==`. Expands to `Eq`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P5 == P3 + P2), True);
# }
```

---
Operator `!=`. Expands to `NotEq`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P5 != P3 + P2), False);
# }
```

---
Operator `<=`. Expands to `LeEq`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P6 <= P3 + P2), False);
# }
```

---
Operator `>=`. Expands to `GrEq`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P6 >= P3 + P2), True);
# }
```

---
Operator `<`. Expands to `Le`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P4 < P3 + P2), True);
# }
```

---
Operator `>`. Expands to `Gr`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(P5 < P3 + P2), False);
# }
```

---
Operator `cmp`. Expands to `Compare`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(cmp(P2, P3)), Less);
# }
```

---
Operator `sqr`. Expands to `Square`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(sqr(P2)), P4);
# }
```

---
Operator `sqrt`. Expands to `Sqrt`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(sqrt(U9)), U3);
# }
```

---
Operator `abs`. Expands to `AbsVal`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(abs(N2)), P2);
# }
```

---
Operator `cube`. Expands to `Cube`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(cube(P2)), P8);
# }
```

---
Operator `pow`. Expands to `Exp`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(pow(P2, P3)), P8);
# }
```

---
Operator `min`. Expands to `Minimum`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(min(P2, P3)), P2);
# }
```

---
Operator `max`. Expands to `Maximum`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(max(P2, P3)), P3);
# }
```

---
Operator `log2`. Expands to `Log2`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(log2(U9)), U3);
# }
```

---
Operator `gcd`. Expands to `Gcf`.

```rust
# #[macro_use] extern crate typenum;
# use typenum::*;
# fn main() {
assert_type_eq!(op!(gcd(U9, U21)), U3);
# }
```

*/
#[macro_export(local_inner_macros)]
macro_rules! op {
    ($($tail:tt)*) => ( __op_internal__!($($tail)*) );
}

    #[doc(hidden)]
    #[macro_export(local_inner_macros)]
    macro_rules! __op_internal__ {

(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: cmp $($tail:tt)*) => (
    __op_internal__!(@stack[Compare, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: sqr $($tail:tt)*) => (
    __op_internal__!(@stack[Square, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: sqrt $($tail:tt)*) => (
    __op_internal__!(@stack[Sqrt, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: abs $($tail:tt)*) => (
    __op_internal__!(@stack[AbsVal, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: cube $($tail:tt)*) => (
    __op_internal__!(@stack[Cube, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: pow $($tail:tt)*) => (
    __op_internal__!(@stack[Exp, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: min $($tail:tt)*) => (
    __op_internal__!(@stack[Minimum, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: max $($tail:tt)*) => (
    __op_internal__!(@stack[Maximum, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: log2 $($tail:tt)*) => (
    __op_internal__!(@stack[Log2, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: gcd $($tail:tt)*) => (
    __op_internal__!(@stack[Gcf, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[LParen, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: , $($tail:tt)*) => (
    __op_internal__!(@stack[LParen, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$stack_top:ident, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: , $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[$stack_top, $($queue,)*] @tail: , $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: * $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: * $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: * $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: * $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: * $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: * $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: * $($tail:tt)*) => (
    __op_internal__!(@stack[Prod, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: / $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: / $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: / $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: / $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: / $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: / $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: / $($tail:tt)*) => (
    __op_internal__!(@stack[Quot, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: % $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: % $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: % $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: % $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: % $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: % $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: % $($tail:tt)*) => (
    __op_internal__!(@stack[Mod, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: + $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: + $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: + $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: + $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: + $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: + $($tail:tt)*) => (
    __op_internal__!(@stack[Sum, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: - $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: - $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: - $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: - $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: - $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: - $($tail:tt)*) => (
    __op_internal__!(@stack[Diff, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: << $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: << $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: << $($tail:tt)*) => (
    __op_internal__!(@stack[Shleft, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: >> $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >> $($tail:tt)*) => (
    __op_internal__!(@stack[Shright, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: & $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: & $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: & $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: & $($tail:tt)*) => (
    __op_internal__!(@stack[And, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: ^ $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ^ $($tail:tt)*) => (
    __op_internal__!(@stack[Xor, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: | $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: | $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: | $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: | $($tail:tt)*) => (
    __op_internal__!(@stack[Or, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: == $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: == $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: == $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: == $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: == $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: == $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: == $($tail:tt)*) => (
    __op_internal__!(@stack[Eq, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: != $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: != $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: != $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: != $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: != $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: != $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: != $($tail:tt)*) => (
    __op_internal__!(@stack[NotEq, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: <= $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: <= $($tail:tt)*) => (
    __op_internal__!(@stack[LeEq, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: >= $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: >= $($tail:tt)*) => (
    __op_internal__!(@stack[GrEq, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: < $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: < $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: < $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: < $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: < $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: < $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: < $($tail:tt)*) => (
    __op_internal__!(@stack[Le, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[Prod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Prod, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Quot, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Quot, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Mod, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Mod, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Sum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sum, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Diff, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Diff, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Shleft, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shleft, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Shright, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Shright, $($queue,)*] @tail: > $($tail)*)
);
(@stack[And, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[And, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Xor, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Xor, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Or, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Or, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Eq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Eq, $($queue,)*] @tail: > $($tail)*)
);
(@stack[NotEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[NotEq, $($queue,)*] @tail: > $($tail)*)
);
(@stack[LeEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[LeEq, $($queue,)*] @tail: > $($tail)*)
);
(@stack[GrEq, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[GrEq, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Le, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Le, $($queue,)*] @tail: > $($tail)*)
);
(@stack[Gr, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gr, $($queue,)*] @tail: > $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: > $($tail:tt)*) => (
    __op_internal__!(@stack[Gr, $($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: ( $($stuff:tt)* ) $($tail:tt)* )
 => (
    __op_internal__!(@stack[LParen, $($stack,)*] @queue[$($queue,)*]
                     @tail: $($stuff)* RParen $($tail)*)
);
(@stack[LParen, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: RParen $($tail:tt)*) => (
    __op_internal__!(@rp3 @stack[$($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$stack_top:ident, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: RParen $($tail:tt)*)
 => (
    __op_internal__!(@stack[$($stack,)*] @queue[$stack_top, $($queue,)*] @tail: RParen $($tail)*)
);
(@rp3 @stack[Compare, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Compare, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Square, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Square, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Sqrt, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Sqrt, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[AbsVal, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[AbsVal, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Cube, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Cube, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Exp, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Exp, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Minimum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Minimum, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Maximum, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Maximum, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Log2, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Log2, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[Gcf, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[Gcf, $($queue,)*] @tail: $($tail)*)
);
(@rp3 @stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[$($queue,)*] @tail: $($tail)*)
);
(@stack[$($stack:ident,)*] @queue[$($queue:ident,)*] @tail: $num:ident $($tail:tt)*) => (
    __op_internal__!(@stack[$($stack,)*] @queue[$num, $($queue,)*] @tail: $($tail)*)
);
(@stack[] @queue[$($queue:ident,)*] @tail: ) => (
    __op_internal__!(@reverse[] @input: $($queue,)*)
);
(@stack[$stack_top:ident, $($stack:ident,)*] @queue[$($queue:ident,)*] @tail:) => (
    __op_internal__!(@stack[$($stack,)*] @queue[$stack_top, $($queue,)*] @tail: )
);
(@reverse[$($revved:ident,)*] @input: $head:ident, $($tail:ident,)* ) => (
    __op_internal__!(@reverse[$head, $($revved,)*] @input: $($tail,)*)
);
(@reverse[$($revved:ident,)*] @input: ) => (
    __op_internal__!(@eval @stack[] @input[$($revved,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Prod, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Prod<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Quot, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Quot<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Mod, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Mod<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Sum, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Sum<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Diff, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Diff<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Shleft, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Shleft<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Shright, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Shright<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[And, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::And<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Xor, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Xor<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Or, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Or<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Eq, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Eq<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[NotEq, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::NotEq<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[LeEq, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::LeEq<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[GrEq, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::GrEq<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Le, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Le<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Gr, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Gr<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Compare, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Compare<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Exp, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Exp<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Minimum, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Minimum<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Maximum, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Maximum<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $b:ty, $($stack:ty,)*] @input[Gcf, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Gcf<$b, $a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $($stack:ty,)*] @input[Square, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Square<$a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $($stack:ty,)*] @input[Sqrt, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Sqrt<$a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $($stack:ty,)*] @input[AbsVal, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::AbsVal<$a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $($stack:ty,)*] @input[Cube, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Cube<$a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$a:ty, $($stack:ty,)*] @input[Log2, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$crate::Log2<$a>, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$($stack:ty,)*] @input[$head:ident, $($tail:ident,)*]) => (
    __op_internal__!(@eval @stack[$head, $($stack,)*] @input[$($tail,)*])
);
(@eval @stack[$stack:ty,] @input[]) => (
    $stack
);
($($tail:tt)* ) => (
    __op_internal__!(@stack[] @queue[] @tail: $($tail)*)
);
}
'''
'''--- near-election-dapp/backend/target/debug/build/typenum-752424536c07b4b3/out/tests.rs ---

extern crate typenum;

use std::ops::*;
use std::cmp::Ordering;
use typenum::*;

#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitOrU0 = <<A as BitOr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitOrU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitXorU0 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitXorU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU0 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU0 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0AddU0 = <<A as Add<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0AddU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MaxU0 = <<A as Max<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MaxU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0GcdU0 = <<A as Gcd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0GcdU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Sub_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0SubU0 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0SubU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_0() {
    type A = UTerm;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_0() {
    type A = UTerm;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_0() {
    type A = UTerm;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U0CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU0 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0BitOrU1 = <<A as BitOr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0BitOrU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0BitXorU1 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0BitXorU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU1 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU1 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0AddU1 = <<A as Add<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0AddU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU1 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0MaxU1 = <<A as Max<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0MaxU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U0GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU1 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Div_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0DivU1 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0DivU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Rem_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_PartialDiv_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PartialDivU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PowU1 = <<A as Pow<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PowU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_1() {
    type A = UTerm;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U0CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0BitOrU2 = <<A as BitOr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U0BitOrU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0BitXorU2 = <<A as BitXor<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U0BitXorU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU2 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0AddU2 = <<A as Add<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U0AddU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU2 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U0MaxU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U0GcdU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU2 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Div_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0DivU2 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0DivU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Rem_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0RemU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_PartialDiv_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PartialDivU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PowU2 = <<A as Pow<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PowU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_2() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U0CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU3 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U0BitOrU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0BitXorU3 = <<A as BitXor<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U0BitXorU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU3 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0AddU3 = <<A as Add<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U0AddU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU3 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U0MaxU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0GcdU3 = <<A as Gcd<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U0GcdU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU3 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Div_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0DivU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Rem_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0RemU3 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0RemU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_PartialDiv_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PartialDivU3 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PartialDivU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PowU3 = <<A as Pow<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PowU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_3() {
    type A = UTerm;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U0CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0BitOrU4 = <<A as BitOr<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U0BitOrU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0BitXorU4 = <<A as BitXor<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U0BitXorU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU4 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0AddU4 = <<A as Add<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U0AddU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU4 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U0MaxU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0GcdU4 = <<A as Gcd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U0GcdU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU4 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Div_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0DivU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Rem_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0RemU4 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0RemU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_PartialDiv_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PartialDivU4 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PartialDivU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PowU4 = <<A as Pow<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PowU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_4() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U0CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitAnd_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0BitAndU5 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0BitAndU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitOr_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U0BitOrU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_BitXor_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0BitXorU5 = <<A as BitXor<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U0BitXorU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shl_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShlU5 = <<A as Shl<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShlU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Shr_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Add_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0AddU5 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U0AddU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Min_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MinU5 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MinU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Max_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U0MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Gcd_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0GcdU5 = <<A as Gcd<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U0GcdU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Mul_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0MulU5 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0MulU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Div_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0DivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Rem_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0RemU5 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0RemU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_PartialDiv_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PartialDivU5 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PartialDivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Pow_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U0PowU5 = <<A as Pow<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U0PowU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_0_Cmp_5() {
    type A = UTerm;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U0CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U0CmpU5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU0 = <<A as BitOr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitOrU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitXorU0 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitXorU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1ShlU0 = <<A as Shl<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1ShlU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1ShrU0 = <<A as Shr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1ShrU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1AddU0 = <<A as Add<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1AddU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MaxU0 = <<A as Max<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MaxU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU0 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Sub_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1SubU0 = <<A as Sub<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1SubU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_0() {
    type A = UInt<UTerm, B1>;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U1CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitAndU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU1 = <<A as BitOr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitOrU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1BitXorU1 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1BitXorU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1ShlU1 = <<A as Shl<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U1ShlU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1ShrU1 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1ShrU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1AddU1 = <<A as Add<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U1AddU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MinU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MaxU1 = <<A as Max<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MaxU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Sub_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1SubU1 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1SubU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MulU1 = <<A as Mul<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MulU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Div_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1DivU1 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1DivU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Rem_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_PartialDiv_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PartialDivU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU1 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_1() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU1 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1BitAndU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU2 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1BitOrU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitXorU2 = <<A as BitXor<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1BitXorU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1ShlU2 = <<A as Shl<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U1ShlU2 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1ShrU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1AddU2 = <<A as Add<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1AddU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MinU2 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MinU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U1MaxU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1MulU2 = <<A as Mul<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U1MulU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Div_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1DivU2 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1DivU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Rem_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1RemU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU2 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_2() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitAndU3 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitAndU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1BitOrU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1BitXorU3 = <<A as BitXor<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U1BitXorU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1ShlU3 = <<A as Shl<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U1ShlU3 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1AddU3 = <<A as Add<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U1AddU3 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MinU3 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MinU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1MaxU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1MulU3 = <<A as Mul<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U1MulU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Div_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1DivU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Rem_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1RemU3 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1RemU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU3 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_3() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U1CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1BitAndU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU4 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1BitOrU4 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitXorU4 = <<A as BitXor<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1BitXorU4 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1ShlU4 = <<A as Shl<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U1ShlU4 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1AddU4 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1AddU4 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MinU4 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MinU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U1MaxU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1MulU4 = <<A as Mul<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U1MulU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Div_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1DivU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Rem_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1RemU4 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1RemU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU4 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_4() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitAnd_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1BitAndU5 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1BitAndU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitOr_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1BitOrU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_BitXor_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1BitXorU5 = <<A as BitXor<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U1BitXorU5 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shl_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U1ShlU5 = <<A as Shl<B>>::Output as Same<U32>>::Output;

    assert_eq!(<U1ShlU5 as Unsigned>::to_u64(), <U32 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Shr_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Add_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U1AddU5 = <<A as Add<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U1AddU5 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Min_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1MinU5 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1MinU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Max_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Gcd_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1GcdU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Mul_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1MulU5 = <<A as Mul<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U1MulU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Div_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U1DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U1DivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Rem_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1RemU5 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1RemU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Pow_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U1PowU5 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U1PowU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_1_Cmp_5() {
    type A = UInt<UTerm, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U1CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U1CmpU5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitOrU0 = <<A as BitOr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2BitOrU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitXorU0 = <<A as BitXor<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2BitXorU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU0 = <<A as Shl<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2ShlU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShrU0 = <<A as Shr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2ShrU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2AddU0 = <<A as Add<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2AddU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MaxU0 = <<A as Max<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MaxU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2GcdU0 = <<A as Gcd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2GcdU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Sub_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2SubU0 = <<A as Sub<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2SubU0 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_0() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U2CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2BitAndU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2BitOrU1 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U2BitOrU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2BitXorU1 = <<A as BitXor<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U2BitXorU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU1 = <<A as Shl<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U2ShlU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2ShrU1 = <<A as Shr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2ShrU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2AddU1 = <<A as Add<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U2AddU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2MinU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MaxU1 = <<A as Max<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MaxU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Sub_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2SubU1 = <<A as Sub<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2SubU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MulU1 = <<A as Mul<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MulU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Div_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2DivU1 = <<A as Div<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2DivU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Rem_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_PartialDiv_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2PartialDivU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2PowU1 = <<A as Pow<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2PowU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_1() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitAndU2 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2BitAndU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitOrU2 = <<A as BitOr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2BitOrU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2BitXorU2 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2BitXorU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU2 = <<A as Shl<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U2ShlU2 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2ShrU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2AddU2 = <<A as Add<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U2AddU2 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MinU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MaxU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2GcdU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Sub_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2SubU2 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2SubU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2MulU2 = <<A as Mul<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U2MulU2 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Div_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2DivU2 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2DivU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Rem_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2RemU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_PartialDiv_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2PartialDivU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2PowU2 = <<A as Pow<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U2PowU2 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_2() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU2 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitAndU3 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2BitAndU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U2BitOrU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2BitXorU3 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2BitXorU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU3 = <<A as Shl<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U2ShlU3 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U2AddU3 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U2AddU3 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MinU3 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MinU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U2MaxU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2GcdU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MulU3 = <<A as Mul<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U2MulU3 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Div_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2DivU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Rem_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2RemU3 = <<A as Rem<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2RemU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2PowU3 = <<A as Pow<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U2PowU3 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_3() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2BitAndU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitOrU4 = <<A as BitOr<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U2BitOrU4 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2BitXorU4 = <<A as BitXor<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U2BitXorU4 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU4 = <<A as Shl<B>>::Output as Same<U32>>::Output;

    assert_eq!(<U2ShlU4 as Unsigned>::to_u64(), <U32 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2AddU4 = <<A as Add<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U2AddU4 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MinU4 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MinU4 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U2MaxU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2GcdU4 = <<A as Gcd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2GcdU4 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2MulU4 = <<A as Mul<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U2MulU4 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Div_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2DivU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Rem_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2RemU4 = <<A as Rem<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2RemU4 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2PowU4 = <<A as Pow<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U2PowU4 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_4() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitAnd_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2BitAndU5 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2BitAndU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitOr_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2BitOrU5 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U2BitOrU5 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_BitXor_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2BitXorU5 = <<A as BitXor<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U2BitXorU5 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shl_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2ShlU5 = <<A as Shl<B>>::Output as Same<U64>>::Output;

    assert_eq!(<U2ShlU5 as Unsigned>::to_u64(), <U64 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Shr_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Add_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U2AddU5 = <<A as Add<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U2AddU5 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Min_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MinU5 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2MinU5 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Max_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U2MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U2MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Gcd_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U2GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U2GcdU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Mul_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2MulU5 = <<A as Mul<B>>::Output as Same<U10>>::Output;

    assert_eq!(<U2MulU5 as Unsigned>::to_u64(), <U10 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Div_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U2DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U2DivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Rem_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U2RemU5 = <<A as Rem<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U2RemU5 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Pow_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U2PowU5 = <<A as Pow<B>>::Output as Same<U32>>::Output;

    assert_eq!(<U2PowU5 as Unsigned>::to_u64(), <U32 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_2_Cmp_5() {
    type A = UInt<UInt<UTerm, B1>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U2CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U2CmpU5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU0 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitOrU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitXorU0 = <<A as BitXor<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitXorU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3ShlU0 = <<A as Shl<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3ShlU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3ShrU0 = <<A as Shr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3ShrU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3AddU0 = <<A as Add<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3AddU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MaxU0 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MaxU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU0 = <<A as Gcd<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3GcdU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Sub_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3SubU0 = <<A as Sub<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3SubU0 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_0() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U3CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3BitAndU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU1 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitOrU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3BitXorU1 = <<A as BitXor<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U3BitXorU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3ShlU1 = <<A as Shl<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U3ShlU1 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3ShrU1 = <<A as Shr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3ShrU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3AddU1 = <<A as Add<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U3AddU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3MinU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MaxU1 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MaxU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Sub_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3SubU1 = <<A as Sub<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U3SubU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MulU1 = <<A as Mul<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MulU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Div_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3DivU1 = <<A as Div<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3DivU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Rem_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_PartialDiv_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3PartialDivU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU1 = <<A as Pow<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3PowU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_1() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3BitAndU2 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U3BitAndU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU2 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitOrU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3BitXorU2 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3BitXorU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3ShlU2 = <<A as Shl<B>>::Output as Same<U12>>::Output;

    assert_eq!(<U3ShlU2 as Unsigned>::to_u64(), <U12 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3ShrU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3AddU2 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U3AddU2 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U3MinU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MaxU2 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MaxU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3GcdU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Sub_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3SubU2 = <<A as Sub<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3SubU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3MulU2 = <<A as Mul<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U3MulU2 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Div_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3DivU2 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3DivU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Rem_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3RemU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU2 = <<A as Pow<B>>::Output as Same<U9>>::Output;

    assert_eq!(<U3PowU2 as Unsigned>::to_u64(), <U9 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_2() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitAndU3 = <<A as BitAnd<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitAndU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3BitOrU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3BitXorU3 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3BitXorU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U24 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3ShlU3 = <<A as Shl<B>>::Output as Same<U24>>::Output;

    assert_eq!(<U3ShlU3 as Unsigned>::to_u64(), <U24 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3AddU3 = <<A as Add<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U3AddU3 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MinU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MaxU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU3 = <<A as Gcd<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3GcdU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Sub_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3SubU3 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3SubU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3MulU3 = <<A as Mul<B>>::Output as Same<U9>>::Output;

    assert_eq!(<U3MulU3 as Unsigned>::to_u64(), <U9 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Div_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3DivU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Rem_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3RemU3 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3RemU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_PartialDiv_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3PartialDivU3 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3PartialDivU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U27 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU3 = <<A as Pow<B>>::Output as Same<U27>>::Output;

    assert_eq!(<U3PowU3 as Unsigned>::to_u64(), <U27 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_3() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU3 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3BitAndU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU4 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U3BitOrU4 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitXorU4 = <<A as BitXor<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U3BitXorU4 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U48 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3ShlU4 = <<A as Shl<B>>::Output as Same<U48>>::Output;

    assert_eq!(<U3ShlU4 as Unsigned>::to_u64(), <U48 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3AddU4 = <<A as Add<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U3AddU4 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MinU4 = <<A as Min<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MinU4 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U3MaxU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3GcdU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3MulU4 = <<A as Mul<B>>::Output as Same<U12>>::Output;

    assert_eq!(<U3MulU4 as Unsigned>::to_u64(), <U12 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Div_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3DivU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Rem_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3RemU4 = <<A as Rem<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3RemU4 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U81 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU4 = <<A as Pow<B>>::Output as Same<U81>>::Output;

    assert_eq!(<U3PowU4 as Unsigned>::to_u64(), <U81 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_4() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitAnd_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3BitAndU5 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3BitAndU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitOr_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3BitOrU5 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U3BitOrU5 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_BitXor_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U3BitXorU5 = <<A as BitXor<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U3BitXorU5 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shl_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U96 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3ShlU5 = <<A as Shl<B>>::Output as Same<U96>>::Output;

    assert_eq!(<U3ShlU5 as Unsigned>::to_u64(), <U96 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Shr_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Add_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U3AddU5 = <<A as Add<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U3AddU5 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Min_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MinU5 = <<A as Min<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3MinU5 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Max_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U3MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Gcd_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U3GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U3GcdU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Mul_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U15 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3MulU5 = <<A as Mul<B>>::Output as Same<U15>>::Output;

    assert_eq!(<U3MulU5 as Unsigned>::to_u64(), <U15 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Div_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U3DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U3DivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Rem_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3RemU5 = <<A as Rem<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U3RemU5 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Pow_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U243 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U3PowU5 = <<A as Pow<B>>::Output as Same<U243>>::Output;

    assert_eq!(<U3PowU5 as Unsigned>::to_u64(), <U243 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_3_Cmp_5() {
    type A = UInt<UInt<UTerm, B1>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U3CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U3CmpU5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitOrU0 = <<A as BitOr<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4BitOrU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitXorU0 = <<A as BitXor<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4BitXorU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU0 = <<A as Shl<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4ShlU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShrU0 = <<A as Shr<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4ShrU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4AddU0 = <<A as Add<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4AddU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MaxU0 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MaxU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4GcdU0 = <<A as Gcd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4GcdU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Sub_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4SubU0 = <<A as Sub<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4SubU0 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U4CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4BitAndU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4BitOrU1 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U4BitOrU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4BitXorU1 = <<A as BitXor<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U4BitXorU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU1 = <<A as Shl<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U4ShlU1 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShrU1 = <<A as Shr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4ShrU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4AddU1 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U4AddU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4MinU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MaxU1 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MaxU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Sub_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4SubU1 = <<A as Sub<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U4SubU1 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MulU1 = <<A as Mul<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MulU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Div_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4DivU1 = <<A as Div<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4DivU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Rem_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_PartialDiv_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4PartialDivU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PowU1 = <<A as Pow<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4PowU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4BitAndU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitOrU2 = <<A as BitOr<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U4BitOrU2 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitXorU2 = <<A as BitXor<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U4BitXorU2 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU2 = <<A as Shl<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U4ShlU2 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4ShrU2 = <<A as Shr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4ShrU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4AddU2 = <<A as Add<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U4AddU2 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4MinU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MaxU2 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MaxU2 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4GcdU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Sub_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4SubU2 = <<A as Sub<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4SubU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MulU2 = <<A as Mul<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U4MulU2 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Div_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4DivU2 = <<A as Div<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4DivU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Rem_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4RemU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_PartialDiv_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U4PartialDivU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PowU2 = <<A as Pow<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U4PowU2 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U4CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4BitAndU3 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4BitAndU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4BitOrU3 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U4BitOrU3 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4BitXorU3 = <<A as BitXor<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U4BitXorU3 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU3 = <<A as Shl<B>>::Output as Same<U32>>::Output;

    assert_eq!(<U4ShlU3 as Unsigned>::to_u64(), <U32 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4AddU3 = <<A as Add<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U4AddU3 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U4MinU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MaxU3 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MaxU3 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4GcdU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Sub_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4SubU3 = <<A as Sub<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4SubU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MulU3 = <<A as Mul<B>>::Output as Same<U12>>::Output;

    assert_eq!(<U4MulU3 as Unsigned>::to_u64(), <U12 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Div_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4DivU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Rem_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4RemU3 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4RemU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PowU3 = <<A as Pow<B>>::Output as Same<U64>>::Output;

    assert_eq!(<U4PowU3 as Unsigned>::to_u64(), <U64 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U4CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitAndU4 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4BitAndU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitOrU4 = <<A as BitOr<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4BitOrU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4BitXorU4 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4BitXorU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU4 = <<A as Shl<B>>::Output as Same<U64>>::Output;

    assert_eq!(<U4ShlU4 as Unsigned>::to_u64(), <U64 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4AddU4 = <<A as Add<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U4AddU4 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MinU4 = <<A as Min<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MinU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MaxU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4GcdU4 = <<A as Gcd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4GcdU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Sub_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4SubU4 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4SubU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MulU4 = <<A as Mul<B>>::Output as Same<U16>>::Output;

    assert_eq!(<U4MulU4 as Unsigned>::to_u64(), <U16 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Div_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4DivU4 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4DivU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Rem_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4RemU4 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4RemU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_PartialDiv_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4PartialDivU4 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4PartialDivU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U256 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PowU4 = <<A as Pow<B>>::Output as Same<U256>>::Output;

    assert_eq!(<U4PowU4 as Unsigned>::to_u64(), <U256 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU4 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitAnd_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4BitAndU5 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4BitAndU5 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitOr_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U4BitOrU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_BitXor_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4BitXorU5 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4BitXorU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shl_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U128 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4ShlU5 = <<A as Shl<B>>::Output as Same<U128>>::Output;

    assert_eq!(<U4ShlU5 as Unsigned>::to_u64(), <U128 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Shr_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Add_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4AddU5 = <<A as Add<B>>::Output as Same<U9>>::Output;

    assert_eq!(<U4AddU5 as Unsigned>::to_u64(), <U9 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Min_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MinU5 = <<A as Min<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4MinU5 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Max_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U4MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Gcd_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U4GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U4GcdU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Mul_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4MulU5 = <<A as Mul<B>>::Output as Same<U20>>::Output;

    assert_eq!(<U4MulU5 as Unsigned>::to_u64(), <U20 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Div_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U4DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U4DivU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Rem_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4RemU5 = <<A as Rem<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U4RemU5 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Pow_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1024 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U4PowU5 = <<A as Pow<B>>::Output as Same<U1024>>::Output;

    assert_eq!(<U4PowU5 as Unsigned>::to_u64(), <U1024 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_4_Cmp_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U4CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U4CmpU5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5BitAndU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU0 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitOrU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitXorU0 = <<A as BitXor<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitXorU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5ShlU0 = <<A as Shl<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5ShlU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5ShrU0 = <<A as Shr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5ShrU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5AddU0 = <<A as Add<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5AddU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5MinU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU0 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU0 = <<A as Gcd<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5GcdU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5SubU0 = <<A as Sub<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5SubU0 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5MulU0 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5PowU0 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_0() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UTerm;

    #[allow(non_camel_case_types)]
    type U5CmpU0 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5BitAndU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU1 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitOrU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5BitXorU1 = <<A as BitXor<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U5BitXorU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShlU1 = <<A as Shl<B>>::Output as Same<U10>>::Output;

    assert_eq!(<U5ShlU1 as Unsigned>::to_u64(), <U10 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShrU1 = <<A as Shr<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U5ShrU1 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5AddU1 = <<A as Add<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U5AddU1 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5MinU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU1 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5GcdU1 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5SubU1 = <<A as Sub<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U5SubU1 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MulU1 = <<A as Mul<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MulU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Div_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5DivU1 = <<A as Div<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5DivU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Rem_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5RemU1 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_PartialDiv_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5PartialDivU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU1 = <<A as Pow<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5PowU1 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_1() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5CmpU1 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5BitAndU2 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU2 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U5BitOrU2 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitXorU2 = <<A as BitXor<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U5BitXorU2 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShlU2 = <<A as Shl<B>>::Output as Same<U20>>::Output;

    assert_eq!(<U5ShlU2 as Unsigned>::to_u64(), <U20 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5ShrU2 = <<A as Shr<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5ShrU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5AddU2 = <<A as Add<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U5AddU2 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U5MinU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU2 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU2 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5GcdU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5SubU2 = <<A as Sub<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U5SubU2 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5MulU2 = <<A as Mul<B>>::Output as Same<U10>>::Output;

    assert_eq!(<U5MulU2 as Unsigned>::to_u64(), <U10 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Div_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5DivU2 = <<A as Div<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U5DivU2 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Rem_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5RemU2 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;
    type U25 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU2 = <<A as Pow<B>>::Output as Same<U25>>::Output;

    assert_eq!(<U5PowU2 as Unsigned>::to_u64(), <U25 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_2() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5CmpU2 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5BitAndU3 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5BitAndU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU3 = <<A as BitOr<B>>::Output as Same<U7>>::Output;

    assert_eq!(<U5BitOrU3 as Unsigned>::to_u64(), <U7 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5BitXorU3 = <<A as BitXor<B>>::Output as Same<U6>>::Output;

    assert_eq!(<U5BitXorU3 as Unsigned>::to_u64(), <U6 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U40 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShlU3 = <<A as Shl<B>>::Output as Same<U40>>::Output;

    assert_eq!(<U5ShlU3 as Unsigned>::to_u64(), <U40 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5ShrU3 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5AddU3 = <<A as Add<B>>::Output as Same<U8>>::Output;

    assert_eq!(<U5AddU3 as Unsigned>::to_u64(), <U8 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U3 = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;

    assert_eq!(<U5MinU3 as Unsigned>::to_u64(), <U3 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU3 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU3 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5GcdU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5SubU3 = <<A as Sub<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U5SubU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U15 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5MulU3 = <<A as Mul<B>>::Output as Same<U15>>::Output;

    assert_eq!(<U5MulU3 as Unsigned>::to_u64(), <U15 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Div_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5DivU3 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Rem_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U2 = UInt<UInt<UTerm, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5RemU3 = <<A as Rem<B>>::Output as Same<U2>>::Output;

    assert_eq!(<U5RemU3 as Unsigned>::to_u64(), <U2 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;
    type U125 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU3 = <<A as Pow<B>>::Output as Same<U125>>::Output;

    assert_eq!(<U5PowU3 as Unsigned>::to_u64(), <U125 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_3() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UTerm, B1>, B1>;

    #[allow(non_camel_case_types)]
    type U5CmpU3 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5BitAndU4 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U5BitAndU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU4 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitOrU4 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5BitXorU4 = <<A as BitXor<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5BitXorU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U80 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShlU4 = <<A as Shl<B>>::Output as Same<U80>>::Output;

    assert_eq!(<U5ShlU4 as Unsigned>::to_u64(), <U80 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5ShrU4 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5AddU4 = <<A as Add<B>>::Output as Same<U9>>::Output;

    assert_eq!(<U5AddU4 as Unsigned>::to_u64(), <U9 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5MinU4 = <<A as Min<B>>::Output as Same<U4>>::Output;

    assert_eq!(<U5MinU4 as Unsigned>::to_u64(), <U4 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU4 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU4 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5GcdU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5SubU4 = <<A as Sub<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5SubU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5MulU4 = <<A as Mul<B>>::Output as Same<U20>>::Output;

    assert_eq!(<U5MulU4 as Unsigned>::to_u64(), <U20 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Div_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5DivU4 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5DivU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Rem_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5RemU4 = <<A as Rem<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5RemU4 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;
    type U625 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU4 = <<A as Pow<B>>::Output as Same<U625>>::Output;

    assert_eq!(<U5PowU4 as Unsigned>::to_u64(), <U625 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_4() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5CmpU4 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitAnd_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitAndU5 = <<A as BitAnd<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitAndU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitOr_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5BitOrU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_BitXor_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5BitXorU5 = <<A as BitXor<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5BitXorU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shl_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U160 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>, B0>;

    #[allow(non_camel_case_types)]
    type U5ShlU5 = <<A as Shl<B>>::Output as Same<U160>>::Output;

    assert_eq!(<U5ShlU5 as Unsigned>::to_u64(), <U160 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Shr_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5ShrU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Add_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;

    #[allow(non_camel_case_types)]
    type U5AddU5 = <<A as Add<B>>::Output as Same<U10>>::Output;

    assert_eq!(<U5AddU5 as Unsigned>::to_u64(), <U10 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Min_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MinU5 = <<A as Min<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MinU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Max_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5MaxU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Gcd_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5GcdU5 = <<A as Gcd<B>>::Output as Same<U5>>::Output;

    assert_eq!(<U5GcdU5 as Unsigned>::to_u64(), <U5 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Sub_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5SubU5 = <<A as Sub<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5SubU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Mul_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U25 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5MulU5 = <<A as Mul<B>>::Output as Same<U25>>::Output;

    assert_eq!(<U5MulU5 as Unsigned>::to_u64(), <U25 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Div_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5DivU5 = <<A as Div<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5DivU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Rem_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U0 = UTerm;

    #[allow(non_camel_case_types)]
    type U5RemU5 = <<A as Rem<B>>::Output as Same<U0>>::Output;

    assert_eq!(<U5RemU5 as Unsigned>::to_u64(), <U0 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_PartialDiv_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U1 = UInt<UTerm, B1>;

    #[allow(non_camel_case_types)]
    type U5PartialDivU5 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;

    assert_eq!(<U5PartialDivU5 as Unsigned>::to_u64(), <U1 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Pow_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type U3125 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5PowU5 = <<A as Pow<B>>::Output as Same<U3125>>::Output;

    assert_eq!(<U5PowU5 as Unsigned>::to_u64(), <U3125 as Unsigned>::to_u64());
}
#[test]
#[allow(non_snake_case)]
fn test_5_Cmp_5() {
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;

    #[allow(non_camel_case_types)]
    type U5CmpU5 = <A as Cmp<B>>::Output;
    assert_eq!(<U5CmpU5 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5AddN5 = <<A as Add<B>>::Output as Same<N10>>::Output;

    assert_eq!(<N5AddN5 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5SubN5 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5SubN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulN5 = <<A as Mul<B>>::Output as Same<P25>>::Output;

    assert_eq!(<N5MulN5 as Integer>::to_i64(), <P25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxN5 = <<A as Max<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MaxN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5GcdN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivN5 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5DivN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5RemN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_PartialDiv_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5PartialDivN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpN5 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5AddN4 = <<A as Add<B>>::Output as Same<N9>>::Output;

    assert_eq!(<N5AddN4 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5SubN4 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5SubN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MulN4 = <<A as Mul<B>>::Output as Same<P20>>::Output;

    assert_eq!(<N5MulN4 as Integer>::to_i64(), <P20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinN4 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinN4 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MaxN4 = <<A as Max<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N5MaxN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivN4 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5DivN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5RemN4 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5RemN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpN4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5AddN3 = <<A as Add<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N5AddN3 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5SubN3 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5SubN3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulN3 = <<A as Mul<B>>::Output as Same<P15>>::Output;

    assert_eq!(<N5MulN3 as Integer>::to_i64(), <P15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinN3 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinN3 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N5MaxN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5DivN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5RemN3 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5RemN3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpN3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5AddN2 = <<A as Add<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N5AddN2 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5SubN2 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N5SubN2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MulN2 = <<A as Mul<B>>::Output as Same<P10>>::Output;

    assert_eq!(<N5MulN2 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinN2 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinN2 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5MaxN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5DivN2 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N5DivN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5RemN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpN2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5AddN1 = <<A as Add<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N5AddN1 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5SubN1 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N5SubN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulN1 = <<A as Mul<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5MulN1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinN1 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinN1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5MaxN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivN1 = <<A as Div<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5DivN1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_PartialDiv_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5PartialDivN1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpN1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5Add_0 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5Add_0 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5Sub_0 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5Sub_0 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5Min_0 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5Min_0 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5Gcd_0 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5Gcd_0 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type N5Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<N5Cmp_0 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5AddP1 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N5AddP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5SubP1 = <<A as Sub<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N5SubP1 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulP1 = <<A as Mul<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MulP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinP1 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivP1 = <<A as Div<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5DivP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_PartialDiv_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5PartialDivP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PowP1 = <<A as Pow<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5PowP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5AddP2 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N5AddP2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5SubP2 = <<A as Sub<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N5SubP2 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MulP2 = <<A as Mul<B>>::Output as Same<N10>>::Output;

    assert_eq!(<N5MulP2 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinP2 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinP2 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N5MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5DivP2 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5DivP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5RemP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PowP2 = <<A as Pow<B>>::Output as Same<P25>>::Output;

    assert_eq!(<N5PowP2 as Integer>::to_i64(), <P25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5AddP3 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5AddP3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5SubP3 = <<A as Sub<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N5SubP3 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulP3 = <<A as Mul<B>>::Output as Same<N15>>::Output;

    assert_eq!(<N5MulP3 as Integer>::to_i64(), <N15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinP3 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinP3 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N5MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5DivP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5RemP3 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N5RemP3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N125 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PowP3 = <<A as Pow<B>>::Output as Same<N125>>::Output;

    assert_eq!(<N5PowP3 as Integer>::to_i64(), <N125 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5AddP4 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5AddP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5SubP4 = <<A as Sub<B>>::Output as Same<N9>>::Output;

    assert_eq!(<N5SubP4 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MulP4 = <<A as Mul<B>>::Output as Same<N20>>::Output;

    assert_eq!(<N5MulP4 as Integer>::to_i64(), <N20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinP4 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinP4 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N5MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N5GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivP4 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5DivP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5RemP4 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5RemP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P625 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PowP4 = <<A as Pow<B>>::Output as Same<P625>>::Output;

    assert_eq!(<N5PowP4 as Integer>::to_i64(), <P625 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N5CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Add_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5AddP5 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5AddP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Sub_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N5SubP5 = <<A as Sub<B>>::Output as Same<N10>>::Output;

    assert_eq!(<N5SubP5 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Mul_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N25 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MulP5 = <<A as Mul<B>>::Output as Same<N25>>::Output;

    assert_eq!(<N5MulP5 as Integer>::to_i64(), <N25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Min_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MinP5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N5MinP5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Max_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Gcd_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N5GcdP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Div_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5DivP5 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5DivP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Rem_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N5RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N5RemP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_PartialDiv_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N5PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N5PartialDivP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Pow_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3125 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5PowP5 = <<A as Pow<B>>::Output as Same<N3125>>::Output;

    assert_eq!(<N5PowP5 as Integer>::to_i64(), <N3125 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Cmp_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N5CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<N5CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddN5 = <<A as Add<B>>::Output as Same<N9>>::Output;

    assert_eq!(<N4AddN5 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubN5 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4SubN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulN5 = <<A as Mul<B>>::Output as Same<P20>>::Output;

    assert_eq!(<N4MulN5 as Integer>::to_i64(), <P20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N4MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MaxN5 = <<A as Max<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MaxN5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4RemN5 = <<A as Rem<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4RemN5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_N5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4AddN4 = <<A as Add<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N4AddN4 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4SubN4 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4SubN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulN4 = <<A as Mul<B>>::Output as Same<P16>>::Output;

    assert_eq!(<N4MulN4 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MaxN4 = <<A as Max<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MaxN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4GcdN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4DivN4 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4DivN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4PartialDivN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_N4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpN4 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddN3 = <<A as Add<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N4AddN3 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubN3 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4SubN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulN3 = <<A as Mul<B>>::Output as Same<P12>>::Output;

    assert_eq!(<N4MulN3 as Integer>::to_i64(), <P12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinN3 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinN3 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N4MaxN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4DivN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4RemN3 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4RemN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_N3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpN3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4AddN2 = <<A as Add<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N4AddN2 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4SubN2 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N4SubN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulN2 = <<A as Mul<B>>::Output as Same<P8>>::Output;

    assert_eq!(<N4MulN2 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinN2 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinN2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N4MaxN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N4GcdN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4DivN2 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N4DivN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N4PartialDivN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_N2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpN2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddN1 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N4AddN1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubN1 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N4SubN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulN1 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4MulN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinN1 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4MaxN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4DivN1 = <<A as Div<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4DivN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4PartialDivN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_N1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpN1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4Add_0 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4Add_0 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4Sub_0 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4Sub_0 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4Min_0 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4Min_0 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4Gcd_0 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4Gcd_0 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp__0() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type N4Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<N4Cmp_0 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddP1 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N4AddP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubP1 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N4SubP1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulP1 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MulP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinP1 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4DivP1 = <<A as Div<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4DivP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4PartialDivP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PowP1 = <<A as Pow<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4PowP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_P1() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4AddP2 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N4AddP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4SubP2 = <<A as Sub<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N4SubP2 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulP2 = <<A as Mul<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N4MulP2 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinP2 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinP2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N4MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N4GcdP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4DivP2 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N4DivP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N4PartialDivP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PowP2 = <<A as Pow<B>>::Output as Same<P16>>::Output;

    assert_eq!(<N4PowP2 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_P2() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N4CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddP3 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4AddP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubP3 = <<A as Sub<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N4SubP3 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulP3 = <<A as Mul<B>>::Output as Same<N12>>::Output;

    assert_eq!(<N4MulP3 as Integer>::to_i64(), <N12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinP3 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinP3 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N4MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4DivP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4RemP3 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4RemP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N64 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PowP3 = <<A as Pow<B>>::Output as Same<N64>>::Output;

    assert_eq!(<N4PowP3 as Integer>::to_i64(), <N64 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_P3() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4AddP4 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4AddP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4SubP4 = <<A as Sub<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N4SubP4 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N16 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulP4 = <<A as Mul<B>>::Output as Same<N16>>::Output;

    assert_eq!(<N4MulP4 as Integer>::to_i64(), <N16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinP4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinP4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N4GcdP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4DivP4 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4DivP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4RemP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_PartialDiv_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N4PartialDivP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P256 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PowP4 = <<A as Pow<B>>::Output as Same<P256>>::Output;

    assert_eq!(<N4PowP4 as Integer>::to_i64(), <P256 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_P4() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Add_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4AddP5 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4AddP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Sub_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4SubP5 = <<A as Sub<B>>::Output as Same<N9>>::Output;

    assert_eq!(<N4SubP5 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Mul_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MulP5 = <<A as Mul<B>>::Output as Same<N20>>::Output;

    assert_eq!(<N4MulP5 as Integer>::to_i64(), <N20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Min_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4MinP5 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4MinP5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Max_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N4MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Gcd_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N4GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N4GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Div_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N4DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N4DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Rem_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4RemP5 = <<A as Rem<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N4RemP5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Pow_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1024 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N4PowP5 = <<A as Pow<B>>::Output as Same<N1024>>::Output;

    assert_eq!(<N4PowP5 as Integer>::to_i64(), <N1024 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Cmp_P5() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N4CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<N4CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3AddN5 = <<A as Add<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N3AddN5 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3SubN5 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N3SubN5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulN5 = <<A as Mul<B>>::Output as Same<P15>>::Output;

    assert_eq!(<N3MulN5 as Integer>::to_i64(), <P15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N3MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxN5 = <<A as Max<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MaxN5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemN5 = <<A as Rem<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3RemN5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3AddN4 = <<A as Add<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N3AddN4 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3SubN4 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3SubN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MulN4 = <<A as Mul<B>>::Output as Same<P12>>::Output;

    assert_eq!(<N3MulN4 as Integer>::to_i64(), <P12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N3MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxN4 = <<A as Max<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MaxN4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemN4 = <<A as Rem<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3RemN4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3AddN3 = <<A as Add<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N3AddN3 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3SubN3 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3SubN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulN3 = <<A as Mul<B>>::Output as Same<P9>>::Output;

    assert_eq!(<N3MulN3 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MaxN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3GcdN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3DivN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3RemN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_PartialDiv_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3PartialDivN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpN3 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3AddN2 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N3AddN2 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3SubN2 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3SubN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MulN2 = <<A as Mul<B>>::Output as Same<P6>>::Output;

    assert_eq!(<N3MulN2 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinN2 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinN2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N3MaxN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivN2 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3DivN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3RemN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpN2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3AddN1 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N3AddN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3SubN1 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N3SubN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulN1 = <<A as Mul<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3MulN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinN1 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3MaxN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivN1 = <<A as Div<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3DivN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_PartialDiv_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3PartialDivN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpN1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3Add_0 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3Add_0 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3Sub_0 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3Sub_0 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3Min_0 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3Min_0 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3Gcd_0 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3Gcd_0 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type N3Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<N3Cmp_0 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3AddP1 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N3AddP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3SubP1 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N3SubP1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulP1 = <<A as Mul<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MulP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinP1 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivP1 = <<A as Div<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3DivP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_PartialDiv_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3PartialDivP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PowP1 = <<A as Pow<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3PowP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3AddP2 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3AddP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3SubP2 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N3SubP2 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MulP2 = <<A as Mul<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N3MulP2 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinP2 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinP2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N3MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivP2 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3DivP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3RemP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PowP2 = <<A as Pow<B>>::Output as Same<P9>>::Output;

    assert_eq!(<N3PowP2 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3AddP3 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3AddP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3SubP3 = <<A as Sub<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N3SubP3 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulP3 = <<A as Mul<B>>::Output as Same<N9>>::Output;

    assert_eq!(<N3MulP3 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinP3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinP3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N3GcdP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3DivP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3RemP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_PartialDiv_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N3PartialDivP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N27 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PowP3 = <<A as Pow<B>>::Output as Same<N27>>::Output;

    assert_eq!(<N3PowP3 as Integer>::to_i64(), <N27 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3AddP4 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3AddP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3SubP4 = <<A as Sub<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N3SubP4 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MulP4 = <<A as Mul<B>>::Output as Same<N12>>::Output;

    assert_eq!(<N3MulP4 as Integer>::to_i64(), <N12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinP4 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinP4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N3MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemP4 = <<A as Rem<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3RemP4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P81 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PowP4 = <<A as Pow<B>>::Output as Same<P81>>::Output;

    assert_eq!(<N3PowP4 as Integer>::to_i64(), <P81 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Add_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N3AddP5 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N3AddP5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Sub_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N3SubP5 = <<A as Sub<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N3SubP5 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Mul_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MulP5 = <<A as Mul<B>>::Output as Same<N15>>::Output;

    assert_eq!(<N3MulP5 as Integer>::to_i64(), <N15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Min_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MinP5 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3MinP5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Max_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N3MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Gcd_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N3GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N3GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Div_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N3DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N3DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Rem_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3RemP5 = <<A as Rem<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N3RemP5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Pow_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N243 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N3PowP5 = <<A as Pow<B>>::Output as Same<N243>>::Output;

    assert_eq!(<N3PowP5 as Integer>::to_i64(), <N243 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Cmp_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N3CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<N3CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddN5 = <<A as Add<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N2AddN5 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubN5 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N2SubN5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulN5 = <<A as Mul<B>>::Output as Same<P10>>::Output;

    assert_eq!(<N2MulN5 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N2MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxN5 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MaxN5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemN5 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemN5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_N5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2AddN4 = <<A as Add<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N2AddN4 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2SubN4 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2SubN4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulN4 = <<A as Mul<B>>::Output as Same<P8>>::Output;

    assert_eq!(<N2MulN4 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N2MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxN4 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MaxN4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2GcdN4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2GcdN4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemN4 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemN4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_N4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddN3 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N2AddN3 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubN3 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2SubN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulN3 = <<A as Mul<B>>::Output as Same<P6>>::Output;

    assert_eq!(<N2MulN3 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N2MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxN3 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MaxN3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemN3 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemN3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_N3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2AddN2 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N2AddN2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2SubN2 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2SubN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulN2 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N2MulN2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MaxN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2GcdN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2DivN2 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2DivN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2RemN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_PartialDiv_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2PartialDivN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_N2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpN2 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddN1 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N2AddN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubN1 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N2SubN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulN1 = <<A as Mul<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2MulN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinN1 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N2MaxN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2DivN1 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2DivN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_PartialDiv_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2PartialDivN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_N1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpN1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2Add_0 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2Add_0 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2Sub_0 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2Sub_0 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2Min_0 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2Min_0 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2Gcd_0 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2Gcd_0 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp__0() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type N2Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<N2Cmp_0 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddP1 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N2AddP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubP1 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N2SubP1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulP1 = <<A as Mul<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MulP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinP1 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2DivP1 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2DivP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_PartialDiv_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2PartialDivP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PowP1 = <<A as Pow<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2PowP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_P1() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2AddP2 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2AddP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2SubP2 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N2SubP2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulP2 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N2MulP2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinP2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2GcdP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2DivP2 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N2DivP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2RemP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_PartialDiv_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N2PartialDivP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PowP2 = <<A as Pow<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N2PowP2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_P2() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddP3 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2AddP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubP3 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N2SubP3 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulP3 = <<A as Mul<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N2MulP3 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinP3 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinP3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N2MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemP3 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemP3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PowP3 = <<A as Pow<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N2PowP3 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_P3() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2AddP4 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2AddP4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2SubP4 = <<A as Sub<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N2SubP4 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulP4 = <<A as Mul<B>>::Output as Same<N8>>::Output;

    assert_eq!(<N2MulP4 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinP4 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinP4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N2MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2GcdP4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N2GcdP4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemP4 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemP4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PowP4 = <<A as Pow<B>>::Output as Same<P16>>::Output;

    assert_eq!(<N2PowP4 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_P4() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Add_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2AddP5 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N2AddP5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Sub_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N2SubP5 = <<A as Sub<B>>::Output as Same<N7>>::Output;

    assert_eq!(<N2SubP5 as Integer>::to_i64(), <N7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Mul_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MulP5 = <<A as Mul<B>>::Output as Same<N10>>::Output;

    assert_eq!(<N2MulP5 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Min_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2MinP5 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2MinP5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Max_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N2MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Gcd_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N2GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N2GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Div_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N2DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N2DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Rem_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N2RemP5 = <<A as Rem<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N2RemP5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Pow_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N32 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N2PowP5 = <<A as Pow<B>>::Output as Same<N32>>::Output;

    assert_eq!(<N2PowP5 as Integer>::to_i64(), <N32 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Cmp_P5() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N2CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<N2CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1AddN5 = <<A as Add<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N1AddN5 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1SubN5 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N1SubN5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulN5 = <<A as Mul<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N1MulN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N1MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxN5 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MaxN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemN5 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowN5 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_N5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1AddN4 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N1AddN4 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1SubN4 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N1SubN4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MulN4 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N1MulN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N1MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxN4 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MaxN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemN4 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowN4 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1PowN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_N4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1AddN3 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N1AddN3 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1SubN3 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N1SubN3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulN3 = <<A as Mul<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N1MulN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N1MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxN3 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MaxN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemN3 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowN3 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_N3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1AddN2 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N1AddN2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1SubN2 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1SubN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MulN2 = <<A as Mul<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N1MulN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N1MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxN2 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MaxN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowN2 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1PowN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_N2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1AddN1 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N1AddN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1SubN1 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1SubN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulN1 = <<A as Mul<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1MulN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MaxN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1DivN1 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1DivN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_PartialDiv_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1PartialDivN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowN1 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_N1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpN1 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1Add_0 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1Add_0 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1Sub_0 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1Sub_0 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1Min_0 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1Min_0 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1Gcd_0 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1Gcd_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp__0() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type N1Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<N1Cmp_0 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1AddP1 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1AddP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1SubP1 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N1SubP1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulP1 = <<A as Mul<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MulP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinP1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1DivP1 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1DivP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_PartialDiv_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PartialDivP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowP1 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_P1() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1AddP2 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1AddP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1SubP2 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N1SubP2 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MulP2 = <<A as Mul<B>>::Output as Same<N2>>::Output;

    assert_eq!(<N1MulP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinP2 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N1MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowP2 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1PowP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_P2() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1AddP3 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<N1AddP3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1SubP3 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N1SubP3 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulP3 = <<A as Mul<B>>::Output as Same<N3>>::Output;

    assert_eq!(<N1MulP3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinP3 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N1MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemP3 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowP3 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_P3() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type N1AddP4 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<N1AddP4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1SubP4 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N1SubP4 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MulP4 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<N1MulP4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinP4 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N1MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemP4 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowP4 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1PowP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_P4() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Add_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type N1AddP5 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<N1AddP5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Sub_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type N1SubP5 = <<A as Sub<B>>::Output as Same<N6>>::Output;

    assert_eq!(<N1SubP5 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Mul_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MulP5 = <<A as Mul<B>>::Output as Same<N5>>::Output;

    assert_eq!(<N1MulP5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Min_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1MinP5 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1MinP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Max_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<N1MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Gcd_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<N1GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Div_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type N1DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<N1DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Rem_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1RemP5 = <<A as Rem<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1RemP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Pow_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type N1PowP5 = <<A as Pow<B>>::Output as Same<N1>>::Output;

    assert_eq!(<N1PowP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Cmp_P5() {
    type A = NInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type N1CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<N1CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddN5 = <<A as Add<B>>::Output as Same<N5>>::Output;

    assert_eq!(<_0AddN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubN5 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<_0SubN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulN5 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<_0MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MaxN5 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MaxN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<_0GcdN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_N5() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0AddN4 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<_0AddN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0SubN4 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<_0SubN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulN4 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<_0MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MaxN4 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MaxN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<_0GcdN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_N4() {
    type A = Z0;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddN3 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<_0AddN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubN3 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<_0SubN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulN3 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<_0MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MaxN3 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MaxN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<_0GcdN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_N3() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0AddN2 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<_0AddN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0SubN2 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<_0SubN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulN2 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<_0MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MaxN2 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MaxN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<_0GcdN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_N2() {
    type A = Z0;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddN1 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<_0AddN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubN1 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0SubN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulN1 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<_0MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MaxN1 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MaxN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivN1 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_N1() {
    type A = Z0;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Add_0 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Add_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Sub_0 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Sub_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Max_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd__0() {
    type A = Z0;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0Gcd_0 = <<A as Gcd<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0Gcd_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow__0() {
    type A = Z0;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp__0() {
    type A = Z0;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type _0Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<_0Cmp_0 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddP1 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0AddP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubP1 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<_0SubP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulP1 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MinP1 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MinP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<_0GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivP1 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PowP1 = <<A as Pow<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PowP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_P1() {
    type A = Z0;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpP1 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0AddP2 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<_0AddP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0SubP2 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<_0SubP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulP2 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MinP2 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MinP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<_0MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<_0GcdP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PowP2 = <<A as Pow<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PowP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_P2() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type _0CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddP3 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<_0AddP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubP3 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<_0SubP3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulP3 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MinP3 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MinP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<_0MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<_0GcdP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PowP3 = <<A as Pow<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PowP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_P3() {
    type A = Z0;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0AddP4 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<_0AddP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0SubP4 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<_0SubP4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulP4 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MinP4 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MinP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<_0MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<_0GcdP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PowP4 = <<A as Pow<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PowP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_P4() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type _0CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test__0_Add_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0AddP5 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<_0AddP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Sub_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0SubP5 = <<A as Sub<B>>::Output as Same<N5>>::Output;

    assert_eq!(<_0SubP5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Mul_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MulP5 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MulP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Min_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0MinP5 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0MinP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Max_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<_0MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Gcd_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<_0GcdP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Div_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Rem_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0RemP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_PartialDiv_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PartialDivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Pow_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type _0PowP5 = <<A as Pow<B>>::Output as Same<_0>>::Output;

    assert_eq!(<_0PowP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Cmp_P5() {
    type A = Z0;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type _0CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<_0CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1AddN5 = <<A as Add<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P1AddN5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1SubN5 = <<A as Sub<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P1SubN5 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulN5 = <<A as Mul<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P1MulN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P1MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxN5 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemN5 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowN5 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_N5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1AddN4 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P1AddN4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1SubN4 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P1SubN4 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MulN4 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P1MulN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P1MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxN4 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemN4 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowN4 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_N4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1AddN3 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P1AddN3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1SubN3 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P1SubN3 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulN3 = <<A as Mul<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P1MulN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P1MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxN3 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemN3 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowN3 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_N3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1AddN2 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1AddN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1SubN2 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P1SubN2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MulN2 = <<A as Mul<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P1MulN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P1MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxN2 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowN2 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_N2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1AddN1 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1AddN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1SubN1 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P1SubN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulN1 = <<A as Mul<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1MulN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxN1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1DivN1 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1DivN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_PartialDiv_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1PartialDivN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowN1 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_N1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1Add_0 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1Add_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1Sub_0 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1Sub_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1Max_0 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1Max_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1Gcd_0 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1Gcd_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp__0() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type P1Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<P1Cmp_0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1AddP1 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P1AddP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1SubP1 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1SubP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulP1 = <<A as Mul<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MulP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MinP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MaxP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1DivP1 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1DivP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_PartialDiv_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PartialDivP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowP1 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_P1() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpP1 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1AddP2 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P1AddP2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1SubP2 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P1SubP2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MulP2 = <<A as Mul<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P1MulP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinP2 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MinP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P1MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowP2 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_P2() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpP2 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1AddP3 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P1AddP3 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1SubP3 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P1SubP3 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulP3 = <<A as Mul<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P1MulP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinP3 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MinP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P1MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemP3 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowP3 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_P3() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1AddP4 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P1AddP4 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P1SubP4 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P1SubP4 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MulP4 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P1MulP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinP4 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MinP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P1MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemP4 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowP4 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_P4() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Add_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P1AddP5 = <<A as Add<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P1AddP5 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Sub_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P1SubP5 = <<A as Sub<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P1SubP5 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Mul_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MulP5 = <<A as Mul<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P1MulP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Min_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1MinP5 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1MinP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Max_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P1MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Gcd_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Div_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P1DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P1DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Rem_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1RemP5 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1RemP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Pow_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P1PowP5 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P1PowP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Cmp_P5() {
    type A = PInt<UInt<UTerm, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P1CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<P1CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddN5 = <<A as Add<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P2AddN5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubN5 = <<A as Sub<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P2SubN5 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulN5 = <<A as Mul<B>>::Output as Same<N10>>::Output;

    assert_eq!(<P2MulN5 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P2MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxN5 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxN5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemN5 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemN5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2AddN4 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2AddN4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2SubN4 = <<A as Sub<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P2SubN4 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulN4 = <<A as Mul<B>>::Output as Same<N8>>::Output;

    assert_eq!(<P2MulN4 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P2MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxN4 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxN4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2GcdN4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2GcdN4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemN4 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemN4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddN3 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P2AddN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubN3 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P2SubN3 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulN3 = <<A as Mul<B>>::Output as Same<N6>>::Output;

    assert_eq!(<P2MulN3 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P2MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxN3 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxN3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemN3 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemN3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2AddN2 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2AddN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2SubN2 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P2SubN2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulN2 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P2MulN2 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxN2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2GcdN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2DivN2 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P2DivN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2RemN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_PartialDiv_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P2PartialDivN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddN1 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2AddN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubN1 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P2SubN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulN1 = <<A as Mul<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2MulN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P2MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxN1 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2DivN1 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2DivN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_PartialDiv_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2PartialDivN1 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2Add_0 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2Add_0 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2Sub_0 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2Sub_0 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2Max_0 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2Max_0 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2Gcd_0 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2Gcd_0 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type P2Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<P2Cmp_0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddP1 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P2AddP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubP1 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2SubP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulP1 = <<A as Mul<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MulP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2MinP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxP1 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2DivP1 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2DivP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_PartialDiv_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2PartialDivP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PowP1 = <<A as Pow<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2PowP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpP1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2AddP2 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P2AddP2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2SubP2 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2SubP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulP2 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P2MulP2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MinP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MaxP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2GcdP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2DivP2 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2DivP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2RemP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_PartialDiv_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2PartialDivP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PowP2 = <<A as Pow<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P2PowP2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpP2 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddP3 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P2AddP3 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubP3 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P2SubP3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulP3 = <<A as Mul<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P2MulP3 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinP3 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MinP3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P2MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemP3 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemP3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PowP3 = <<A as Pow<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P2PowP3 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpP3 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2AddP4 = <<A as Add<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P2AddP4 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2SubP4 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P2SubP4 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulP4 = <<A as Mul<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P2MulP4 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinP4 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MinP4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P2MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2GcdP4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2GcdP4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemP4 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemP4 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PowP4 = <<A as Pow<B>>::Output as Same<P16>>::Output;

    assert_eq!(<P2PowP4 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Add_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2AddP5 = <<A as Add<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P2AddP5 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Sub_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P2SubP5 = <<A as Sub<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P2SubP5 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Mul_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MulP5 = <<A as Mul<B>>::Output as Same<P10>>::Output;

    assert_eq!(<P2MulP5 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Min_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2MinP5 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2MinP5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Max_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P2MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Gcd_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P2GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P2GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Div_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P2DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P2DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Rem_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P2RemP5 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P2RemP5 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Pow_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P32 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P2PowP5 = <<A as Pow<B>>::Output as Same<P32>>::Output;

    assert_eq!(<P2PowP5 as Integer>::to_i64(), <P32 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Cmp_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P2CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<P2CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3AddN5 = <<A as Add<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P3AddN5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3SubN5 = <<A as Sub<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P3SubN5 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulN5 = <<A as Mul<B>>::Output as Same<N15>>::Output;

    assert_eq!(<P3MulN5 as Integer>::to_i64(), <N15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P3MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxN5 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxN5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemN5 = <<A as Rem<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3RemN5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_N5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3AddN4 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3AddN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3SubN4 = <<A as Sub<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P3SubN4 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MulN4 = <<A as Mul<B>>::Output as Same<N12>>::Output;

    assert_eq!(<P3MulN4 as Integer>::to_i64(), <N12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P3MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxN4 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxN4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3DivN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemN4 = <<A as Rem<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3RemN4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_N4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3AddN3 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3AddN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3SubN3 = <<A as Sub<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P3SubN3 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulN3 = <<A as Mul<B>>::Output as Same<N9>>::Output;

    assert_eq!(<P3MulN3 as Integer>::to_i64(), <N9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P3MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxN3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3GcdN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3DivN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3RemN3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_PartialDiv_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3PartialDivN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_N3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3AddN2 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3AddN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3SubN2 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P3SubN2 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MulN2 = <<A as Mul<B>>::Output as Same<N6>>::Output;

    assert_eq!(<P3MulN2 as Integer>::to_i64(), <N6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P3MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxN2 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxN2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivN2 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3DivN2 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3RemN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_N2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3AddN1 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P3AddN1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3SubN1 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P3SubN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulN1 = <<A as Mul<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P3MulN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxN1 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivN1 = <<A as Div<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P3DivN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_PartialDiv_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P3PartialDivN1 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_N1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3Add_0 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3Add_0 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3Sub_0 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3Sub_0 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3Max_0 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3Max_0 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3Gcd_0 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3Gcd_0 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp__0() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type P3Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<P3Cmp_0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3AddP1 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P3AddP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3SubP1 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P3SubP1 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulP1 = <<A as Mul<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MulP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3MinP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxP1 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivP1 = <<A as Div<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3DivP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_PartialDiv_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3PartialDivP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PowP1 = <<A as Pow<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3PowP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_P1() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpP1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3AddP2 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P3AddP2 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3SubP2 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3SubP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MulP2 = <<A as Mul<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P3MulP2 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P3MinP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxP2 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxP2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivP2 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3DivP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3RemP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PowP2 = <<A as Pow<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P3PowP2 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_P2() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpP2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3AddP3 = <<A as Add<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P3AddP3 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3SubP3 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3SubP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulP3 = <<A as Mul<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P3MulP3 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MinP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MaxP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3GcdP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3DivP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3RemP3 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_PartialDiv_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3PartialDivP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P27 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PowP3 = <<A as Pow<B>>::Output as Same<P27>>::Output;

    assert_eq!(<P3PowP3 as Integer>::to_i64(), <P27 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_P3() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpP3 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3AddP4 = <<A as Add<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P3AddP4 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3SubP4 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P3SubP4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MulP4 = <<A as Mul<B>>::Output as Same<P12>>::Output;

    assert_eq!(<P3MulP4 as Integer>::to_i64(), <P12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinP4 = <<A as Min<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MinP4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P3MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3DivP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemP4 = <<A as Rem<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3RemP4 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P81 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PowP4 = <<A as Pow<B>>::Output as Same<P81>>::Output;

    assert_eq!(<P3PowP4 as Integer>::to_i64(), <P81 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_P4() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpP4 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Add_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P3AddP5 = <<A as Add<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P3AddP5 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Sub_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P3SubP5 = <<A as Sub<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P3SubP5 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Mul_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MulP5 = <<A as Mul<B>>::Output as Same<P15>>::Output;

    assert_eq!(<P3MulP5 as Integer>::to_i64(), <P15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Min_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MinP5 = <<A as Min<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3MinP5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Max_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P3MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Gcd_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P3GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P3GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Div_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P3DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P3DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Rem_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3RemP5 = <<A as Rem<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P3RemP5 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Pow_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P243 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P3PowP5 = <<A as Pow<B>>::Output as Same<P243>>::Output;

    assert_eq!(<P3PowP5 as Integer>::to_i64(), <P243 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Cmp_P5() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P3CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<P3CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddN5 = <<A as Add<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4AddN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubN5 = <<A as Sub<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P4SubN5 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulN5 = <<A as Mul<B>>::Output as Same<N20>>::Output;

    assert_eq!(<P4MulN5 as Integer>::to_i64(), <N20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P4MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxN5 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxN5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdN5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4DivN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4RemN5 = <<A as Rem<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4RemN5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4AddN4 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4AddN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4SubN4 = <<A as Sub<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P4SubN4 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N16 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulN4 = <<A as Mul<B>>::Output as Same<N16>>::Output;

    assert_eq!(<P4MulN4 as Integer>::to_i64(), <N16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P4MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxN4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4GcdN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4DivN4 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4DivN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemN4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4PartialDivN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddN3 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4AddN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubN3 = <<A as Sub<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P4SubN3 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulN3 = <<A as Mul<B>>::Output as Same<N12>>::Output;

    assert_eq!(<P4MulN3 as Integer>::to_i64(), <N12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P4MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxN3 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxN3 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4DivN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4RemN3 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4RemN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4AddN2 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4AddN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4SubN2 = <<A as Sub<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P4SubN2 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulN2 = <<A as Mul<B>>::Output as Same<N8>>::Output;

    assert_eq!(<P4MulN2 as Integer>::to_i64(), <N8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P4MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxN2 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxN2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4GcdN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4DivN2 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P4DivN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemN2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P4PartialDivN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddN1 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P4AddN1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubN1 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P4SubN1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulN1 = <<A as Mul<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P4MulN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxN1 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4DivN1 = <<A as Div<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P4DivN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P4PartialDivN1 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4Add_0 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4Add_0 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4Sub_0 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4Sub_0 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4Max_0 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4Max_0 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4Gcd_0 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4Gcd_0 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type P4Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<P4Cmp_0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddP1 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P4AddP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubP1 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P4SubP1 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulP1 = <<A as Mul<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MulP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4MinP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxP1 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4DivP1 = <<A as Div<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4DivP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4PartialDivP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PowP1 = <<A as Pow<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4PowP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpP1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4AddP2 = <<A as Add<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P4AddP2 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4SubP2 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4SubP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulP2 = <<A as Mul<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P4MulP2 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4MinP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxP2 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxP2 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4GcdP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4DivP2 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4DivP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemP2 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P4PartialDivP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PowP2 = <<A as Pow<B>>::Output as Same<P16>>::Output;

    assert_eq!(<P4PowP2 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P4CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpP2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddP3 = <<A as Add<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P4AddP3 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubP3 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4SubP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulP3 = <<A as Mul<B>>::Output as Same<P12>>::Output;

    assert_eq!(<P4MulP3 as Integer>::to_i64(), <P12 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P4MinP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxP3 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxP3 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4DivP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4RemP3 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4RemP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P64 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PowP3 = <<A as Pow<B>>::Output as Same<P64>>::Output;

    assert_eq!(<P4PowP3 as Integer>::to_i64(), <P64 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpP3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4AddP4 = <<A as Add<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P4AddP4 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4SubP4 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4SubP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulP4 = <<A as Mul<B>>::Output as Same<P16>>::Output;

    assert_eq!(<P4MulP4 as Integer>::to_i64(), <P16 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MinP4 = <<A as Min<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MinP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MaxP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4GcdP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4DivP4 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4DivP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4RemP4 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_PartialDiv_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4PartialDivP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P256 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PowP4 = <<A as Pow<B>>::Output as Same<P256>>::Output;

    assert_eq!(<P4PowP4 as Integer>::to_i64(), <P256 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpP4 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Add_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4AddP5 = <<A as Add<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P4AddP5 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Sub_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4SubP5 = <<A as Sub<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P4SubP5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Mul_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MulP5 = <<A as Mul<B>>::Output as Same<P20>>::Output;

    assert_eq!(<P4MulP5 as Integer>::to_i64(), <P20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Min_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4MinP5 = <<A as Min<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4MinP5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Max_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P4MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Gcd_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P4GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P4GcdP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Div_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P4DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P4DivP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Rem_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4RemP5 = <<A as Rem<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P4RemP5 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Pow_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1024 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P4PowP5 = <<A as Pow<B>>::Output as Same<P1024>>::Output;

    assert_eq!(<P4PowP5 as Integer>::to_i64(), <P1024 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Cmp_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P4CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<P4CmpP5 as Ord>::to_ordering(), Ordering::Less);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5AddN5 = <<A as Add<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5AddN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5SubN5 = <<A as Sub<B>>::Output as Same<P10>>::Output;

    assert_eq!(<P5SubN5 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N25 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulN5 = <<A as Mul<B>>::Output as Same<N25>>::Output;

    assert_eq!(<P5MulN5 as Integer>::to_i64(), <N25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P5MinN5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxN5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5GcdN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivN5 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P5DivN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5RemN5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_PartialDiv_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P5PartialDivN5 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_N5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpN5 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpN5 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5AddN4 = <<A as Add<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5AddN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5SubN4 = <<A as Sub<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P5SubN4 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MulN4 = <<A as Mul<B>>::Output as Same<N20>>::Output;

    assert_eq!(<P5MulN4 as Integer>::to_i64(), <N20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;

    assert_eq!(<P5MinN4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxN4 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxN4 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivN4 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P5DivN4 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5RemN4 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5RemN4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_N4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5CmpN4 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpN4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5AddN3 = <<A as Add<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5AddN3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5SubN3 = <<A as Sub<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P5SubN3 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulN3 = <<A as Mul<B>>::Output as Same<N15>>::Output;

    assert_eq!(<P5MulN3 as Integer>::to_i64(), <N15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;

    assert_eq!(<P5MinN3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxN3 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxN3 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdN3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P5DivN3 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5RemN3 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5RemN3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_N3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpN3 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpN3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5AddN2 = <<A as Add<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P5AddN2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5SubN2 = <<A as Sub<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P5SubN2 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MulN2 = <<A as Mul<B>>::Output as Same<N10>>::Output;

    assert_eq!(<P5MulN2 as Integer>::to_i64(), <N10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P5MinN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxN2 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxN2 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5DivN2 = <<A as Div<B>>::Output as Same<N2>>::Output;

    assert_eq!(<P5DivN2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5RemN2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_N2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5CmpN2 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpN2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5AddN1 = <<A as Add<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P5AddN1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5SubN1 = <<A as Sub<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P5SubN1 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulN1 = <<A as Mul<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P5MulN1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;

    assert_eq!(<P5MinN1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxN1 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxN1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivN1 = <<A as Div<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P5DivN1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5RemN1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_PartialDiv_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N5>>::Output;

    assert_eq!(<P5PartialDivN1 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_N1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpN1 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpN1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5Add_0 = <<A as Add<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5Add_0 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5Sub_0 = <<A as Sub<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5Sub_0 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5Mul_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5Min_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5Max_0 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5Max_0 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5Gcd_0 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5Gcd_0 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5Pow_0 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp__0() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = Z0;

    #[allow(non_camel_case_types)]
    type P5Cmp_0 = <A as Cmp<B>>::Output;
    assert_eq!(<P5Cmp_0 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5AddP1 = <<A as Add<B>>::Output as Same<P6>>::Output;

    assert_eq!(<P5AddP1 as Integer>::to_i64(), <P6 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5SubP1 = <<A as Sub<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P5SubP1 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulP1 = <<A as Mul<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MulP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5MinP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxP1 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivP1 = <<A as Div<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5DivP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5RemP1 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_PartialDiv_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5PartialDivP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PowP1 = <<A as Pow<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5PowP1 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_P1() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpP1 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpP1 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5AddP2 = <<A as Add<B>>::Output as Same<P7>>::Output;

    assert_eq!(<P5AddP2 as Integer>::to_i64(), <P7 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5SubP2 = <<A as Sub<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P5SubP2 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MulP2 = <<A as Mul<B>>::Output as Same<P10>>::Output;

    assert_eq!(<P5MulP2 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5MinP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxP2 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxP2 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5DivP2 = <<A as Div<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5DivP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5RemP2 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PowP2 = <<A as Pow<B>>::Output as Same<P25>>::Output;

    assert_eq!(<P5PowP2 as Integer>::to_i64(), <P25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_P2() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5CmpP2 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpP2 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5AddP3 = <<A as Add<B>>::Output as Same<P8>>::Output;

    assert_eq!(<P5AddP3 as Integer>::to_i64(), <P8 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5SubP3 = <<A as Sub<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5SubP3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulP3 = <<A as Mul<B>>::Output as Same<P15>>::Output;

    assert_eq!(<P5MulP3 as Integer>::to_i64(), <P15 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;

    assert_eq!(<P5MinP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxP3 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxP3 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5DivP3 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5RemP3 = <<A as Rem<B>>::Output as Same<P2>>::Output;

    assert_eq!(<P5RemP3 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P125 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PowP3 = <<A as Pow<B>>::Output as Same<P125>>::Output;

    assert_eq!(<P5PowP3 as Integer>::to_i64(), <P125 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_P3() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpP3 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpP3 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5AddP4 = <<A as Add<B>>::Output as Same<P9>>::Output;

    assert_eq!(<P5AddP4 as Integer>::to_i64(), <P9 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5SubP4 = <<A as Sub<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5SubP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MulP4 = <<A as Mul<B>>::Output as Same<P20>>::Output;

    assert_eq!(<P5MulP4 as Integer>::to_i64(), <P20 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5MinP4 = <<A as Min<B>>::Output as Same<P4>>::Output;

    assert_eq!(<P5MinP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxP4 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxP4 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5GcdP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivP4 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5DivP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5RemP4 = <<A as Rem<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5RemP4 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P625 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>, B1>, B0>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PowP4 = <<A as Pow<B>>::Output as Same<P625>>::Output;

    assert_eq!(<P5PowP4 as Integer>::to_i64(), <P625 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_P4() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type P5CmpP4 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpP4 as Ord>::to_ordering(), Ordering::Greater);
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Add_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type P5AddP5 = <<A as Add<B>>::Output as Same<P10>>::Output;

    assert_eq!(<P5AddP5 as Integer>::to_i64(), <P10 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Sub_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5SubP5 = <<A as Sub<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5SubP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Mul_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MulP5 = <<A as Mul<B>>::Output as Same<P25>>::Output;

    assert_eq!(<P5MulP5 as Integer>::to_i64(), <P25 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Min_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MinP5 = <<A as Min<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MinP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Max_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5MaxP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Gcd_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;

    assert_eq!(<P5GcdP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Div_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5DivP5 = <<A as Div<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5DivP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Rem_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type P5RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;

    assert_eq!(<P5RemP5 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_PartialDiv_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type P5PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;

    assert_eq!(<P5PartialDivP5 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Pow_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P3125 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B1>, B1>, B0>, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5PowP5 = <<A as Pow<B>>::Output as Same<P3125>>::Output;

    assert_eq!(<P5PowP5 as Integer>::to_i64(), <P3125 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Cmp_P5() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type P5CmpP5 = <A as Cmp<B>>::Output;
    assert_eq!(<P5CmpP5 as Ord>::to_ordering(), Ordering::Equal);
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Neg() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type NegN5 = <<A as Neg>::Output as Same<P5>>::Output;
    assert_eq!(<NegN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N5_Abs() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type AbsN5 = <<A as Abs>::Output as Same<P5>>::Output;
    assert_eq!(<AbsN5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Neg() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type NegN4 = <<A as Neg>::Output as Same<P4>>::Output;
    assert_eq!(<NegN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N4_Abs() {
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type AbsN4 = <<A as Abs>::Output as Same<P4>>::Output;
    assert_eq!(<AbsN4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Neg() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type NegN3 = <<A as Neg>::Output as Same<P3>>::Output;
    assert_eq!(<NegN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N3_Abs() {
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type AbsN3 = <<A as Abs>::Output as Same<P3>>::Output;
    assert_eq!(<AbsN3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Neg() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type NegN2 = <<A as Neg>::Output as Same<P2>>::Output;
    assert_eq!(<NegN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N2_Abs() {
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type AbsN2 = <<A as Abs>::Output as Same<P2>>::Output;
    assert_eq!(<AbsN2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Neg() {
    type A = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type NegN1 = <<A as Neg>::Output as Same<P1>>::Output;
    assert_eq!(<NegN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_N1_Abs() {
    type A = NInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type AbsN1 = <<A as Abs>::Output as Same<P1>>::Output;
    assert_eq!(<AbsN1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Neg() {
    type A = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type Neg_0 = <<A as Neg>::Output as Same<_0>>::Output;
    assert_eq!(<Neg_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test__0_Abs() {
    type A = Z0;
    type _0 = Z0;

    #[allow(non_camel_case_types)]
    type Abs_0 = <<A as Abs>::Output as Same<_0>>::Output;
    assert_eq!(<Abs_0 as Integer>::to_i64(), <_0 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Neg() {
    type A = PInt<UInt<UTerm, B1>>;
    type N1 = NInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type NegP1 = <<A as Neg>::Output as Same<N1>>::Output;
    assert_eq!(<NegP1 as Integer>::to_i64(), <N1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P1_Abs() {
    type A = PInt<UInt<UTerm, B1>>;
    type P1 = PInt<UInt<UTerm, B1>>;

    #[allow(non_camel_case_types)]
    type AbsP1 = <<A as Abs>::Output as Same<P1>>::Output;
    assert_eq!(<AbsP1 as Integer>::to_i64(), <P1 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Neg() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type NegP2 = <<A as Neg>::Output as Same<N2>>::Output;
    assert_eq!(<NegP2 as Integer>::to_i64(), <N2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P2_Abs() {
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;

    #[allow(non_camel_case_types)]
    type AbsP2 = <<A as Abs>::Output as Same<P2>>::Output;
    assert_eq!(<AbsP2 as Integer>::to_i64(), <P2 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Neg() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type NegP3 = <<A as Neg>::Output as Same<N3>>::Output;
    assert_eq!(<NegP3 as Integer>::to_i64(), <N3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P3_Abs() {
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;

    #[allow(non_camel_case_types)]
    type AbsP3 = <<A as Abs>::Output as Same<P3>>::Output;
    assert_eq!(<AbsP3 as Integer>::to_i64(), <P3 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Neg() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type NegP4 = <<A as Neg>::Output as Same<N4>>::Output;
    assert_eq!(<NegP4 as Integer>::to_i64(), <N4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P4_Abs() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;

    #[allow(non_camel_case_types)]
    type AbsP4 = <<A as Abs>::Output as Same<P4>>::Output;
    assert_eq!(<AbsP4 as Integer>::to_i64(), <P4 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Neg() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type NegP5 = <<A as Neg>::Output as Same<N5>>::Output;
    assert_eq!(<NegP5 as Integer>::to_i64(), <N5 as Integer>::to_i64());
}
#[test]
#[allow(non_snake_case)]
fn test_P5_Abs() {
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;

    #[allow(non_camel_case_types)]
    type AbsP5 = <<A as Abs>::Output as Same<P5>>::Output;
    assert_eq!(<AbsP5 as Integer>::to_i64(), <P5 as Integer>::to_i64());
}
'''
'''--- near-election-dapp/backend/target/debug/build/wee_alloc-70a35408d6872e30/out/wee_alloc_static_array_backend_size_bytes.txt ---
33554432
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/Inflector-3b3f221d3a038f12/lib-inflector.json ---
{"rustc":1963664527410474588,"features":"[]","target":15157828903313475237,"profile":89792565241913630,"path":5458099275740815010,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/Inflector-3b3f221d3a038f12/dep-lib-inflector"}}],"rustflags":[],"metadata":6849597462678386541,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/ahash-bc436404cd2c70d8/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":13294766831966498538,"profile":89792565241913630,"path":14318470125251974140,"deps":[[16079472387499994964,"version_check",false,12141560995155249875]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/ahash-bc436404cd2c70d8/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/borsh-derive-7e262ea85b775850/lib-borsh-derive.json ---
{"rustc":1963664527410474588,"features":"[]","target":4089840889381527766,"profile":89792565241913630,"path":18349131639082781260,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[2345288959107110519,"borsh_schema_derive_internal",false,7819896593224423711],[3971538142687143787,"proc_macro_crate",false,15216768610909544759],[4114176108478934945,"syn",false,14882920926767713782],[8324001644593655249,"borsh_derive_internal",false,4974944969988082116]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-derive-7e262ea85b775850/dep-lib-borsh-derive"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/borsh-derive-internal-7b64409401a93490/lib-borsh-derive-internal.json ---
{"rustc":1963664527410474588,"features":"[]","target":1036412639898795334,"profile":89792565241913630,"path":10808473181343775823,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4114176108478934945,"syn",false,14882920926767713782],[4658667968557883043,"quote",false,9046179720949352484]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-derive-internal-7b64409401a93490/dep-lib-borsh-derive-internal"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/borsh-schema-derive-internal-9ac54511f11493e1/lib-borsh-schema-derive-internal.json ---
{"rustc":1963664527410474588,"features":"[]","target":5421563452239655410,"profile":89792565241913630,"path":13449352232304404824,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4114176108478934945,"syn",false,14882920926767713782],[4658667968557883043,"quote",false,9046179720949352484]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-schema-derive-internal-9ac54511f11493e1/dep-lib-borsh-schema-derive-internal"}}],"rustflags":[],"metadata":7685215035480038221,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/near-sdk-macros-16ac5feaa11137f8/lib-near-sdk-macros.json ---
{"rustc":1963664527410474588,"features":"[]","target":2024342235666230958,"profile":89792565241913630,"path":1771747915337282788,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4114176108478934945,"syn",false,14882920926767713782],[4658667968557883043,"quote",false,9046179720949352484],[7454270075138479745,"inflector",false,14981147588518391804]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/near-sdk-macros-16ac5feaa11137f8/dep-lib-near-sdk-macros"}}],"rustflags":[],"metadata":9520434766592551999,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/proc-macro-crate-66ae6fc76694e145/lib-proc-macro-crate.json ---
{"rustc":1963664527410474588,"features":"[]","target":10488202467561598967,"profile":89792565241913630,"path":9929988983524567196,"deps":[[12643607882224615841,"toml",false,9604881584060825762]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro-crate-66ae6fc76694e145/dep-lib-proc-macro-crate"}}],"rustflags":[],"metadata":4875023412952309093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/proc-macro2-275dd03cc13169db/lib-proc-macro2.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":14344298002436322672,"profile":89792565241913630,"path":18157387444495557922,"deps":[[2303534799027988957,"build_script_build",false,6000507916501554241],[9294524838761079687,"unicode_ident",false,3200482712890258989]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro2-275dd03cc13169db/dep-lib-proc-macro2"}}],"rustflags":[],"metadata":7635439851376710101,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/proc-macro2-28bdb56840048eee/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[2303534799027988957,"build_script_build",false,4510756182258113713]],"local":[{"RerunIfChanged":{"output":"release/build/proc-macro2-28bdb56840048eee/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/proc-macro2-9cc26b171cd3b55b/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":89792565241913630,"path":8373503749160907691,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro2-9cc26b171cd3b55b/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":7635439851376710101,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/quote-1a6a108f0f3f4cbc/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":89792565241913630,"path":12427570233756742094,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/quote-1a6a108f0f3f4cbc/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/quote-5fd2d47623ffad79/lib-quote.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"proc-macro\"]","target":4606197195311606630,"profile":89792565241913630,"path":18167323669066073144,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4658667968557883043,"build_script_build",false,16151142882754281812]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/quote-5fd2d47623ffad79/dep-lib-quote"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/quote-d5b743d8f7eb7d18/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[4658667968557883043,"build_script_build",false,7329239895828510432]],"local":[{"RerunIfChanged":{"output":"release/build/quote-d5b743d8f7eb7d18/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde-2b4acd0e2f64ad19/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":2709041430195671023,"profile":89792565241913630,"path":8623646744122958867,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-2b4acd0e2f64ad19/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde-58708cdca152d7ff/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":2709041430195671023,"profile":89792565241913630,"path":8623646744122958867,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-58708cdca152d7ff/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde-df77a694907321bf/lib-serde.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":15771919462364234457,"profile":89792565241913630,"path":1387100282848832722,"deps":[[14036285059816747405,"build_script_build",false,5715809761026463317]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-df77a694907321bf/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde-f11e88f625e90098/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[14036285059816747405,"build_script_build",false,17751350871702749946]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde_derive-21892e83fa501686/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[6457049817717335835,"build_script_build",false,16893598654715251275]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde_derive-a951fea180f8309a/lib-serde_derive.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":17963269895377715704,"profile":89792565241913630,"path":9565781282288803278,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4114176108478934945,"syn",false,14882920926767713782],[4658667968557883043,"quote",false,9046179720949352484],[6457049817717335835,"build_script_build",false,9062446235825559405]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_derive-a951fea180f8309a/dep-lib-serde_derive"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde_derive-d2a81a532fdc45ed/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":2709041430195671023,"profile":89792565241913630,"path":4164287412775783218,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_derive-d2a81a532fdc45ed/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/serde_json-128b1ac8cb6ace86/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":13294766831966498538,"profile":89792565241913630,"path":13016217998012930942,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_json-128b1ac8cb6ace86/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/syn-5916c55475f47d31/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[4114176108478934945,"build_script_build",false,3451830860276713605]],"local":[{"Precalculated":"1.0.99"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/syn-8008a4a04745d62c/lib-syn.json ---
{"rustc":1963664527410474588,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":12020202395954228905,"profile":89792565241913630,"path":1811155579893772776,"deps":[[2303534799027988957,"proc_macro2",false,17236805555137887904],[4114176108478934945,"build_script_build",false,15628250213170331796],[4658667968557883043,"quote",false,9046179720949352484],[9294524838761079687,"unicode_ident",false,3200482712890258989]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/syn-8008a4a04745d62c/dep-lib-syn"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/syn-aa5be3ca0b635863/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":13294766831966498538,"profile":89792565241913630,"path":17112112725833134457,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/syn-aa5be3ca0b635863/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/toml-5da971da5f0ff0e6/lib-toml.json ---
{"rustc":1963664527410474588,"features":"[\"default\"]","target":13462643144348829615,"profile":89792565241913630,"path":3563773021313154147,"deps":[[14036285059816747405,"serde",false,13019970331826744557]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/toml-5da971da5f0ff0e6/dep-lib-toml"}}],"rustflags":[],"metadata":15823223228428447826,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/unicode-ident-0420738d25d61a58/lib-unicode-ident.json ---
{"rustc":1963664527410474588,"features":"[]","target":796776536126189422,"profile":89792565241913630,"path":2733291856848635335,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/unicode-ident-0420738d25d61a58/dep-lib-unicode-ident"}}],"rustflags":[],"metadata":1159190378059262574,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/version_check-cadad5a805ab2e5c/lib-version_check.json ---
{"rustc":1963664527410474588,"features":"[]","target":2726911228026723764,"profile":89792565241913630,"path":15066072318457750607,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/version_check-cadad5a805ab2e5c/dep-lib-version_check"}}],"rustflags":[],"metadata":14847206692933921638,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/release/.fingerprint/wee_alloc-bf9ac153516e840b/build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"[]","target":2709041430195671023,"profile":89792565241913630,"path":8449987404041412114,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/wee_alloc-bf9ac153516e840b/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/ahash-0dea1d9e668adb10/lib-ahash.json ---
{"rustc":1963664527410474588,"features":"[]","target":17564961922320999190,"profile":4881301595602780980,"path":11592655100402160533,"deps":[[6564554279330852038,"build_script_build",false,10935086876714022037],[13220248725062288935,"once_cell",false,8450029807316081329]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/ahash-0dea1d9e668adb10/dep-lib-ahash"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/ahash-400e08c71a720aa2/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[6564554279330852038,"build_script_build",false,6013765302995823639]],"local":[{"RerunIfChanged":{"output":"wasm32-unknown-unknown/release/build/ahash-400e08c71a720aa2/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/backend-8bb5b6c6f3c13173/lib-backend.json ---
{"rustc":1963664527410474588,"features":"[]","target":6833007353328602943,"profile":4881301595602780980,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,8497828402369228145]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/backend-8bb5b6c6f3c13173/dep-lib-backend"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/base64-4f591523dd1f0bf4/lib-base64.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":4881301595602780980,"path":539523164973625176,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/base64-4f591523dd1f0bf4/dep-lib-base64"}}],"rustflags":[],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/borsh-19e911e108298ba8/lib-borsh.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":3730488758921852561,"profile":4881301595602780980,"path":3892413332493176036,"deps":[[1759060122986695407,"borsh_derive",false,11452031386706918650],[16284710795702459458,"hashbrown",false,16153965836629567859]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/borsh-19e911e108298ba8/dep-lib-borsh"}}],"rustflags":[],"metadata":7032358266178414993,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/bs58-e91155471e38631a/lib-bs58.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"default\", \"std\"]","target":4860711247261189145,"profile":4881301595602780980,"path":10538786071282415694,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/bs58-e91155471e38631a/dep-lib-bs58"}}],"rustflags":[],"metadata":13637435404263704389,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/cfg-if-203ea24edc107eda/lib-cfg-if.json ---
{"rustc":1963664527410474588,"features":"[]","target":10094334937643343087,"profile":4881301595602780980,"path":13461851032644167826,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/cfg-if-203ea24edc107eda/dep-lib-cfg-if"}}],"rustflags":[],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/electionnftcontract-ae45932d09a36204/lib-electionnftcontract.json ---
{"rustc":1963664527410474588,"features":"[]","target":4673246272486568707,"profile":4881301595602780980,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,8497828402369228145]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/electionnftcontract-ae45932d09a36204/dep-lib-electionnftcontract"}}],"rustflags":[],"metadata":7444570362700764511,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/hashbrown-6a5153a55e19d604/lib-hashbrown.json ---
{"rustc":1963664527410474588,"features":"[\"ahash\", \"default\", \"inline-more\"]","target":7861740280460442625,"profile":4881301595602780980,"path":5501546530421502182,"deps":[[6564554279330852038,"ahash",false,6850532154247672496]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/hashbrown-6a5153a55e19d604/dep-lib-hashbrown"}}],"rustflags":[],"metadata":6228333144549390726,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/itoa-7c244649f66cce53/lib-itoa.json ---
{"rustc":1963664527410474588,"features":"[]","target":16990797089513230490,"profile":4881301595602780980,"path":243630647066463386,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/itoa-7c244649f66cce53/dep-lib-itoa"}}],"rustflags":[],"metadata":851671291587502216,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/memory_units-a1e2d037784e2d62/lib-memory_units.json ---
{"rustc":1963664527410474588,"features":"[]","target":12813906616754239599,"profile":4881301595602780980,"path":1136550331257194429,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/memory_units-a1e2d037784e2d62/dep-lib-memory_units"}}],"rustflags":[],"metadata":16366510313631463741,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/near-sdk-9347d8d4d4efbc32/lib-near-sdk.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"wee_alloc\"]","target":1044266279087180184,"profile":4881301595602780980,"path":9479240943099365527,"deps":[[1468750645555412223,"serde_json",false,17172043293308748733],[2711478123133662383,"bs58",false,9301355138929897741],[3178493835647231921,"wee_alloc",false,800457799378201505],[9180754061452322375,"base64",false,16058810516585585231],[9608617076544306583,"near_sys",false,16869097675593750039],[13434381959712907675,"borsh",false,5670140955790192221],[14036285059816747405,"serde",false,12900539197646314158],[15959244235299360742,"near_sdk_macros",false,2604740366543982139]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/near-sdk-9347d8d4d4efbc32/dep-lib-near-sdk"}}],"rustflags":[],"metadata":9215943102709044213,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/near-sys-1a5a64e21dd842a2/lib-near-sys.json ---
{"rustc":1963664527410474588,"features":"[]","target":11005017848159897718,"profile":4881301595602780980,"path":5698187451272198236,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/near-sys-1a5a64e21dd842a2/dep-lib-near-sys"}}],"rustflags":[],"metadata":14904885344401450229,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/once_cell-6a687cb39dda1ae8/lib-once_cell.json ---
{"rustc":1963664527410474588,"features":"[\"alloc\", \"race\"]","target":15818772897122422038,"profile":4881301595602780980,"path":12592208058068401834,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/once_cell-6a687cb39dda1ae8/dep-lib-once_cell"}}],"rustflags":[],"metadata":14177539708254521827,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/ryu-11b16468d0e56a5e/lib-ryu.json ---
{"rustc":1963664527410474588,"features":"[]","target":8261881835615490997,"profile":4881301595602780980,"path":3120883713387150603,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/ryu-11b16468d0e56a5e/dep-lib-ryu"}}],"rustflags":[],"metadata":10387617312689919117,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/serde-38d4d46cb4f1f45d/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[14036285059816747405,"build_script_build",false,15201466335631078383]],"local":[{"Precalculated":"1.0.143"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/serde-77bf6fdbaf73f529/lib-serde.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":15771919462364234457,"profile":4881301595602780980,"path":1387100282848832722,"deps":[[6457049817717335835,"serde_derive",false,9310671966275853798],[14036285059816747405,"build_script_build",false,1724058943307437964]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/serde-77bf6fdbaf73f529/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/serde_json-31bc42e90f55b07e/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[1468750645555412223,"build_script_build",false,18047898532505791487]],"local":[{"Precalculated":"1.0.83"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/serde_json-f2c9a3969da46273/lib-serde_json.json ---
{"rustc":1963664527410474588,"features":"[\"default\", \"std\"]","target":2475719121998694108,"profile":4881301595602780980,"path":7382252529011714141,"deps":[[575073654967937391,"ryu",false,15629135063507312037],[1468750645555412223,"build_script_build",false,3702428757908146133],[5877561965226442608,"itoa",false,7972717422602160557],[14036285059816747405,"serde",false,12900539197646314158]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/serde_json-f2c9a3969da46273/dep-lib-serde_json"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/wee_alloc-1dff4c58398a5c99/lib-wee_alloc.json ---
{"rustc":1963664527410474588,"features":"[]","target":7410670272435617587,"profile":4881301595602780980,"path":13300467464470778750,"deps":[[1429323848562539564,"memory_units",false,1875436337497976099],[3178493835647231921,"build_script_build",false,16941076488917505041],[11311719388751911026,"cfg_if",false,17751147763212062655]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/wee_alloc-1dff4c58398a5c99/dep-lib-wee_alloc"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/.fingerprint/wee_alloc-7bd1dae7d8baadcf/run-build-script-build-script-build.json ---
{"rustc":1963664527410474588,"features":"","target":0,"profile":0,"path":0,"deps":[[3178493835647231921,"build_script_build",false,11834190079248348569]],"local":[{"RerunIfChanged":{"output":"wasm32-unknown-unknown/release/build/wee_alloc-7bd1dae7d8baadcf/output","paths":["./Cargo.toml","./build.rs","./src/lib.rs","./src/imp_static_array.rs"]}},{"RerunIfEnvChanged":{"var":"WEE_ALLOC_STATIC_ARRAY_BACKEND_BYTES","val":null}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- near-election-dapp/backend/target/wasm32-unknown-unknown/release/build/wee_alloc-7bd1dae7d8baadcf/out/wee_alloc_static_array_backend_size_bytes.txt ---
33554432
'''
'''--- near-election-dapp/frontend/.gitpod.yml ---
tasks:
  - init: npm dev
    command: npm run dev
ports:
  - port: 5001
    onOpen: open-browser

'''
'''--- near-election-dapp/frontend/README.md ---
near-blank-project
==================

This app was initialized with [create-near-app]

Quick Start
===========

If you haven't installed dependencies during setup:

    npm run deps-install

Build and deploy your contract to TestNet with a temporary dev account:

    npm run deploy

Test your contract:

    npm test

If you have a frontend, run `npm start`. This will run a dev server.

Exploring The Code
==================

1. The smart-contract code lives in the `/contract` folder. See the README there for
   more info. In blockchain apps the smart contract is the "backend" of your app.
2. The frontend code lives in the `/frontend` folder. `/frontend/index.html` is a great
   place to start exploring. Note that it loads in `/frontend/index.js`,
   this is your entrypoint to learn how the frontend connects to the NEAR blockchain.
3. Test your contract: `npm test`, this will run the tests in `integration-tests` directory.

Deploy
======

Every smart contract in NEAR has its [own associated account][NEAR accounts]. 
When you run `npm run deploy`, your smart contract gets deployed to the live NEAR TestNet with a temporary dev account.
When you're ready to make it permanent, here's how:

Step 0: Install near-cli (optional)
-------------------------------------

[near-cli] is a command line interface (CLI) for interacting with the NEAR blockchain. It was installed to the local `node_modules` folder when you ran `npm install`, but for best ergonomics you may want to install it globally:

    npm install --global near-cli

Or, if you'd rather use the locally-installed version, you can prefix all `near` commands with `npx`

Ensure that it's installed with `near --version` (or `npx near --version`)

Step 1: Create an account for the contract
------------------------------------------

Each account on NEAR can have at most one contract deployed to it. If you've already created an account such as `your-name.testnet`, you can deploy your contract to `near-blank-project.your-name.testnet`. Assuming you've already created an account on [NEAR Wallet], here's how to create `near-blank-project.your-name.testnet`:

1. Authorize NEAR CLI, following the commands it gives you:

      near login

2. Create a subaccount (replace `YOUR-NAME` below with your actual account name):

      near create-account near-blank-project.YOUR-NAME.testnet --masterAccount YOUR-NAME.testnet

Step 2: deploy the contract
---------------------------

Use the CLI to deploy the contract to TestNet with your account ID.
Replace `PATH_TO_WASM_FILE` with the `wasm` that was generated in `contract` build directory.

    near deploy --accountId near-blank-project.YOUR-NAME.testnet --wasmFile PATH_TO_WASM_FILE

Step 3: set contract name in your frontend code
-----------------------------------------------

Modify the line in `src/config.js` that sets the account name of the contract. Set it to the account id you used above.

    const CONTRACT_NAME = process.env.CONTRACT_NAME || 'near-blank-project.YOUR-NAME.testnet'

Troubleshooting
===============

On Windows, if you're seeing an error containing `EPERM` it may be related to spaces in your path. Please see [this issue](https://github.com/zkat/npx/issues/209) for more details.

  [create-near-app]: https://github.com/near/create-near-app
  [Node.js]: https://nodejs.org/en/download/package-manager/
  [jest]: https://jestjs.io/
  [NEAR accounts]: https://docs.near.org/concepts/basics/account
  [NEAR Wallet]: https://wallet.testnet.near.org/
  [near-cli]: https://github.com/near/near-cli
  [gh-pages]: https://github.com/tschaub/gh-pages

'''
'''--- near-election-dapp/frontend/frontend/App.js ---
import 'regenerator-runtime/runtime';
import React from 'react';
import './assets/css/global.css';
import NEARLogo from './assets/img/logo-black.svg';
import UNCHLogo from './assets/img/unchain_logo.png';
import crossLogo from './assets/img/cross.png';
import TopImage from './assets/img/top_img.avif';
import AppRouter from './assets/AppRouter';
import { login, logout } from './assets/js/near/utils';

/**
 * App component
 * @returns 
 */
export default function App() {
  
  // check if signed in
  if (!window.walletConnection.isSignedIn()) {
    return (
      // sign in screen
      <div className='grid h-3/4 place-items-center'>
        <div className="flex items-center">
          <img src={NEARLogo} className="object-cover h-16 w-16" />
          <img src={crossLogo} className="object-cover h-6 w-6" />
          <img src={UNCHLogo} className="object-cover h-12 w-12 mx-2" />
          <span className="self-center text-3xl font-semibold whitespace-nowrap app_title">Election Dapp</span>
        </div>
        <div className="text-3xl">Have a liberate and fair election!</div>
        <img src={TopImage} className="mb-4 h-5/6 w-1/2" />
        <button 
          className='text-white w-2/5 h-12 bg-gradient-to-r from-rose-500 via-rose-600 to-rose-800 hover:bg-gradient-to-br focus:ring-4 focus:outline-none font-medium rounded-lg text-3xl text-center ' 
          onClick={login}
        >
          Sign In
        </button>
      </div>
    )
  }

  // in case user signed in
  return (
    <div className="bg-white min-h-screen">
      {/* header */}
      <nav className="bg-white pt-2.5">
        <div className="container flex flex-wrap justify-between items-center mx-auto">
          <div className="flex items-center">
            <img src={NEARLogo} className="object-cover h-12 w-12" />
            <img src={crossLogo} className="object-cover h-4 w-4" />
            <img src={UNCHLogo} className="object-cover h-9 w-9 mx-2" />
            <span className="self-center text-3xl font-semibold whitespace-nowrap app_title">Election Dapp</span>
          </div>
          <div className="md:block md:w-auto pt-1">
            <ul className='flex md:flex-row md:space-x-8 md:text-xl md:font-medium'>
              {/* change url as being pushed button */}
              <li><a href='https://nearelectiondapp.netlify.app/'> Home </a></li>
              <li><a href='https://nearelectiondapp.netlify.app/candidate'> Add Candidate </a></li>
              <li><a href='https://nearelectiondapp.netlify.app/voter'> Add Voter </a></li>
              <button 
                className="link text-red-500" 
                style={{ float: 'right' }} 
                onClick={logout}
              >
                Sign out
              </button>
            </ul>
          </div>
        </div>
      </nav>
      {/* body(change depending on url) */}
      <div className='center'>
        <AppRouter/>
      </div>

    </div>
  )
}

'''
'''--- near-election-dapp/frontend/frontend/assets/AppRouter.js ---
import React from "react";
import { BrowserRouter, Route, Routes } from 'react-router-dom';
import Home from "./pages/home";
import Candidate from "./pages/candidate";
import Voter from "./pages/voter";

/**
 * AppRouter component
 */
const AppRouter = () => {
    return (
        <BrowserRouter>
            <Routes>
                <Route path="/" exact element={<Home />} />
                <Route path="/candidate" exact element={<Candidate />} />
                <Route path="/voter" exact element={<Voter />} />
            </Routes>
        </BrowserRouter>
    );
}

export default AppRouter;
'''
'''--- near-election-dapp/frontend/frontend/assets/components/candidate_card.js ---
import React from "react";
import { IpfsImage } from 'react-ipfs-image';
import './../css/global.css';

/**
 * CandidateCard component  
 */
const CandidateCard = (props) => {
    return (
        <div className="max-w-sm rounded overflow-hidden shadow-lg w-64 h-96">
            <IpfsImage 
                className="w-full h-3/5" 
                hash={props.CID} 
                gatewayUrl='https://gateway.pinata.cloud/ipfs/' 
                alt="Sunset in the mountains" 
            />
            <div className="px-6 py-4">
                <div className="font-bold text-xl mb-2">{props.name}</div>
                <p className="text-gray-700 text-base">
                    {props.manifest}
                </p>
            </div>
        </div>
    )

}

export default CandidateCard;
'''
'''--- near-election-dapp/frontend/frontend/assets/components/input_form.js ---
import React from "react";

/**
 * Input component
 * @param {*} props 
 * @returns 
 */
const Input = (props) => {
    return (
        <form className="w-3/5" onSubmit={e => { e.preventDefault(); }}>
            <label className="block">
                <span className="block text-3xl font-medium text-slate-700">{props.title}</span>
                <input 
                    value={props.input} 
                    placeholder={props.hint} 
                    onChange={props.setInput}
                    className="mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm
                                shadow-sm placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500
                                 disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none
                                 invalid:border-pink-500 invalid:text-pink-600 focus:invalid:border-pink-500 focus:invalid:ring-pink-500"
                    />
            </label>
        </form>
    )
}

export default Input;
'''
'''--- near-election-dapp/frontend/frontend/assets/components/title.js ---
import React from "react";
import './../css/global.css';

/**
 * title component
 * @param {*} props 
 * @returns 
 */
const Title = (props) => {
    return (
        <span className="box-content h-7 w-1/3 p-4 border-4 m4 center text-4xl items-center">
            {props.name}
        </span>
    )
}

export default Title;
'''
'''--- near-election-dapp/frontend/frontend/assets/css/global.css ---
/* global css */ 
@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@layer components {
  .title {
    @apply font-semibold text-black text-transparent text-5xl bg-clip-text bg-gradient-to-b py-3;
  }

  .app_title {
    @apply font-extrabold text-transparent text-8xl bg-clip-text bg-gradient-to-r from-red-500 to-yellow-400;
  }

  .center {
    @apply flex justify-center;
  }
  .button {
    @apply bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded;
  }
  .vote_button {
    @apply h-8 px-3 py-0 my-2 font-sans text-xl font-semibold text-white transition ease-in-out bg-rose-600 border-rose-800 rounded shadow-lg drop-shadow-xl shadow-rose-600/50 hover:border-red-600;
  }

  .close_button {
    @apply h-8 px-3 py-0 mt-2 mb-3 font-sans text-xl font-semibold text-white transition ease-in-out bg-rose-900 border-red-800 rounded shadow-lg shadow-rose-600/50 hover:border-purple-600;
  }
}

html {
  font-size: calc(0.9em + 0.5vw);
}

/*
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #FF585D;
  --secondary: #0072CE;

  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  margin: 0 auto;
  max-width: 26em;
}

main.please-wait {
}

h1 {
  background-image: url(./../img/logo-black.svg);
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0;
  text-align: center;
  font-size: 1.5em;
}
.greeting {
  color: var(--secondary);
  text-decoration: underline;
}
h2 {
  text-align: center;
}

.please-wait .change {
  pointer-events: none;
}

ul.information  {
  margin: 2em 0 2em 0;
  padding: 0;
  text-align: left;
  font-size: 0.8em;

}
.information li:first-child {
  border-top: 1px solid var(--light-gray);
}
.information li {
  padding: 0.5em 0;
  border-bottom: 1px solid var(--light-gray);
  list-style: none;
}

.change {
  display: flex;
  flex-direction: column;
  align-content: stretch;
  justify-content: space-evenly;
  align-items: stretch;
  font-size: 1em;
  border: 2px solid var(--light-gray);
  padding: 0.5em;
}
.change > div {
  display: flex;
  align-content: stretch;
  justify-content: space-evenly;
  align-items: stretch;
}
.change input {
  flex: 1;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.change label {
  display: block;
  text-align: left;
  margin-right: 10px;
  padding-bottom: 0.5em;
}
.change button {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}
main.please-wait .change button {
  position: relative;
  pointer-events: none;
  background-color: white;
}
main.please-wait .change button span {
  visibility: hidden;
}
button {
  background-color: var(--secondary);
  border-radius: 5px;
  border: none;
  color: #efefef;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}
button:hover, button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
}
input {
  background-color: var(--light-gray);
  border: none;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 0.5em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    background-image: url(./../img/logo-white.svg);
  }
}
*/
'''
'''--- near-election-dapp/frontend/frontend/assets/img/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- near-election-dapp/frontend/frontend/assets/img/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- near-election-dapp/frontend/frontend/assets/js/near/config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME;

export function getConfig(env) {
  switch (env) {

    case 'production':
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.mainnet.near.org',
        explorerUrl: 'https://explorer.mainnet.near.org',
      };
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org',
        explorerUrl: 'https://explorer.testnet.near.org',
      };
    case 'betanet':
      return {
        networkId: 'betanet',
        nodeUrl: 'https://rpc.betanet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.betanet.near.org',
        helperUrl: 'https://helper.betanet.near.org',
        explorerUrl: 'https://explorer.betanet.near.org',
      };
    case 'local':
      return {
        networkId: 'local',
        nodeUrl: 'http://localhost:3030',
        keyPath: `${process.env.HOME}/.near/validator_key.json`,
        walletUrl: 'http://localhost:4000/wallet',
        contractName: CONTRACT_NAME,
      };
    case 'test':
    case 'ci':
      return {
        networkId: 'shared-test',
        nodeUrl: 'https://rpc.ci-testnet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near',
      };
    case 'ci-betanet':
      return {
        networkId: 'shared-test-staging',
        nodeUrl: 'https://rpc.ci-betanet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near',
      };
    default:
      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);
  }
}

'''
'''--- near-election-dapp/frontend/frontend/assets/js/near/utils.js ---
import { 
  connect, 
  Contract, 
  keyStores, 
  WalletConnection 
} from 'near-api-js';
import { getConfig } from './config';
const BN = require("bn.js");

const nearConfig = getConfig(process.env.NODE_ENV || 'testnet');

/**
 * Initialize contract & set global variables
 */
export async function initContract() {
  // Initialize connection to the NEAR testnet
  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig));

  // Initializing Wallet based Account. It can work with NEAR testnet wallet that
  // is hosted at https://wallet.testnet.near.org
  window.walletConnection = new WalletConnection(near);
  // Getting the Account ID. If still unauthorized, it's just empty string
  window.accountId = window.walletConnection.getAccountId();

  // Initializing our contract APIs by contract name and configuration
  window.contract = await new Contract(window.walletConnection.account(), nearConfig.contractName, {
    // View methods are read only. They don't modify the state, but usually return some value.
    viewMethods: [
      'nft_metadata', 
      'nft_tokens_for_kind', 
      'nft_return_candidate_likes', 
      'check_voter_has_been_added', 
      'check_voter_has_voted', 
      'if_election_closed'
    ],
    // Change methods can modify the state. But you don't receive the returned value when called.
    changeMethods: [
      'new_default_meta', 
      'nft_mint', 
      'nft_transfer', 
      'nft_add_likes_to_candidate', 
      'voter_voted', 
      'close_election', 
      'reopen_election'
  ],
  });
}

/**
 * logout function
 */
export function logout() {
  window.walletConnection.signOut();
  // reload page
  window.location.replace(window.location.origin + window.location.pathname);
}

/**
 * login function
 */
export function login() {
  window.walletConnection.requestSignIn(nearConfig.contractName);
}

/**
 * initial NFT Contract function
 */
export async function new_default_meta() {
  await window.contract.new_default_meta(
    { owner_id: window.accountId }
  )
}

/**
 * NFT mint function
 * @param {*} title 
 * @param {*} description 
 * @param {*} media 
 * @param {*} media_CID 
 * @param {*} candidate_name 
 * @param {*} candidate_manifest 
 * @param {*} token_kind 
 * @param {*} receiver_id 
 */
export async function nft_mint(title, description, media, media_CID, candidate_name, candidate_manifest, token_kind, receiver_id) {
  // mint
  await window.contract.nft_mint(
    {
      metadata: {
        title: title,
        description: description,
        media: media,
        media_CID: media_CID,
        candidate_name: candidate_name,
        candidate_manifest: candidate_manifest,
        token_kind: token_kind
      },
      receiver_id: receiver_id,
    },
    300000000000000, // attached GAS (optional)
    new BN("1000000000000000000000000")
  )
}

/**
 * NFT Transfer
 * @param {*} receiver_id 
 * @param {*} token_id 
 */
export async function nft_transfer(receiver_id, token_id) {
  await window.contract.nft_transfer(
    {
      receiver_id: receiver_id,
      token_id: token_id
    },
    300000000000000, // attached GAS (optional)
    new BN("1")// deposit yoctoNEAR
  )
}

/**
 * add like function
 * @param {*} token_id 
 */
export async function nft_add_likes_to_candidate(token_id) {
  await window.contract.nft_add_likes_to_candidate(
    { token_id: token_id }
  )
}

/**
 * get NFT metadata function 
 * @returns metadata
 */
export async function nft_metadata() {
  let contract_metadata = await window.contract.nft_metadata()
  return contract_metadata;
}

/**
 * get token kind list
 * @param {*} token_kind 
 * @returns 
 */
export async function nft_tokens_for_kind(token_kind) {
  let tokens_list = await window.contract.nft_tokens_for_kind(
    {
      token_kind: token_kind
    }
  )
  return tokens_list
}

/**
 * get num of like function
 * @param {*} token_id 
 * @returns 
 */
export async function nft_return_candidate_likes(token_id) {
  let num_of_likes = await window.contract.nft_return_candidate_likes(
    {
      token_id: token_id
    }
  )

  return num_of_likes
}

/**
 * check vote status
 * @param {*} voter_id 
 * @returns 
 */
export async function check_voter_has_been_added(voter_id) {
  return await window.contract.check_voter_has_been_added(
    { voter_id: voter_id }
  )
}

/**
 * check vote status
 * @param {*} voter_id 
 * @returns 
 */
export async function check_voter_has_voted(voter_id) {
  return await window.contract.check_voter_has_voted(
    { voter_id: voter_id }
  )
}

/**
 * vote function
 * @param {*} voter_id 
 * @returns 
 */
export async function voter_voted(voter_id) {
  return await window.contract.voter_voted(
    { voter_id: voter_id }
  )
}

/**
 * check election status
 * @returns 
 */
export async function if_election_closed() {
  return await window.contract.if_election_closed()
}

/**
 * close election
 */
export async function close_election() {
  await window.contract.close_election()
}

/**
 * reopen election
 */
export async function reopen_election() {
  await window.contract.reopen_election()
}
'''
'''--- near-election-dapp/frontend/frontend/assets/js/ui-components.js ---
import { login, logout } from './near/utils';
import React from 'react';

export function SignInPrompt({greeting}) {
  return (
    <main>
      <h1>
        The contract says: <span className="greeting">{greeting}</span>
      </h1>
      <h3>
        Welcome to NEAR!
      </h3>
      <p>
        Your contract is storing a greeting message in the NEAR blockchain. To
        change it you need to sign in using the NEAR Wallet. It is very simple,
        just use the button below.
      </p>
      <p>
        Do not worry, this app runs in the test network ("testnet"). It works
        just like the main network ("mainnet"), but using NEAR Tokens that are
        only for testing!
      </p>
      <br/>
      <p style={{ textAlign: 'center' }}>
        <button onClick={signInWithNearWallet}>Sign in with NEAR Wallet</button>
      </p>
    </main>
  );
}

export function SignOutButton({accountId}) {
  return (
    <button style={{ float: 'right' }} onClick={signOutNearWallet}>
      Sign out {accountId}
    </button>
  );
}

export function EducationalText() {
  return (
    <>
      <p>
        Look at that! A Hello World app! This greeting is stored on the NEAR blockchain. Check it out:
      </p>
      <ol>
        <li>
          Look in <code>src/App.js</code> and <code>src/utils.js</code> – you'll see <code>get_greeting</code> and <code>set_greeting</code> being called on <code>contract</code>. What's this?
        </li>
        <li>
          Ultimately, this <code>contract</code> code is defined in <code>assembly/main.ts</code> – this is the source code for your <a target="_blank" rel="noreferrer" href="https://docs.near.org/docs/develop/contracts/overview">smart contract</a>.</li>
        <li>
          When you run <code>npm run dev</code>, the code in <code>assembly/main.ts</code> gets deployed to the NEAR testnet. You can see how this happens by looking in <code>package.json</code> at the <code>scripts</code> section to find the <code>dev</code> command.</li>
      </ol>
      <hr />
      <p>
        To keep learning, check out <a target="_blank" rel="noreferrer" href="https://docs.near.org">the NEAR docs</a> or look through some <a target="_blank" rel="noreferrer" href="https://examples.near.org">example apps</a>.
      </p>
    </>
  );
}
'''
'''--- near-election-dapp/frontend/frontend/assets/pages/candidate.js ---
import React, { useState } from "react";
import Title from "../components/title";
import Input from "../components/input_form";
import { nft_mint } from '../js/near/utils'

/**
 * Candidate component
 */
const Candidate = () => {
    // state variable
    const [inputCID, setInputCID] = useState("");
    const [inputName, setInputName] = useState("");
    const [inputManifest, setInputManifest] = useState("");

    /**
     * add candidate info
     */
    const addCandidate = async () => {
        // mint  nft
        await nft_mint(
            `${inputName}(candidate)`, 
            "", 
            `https://gateway.pinata.cloud/ipfs/${inputCID}`, 
            inputCID, 
            inputName, 
            inputManifest, 
            "candidate", 
            process.env.CONTRACT_NAME
        );
        setInputCID("");
        setInputName("");
        setInputManifest("");
        alert("Candidate's NFT has minted! Let's Check it at Home screen!")
    }

    return (
        <div className="grid place-items-center w-full">
            <Title name="Add Candidate" />
            <div className="my-3 text-2xl text-red-400">Add candidate who you think must be a leader!</div>
            <Input 
                title="Image URI(IPFS Content CID)" 
                hint="QmT..." 
                className="mb-3" 
                input={inputCID} 
                setInput={(event) => setInputCID(event.target.value)} 
            />
            <div className="mb-6"></div>
            <Input 
                title="Name" 
                hint="Robert Downey Jr." 
                input={inputName} 
                setInput={(event) => setInputName(event.target.value)}
            />
            <div className="mb-6"></div>
            <Input 
                title="Manifest" 
                hint="I'm gonna prosper this city with web3 tech!" 
                input={inputManifest} 
                setInput={(event) => setInputManifest(event.target.value)} 
            />
            <div className="mb-6"></div>
            <button 
                className="button" 
                onClick={async () => addCandidate()}
            >
                Add
            </button>
        </div>
    )
}

export default Candidate;
'''
'''--- near-election-dapp/frontend/frontend/assets/pages/home.js ---
import React, { useEffect, useState } from "react";
import {
    nft_transfer, 
    nft_add_likes_to_candidate, 
    nft_tokens_for_kind,
    nft_return_candidate_likes, 
    check_voter_has_been_added, 
    check_voter_has_voted,
    voter_voted, 
    close_election, 
    if_election_closed, 
    reopen_election,
} from '../js/near/utils'
import CandidateCard from "../components/candidate_card";
import LikeIcon from '../img/like_icon.png';

// enum of state
const State = {
    Fetching: "fetching",
    Fetched: "fetched",
    Open: "open",
    Closed: "closed"
}

/**
 * Home component
 */
const Home = () => {
    // state variable
    const [candidateInfoList, setCandidateInfoList] = useState();
    const [candidateLikesList] = useState([]);
    const [state, setState] = useState("fetching");

    // hook
    useEffect(() => {
        const init = async() => {
            // call nft_tokens_for_kind function
            await nft_tokens_for_kind("candidate").then(value => {
                setCandidateInfoList(value);
                setState("fetched");
            });
        };
        init();
    }, []);

    /**
     * vote function
     */
     const vote = (token_id) => {
        //check if user has already voted
        check_voter_has_voted(window.accountId).then(value => {
            if (Boolean(value)) {
                alert("You have already voted!")
                return
            }

            // check if user has vote ticket
            check_voter_has_been_added(window.accountId).then(value => {
                let tokenIdOfVoter = parseFloat(value);
                if (tokenIdOfVoter == 0) {
                    alert("You don't have vote ticket! Please ask deployer to give it to you.")
                    return
                }
                // confirm if user really vote to specified candidate
                let isSure = confirm("Once you vote, you can't change selected candidate. Are you OK?");
                if (!isSure) {
                    return
                }
                // execute transfer function
                nft_transfer(process.env.CONTRACT_NAME, tokenIdOfVoter);
                // add vote to specified candidate
                nft_add_likes_to_candidate(token_id);
                //add user ID to voted-list
                voter_voted(window.accountId);
            })
        })
    }

    /**
     * cardsInCaseOpen component
     */
    const cardsInCaseOpen = () => {
        let candidateCardList = [];
        for (let i = 0; i < candidateInfoList.length; i++) {
            // format data for rendering
            candidateCardList.push(
                <div className="items-center">
                    <CandidateCard 
                        CID={candidateInfoList[i].metadata.media_CID} 
                        name={candidateInfoList[i].metadata.candidate_name} 
                        manifest={candidateInfoList[i].metadata.candidate_manifest} 
                    />
                    <div className="center text-xl items-center">
                        <img src={LikeIcon} className="object-cover h-5 w-5 mr-2" />
                        <p className="mr-2">{(candidateLikesList[i])}</p>
                        <button 
                            value={candidateInfoList[i].metadata.token_id} 
                            onClick={(event) => vote(parseInt(event.target.value))} 
                            className="vote_button hover:skew-1"
                        >
                            Vote!
                        </button>
                    </div>
                </div>
            )
        }
        return candidateCardList
    }

    /**
     * cardsInCaseClosed component
     */
    const cardsInCaseClosed = () => {
        let candidateCardList = [];
        let mostVotedNum = candidateLikesList.reduce((a, b) => { return Math.max(a, b) });
        // format data for rendering
        for (let i = 0; i < candidateInfoList.length; i++) {
            if (candidateLikesList[i] == mostVotedNum) {
                // for winner candidate rendering
                candidateCardList.push(
                    <div className="items-center">
                        <div className="text-2xl shadow-rose-600 center font-semibold text-red-700">Won!</div>
                        <CandidateCard 
                            CID={candidateInfoList[i].metadata.media_CID} 
                            name={candidateInfoList[i].metadata.candidate_name} 
                            manifest={candidateInfoList[i].metadata.candidate_manifest} 
                        />
                        <div className="center text-xl items-center">
                            <img src={LikeIcon} className="object-cover h-5 w-5 mr-2" />
                            <p className="mr-2">{(candidateLikesList[i])}</p>
                        </div>
                    </div>

                )
            } else {
                // for other candidate rendering
                candidateCardList.push(
                    <div className="items-center opacity-20">
                        <div className="pt-7"></div>
                        <CandidateCard 
                            CID={candidateInfoList[i].metadata.media_CID} 
                            name={candidateInfoList[i].metadata.candidate_name} 
                            manifest={candidateInfoList[i].metadata.candidate_manifest} 
                        />
                        <div className="center text-xl items-center">
                            <img src={LikeIcon} className="object-cover h-5 w-5 mr-2" />
                            <p className="mr-2">{(candidateLikesList[i])}</p>
                        </div>
                    </div>

                )
            }

        }
        return candidateCardList
    }

    /**
     * getCandidateLikes function 
     */
    const getCandidateLikes = async () => {
        // get num of likes for each candidate
        for (let i = 0; i < candidateInfoList.length; i++) {
            // execute nft_return_candidate_likes function
            await nft_return_candidate_likes(candidateInfoList[i].metadata.token_id).then(value => {
                candidateLikesList.push(value);
            })
        }

        // check if election is closed
        let isClosed = await if_election_closed();
        console.log(isClosed);

        if (isClosed) {
            setState("closed");
        } else {
            setState("open")
        }
    }

    /**
     * Close button component
     */
    const closeButton = () => {
        // check if user is contract deployer
        if (window.accountId !== process.env.CONTRACT_NAME) {
            return
        }

        return (
            <button 
                className="close_button hover:skew-1 h-10 bg-red-600 mb-3" 
                onClick={() => {
                    // confirm that user really close this election
                    let isSureToClose = confirm("Are you sure to close this election?");
                    if (isSureToClose) {
                        // execute close_election function
                        close_election()
                        // change state to closed
                        setState("closed")
                    }
                }}
            >
                Close Election
            </button>
        );
    }

    /**
     * Reopme button component
     */
    const reopenButton = () => {
        // check if user is contract deployer
        if (window.accountId !== process.env.CONTRACT_NAME) {
            return
        }

        return (
            <button 
                className="close_button hover:skew-1 h-10 bg-red-600 mb-3" 
                onClick={() => {
                    let isSureToClose = confirm("Are you sure to reopen this election?");
                    if (isSureToClose) {
                        // execute reopen_election function
                        reopen_election()
                        // change state to open
                        setState("open")
                    }
                }}
            >
                Reopen Election
            </button>
        );
    }

    /**
     * messageToWait component
     */
    const messageToWait = () => {
        return <div className="grid h-screen place-items-center text-3xl">Fetching NFTs of candidates...</div>
    }

    switch (state) {
        case State.Fetching:
            return <div>{messageToWait()}</div>
        case State.Fetched:
            // get likes
            getCandidateLikes();
            return <div>{messageToWait()}</div>
        case State.Open:
            return (
                <div>
                    <div className="center">{closeButton()}</div>
                    <div className="grid grid-cols-3 gap-10">
                        {cardsInCaseOpen()}
                    </div>
                </div>
            )
        case State.Closed:
            return (
                <div>
                    <div className="center">{reopenButton()}</div>
                    <div className="grid grid-cols-3 gap-10">
                        {cardsInCaseClosed()}
                    </div>
                </div>
            )
    }
}

export default Home;
'''
'''--- near-election-dapp/frontend/frontend/assets/pages/voter.js ---
import React, { useState } from "react";
import Title from "../components/title";
import Input from "../components/input_form";
import { nft_mint, check_voter_has_been_added } from '../js/near/utils'

/**
 * Voter component
 */
const Voter = () => {
    // state variable
    const [inputId, setInputId] = useState("");

    /**
     * mint function
     */
    const mint = async () => {
        // check
        if (window.accountId !== process.env.CONTRACT_NAME) {
            alert("You are not contract deployer, so you can't add voter")
            return
        }

        // check if a ticket minted to user before
        const isMinted = await check_voter_has_been_added(`${inputId}`);
        if (isMinted !== 0) {
            alert("You've already got vote ticket or voted and used it!")
            return
        }
        // mint NFT
        await nft_mint(
            "Vote Ticket", 
            "", 
            "https://gateway.pinata.cloud/ipfs/QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx", 
            "QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx", 
            "Vote Ticket", 
            "You can vote with this ticket! But remember that you can do it just once.", 
            "vote", 
            `${inputId}`
        );
        alert(`Vote ticket is minted to ${inputId}!`);
        setInputId("");
    }

    return (
        <div className="grid place-items-center w-full">
            <Title name="Add Voter" />
            <div className="text-lg">※Only contract deployer can add voter.</div>
            <div className="mb-24"></div>
            <Input 
                title="Wallet ID" 
                hint="0x..." 
                input={inputId} 
                type="text" 
                setInput={(event) => setInputId(event.target.value)}
            />
            <div className="mb-24"></div>
            <button className="button" onClick={() => mint()}>Add</button>
        </div>
    )
}

export default Voter;
'''
'''--- near-election-dapp/frontend/frontend/dist/index.050cf18d.js ---
(function(){function $parcel$export(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function $parcel$interopDefault(e){return e&&e.__esModule?e.default:e}var $parcel$global="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},$parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequiref931;null==parcelRequire&&(parcelRequire=function(e){if(e in $parcel$modules)return $parcel$modules[e].exports;if(e in $parcel$inits){var t=$parcel$inits[e];delete $parcel$inits[e];var r={id:e,exports:{}};return $parcel$modules[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n},parcelRequire.register=function(e,t){$parcel$inits[e]=t},$parcel$global.parcelRequiref931=parcelRequire),parcelRequire.register("lGKbD",(function(e,t){var r,n;$parcel$export(e.exports,"register",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"resolve",(function(){return n}),(function(e){return n=e}));var a={};r=function(e){for(var t=Object.keys(e),r=0;r<t.length;r++)a[t[r]]=e[t[r]]},n=function(e){var t=a[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),parcelRequire.register("a58XM",(function(e,t){var r,n,a;$parcel$export(e.exports,"Fragment",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"jsx",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"jsxs",(function(){return a}),(function(e){return a=e}));var o=parcelRequire("6cds3"),i=Symbol.for("react.element"),u=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function f(e,t,r){var n,a={},o=null,u=null;for(n in void 0!==r&&(o=""+r),void 0!==t.key&&(o=""+t.key),void 0!==t.ref&&(u=t.ref),t)c.call(t,n)&&!l.hasOwnProperty(n)&&(a[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===a[n]&&(a[n]=t[n]);return{$$typeof:i,type:e,key:o,ref:u,props:a,_owner:s.current}}r=u,n=f,a=f})),parcelRequire.register("6cds3",(function(e,t){"use strict";e.exports=parcelRequire("gx6CV")})),parcelRequire.register("gx6CV",(function(e,t){$parcel$export(e.exports,"Children",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"Component",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"Fragment",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"Profiler",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"PureComponent",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"StrictMode",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"Suspense",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"cloneElement",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"createContext",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"createElement",(function(){return p}),(function(e){return p=e})),$parcel$export(e.exports,"createFactory",(function(){return d}),(function(e){return d=e})),$parcel$export(e.exports,"createRef",(function(){return h}),(function(e){return h=e})),$parcel$export(e.exports,"forwardRef",(function(){return v}),(function(e){return v=e})),$parcel$export(e.exports,"isValidElement",(function(){return m}),(function(e){return m=e})),$parcel$export(e.exports,"lazy",(function(){return y}),(function(e){return y=e})),$parcel$export(e.exports,"memo",(function(){return b}),(function(e){return b=e})),$parcel$export(e.exports,"startTransition",(function(){return g}),(function(e){return g=e})),$parcel$export(e.exports,"unstable_act",(function(){return $}),(function(e){return $=e})),$parcel$export(e.exports,"useCallback",(function(){return w}),(function(e){return w=e})),$parcel$export(e.exports,"useContext",(function(){return x}),(function(e){return x=e})),$parcel$export(e.exports,"useDebugValue",(function(){return k}),(function(e){return k=e})),$parcel$export(e.exports,"useDeferredValue",(function(){return _}),(function(e){return _=e})),$parcel$export(e.exports,"useEffect",(function(){return S}),(function(e){return S=e})),$parcel$export(e.exports,"useId",(function(){return E}),(function(e){return E=e})),$parcel$export(e.exports,"useImperativeHandle",(function(){return R}),(function(e){return R=e})),$parcel$export(e.exports,"useInsertionEffect",(function(){return A}),(function(e){return A=e})),$parcel$export(e.exports,"useLayoutEffect",(function(){return M}),(function(e){return M=e})),$parcel$export(e.exports,"useMemo",(function(){return C}),(function(e){return C=e})),$parcel$export(e.exports,"useReducer",(function(){return T}),(function(e){return T=e})),$parcel$export(e.exports,"useRef",(function(){return I}),(function(e){return I=e})),$parcel$export(e.exports,"useState",(function(){return P}),(function(e){return P=e})),$parcel$export(e.exports,"useSyncExternalStore",(function(){return N}),(function(e){return N=e})),$parcel$export(e.exports,"useTransition",(function(){return O}),(function(e){return O=e})),$parcel$export(e.exports,"version",(function(){return D}),(function(e){return D=e}));var r,n,a,o,i,u,c,s,l,f,p,d,h,v,m,y,b,g,$,w,x,k,_,S,E,R,A,M,C,T,I,P,N,O,D,q=parcelRequire("dTym2"),U=Symbol.for("react.element"),j=Symbol.for("react.portal"),L=Symbol.for("react.fragment"),B=Symbol.for("react.strict_mode"),F=Symbol.for("react.profiler"),z=Symbol.for("react.provider"),K=Symbol.for("react.context"),H=Symbol.for("react.forward_ref"),W=Symbol.for("react.suspense"),V=Symbol.for("react.memo"),X=Symbol.for("react.lazy"),G=Symbol.iterator;var Z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},J=Object.assign,Y={};function Q(e,t,r){this.props=e,this.context=t,this.refs=Y,this.updater=r||Z}function ee(){}function te(e,t,r){this.props=e,this.context=t,this.refs=Y,this.updater=r||Z}Q.prototype.isReactComponent={},Q.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},Q.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},ee.prototype=Q.prototype;var re=te.prototype=new ee;re.constructor=te,J(re,Q.prototype),re.isPureReactComponent=!0;var ne=Array.isArray,ae=Object.prototype.hasOwnProperty,oe={current:null},ie={key:!0,ref:!0,__self:!0,__source:!0};function ue(e,t,r){var n,a={},o=null,i=null;if(null!=t)for(n in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)ae.call(t,n)&&!ie.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:U,type:e,key:o,ref:i,props:a,_owner:oe.current}}function ce(e){return"object"==typeof e&&null!==e&&e.$$typeof===U}var se=/\/+/g;function le(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function fe(e,t,r,n,a){var o=void 0===e?"undefined":(0,q.default)(e);"undefined"!==o&&"boolean"!==o||(e=null);var i=!1;if(null===e)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case U:case j:i=!0}}if(i)return a=a(i=e),e=""===n?"."+le(i,0):n,ne(a)?(r="",null!=e&&(r=e.replace(se,"$&/")+"/"),fe(a,t,r,"",(function(e){return e}))):null!=a&&(ce(a)&&(a=function(e,t){return{$$typeof:U,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,r+(!a.key||i&&i.key===a.key?"":(""+a.key).replace(se,"$&/")+"/")+e)),t.push(a)),1;if(i=0,n=""===n?".":n+":",ne(e))for(var u=0;u<e.length;u++){var c=n+le(o=e[u],u);i+=fe(o,t,r,c,a)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=G&&e[G]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)i+=fe(o=o.value,t,r,c=n+le(o,u++),a);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return i}function pe(e,t,r){if(null==e)return e;var n=[],a=0;return fe(e,n,"","",(function(e){return t.call(r,e,a++)})),n}function de(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var he={current:null},ve={transition:null};r={map:pe,forEach:function(e,t,r){pe(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return pe(e,(function(){t++})),t},toArray:function(e){return pe(e,(function(e){return e}))||[]},only:function(e){if(!ce(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n=Q,a=L,o=F,i=te,u=B,c=W,s={ReactCurrentDispatcher:he,ReactCurrentBatchConfig:ve,ReactCurrentOwner:oe},l=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=J({},e.props),a=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=oe.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)ae.call(t,c)&&!ie.hasOwnProperty(c)&&(n[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)n.children=r;else if(1<c){u=Array(c);for(var s=0;s<c;s++)u[s]=arguments[s+2];n.children=u}return{$$typeof:U,type:e.type,key:a,ref:o,props:n,_owner:i}},f=function(e){return(e={$$typeof:K,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:z,_context:e},e.Consumer=e},p=ue,d=function(e){var t=ue.bind(null,e);return t.type=e,t},h=function(){return{current:null}},v=function(e){return{$$typeof:H,render:e}},m=ce,y=function(e){return{$$typeof:X,_payload:{_status:-1,_result:e},_init:de}},b=function(e,t){return{$$typeof:V,type:e,compare:void 0===t?null:t}},g=function(e){var t=ve.transition;ve.transition={};try{e()}finally{ve.transition=t}},$=function(){throw Error("act(...) is not supported in production builds of React.")},w=function(e,t){return he.current.useCallback(e,t)},x=function(e){return he.current.useContext(e)},k=function(){},_=function(e){return he.current.useDeferredValue(e)},S=function(e,t){return he.current.useEffect(e,t)},E=function(){return he.current.useId()},R=function(e,t,r){return he.current.useImperativeHandle(e,t,r)},A=function(e,t){return he.current.useInsertionEffect(e,t)},M=function(e,t){return he.current.useLayoutEffect(e,t)},C=function(e,t){return he.current.useMemo(e,t)},T=function(e,t,r){return he.current.useReducer(e,t,r)},I=function(e){return he.current.useRef(e)},P=function(e){return he.current.useState(e)},N=function(e,t,r){return he.current.useSyncExternalStore(e,t,r)},O=function(){return he.current.useTransition()},D="18.2.0"})),parcelRequire.register("dTym2",(function(e,t){function r(e){return e&&e.constructor===Symbol?"symbol":typeof e}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("jZA9I",(function(e,t){$parcel$export(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"createPortal",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"createRoot",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"findDOMNode",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"flushSync",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"hydrate",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"hydrateRoot",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"render",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"unmountComponentAtNode",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"unstable_batchedUpdates",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"unstable_renderSubtreeIntoContainer",(function(){return p}),(function(e){return p=e})),$parcel$export(e.exports,"version",(function(){return d}),(function(e){return d=e}));var r,n,a,o,i,u,c,s,l,f,p,d,h=parcelRequire("dTym2"),v=parcelRequire("6cds3"),m=parcelRequire("1c9zD");function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b=new Set,g={};function $(e,t){w(e,t),w(e+"Capture",t)}function w(e,t){for(g[e]=t,e=0;e<t.length;e++)b.add(t[e])}var x=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),k=Object.prototype.hasOwnProperty,_=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,S={},E={};function R(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(void 0===t?"undefined":(0,h.default)(t)){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function A(e,t,r,n,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=a,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var M={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){M[e]=new A(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];M[t]=new A(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){M[e]=new A(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){M[e]=new A(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){M[e]=new A(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){M[e]=new A(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){M[e]=new A(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){M[e]=new A(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){M[e]=new A(e,5,!1,e.toLowerCase(),null,!1,!1)}));var C=/[\-:]([a-z])/g;function T(e){return e[1].toUpperCase()}function I(e,t,r,n){var a=M.hasOwnProperty(t)?M[t]:null;(null!==a?0!==a.type:n||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(R(t,r,a,n)&&(r=null),n||null===a?function(e){return!!k.call(E,e)||!k.call(S,e)&&(_.test(e)?E[e]=!0:(S[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):a.mustUseProperty?e[a.propertyName]=null===r?3!==a.type&&"":r:(t=a.attributeName,n=a.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(a=a.type)||4===a&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(C,T);M[t]=new A(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(C,T);M[t]=new A(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(C,T);M[t]=new A(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){M[e]=new A(e,1,!1,e.toLowerCase(),null,!1,!1)})),M.xlinkHref=new A("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){M[e]=new A(e,1,!1,e.toLowerCase(),null,!0,!0)}));var P=v.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,N=Symbol.for("react.element"),O=Symbol.for("react.portal"),D=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),U=Symbol.for("react.profiler"),j=Symbol.for("react.provider"),L=Symbol.for("react.context"),B=Symbol.for("react.forward_ref"),F=Symbol.for("react.suspense"),z=Symbol.for("react.suspense_list"),K=Symbol.for("react.memo"),H=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var W=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var V=Symbol.iterator;function X(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=V&&e[V]||e["@@iterator"])?e:null}var G,Z=Object.assign;function J(e){if(void 0===G)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);G=t&&t[1]||""}return"\n"+G+e}var Y=!1;function Q(e,t){if(!e||Y)return"";Y=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(t){if(t&&n&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=n.stack.split("\n"),i=a.length-1,u=o.length-1;1<=i&&0<=u&&a[i]!==o[u];)u--;for(;1<=i&&0<=u;i--,u--)if(a[i]!==o[u]){if(1!==i||1!==u)do{if(i--,0>--u||a[i]!==o[u]){var c="\n"+a[i].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=i&&0<=u);break}}}finally{Y=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?J(e):""}function ee(e){switch(e.tag){case 5:return J(e.type);case 16:return J("Lazy");case 13:return J("Suspense");case 19:return J("SuspenseList");case 0:case 2:case 15:return e=Q(e.type,!1);case 11:return e=Q(e.type.render,!1);case 1:return e=Q(e.type,!0);default:return""}}function te(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case D:return"Fragment";case O:return"Portal";case U:return"Profiler";case q:return"StrictMode";case F:return"Suspense";case z:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case L:return(e.displayName||"Context")+".Consumer";case j:return(e._context.displayName||"Context")+".Provider";case B:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case K:return null!==(t=e.displayName||null)?t:te(e.type)||"Memo";case H:t=e._payload,e=e._init;try{return te(e(t))}catch(e){}}return null}function re(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return te(t);case 8:return t===q?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function ne(e){switch(void 0===e?"undefined":(0,h.default)(e)){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function ae(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function oe(e){e._valueTracker||(e._valueTracker=function(e){var t=ae(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var a=r.get,o=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){n=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ie(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=ae(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function ue(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function ce(e,t){var r=t.checked;return Z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function se(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=ne(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function le(e,t){null!=(t=t.checked)&&I(e,"checked",t,!1)}function fe(e,t){le(e,t);var r=ne(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?de(e,t.type,r):t.hasOwnProperty("defaultValue")&&de(e,t.type,ne(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function pe(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function de(e,t,r){"number"===t&&ue(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var he=Array.isArray;function ve(e,t,r,n){if(e=e.options,t){t={};for(var a=0;a<r.length;a++)t["$"+r[a]]=!0;for(r=0;r<e.length;r++)a=t.hasOwnProperty("$"+e[r].value),e[r].selected!==a&&(e[r].selected=a),a&&n&&(e[r].defaultSelected=!0)}else{for(r=""+ne(r),t=null,a=0;a<e.length;a++){if(e[a].value===r)return e[a].selected=!0,void(n&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function me(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(y(91));return Z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ye(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(y(92));if(he(r)){if(1<r.length)throw Error(y(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:ne(r)}}function be(e,t){var r=ne(t.value),n=ne(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ge(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function $e(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function we(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?$e(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var xe,ke,_e=(ke=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((xe=xe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=xe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ke(e,t)}))}:ke);function Se(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var Ee={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Re=["Webkit","ms","Moz","O"];function Ae(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||Ee.hasOwnProperty(e)&&Ee[e]?(""+t).trim():t+"px"}function Me(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),a=Ae(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,a):e[r]=a}}Object.keys(Ee).forEach((function(e){Re.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Ee[t]=Ee[e]}))}));var Ce=Z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Te(e,t){if(t){if(Ce[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(y(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(y(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(y(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(y(62))}}function Ie(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Pe=null;function Ne(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Oe=null,De=null,qe=null;function Ue(e){if(e=Ia(e)){if("function"!=typeof Oe)throw Error(y(280));var t=e.stateNode;t&&(t=Na(t),Oe(e.stateNode,e.type,t))}}function je(e){De?qe?qe.push(e):qe=[e]:De=e}function Le(){if(De){var e=De,t=qe;if(qe=De=null,Ue(e),t)for(e=0;e<t.length;e++)Ue(t[e])}}function Be(e,t){return e(t)}function Fe(){}var ze=!1;function Ke(e,t,r){if(ze)return e(t,r);ze=!0;try{return Be(e,t,r)}finally{ze=!1,(null!==De||null!==qe)&&(Fe(),Le())}}function He(e,t){var r=e.stateNode;if(null===r)return null;var n=Na(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(y(231,t,void 0===r?"undefined":(0,h.default)(r)));return r}var We=!1;if(x)try{var Ve={};Object.defineProperty(Ve,"passive",{get:function(){We=!0}}),window.addEventListener("test",Ve,Ve),window.removeEventListener("test",Ve,Ve)}catch(ke){We=!1}function Xe(e,t,r,n,a,o,i,u,c){var s=Array.prototype.slice.call(arguments,3);try{t.apply(r,s)}catch(e){this.onError(e)}}var Ge=!1,Ze=null,Je=!1,Ye=null,Qe={onError:function(e){Ge=!0,Ze=e}};function et(e,t,r,n,a,o,i,u,c){Ge=!1,Ze=null,Xe.apply(Qe,arguments)}function tt(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function rt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function nt(e){if(tt(e)!==e)throw Error(y(188))}function at(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=tt(e)))throw Error(y(188));return t!==e?null:e}for(var r=e,n=t;;){var a=r.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(n=a.return)){r=n;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===r)return nt(a),e;if(o===n)return nt(a),t;o=o.sibling}throw Error(y(188))}if(r.return!==n.return)r=a,n=o;else{for(var i=!1,u=a.child;u;){if(u===r){i=!0,r=a,n=o;break}if(u===n){i=!0,n=a,r=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===r){i=!0,r=o,n=a;break}if(u===n){i=!0,n=o,r=a;break}u=u.sibling}if(!i)throw Error(y(189))}}if(r.alternate!==n)throw Error(y(190))}if(3!==r.tag)throw Error(y(188));return r.stateNode.current===r?e:t}(e))?ot(e):null}function ot(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=ot(e);if(null!==t)return t;e=e.sibling}return null}var it=m.unstable_scheduleCallback,ut=m.unstable_cancelCallback,ct=m.unstable_shouldYield,st=m.unstable_requestPaint,lt=m.unstable_now,ft=m.unstable_getCurrentPriorityLevel,pt=m.unstable_ImmediatePriority,dt=m.unstable_UserBlockingPriority,ht=m.unstable_NormalPriority,vt=m.unstable_LowPriority,mt=m.unstable_IdlePriority,yt=null,bt=null;var gt=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-($t(e)/wt|0)|0},$t=Math.log,wt=Math.LN2;var xt=64,kt=4194304;function _t(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function St(e,t){var r=e.pendingLanes;if(0===r)return 0;var n=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&r;if(0!==i){var u=i&~a;0!==u?n=_t(u):0!==(o&=i)&&(n=_t(o))}else 0!==(i=r&~a)?n=_t(i):0!==o&&(n=_t(o));if(0===n)return 0;if(0!==t&&t!==n&&0==(t&a)&&((a=n&-n)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&n)&&(n|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)a=1<<(r=31-gt(t)),n|=e[r],t&=~a;return n}function Et(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function Rt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function At(){var e=xt;return 0==(4194240&(xt<<=1))&&(xt=64),e}function Mt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Ct(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-gt(t)]=r}function Tt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-gt(r),a=1<<n;a&t|e[n]&t&&(e[n]|=t),r&=~a}}var It=0;function Pt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Nt,Ot,Dt,qt,Ut,jt=!1,Lt=[],Bt=null,Ft=null,zt=null,Kt=new Map,Ht=new Map,Wt=[],Vt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Xt(e,t){switch(e){case"focusin":case"focusout":Bt=null;break;case"dragenter":case"dragleave":Ft=null;break;case"mouseover":case"mouseout":zt=null;break;case"pointerover":case"pointerout":Kt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ht.delete(t.pointerId)}}function Gt(e,t,r,n,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:o,targetContainers:[a]},null!==t&&(null!==(t=Ia(t))&&Ot(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Zt(e){var t=Ta(e.target);if(null!==t){var r=tt(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=rt(r)))return e.blockedOn=t,void Ut(e.priority,(function(){Dt(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Jt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=cr(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=Ia(r))&&Ot(t),e.blockedOn=r,!1;var n=new(r=e.nativeEvent).constructor(r.type,r);Pe=n,r.target.dispatchEvent(n),Pe=null,t.shift()}return!0}function Yt(e,t,r){Jt(e)&&r.delete(t)}function Qt(){jt=!1,null!==Bt&&Jt(Bt)&&(Bt=null),null!==Ft&&Jt(Ft)&&(Ft=null),null!==zt&&Jt(zt)&&(zt=null),Kt.forEach(Yt),Ht.forEach(Yt)}function er(e,t){e.blockedOn===t&&(e.blockedOn=null,jt||(jt=!0,m.unstable_scheduleCallback(m.unstable_NormalPriority,Qt)))}function tr(e){var t=function(t){return er(t,e)};if(0<Lt.length){er(Lt[0],e);for(var r=1;r<Lt.length;r++){var n=Lt[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==Bt&&er(Bt,e),null!==Ft&&er(Ft,e),null!==zt&&er(zt,e),Kt.forEach(t),Ht.forEach(t),r=0;r<Wt.length;r++)(n=Wt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<Wt.length&&null===(r=Wt[0]).blockedOn;)Zt(r),null===r.blockedOn&&Wt.shift()}var rr=P.ReactCurrentBatchConfig,nr=!0;function ar(e,t,r,n){var a=It,o=rr.transition;rr.transition=null;try{It=1,ir(e,t,r,n)}finally{It=a,rr.transition=o}}function or(e,t,r,n){var a=It,o=rr.transition;rr.transition=null;try{It=4,ir(e,t,r,n)}finally{It=a,rr.transition=o}}function ir(e,t,r,n){if(nr){var a=cr(e,t,r,n);if(null===a)na(e,t,n,ur,r),Xt(e,n);else if(function(e,t,r,n,a){switch(t){case"focusin":return Bt=Gt(Bt,e,t,r,n,a),!0;case"dragenter":return Ft=Gt(Ft,e,t,r,n,a),!0;case"mouseover":return zt=Gt(zt,e,t,r,n,a),!0;case"pointerover":var o=a.pointerId;return Kt.set(o,Gt(Kt.get(o)||null,e,t,r,n,a)),!0;case"gotpointercapture":return o=a.pointerId,Ht.set(o,Gt(Ht.get(o)||null,e,t,r,n,a)),!0}return!1}(a,e,t,r,n))n.stopPropagation();else if(Xt(e,n),4&t&&-1<Vt.indexOf(e)){for(;null!==a;){var o=Ia(a);if(null!==o&&Nt(o),null===(o=cr(e,t,r,n))&&na(e,t,n,ur,r),o===a)break;a=o}null!==a&&n.stopPropagation()}else na(e,t,n,null,r)}}var ur=null;function cr(e,t,r,n){if(ur=null,null!==(e=Ta(e=Ne(n))))if(null===(t=tt(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=rt(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return ur=e,null}function sr(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ft()){case pt:return 1;case dt:return 4;case ht:case vt:return 16;case mt:return 536870912;default:return 16}default:return 16}}var lr=null,fr=null,pr=null;function dr(){if(pr)return pr;var e,t,r=fr,n=r.length,a="value"in lr?lr.value:lr.textContent,o=a.length;for(e=0;e<n&&r[e]===a[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===a[o-t];t++);return pr=a.slice(e,1<t?1-t:void 0)}function hr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function vr(){return!0}function mr(){return!1}function yr(e){var t=function(t,r,n,a,o){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?vr:mr,this.isPropagationStopped=mr,this};return Z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==(0,h.default)(e.returnValue)&&(e.returnValue=!1),this.isDefaultPrevented=vr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==(0,h.default)(e.cancelBubble)&&(e.cancelBubble=!0),this.isPropagationStopped=vr)},persist:function(){},isPersistent:vr}),t}var br,gr,$r,wr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},xr=yr(wr),kr=Z({},wr,{view:0,detail:0}),_r=yr(kr),Sr=Z({},kr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:qr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==$r&&($r&&"mousemove"===e.type?(br=e.screenX-$r.screenX,gr=e.screenY-$r.screenY):gr=br=0,$r=e),br)},movementY:function(e){return"movementY"in e?e.movementY:gr}}),Er=yr(Sr),Rr=yr(Z({},Sr,{dataTransfer:0})),Ar=yr(Z({},kr,{relatedTarget:0})),Mr=yr(Z({},wr,{animationName:0,elapsedTime:0,pseudoElement:0})),Cr=Z({},wr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Tr=yr(Cr),Ir=yr(Z({},wr,{data:0})),Pr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Or={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Dr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Or[e])&&!!t[e]}function qr(){return Dr}var Ur=Z({},kr,{key:function(e){if(e.key){var t=Pr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=hr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Nr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:qr,charCode:function(e){return"keypress"===e.type?hr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?hr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),jr=yr(Ur),Lr=yr(Z({},Sr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Br=yr(Z({},kr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:qr})),Fr=yr(Z({},wr,{propertyName:0,elapsedTime:0,pseudoElement:0})),zr=Z({},Sr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Kr=yr(zr),Hr=[9,13,27,32],Wr=x&&"CompositionEvent"in window,Vr=null;x&&"documentMode"in document&&(Vr=document.documentMode);var Xr=x&&"TextEvent"in window&&!Vr,Gr=x&&(!Wr||Vr&&8<Vr&&11>=Vr),Zr=String.fromCharCode(32),Jr=!1;function Yr(e,t){switch(e){case"keyup":return-1!==Hr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Qr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var en=!1;var tn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function rn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!tn[e.type]:"textarea"===t}function nn(e,t,r,n){je(n),0<(t=oa(t,"onChange")).length&&(r=new xr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var an=null,on=null;function un(e){Jn(e,0)}function cn(e){if(ie(Pa(e)))return e}function sn(e,t){if("change"===e)return t}var ln=!1;if(x){var fn;if(x){var pn="oninput"in document;if(!pn){var dn=document.createElement("div");dn.setAttribute("oninput","return;"),pn="function"==typeof dn.oninput}fn=pn}else fn=!1;ln=fn&&(!document.documentMode||9<document.documentMode)}function hn(){an&&(an.detachEvent("onpropertychange",vn),on=an=null)}function vn(e){if("value"===e.propertyName&&cn(on)){var t=[];nn(t,on,e,Ne(e)),Ke(un,t)}}function mn(e,t,r){"focusin"===e?(hn(),on=r,(an=t).attachEvent("onpropertychange",vn)):"focusout"===e&&hn()}function yn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return cn(on)}function bn(e,t){if("click"===e)return cn(t)}function gn(e,t){if("input"===e||"change"===e)return cn(t)}var $n="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function wn(e,t){if($n(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var a=r[n];if(!k.call(t,a)||!$n(e[a],t[a]))return!1}return!0}function xn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function kn(e,t){var r,n=xn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=xn(n)}}function _n(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?_n(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Sn(){for(var e=window,t=ue();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=ue((e=t.contentWindow).document)}return t}function En(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Rn(e){var t=Sn(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&_n(r.ownerDocument.documentElement,r)){if(null!==n&&En(r))if(t=n.start,void 0===(e=n.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=r.textContent.length,o=Math.min(n.start,a);n=void 0===n.end?o:Math.min(n.end,a),!e.extend&&o>n&&(a=n,n=o,o=a),a=kn(r,o);var i=kn(r,n);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>n?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var An=x&&"documentMode"in document&&11>=document.documentMode,Mn=null,Cn=null,Tn=null,In=!1;function Pn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;In||null==Mn||Mn!==ue(n)||("selectionStart"in(n=Mn)&&En(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Tn&&wn(Tn,n)||(Tn=n,0<(n=oa(Cn,"onSelect")).length&&(t=new xr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=Mn)))}function Nn(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var On={animationend:Nn("Animation","AnimationEnd"),animationiteration:Nn("Animation","AnimationIteration"),animationstart:Nn("Animation","AnimationStart"),transitionend:Nn("Transition","TransitionEnd")},Dn={},qn={};function Un(e){if(Dn[e])return Dn[e];if(!On[e])return e;var t,r=On[e];for(t in r)if(r.hasOwnProperty(t)&&t in qn)return Dn[e]=r[t];return e}x&&(qn=document.createElement("div").style,"AnimationEvent"in window||(delete On.animationend.animation,delete On.animationiteration.animation,delete On.animationstart.animation),"TransitionEvent"in window||delete On.transitionend.transition);var jn=Un("animationend"),Ln=Un("animationiteration"),Bn=Un("animationstart"),Fn=Un("transitionend"),zn=new Map,Kn="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Hn(e,t){zn.set(e,t),$(t,[e])}for(var Wn=0;Wn<Kn.length;Wn++){var Vn=Kn[Wn];Hn(Vn.toLowerCase(),"on"+(Vn[0].toUpperCase()+Vn.slice(1)))}Hn(jn,"onAnimationEnd"),Hn(Ln,"onAnimationIteration"),Hn(Bn,"onAnimationStart"),Hn("dblclick","onDoubleClick"),Hn("focusin","onFocus"),Hn("focusout","onBlur"),Hn(Fn,"onTransitionEnd"),w("onMouseEnter",["mouseout","mouseover"]),w("onMouseLeave",["mouseout","mouseover"]),w("onPointerEnter",["pointerout","pointerover"]),w("onPointerLeave",["pointerout","pointerover"]),$("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),$("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),$("onBeforeInput",["compositionend","keypress","textInput","paste"]),$("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),$("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),$("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Gn=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xn));function Zn(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,a,o,i,u,c){if(et.apply(this,arguments),Ge){if(!Ge)throw Error(y(198));var s=Ze;Ge=!1,Ze=null,Je||(Je=!0,Ye=s)}}(n,t,void 0,e),e.currentTarget=null}function Jn(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var n=e[r],a=n.event;n=n.listeners;e:{var o=void 0;if(t)for(var i=n.length-1;0<=i;i--){var u=n[i],c=u.instance,s=u.currentTarget;if(u=u.listener,c!==o&&a.isPropagationStopped())break e;Zn(a,u,s),o=c}else for(i=0;i<n.length;i++){if(c=(u=n[i]).instance,s=u.currentTarget,u=u.listener,c!==o&&a.isPropagationStopped())break e;Zn(a,u,s),o=c}}}if(Je)throw e=Ye,Je=!1,Ye=null,e}function Yn(e,t){var r=t[Aa];void 0===r&&(r=t[Aa]=new Set);var n=e+"__bubble";r.has(n)||(ra(t,e,2,!1),r.add(n))}function Qn(e,t,r){var n=0;t&&(n|=4),ra(r,e,n,t)}var ea="_reactListening"+Math.random().toString(36).slice(2);function ta(e){if(!e[ea]){e[ea]=!0,b.forEach((function(t){"selectionchange"!==t&&(Gn.has(t)||Qn(t,!1,e),Qn(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[ea]||(t[ea]=!0,Qn("selectionchange",!1,t))}}function ra(e,t,r,n){switch(sr(t)){case 1:var a=ar;break;case 4:a=or;break;default:a=ir}r=a.bind(null,t,r,e),a=void 0,!We||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),n?void 0!==a?e.addEventListener(t,r,{capture:!0,passive:a}):e.addEventListener(t,r,!0):void 0!==a?e.addEventListener(t,r,{passive:a}):e.addEventListener(t,r,!1)}function na(e,t,r,n,a){var o=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var u=n.stateNode.containerInfo;if(u===a||8===u.nodeType&&u.parentNode===a)break;if(4===i)for(i=n.return;null!==i;){var c=i.tag;if((3===c||4===c)&&((c=i.stateNode.containerInfo)===a||8===c.nodeType&&c.parentNode===a))return;i=i.return}for(;null!==u;){if(null===(i=Ta(u)))return;if(5===(c=i.tag)||6===c){n=o=i;continue e}u=u.parentNode}}n=n.return}Ke((function(){var n=o,a=Ne(r),i=[];e:{var u=zn.get(e);if(void 0!==u){var c=xr,s=e;switch(e){case"keypress":if(0===hr(r))break e;case"keydown":case"keyup":c=jr;break;case"focusin":s="focus",c=Ar;break;case"focusout":s="blur",c=Ar;break;case"beforeblur":case"afterblur":c=Ar;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=Er;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=Rr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Br;break;case jn:case Ln:case Bn:c=Mr;break;case Fn:c=Fr;break;case"scroll":c=_r;break;case"wheel":c=Kr;break;case"copy":case"cut":case"paste":c=Tr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=Lr}var l=0!=(4&t),f=!l&&"scroll"===e,p=l?null!==u?u+"Capture":null:u;l=[];for(var d,h=n;null!==h;){var v=(d=h).stateNode;if(5===d.tag&&null!==v&&(d=v,null!==p&&(null!=(v=He(h,p))&&l.push(aa(h,v,d)))),f)break;h=h.return}0<l.length&&(u=new c(u,s,null,r,a),i.push({event:u,listeners:l}))}}if(0==(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(u="mouseover"===e||"pointerover"===e)||r===Pe||!(s=r.relatedTarget||r.fromElement)||!Ta(s)&&!s[Ra])&&(c||u)&&(u=a.window===a?a:(u=a.ownerDocument)?u.defaultView||u.parentWindow:window,c?(c=n,null!==(s=(s=r.relatedTarget||r.toElement)?Ta(s):null)&&(s!==(f=tt(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(c=null,s=n),c!==s)){if(l=Er,v="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(l=Lr,v="onPointerLeave",p="onPointerEnter",h="pointer"),f=null==c?u:Pa(c),d=null==s?u:Pa(s),(u=new l(v,h+"leave",c,r,a)).target=f,u.relatedTarget=d,v=null,Ta(a)===n&&((l=new l(p,h+"enter",s,r,a)).target=d,l.relatedTarget=f,v=l),f=v,c&&s)e:{for(p=s,h=0,d=l=c;d;d=ia(d))h++;for(d=0,v=p;v;v=ia(v))d++;for(;0<h-d;)l=ia(l),h--;for(;0<d-h;)p=ia(p),d--;for(;h--;){if(l===p||null!==p&&l===p.alternate)break e;l=ia(l),p=ia(p)}l=null}else l=null;null!==c&&ua(i,u,c,l,!1),null!==s&&null!==f&&ua(i,f,s,l,!0)}if("select"===(c=(u=n?Pa(n):window).nodeName&&u.nodeName.toLowerCase())||"input"===c&&"file"===u.type)var m=sn;else if(rn(u))if(ln)m=gn;else{m=yn;var y=mn}else(c=u.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===u.type||"radio"===u.type)&&(m=bn);switch(m&&(m=m(e,n))?nn(i,m,r,a):(y&&y(e,u,n),"focusout"===e&&(y=u._wrapperState)&&y.controlled&&"number"===u.type&&de(u,"number",u.value)),y=n?Pa(n):window,e){case"focusin":(rn(y)||"true"===y.contentEditable)&&(Mn=y,Cn=n,Tn=null);break;case"focusout":Tn=Cn=Mn=null;break;case"mousedown":In=!0;break;case"contextmenu":case"mouseup":case"dragend":In=!1,Pn(i,r,a);break;case"selectionchange":if(An)break;case"keydown":case"keyup":Pn(i,r,a)}var b;if(Wr)e:{switch(e){case"compositionstart":var g="onCompositionStart";break e;case"compositionend":g="onCompositionEnd";break e;case"compositionupdate":g="onCompositionUpdate";break e}g=void 0}else en?Yr(e,r)&&(g="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(g="onCompositionStart");g&&(Gr&&"ko"!==r.locale&&(en||"onCompositionStart"!==g?"onCompositionEnd"===g&&en&&(b=dr()):(fr="value"in(lr=a)?lr.value:lr.textContent,en=!0)),0<(y=oa(n,g)).length&&(g=new Ir(g,e,null,r,a),i.push({event:g,listeners:y}),b?g.data=b:null!==(b=Qr(r))&&(g.data=b))),(b=Xr?function(e,t){switch(e){case"compositionend":return Qr(t);case"keypress":return 32!==t.which?null:(Jr=!0,Zr);case"textInput":return(e=t.data)===Zr&&Jr?null:e;default:return null}}(e,r):function(e,t){if(en)return"compositionend"===e||!Wr&&Yr(e,t)?(e=dr(),pr=fr=lr=null,en=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Gr&&"ko"!==t.locale?null:t.data}}(e,r))&&(0<(n=oa(n,"onBeforeInput")).length&&(a=new Ir("onBeforeInput","beforeinput",null,r,a),i.push({event:a,listeners:n}),a.data=b))}Jn(i,t)}))}function aa(e,t,r){return{instance:e,listener:t,currentTarget:r}}function oa(e,t){for(var r=t+"Capture",n=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=He(e,r))&&n.unshift(aa(e,o,a)),null!=(o=He(e,t))&&n.push(aa(e,o,a))),e=e.return}return n}function ia(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function ua(e,t,r,n,a){for(var o=t._reactName,i=[];null!==r&&r!==n;){var u=r,c=u.alternate,s=u.stateNode;if(null!==c&&c===n)break;5===u.tag&&null!==s&&(u=s,a?null!=(c=He(r,o))&&i.unshift(aa(r,c,u)):a||null!=(c=He(r,o))&&i.push(aa(r,c,u))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}var ca=/\r\n?/g,sa=/\u0000|\uFFFD/g;function la(e){return("string"==typeof e?e:""+e).replace(ca,"\n").replace(sa,"")}function fa(e,t,r){if(t=la(t),la(e)!==t&&r)throw Error(y(425))}function pa(){}var da=null,ha=null;function va(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ma="function"==typeof setTimeout?setTimeout:void 0,ya="function"==typeof clearTimeout?clearTimeout:void 0,ba="function"==typeof Promise?Promise:void 0,ga="function"==typeof queueMicrotask?queueMicrotask:void 0!==ba?function(e){return ba.resolve(null).then(e).catch($a)}:ma;function $a(e){setTimeout((function(){throw e}))}function wa(e,t){var r=t,n=0;do{var a=r.nextSibling;if(e.removeChild(r),a&&8===a.nodeType)if("/$"===(r=a.data)){if(0===n)return e.removeChild(a),void tr(t);n--}else"$"!==r&&"$?"!==r&&"$!"!==r||n++;r=a}while(r);tr(t)}function xa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ka(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var _a=Math.random().toString(36).slice(2),Sa="__reactFiber$"+_a,Ea="__reactProps$"+_a,Ra="__reactContainer$"+_a,Aa="__reactEvents$"+_a,Ma="__reactListeners$"+_a,Ca="__reactHandles$"+_a;function Ta(e){var t=e[Sa];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Ra]||r[Sa]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=ka(e);null!==e;){if(r=e[Sa])return r;e=ka(e)}return t}r=(e=r).parentNode}return null}function Ia(e){return!(e=e[Sa]||e[Ra])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(y(33))}function Na(e){return e[Ea]||null}var Oa=[],Da=-1;function qa(e){return{current:e}}function Ua(e){0>Da||(e.current=Oa[Da],Oa[Da]=null,Da--)}function ja(e,t){Da++,Oa[Da]=e.current,e.current=t}var La={},Ba=qa(La),Fa=qa(!1),za=La;function Ka(e,t){var r=e.type.contextTypes;if(!r)return La;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in r)o[a]=t[a];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ha(e){return null!=(e=e.childContextTypes)}function Wa(){Ua(Fa),Ua(Ba)}function Va(e,t,r){if(Ba.current!==La)throw Error(y(168));ja(Ba,t),ja(Fa,r)}function Xa(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in t))throw Error(y(108,re(e)||"Unknown",a));return Z({},r,n)}function Ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||La,za=Ba.current,ja(Ba,e),ja(Fa,Fa.current),!0}function Za(e,t,r){var n=e.stateNode;if(!n)throw Error(y(169));r?(e=Xa(e,t,za),n.__reactInternalMemoizedMergedChildContext=e,Ua(Fa),Ua(Ba),ja(Ba,e)):Ua(Fa),ja(Fa,r)}var Ja=null,Ya=!1,Qa=!1;function eo(e){null===Ja?Ja=[e]:Ja.push(e)}function to(){if(!Qa&&null!==Ja){Qa=!0;var e=0,t=It;try{var r=Ja;for(It=1;e<r.length;e++){var n=r[e];do{n=n(!0)}while(null!==n)}Ja=null,Ya=!1}catch(t){throw null!==Ja&&(Ja=Ja.slice(e+1)),it(pt,to),t}finally{It=t,Qa=!1}}return null}var ro=[],no=0,ao=null,oo=0,io=[],uo=0,co=null,so=1,lo="";function fo(e,t){ro[no++]=oo,ro[no++]=ao,ao=e,oo=t}function po(e,t,r){io[uo++]=so,io[uo++]=lo,io[uo++]=co,co=e;var n=so;e=lo;var a=32-gt(n)-1;n&=~(1<<a),r+=1;var o=32-gt(t)+a;if(30<o){var i=a-a%5;o=(n&(1<<i)-1).toString(32),n>>=i,a-=i,so=1<<32-gt(t)+a|r<<a|n,lo=o+e}else so=1<<o|r<<a|n,lo=e}function ho(e){null!==e.return&&(fo(e,1),po(e,1,0))}function vo(e){for(;e===ao;)ao=ro[--no],ro[no]=null,oo=ro[--no],ro[no]=null;for(;e===co;)co=io[--uo],io[uo]=null,lo=io[--uo],io[uo]=null,so=io[--uo],io[uo]=null}var mo=null,yo=null,bo=!1,go=null;function $o(e,t){var r=Ks(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function wo(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,mo=e,yo=xa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,mo=e,yo=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==co?{id:so,overflow:lo}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Ks(18,null,null,0)).stateNode=t,r.return=e,e.child=r,mo=e,yo=null,!0);default:return!1}}function xo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function ko(e){if(bo){var t=yo;if(t){var r=t;if(!wo(e,t)){if(xo(e))throw Error(y(418));t=xa(r.nextSibling);var n=mo;t&&wo(e,t)?$o(n,r):(e.flags=-4097&e.flags|2,bo=!1,mo=e)}}else{if(xo(e))throw Error(y(418));e.flags=-4097&e.flags|2,bo=!1,mo=e}}}function _o(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;mo=e}function So(e){if(e!==mo)return!1;if(!bo)return _o(e),bo=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!va(e.type,e.memoizedProps)),t&&(t=yo)){if(xo(e))throw Eo(),Error(y(418));for(;t;)$o(e,t),t=xa(t.nextSibling)}if(_o(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(y(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){yo=xa(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}yo=null}}else yo=mo?xa(e.stateNode.nextSibling):null;return!0}function Eo(){for(var e=yo;e;)e=xa(e.nextSibling)}function Ro(){yo=mo=null,bo=!1}function Ao(e){null===go?go=[e]:go.push(e)}var Mo=P.ReactCurrentBatchConfig;function Co(e,t){if(e&&e.defaultProps){for(var r in t=Z({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var To=qa(null),Io=null,Po=null,No=null;function Oo(){No=Po=Io=null}function Do(e){var t=To.current;Ua(To),e._currentValue=t}function qo(e,t,r){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==n&&(n.childLanes|=t)):null!==n&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function Uo(e,t){Io=e,No=Po=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Pu=!0),e.firstContext=null)}function jo(e){var t=e._currentValue;if(No!==e)if(e={context:e,memoizedValue:t,next:null},null===Po){if(null===Io)throw Error(y(308));Po=e,Io.dependencies={lanes:0,firstContext:e}}else Po=Po.next=e;return t}var Lo=null;function Bo(e){null===Lo?Lo=[e]:Lo.push(e)}function Fo(e,t,r,n){var a=t.interleaved;return null===a?(r.next=r,Bo(t)):(r.next=a.next,a.next=r),t.interleaved=r,zo(e,n)}function zo(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Ko=!1;function Ho(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Wo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Vo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Xo(e,t,r){var n=e.updateQueue;if(null===n)return null;if(n=n.shared,0!=(2&Bc)){var a=n.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),n.pending=t,zo(e,r)}return null===(a=n.interleaved)?(t.next=t,Bo(n)):(t.next=a.next,a.next=t),n.interleaved=t,zo(e,r)}function Go(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,Tt(e,r)}}function Zo(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var a=null,o=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===o?a=o=i:o=o.next=i,r=r.next}while(null!==r);null===o?a=o=t:o=o.next=t}else a=o=t;return r={baseState:n.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Jo(e,t,r,n){var a=e.updateQueue;Ko=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?o=s:i.next=s,i=c;var l=e.alternate;null!==l&&((u=(l=l.updateQueue).lastBaseUpdate)!==i&&(null===u?l.firstBaseUpdate=s:u.next=s,l.lastBaseUpdate=c))}if(null!==o){var f=a.baseState;for(i=0,l=s=c=null,u=o;;){var p=u.lane,d=u.eventTime;if((n&p)===p){null!==l&&(l=l.next={eventTime:d,lane:0,tag:u.tag,payload:u.payload,callback:u.callback,next:null});e:{var h=e,v=u;switch(p=t,d=r,v.tag){case 1:if("function"==typeof(h=v.payload)){f=h.call(d,f,p);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(p="function"==typeof(h=v.payload)?h.call(d,f,p):h))break e;f=Z({},f,p);break e;case 2:Ko=!0}}null!==u.callback&&0!==u.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[u]:p.push(u))}else d={eventTime:d,lane:p,tag:u.tag,payload:u.payload,callback:u.callback,next:null},null===l?(s=l=d,c=f):l=l.next=d,i|=p;if(null===(u=u.next)){if(null===(u=a.shared.pending))break;u=(p=u).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===l&&(c=f),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=l,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Gc|=i,e.lanes=i,e.memoizedState=f}}function Yo(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],a=n.callback;if(null!==a){if(n.callback=null,n=r,"function"!=typeof a)throw Error(y(191,a));a.call(n)}}}var Qo=(new v.Component).refs;function ei(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:Z({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ti={isMounted:function(e){return!!(e=e._reactInternals)&&tt(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=ds(),a=hs(e),o=Vo(n,a);o.payload=t,null!=r&&(o.callback=r),null!==(t=Xo(e,o,a))&&(vs(t,e,a,n),Go(t,e,a))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=ds(),a=hs(e),o=Vo(n,a);o.tag=1,o.payload=t,null!=r&&(o.callback=r),null!==(t=Xo(e,o,a))&&(vs(t,e,a,n),Go(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=ds(),n=hs(e),a=Vo(r,n);a.tag=2,null!=t&&(a.callback=t),null!==(t=Xo(e,a,n))&&(vs(t,e,n,r),Go(t,e,n))}};function ri(e,t,r,n,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!wn(r,n)||!wn(a,o))}function ni(e,t,r){var n=!1,a=La,o=t.contextType;return"object"==typeof o&&null!==o?o=jo(o):(a=Ha(t)?za:Ba.current,o=(n=null!=(n=t.contextTypes))?Ka(e,a):La),t=new t(r,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ti,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function ai(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ti.enqueueReplaceState(t,t.state,null)}function oi(e,t,r,n){var a=e.stateNode;a.props=r,a.state=e.memoizedState,a.refs=Qo,Ho(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=jo(o):(o=Ha(t)?za:Ba.current,a.context=Ka(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(ei(e,t,o,r),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ti.enqueueReplaceState(a,a.state,null),Jo(e,r,a,n),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function ii(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(y(309));var n=r.stateNode}if(!n)throw Error(y(147,e));var a=n,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;t===Qo&&(t=a.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(y(284));if(!r._owner)throw Error(y(290,e))}return e}function ui(e,t){throw e=Object.prototype.toString.call(t),Error(y(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ci(e){return(0,e._init)(e._payload)}function si(e){var t=function(t,r){if(e){var n=t.deletions;null===n?(t.deletions=[r],t.flags|=16):n.push(r)}},r=function(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null},n=function(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e},a=function(e,t){return(e=Ws(e,t)).index=0,e.sibling=null,e},o=function(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags|=2,r):n:(t.flags|=2,r):(t.flags|=1048576,r)},i=function(t){return e&&null===t.alternate&&(t.flags|=2),t},u=function(e,t,r,n){return null===t||6!==t.tag?((t=Zs(r,e.mode,n)).return=e,t):((t=a(t,r)).return=e,t)},c=function(e,t,r,n){var o=r.type;return o===D?l(e,t,r.props.children,n,r.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===H&&ci(o)===t.type)?((n=a(t,r.props)).ref=ii(e,t,r),n.return=e,n):((n=Vs(r.type,r.key,r.props,null,e.mode,n)).ref=ii(e,t,r),n.return=e,n)},s=function(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Js(r,e.mode,n)).return=e,t):((t=a(t,r.children||[])).return=e,t)},l=function(e,t,r,n,o){return null===t||7!==t.tag?((t=Xs(r,e.mode,n,o)).return=e,t):((t=a(t,r)).return=e,t)},f=function(a,i,u,c){for(var s=null,l=null,f=i,p=i=0,m=null;null!==f&&p<u.length;p++){f.index>p?(m=f,f=null):m=f.sibling;var y=h(a,f,u[p],c);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&t(a,f),i=o(y,i,p),null===l?s=y:l.sibling=y,l=y,f=m}if(p===u.length)return r(a,f),bo&&fo(a,p),s;if(null===f){for(;p<u.length;p++)null!==(f=d(a,u[p],c))&&(i=o(f,i,p),null===l?s=f:l.sibling=f,l=f);return bo&&fo(a,p),s}for(f=n(a,f);p<u.length;p++)null!==(m=v(f,a,p,u[p],c))&&(e&&null!==m.alternate&&f.delete(null===m.key?p:m.key),i=o(m,i,p),null===l?s=m:l.sibling=m,l=m);return e&&f.forEach((function(e){return t(a,e)})),bo&&fo(a,p),s},p=function(a,i,u,c){var s=X(u);if("function"!=typeof s)throw Error(y(150));if(null==(u=s.call(u)))throw Error(y(151));for(var l=s=null,f=i,p=i=0,m=null,b=u.next();null!==f&&!b.done;p++,b=u.next()){f.index>p?(m=f,f=null):m=f.sibling;var g=h(a,f,b.value,c);if(null===g){null===f&&(f=m);break}e&&f&&null===g.alternate&&t(a,f),i=o(g,i,p),null===l?s=g:l.sibling=g,l=g,f=m}if(b.done)return r(a,f),bo&&fo(a,p),s;if(null===f){for(;!b.done;p++,b=u.next())null!==(b=d(a,b.value,c))&&(i=o(b,i,p),null===l?s=b:l.sibling=b,l=b);return bo&&fo(a,p),s}for(f=n(a,f);!b.done;p++,b=u.next())null!==(b=v(f,a,p,b.value,c))&&(e&&null!==b.alternate&&f.delete(null===b.key?p:b.key),i=o(b,i,p),null===l?s=b:l.sibling=b,l=b);return e&&f.forEach((function(e){return t(a,e)})),bo&&fo(a,p),s};function d(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Zs(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case N:return(r=Vs(t.type,t.key,t.props,null,e.mode,r)).ref=ii(e,null,t),r.return=e,r;case O:return(t=Js(t,e.mode,r)).return=e,t;case H:return d(e,(0,t._init)(t._payload),r)}if(he(t)||X(t))return(t=Xs(t,e.mode,r,null)).return=e,t;ui(e,t)}return null}function h(e,t,r,n){var a=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==a?null:u(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case N:return r.key===a?c(e,t,r,n):null;case O:return r.key===a?s(e,t,r,n):null;case H:return h(e,t,(a=r._init)(r._payload),n)}if(he(r)||X(r))return null!==a?null:l(e,t,r,n,null);ui(e,r)}return null}function v(e,t,r,n,a){if("string"==typeof n&&""!==n||"number"==typeof n)return e=e.get(r)||null,u(t,e,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case N:return e=e.get(null===n.key?r:n.key)||null,c(t,e,n,a);case O:return e=e.get(null===n.key?r:n.key)||null,s(t,e,n,a);case H:return v(e,t,r,(0,n._init)(n._payload),a)}if(he(n)||X(n))return e=e.get(r)||null,l(t,e,n,a,null);ui(t,n)}return null}return function e(n,o,u,c){if("object"==typeof u&&null!==u&&u.type===D&&null===u.key&&(u=u.props.children),"object"==typeof u&&null!==u){switch(u.$$typeof){case N:e:{for(var s=u.key,l=o;null!==l;){if(l.key===s){if((s=u.type)===D){if(7===l.tag){r(n,l.sibling),(o=a(l,u.props.children)).return=n,n=o;break e}}else if(l.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===H&&ci(s)===l.type){r(n,l.sibling),(o=a(l,u.props)).ref=ii(n,l,u),o.return=n,n=o;break e}r(n,l);break}t(n,l),l=l.sibling}u.type===D?((o=Xs(u.props.children,n.mode,c,u.key)).return=n,n=o):((c=Vs(u.type,u.key,u.props,null,n.mode,c)).ref=ii(n,o,u),c.return=n,n=c)}return i(n);case O:e:{for(l=u.key;null!==o;){if(o.key===l){if(4===o.tag&&o.stateNode.containerInfo===u.containerInfo&&o.stateNode.implementation===u.implementation){r(n,o.sibling),(o=a(o,u.children||[])).return=n,n=o;break e}r(n,o);break}t(n,o),o=o.sibling}(o=Js(u,n.mode,c)).return=n,n=o}return i(n);case H:return e(n,o,(l=u._init)(u._payload),c)}if(he(u))return f(n,o,u,c);if(X(u))return p(n,o,u,c);ui(n,u)}return"string"==typeof u&&""!==u||"number"==typeof u?(u=""+u,null!==o&&6===o.tag?(r(n,o.sibling),(o=a(o,u)).return=n,n=o):(r(n,o),(o=Zs(u,n.mode,c)).return=n,n=o),i(n)):r(n,o)}}var li=si(!0),fi=si(!1),pi={},di=qa(pi),hi=qa(pi),vi=qa(pi);function mi(e){if(e===pi)throw Error(y(174));return e}function yi(e,t){switch(ja(vi,t),ja(hi,e),ja(di,pi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:we(null,"");break;default:t=we(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ua(di),ja(di,t)}function bi(){Ua(di),Ua(hi),Ua(vi)}function gi(e){mi(vi.current);var t=mi(di.current),r=we(t,e.type);t!==r&&(ja(hi,e),ja(di,r))}function $i(e){hi.current===e&&(Ua(di),Ua(hi))}var wi=qa(0);function xi(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ki=[];function _i(){for(var e=0;e<ki.length;e++)ki[e]._workInProgressVersionPrimary=null;ki.length=0}var Si=P.ReactCurrentDispatcher,Ei=P.ReactCurrentBatchConfig,Ri=0,Ai=null,Mi=null,Ci=null,Ti=!1,Ii=!1,Pi=0,Ni=0;function Oi(){throw Error(y(321))}function Di(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!$n(e[r],t[r]))return!1;return!0}function qi(e,t,r,n,a,o){if(Ri=o,Ai=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Si.current=null===e||null===e.memoizedState?$u:wu,e=r(n,a),Ii){o=0;do{if(Ii=!1,Pi=0,25<=o)throw Error(y(301));o+=1,Ci=Mi=null,t.updateQueue=null,Si.current=xu,e=r(n,a)}while(Ii)}if(Si.current=gu,t=null!==Mi&&null!==Mi.next,Ri=0,Ci=Mi=Ai=null,Ti=!1,t)throw Error(y(300));return e}function Ui(){var e=0!==Pi;return Pi=0,e}function ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ci?Ai.memoizedState=Ci=e:Ci=Ci.next=e,Ci}function Li(){if(null===Mi){var e=Ai.alternate;e=null!==e?e.memoizedState:null}else e=Mi.next;var t=null===Ci?Ai.memoizedState:Ci.next;if(null!==t)Ci=t,Mi=e;else{if(null===e)throw Error(y(310));e={memoizedState:(Mi=e).memoizedState,baseState:Mi.baseState,baseQueue:Mi.baseQueue,queue:Mi.queue,next:null},null===Ci?Ai.memoizedState=Ci=e:Ci=Ci.next=e}return Ci}function Bi(e,t){return"function"==typeof t?t(e):t}function Fi(e){var t=Li(),r=t.queue;if(null===r)throw Error(y(311));r.lastRenderedReducer=e;var n=Mi,a=n.baseQueue,o=r.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}n.baseQueue=a=o,r.pending=null}if(null!==a){o=a.next,n=n.baseState;var u=i=null,c=null,s=o;do{var l=s.lane;if((Ri&l)===l)null!==c&&(c=c.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),n=s.hasEagerState?s.eagerState:e(n,s.action);else{var f={lane:l,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};null===c?(u=c=f,i=n):c=c.next=f,Ai.lanes|=l,Gc|=l}s=s.next}while(null!==s&&s!==o);null===c?i=n:c.next=u,$n(n,t.memoizedState)||(Pu=!0),t.memoizedState=n,t.baseState=i,t.baseQueue=c,r.lastRenderedState=n}if(null!==(e=r.interleaved)){a=e;do{o=a.lane,Ai.lanes|=o,Gc|=o,a=a.next}while(a!==e)}else null===a&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function zi(e){var t=Li(),r=t.queue;if(null===r)throw Error(y(311));r.lastRenderedReducer=e;var n=r.dispatch,a=r.pending,o=t.memoizedState;if(null!==a){r.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);$n(o,t.memoizedState)||(Pu=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),r.lastRenderedState=o}return[o,n]}function Ki(){}function Hi(e,t){var r=Ai,n=Li(),a=t(),o=!$n(n.memoizedState,a);if(o&&(n.memoizedState=a,Pu=!0),n=n.queue,nu(Xi.bind(null,r,n,e),[e]),n.getSnapshot!==t||o||null!==Ci&&1&Ci.memoizedState.tag){if(r.flags|=2048,Yi(9,Vi.bind(null,r,n,a,t),void 0,null),null===Fc)throw Error(y(349));0!=(30&Ri)||Wi(r,t,a)}return a}function Wi(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=Ai.updateQueue)?(t={lastEffect:null,stores:null},Ai.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Vi(e,t,r,n){t.value=r,t.getSnapshot=n,Gi(t)&&Zi(e)}function Xi(e,t,r){return r((function(){Gi(t)&&Zi(e)}))}function Gi(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!$n(e,r)}catch(e){return!0}}function Zi(e){var t=zo(e,1);null!==t&&vs(t,e,1,-1)}function Ji(e){var t=ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Bi,lastRenderedState:e},t.queue=e,e=e.dispatch=vu.bind(null,Ai,e),[t.memoizedState,e]}function Yi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Ai.updateQueue)?(t={lastEffect:null,stores:null},Ai.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function Qi(){return Li().memoizedState}function eu(e,t,r,n){var a=ji();Ai.flags|=e,a.memoizedState=Yi(1|t,r,void 0,void 0===n?null:n)}function tu(e,t,r,n){var a=Li();n=void 0===n?null:n;var o=void 0;if(null!==Mi){var i=Mi.memoizedState;if(o=i.destroy,null!==n&&Di(n,i.deps))return void(a.memoizedState=Yi(t,r,o,n))}Ai.flags|=e,a.memoizedState=Yi(1|t,r,o,n)}function ru(e,t){return eu(8390656,8,e,t)}function nu(e,t){return tu(2048,8,e,t)}function au(e,t){return tu(4,2,e,t)}function ou(e,t){return tu(4,4,e,t)}function iu(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function uu(e,t,r){return r=null!=r?r.concat([e]):null,tu(4,4,iu.bind(null,t,e),r)}function cu(){}function su(e,t){var r=Li();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Di(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function lu(e,t){var r=Li();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Di(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function fu(e,t,r){return 0==(21&Ri)?(e.baseState&&(e.baseState=!1,Pu=!0),e.memoizedState=r):($n(r,t)||(r=At(),Ai.lanes|=r,Gc|=r,e.baseState=!0),t)}function pu(e,t){var r=It;It=0!==r&&4>r?r:4,e(!0);var n=Ei.transition;Ei.transition={};try{e(!1),t()}finally{It=r,Ei.transition=n}}function du(){return Li().memoizedState}function hu(e,t,r){var n=hs(e);if(r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},mu(e))yu(t,r);else if(null!==(r=Fo(e,t,r,n))){vs(r,e,n,ds()),bu(r,t,n)}}function vu(e,t,r){var n=hs(e),a={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(mu(e))yu(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=o(i,r);if(a.hasEagerState=!0,a.eagerState=u,$n(u,i)){var c=t.interleaved;return null===c?(a.next=a,Bo(t)):(a.next=c.next,c.next=a),void(t.interleaved=a)}}catch(e){}null!==(r=Fo(e,t,a,n))&&(vs(r,e,n,a=ds()),bu(r,t,n))}}function mu(e){var t=e.alternate;return e===Ai||null!==t&&t===Ai}function yu(e,t){Ii=Ti=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function bu(e,t,r){if(0!=(4194240&r)){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,Tt(e,r)}}var gu={readContext:jo,useCallback:Oi,useContext:Oi,useEffect:Oi,useImperativeHandle:Oi,useInsertionEffect:Oi,useLayoutEffect:Oi,useMemo:Oi,useReducer:Oi,useRef:Oi,useState:Oi,useDebugValue:Oi,useDeferredValue:Oi,useTransition:Oi,useMutableSource:Oi,useSyncExternalStore:Oi,useId:Oi,unstable_isNewReconciler:!1},$u={readContext:jo,useCallback:function(e,t){return ji().memoizedState=[e,void 0===t?null:t],e},useContext:jo,useEffect:ru,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,eu(4194308,4,iu.bind(null,t,e),r)},useLayoutEffect:function(e,t){return eu(4194308,4,e,t)},useInsertionEffect:function(e,t){return eu(4,2,e,t)},useMemo:function(e,t){var r=ji();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ji();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=hu.bind(null,Ai,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},ji().memoizedState=e},useState:Ji,useDebugValue:cu,useDeferredValue:function(e){return ji().memoizedState=e},useTransition:function(){var e=Ji(!1),t=e[0];return e=pu.bind(null,e[1]),ji().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=Ai,a=ji();if(bo){if(void 0===r)throw Error(y(407));r=r()}else{if(r=t(),null===Fc)throw Error(y(349));0!=(30&Ri)||Wi(n,t,r)}a.memoizedState=r;var o={value:r,getSnapshot:t};return a.queue=o,ru(Xi.bind(null,n,o,e),[e]),n.flags|=2048,Yi(9,Vi.bind(null,n,o,r,t),void 0,null),r},useId:function(){var e=ji(),t=Fc.identifierPrefix;if(bo){var r=lo;t=":"+t+"R"+(r=(so&~(1<<32-gt(so)-1)).toString(32)+r),0<(r=Pi++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=Ni++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},wu={readContext:jo,useCallback:su,useContext:jo,useEffect:nu,useImperativeHandle:uu,useInsertionEffect:au,useLayoutEffect:ou,useMemo:lu,useReducer:Fi,useRef:Qi,useState:function(){return Fi(Bi)},useDebugValue:cu,useDeferredValue:function(e){return fu(Li(),Mi.memoizedState,e)},useTransition:function(){return[Fi(Bi)[0],Li().memoizedState]},useMutableSource:Ki,useSyncExternalStore:Hi,useId:du,unstable_isNewReconciler:!1},xu={readContext:jo,useCallback:su,useContext:jo,useEffect:nu,useImperativeHandle:uu,useInsertionEffect:au,useLayoutEffect:ou,useMemo:lu,useReducer:zi,useRef:Qi,useState:function(){return zi(Bi)},useDebugValue:cu,useDeferredValue:function(e){var t=Li();return null===Mi?t.memoizedState=e:fu(t,Mi.memoizedState,e)},useTransition:function(){return[zi(Bi)[0],Li().memoizedState]},useMutableSource:Ki,useSyncExternalStore:Hi,useId:du,unstable_isNewReconciler:!1};function ku(e,t){try{var r="",n=t;do{r+=ee(n),n=n.return}while(n);var a=r}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function _u(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function Su(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var Eu="function"==typeof WeakMap?WeakMap:Map;function Ru(e,t,r){(r=Vo(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){ns||(ns=!0,as=n),Su(0,t)},r}function Au(e,t,r){(r=Vo(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var a=t.value;r.payload=function(){return n(a)},r.callback=function(){Su(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(r.callback=function(){Su(0,t),"function"!=typeof n&&(null===os?os=new Set([this]):os.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function Mu(e,t,r){var n=e.pingCache;if(null===n){n=e.pingCache=new Eu;var a=new Set;n.set(t,a)}else void 0===(a=n.get(t))&&(a=new Set,n.set(t,a));a.has(r)||(a.add(r),e=Us.bind(null,e,t,r),t.then(e,e))}function Cu(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function Tu(e,t,r,n,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Vo(-1,1)).tag=2,Xo(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var Iu=P.ReactCurrentOwner,Pu=!1;function Nu(e,t,r,n){t.child=null===e?fi(t,null,r,n):li(t,e.child,r,n)}function Ou(e,t,r,n,a){r=r.render;var o=t.ref;return Uo(t,a),n=qi(e,t,r,n,o,a),r=Ui(),null===e||Pu?(bo&&r&&ho(t),t.flags|=1,Nu(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,nc(e,t,a))}function Du(e,t,r,n,a){if(null===e){var o=r.type;return"function"!=typeof o||Hs(o)||void 0!==o.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Vs(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,qu(e,t,o,n,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((r=null!==(r=r.compare)?r:wn)(i,n)&&e.ref===t.ref)return nc(e,t,a)}return t.flags|=1,(e=Ws(o,n)).ref=t.ref,e.return=t,t.child=e}function qu(e,t,r,n,a){if(null!==e){var o=e.memoizedProps;if(wn(o,n)&&e.ref===t.ref){if(Pu=!1,t.pendingProps=n=o,0==(e.lanes&a))return t.lanes=e.lanes,nc(e,t,a);0!=(131072&e.flags)&&(Pu=!0)}}return Lu(e,t,r,n,a)}function Uu(e,t,r){var n=t.pendingProps,a=n.children,o=null!==e?e.memoizedState:null;if("hidden"===n.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},ja(Wc,Hc),Hc|=r;else{if(0==(1073741824&r))return e=null!==o?o.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,ja(Wc,Hc),Hc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=null!==o?o.baseLanes:r,ja(Wc,Hc),Hc|=n}else null!==o?(n=o.baseLanes|r,t.memoizedState=null):n=r,ja(Wc,Hc),Hc|=n;return Nu(e,t,a,r),t.child}function ju(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function Lu(e,t,r,n,a){var o=Ha(r)?za:Ba.current;return o=Ka(t,o),Uo(t,a),r=qi(e,t,r,n,o,a),n=Ui(),null===e||Pu?(bo&&n&&ho(t),t.flags|=1,Nu(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,nc(e,t,a))}function Bu(e,t,r,n,a){if(Ha(r)){var o=!0;Ga(t)}else o=!1;if(Uo(t,a),null===t.stateNode)rc(e,t),ni(t,r,n),oi(t,r,n,a),n=!0;else if(null===e){var i=t.stateNode,u=t.memoizedProps;i.props=u;var c=i.context,s=r.contextType;"object"==typeof s&&null!==s?s=jo(s):s=Ka(t,s=Ha(r)?za:Ba.current);var l=r.getDerivedStateFromProps,f="function"==typeof l||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==n||c!==s)&&ai(t,i,n,s),Ko=!1;var p=t.memoizedState;i.state=p,Jo(t,n,i,a),c=t.memoizedState,u!==n||p!==c||Fa.current||Ko?("function"==typeof l&&(ei(t,r,l,n),c=t.memoizedState),(u=Ko||ri(t,r,u,n,p,c,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=c),i.props=n,i.state=c,i.context=s,n=u):("function"==typeof i.componentDidMount&&(t.flags|=4194308),n=!1)}else{i=t.stateNode,Wo(e,t),u=t.memoizedProps,s=t.type===t.elementType?u:Co(t.type,u),i.props=s,f=t.pendingProps,p=i.context,"object"==typeof(c=r.contextType)&&null!==c?c=jo(c):c=Ka(t,c=Ha(r)?za:Ba.current);var d=r.getDerivedStateFromProps;(l="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(u!==f||p!==c)&&ai(t,i,n,c),Ko=!1,p=t.memoizedState,i.state=p,Jo(t,n,i,a);var h=t.memoizedState;u!==f||p!==h||Fa.current||Ko?("function"==typeof d&&(ei(t,r,d,n),h=t.memoizedState),(s=Ko||ri(t,r,s,n,p,h,c)||!1)?(l||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,c)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=c,n=s):("function"!=typeof i.componentDidUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),n=!1)}return Fu(e,t,r,n,o,a)}function Fu(e,t,r,n,a,o){ju(e,t);var i=0!=(128&t.flags);if(!n&&!i)return a&&Za(t,r,!1),nc(e,t,o);n=t.stateNode,Iu.current=t;var u=i&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=li(t,e.child,null,o),t.child=li(t,null,u,o)):Nu(e,t,u,o),t.memoizedState=n.state,a&&Za(t,r,!0),t.child}function zu(e){var t=e.stateNode;t.pendingContext?Va(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Va(0,t.context,!1),yi(e,t.containerInfo)}function Ku(e,t,r,n,a){return Ro(),Ao(a),t.flags|=256,Nu(e,t,r,n),t.child}var Hu,Wu,Vu,Xu={dehydrated:null,treeContext:null,retryLane:0};function Gu(e){return{baseLanes:e,cachePool:null,transitions:null}}function Zu(e,t,r){var n,a=t.pendingProps,o=wi.current,i=!1,u=0!=(128&t.flags);if((n=u)||(n=(null===e||null!==e.memoizedState)&&0!=(2&o)),n?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),ja(wi,1&o),null===e)return ko(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,i?(a=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Gs(u,a,0,null),e=Xs(e,a,r,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Gu(r),t.memoizedState=Xu,e):Ju(t,u));if(null!==(o=e.memoizedState)&&null!==(n=o.dehydrated))return function(e,t,r,n,a,o,i){if(r)return 256&t.flags?(t.flags&=-257,Yu(e,t,i,n=_u(Error(y(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=n.fallback,a=t.mode,n=Gs({mode:"visible",children:n.children},a,0,null),(o=Xs(o,a,i,null)).flags|=2,n.return=t,o.return=t,n.sibling=o,t.child=n,0!=(1&t.mode)&&li(t,e.child,null,i),t.child.memoizedState=Gu(i),t.memoizedState=Xu,o);if(0==(1&t.mode))return Yu(e,t,i,null);if("$!"===a.data){if(n=a.nextSibling&&a.nextSibling.dataset)var u=n.dgst;return n=u,Yu(e,t,i,n=_u(o=Error(y(419)),n,void 0))}if(u=0!=(i&e.childLanes),Pu||u){if(null!==(n=Fc)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(n.suspendedLanes|i))?0:a)&&a!==o.retryLane&&(o.retryLane=a,zo(e,a),vs(n,e,a,-1))}return As(),Yu(e,t,i,n=_u(Error(y(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Ls.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,yo=xa(a.nextSibling),mo=t,bo=!0,go=null,null!==e&&(io[uo++]=so,io[uo++]=lo,io[uo++]=co,so=e.id,lo=e.overflow,co=t),(t=Ju(t,n.children)).flags|=4096,t)}(e,t,u,a,n,o,r);if(i){i=a.fallback,u=t.mode,n=(o=e.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=c,t.deletions=null):(a=Ws(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==n?i=Ws(n,i):(i=Xs(i,u,r,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,u=null===(u=e.child.memoizedState)?Gu(r):{baseLanes:u.baseLanes|r,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~r,t.memoizedState=Xu,a}return e=(i=e.child).sibling,a=Ws(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=r),a.return=t,a.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=a,t.memoizedState=null,a}function Ju(e,t){return(t=Gs({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Yu(e,t,r,n){return null!==n&&Ao(n),li(t,e.child,null,r),(e=Ju(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Qu(e,t,r){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),qo(e.return,t,r)}function ec(e,t,r,n,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=n,o.tail=r,o.tailMode=a)}function tc(e,t,r){var n=t.pendingProps,a=n.revealOrder,o=n.tail;if(Nu(e,t,n.children,r),0!=(2&(n=wi.current)))n=1&n|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Qu(e,r,t);else if(19===e.tag)Qu(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(ja(wi,n),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(r=t.child,a=null;null!==r;)null!==(e=r.alternate)&&null===xi(e)&&(a=r),r=r.sibling;null===(r=a)?(a=t.child,t.child=null):(a=r.sibling,r.sibling=null),ec(t,!1,a,r,o);break;case"backwards":for(r=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===xi(e)){t.child=a;break}e=a.sibling,a.sibling=r,r=a,a=e}ec(t,!0,r,null,o);break;case"together":ec(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function rc(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function nc(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Gc|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(y(153));if(null!==t.child){for(r=Ws(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Ws(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function ac(e,t){if(!bo)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function oc(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,n=0;if(t)for(var a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=14680064&a.subtreeFlags,n|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=a.subtreeFlags,n|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function ic(e,t,r){var n=t.pendingProps;switch(vo(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return oc(t),null;case 1:case 17:return Ha(t.type)&&Wa(),oc(t),null;case 3:return n=t.stateNode,bi(),Ua(Fa),Ua(Ba),_i(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(So(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==go&&(gs(go),go=null))),oc(t),null;case 5:$i(t);var a=mi(vi.current);if(r=t.type,null!==e&&null!=t.stateNode)Wu(e,t,r,n),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(null===t.stateNode)throw Error(y(166));return oc(t),null}if(e=mi(di.current),So(t)){n=t.stateNode,r=t.type;var o=t.memoizedProps;switch(n[Sa]=t,n[Ea]=o,e=0!=(1&t.mode),r){case"dialog":Yn("cancel",n),Yn("close",n);break;case"iframe":case"object":case"embed":Yn("load",n);break;case"video":case"audio":for(a=0;a<Xn.length;a++)Yn(Xn[a],n);break;case"source":Yn("error",n);break;case"img":case"image":case"link":Yn("error",n),Yn("load",n);break;case"details":Yn("toggle",n);break;case"input":se(n,o),Yn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!o.multiple},Yn("invalid",n);break;case"textarea":ye(n,o),Yn("invalid",n)}for(var i in Te(r,o),a=null,o)if(o.hasOwnProperty(i)){var u=o[i];"children"===i?"string"==typeof u?n.textContent!==u&&(!0!==o.suppressHydrationWarning&&fa(n.textContent,u,e),a=["children",u]):"number"==typeof u&&n.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&fa(n.textContent,u,e),a=["children",""+u]):g.hasOwnProperty(i)&&null!=u&&"onScroll"===i&&Yn("scroll",n)}switch(r){case"input":oe(n),pe(n,o,!0);break;case"textarea":oe(n),ge(n);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(n.onclick=pa)}n=a,t.updateQueue=n,null!==n&&(t.flags|=4)}else{i=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=$e(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=i.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=i.createElement(r,{is:n.is}):(e=i.createElement(r),"select"===r&&(i=e,n.multiple?i.multiple=!0:n.size&&(i.size=n.size))):e=i.createElementNS(e,r),e[Sa]=t,e[Ea]=n,Hu(e,t),t.stateNode=e;e:{switch(i=Ie(r,n),r){case"dialog":Yn("cancel",e),Yn("close",e),a=n;break;case"iframe":case"object":case"embed":Yn("load",e),a=n;break;case"video":case"audio":for(a=0;a<Xn.length;a++)Yn(Xn[a],e);a=n;break;case"source":Yn("error",e),a=n;break;case"img":case"image":case"link":Yn("error",e),Yn("load",e),a=n;break;case"details":Yn("toggle",e),a=n;break;case"input":se(e,n),a=ce(e,n),Yn("invalid",e);break;case"option":default:a=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=Z({},n,{value:void 0}),Yn("invalid",e);break;case"textarea":ye(e,n),a=me(e,n),Yn("invalid",e)}for(o in Te(r,a),u=a)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?Me(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&_e(e,c):"children"===o?"string"==typeof c?("textarea"!==r||""!==c)&&Se(e,c):"number"==typeof c&&Se(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(g.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Yn("scroll",e):null!=c&&I(e,o,c,i))}switch(r){case"input":oe(e),pe(e,n,!1);break;case"textarea":oe(e),ge(e);break;case"option":null!=n.value&&e.setAttribute("value",""+ne(n.value));break;case"select":e.multiple=!!n.multiple,null!=(o=n.value)?ve(e,!!n.multiple,o,!1):null!=n.defaultValue&&ve(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=pa)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return oc(t),null;case 6:if(e&&null!=t.stateNode)Vu(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(y(166));if(r=mi(vi.current),mi(di.current),So(t)){if(n=t.stateNode,r=t.memoizedProps,n[Sa]=t,(o=n.nodeValue!==r)&&null!==(e=mo))switch(e.tag){case 3:fa(n.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&fa(n.nodeValue,r,0!=(1&e.mode))}o&&(t.flags|=4)}else(n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Sa]=t,t.stateNode=n}return oc(t),null;case 13:if(Ua(wi),n=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(bo&&null!==yo&&0!=(1&t.mode)&&0==(128&t.flags))Eo(),Ro(),t.flags|=98560,o=!1;else if(o=So(t),null!==n&&null!==n.dehydrated){if(null===e){if(!o)throw Error(y(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(y(317));o[Sa]=t}else Ro(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;oc(t),o=!1}else null!==go&&(gs(go),go=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=r,t):((n=null!==n)!==(null!==e&&null!==e.memoizedState)&&n&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&wi.current)?0===Vc&&(Vc=3):As())),null!==t.updateQueue&&(t.flags|=4),oc(t),null);case 4:return bi(),null===e&&ta(t.stateNode.containerInfo),oc(t),null;case 10:return Do(t.type._context),oc(t),null;case 19:if(Ua(wi),null===(o=t.memoizedState))return oc(t),null;if(n=0!=(128&t.flags),null===(i=o.rendering))if(n)ac(o,!1);else{if(0!==Vc||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(i=xi(e))){for(t.flags|=128,ac(o,!1),null!==(n=i.updateQueue)&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;null!==r;)e=n,(o=r).flags&=14680066,null===(i=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,o.type=i.type,e=i.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return ja(wi,1&wi.current|2),t.child}e=e.sibling}null!==o.tail&&lt()>ts&&(t.flags|=128,n=!0,ac(o,!1),t.lanes=4194304)}else{if(!n)if(null!==(e=xi(i))){if(t.flags|=128,n=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),ac(o,!0),null===o.tail&&"hidden"===o.tailMode&&!i.alternate&&!bo)return oc(t),null}else 2*lt()-o.renderingStartTime>ts&&1073741824!==r&&(t.flags|=128,n=!0,ac(o,!1),t.lanes=4194304);o.isBackwards?(i.sibling=t.child,t.child=i):(null!==(r=o.last)?r.sibling=i:t.child=i,o.last=i)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=lt(),t.sibling=null,r=wi.current,ja(wi,n?1&r|2:1&r),t):(oc(t),null);case 22:case 23:return _s(),n=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==n&&(t.flags|=8192),n&&0!=(1&t.mode)?0!=(1073741824&Hc)&&(oc(t),6&t.subtreeFlags&&(t.flags|=8192)):oc(t),null;case 24:case 25:return null}throw Error(y(156,t.tag))}function uc(e,t){switch(vo(t),t.tag){case 1:return Ha(t.type)&&Wa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return bi(),Ua(Fa),Ua(Ba),_i(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return $i(t),null;case 13:if(Ua(wi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(y(340));Ro()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ua(wi),null;case 4:return bi(),null;case 10:return Do(t.type._context),null;case 22:case 23:return _s(),null;default:return null}}Hu=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Wu=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,mi(di.current);var o,i=null;switch(r){case"input":a=ce(e,a),n=ce(e,n),i=[];break;case"select":a=Z({},a,{value:void 0}),n=Z({},n,{value:void 0}),i=[];break;case"textarea":a=me(e,a),n=me(e,n),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof n.onClick&&(e.onclick=pa)}for(s in Te(r,n),r=null,a)if(!n.hasOwnProperty(s)&&a.hasOwnProperty(s)&&null!=a[s])if("style"===s){var u=a[s];for(o in u)u.hasOwnProperty(o)&&(r||(r={}),r[o]="")}else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(g.hasOwnProperty(s)?i||(i=[]):(i=i||[]).push(s,null));for(s in n){var c=n[s];if(u=null!=a?a[s]:void 0,n.hasOwnProperty(s)&&c!==u&&(null!=c||null!=u))if("style"===s)if(u){for(o in u)!u.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(r||(r={}),r[o]="");for(o in c)c.hasOwnProperty(o)&&u[o]!==c[o]&&(r||(r={}),r[o]=c[o])}else r||(i||(i=[]),i.push(s,r)),r=c;else"dangerouslySetInnerHTML"===s?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(i=i||[]).push(s,c)):"children"===s?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(s,""+c):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(g.hasOwnProperty(s)?(null!=c&&"onScroll"===s&&Yn("scroll",e),i||u===c||(i=[])):(i=i||[]).push(s,c))}r&&(i=i||[]).push("style",r);var s=i;(t.updateQueue=s)&&(t.flags|=4)}},Vu=function(e,t,r,n){r!==n&&(t.flags|=4)};var cc=!1,sc=!1,lc="function"==typeof WeakSet?WeakSet:Set,fc=null;function pc(e,t){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){qs(e,t,r)}else r.current=null}function dc(e,t,r){try{r()}catch(r){qs(e,t,r)}}var hc=!1;function vc(e,t,r){var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var a=n=n.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&dc(t,r,o)}a=a.next}while(a!==n)}}function mc(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function yc(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function bc(e){var t=e.alternate;null!==t&&(e.alternate=null,bc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[Sa],delete t[Ea],delete t[Aa],delete t[Ma],delete t[Ca])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function gc(e){return 5===e.tag||3===e.tag||4===e.tag}function $c(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||gc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function wc(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=pa));else if(4!==n&&null!==(e=e.child))for(wc(e,t,r),e=e.sibling;null!==e;)wc(e,t,r),e=e.sibling}function xc(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(xc(e,t,r),e=e.sibling;null!==e;)xc(e,t,r),e=e.sibling}var kc=null,_c=!1;function Sc(e,t,r){for(r=r.child;null!==r;)Ec(e,t,r),r=r.sibling}function Ec(e,t,r){if(bt&&"function"==typeof bt.onCommitFiberUnmount)try{bt.onCommitFiberUnmount(yt,r)}catch(e){}switch(r.tag){case 5:sc||pc(r,t);case 6:var n=kc,a=_c;kc=null,Sc(e,t,r),_c=a,null!==(kc=n)&&(_c?(e=kc,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):kc.removeChild(r.stateNode));break;case 18:null!==kc&&(_c?(e=kc,r=r.stateNode,8===e.nodeType?wa(e.parentNode,r):1===e.nodeType&&wa(e,r),tr(e)):wa(kc,r.stateNode));break;case 4:n=kc,a=_c,kc=r.stateNode.containerInfo,_c=!0,Sc(e,t,r),kc=n,_c=a;break;case 0:case 11:case 14:case 15:if(!sc&&(null!==(n=r.updateQueue)&&null!==(n=n.lastEffect))){a=n=n.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&dc(r,t,i),a=a.next}while(a!==n)}Sc(e,t,r);break;case 1:if(!sc&&(pc(r,t),"function"==typeof(n=r.stateNode).componentWillUnmount))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(e){qs(r,t,e)}Sc(e,t,r);break;case 21:Sc(e,t,r);break;case 22:1&r.mode?(sc=(n=sc)||null!==r.memoizedState,Sc(e,t,r),sc=n):Sc(e,t,r);break;default:Sc(e,t,r)}}function Rc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new lc),t.forEach((function(t){var n=Bs.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function Ac(e,t){var r=t.deletions;if(null!==r)for(var n=0;n<r.length;n++){var a=r[n];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:kc=u.stateNode,_c=!1;break e;case 3:case 4:kc=u.stateNode.containerInfo,_c=!0;break e}u=u.return}if(null===kc)throw Error(y(160));Ec(o,i,a),kc=null,_c=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){qs(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)Mc(t,e),t=t.sibling}function Mc(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Ac(t,e),Cc(e),4&n){try{vc(3,e,e.return),mc(3,e)}catch(t){qs(e,e.return,t)}try{vc(5,e,e.return)}catch(t){qs(e,e.return,t)}}break;case 1:Ac(t,e),Cc(e),512&n&&null!==r&&pc(r,r.return);break;case 5:if(Ac(t,e),Cc(e),512&n&&null!==r&&pc(r,r.return),32&e.flags){var a=e.stateNode;try{Se(a,"")}catch(t){qs(e,e.return,t)}}if(4&n&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==r?r.memoizedProps:o,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===o.type&&null!=o.name&&le(a,o),Ie(u,i);var s=Ie(u,o);for(i=0;i<c.length;i+=2){var l=c[i],f=c[i+1];"style"===l?Me(a,f):"dangerouslySetInnerHTML"===l?_e(a,f):"children"===l?Se(a,f):I(a,l,f,s)}switch(u){case"input":fe(a,o);break;case"textarea":be(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var d=o.value;null!=d?ve(a,!!o.multiple,d,!1):p!==!!o.multiple&&(null!=o.defaultValue?ve(a,!!o.multiple,o.defaultValue,!0):ve(a,!!o.multiple,o.multiple?[]:"",!1))}a[Ea]=o}catch(t){qs(e,e.return,t)}}break;case 6:if(Ac(t,e),Cc(e),4&n){if(null===e.stateNode)throw Error(y(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){qs(e,e.return,t)}}break;case 3:if(Ac(t,e),Cc(e),4&n&&null!==r&&r.memoizedState.isDehydrated)try{tr(t.containerInfo)}catch(t){qs(e,e.return,t)}break;case 4:default:Ac(t,e),Cc(e);break;case 13:Ac(t,e),Cc(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(es=lt())),4&n&&Rc(e);break;case 22:if(l=null!==r&&null!==r.memoizedState,1&e.mode?(sc=(s=sc)||l,Ac(t,e),sc=s):Ac(t,e),Cc(e),8192&n){if(s=null!==e.memoizedState,(e.stateNode.isHidden=s)&&!l&&0!=(1&e.mode))for(fc=e,l=e.child;null!==l;){for(f=fc=l;null!==fc;){switch(d=(p=fc).child,p.tag){case 0:case 11:case 14:case 15:vc(4,p,p.return);break;case 1:pc(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){n=p,r=p.return;try{t=n,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){qs(n,r,e)}}break;case 5:pc(p,p.return);break;case 22:if(null!==p.memoizedState){Nc(f);continue}}null!==d?(d.return=p,fc=d):Nc(f)}l=l.sibling}e:for(l=null,f=e;;){if(5===f.tag){if(null===l){l=f;try{a=f.stateNode,s?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=f.stateNode,i=null!=(c=f.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=Ae("display",i))}catch(t){qs(e,e.return,t)}}}else if(6===f.tag){if(null===l)try{f.stateNode.nodeValue=s?"":f.memoizedProps}catch(t){qs(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;l===f&&(l=null),f=f.return}l===f&&(l=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:Ac(t,e),Cc(e),4&n&&Rc(e);case 21:}}function Cc(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(gc(r)){var n=r;break e}r=r.return}throw Error(y(160))}switch(n.tag){case 5:var a=n.stateNode;32&n.flags&&(Se(a,""),n.flags&=-33),xc(e,$c(e),a);break;case 3:case 4:var o=n.stateNode.containerInfo;wc(e,$c(e),o);break;default:throw Error(y(161))}}catch(t){qs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function Tc(e,t,r){fc=e,Ic(e,t,r)}function Ic(e,t,r){for(var n=0!=(1&e.mode);null!==fc;){var a=fc,o=a.child;if(22===a.tag&&n){var i=null!==a.memoizedState||cc;if(!i){var u=a.alternate,c=null!==u&&null!==u.memoizedState||sc;u=cc;var s=sc;if(cc=i,(sc=c)&&!s)for(fc=a;null!==fc;)c=(i=fc).child,22===i.tag&&null!==i.memoizedState?Oc(a):null!==c?(c.return=i,fc=c):Oc(a);for(;null!==o;)fc=o,Ic(o,t,r),o=o.sibling;fc=a,cc=u,sc=s}Pc(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,fc=o):Pc(e)}}function Pc(e){for(;null!==fc;){var t=fc;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:sc||mc(5,t);break;case 1:var n=t.stateNode;if(4&t.flags&&!sc)if(null===r)n.componentDidMount();else{var a=t.elementType===t.type?r.memoizedProps:Co(t.type,r.memoizedProps);n.componentDidUpdate(a,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Yo(t,o,n);break;case 3:var i=t.updateQueue;if(null!==i){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}Yo(t,i,r)}break;case 5:var u=t.stateNode;if(null===r&&4&t.flags){r=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var s=t.alternate;if(null!==s){var l=s.memoizedState;if(null!==l){var f=l.dehydrated;null!==f&&tr(f)}}}break;default:throw Error(y(163))}sc||512&t.flags&&yc(t)}catch(e){qs(t,t.return,e)}}if(t===e){fc=null;break}if(null!==(r=t.sibling)){r.return=t.return,fc=r;break}fc=t.return}}function Nc(e){for(;null!==fc;){var t=fc;if(t===e){fc=null;break}var r=t.sibling;if(null!==r){r.return=t.return,fc=r;break}fc=t.return}}function Oc(e){for(;null!==fc;){var t=fc;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{mc(4,t)}catch(e){qs(t,r,e)}break;case 1:var n=t.stateNode;if("function"==typeof n.componentDidMount){var a=t.return;try{n.componentDidMount()}catch(e){qs(t,a,e)}}var o=t.return;try{yc(t)}catch(e){qs(t,o,e)}break;case 5:var i=t.return;try{yc(t)}catch(e){qs(t,i,e)}}}catch(e){qs(t,t.return,e)}if(t===e){fc=null;break}var u=t.sibling;if(null!==u){u.return=t.return,fc=u;break}fc=t.return}}var Dc,qc=Math.ceil,Uc=P.ReactCurrentDispatcher,jc=P.ReactCurrentOwner,Lc=P.ReactCurrentBatchConfig,Bc=0,Fc=null,zc=null,Kc=0,Hc=0,Wc=qa(0),Vc=0,Xc=null,Gc=0,Zc=0,Jc=0,Yc=null,Qc=null,es=0,ts=1/0,rs=null,ns=!1,as=null,os=null,is=!1,us=null,cs=0,ss=0,ls=null,fs=-1,ps=0;function ds(){return 0!=(6&Bc)?lt():-1!==fs?fs:fs=lt()}function hs(e){return 0==(1&e.mode)?1:0!=(2&Bc)&&0!==Kc?Kc&-Kc:null!==Mo.transition?(0===ps&&(ps=At()),ps):0!==(e=It)?e:e=void 0===(e=window.event)?16:sr(e.type)}function vs(e,t,r,n){if(50<ss)throw ss=0,ls=null,Error(y(185));Ct(e,r,n),0!=(2&Bc)&&e===Fc||(e===Fc&&(0==(2&Bc)&&(Zc|=r),4===Vc&&$s(e,Kc)),ms(e,n),1===r&&0===Bc&&0==(1&t.mode)&&(ts=lt()+500,Ya&&to()))}function ms(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-gt(o),u=1<<i,c=a[i];-1===c?0!=(u&r)&&0==(u&n)||(a[i]=Et(u,t)):c<=t&&(e.expiredLanes|=u),o&=~u}}(e,t);var n=St(e,e===Fc?Kc:0);if(0===n)null!==r&&ut(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(null!=r&&ut(r),1===t)0===e.tag?function(e){Ya=!0,eo(e)}(ws.bind(null,e)):eo(ws.bind(null,e)),ga((function(){0==(6&Bc)&&to()})),r=null;else{switch(Pt(n)){case 1:r=pt;break;case 4:r=dt;break;case 16:default:r=ht;break;case 536870912:r=mt}r=Fs(r,ys.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function ys(e,t){if(fs=-1,ps=0,0!=(6&Bc))throw Error(y(327));var r=e.callbackNode;if(Os()&&e.callbackNode!==r)return null;var n=St(e,e===Fc?Kc:0);if(0===n)return null;if(0!=(30&n)||0!=(n&e.expiredLanes)||t)t=Ms(e,n);else{t=n;var a=Bc;Bc|=2;var o=Rs();for(Fc===e&&Kc===t||(rs=null,ts=lt()+500,Ss(e,t));;)try{Ts();break}catch(t){Es(e,t)}Oo(),Uc.current=o,Bc=a,null!==zc?t=0:(Fc=null,Kc=0,t=Vc)}if(0!==t){if(2===t&&(0!==(a=Rt(e))&&(n=a,t=bs(e,a))),1===t)throw r=Xc,Ss(e,0),$s(e,n),ms(e,lt()),r;if(6===t)$s(e,n);else{if(a=e.current.alternate,0==(30&n)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var n=0;n<r.length;n++){var a=r[n],o=a.getSnapshot;a=a.value;try{if(!$n(o(),a))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=Ms(e,n))&&(0!==(o=Rt(e))&&(n=o,t=bs(e,o))),1===t))throw r=Xc,Ss(e,0),$s(e,n),ms(e,lt()),r;switch(e.finishedWork=a,e.finishedLanes=n,t){case 0:case 1:throw Error(y(345));case 2:case 5:Ns(e,Qc,rs);break;case 3:if($s(e,n),(130023424&n)===n&&10<(t=es+500-lt())){if(0!==St(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ds(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ma(Ns.bind(null,e,Qc,rs),t);break}Ns(e,Qc,rs);break;case 4:if($s(e,n),(4194240&n)===n)break;for(t=e.eventTimes,a=-1;0<n;){var i=31-gt(n);o=1<<i,(i=t[i])>a&&(a=i),n&=~o}if(n=a,10<(n=(120>(n=lt()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*qc(n/1960))-n)){e.timeoutHandle=ma(Ns.bind(null,e,Qc,rs),n);break}Ns(e,Qc,rs);break;default:throw Error(y(329))}}}return ms(e,lt()),e.callbackNode===r?ys.bind(null,e):null}function bs(e,t){var r=Yc;return e.current.memoizedState.isDehydrated&&(Ss(e,t).flags|=256),2!==(e=Ms(e,t))&&(t=Qc,Qc=r,null!==t&&gs(t)),e}function gs(e){null===Qc?Qc=e:Qc.push.apply(Qc,e)}function $s(e,t){for(t&=~Jc,t&=~Zc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-gt(t),n=1<<r;e[r]=-1,t&=~n}}function ws(e){if(0!=(6&Bc))throw Error(y(327));Os();var t=St(e,0);if(0==(1&t))return ms(e,lt()),null;var r=Ms(e,t);if(0!==e.tag&&2===r){var n=Rt(e);0!==n&&(t=n,r=bs(e,n))}if(1===r)throw r=Xc,Ss(e,0),$s(e,t),ms(e,lt()),r;if(6===r)throw Error(y(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ns(e,Qc,rs),ms(e,lt()),null}function xs(e,t){var r=Bc;Bc|=1;try{return e(t)}finally{0===(Bc=r)&&(ts=lt()+500,Ya&&to())}}function ks(e){null!==us&&0===us.tag&&0==(6&Bc)&&Os();var t=Bc;Bc|=1;var r=Lc.transition,n=It;try{if(Lc.transition=null,It=1,e)return e()}finally{It=n,Lc.transition=r,0==(6&(Bc=t))&&to()}}function _s(){Hc=Wc.current,Ua(Wc)}function Ss(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,ya(r)),null!==zc)for(r=zc.return;null!==r;){var n=r;switch(vo(n),n.tag){case 1:null!=(n=n.type.childContextTypes)&&Wa();break;case 3:bi(),Ua(Fa),Ua(Ba),_i();break;case 5:$i(n);break;case 4:bi();break;case 13:case 19:Ua(wi);break;case 10:Do(n.type._context);break;case 22:case 23:_s()}r=r.return}if(Fc=e,zc=e=Ws(e.current,null),Kc=Hc=t,Vc=0,Xc=null,Jc=Zc=Gc=0,Qc=Yc=null,null!==Lo){for(t=0;t<Lo.length;t++)if(null!==(n=(r=Lo[t]).interleaved)){r.interleaved=null;var a=n.next,o=r.pending;if(null!==o){var i=o.next;o.next=a,n.next=i}r.pending=n}Lo=null}return e}function Es(e,t){for(;;){var r=zc;try{if(Oo(),Si.current=gu,Ti){for(var n=Ai.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}Ti=!1}if(Ri=0,Ci=Mi=Ai=null,Ii=!1,Pi=0,jc.current=null,null===r||null===r.return){Vc=1,Xc=t,zc=null;break}e:{var o=e,i=r.return,u=r,c=t;if(t=Kc,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c,l=u,f=l.tag;if(0==(1&l.mode)&&(0===f||11===f||15===f)){var p=l.alternate;p?(l.updateQueue=p.updateQueue,l.memoizedState=p.memoizedState,l.lanes=p.lanes):(l.updateQueue=null,l.memoizedState=null)}var d=Cu(i);if(null!==d){d.flags&=-257,Tu(d,i,u,0,t),1&d.mode&&Mu(o,s,t),c=s;var h=(t=d).updateQueue;if(null===h){var v=new Set;v.add(c),t.updateQueue=v}else h.add(c);break e}if(0==(1&t)){Mu(o,s,t),As();break e}c=Error(y(426))}else if(bo&&1&u.mode){var m=Cu(i);if(null!==m){0==(65536&m.flags)&&(m.flags|=256),Tu(m,i,u,0,t),Ao(ku(c,u));break e}}o=c=ku(c,u),4!==Vc&&(Vc=2),null===Yc?Yc=[o]:Yc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Zo(o,Ru(0,c,t));break e;case 1:u=c;var b=o.type,g=o.stateNode;if(0==(128&o.flags)&&("function"==typeof b.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===os||!os.has(g)))){o.flags|=65536,t&=-t,o.lanes|=t,Zo(o,Au(o,u,t));break e}}o=o.return}while(null!==o)}Ps(r)}catch(e){t=e,zc===r&&null!==r&&(zc=r=r.return);continue}break}}function Rs(){var e=Uc.current;return Uc.current=gu,null===e?gu:e}function As(){0!==Vc&&3!==Vc&&2!==Vc||(Vc=4),null===Fc||0==(268435455&Gc)&&0==(268435455&Zc)||$s(Fc,Kc)}function Ms(e,t){var r=Bc;Bc|=2;var n=Rs();for(Fc===e&&Kc===t||(rs=null,Ss(e,t));;)try{Cs();break}catch(t){Es(e,t)}if(Oo(),Bc=r,Uc.current=n,null!==zc)throw Error(y(261));return Fc=null,Kc=0,Vc}function Cs(){for(;null!==zc;)Is(zc)}function Ts(){for(;null!==zc&&!ct();)Is(zc)}function Is(e){var t=Dc(e.alternate,e,Hc);e.memoizedProps=e.pendingProps,null===t?Ps(e):zc=t,jc.current=null}function Ps(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=ic(r,t,Hc)))return void(zc=r)}else{if(null!==(r=uc(r,t)))return r.flags&=32767,void(zc=r);if(null===e)return Vc=6,void(zc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(zc=t);zc=t=e}while(null!==t);0===Vc&&(Vc=5)}function Ns(e,t,r){var n=It,a=Lc.transition;try{Lc.transition=null,It=1,function(e,t,r,n){do{Os()}while(null!==us);if(0!=(6&Bc))throw Error(y(327));r=e.finishedWork;var a=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(y(177));e.callbackNode=null,e.callbackPriority=0;var o=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var a=31-gt(r),o=1<<a;t[a]=0,n[a]=-1,e[a]=-1,r&=~o}}(e,o),e===Fc&&(zc=Fc=null,Kc=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||is||(is=!0,Fs(ht,(function(){return Os(),null}))),o=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||o){o=Lc.transition,Lc.transition=null;var i=It;It=1;var u=Bc;Bc|=4,jc.current=null,function(e,t){if(da=nr,En(e=Sn())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(n&&0!==n.rangeCount){r=n.anchorNode;var a=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{r.nodeType,o.nodeType}catch(e){r=null;break e}var i=0,u=-1,c=-1,s=0,l=0,f=e,p=null;t:for(;;){for(var d;f!==r||0!==a&&3!==f.nodeType||(u=i+a),f!==o||0!==n&&3!==f.nodeType||(c=i+n),3===f.nodeType&&(i+=f.nodeValue.length),null!==(d=f.firstChild);)p=f,f=d;for(;;){if(f===e)break t;if(p===r&&++s===a&&(u=i),p===o&&++l===n&&(c=i),null!==(d=f.nextSibling))break;p=(f=p).parentNode}f=d}r=-1===u||-1===c?null:{start:u,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(ha={focusedElem:e,selectionRange:r},nr=!1,fc=t;null!==fc;)if(e=(t=fc).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,fc=e;else for(;null!==fc;){t=fc;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var v=h.memoizedProps,m=h.memoizedState,b=t.stateNode,g=b.getSnapshotBeforeUpdate(t.elementType===t.type?v:Co(t.type,v),m);b.__reactInternalSnapshotBeforeUpdate=g}break;case 3:var $=t.stateNode.containerInfo;1===$.nodeType?$.textContent="":9===$.nodeType&&$.documentElement&&$.removeChild($.documentElement);break;default:throw Error(y(163))}}catch(e){qs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,fc=e;break}fc=t.return}h=hc,hc=!1}(e,r),Mc(r,e),Rn(ha),nr=!!da,ha=da=null,e.current=r,Tc(r,e,a),st(),Bc=u,It=i,Lc.transition=o}else e.current=r;if(is&&(is=!1,us=e,cs=a),0===(o=e.pendingLanes)&&(os=null),function(e){if(bt&&"function"==typeof bt.onCommitFiberRoot)try{bt.onCommitFiberRoot(yt,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),ms(e,lt()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)a=t[r],n(a.value,{componentStack:a.stack,digest:a.digest});if(ns)throw ns=!1,e=as,as=null,e;0!=(1&cs)&&0!==e.tag&&Os(),0!=(1&(o=e.pendingLanes))?e===ls?ss++:(ss=0,ls=e):ss=0,to()}(e,t,r,n)}finally{Lc.transition=a,It=n}return null}function Os(){if(null!==us){var e=Pt(cs),t=Lc.transition,r=It;try{if(Lc.transition=null,It=16>e?16:e,null===us)var n=!1;else{if(e=us,us=null,cs=0,0!=(6&Bc))throw Error(y(331));var a=Bc;for(Bc|=4,fc=e.current;null!==fc;){var o=fc,i=o.child;if(0!=(16&fc.flags)){var u=o.deletions;if(null!==u){for(var c=0;c<u.length;c++){var s=u[c];for(fc=s;null!==fc;){var l=fc;switch(l.tag){case 0:case 11:case 15:vc(8,l,o)}var f=l.child;if(null!==f)f.return=l,fc=f;else for(;null!==fc;){var p=(l=fc).sibling,d=l.return;if(bc(l),l===s){fc=null;break}if(null!==p){p.return=d,fc=p;break}fc=d}}}var h=o.alternate;if(null!==h){var v=h.child;if(null!==v){h.child=null;do{var m=v.sibling;v.sibling=null,v=m}while(null!==v)}}fc=o}}if(0!=(2064&o.subtreeFlags)&&null!==i)i.return=o,fc=i;else e:for(;null!==fc;){if(0!=(2048&(o=fc).flags))switch(o.tag){case 0:case 11:case 15:vc(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,fc=b;break e}fc=o.return}}var g=e.current;for(fc=g;null!==fc;){var $=(i=fc).child;if(0!=(2064&i.subtreeFlags)&&null!==$)$.return=i,fc=$;else e:for(i=g;null!==fc;){if(0!=(2048&(u=fc).flags))try{switch(u.tag){case 0:case 11:case 15:mc(9,u)}}catch(e){qs(u,u.return,e)}if(u===i){fc=null;break e}var w=u.sibling;if(null!==w){w.return=u.return,fc=w;break e}fc=u.return}}if(Bc=a,to(),bt&&"function"==typeof bt.onPostCommitFiberRoot)try{bt.onPostCommitFiberRoot(yt,e)}catch(e){}n=!0}return n}finally{It=r,Lc.transition=t}}return!1}function Ds(e,t,r){e=Xo(e,t=Ru(0,t=ku(r,t),1),1),t=ds(),null!==e&&(Ct(e,1,t),ms(e,t))}function qs(e,t,r){if(3===e.tag)Ds(e,e,r);else for(;null!==t;){if(3===t.tag){Ds(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===os||!os.has(n))){t=Xo(t,e=Au(t,e=ku(r,e),1),1),e=ds(),null!==t&&(Ct(t,1,e),ms(t,e));break}}t=t.return}}function Us(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=ds(),e.pingedLanes|=e.suspendedLanes&r,Fc===e&&(Kc&r)===r&&(4===Vc||3===Vc&&(130023424&Kc)===Kc&&500>lt()-es?Ss(e,0):Jc|=r),ms(e,t)}function js(e,t){0===t&&(0==(1&e.mode)?t=1:(t=kt,0==(130023424&(kt<<=1))&&(kt=4194304)));var r=ds();null!==(e=zo(e,t))&&(Ct(e,t,r),ms(e,r))}function Ls(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),js(e,r)}function Bs(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,a=e.memoizedState;null!==a&&(r=a.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(y(314))}null!==n&&n.delete(t),js(e,r)}function Fs(e,t){return it(e,t)}function zs(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ks(e,t,r,n){return new zs(e,t,r,n)}function Hs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ws(e,t){var r=e.alternate;return null===r?((r=Ks(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Vs(e,t,r,n,a,o){var i=2;if(n=e,"function"==typeof e)Hs(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case D:return Xs(r.children,a,o,t);case q:i=8,a|=8;break;case U:return(e=Ks(12,r,t,2|a)).elementType=U,e.lanes=o,e;case F:return(e=Ks(13,r,t,a)).elementType=F,e.lanes=o,e;case z:return(e=Ks(19,r,t,a)).elementType=z,e.lanes=o,e;case W:return Gs(r,a,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case j:i=10;break e;case L:i=9;break e;case B:i=11;break e;case K:i=14;break e;case H:i=16,n=null;break e}throw Error(y(130,null==e?e:void 0===e?"undefined":(0,h.default)(e),""))}return(t=Ks(i,r,t,a)).elementType=e,t.type=n,t.lanes=o,t}function Xs(e,t,r,n){return(e=Ks(7,e,n,t)).lanes=r,e}function Gs(e,t,r,n){return(e=Ks(22,e,n,t)).elementType=W,e.lanes=r,e.stateNode={isHidden:!1},e}function Zs(e,t,r){return(e=Ks(6,e,null,t)).lanes=r,e}function Js(e,t,r){return(t=Ks(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ys(e,t,r,n,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Mt(0),this.expirationTimes=Mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Mt(0),this.identifierPrefix=n,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Qs(e,t,r,n,a,o,i,u,c){return e=new Ys(e,t,r,u,c),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Ks(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ho(o),e}function el(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:O,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function tl(e){if(!e)return La;e:{if(tt(e=e._reactInternals)!==e||1!==e.tag)throw Error(y(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ha(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(y(171))}if(1===e.tag){var r=e.type;if(Ha(r))return Xa(e,r,t)}return t}function rl(e,t,r,n,a,o,i,u,c){return(e=Qs(r,n,!0,e,0,o,0,u,c)).context=tl(null),r=e.current,(o=Vo(n=ds(),a=hs(r))).callback=null!=t?t:null,Xo(r,o,a),e.current.lanes=a,Ct(e,a,n),ms(e,n),e}function nl(e,t,r,n){var a=t.current,o=ds(),i=hs(a);return r=tl(r),null===t.context?t.context=r:t.pendingContext=r,(t=Vo(o,i)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),null!==(e=Xo(a,t,i))&&(vs(e,a,i,o),Go(e,a,i)),i}function al(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ol(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function il(e,t){ol(e,t),(e=e.alternate)&&ol(e,t)}Dc=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||Fa.current)Pu=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return Pu=!1,function(e,t,r){switch(t.tag){case 3:zu(t),Ro();break;case 5:gi(t);break;case 1:Ha(t.type)&&Ga(t);break;case 4:yi(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,a=t.memoizedProps.value;ja(To,n._currentValue),n._currentValue=a;break;case 13:if(null!==(n=t.memoizedState))return null!==n.dehydrated?(ja(wi,1&wi.current),t.flags|=128,null):0!=(r&t.child.childLanes)?Zu(e,t,r):(ja(wi,1&wi.current),null!==(e=nc(e,t,r))?e.sibling:null);ja(wi,1&wi.current);break;case 19:if(n=0!=(r&t.childLanes),0!=(128&e.flags)){if(n)return tc(e,t,r);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ja(wi,wi.current),n)break;return null;case 22:case 23:return t.lanes=0,Uu(e,t,r)}return nc(e,t,r)}(e,t,r);Pu=0!=(131072&e.flags)}else Pu=!1,bo&&0!=(1048576&t.flags)&&po(t,oo,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;rc(e,t),e=t.pendingProps;var a=Ka(t,Ba.current);Uo(t,r),a=qi(null,t,n,e,a,r);var o=Ui();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ha(n)?(o=!0,Ga(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ho(t),a.updater=ti,t.stateNode=a,a._reactInternals=t,oi(t,n,e,r),t=Fu(null,t,n,!0,o,r)):(t.tag=0,bo&&o&&ho(t),Nu(null,t,a,r),t=t.child),t;case 16:n=t.elementType;e:{switch(rc(e,t),e=t.pendingProps,n=(a=n._init)(n._payload),t.type=n,a=t.tag=function(e){if("function"==typeof e)return Hs(e)?1:0;if(null!=e){if((e=e.$$typeof)===B)return 11;if(e===K)return 14}return 2}(n),e=Co(n,e),a){case 0:t=Lu(null,t,n,e,r);break e;case 1:t=Bu(null,t,n,e,r);break e;case 11:t=Ou(null,t,n,e,r);break e;case 14:t=Du(null,t,n,Co(n.type,e),r);break e}throw Error(y(306,n,""))}return t;case 0:return n=t.type,a=t.pendingProps,Lu(e,t,n,a=t.elementType===n?a:Co(n,a),r);case 1:return n=t.type,a=t.pendingProps,Bu(e,t,n,a=t.elementType===n?a:Co(n,a),r);case 3:e:{if(zu(t),null===e)throw Error(y(387));n=t.pendingProps,a=(o=t.memoizedState).element,Wo(e,t),Jo(t,n,null,r);var i=t.memoizedState;if(n=i.element,o.isDehydrated){if(o={element:n,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ku(e,t,n,r,a=ku(Error(y(423)),t));break e}if(n!==a){t=Ku(e,t,n,r,a=ku(Error(y(424)),t));break e}for(yo=xa(t.stateNode.containerInfo.firstChild),mo=t,bo=!0,go=null,r=fi(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(Ro(),n===a){t=nc(e,t,r);break e}Nu(e,t,n,r)}t=t.child}return t;case 5:return gi(t),null===e&&ko(t),n=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,va(n,a)?i=null:null!==o&&va(n,o)&&(t.flags|=32),ju(e,t),Nu(e,t,i,r),t.child;case 6:return null===e&&ko(t),null;case 13:return Zu(e,t,r);case 4:return yi(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=li(t,null,n,r):Nu(e,t,n,r),t.child;case 11:return n=t.type,a=t.pendingProps,Ou(e,t,n,a=t.elementType===n?a:Co(n,a),r);case 7:return Nu(e,t,t.pendingProps,r),t.child;case 8:case 12:return Nu(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,ja(To,n._currentValue),n._currentValue=i,null!==o)if($n(o.value,i)){if(o.children===a.children&&!Fa.current){t=nc(e,t,r);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var c=u.firstContext;null!==c;){if(c.context===n){if(1===o.tag){(c=Vo(-1,r&-r)).tag=2;var s=o.updateQueue;if(null!==s){var l=(s=s.shared).pending;null===l?c.next=c:(c.next=l.next,l.next=c),s.pending=c}}o.lanes|=r,null!==(c=o.alternate)&&(c.lanes|=r),qo(o.return,r,t),u.lanes|=r;break}c=c.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(y(341));i.lanes|=r,null!==(u=i.alternate)&&(u.lanes|=r),qo(i,r,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}Nu(e,t,a.children,r),t=t.child}return t;case 9:return a=t.type,n=t.pendingProps.children,Uo(t,r),n=n(a=jo(a)),t.flags|=1,Nu(e,t,n,r),t.child;case 14:return a=Co(n=t.type,t.pendingProps),Du(e,t,n,a=Co(n.type,a),r);case 15:return qu(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:Co(n,a),rc(e,t),t.tag=1,Ha(n)?(e=!0,Ga(t)):e=!1,Uo(t,r),ni(t,n,a),oi(t,n,a,r),Fu(null,t,n,!0,e,r);case 19:return tc(e,t,r);case 22:return Uu(e,t,r)}throw Error(y(156,t.tag))};var ul="function"==typeof reportError?reportError:function(e){console.error(e)};function cl(e){this._internalRoot=e}function sl(e){this._internalRoot=e}function ll(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function fl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function pl(){}function dl(e,t,r,n,a){var o=r._reactRootContainer;if(o){var i=o;if("function"==typeof a){var u=a;a=function(){var e=al(i);u.call(e)}}nl(t,i,e,a)}else i=function(e,t,r,n,a){if(a){if("function"==typeof n){var o=n;n=function(){var e=al(i);o.call(e)}}var i=rl(t,n,e,0,null,!1,0,"",pl);return e._reactRootContainer=i,e[Ra]=i.current,ta(8===e.nodeType?e.parentNode:e),ks(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof n){var u=n;n=function(){var e=al(c);u.call(e)}}var c=Qs(e,0,!1,null,0,!1,0,"",pl);return e._reactRootContainer=c,e[Ra]=c.current,ta(8===e.nodeType?e.parentNode:e),ks((function(){nl(t,c,r,n)})),c}(r,t,e,a,n);return al(i)}sl.prototype.render=cl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(y(409));nl(e,t,null,null)},sl.prototype.unmount=cl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ks((function(){nl(null,e,null,null)})),t[Ra]=null}},sl.prototype.unstable_scheduleHydration=function(e){if(e){var t=qt();e={blockedOn:null,target:e,priority:t};for(var r=0;r<Wt.length&&0!==t&&t<Wt[r].priority;r++);Wt.splice(r,0,e),0===r&&Zt(e)}},Nt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=_t(t.pendingLanes);0!==r&&(Tt(t,1|r),ms(t,lt()),0==(6&Bc)&&(ts=lt()+500,to()))}break;case 13:ks((function(){var t=zo(e,1);if(null!==t){var r=ds();vs(t,e,1,r)}})),il(e,1)}},Ot=function(e){if(13===e.tag){var t=zo(e,134217728);if(null!==t)vs(t,e,134217728,ds());il(e,134217728)}},Dt=function(e){if(13===e.tag){var t=hs(e),r=zo(e,t);if(null!==r)vs(r,e,t,ds());il(e,t)}},qt=function(){return It},Ut=function(e,t){var r=It;try{return It=e,t()}finally{It=r}},Oe=function(e,t,r){switch(t){case"input":if(fe(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var a=Na(n);if(!a)throw Error(y(90));ie(n),fe(n,a)}}}break;case"textarea":be(e,r);break;case"select":null!=(t=r.value)&&ve(e,!!r.multiple,t,!1)}},Be=xs,Fe=ks;var hl={usingClientEntryPoint:!1,Events:[Ia,Pa,Na,je,Le,xs]},vl={findFiberByHostInstance:Ta,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ml={bundleType:vl.bundleType,version:vl.version,rendererPackageName:vl.rendererPackageName,rendererConfig:vl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:P.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=at(e))?null:e.stateNode},findFiberByHostInstance:vl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yl.isDisabled&&yl.supportsFiber)try{yt=yl.inject(ml),bt=yl}catch(e){}}r=hl,n=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ll(t))throw Error(y(200));return el(e,t,null,r)},a=function(e,t){if(!ll(e))throw Error(y(299));var r=!1,n="",a=ul;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(n=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Qs(e,1,!1,null,0,r,0,n,a),e[Ra]=t.current,ta(8===e.nodeType?e.parentNode:e),new cl(t)},o=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(y(188));throw e=Object.keys(e).join(","),Error(y(268,e))}return e=null===(e=at(t))?null:e.stateNode},i=function(e){return ks(e)},u=function(e,t,r){if(!fl(t))throw Error(y(200));return dl(null,e,t,!0,r)},c=function(e,t,r){if(!ll(e))throw Error(y(405));var n=null!=r&&r.hydratedSources||null,a=!1,o="",i=ul;if(null!=r&&(!0===r.unstable_strictMode&&(a=!0),void 0!==r.identifierPrefix&&(o=r.identifierPrefix),void 0!==r.onRecoverableError&&(i=r.onRecoverableError)),t=rl(t,null,e,1,null!=r?r:null,a,0,o,i),e[Ra]=t.current,ta(e),n)for(e=0;e<n.length;e++)a=(a=(r=n[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,a]:t.mutableSourceEagerHydrationData.push(r,a);return new sl(t)},s=function(e,t,r){if(!fl(t))throw Error(y(200));return dl(null,e,t,!1,r)},l=function(e){if(!fl(e))throw Error(y(40));return!!e._reactRootContainer&&(ks((function(){dl(null,null,e,!1,(function(){e._reactRootContainer=null,e[Ra]=null}))})),!0)},f=xs,p=function(e,t,r,n){if(!fl(r))throw Error(y(200));if(null==e||void 0===e._reactInternals)throw Error(y(38));return dl(e,t,r,!1,n)},d="18.2.0-next-9e3b772b8-20220608"})),parcelRequire.register("1c9zD",(function(e,t){"use strict";e.exports=parcelRequire("lffg4")})),parcelRequire.register("lffg4",(function(e,t){var r,n,a,o,i,u,c,s,l,f,p,d,h,v,m,y,b,g,$;function w(e,t){var r=e.length;e.push(t);e:for(;0<r;){var n=r-1>>>1,a=e[n];if(!(0<_(a,t)))break e;e[n]=t,e[r]=a,r=n}}function x(e){return 0===e.length?null:e[0]}function k(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,a=e.length,o=a>>>1;n<o;){var i=2*(n+1)-1,u=e[i],c=i+1,s=e[c];if(0>_(u,r))c<a&&0>_(s,u)?(e[n]=s,e[c]=r,n=c):(e[n]=u,e[i]=r,n=i);else{if(!(c<a&&0>_(s,r)))break e;e[n]=s,e[c]=r,n=c}}}return t}function _(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if($parcel$export(e.exports,"unstable_now",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"unstable_IdlePriority",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"unstable_ImmediatePriority",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"unstable_LowPriority",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"unstable_NormalPriority",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"unstable_Profiling",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"unstable_UserBlockingPriority",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"unstable_cancelCallback",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"unstable_continueExecution",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"unstable_forceFrameRate",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"unstable_getCurrentPriorityLevel",(function(){return p}),(function(e){return p=e})),$parcel$export(e.exports,"unstable_getFirstCallbackNode",(function(){return d}),(function(e){return d=e})),$parcel$export(e.exports,"unstable_next",(function(){return h}),(function(e){return h=e})),$parcel$export(e.exports,"unstable_pauseExecution",(function(){return v}),(function(e){return v=e})),$parcel$export(e.exports,"unstable_requestPaint",(function(){return m}),(function(e){return m=e})),$parcel$export(e.exports,"unstable_runWithPriority",(function(){return y}),(function(e){return y=e})),$parcel$export(e.exports,"unstable_scheduleCallback",(function(){return b}),(function(e){return b=e})),$parcel$export(e.exports,"unstable_shouldYield",(function(){return g}),(function(e){return g=e})),$parcel$export(e.exports,"unstable_wrapCallback",(function(){return $}),(function(e){return $=e})),"object"==typeof performance&&"function"==typeof performance.now){var S=performance;r=function(){return S.now()}}else{var E=Date,R=E.now();r=function(){return E.now()-R}}var A=[],M=[],C=1,T=null,I=3,P=!1,N=!1,O=!1,D="function"==typeof setTimeout?setTimeout:null,q="function"==typeof clearTimeout?clearTimeout:null,U="undefined"!=typeof setImmediate?setImmediate:null;function j(e){for(var t=x(M);null!==t;){if(null===t.callback)k(M);else{if(!(t.startTime<=e))break;k(M),t.sortIndex=t.expirationTime,w(A,t)}t=x(M)}}function L(e){if(O=!1,j(e),!N)if(null!==x(A))N=!0,Y(B);else{var t=x(M);null!==t&&Q(L,t.startTime-e)}}function B(e,t){N=!1,O&&(O=!1,q(H),H=-1),P=!0;var n=I;try{for(j(t),T=x(A);null!==T&&(!(T.expirationTime>t)||e&&!X());){var a=T.callback;if("function"==typeof a){T.callback=null,I=T.priorityLevel;var o=a(T.expirationTime<=t);t=r(),"function"==typeof o?T.callback=o:T===x(A)&&k(A),j(t)}else k(A);T=x(A)}if(null!==T)var i=!0;else{var u=x(M);null!==u&&Q(L,u.startTime-t),i=!1}return i}finally{T=null,I=n,P=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var F,z=!1,K=null,H=-1,W=5,V=-1;function X(){return!(r()-V<W)}function G(){if(null!==K){var e=r();V=e;var t=!0;try{t=K(!0,e)}finally{t?F():(z=!1,K=null)}}else z=!1}if("function"==typeof U)F=function(){U(G)};else if("undefined"!=typeof MessageChannel){var Z=new MessageChannel,J=Z.port2;Z.port1.onmessage=G,F=function(){J.postMessage(null)}}else F=function(){D(G,0)};function Y(e){K=e,z||(z=!0,F())}function Q(e,t){H=D((function(){e(r())}),t)}n=5,a=1,o=4,i=3,u=null,c=2,s=function(e){e.callback=null},l=function(){N||P||(N=!0,Y(B))},f=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):W=0<e?Math.floor(1e3/e):5},p=function(){return I},d=function(){return x(A)},h=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var r=I;I=t;try{return e()}finally{I=r}},v=function(){},m=function(){},y=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=I;I=e;try{return t()}finally{I=r}},b=function(e,t,n){var a=r();switch("object"==typeof n&&null!==n?n="number"==typeof(n=n.delay)&&0<n?a+n:a:n=a,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:C++,callback:t,priorityLevel:e,startTime:n,expirationTime:o=n+o,sortIndex:-1},n>a?(e.sortIndex=n,w(M,e),null===x(A)&&e===x(M)&&(O?(q(H),H=-1):O=!0,Q(L,n-a))):(e.sortIndex=o,w(A,e),N||P||(N=!0,Y(B))),e},g=X,$=function(e){var t=I;return function(){var r=I;I=t;try{return e.apply(this,arguments)}finally{I=r}}}})),parcelRequire.register("17QCl",(function(e,t){var r;$parcel$export(e.exports,"getBundleURL",(function(){return r}),(function(e){return r=e}));var n={};function a(e){return(""+e).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/.+)\/[^/]+$/,"$1")+"/"}r=function(e){var t=n[e];return t||(t=function(){try{throw new Error}catch(t){var e=(""+t.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);if(e)return a(e[2])}return"/"}(),n[e]=t),t}})),parcelRequire.register("7KkEL",(function(e,t){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.MergeKeyStore=e.exports.BrowserLocalStorageKeyStore=e.exports.InMemoryKeyStore=e.exports.KeyStore=void 0;var r=parcelRequire("eJ8Lr");Object.defineProperty(e.exports,"KeyStore",{enumerable:!0,get:function(){return r.KeyStore}});var n=parcelRequire("5u7wK");Object.defineProperty(e.exports,"InMemoryKeyStore",{enumerable:!0,get:function(){return n.InMemoryKeyStore}});var a=parcelRequire("3dAWg");Object.defineProperty(e.exports,"BrowserLocalStorageKeyStore",{enumerable:!0,get:function(){return a.BrowserLocalStorageKeyStore}});var o=parcelRequire("llqmF");Object.defineProperty(e.exports,"MergeKeyStore",{enumerable:!0,get:function(){return o.MergeKeyStore}})})),parcelRequire.register("eJ8Lr",(function(e,t){var r=parcelRequire("8y9hR");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.KeyStore=void 0;e.exports.KeyStore=function e(){(0,r.default)(this,e)}})),parcelRequire.register("8y9hR",(function(e,t){function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("5u7wK",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("kY881"),u=parcelRequire("4Z8U5");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.InMemoryKeyStore=void 0;var c=parcelRequire("eJ8Lr"),s=parcelRequire("8pTGX"),l=function(e){(0,o.default)(c,e);var t=(0,i.default)(c);function c(){var e;return(0,n.default)(this,c),(e=t.call(this)).keys={},e}return(0,a.default)(c,[{key:"setKey",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:a.keys["".concat(t,":").concat(e)]=n.toString();case 1:case"end":return r.stop()}}),r)})))()}},{key:"getKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(a=n.keys["".concat(t,":").concat(e)]){r.next=3;break}return r.abrupt("return",null);case 3:return r.abrupt("return",s.KeyPair.fromString(a));case 4:case"end":return r.stop()}}),r)})))()}},{key:"removeKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:delete n.keys["".concat(t,":").concat(e)];case 1:case"end":return r.stop()}}),r)})))()}},{key:"clear",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e.keys={};case 1:case"end":return t.stop()}}),t)})))()}},{key:"getNetworks",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){var r;return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=new Set,Object.keys(e.keys).forEach((function(e){var t=e.split(":");r.add(t[1])})),t.abrupt("return",Array.from(r.values()));case 3:case"end":return t.stop()}}),t)})))()}},{key:"getAccounts",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var n;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=new Array,Object.keys(t.keys).forEach((function(t){var r=t.split(":");r[r.length-1]===e&&n.push(r.slice(0,r.length-1).join(":"))})),r.abrupt("return",n);case 3:case"end":return r.stop()}}),r)})))()}},{key:"toString",value:function(){return"InMemoryKeyStore"}}]),c}(c.KeyStore);e.exports.InMemoryKeyStore=l})),parcelRequire.register("1zs4k",(function(e,t){function r(e,t,r,n,a,o,i){try{var u=e[o](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,a)}function n(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function u(e){r(i,a,o,u,c,"next",e)}function c(e){r(i,a,o,u,c,"throw",e)}u(void 0)}))}}$parcel$export(e.exports,"default",(function(){return n}))})),parcelRequire.register("2WaBo",(function(e,t){function r(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function n(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}$parcel$export(e.exports,"default",(function(){return n}))})),parcelRequire.register("5Djcm",(function(e,t){$parcel$export(e.exports,"default",(function(){return n}));var r=parcelRequire("4NJa9");function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&(0,r.default)(e,t)}})),parcelRequire.register("4NJa9",(function(e,t){function r(e,t){return r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},r(e,t)}function n(e,t){return r(e,t)}$parcel$export(e.exports,"default",(function(){return n}))})),parcelRequire.register("kY881",(function(e,t){$parcel$export(e.exports,"default",(function(){return o}));var r=parcelRequire("49z07"),n=parcelRequire("2zNXU"),a=parcelRequire("arFtW");function o(e){var t=(0,r.default)();return function(){var r,o=(0,n.default)(e);if(t){var i=(0,n.default)(this).constructor;r=Reflect.construct(o,arguments,i)}else r=o.apply(this,arguments);return(0,a.default)(this,r)}}})),parcelRequire.register("49z07",(function(e,t){function r(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("2zNXU",(function(e,t){function r(e){return r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},r(e)}function n(e){return r(e)}$parcel$export(e.exports,"default",(function(){return n}))})),parcelRequire.register("arFtW",(function(e,t){$parcel$export(e.exports,"default",(function(){return a}));var r=parcelRequire("118o8"),n=parcelRequire("dTym2");function a(e,t){return!t||"object"!==(0,n.default)(t)&&"function"!=typeof t?(0,r.default)(e):t}})),parcelRequire.register("118o8",(function(e,t){function r(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("4Z8U5",(function(e,t){var r=function(e){"use strict";var t,r=function(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]},n=function(e,t,r,n){var a=t&&t.prototype instanceof o?t:o,i=Object.create(a.prototype),u=new d(n||[]);return i._invoke=l(e,r,u),i},a=function(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}},o=function(){},i=function(){},u=function(){},c=function(e){["next","throw","return"].forEach((function(t){r(e,t,(function(e){return this._invoke(t,e)}))}))},s=function(e,t){function r(n,o,i,u){var c=a(e[n],e,o);if("throw"!==c.type){var s=c.arg,l=s.value;return l&&"object"==typeof l&&y.call(l,"__await")?t.resolve(l.__await).then((function(e){r("next",e,i,u)}),(function(e){r("throw",e,i,u)})):t.resolve(l).then((function(e){s.value=e,i(s)}),(function(e){return r("throw",e,i,u)}))}u(c.arg)}var n;this._invoke=function(e,a){function o(){return new t((function(t,n){r(e,a,t,n)}))}return n=n?n.then(o,o):o()}},l=function(e,t,r){var n=x;return function(o,i){if(n===_)throw new Error("Generator is already running");if(n===S){if("throw"===o)throw i;return v()}for(r.method=o,r.arg=i;;){var u=r.delegate;if(u){var c=T(u,r);if(c){if(c===E)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===x)throw n=S,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=_;var s=a(e,t,r);if("normal"===s.type){if(n=r.done?S:k,s.arg===E)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(n=S,r.method="throw",r.arg=s.arg)}}},f=function(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)},p=function(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t},d=function(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(f,this),this.reset(!0)},h=function(e){if(e){var r=e[g];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function r(){for(;++n<e.length;)if(y.call(e,n))return r.value=e[n],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}return{next:v}},v=function(){return{value:t,done:!0}},m=Object.prototype,y=m.hasOwnProperty,b="function"==typeof Symbol?Symbol:{},g=b.iterator||"@@iterator",$=b.asyncIterator||"@@asyncIterator",w=b.toStringTag||"@@toStringTag";try{r({},"")}catch(e){r=function(e,t,r){return e[t]=r}}e.wrap=n;var x="suspendedStart",k="suspendedYield",_="executing",S="completed",E={},R={};r(R,g,(function(){return this}));var A=Object.getPrototypeOf,M=A&&A(A(h([])));M&&M!==m&&y.call(M,g)&&(R=M);var C=u.prototype=o.prototype=Object.create(R);function T(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,T(e,r),"throw"===r.method))return E;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return E}var o=a(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,E;var i=o.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,E):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,E)}return i.prototype=u,r(C,"constructor",u),r(u,"constructor",i),i.displayName=r(u,w,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===i||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,u):(e.__proto__=u,r(e,w,"GeneratorFunction")),e.prototype=Object.create(C),e},e.awrap=function(e){return{__await:e}},c(s.prototype),r(s.prototype,$,(function(){return this})),e.AsyncIterator=s,e.async=function(t,r,a,o,i){void 0===i&&(i=Promise);var u=new s(n(t,r,a,o),i);return e.isGeneratorFunction(r)?u:u.next().then((function(e){return e.done?e.value:u.next()}))},c(C),r(C,w,"Generator"),r(C,g,(function(){return this})),r(C,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=h,d.prototype={constructor:d,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(p),!e)for(var r in this)"t"===r.charAt(0)&&y.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){var r=function(r,a){return i.type="throw",i.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a};if(this.done)throw e;for(var n=this,a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var u=y.call(o,"catchLoc"),c=y.call(o,"finallyLoc");if(u&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&y.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var a=n;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,E):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),E},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),p(r),E}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;p(r)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:h(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),E}},e}(e.exports);try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}})),parcelRequire.register("8pTGX",(function(e,t){var r=parcelRequire("8y9hR"),n=parcelRequire("2WaBo"),a=parcelRequire("5Djcm"),o=parcelRequire("kY881"),i=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.KeyPairEd25519=e.exports.KeyPair=e.exports.PublicKey=e.exports.KeyType=void 0;var u,c,s=i(parcelRequire("44JIq")),l=parcelRequire("2RCX3"),f=parcelRequire("5dmHG");function p(e){if("ed25519"===e.toLowerCase())return u.ED25519;throw new Error("Unknown key type ".concat(e))}(c=u=e.exports.KeyType||(e.exports.KeyType={}))[c.ED25519=0]="ED25519";var d=function(e){(0,a.default)(i,e);var t=(0,o.default)(i);function i(){return(0,r.default)(this,i),t.apply(this,arguments)}return(0,n.default)(i,[{key:"toString",value:function(){return"".concat(function(e){if(e===u.ED25519)return"ed25519";throw new Error("Unknown key type ".concat(e))}(this.keyType),":").concat(l.base_encode(this.data))}},{key:"verify",value:function(e,t){if(this.keyType===u.ED25519)return s.default.sign.detached.verify(e,t,this.data);throw new Error("Unknown key type ".concat(this.keyType))}}],[{key:"from",value:function(e){return"string"==typeof e?i.fromString(e):e}},{key:"fromString",value:function(e){var t=e.split(":");if(1===t.length)return new i({keyType:u.ED25519,data:l.base_decode(t[0])});if(2===t.length)return new i({keyType:p(t[0]),data:l.base_decode(t[1])});throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}}]),i}(f.Assignable);e.exports.PublicKey=d;var h=function(){function e(){(0,r.default)(this,e)}return(0,n.default)(e,null,[{key:"fromRandom",value:function(e){if("ED25519"===e.toUpperCase())return v.fromRandom();throw new Error("Unknown curve ".concat(e))}},{key:"fromString",value:function(e){var t=e.split(":");if(1===t.length)return new v(t[0]);if(2===t.length){if("ED25519"===t[0].toUpperCase())return new v(t[1]);throw new Error("Unknown curve: ".concat(t[0]))}throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}}]),e}();e.exports.KeyPair=h;var v=function(e){(0,a.default)(i,e);var t=(0,o.default)(i);function i(e){var n;(0,r.default)(this,i),n=t.call(this);var a=s.default.sign.keyPair.fromSecretKey(l.base_decode(e));return n.publicKey=new d({keyType:u.ED25519,data:a.publicKey}),n.secretKey=e,n}return(0,n.default)(i,[{key:"sign",value:function(e){return{signature:s.default.sign.detached(e,l.base_decode(this.secretKey)),publicKey:this.publicKey}}},{key:"verify",value:function(e,t){return this.publicKey.verify(e,t)}},{key:"toString",value:function(){return"ed25519:".concat(this.secretKey)}},{key:"getPublicKey",value:function(){return this.publicKey}}],[{key:"fromRandom",value:function(){var e=s.default.sign.keyPair();return new i(l.base_encode(e.secretKey))}}]),i}(h);e.exports.KeyPairEd25519=v})),parcelRequire.register("44JIq",(function(e,t){!function(e){"use strict";var t=function(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n},r=function(e,t,r,n,a){var o,i=0;for(o=0;o<a;o++)i|=e[t+o]^r[n+o];return(1&i-1>>>8)-1},n=function(e,t,n,a){return r(e,t,n,a,16)},a=function(e,t,n,a){return r(e,t,n,a,32)},o=function(e,t,r,n){!function(e,t,r,n){for(var a,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,i=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,u=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,s=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,p=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,$=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,w=o,x=i,k=u,_=c,S=s,E=l,R=f,A=p,M=d,C=h,T=v,I=m,P=y,N=b,O=g,D=$,q=0;q<20;q+=2)w^=(a=(P^=(a=(M^=(a=(S^=(a=w+P|0)<<7|a>>>25)+w|0)<<9|a>>>23)+S|0)<<13|a>>>19)+M|0)<<18|a>>>14,E^=(a=(x^=(a=(N^=(a=(C^=(a=E+x|0)<<7|a>>>25)+E|0)<<9|a>>>23)+C|0)<<13|a>>>19)+N|0)<<18|a>>>14,T^=(a=(R^=(a=(k^=(a=(O^=(a=T+R|0)<<7|a>>>25)+T|0)<<9|a>>>23)+O|0)<<13|a>>>19)+k|0)<<18|a>>>14,D^=(a=(I^=(a=(A^=(a=(_^=(a=D+I|0)<<7|a>>>25)+D|0)<<9|a>>>23)+_|0)<<13|a>>>19)+A|0)<<18|a>>>14,w^=(a=(_^=(a=(k^=(a=(x^=(a=w+_|0)<<7|a>>>25)+w|0)<<9|a>>>23)+x|0)<<13|a>>>19)+k|0)<<18|a>>>14,E^=(a=(S^=(a=(A^=(a=(R^=(a=E+S|0)<<7|a>>>25)+E|0)<<9|a>>>23)+R|0)<<13|a>>>19)+A|0)<<18|a>>>14,T^=(a=(C^=(a=(M^=(a=(I^=(a=T+C|0)<<7|a>>>25)+T|0)<<9|a>>>23)+I|0)<<13|a>>>19)+M|0)<<18|a>>>14,D^=(a=(O^=(a=(N^=(a=(P^=(a=D+O|0)<<7|a>>>25)+D|0)<<9|a>>>23)+P|0)<<13|a>>>19)+N|0)<<18|a>>>14;w=w+o|0,x=x+i|0,k=k+u|0,_=_+c|0,S=S+s|0,E=E+l|0,R=R+f|0,A=A+p|0,M=M+d|0,C=C+h|0,T=T+v|0,I=I+m|0,P=P+y|0,N=N+b|0,O=O+g|0,D=D+$|0,e[0]=w>>>0&255,e[1]=w>>>8&255,e[2]=w>>>16&255,e[3]=w>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=k>>>0&255,e[9]=k>>>8&255,e[10]=k>>>16&255,e[11]=k>>>24&255,e[12]=_>>>0&255,e[13]=_>>>8&255,e[14]=_>>>16&255,e[15]=_>>>24&255,e[16]=S>>>0&255,e[17]=S>>>8&255,e[18]=S>>>16&255,e[19]=S>>>24&255,e[20]=E>>>0&255,e[21]=E>>>8&255,e[22]=E>>>16&255,e[23]=E>>>24&255,e[24]=R>>>0&255,e[25]=R>>>8&255,e[26]=R>>>16&255,e[27]=R>>>24&255,e[28]=A>>>0&255,e[29]=A>>>8&255,e[30]=A>>>16&255,e[31]=A>>>24&255,e[32]=M>>>0&255,e[33]=M>>>8&255,e[34]=M>>>16&255,e[35]=M>>>24&255,e[36]=C>>>0&255,e[37]=C>>>8&255,e[38]=C>>>16&255,e[39]=C>>>24&255,e[40]=T>>>0&255,e[41]=T>>>8&255,e[42]=T>>>16&255,e[43]=T>>>24&255,e[44]=I>>>0&255,e[45]=I>>>8&255,e[46]=I>>>16&255,e[47]=I>>>24&255,e[48]=P>>>0&255,e[49]=P>>>8&255,e[50]=P>>>16&255,e[51]=P>>>24&255,e[52]=N>>>0&255,e[53]=N>>>8&255,e[54]=N>>>16&255,e[55]=N>>>24&255,e[56]=O>>>0&255,e[57]=O>>>8&255,e[58]=O>>>16&255,e[59]=O>>>24&255,e[60]=D>>>0&255,e[61]=D>>>8&255,e[62]=D>>>16&255,e[63]=D>>>24&255}(e,t,r,n)},i=function(e,t,r,n){!function(e,t,r,n){for(var a,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,i=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,u=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,c=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,s=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,p=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,m=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,y=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,g=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,$=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,w=0;w<20;w+=2)o^=(a=(y^=(a=(d^=(a=(s^=(a=o+y|0)<<7|a>>>25)+o|0)<<9|a>>>23)+s|0)<<13|a>>>19)+d|0)<<18|a>>>14,l^=(a=(i^=(a=(b^=(a=(h^=(a=l+i|0)<<7|a>>>25)+l|0)<<9|a>>>23)+h|0)<<13|a>>>19)+b|0)<<18|a>>>14,v^=(a=(f^=(a=(u^=(a=(g^=(a=v+f|0)<<7|a>>>25)+v|0)<<9|a>>>23)+g|0)<<13|a>>>19)+u|0)<<18|a>>>14,$^=(a=(m^=(a=(p^=(a=(c^=(a=$+m|0)<<7|a>>>25)+$|0)<<9|a>>>23)+c|0)<<13|a>>>19)+p|0)<<18|a>>>14,o^=(a=(c^=(a=(u^=(a=(i^=(a=o+c|0)<<7|a>>>25)+o|0)<<9|a>>>23)+i|0)<<13|a>>>19)+u|0)<<18|a>>>14,l^=(a=(s^=(a=(p^=(a=(f^=(a=l+s|0)<<7|a>>>25)+l|0)<<9|a>>>23)+f|0)<<13|a>>>19)+p|0)<<18|a>>>14,v^=(a=(h^=(a=(d^=(a=(m^=(a=v+h|0)<<7|a>>>25)+v|0)<<9|a>>>23)+m|0)<<13|a>>>19)+d|0)<<18|a>>>14,$^=(a=(g^=(a=(b^=(a=(y^=(a=$+g|0)<<7|a>>>25)+$|0)<<9|a>>>23)+y|0)<<13|a>>>19)+b|0)<<18|a>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=v>>>0&255,e[9]=v>>>8&255,e[10]=v>>>16&255,e[11]=v>>>24&255,e[12]=$>>>0&255,e[13]=$>>>8&255,e[14]=$>>>16&255,e[15]=$>>>24&255,e[16]=f>>>0&255,e[17]=f>>>8&255,e[18]=f>>>16&255,e[19]=f>>>24&255,e[20]=p>>>0&255,e[21]=p>>>8&255,e[22]=p>>>16&255,e[23]=p>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=h>>>0&255,e[29]=h>>>8&255,e[30]=h>>>16&255,e[31]=h>>>24&255}(e,t,r,n)},u=function(e,t,r,n,a,i,u){var c,s,l=new Uint8Array(16),f=new Uint8Array(64);for(s=0;s<16;s++)l[s]=0;for(s=0;s<8;s++)l[s]=i[s];for(;a>=64;){for(o(f,l,u,oe),s=0;s<64;s++)e[t+s]=r[n+s]^f[s];for(c=1,s=8;s<16;s++)c=c+(255&l[s])|0,l[s]=255&c,c>>>=8;a-=64,t+=64,n+=64}if(a>0)for(o(f,l,u,oe),s=0;s<a;s++)e[t+s]=r[n+s]^f[s];return 0},c=function(e,t,r,n,a){var i,u,c=new Uint8Array(16),s=new Uint8Array(64);for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=n[u];for(;r>=64;){for(o(s,c,a,oe),u=0;u<64;u++)e[t+u]=s[u];for(i=1,u=8;u<16;u++)i=i+(255&c[u])|0,c[u]=255&i,i>>>=8;r-=64,t+=64}if(r>0)for(o(s,c,a,oe),u=0;u<r;u++)e[t+u]=s[u];return 0},s=function(e,t,r,n,a){var o=new Uint8Array(32);i(o,n,a,oe);for(var u=new Uint8Array(8),s=0;s<8;s++)u[s]=n[s+16];return c(e,t,r,u,o)},l=function(e,t,r,n,a,o,c){var s=new Uint8Array(32);i(s,o,c,oe);for(var l=new Uint8Array(8),f=0;f<8;f++)l[f]=o[f+16];return u(e,t,r,n,a,l,s)},f=function(e,t,r,n,a,o){var i=new ie(o);return i.update(r,n,a),i.finish(e,t),0},p=function(e,t,r,a,o,i){var u=new Uint8Array(16);return f(u,0,r,a,o,i),n(e,t,u,0)},d=function(e,t,r,n,a){var o;if(r<32)return-1;for(l(e,0,t,0,r,n,a),f(e,16,e,32,r-32,e),o=0;o<16;o++)e[o]=0;return 0},h=function(e,t,r,n,a){var o,i=new Uint8Array(32);if(r<32)return-1;if(s(i,0,32,n,a),0!==p(t,16,t,32,r-32,i))return-1;for(l(e,0,t,0,r,n,a),o=0;o<32;o++)e[o]=0;return 0},v=function(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]},m=function(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)},y=function(e,t,r){for(var n,a=~(r-1),o=0;o<16;o++)n=a&(e[o]^t[o]),e[o]^=n,t[o]^=n},b=function(e,t){var r,n,a,o=V(),i=V();for(r=0;r<16;r++)i[r]=t[r];for(m(i),m(i),m(i),n=0;n<2;n++){for(o[0]=i[0]-65517,r=1;r<15;r++)o[r]=i[r]-65535-(o[r-1]>>16&1),o[r-1]&=65535;o[15]=i[15]-32767-(o[14]>>16&1),a=o[15]>>16&1,o[14]&=65535,y(i,o,1-a)}for(r=0;r<16;r++)e[2*r]=255&i[r],e[2*r+1]=i[r]>>8},g=function(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return b(r,e),b(n,t),a(r,0,n,0)},$=function(e){var t=new Uint8Array(32);return b(t,e),1&t[0]},w=function(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767},x=function(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]},k=function(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]},_=function(e,t,r){var n,a,o=0,i=0,u=0,c=0,s=0,l=0,f=0,p=0,d=0,h=0,v=0,m=0,y=0,b=0,g=0,$=0,w=0,x=0,k=0,_=0,S=0,E=0,R=0,A=0,M=0,C=0,T=0,I=0,P=0,N=0,O=0,D=r[0],q=r[1],U=r[2],j=r[3],L=r[4],B=r[5],F=r[6],z=r[7],K=r[8],H=r[9],W=r[10],V=r[11],X=r[12],G=r[13],Z=r[14],J=r[15];o+=(n=t[0])*D,i+=n*q,u+=n*U,c+=n*j,s+=n*L,l+=n*B,f+=n*F,p+=n*z,d+=n*K,h+=n*H,v+=n*W,m+=n*V,y+=n*X,b+=n*G,g+=n*Z,$+=n*J,i+=(n=t[1])*D,u+=n*q,c+=n*U,s+=n*j,l+=n*L,f+=n*B,p+=n*F,d+=n*z,h+=n*K,v+=n*H,m+=n*W,y+=n*V,b+=n*X,g+=n*G,$+=n*Z,w+=n*J,u+=(n=t[2])*D,c+=n*q,s+=n*U,l+=n*j,f+=n*L,p+=n*B,d+=n*F,h+=n*z,v+=n*K,m+=n*H,y+=n*W,b+=n*V,g+=n*X,$+=n*G,w+=n*Z,x+=n*J,c+=(n=t[3])*D,s+=n*q,l+=n*U,f+=n*j,p+=n*L,d+=n*B,h+=n*F,v+=n*z,m+=n*K,y+=n*H,b+=n*W,g+=n*V,$+=n*X,w+=n*G,x+=n*Z,k+=n*J,s+=(n=t[4])*D,l+=n*q,f+=n*U,p+=n*j,d+=n*L,h+=n*B,v+=n*F,m+=n*z,y+=n*K,b+=n*H,g+=n*W,$+=n*V,w+=n*X,x+=n*G,k+=n*Z,_+=n*J,l+=(n=t[5])*D,f+=n*q,p+=n*U,d+=n*j,h+=n*L,v+=n*B,m+=n*F,y+=n*z,b+=n*K,g+=n*H,$+=n*W,w+=n*V,x+=n*X,k+=n*G,_+=n*Z,S+=n*J,f+=(n=t[6])*D,p+=n*q,d+=n*U,h+=n*j,v+=n*L,m+=n*B,y+=n*F,b+=n*z,g+=n*K,$+=n*H,w+=n*W,x+=n*V,k+=n*X,_+=n*G,S+=n*Z,E+=n*J,p+=(n=t[7])*D,d+=n*q,h+=n*U,v+=n*j,m+=n*L,y+=n*B,b+=n*F,g+=n*z,$+=n*K,w+=n*H,x+=n*W,k+=n*V,_+=n*X,S+=n*G,E+=n*Z,R+=n*J,d+=(n=t[8])*D,h+=n*q,v+=n*U,m+=n*j,y+=n*L,b+=n*B,g+=n*F,$+=n*z,w+=n*K,x+=n*H,k+=n*W,_+=n*V,S+=n*X,E+=n*G,R+=n*Z,A+=n*J,h+=(n=t[9])*D,v+=n*q,m+=n*U,y+=n*j,b+=n*L,g+=n*B,$+=n*F,w+=n*z,x+=n*K,k+=n*H,_+=n*W,S+=n*V,E+=n*X,R+=n*G,A+=n*Z,M+=n*J,v+=(n=t[10])*D,m+=n*q,y+=n*U,b+=n*j,g+=n*L,$+=n*B,w+=n*F,x+=n*z,k+=n*K,_+=n*H,S+=n*W,E+=n*V,R+=n*X,A+=n*G,M+=n*Z,C+=n*J,m+=(n=t[11])*D,y+=n*q,b+=n*U,g+=n*j,$+=n*L,w+=n*B,x+=n*F,k+=n*z,_+=n*K,S+=n*H,E+=n*W,R+=n*V,A+=n*X,M+=n*G,C+=n*Z,T+=n*J,y+=(n=t[12])*D,b+=n*q,g+=n*U,$+=n*j,w+=n*L,x+=n*B,k+=n*F,_+=n*z,S+=n*K,E+=n*H,R+=n*W,A+=n*V,M+=n*X,C+=n*G,T+=n*Z,I+=n*J,b+=(n=t[13])*D,g+=n*q,$+=n*U,w+=n*j,x+=n*L,k+=n*B,_+=n*F,S+=n*z,E+=n*K,R+=n*H,A+=n*W,M+=n*V,C+=n*X,T+=n*G,I+=n*Z,P+=n*J,g+=(n=t[14])*D,$+=n*q,w+=n*U,x+=n*j,k+=n*L,_+=n*B,S+=n*F,E+=n*z,R+=n*K,A+=n*H,M+=n*W,C+=n*V,T+=n*X,I+=n*G,P+=n*Z,N+=n*J,$+=(n=t[15])*D,i+=38*(x+=n*U),u+=38*(k+=n*j),c+=38*(_+=n*L),s+=38*(S+=n*B),l+=38*(E+=n*F),f+=38*(R+=n*z),p+=38*(A+=n*K),d+=38*(M+=n*H),h+=38*(C+=n*W),v+=38*(T+=n*V),m+=38*(I+=n*X),y+=38*(P+=n*G),b+=38*(N+=n*Z),g+=38*(O+=n*J),o=(n=(o+=38*(w+=n*q))+(a=1)+65535)-65536*(a=Math.floor(n/65536)),i=(n=i+a+65535)-65536*(a=Math.floor(n/65536)),u=(n=u+a+65535)-65536*(a=Math.floor(n/65536)),c=(n=c+a+65535)-65536*(a=Math.floor(n/65536)),s=(n=s+a+65535)-65536*(a=Math.floor(n/65536)),l=(n=l+a+65535)-65536*(a=Math.floor(n/65536)),f=(n=f+a+65535)-65536*(a=Math.floor(n/65536)),p=(n=p+a+65535)-65536*(a=Math.floor(n/65536)),d=(n=d+a+65535)-65536*(a=Math.floor(n/65536)),h=(n=h+a+65535)-65536*(a=Math.floor(n/65536)),v=(n=v+a+65535)-65536*(a=Math.floor(n/65536)),m=(n=m+a+65535)-65536*(a=Math.floor(n/65536)),y=(n=y+a+65535)-65536*(a=Math.floor(n/65536)),b=(n=b+a+65535)-65536*(a=Math.floor(n/65536)),g=(n=g+a+65535)-65536*(a=Math.floor(n/65536)),$=(n=$+a+65535)-65536*(a=Math.floor(n/65536)),o=(n=(o+=a-1+37*(a-1))+(a=1)+65535)-65536*(a=Math.floor(n/65536)),i=(n=i+a+65535)-65536*(a=Math.floor(n/65536)),u=(n=u+a+65535)-65536*(a=Math.floor(n/65536)),c=(n=c+a+65535)-65536*(a=Math.floor(n/65536)),s=(n=s+a+65535)-65536*(a=Math.floor(n/65536)),l=(n=l+a+65535)-65536*(a=Math.floor(n/65536)),f=(n=f+a+65535)-65536*(a=Math.floor(n/65536)),p=(n=p+a+65535)-65536*(a=Math.floor(n/65536)),d=(n=d+a+65535)-65536*(a=Math.floor(n/65536)),h=(n=h+a+65535)-65536*(a=Math.floor(n/65536)),v=(n=v+a+65535)-65536*(a=Math.floor(n/65536)),m=(n=m+a+65535)-65536*(a=Math.floor(n/65536)),y=(n=y+a+65535)-65536*(a=Math.floor(n/65536)),b=(n=b+a+65535)-65536*(a=Math.floor(n/65536)),g=(n=g+a+65535)-65536*(a=Math.floor(n/65536)),$=(n=$+a+65535)-65536*(a=Math.floor(n/65536)),o+=a-1+37*(a-1),e[0]=o,e[1]=i,e[2]=u,e[3]=c,e[4]=s,e[5]=l,e[6]=f,e[7]=p,e[8]=d,e[9]=h,e[10]=v,e[11]=m,e[12]=y,e[13]=b,e[14]=g,e[15]=$},S=function(e,t){_(e,t,t)},E=function(e,t){var r,n=V();for(r=0;r<16;r++)n[r]=t[r];for(r=253;r>=0;r--)S(n,n),2!==r&&4!==r&&_(n,n,t);for(r=0;r<16;r++)e[r]=n[r]},R=function(e,t){var r,n=V();for(r=0;r<16;r++)n[r]=t[r];for(r=250;r>=0;r--)S(n,n),1!==r&&_(n,n,t);for(r=0;r<16;r++)e[r]=n[r]},A=function(e,t,r){var n,a,o=new Uint8Array(32),i=new Float64Array(80),u=V(),c=V(),s=V(),l=V(),f=V(),p=V();for(a=0;a<31;a++)o[a]=t[a];for(o[31]=127&t[31]|64,o[0]&=248,w(i,r),a=0;a<16;a++)c[a]=i[a],l[a]=u[a]=s[a]=0;for(u[0]=l[0]=1,a=254;a>=0;--a)n=o[a>>>3]>>>(7&a)&1,y(u,c,n),y(s,l,n),x(f,u,s),k(u,u,s),x(s,c,l),k(c,c,l),S(l,f),S(p,u),_(u,s,u),_(s,c,f),x(f,u,s),k(u,u,s),S(c,u),k(s,l,p),_(u,s,Q),x(u,u,l),_(s,s,u),_(u,l,p),_(l,c,i),S(c,f),y(u,c,n),y(s,l,n);for(a=0;a<16;a++)i[a+16]=u[a],i[a+32]=s[a],i[a+48]=c[a],i[a+64]=l[a];var d=i.subarray(32),h=i.subarray(16);return E(d,d),_(h,h,d),b(e,h),0},M=function(e,t){return A(e,t,Z)},C=function(e,t){return X(t,32),M(e,t)},T=function(e,t,r){var n=new Uint8Array(32);return A(n,r,t),i(e,G,n,oe)},I=function(e,t,r,n){for(var a,o,i,u,c,s,l,f,p,d,h,v,m,y,b,g,$,w,x,k,_,S,E,R,A,M,C=new Int32Array(16),T=new Int32Array(16),I=e[0],P=e[1],N=e[2],O=e[3],D=e[4],q=e[5],U=e[6],j=e[7],L=t[0],B=t[1],F=t[2],z=t[3],K=t[4],H=t[5],W=t[6],V=t[7],X=0;n>=128;){for(x=0;x<16;x++)k=8*x+X,C[x]=r[k+0]<<24|r[k+1]<<16|r[k+2]<<8|r[k+3],T[x]=r[k+4]<<24|r[k+5]<<16|r[k+6]<<8|r[k+7];for(x=0;x<80;x++)if(a=I,o=P,i=N,u=O,c=D,s=q,l=U,j,p=L,d=B,h=F,v=z,m=K,y=H,b=W,V,E=65535&(S=V),R=S>>>16,A=65535&(_=j),M=_>>>16,E+=65535&(S=(K>>>14|D<<18)^(K>>>18|D<<14)^(D>>>9|K<<23)),R+=S>>>16,A+=65535&(_=(D>>>14|K<<18)^(D>>>18|K<<14)^(K>>>9|D<<23)),M+=_>>>16,E+=65535&(S=K&H^~K&W),R+=S>>>16,A+=65535&(_=D&q^~D&U),M+=_>>>16,_=se[2*x],E+=65535&(S=se[2*x+1]),R+=S>>>16,A+=65535&_,M+=_>>>16,_=C[x%16],R+=(S=T[x%16])>>>16,A+=65535&_,M+=_>>>16,A+=(R+=(E+=65535&S)>>>16)>>>16,E=65535&(S=w=65535&E|R<<16),R=S>>>16,A=65535&(_=$=65535&A|(M+=A>>>16)<<16),M=_>>>16,E+=65535&(S=(L>>>28|I<<4)^(I>>>2|L<<30)^(I>>>7|L<<25)),R+=S>>>16,A+=65535&(_=(I>>>28|L<<4)^(L>>>2|I<<30)^(L>>>7|I<<25)),M+=_>>>16,R+=(S=L&B^L&F^B&F)>>>16,A+=65535&(_=I&P^I&N^P&N),M+=_>>>16,f=65535&(A+=(R+=(E+=65535&S)>>>16)>>>16)|(M+=A>>>16)<<16,g=65535&E|R<<16,E=65535&(S=v),R=S>>>16,A=65535&(_=u),M=_>>>16,R+=(S=w)>>>16,A+=65535&(_=$),M+=_>>>16,P=a,N=o,O=i,D=u=65535&(A+=(R+=(E+=65535&S)>>>16)>>>16)|(M+=A>>>16)<<16,q=c,U=s,j=l,I=f,B=p,F=d,z=h,K=v=65535&E|R<<16,H=m,W=y,V=b,L=g,x%16==15)for(k=0;k<16;k++)_=C[k],E=65535&(S=T[k]),R=S>>>16,A=65535&_,M=_>>>16,_=C[(k+9)%16],E+=65535&(S=T[(k+9)%16]),R+=S>>>16,A+=65535&_,M+=_>>>16,$=C[(k+1)%16],E+=65535&(S=((w=T[(k+1)%16])>>>1|$<<31)^(w>>>8|$<<24)^(w>>>7|$<<25)),R+=S>>>16,A+=65535&(_=($>>>1|w<<31)^($>>>8|w<<24)^$>>>7),M+=_>>>16,$=C[(k+14)%16],R+=(S=((w=T[(k+14)%16])>>>19|$<<13)^($>>>29|w<<3)^(w>>>6|$<<26))>>>16,A+=65535&(_=($>>>19|w<<13)^(w>>>29|$<<3)^$>>>6),M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,C[k]=65535&A|M<<16,T[k]=65535&E|R<<16;E=65535&(S=L),R=S>>>16,A=65535&(_=I),M=_>>>16,_=e[0],R+=(S=t[0])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[0]=I=65535&A|M<<16,t[0]=L=65535&E|R<<16,E=65535&(S=B),R=S>>>16,A=65535&(_=P),M=_>>>16,_=e[1],R+=(S=t[1])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[1]=P=65535&A|M<<16,t[1]=B=65535&E|R<<16,E=65535&(S=F),R=S>>>16,A=65535&(_=N),M=_>>>16,_=e[2],R+=(S=t[2])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[2]=N=65535&A|M<<16,t[2]=F=65535&E|R<<16,E=65535&(S=z),R=S>>>16,A=65535&(_=O),M=_>>>16,_=e[3],R+=(S=t[3])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[3]=O=65535&A|M<<16,t[3]=z=65535&E|R<<16,E=65535&(S=K),R=S>>>16,A=65535&(_=D),M=_>>>16,_=e[4],R+=(S=t[4])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[4]=D=65535&A|M<<16,t[4]=K=65535&E|R<<16,E=65535&(S=H),R=S>>>16,A=65535&(_=q),M=_>>>16,_=e[5],R+=(S=t[5])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[5]=q=65535&A|M<<16,t[5]=H=65535&E|R<<16,E=65535&(S=W),R=S>>>16,A=65535&(_=U),M=_>>>16,_=e[6],R+=(S=t[6])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[6]=U=65535&A|M<<16,t[6]=W=65535&E|R<<16,E=65535&(S=V),R=S>>>16,A=65535&(_=j),M=_>>>16,_=e[7],R+=(S=t[7])>>>16,A+=65535&_,M+=_>>>16,M+=(A+=(R+=(E+=65535&S)>>>16)>>>16)>>>16,e[7]=j=65535&A|M<<16,t[7]=V=65535&E|R<<16,X+=128,n-=128}return n},P=function(e,r,n){var a,o=new Int32Array(8),i=new Int32Array(8),u=new Uint8Array(256),c=n;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,I(o,i,r,n),n%=128,a=0;a<n;a++)u[a]=r[c-n+a];for(u[n]=128,u[(n=256-128*(n<112?1:0))-9]=0,t(u,n-8,c/536870912|0,c<<3),I(o,i,u,n),a=0;a<8;a++)t(e,8*a,o[a],i[a]);return 0},N=function(e,t){var r=V(),n=V(),a=V(),o=V(),i=V(),u=V(),c=V(),s=V(),l=V();k(r,e[1],e[0]),k(l,t[1],t[0]),_(r,r,l),x(n,e[0],e[1]),x(l,t[0],t[1]),_(n,n,l),_(a,e[3],t[3]),_(a,a,te),_(o,e[2],t[2]),x(o,o,o),k(i,n,r),k(u,o,a),x(c,o,a),x(s,n,r),_(e[0],i,u),_(e[1],s,c),_(e[2],c,u),_(e[3],i,s)},O=function(e,t,r){var n;for(n=0;n<4;n++)y(e[n],t[n],r)},D=function(e,t){var r=V(),n=V(),a=V();E(a,t[2]),_(r,t[0],a),_(n,t[1],a),b(e,n),e[31]^=$(r)<<7},q=function(e,t,r){var n,a;for(v(e[0],J),v(e[1],Y),v(e[2],Y),v(e[3],J),a=255;a>=0;--a)n=r[a/8|0]>>(7&a)&1,O(e,t,n),N(t,e),N(e,e),O(e,t,n)},U=function(e,t){var r=[V(),V(),V(),V()];v(r[0],re),v(r[1],ne),v(r[2],Y),_(r[3],re,ne),q(e,r,t)},j=function(e,t,r){var n,a=new Uint8Array(64),o=[V(),V(),V(),V()];for(r||X(t,32),P(a,t,32),a[0]&=248,a[31]&=127,a[31]|=64,U(o,a),D(e,o),n=0;n<32;n++)t[n+32]=e[n];return 0},L=function(e,t){var r,n,a,o;for(n=63;n>=32;--n){for(r=0,a=n-32,o=n-12;a<o;++a)t[a]+=r-16*t[n]*le[a-(n-32)],r=Math.floor((t[a]+128)/256),t[a]-=256*r;t[a]+=r,t[n]=0}for(r=0,a=0;a<32;a++)t[a]+=r-(t[31]>>4)*le[a],r=t[a]>>8,t[a]&=255;for(a=0;a<32;a++)t[a]-=r*le[a];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]},B=function(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;L(e,r)},F=function(e,t,r,n){var a,o,i=new Uint8Array(64),u=new Uint8Array(64),c=new Uint8Array(64),s=new Float64Array(64),l=[V(),V(),V(),V()];P(i,n,32),i[0]&=248,i[31]&=127,i[31]|=64;var f=r+64;for(a=0;a<r;a++)e[64+a]=t[a];for(a=0;a<32;a++)e[32+a]=i[32+a];for(P(c,e.subarray(32),r+32),B(c),U(l,c),D(e,l),a=32;a<64;a++)e[a]=n[a];for(P(u,e,r+64),B(u),a=0;a<64;a++)s[a]=0;for(a=0;a<32;a++)s[a]=c[a];for(a=0;a<32;a++)for(o=0;o<32;o++)s[a+o]+=u[a]*i[o];return L(e.subarray(32),s),f},z=function(e,t,r,n){var o,i=new Uint8Array(32),u=new Uint8Array(64),c=[V(),V(),V(),V()],s=[V(),V(),V(),V()];if(r<64)return-1;if(function(e,t){var r=V(),n=V(),a=V(),o=V(),i=V(),u=V(),c=V();return v(e[2],Y),w(e[1],t),S(a,e[1]),_(o,a,ee),k(a,a,e[2]),x(o,e[2],o),S(i,o),S(u,i),_(c,u,i),_(r,c,a),_(r,r,o),R(r,r),_(r,r,a),_(r,r,o),_(r,r,o),_(e[0],r,o),S(n,e[0]),_(n,n,o),g(n,a)&&_(e[0],e[0],ae),S(n,e[0]),_(n,n,o),g(n,a)?-1:($(e[0])===t[31]>>7&&k(e[0],J,e[0]),_(e[3],e[0],e[1]),0)}(s,n))return-1;for(o=0;o<r;o++)e[o]=t[o];for(o=0;o<32;o++)e[o+32]=n[o];if(P(u,e,r),B(u),q(c,s,u),U(s,t.subarray(32)),N(c,s),D(i,c),r-=64,a(t,0,i,0)){for(o=0;o<r;o++)e[o]=0;return-1}for(o=0;o<r;o++)e[o]=t[o+64];return r},K=function(e,t){if(e.length!==fe)throw new Error("bad key size");if(t.length!==pe)throw new Error("bad nonce size")},H=function(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")},W=function(e){for(var t=0;t<e.length;t++)e[t]=0},V=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},X=function(){throw new Error("no PRNG")},G=new Uint8Array(16),Z=new Uint8Array(32);Z[0]=9;var J=V(),Y=V([1]),Q=V([56129,1]),ee=V([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),te=V([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),re=V([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),ne=V([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),ae=V([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]),oe=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]),ie=function(e){var t,r,n,a,o,i,u,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),a=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|a<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(a>>>4|o<<12),this.r[5]=o>>>1&8190,i=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|i<<2),u=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(i>>>11|u<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(u>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};ie.prototype.blocks=function(e,t,r){for(var n,a,o,i,u,c,s,l,f,p,d,h,v,m,y,b,g,$,w,x=this.fin?0:2048,k=this.h[0],_=this.h[1],S=this.h[2],E=this.h[3],R=this.h[4],A=this.h[5],M=this.h[6],C=this.h[7],T=this.h[8],I=this.h[9],P=this.r[0],N=this.r[1],O=this.r[2],D=this.r[3],q=this.r[4],U=this.r[5],j=this.r[6],L=this.r[7],B=this.r[8],F=this.r[9];r>=16;)p=f=0,p+=(k+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*P,p+=(_+=8191&(n>>>13|(a=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*F),p+=(S+=8191&(a>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*B),p+=(E+=8191&(o>>>7|(i=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*L),f=(p+=(R+=8191&(i>>>4|(u=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*j))>>>13,p&=8191,p+=(A+=u>>>1&8191)*(5*U),p+=(M+=8191&(u>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*q),p+=(C+=8191&(c>>>11|(s=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*D),p+=(T+=8191&(s>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*O),d=f+=(p+=(I+=l>>>5|x)*(5*N))>>>13,d+=k*N,d+=_*P,d+=S*(5*F),d+=E*(5*B),f=(d+=R*(5*L))>>>13,d&=8191,d+=A*(5*j),d+=M*(5*U),d+=C*(5*q),d+=T*(5*D),f+=(d+=I*(5*O))>>>13,d&=8191,h=f,h+=k*O,h+=_*N,h+=S*P,h+=E*(5*F),f=(h+=R*(5*B))>>>13,h&=8191,h+=A*(5*L),h+=M*(5*j),h+=C*(5*U),h+=T*(5*q),v=f+=(h+=I*(5*D))>>>13,v+=k*D,v+=_*O,v+=S*N,v+=E*P,f=(v+=R*(5*F))>>>13,v&=8191,v+=A*(5*B),v+=M*(5*L),v+=C*(5*j),v+=T*(5*U),m=f+=(v+=I*(5*q))>>>13,m+=k*q,m+=_*D,m+=S*O,m+=E*N,f=(m+=R*P)>>>13,m&=8191,m+=A*(5*F),m+=M*(5*B),m+=C*(5*L),m+=T*(5*j),y=f+=(m+=I*(5*U))>>>13,y+=k*U,y+=_*q,y+=S*D,y+=E*O,f=(y+=R*N)>>>13,y&=8191,y+=A*P,y+=M*(5*F),y+=C*(5*B),y+=T*(5*L),b=f+=(y+=I*(5*j))>>>13,b+=k*j,b+=_*U,b+=S*q,b+=E*D,f=(b+=R*O)>>>13,b&=8191,b+=A*N,b+=M*P,b+=C*(5*F),b+=T*(5*B),g=f+=(b+=I*(5*L))>>>13,g+=k*L,g+=_*j,g+=S*U,g+=E*q,f=(g+=R*D)>>>13,g&=8191,g+=A*O,g+=M*N,g+=C*P,g+=T*(5*F),$=f+=(g+=I*(5*B))>>>13,$+=k*B,$+=_*L,$+=S*j,$+=E*U,f=($+=R*q)>>>13,$&=8191,$+=A*D,$+=M*O,$+=C*N,$+=T*P,w=f+=($+=I*(5*F))>>>13,w+=k*F,w+=_*B,w+=S*L,w+=E*j,f=(w+=R*U)>>>13,w&=8191,w+=A*q,w+=M*D,w+=C*O,w+=T*N,k=p=8191&(f=(f=((f+=(w+=I*P)>>>13)<<2)+f|0)+(p&=8191)|0),_=d+=f>>>=13,S=h&=8191,E=v&=8191,R=m&=8191,A=y&=8191,M=b&=8191,C=g&=8191,T=$&=8191,I=w&=8191,t+=16,r-=16;this.h[0]=k,this.h[1]=_,this.h[2]=S,this.h[3]=E,this.h[4]=R,this.h[5]=A,this.h[6]=M,this.h[7]=C,this.h[8]=T,this.h[9]=I},ie.prototype.finish=function(e,t){var r,n,a,o,i=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=r,r=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,i[0]=this.h[0]+5,r=i[0]>>>13,i[0]&=8191,o=1;o<10;o++)i[o]=this.h[o]+r,r=i[o]>>>13,i[o]&=8191;for(i[9]-=8192,n=(1^r)-1,o=0;o<10;o++)i[o]&=n;for(n=~n,o=0;o<10;o++)this.h[o]=this.h[o]&n|i[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),a=this.h[0]+this.pad[0],this.h[0]=65535&a,o=1;o<8;o++)a=(this.h[o]+this.pad[o]|0)+(a>>>16)|0,this.h[o]=65535&a;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},ie.prototype.update=function(e,t,r){var n,a;if(this.leftover){for((a=16-this.leftover)>r&&(a=r),n=0;n<a;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=a,t+=a,this.leftover+=a,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(a=r-r%16,this.blocks(e,t,a),t+=a,r-=a),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var ue=d,ce=h,se=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],le=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]),fe=32,pe=24,de=16,he=32,ve=32,me=pe,ye=64,be=32,ge=64;e.lowlevel={crypto_core_hsalsa20:i,crypto_stream_xor:l,crypto_stream:s,crypto_stream_salsa20_xor:u,crypto_stream_salsa20:c,crypto_onetimeauth:f,crypto_onetimeauth_verify:p,crypto_verify_16:n,crypto_verify_32:a,crypto_secretbox:d,crypto_secretbox_open:h,crypto_scalarmult:A,crypto_scalarmult_base:M,crypto_box_beforenm:T,crypto_box_afternm:ue,crypto_box:function(e,t,r,n,a,o){var i=new Uint8Array(32);return T(i,a,o),ue(e,t,r,n,i)},crypto_box_open:function(e,t,r,n,a,o){var i=new Uint8Array(32);return T(i,a,o),ce(e,t,r,n,i)},crypto_box_keypair:C,crypto_hash:P,crypto_sign:F,crypto_sign_keypair:j,crypto_sign_open:z,crypto_secretbox_KEYBYTES:fe,crypto_secretbox_NONCEBYTES:pe,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:de,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:he,crypto_box_SECRETKEYBYTES:ve,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:me,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ye,crypto_sign_PUBLICKEYBYTES:be,crypto_sign_SECRETKEYBYTES:ge,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:V,D:ee,L:le,pack25519:b,unpack25519:w,M:_,A:x,S:S,Z:k,pow2523:R,add:N,set25519:v,modL:L,scalarmult:q,scalarbase:U},e.randomBytes=function(e){var t=new Uint8Array(e);return X(t,e),t},e.secretbox=function(e,t,r){H(e,t,r),K(r,t);for(var n=new Uint8Array(32+e.length),a=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+32]=e[o];return d(a,n,n.length,t,r),a.subarray(de)},e.secretbox.open=function(e,t,r){H(e,t,r),K(r,t);for(var n=new Uint8Array(de+e.length),a=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+de]=e[o];return n.length<32||0!==h(a,n,n.length,t,r)?null:a.subarray(32)},e.secretbox.keyLength=fe,e.secretbox.nonceLength=pe,e.secretbox.overheadLength=de,e.scalarMult=function(e,t){if(H(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return A(r,e,t),r},e.scalarMult.base=function(e){if(H(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return M(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,a){var o=e.box.before(n,a);return e.secretbox(t,r,o)},e.box.before=function(e,t){H(e,t),function(e,t){if(e.length!==he)throw new Error("bad public key size");if(t.length!==ve)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return T(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,a){var o=e.box.before(n,a);return e.secretbox.open(t,r,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(he),t=new Uint8Array(ve);return C(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(H(e),e.length!==ve)throw new Error("bad secret key size");var t=new Uint8Array(he);return M(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=he,e.box.secretKeyLength=ve,e.box.sharedKeyLength=32,e.box.nonceLength=me,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(H(e,t),t.length!==ge)throw new Error("bad secret key size");var r=new Uint8Array(ye+e.length);return F(r,e,e.length,t),r},e.sign.open=function(e,t){if(H(e,t),t.length!==be)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=z(r,e,e.length,t);if(n<0)return null;for(var a=new Uint8Array(n),o=0;o<a.length;o++)a[o]=r[o];return a},e.sign.detached=function(t,r){for(var n=e.sign(t,r),a=new Uint8Array(ye),o=0;o<a.length;o++)a[o]=n[o];return a},e.sign.detached.verify=function(e,t,r){if(H(e,t,r),t.length!==ye)throw new Error("bad signature size");if(r.length!==be)throw new Error("bad public key size");var n,a=new Uint8Array(ye+e.length),o=new Uint8Array(ye+e.length);for(n=0;n<ye;n++)a[n]=t[n];for(n=0;n<e.length;n++)a[n+ye]=e[n];return z(o,a,a.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(be),t=new Uint8Array(ge);return j(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(H(e),e.length!==ge)throw new Error("bad secret key size");for(var t=new Uint8Array(be),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(H(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(be),r=new Uint8Array(ge),n=0;n<32;n++)r[n]=e[n];return j(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=be,e.sign.secretKeyLength=ge,e.sign.seedLength=32,e.sign.signatureLength=ye,e.hash=function(e){H(e);var t=new Uint8Array(64);return P(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return H(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===r(e,0,t,0,e.length))},e.setPRNG=function(e){X=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG((function(e,r){var n,a=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(a.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=a[n];W(a)}))}else(t=parcelRequire("aqbQf"))&&t.randomBytes&&e.setPRNG((function(e,r){var n,a=t.randomBytes(r);for(n=0;n<r;n++)e[n]=a[n];W(a)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})})),parcelRequire.register("aqbQf",(function(e,t){})),parcelRequire.register("2RCX3",(function(e,t){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0});var r=parcelRequire("2HPkT");Object.defineProperty(e.exports,"base_encode",{enumerable:!0,get:function(){return r.baseEncode}}),Object.defineProperty(e.exports,"base_decode",{enumerable:!0,get:function(){return r.baseDecode}}),Object.defineProperty(e.exports,"serialize",{enumerable:!0,get:function(){return r.serialize}}),Object.defineProperty(e.exports,"deserialize",{enumerable:!0,get:function(){return r.deserialize}}),Object.defineProperty(e.exports,"BorshError",{enumerable:!0,get:function(){return r.BorshError}}),Object.defineProperty(e.exports,"BinaryWriter",{enumerable:!0,get:function(){return r.BinaryWriter}}),Object.defineProperty(e.exports,"BinaryReader",{enumerable:!0,get:function(){return r.BinaryReader}})})),parcelRequire.register("2HPkT",(function(e,t){var r=parcelRequire("8y9hR"),n=parcelRequire("2WaBo"),a=parcelRequire("d0ZZj"),o=parcelRequire("5Djcm"),i=parcelRequire("hNZKs"),u=parcelRequire("3i6WR"),c=parcelRequire("kY881"),s=parcelRequire("jPoaI").Buffer,l=Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]},f=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t},p=function(e,t,r,n){var a,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var u=e.length-1;u>=0;u--)(a=e[u])&&(i=(o<3?a(i):o>3?a(t,r,i):a(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&l(t,e,r);return f(t,e),t},h=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.deserializeUnchecked=e.exports.deserialize=e.exports.serialize=e.exports.BinaryReader=e.exports.BinaryWriter=e.exports.BorshError=e.exports.baseDecode=e.exports.baseEncode=void 0;var v=h(parcelRequire("jlWHo")),m=h(parcelRequire("5m7wF")),y=d(parcelRequire("7fpPy")),b=new("function"!=typeof $parcel$global.TextDecoder?y.TextDecoder:$parcel$global.TextDecoder)("utf-8",{fatal:!0});e.exports.baseEncode=function(e){return"string"==typeof e&&(e=s.from(e,"utf8")),m.default.encode(s.from(e))},e.exports.baseDecode=function(e){return s.from(m.default.decode(e))};var g=1024,$=function(e){(0,o.default)(a,e);var t=(0,c.default)(a);function a(e){var n;return(0,r.default)(this,a),(n=t.call(this,e)).fieldPath=[],n.originalMessage=e,n}return(0,n.default)(a,[{key:"addToFieldPath",value:function(e){this.fieldPath.splice(0,0,e),this.message=this.originalMessage+": "+this.fieldPath.join(".")}}]),a}((0,u.default)(Error));e.exports.BorshError=$;var w=function(){function e(){(0,r.default)(this,e),this.buf=s.alloc(g),this.length=0}return(0,n.default)(e,[{key:"maybeResize",value:function(){this.buf.length<16+this.length&&(this.buf=s.concat([this.buf,s.alloc(g)]))}},{key:"writeU8",value:function(e){this.maybeResize(),this.buf.writeUInt8(e,this.length),this.length+=1}},{key:"writeU16",value:function(e){this.maybeResize(),this.buf.writeUInt16LE(e,this.length),this.length+=2}},{key:"writeU32",value:function(e){this.maybeResize(),this.buf.writeUInt32LE(e,this.length),this.length+=4}},{key:"writeU64",value:function(e){this.maybeResize(),this.writeBuffer(s.from(new v.default(e).toArray("le",8)))}},{key:"writeU128",value:function(e){this.maybeResize(),this.writeBuffer(s.from(new v.default(e).toArray("le",16)))}},{key:"writeU256",value:function(e){this.maybeResize(),this.writeBuffer(s.from(new v.default(e).toArray("le",32)))}},{key:"writeU512",value:function(e){this.maybeResize(),this.writeBuffer(s.from(new v.default(e).toArray("le",64)))}},{key:"writeBuffer",value:function(e){this.buf=s.concat([s.from(this.buf.subarray(0,this.length)),e,s.alloc(g)]),this.length+=e.length}},{key:"writeString",value:function(e){this.maybeResize();var t=s.from(e,"utf8");this.writeU32(t.length),this.writeBuffer(t)}},{key:"writeFixedArray",value:function(e){this.writeBuffer(s.from(e))}},{key:"writeArray",value:function(e,t){this.maybeResize(),this.writeU32(e.length);var r=!0,n=!1,a=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done);r=!0){var u=o.value;this.maybeResize(),t(u)}}catch(e){n=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(n)throw a}}}},{key:"toArray",value:function(){return this.buf.subarray(0,this.length)}}]),e}();function x(e,t,r){var n=r.value;r.value=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];try{return n.apply(this,t)}catch(e){if(e instanceof RangeError){var a=e.code;if(["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(a)>=0)throw new $("Reached the end of buffer when deserializing")}throw e}}}e.exports.BinaryWriter=w;var k=function(){function e(t){(0,r.default)(this,e),this.buf=t,this.offset=0}return(0,n.default)(e,[{key:"readU8",value:function(){var e=this.buf.readUInt8(this.offset);return this.offset+=1,e}},{key:"readU16",value:function(){var e=this.buf.readUInt16LE(this.offset);return this.offset+=2,e}},{key:"readU32",value:function(){var e=this.buf.readUInt32LE(this.offset);return this.offset+=4,e}},{key:"readU64",value:function(){var e=this.readBuffer(8);return new v.default(e,"le")}},{key:"readU128",value:function(){var e=this.readBuffer(16);return new v.default(e,"le")}},{key:"readU256",value:function(){var e=this.readBuffer(32);return new v.default(e,"le")}},{key:"readU512",value:function(){var e=this.readBuffer(64);return new v.default(e,"le")}},{key:"readBuffer",value:function(e){if(this.offset+e>this.buf.length)throw new $("Expected buffer length ".concat(e," isn't within bounds"));var t=this.buf.slice(this.offset,this.offset+e);return this.offset+=e,t}},{key:"readString",value:function(){var e=this.readU32(),t=this.readBuffer(e);try{return b.decode(t)}catch(e){throw new $("Error decoding UTF-8 string: ".concat(e))}}},{key:"readFixedArray",value:function(e){return new Uint8Array(this.readBuffer(e))}},{key:"readArray",value:function(e){for(var t=this.readU32(),r=Array(),n=0;n<t;++n)r.push(e());return r}}]),e}();function _(e){return e.charAt(0).toUpperCase()+e.slice(1)}function S(e,t,r,n,a){try{if("string"==typeof n)a["write".concat(_(n))](r);else if(n instanceof Array)if("number"==typeof n[0]){if(r.length!==n[0])throw new $("Expecting byte array of length ".concat(n[0],", but got ").concat(r.length," bytes"));a.writeFixedArray(r)}else if(2===n.length&&"number"==typeof n[1]){if(r.length!==n[1])throw new $("Expecting byte array of length ".concat(n[1],", but got ").concat(r.length," bytes"));for(var o=0;o<n[1];o++)S(e,null,r[o],n[0],a)}else a.writeArray(r,(function(r){S(e,t,r,n[0],a)}));else if(void 0!==n.kind){if("option"!==n.kind)throw new $("FieldType ".concat(n," unrecognized"));null==r?a.writeU8(0):(a.writeU8(1),S(e,t,r,n.type,a))}else E(e,r,a)}catch(e){throw e instanceof $&&e.addToFieldPath(t),e}}function E(e,t,r){if("function"!=typeof t.borshSerialize){var n=e.get(t.constructor);if(!n)throw new $("Class ".concat(t.constructor.name," is missing in schema"));if("struct"===n.kind)n.fields.map((function(n){var a=(0,i.default)(n,2),o=a[0],u=a[1];S(e,o,t[o],u,r)}));else{if("enum"!==n.kind)throw new $("Unexpected schema kind: ".concat(n.kind," for ").concat(t.constructor.name));for(var a=t[n.field],o=0;o<n.values.length;++o){var u=(0,i.default)(n.values[o],2),c=u[0],s=u[1];if(c===a){r.writeU8(o),S(e,c,t[c],s,r);break}}}}else t.borshSerialize(r)}function R(e,t,r,n){try{if("string"==typeof r)return n["read".concat(_(r))]();if(r instanceof Array){if("number"==typeof r[0])return n.readFixedArray(r[0]);if("number"==typeof r[1]){for(var a=[],o=0;o<r[1];o++)a.push(R(e,null,r[0],n));return a}return n.readArray((function(){return R(e,t,r[0],n)}))}return"option"===r.kind?n.readU8()?R(e,t,r.type,n):void 0:A(e,r,n)}catch(e){throw e instanceof $&&e.addToFieldPath(t),e}}function A(e,t,r){if("function"==typeof t.borshDeserialize)return t.borshDeserialize(r);var n=e.get(t);if(!n)throw new $("Class ".concat(t.name," is missing in schema"));if("struct"===n.kind){var o={},u=!0,c=!1,s=void 0;try{for(var l,f=e.get(t).fields[Symbol.iterator]();!(u=(l=f.next()).done);u=!0){var p=(0,i.default)(l.value,2),d=p[0],h=p[1];o[d]=R(e,d,h,r)}}catch(e){c=!0,s=e}finally{try{u||null==f.return||f.return()}finally{if(c)throw s}}return new t(o)}if("enum"===n.kind){var v=r.readU8();if(v>=n.values.length)throw new $("Enum index: ".concat(v," is out of range"));var m=(0,i.default)(n.values[v],2),y=m[0],b=R(e,y,m[1],r);return new t((0,a.default)({},y,b))}throw new $("Unexpected schema kind: ".concat(n.kind," for ").concat(t.constructor.name))}p([x],k.prototype,"readU8",null),p([x],k.prototype,"readU16",null),p([x],k.prototype,"readU32",null),p([x],k.prototype,"readU64",null),p([x],k.prototype,"readU128",null),p([x],k.prototype,"readU256",null),p([x],k.prototype,"readU512",null),p([x],k.prototype,"readString",null),p([x],k.prototype,"readFixedArray",null),p([x],k.prototype,"readArray",null),e.exports.BinaryReader=k,e.exports.serialize=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:w,n=new r;return E(e,t,n),n.toArray()},e.exports.deserialize=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k,a=new n(r),o=A(e,t,a);if(a.offset<r.length)throw new $("Unexpected ".concat(r.length-a.offset," bytes after deserialized data"));return o},e.exports.deserializeUnchecked=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k,a=new n(r);return A(e,t,a)}})),parcelRequire.register("d0ZZj",(function(e,t){function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("hNZKs",(function(e,t){$parcel$export(e.exports,"default",(function(){return i}));var r=parcelRequire("59ET4"),n=parcelRequire("aVtMw"),a=parcelRequire("dZeW6"),o=parcelRequire("ezjYu");function i(e,t){return(0,r.default)(e)||(0,n.default)(e,t)||(0,o.default)(e,t)||(0,a.default)()}})),parcelRequire.register("59ET4",(function(e,t){function r(e){if(Array.isArray(e))return e}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("aVtMw",(function(e,t){function r(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("dZeW6",(function(e,t){function r(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("ezjYu",(function(e,t){$parcel$export(e.exports,"default",(function(){return n}));var r=parcelRequire("dnAMa");function n(e,t){if(e){if("string"==typeof e)return(0,r.default)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?(0,r.default)(e,t):void 0}}})),parcelRequire.register("dnAMa",(function(e,t){function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("3i6WR",(function(e,t){$parcel$export(e.exports,"default",(function(){return u}));var r=parcelRequire("cewVb"),n=parcelRequire("3zW0U"),a=parcelRequire("2zNXU"),o=parcelRequire("4NJa9");function i(e){var t="function"==typeof Map?new Map:void 0;return i=function(e){if(null===e||!(0,n.default)(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,i)}function i(){return(0,r.default)(e,arguments,(0,a.default)(this).constructor)}return i.prototype=Object.create(e.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),(0,o.default)(i,e)},i(e)}function u(e){return i(e)}})),parcelRequire.register("cewVb",(function(e,t){$parcel$export(e.exports,"default",(function(){return o}));var r=parcelRequire("4NJa9");function n(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function a(e,t,o){return a=n()?Reflect.construct:function(e,t,n){var a=[null];a.push.apply(a,t);var o=new(Function.bind.apply(e,a));return n&&(0,r.default)(o,n.prototype),o},a.apply(null,arguments)}function o(e,t,r){return a.apply(null,arguments)}})),parcelRequire.register("3zW0U",(function(e,t){function r(e){return-1!==Function.toString.call(e).indexOf("[native code]")}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("jPoaI",(function(e,t){$parcel$export(e.exports,"Buffer",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"SlowBuffer",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"INSPECT_MAX_BYTES",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"kMaxLength",(function(){return o}),(function(e){return o=e}));var r,n,a,o,i=parcelRequire("dTym2"),u=parcelRequire("5ZH0f"),c=parcelRequire("cOMXY"),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;r=p,n=function(e){+e!=e&&(e=0);return p.alloc(+e)},a=50;var l=2147483647;function f(e){if(e>l)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,p.prototype),t}function p(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return v(e)}return d(e,t,r)}function d(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!p.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var r=0|g(e,t),n=f(r),a=n.write(e,t);a!==r&&(n=n.slice(0,a));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(H(e,Uint8Array)){var t=new Uint8Array(e);return y(t.buffer,t.byteOffset,t.byteLength)}return m(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+(void 0===e?"undefined":(0,i.default)(e)));if(H(e,ArrayBuffer)||e&&H(e.buffer,ArrayBuffer))return y(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(H(e,SharedArrayBuffer)||e&&H(e.buffer,SharedArrayBuffer)))return y(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return p.from(n,t,r);var a=function(e){if(p.isBuffer(e)){var t=0|b(e.length),r=f(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||W(e.length)?f(0):m(e);if("Buffer"===e.type&&Array.isArray(e.data))return m(e.data)}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return p.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+(void 0===e?"undefined":(0,i.default)(e)))}function h(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function v(e){return h(e),f(e<0?0:0|b(e))}function m(e){for(var t=e.length<0?0:0|b(e.length),r=f(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function y(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,p.prototype),n}function b(e){if(e>=l)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l.toString(16)+" bytes");return 0|e}function g(e,t){if(p.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||H(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+(void 0===e?"undefined":(0,i.default)(e)));var r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var a=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return F(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return z(e).length;default:if(a)return n?-1:F(e).length;t=(""+t).toLowerCase(),a=!0}}function $(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return N(this,t,r);case"utf8":case"utf-8":return C(this,t,r);case"ascii":return I(this,t,r);case"latin1":case"binary":return P(this,t,r);case"base64":return M(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function w(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function x(e,t,r,n,a){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),W(r=+r)&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return-1;r=e.length-1}else if(r<0){if(!a)return-1;r=0}if("string"==typeof t&&(t=p.from(t,n)),p.isBuffer(t))return 0===t.length?-1:k(e,t,r,n,a);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):k(e,[t],r,n,a);throw new TypeError("val must be string, number or Buffer")}function k(e,t,r,n,a){var o,i=function(e,t){return 1===u?e[t]:e.readUInt16BE(t*u)},u=1,c=e.length,s=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;u=2,c/=2,s/=2,r/=2}if(a){var l=-1;for(o=r;o<c;o++)if(i(e,o)===i(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===s)return l*u}else-1!==l&&(o-=o-l),l=-1}else for(r+s>c&&(r=c-s),o=r;o>=0;o--){for(var f=!0,p=0;p<s;p++)if(i(e,o+p)!==i(t,p)){f=!1;break}if(f)return o}return-1}function _(e,t,r,n){r=Number(r)||0;var a=e.length-r;n?(n=Number(n))>a&&(n=a):n=a;var o=t.length;n>o/2&&(n=o/2);for(var i=0;i<n;++i){var u=parseInt(t.substr(2*i,2),16);if(W(u))return i;e[r+i]=u}return i}function S(e,t,r,n){return K(F(t,e.length-r),e,r,n)}function E(e,t,r,n){return K(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function R(e,t,r,n){return K(z(t),e,r,n)}function A(e,t,r,n){return K(function(e,t){for(var r,n,a,o=[],i=0;i<e.length&&!((t-=2)<0);++i)n=(r=e.charCodeAt(i))>>8,a=r%256,o.push(a),o.push(n);return o}(t,e.length-r),e,r,n)}function M(e,t,r){return 0===t&&r===e.length?u.fromByteArray(e):u.fromByteArray(e.slice(t,r))}function C(e,t,r){r=Math.min(e.length,r);for(var n=[],a=t;a<r;){var o,i,u,c,s=e[a],l=null,f=s>239?4:s>223?3:s>191?2:1;if(a+f<=r)switch(f){case 1:s<128&&(l=s);break;case 2:128==(192&(o=e[a+1]))&&(c=(31&s)<<6|63&o)>127&&(l=c);break;case 3:o=e[a+1],i=e[a+2],128==(192&o)&&128==(192&i)&&(c=(15&s)<<12|(63&o)<<6|63&i)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:o=e[a+1],i=e[a+2],u=e[a+3],128==(192&o)&&128==(192&i)&&128==(192&u)&&(c=(15&s)<<18|(63&o)<<12|(63&i)<<6|63&u)>65535&&c<1114112&&(l=c)}null===l?(l=65533,f=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),a+=f}return function(e){var t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=T));return r}(n)}o=l,p.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),p.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(p.prototype,"parent",{enumerable:!0,get:function(){if(p.isBuffer(this))return this.buffer}}),Object.defineProperty(p.prototype,"offset",{enumerable:!0,get:function(){if(p.isBuffer(this))return this.byteOffset}}),p.poolSize=8192,p.from=function(e,t,r){return d(e,t,r)},Object.setPrototypeOf(p.prototype,Uint8Array.prototype),Object.setPrototypeOf(p,Uint8Array),p.alloc=function(e,t,r){return function(e,t,r){return h(e),e<=0?f(e):void 0!==t?"string"==typeof r?f(e).fill(t,r):f(e).fill(t):f(e)}(e,t,r)},p.allocUnsafe=function(e){return v(e)},p.allocUnsafeSlow=function(e){return v(e)},p.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==p.prototype},p.compare=function(e,t){if(H(e,Uint8Array)&&(e=p.from(e,e.offset,e.byteLength)),H(t,Uint8Array)&&(t=p.from(t,t.offset,t.byteLength)),!p.isBuffer(e)||!p.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,n=t.length,a=0,o=Math.min(r,n);a<o;++a)if(e[a]!==t[a]){r=e[a],n=t[a];break}return r<n?-1:n<r?1:0},p.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},p.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return p.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=p.allocUnsafe(t),a=0;for(r=0;r<e.length;++r){var o=e[r];if(H(o,Uint8Array))a+o.length>n.length?p.from(o).copy(n,a):Uint8Array.prototype.set.call(n,o,a);else{if(!p.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,a)}a+=o.length}return n},p.byteLength=g,p.prototype._isBuffer=!0,p.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)w(this,t,t+1);return this},p.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)w(this,t,t+3),w(this,t+1,t+2);return this},p.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)w(this,t,t+7),w(this,t+1,t+6),w(this,t+2,t+5),w(this,t+3,t+4);return this},p.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?C(this,0,e):$.apply(this,arguments)},p.prototype.toLocaleString=p.prototype.toString,p.prototype.equals=function(e){if(!p.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===p.compare(this,e)},p.prototype.inspect=function(){var e="",t=a;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},s&&(p.prototype[s]=p.prototype.inspect),p.prototype.compare=function(e,t,r,n,a){if(H(e,Uint8Array)&&(e=p.from(e,e.offset,e.byteLength)),!p.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+(void 0===e?"undefined":(0,i.default)(e)));if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),t<0||r>e.length||n<0||a>this.length)throw new RangeError("out of range index");if(n>=a&&t>=r)return 0;if(n>=a)return-1;if(t>=r)return 1;if(this===e)return 0;for(var o=(a>>>=0)-(n>>>=0),u=(r>>>=0)-(t>>>=0),c=Math.min(o,u),s=this.slice(n,a),l=e.slice(t,r),f=0;f<c;++f)if(s[f]!==l[f]){o=s[f],u=l[f];break}return o<u?-1:u<o?1:0},p.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},p.prototype.indexOf=function(e,t,r){return x(this,e,t,r,!0)},p.prototype.lastIndexOf=function(e,t,r){return x(this,e,t,r,!1)},p.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var a=this.length-t;if((void 0===r||r>a)&&(r=a),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return _(this,e,t,r);case"utf8":case"utf-8":return S(this,e,t,r);case"ascii":case"latin1":case"binary":return E(this,e,t,r);case"base64":return R(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},p.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function I(e,t,r){var n="";r=Math.min(e.length,r);for(var a=t;a<r;++a)n+=String.fromCharCode(127&e[a]);return n}function P(e,t,r){var n="";r=Math.min(e.length,r);for(var a=t;a<r;++a)n+=String.fromCharCode(e[a]);return n}function N(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var a="",o=t;o<r;++o)a+=V[e[o]];return a}function O(e,t,r){for(var n=e.slice(t,r),a="",o=0;o<n.length-1;o+=2)a+=String.fromCharCode(n[o]+256*n[o+1]);return a}function D(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function q(e,t,r,n,a,o){if(!p.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function U(e,t,r,n,a,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function j(e,t,r,n,a){return t=+t,r>>>=0,a||U(e,0,r,4),c.write(e,t,r,n,23,4),r+4}function L(e,t,r,n,a){return t=+t,r>>>=0,a||U(e,0,r,8),c.write(e,t,r,n,52,8),r+8}p.prototype.slice=function(e,t){var r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);var n=this.subarray(e,t);return Object.setPrototypeOf(n,p.prototype),n},p.prototype.readUintLE=p.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||D(e,t,this.length);for(var n=this[e],a=1,o=0;++o<t&&(a*=256);)n+=this[e+o]*a;return n},p.prototype.readUintBE=p.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||D(e,t,this.length);for(var n=this[e+--t],a=1;t>0&&(a*=256);)n+=this[e+--t]*a;return n},p.prototype.readUint8=p.prototype.readUInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),this[e]},p.prototype.readUint16LE=p.prototype.readUInt16LE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]|this[e+1]<<8},p.prototype.readUint16BE=p.prototype.readUInt16BE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]<<8|this[e+1]},p.prototype.readUint32LE=p.prototype.readUInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},p.prototype.readUint32BE=p.prototype.readUInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},p.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||D(e,t,this.length);for(var n=this[e],a=1,o=0;++o<t&&(a*=256);)n+=this[e+o]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*t)),n},p.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||D(e,t,this.length);for(var n=t,a=1,o=this[e+--n];n>0&&(a*=256);)o+=this[e+--n]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*t)),o},p.prototype.readInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},p.prototype.readInt16LE=function(e,t){e>>>=0,t||D(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},p.prototype.readInt16BE=function(e,t){e>>>=0,t||D(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},p.prototype.readInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},p.prototype.readInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},p.prototype.readFloatLE=function(e,t){return e>>>=0,t||D(e,4,this.length),c.read(this,e,!0,23,4)},p.prototype.readFloatBE=function(e,t){return e>>>=0,t||D(e,4,this.length),c.read(this,e,!1,23,4)},p.prototype.readDoubleLE=function(e,t){return e>>>=0,t||D(e,8,this.length),c.read(this,e,!0,52,8)},p.prototype.readDoubleBE=function(e,t){return e>>>=0,t||D(e,8,this.length),c.read(this,e,!1,52,8)},p.prototype.writeUintLE=p.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||q(this,e,t,r,Math.pow(2,8*r)-1,0);var a=1,o=0;for(this[t]=255&e;++o<r&&(a*=256);)this[t+o]=e/a&255;return t+r},p.prototype.writeUintBE=p.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||q(this,e,t,r,Math.pow(2,8*r)-1,0);var a=r-1,o=1;for(this[t+a]=255&e;--a>=0&&(o*=256);)this[t+a]=e/o&255;return t+r},p.prototype.writeUint8=p.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,1,255,0),this[t]=255&e,t+1},p.prototype.writeUint16LE=p.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},p.prototype.writeUint16BE=p.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},p.prototype.writeUint32LE=p.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},p.prototype.writeUint32BE=p.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},p.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var a=Math.pow(2,8*r-1);q(this,e,t,r,a-1,-a)}var o=0,i=1,u=0;for(this[t]=255&e;++o<r&&(i*=256);)e<0&&0===u&&0!==this[t+o-1]&&(u=1),this[t+o]=(e/i>>0)-u&255;return t+r},p.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var a=Math.pow(2,8*r-1);q(this,e,t,r,a-1,-a)}var o=r-1,i=1,u=0;for(this[t+o]=255&e;--o>=0&&(i*=256);)e<0&&0===u&&0!==this[t+o+1]&&(u=1),this[t+o]=(e/i>>0)-u&255;return t+r},p.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},p.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},p.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},p.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},p.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||q(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},p.prototype.writeFloatLE=function(e,t,r){return j(this,e,t,!0,r)},p.prototype.writeFloatBE=function(e,t,r){return j(this,e,t,!1,r)},p.prototype.writeDoubleLE=function(e,t,r){return L(this,e,t,!0,r)},p.prototype.writeDoubleBE=function(e,t,r){return L(this,e,t,!1,r)},p.prototype.copy=function(e,t,r,n){if(!p.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var a=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),a},p.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!p.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){var a=e.charCodeAt(0);("utf8"===n&&a<128||"latin1"===n)&&(e=a)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{var i=p.isBuffer(e)?e:p.from(e,n),u=i.length;if(0===u)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=i[o%u]}return this};var B=/[^+/0-9A-Za-z-_]/g;function F(e,t){var r;t=t||1/0;for(var n=e.length,a=null,o=[],i=0;i<n;++i){if((r=e.charCodeAt(i))>55295&&r<57344){if(!a){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(i+1===n){(t-=3)>-1&&o.push(239,191,189);continue}a=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),a=r;continue}r=65536+(a-55296<<10|r-56320)}else a&&(t-=3)>-1&&o.push(239,191,189);if(a=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function z(e){return u.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(B,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function K(e,t,r,n){for(var a=0;a<n&&!(a+r>=t.length||a>=e.length);++a)t[a+r]=e[a];return a}function H(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function W(e){return e!=e}var V=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,a=0;a<16;++a)t[n+a]=e[r]+e[a];return t}()})),parcelRequire.register("5ZH0f",(function(e,t){var r,n;$parcel$export(e.exports,"toByteArray",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"fromByteArray",(function(){return n}),(function(e){return n=e})),r=function(e){var t,r,n=l(e),a=n[0],u=n[1],c=new i(function(e,t,r){return 3*(t+r)/4-r}(0,a,u)),s=0,f=u>0?a-4:a;for(r=0;r<f;r+=4)t=o[e.charCodeAt(r)]<<18|o[e.charCodeAt(r+1)]<<12|o[e.charCodeAt(r+2)]<<6|o[e.charCodeAt(r+3)],c[s++]=t>>16&255,c[s++]=t>>8&255,c[s++]=255&t;2===u&&(t=o[e.charCodeAt(r)]<<2|o[e.charCodeAt(r+1)]>>4,c[s++]=255&t);1===u&&(t=o[e.charCodeAt(r)]<<10|o[e.charCodeAt(r+1)]<<4|o[e.charCodeAt(r+2)]>>2,c[s++]=t>>8&255,c[s++]=255&t);return c},n=function(e){for(var t,r=e.length,n=r%3,o=[],i=16383,u=0,c=r-n;u<c;u+=i)o.push(f(e,u,u+i>c?c:u+i));1===n?(t=e[r-1],o.push(a[t>>2]+a[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],o.push(a[t>>10]+a[t>>4&63]+a[t<<2&63]+"="));return o.join("")};for(var a=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0,s=u.length;c<s;++c)a[c]=u[c],o[u.charCodeAt(c)]=c;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function f(e,t,r){for(var n,o,i=[],u=t;u<r;u+=3)n=(e[u]<<16&16711680)+(e[u+1]<<8&65280)+(255&e[u+2]),i.push(a[(o=n)>>18&63]+a[o>>12&63]+a[o>>6&63]+a[63&o]);return i.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63})),parcelRequire.register("cOMXY",(function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */var r,n;$parcel$export(e.exports,"read",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"write",(function(){return n}),(function(e){return n=e})),r=function(e,t,r,n,a){var o,i,u=8*a-n-1,c=(1<<u)-1,s=c>>1,l=-7,f=r?a-1:0,p=r?-1:1,d=e[t+f];for(f+=p,o=d&(1<<-l)-1,d>>=-l,l+=u;l>0;o=256*o+e[t+f],f+=p,l-=8);for(i=o&(1<<-l)-1,o>>=-l,l+=n;l>0;i=256*i+e[t+f],f+=p,l-=8);if(0===o)o=1-s;else{if(o===c)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,n),o-=s}return(d?-1:1)*i*Math.pow(2,o-n)},n=function(e,t,r,n,a,o){var i,u,c,s=8*o-a-1,l=(1<<s)-1,f=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,h=n?1:-1,v=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(u=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-i))<1&&(i--,c*=2),(t+=i+f>=1?p/c:p*Math.pow(2,1-f))*c>=2&&(i++,c/=2),i+f>=l?(u=0,i=l):i+f>=1?(u=(t*c-1)*Math.pow(2,a),i+=f):(u=t*Math.pow(2,f-1)*Math.pow(2,a),i=0));a>=8;e[r+d]=255&u,d+=h,u/=256,a-=8);for(i=i<<a|u,s+=a;s>0;e[r+d]=255&i,d+=h,i/=256,s-=8);e[r+d-h]|=128*v}})),parcelRequire.register("jlWHo",(function(e,t){!function(e,t){"use strict";var r,n=function(e,t){if(!e)throw new Error(t||"Assertion failed")},a=function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e},o=function(e,t){var r=e.charCodeAt(t);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void n(!1,"Invalid character in "+e)},i=function(e,t,r){var n=o(e,r);return r-1>=t&&(n|=o(e,r-1)<<4),n},u=function(e,t,r,a){for(var o=0,i=0,u=Math.min(e.length,r),c=t;c<u;c++){var s=e.charCodeAt(c)-48;o*=a,i=s>=49?s-49+10:s>=17?s-17+10:s,n(s>=0&&i<a,"Invalid character"),o+=i}return o},c=function(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red},s=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"},l=function(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var a=0|e.words[0],o=0|t.words[0],i=a*o,u=67108863&i,c=i/67108864|0;r.words[0]=u;for(var s=1;s<n;s++){for(var l=c>>>26,f=67108863&c,p=Math.min(s,t.length-1),d=Math.max(0,s-e.length+1);d<=p;d++){var h=s-d|0;l+=(i=(a=0|e.words[h])*(o=0|t.words[d])+f)/67108864|0,f=67108863&i}r.words[s]=0|f,c=0|l}return 0!==c?r.words[s]=0|c:r.length--,r._strip()},f=function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,a=0,o=0;o<r.length-1;o++){var i=a;a=0;for(var u=67108863&n,c=Math.min(o,t.length-1),s=Math.max(0,o-e.length+1);s<=c;s++){var l=o-s,f=(0|e.words[l])*(0|t.words[s]),p=67108863&f;u=67108863&(p=p+u|0),a+=(i=(i=i+(f/67108864|0)|0)+(p>>>26)|0)>>>26,i&=67108863}r.words[o]=u,n=i,i=a}return 0!==n?r.words[o]=n:r.length--,r._strip()},p=function(e,t,r){return f(e,t,r)},d=function(e,t){this.x=e,this.y=t},h=function(e,t){this.name=e,this.p=new w(t,16),this.n=this.p.bitLength(),this.k=new w(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()},v=function(){h.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")},m=function(){h.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")},y=function(){h.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")},b=function(){h.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")},g=function(e){if("string"==typeof e){var t=w._prime(e);this.m=t.p,this.prime=t}else n(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null},$=function(e){g.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new w(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)};function w(e,t,r){if(w.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}"object"==typeof e?e.exports=w:t.BN=w,w.BN=w,w.wordSize=26;try{r="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:parcelRequire("aqbQf").Buffer}catch(e){}if(w.isBN=function(e){return e instanceof w||null!==e&&"object"==typeof e&&e.constructor.wordSize===w.wordSize&&Array.isArray(e.words)},w.max=function(e,t){return e.cmp(t)>0?e:t},w.min=function(e,t){return e.cmp(t)<0?e:t},w.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"==typeof e)return this._initArray(e,t,r);"hex"===t&&(t=16),n(t===(0|t)&&t>=2&&t<=36);var a=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(a++,this.negative=1),a<e.length&&(16===t?this._parseHex(e,a,r):(this._parseBase(e,t,a),"le"===r&&this._initArray(this.toArray(),t,r)))},w.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(n(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r)},w.prototype._initArray=function(e,t,r){if(n("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var a=0;a<this.length;a++)this.words[a]=0;var o,i,u=0;if("be"===r)for(a=e.length-1,o=0;a>=0;a-=3)i=e[a]|e[a-1]<<8|e[a-2]<<16,this.words[o]|=i<<u&67108863,this.words[o+1]=i>>>26-u&67108863,(u+=24)>=26&&(u-=26,o++);else if("le"===r)for(a=0,o=0;a<e.length;a+=3)i=e[a]|e[a+1]<<8|e[a+2]<<16,this.words[o]|=i<<u&67108863,this.words[o+1]=i>>>26-u&67108863,(u+=24)>=26&&(u-=26,o++);return this._strip()},w.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var a,o=0,u=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)a=i(e,t,n)<<o,this.words[u]|=67108863&a,o>=18?(o-=18,u+=1,this.words[u]|=a>>>26):o+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)a=i(e,t,n)<<o,this.words[u]|=67108863&a,o>=18?(o-=18,u+=1,this.words[u]|=a>>>26):o+=8;this._strip()},w.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,a=1;a<=67108863;a*=t)n++;n--,a=a/t|0;for(var o=e.length-r,i=o%n,c=Math.min(o,o-i)+r,s=0,l=r;l<c;l+=n)s=u(e,l,l+n,t),this.imuln(a),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s);if(0!==i){var f=1;for(s=u(e,l,e.length,t),l=0;l<i;l++)f*=t;this.imuln(f),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s)}this._strip()},w.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},w.prototype._move=function(e){c(e,this)},w.prototype.clone=function(){var e=new w(null);return this.copy(e),e},w.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},w.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},w.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{w.prototype[Symbol.for("nodejs.util.inspect.custom")]=s}catch(e){w.prototype.inspect=s}else w.prototype.inspect=s;var x=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],k=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],_=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];w.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||"hex"===e){r="";for(var a=0,o=0,i=0;i<this.length;i++){var u=this.words[i],c=(16777215&(u<<a|o)).toString(16);r=0!==(o=u>>>24-a&16777215)||i!==this.length-1?x[6-c.length]+c+r:c+r,(a+=2)>=26&&(a-=26,i--)}for(0!==o&&(r=o.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var s=k[e],l=_[e];r="";var f=this.clone();for(f.negative=0;!f.isZero();){var p=f.modrn(l).toString(e);r=(f=f.idivn(l)).isZero()?p+r:x[s-p.length]+p+r}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}n(!1,"Base should be between 2 and 36")},w.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&n(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},w.prototype.toJSON=function(){return this.toString(16,2)},r&&(w.prototype.toBuffer=function(e,t){return this.toArrayLike(r,e,t)}),w.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)};w.prototype.toArrayLike=function(e,t,r){this._strip();var a=this.byteLength(),o=r||Math.max(1,a);n(a<=o,"byte array longer than desired length"),n(o>0,"Requested array length <= 0");var i=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,o);return this["_toArrayLike"+("le"===t?"LE":"BE")](i,a),i},w.prototype._toArrayLikeLE=function(e,t){for(var r=0,n=0,a=0,o=0;a<this.length;a++){var i=this.words[a]<<o|n;e[r++]=255&i,r<e.length&&(e[r++]=i>>8&255),r<e.length&&(e[r++]=i>>16&255),6===o?(r<e.length&&(e[r++]=i>>24&255),n=0,o=0):(n=i>>>24,o+=2)}if(r<e.length)for(e[r++]=n;r<e.length;)e[r++]=0},w.prototype._toArrayLikeBE=function(e,t){for(var r=e.length-1,n=0,a=0,o=0;a<this.length;a++){var i=this.words[a]<<o|n;e[r--]=255&i,r>=0&&(e[r--]=i>>8&255),r>=0&&(e[r--]=i>>16&255),6===o?(r>=0&&(e[r--]=i>>24&255),n=0,o=0):(n=i>>>24,o+=2)}if(r>=0)for(e[r--]=n;r>=0;)e[r--]=0},Math.clz32?w.prototype._countBits=function(e){return 32-Math.clz32(e)}:w.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},w.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},w.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},w.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},w.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},w.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},w.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},w.prototype.isNeg=function(){return 0!==this.negative},w.prototype.neg=function(){return this.clone().ineg()},w.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},w.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},w.prototype.ior=function(e){return n(0==(this.negative|e.negative)),this.iuor(e)},w.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},w.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},w.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this._strip()},w.prototype.iand=function(e){return n(0==(this.negative|e.negative)),this.iuand(e)},w.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},w.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},w.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this._strip()},w.prototype.ixor=function(e){return n(0==(this.negative|e.negative)),this.iuxor(e)},w.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},w.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},w.prototype.inotn=function(e){n("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var a=0;a<t;a++)this.words[a]=67108863&~this.words[a];return r>0&&(this.words[a]=~this.words[a]&67108863>>26-r),this._strip()},w.prototype.notn=function(e){return this.clone().inotn(e)},w.prototype.setn=function(e,t){n("number"==typeof e&&e>=0);var r=e/26|0,a=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<a:this.words[r]&~(1<<a),this._strip()},w.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var a=0,o=0;o<n.length;o++)t=(0|r.words[o])+(0|n.words[o])+a,this.words[o]=67108863&t,a=t>>>26;for(;0!==a&&o<r.length;o++)t=(0|r.words[o])+a,this.words[o]=67108863&t,a=t>>>26;if(this.length=r.length,0!==a)this.words[this.length]=a,this.length++;else if(r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this},w.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},w.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,a=this.cmp(e);if(0===a)return this.negative=0,this.length=1,this.words[0]=0,this;a>0?(r=this,n=e):(r=e,n=this);for(var o=0,i=0;i<n.length;i++)o=(t=(0|r.words[i])-(0|n.words[i])+o)>>26,this.words[i]=67108863&t;for(;0!==o&&i<r.length;i++)o=(t=(0|r.words[i])+o)>>26,this.words[i]=67108863&t;if(0===o&&i<r.length&&r!==this)for(;i<r.length;i++)this.words[i]=r.words[i];return this.length=Math.max(this.length,i),r!==this&&(this.negative=1),this._strip()},w.prototype.sub=function(e){return this.clone().isub(e)};var S=function(e,t,r){var n,a,o,i=e.words,u=t.words,c=r.words,s=0,l=0|i[0],f=8191&l,p=l>>>13,d=0|i[1],h=8191&d,v=d>>>13,m=0|i[2],y=8191&m,b=m>>>13,g=0|i[3],$=8191&g,w=g>>>13,x=0|i[4],k=8191&x,_=x>>>13,S=0|i[5],E=8191&S,R=S>>>13,A=0|i[6],M=8191&A,C=A>>>13,T=0|i[7],I=8191&T,P=T>>>13,N=0|i[8],O=8191&N,D=N>>>13,q=0|i[9],U=8191&q,j=q>>>13,L=0|u[0],B=8191&L,F=L>>>13,z=0|u[1],K=8191&z,H=z>>>13,W=0|u[2],V=8191&W,X=W>>>13,G=0|u[3],Z=8191&G,J=G>>>13,Y=0|u[4],Q=8191&Y,ee=Y>>>13,te=0|u[5],re=8191&te,ne=te>>>13,ae=0|u[6],oe=8191&ae,ie=ae>>>13,ue=0|u[7],ce=8191&ue,se=ue>>>13,le=0|u[8],fe=8191&le,pe=le>>>13,de=0|u[9],he=8191&de,ve=de>>>13;r.negative=e.negative^t.negative,r.length=19;var me=(s+(n=Math.imul(f,B))|0)+((8191&(a=(a=Math.imul(f,F))+Math.imul(p,B)|0))<<13)|0;s=((o=Math.imul(p,F))+(a>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(h,B),a=(a=Math.imul(h,F))+Math.imul(v,B)|0,o=Math.imul(v,F);var ye=(s+(n=n+Math.imul(f,K)|0)|0)+((8191&(a=(a=a+Math.imul(f,H)|0)+Math.imul(p,K)|0))<<13)|0;s=((o=o+Math.imul(p,H)|0)+(a>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(y,B),a=(a=Math.imul(y,F))+Math.imul(b,B)|0,o=Math.imul(b,F),n=n+Math.imul(h,K)|0,a=(a=a+Math.imul(h,H)|0)+Math.imul(v,K)|0,o=o+Math.imul(v,H)|0;var be=(s+(n=n+Math.imul(f,V)|0)|0)+((8191&(a=(a=a+Math.imul(f,X)|0)+Math.imul(p,V)|0))<<13)|0;s=((o=o+Math.imul(p,X)|0)+(a>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul($,B),a=(a=Math.imul($,F))+Math.imul(w,B)|0,o=Math.imul(w,F),n=n+Math.imul(y,K)|0,a=(a=a+Math.imul(y,H)|0)+Math.imul(b,K)|0,o=o+Math.imul(b,H)|0,n=n+Math.imul(h,V)|0,a=(a=a+Math.imul(h,X)|0)+Math.imul(v,V)|0,o=o+Math.imul(v,X)|0;var ge=(s+(n=n+Math.imul(f,Z)|0)|0)+((8191&(a=(a=a+Math.imul(f,J)|0)+Math.imul(p,Z)|0))<<13)|0;s=((o=o+Math.imul(p,J)|0)+(a>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(k,B),a=(a=Math.imul(k,F))+Math.imul(_,B)|0,o=Math.imul(_,F),n=n+Math.imul($,K)|0,a=(a=a+Math.imul($,H)|0)+Math.imul(w,K)|0,o=o+Math.imul(w,H)|0,n=n+Math.imul(y,V)|0,a=(a=a+Math.imul(y,X)|0)+Math.imul(b,V)|0,o=o+Math.imul(b,X)|0,n=n+Math.imul(h,Z)|0,a=(a=a+Math.imul(h,J)|0)+Math.imul(v,Z)|0,o=o+Math.imul(v,J)|0;var $e=(s+(n=n+Math.imul(f,Q)|0)|0)+((8191&(a=(a=a+Math.imul(f,ee)|0)+Math.imul(p,Q)|0))<<13)|0;s=((o=o+Math.imul(p,ee)|0)+(a>>>13)|0)+($e>>>26)|0,$e&=67108863,n=Math.imul(E,B),a=(a=Math.imul(E,F))+Math.imul(R,B)|0,o=Math.imul(R,F),n=n+Math.imul(k,K)|0,a=(a=a+Math.imul(k,H)|0)+Math.imul(_,K)|0,o=o+Math.imul(_,H)|0,n=n+Math.imul($,V)|0,a=(a=a+Math.imul($,X)|0)+Math.imul(w,V)|0,o=o+Math.imul(w,X)|0,n=n+Math.imul(y,Z)|0,a=(a=a+Math.imul(y,J)|0)+Math.imul(b,Z)|0,o=o+Math.imul(b,J)|0,n=n+Math.imul(h,Q)|0,a=(a=a+Math.imul(h,ee)|0)+Math.imul(v,Q)|0,o=o+Math.imul(v,ee)|0;var we=(s+(n=n+Math.imul(f,re)|0)|0)+((8191&(a=(a=a+Math.imul(f,ne)|0)+Math.imul(p,re)|0))<<13)|0;s=((o=o+Math.imul(p,ne)|0)+(a>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(M,B),a=(a=Math.imul(M,F))+Math.imul(C,B)|0,o=Math.imul(C,F),n=n+Math.imul(E,K)|0,a=(a=a+Math.imul(E,H)|0)+Math.imul(R,K)|0,o=o+Math.imul(R,H)|0,n=n+Math.imul(k,V)|0,a=(a=a+Math.imul(k,X)|0)+Math.imul(_,V)|0,o=o+Math.imul(_,X)|0,n=n+Math.imul($,Z)|0,a=(a=a+Math.imul($,J)|0)+Math.imul(w,Z)|0,o=o+Math.imul(w,J)|0,n=n+Math.imul(y,Q)|0,a=(a=a+Math.imul(y,ee)|0)+Math.imul(b,Q)|0,o=o+Math.imul(b,ee)|0,n=n+Math.imul(h,re)|0,a=(a=a+Math.imul(h,ne)|0)+Math.imul(v,re)|0,o=o+Math.imul(v,ne)|0;var xe=(s+(n=n+Math.imul(f,oe)|0)|0)+((8191&(a=(a=a+Math.imul(f,ie)|0)+Math.imul(p,oe)|0))<<13)|0;s=((o=o+Math.imul(p,ie)|0)+(a>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(I,B),a=(a=Math.imul(I,F))+Math.imul(P,B)|0,o=Math.imul(P,F),n=n+Math.imul(M,K)|0,a=(a=a+Math.imul(M,H)|0)+Math.imul(C,K)|0,o=o+Math.imul(C,H)|0,n=n+Math.imul(E,V)|0,a=(a=a+Math.imul(E,X)|0)+Math.imul(R,V)|0,o=o+Math.imul(R,X)|0,n=n+Math.imul(k,Z)|0,a=(a=a+Math.imul(k,J)|0)+Math.imul(_,Z)|0,o=o+Math.imul(_,J)|0,n=n+Math.imul($,Q)|0,a=(a=a+Math.imul($,ee)|0)+Math.imul(w,Q)|0,o=o+Math.imul(w,ee)|0,n=n+Math.imul(y,re)|0,a=(a=a+Math.imul(y,ne)|0)+Math.imul(b,re)|0,o=o+Math.imul(b,ne)|0,n=n+Math.imul(h,oe)|0,a=(a=a+Math.imul(h,ie)|0)+Math.imul(v,oe)|0,o=o+Math.imul(v,ie)|0;var ke=(s+(n=n+Math.imul(f,ce)|0)|0)+((8191&(a=(a=a+Math.imul(f,se)|0)+Math.imul(p,ce)|0))<<13)|0;s=((o=o+Math.imul(p,se)|0)+(a>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(O,B),a=(a=Math.imul(O,F))+Math.imul(D,B)|0,o=Math.imul(D,F),n=n+Math.imul(I,K)|0,a=(a=a+Math.imul(I,H)|0)+Math.imul(P,K)|0,o=o+Math.imul(P,H)|0,n=n+Math.imul(M,V)|0,a=(a=a+Math.imul(M,X)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,X)|0,n=n+Math.imul(E,Z)|0,a=(a=a+Math.imul(E,J)|0)+Math.imul(R,Z)|0,o=o+Math.imul(R,J)|0,n=n+Math.imul(k,Q)|0,a=(a=a+Math.imul(k,ee)|0)+Math.imul(_,Q)|0,o=o+Math.imul(_,ee)|0,n=n+Math.imul($,re)|0,a=(a=a+Math.imul($,ne)|0)+Math.imul(w,re)|0,o=o+Math.imul(w,ne)|0,n=n+Math.imul(y,oe)|0,a=(a=a+Math.imul(y,ie)|0)+Math.imul(b,oe)|0,o=o+Math.imul(b,ie)|0,n=n+Math.imul(h,ce)|0,a=(a=a+Math.imul(h,se)|0)+Math.imul(v,ce)|0,o=o+Math.imul(v,se)|0;var _e=(s+(n=n+Math.imul(f,fe)|0)|0)+((8191&(a=(a=a+Math.imul(f,pe)|0)+Math.imul(p,fe)|0))<<13)|0;s=((o=o+Math.imul(p,pe)|0)+(a>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(U,B),a=(a=Math.imul(U,F))+Math.imul(j,B)|0,o=Math.imul(j,F),n=n+Math.imul(O,K)|0,a=(a=a+Math.imul(O,H)|0)+Math.imul(D,K)|0,o=o+Math.imul(D,H)|0,n=n+Math.imul(I,V)|0,a=(a=a+Math.imul(I,X)|0)+Math.imul(P,V)|0,o=o+Math.imul(P,X)|0,n=n+Math.imul(M,Z)|0,a=(a=a+Math.imul(M,J)|0)+Math.imul(C,Z)|0,o=o+Math.imul(C,J)|0,n=n+Math.imul(E,Q)|0,a=(a=a+Math.imul(E,ee)|0)+Math.imul(R,Q)|0,o=o+Math.imul(R,ee)|0,n=n+Math.imul(k,re)|0,a=(a=a+Math.imul(k,ne)|0)+Math.imul(_,re)|0,o=o+Math.imul(_,ne)|0,n=n+Math.imul($,oe)|0,a=(a=a+Math.imul($,ie)|0)+Math.imul(w,oe)|0,o=o+Math.imul(w,ie)|0,n=n+Math.imul(y,ce)|0,a=(a=a+Math.imul(y,se)|0)+Math.imul(b,ce)|0,o=o+Math.imul(b,se)|0,n=n+Math.imul(h,fe)|0,a=(a=a+Math.imul(h,pe)|0)+Math.imul(v,fe)|0,o=o+Math.imul(v,pe)|0;var Se=(s+(n=n+Math.imul(f,he)|0)|0)+((8191&(a=(a=a+Math.imul(f,ve)|0)+Math.imul(p,he)|0))<<13)|0;s=((o=o+Math.imul(p,ve)|0)+(a>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(U,K),a=(a=Math.imul(U,H))+Math.imul(j,K)|0,o=Math.imul(j,H),n=n+Math.imul(O,V)|0,a=(a=a+Math.imul(O,X)|0)+Math.imul(D,V)|0,o=o+Math.imul(D,X)|0,n=n+Math.imul(I,Z)|0,a=(a=a+Math.imul(I,J)|0)+Math.imul(P,Z)|0,o=o+Math.imul(P,J)|0,n=n+Math.imul(M,Q)|0,a=(a=a+Math.imul(M,ee)|0)+Math.imul(C,Q)|0,o=o+Math.imul(C,ee)|0,n=n+Math.imul(E,re)|0,a=(a=a+Math.imul(E,ne)|0)+Math.imul(R,re)|0,o=o+Math.imul(R,ne)|0,n=n+Math.imul(k,oe)|0,a=(a=a+Math.imul(k,ie)|0)+Math.imul(_,oe)|0,o=o+Math.imul(_,ie)|0,n=n+Math.imul($,ce)|0,a=(a=a+Math.imul($,se)|0)+Math.imul(w,ce)|0,o=o+Math.imul(w,se)|0,n=n+Math.imul(y,fe)|0,a=(a=a+Math.imul(y,pe)|0)+Math.imul(b,fe)|0,o=o+Math.imul(b,pe)|0;var Ee=(s+(n=n+Math.imul(h,he)|0)|0)+((8191&(a=(a=a+Math.imul(h,ve)|0)+Math.imul(v,he)|0))<<13)|0;s=((o=o+Math.imul(v,ve)|0)+(a>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(U,V),a=(a=Math.imul(U,X))+Math.imul(j,V)|0,o=Math.imul(j,X),n=n+Math.imul(O,Z)|0,a=(a=a+Math.imul(O,J)|0)+Math.imul(D,Z)|0,o=o+Math.imul(D,J)|0,n=n+Math.imul(I,Q)|0,a=(a=a+Math.imul(I,ee)|0)+Math.imul(P,Q)|0,o=o+Math.imul(P,ee)|0,n=n+Math.imul(M,re)|0,a=(a=a+Math.imul(M,ne)|0)+Math.imul(C,re)|0,o=o+Math.imul(C,ne)|0,n=n+Math.imul(E,oe)|0,a=(a=a+Math.imul(E,ie)|0)+Math.imul(R,oe)|0,o=o+Math.imul(R,ie)|0,n=n+Math.imul(k,ce)|0,a=(a=a+Math.imul(k,se)|0)+Math.imul(_,ce)|0,o=o+Math.imul(_,se)|0,n=n+Math.imul($,fe)|0,a=(a=a+Math.imul($,pe)|0)+Math.imul(w,fe)|0,o=o+Math.imul(w,pe)|0;var Re=(s+(n=n+Math.imul(y,he)|0)|0)+((8191&(a=(a=a+Math.imul(y,ve)|0)+Math.imul(b,he)|0))<<13)|0;s=((o=o+Math.imul(b,ve)|0)+(a>>>13)|0)+(Re>>>26)|0,Re&=67108863,n=Math.imul(U,Z),a=(a=Math.imul(U,J))+Math.imul(j,Z)|0,o=Math.imul(j,J),n=n+Math.imul(O,Q)|0,a=(a=a+Math.imul(O,ee)|0)+Math.imul(D,Q)|0,o=o+Math.imul(D,ee)|0,n=n+Math.imul(I,re)|0,a=(a=a+Math.imul(I,ne)|0)+Math.imul(P,re)|0,o=o+Math.imul(P,ne)|0,n=n+Math.imul(M,oe)|0,a=(a=a+Math.imul(M,ie)|0)+Math.imul(C,oe)|0,o=o+Math.imul(C,ie)|0,n=n+Math.imul(E,ce)|0,a=(a=a+Math.imul(E,se)|0)+Math.imul(R,ce)|0,o=o+Math.imul(R,se)|0,n=n+Math.imul(k,fe)|0,a=(a=a+Math.imul(k,pe)|0)+Math.imul(_,fe)|0,o=o+Math.imul(_,pe)|0;var Ae=(s+(n=n+Math.imul($,he)|0)|0)+((8191&(a=(a=a+Math.imul($,ve)|0)+Math.imul(w,he)|0))<<13)|0;s=((o=o+Math.imul(w,ve)|0)+(a>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(U,Q),a=(a=Math.imul(U,ee))+Math.imul(j,Q)|0,o=Math.imul(j,ee),n=n+Math.imul(O,re)|0,a=(a=a+Math.imul(O,ne)|0)+Math.imul(D,re)|0,o=o+Math.imul(D,ne)|0,n=n+Math.imul(I,oe)|0,a=(a=a+Math.imul(I,ie)|0)+Math.imul(P,oe)|0,o=o+Math.imul(P,ie)|0,n=n+Math.imul(M,ce)|0,a=(a=a+Math.imul(M,se)|0)+Math.imul(C,ce)|0,o=o+Math.imul(C,se)|0,n=n+Math.imul(E,fe)|0,a=(a=a+Math.imul(E,pe)|0)+Math.imul(R,fe)|0,o=o+Math.imul(R,pe)|0;var Me=(s+(n=n+Math.imul(k,he)|0)|0)+((8191&(a=(a=a+Math.imul(k,ve)|0)+Math.imul(_,he)|0))<<13)|0;s=((o=o+Math.imul(_,ve)|0)+(a>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(U,re),a=(a=Math.imul(U,ne))+Math.imul(j,re)|0,o=Math.imul(j,ne),n=n+Math.imul(O,oe)|0,a=(a=a+Math.imul(O,ie)|0)+Math.imul(D,oe)|0,o=o+Math.imul(D,ie)|0,n=n+Math.imul(I,ce)|0,a=(a=a+Math.imul(I,se)|0)+Math.imul(P,ce)|0,o=o+Math.imul(P,se)|0,n=n+Math.imul(M,fe)|0,a=(a=a+Math.imul(M,pe)|0)+Math.imul(C,fe)|0,o=o+Math.imul(C,pe)|0;var Ce=(s+(n=n+Math.imul(E,he)|0)|0)+((8191&(a=(a=a+Math.imul(E,ve)|0)+Math.imul(R,he)|0))<<13)|0;s=((o=o+Math.imul(R,ve)|0)+(a>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,n=Math.imul(U,oe),a=(a=Math.imul(U,ie))+Math.imul(j,oe)|0,o=Math.imul(j,ie),n=n+Math.imul(O,ce)|0,a=(a=a+Math.imul(O,se)|0)+Math.imul(D,ce)|0,o=o+Math.imul(D,se)|0,n=n+Math.imul(I,fe)|0,a=(a=a+Math.imul(I,pe)|0)+Math.imul(P,fe)|0,o=o+Math.imul(P,pe)|0;var Te=(s+(n=n+Math.imul(M,he)|0)|0)+((8191&(a=(a=a+Math.imul(M,ve)|0)+Math.imul(C,he)|0))<<13)|0;s=((o=o+Math.imul(C,ve)|0)+(a>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(U,ce),a=(a=Math.imul(U,se))+Math.imul(j,ce)|0,o=Math.imul(j,se),n=n+Math.imul(O,fe)|0,a=(a=a+Math.imul(O,pe)|0)+Math.imul(D,fe)|0,o=o+Math.imul(D,pe)|0;var Ie=(s+(n=n+Math.imul(I,he)|0)|0)+((8191&(a=(a=a+Math.imul(I,ve)|0)+Math.imul(P,he)|0))<<13)|0;s=((o=o+Math.imul(P,ve)|0)+(a>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,n=Math.imul(U,fe),a=(a=Math.imul(U,pe))+Math.imul(j,fe)|0,o=Math.imul(j,pe);var Pe=(s+(n=n+Math.imul(O,he)|0)|0)+((8191&(a=(a=a+Math.imul(O,ve)|0)+Math.imul(D,he)|0))<<13)|0;s=((o=o+Math.imul(D,ve)|0)+(a>>>13)|0)+(Pe>>>26)|0,Pe&=67108863;var Ne=(s+(n=Math.imul(U,he))|0)+((8191&(a=(a=Math.imul(U,ve))+Math.imul(j,he)|0))<<13)|0;return s=((o=Math.imul(j,ve))+(a>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,c[0]=me,c[1]=ye,c[2]=be,c[3]=ge,c[4]=$e,c[5]=we,c[6]=xe,c[7]=ke,c[8]=_e,c[9]=Se,c[10]=Ee,c[11]=Re,c[12]=Ae,c[13]=Me,c[14]=Ce,c[15]=Te,c[16]=Ie,c[17]=Pe,c[18]=Ne,0!==s&&(c[19]=s,r.length++),r};Math.imul||(S=l),w.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?S(this,e,t):r<63?l(this,e,t):r<1024?f(this,e,t):p(this,e,t)},d.prototype.makeRBT=function(e){for(var t=new Array(e),r=w.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},d.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,a=0;a<t;a++)n|=(1&e)<<t-a-1,e>>=1;return n},d.prototype.permute=function(e,t,r,n,a,o){for(var i=0;i<o;i++)n[i]=t[e[i]],a[i]=r[e[i]]},d.prototype.transform=function(e,t,r,n,a,o){this.permute(o,e,t,r,n,a);for(var i=1;i<a;i<<=1)for(var u=i<<1,c=Math.cos(2*Math.PI/u),s=Math.sin(2*Math.PI/u),l=0;l<a;l+=u)for(var f=c,p=s,d=0;d<i;d++){var h=r[l+d],v=n[l+d],m=r[l+d+i],y=n[l+d+i],b=f*m-p*y;y=f*y+p*m,m=b,r[l+d]=h+m,n[l+d]=v+y,r[l+d+i]=h-m,n[l+d+i]=v-y,d!==u&&(b=c*f-s*p,p=c*p+s*f,f=b)}},d.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,a=0;for(r=r/2|0;r;r>>>=1)a++;return 1<<a+1+n},d.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var a=e[n];e[n]=e[r-n-1],e[r-n-1]=a,a=t[n],t[n]=-t[r-n-1],t[r-n-1]=-a}},d.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var a=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&a,r=a<67108864?0:a/67108864|0}return e},d.prototype.convert13b=function(e,t,r,a){for(var o=0,i=0;i<t;i++)o+=0|e[i],r[2*i]=8191&o,o>>>=13,r[2*i+1]=8191&o,o>>>=13;for(i=2*t;i<a;++i)r[i]=0;n(0===o),n(0==(-8192&o))},d.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},d.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),a=this.makeRBT(n),o=this.stub(n),i=new Array(n),u=new Array(n),c=new Array(n),s=new Array(n),l=new Array(n),f=new Array(n),p=r.words;p.length=n,this.convert13b(e.words,e.length,i,n),this.convert13b(t.words,t.length,s,n),this.transform(i,o,u,c,n,a),this.transform(s,o,l,f,n,a);for(var d=0;d<n;d++){var h=u[d]*l[d]-c[d]*f[d];c[d]=u[d]*f[d]+c[d]*l[d],u[d]=h}return this.conjugate(u,c,n),this.transform(u,c,p,o,n,a),this.conjugate(p,o,n),this.normalize13b(p,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r._strip()},w.prototype.mul=function(e){var t=new w(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},w.prototype.mulf=function(e){var t=new w(null);return t.words=new Array(this.length+e.length),p(this,e,t)},w.prototype.imul=function(e){return this.clone().mulTo(e,this)},w.prototype.imuln=function(e){var t=e<0;t&&(e=-e),n("number"==typeof e),n(e<67108864);for(var r=0,a=0;a<this.length;a++){var o=(0|this.words[a])*e,i=(67108863&o)+(67108863&r);r>>=26,r+=o/67108864|0,r+=i>>>26,this.words[a]=67108863&i}return 0!==r&&(this.words[a]=r,this.length++),t?this.ineg():this},w.prototype.muln=function(e){return this.clone().imuln(e)},w.prototype.sqr=function(){return this.mul(this)},w.prototype.isqr=function(){return this.imul(this.clone())},w.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,a=r%26;t[r]=e.words[n]>>>a&1}return t}(e);if(0===t.length)return new w(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var a=r.sqr();n<t.length;n++,a=a.sqr())0!==t[n]&&(r=r.mul(a));return r},w.prototype.iushln=function(e){n("number"==typeof e&&e>=0);var t,r=e%26,a=(e-r)/26,o=67108863>>>26-r<<26-r;if(0!==r){var i=0;for(t=0;t<this.length;t++){var u=this.words[t]&o,c=(0|this.words[t])-u<<r;this.words[t]=c|i,i=u>>>26-r}i&&(this.words[t]=i,this.length++)}if(0!==a){for(t=this.length-1;t>=0;t--)this.words[t+a]=this.words[t];for(t=0;t<a;t++)this.words[t]=0;this.length+=a}return this._strip()},w.prototype.ishln=function(e){return n(0===this.negative),this.iushln(e)},w.prototype.iushrn=function(e,t,r){var a;n("number"==typeof e&&e>=0),a=t?(t-t%26)/26:0;var o=e%26,i=Math.min((e-o)/26,this.length),u=67108863^67108863>>>o<<o,c=r;if(a-=i,a=Math.max(0,a),c){for(var s=0;s<i;s++)c.words[s]=this.words[s];c.length=i}if(0===i);else if(this.length>i)for(this.length-=i,s=0;s<this.length;s++)this.words[s]=this.words[s+i];else this.words[0]=0,this.length=1;var l=0;for(s=this.length-1;s>=0&&(0!==l||s>=a);s--){var f=0|this.words[s];this.words[s]=l<<26-o|f>>>o,l=f&u}return c&&0!==l&&(c.words[c.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},w.prototype.ishrn=function(e,t,r){return n(0===this.negative),this.iushrn(e,t,r)},w.prototype.shln=function(e){return this.clone().ishln(e)},w.prototype.ushln=function(e){return this.clone().iushln(e)},w.prototype.shrn=function(e){return this.clone().ishrn(e)},w.prototype.ushrn=function(e){return this.clone().iushrn(e)},w.prototype.testn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,a=1<<t;return!(this.length<=r)&&!!(this.words[r]&a)},w.prototype.imaskn=function(e){n("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(n(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var a=67108863^67108863>>>t<<t;this.words[this.length-1]&=a}return this._strip()},w.prototype.maskn=function(e){return this.clone().imaskn(e)},w.prototype.iaddn=function(e){return n("number"==typeof e),n(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},w.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},w.prototype.isubn=function(e){if(n("number"==typeof e),n(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},w.prototype.addn=function(e){return this.clone().iaddn(e)},w.prototype.subn=function(e){return this.clone().isubn(e)},w.prototype.iabs=function(){return this.negative=0,this},w.prototype.abs=function(){return this.clone().iabs()},w.prototype._ishlnsubmul=function(e,t,r){var a,o,i=e.length+r;this._expand(i);var u=0;for(a=0;a<e.length;a++){o=(0|this.words[a+r])+u;var c=(0|e.words[a])*t;u=((o-=67108863&c)>>26)-(c/67108864|0),this.words[a+r]=67108863&o}for(;a<this.length-r;a++)u=(o=(0|this.words[a+r])+u)>>26,this.words[a+r]=67108863&o;if(0===u)return this._strip();for(n(-1===u),u=0,a=0;a<this.length;a++)u=(o=-(0|this.words[a])+u)>>26,this.words[a]=67108863&o;return this.negative=1,this._strip()},w.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),a=e,o=0|a.words[a.length-1];0!==(r=26-this._countBits(o))&&(a=a.ushln(r),n.iushln(r),o=0|a.words[a.length-1]);var i,u=n.length-a.length;if("mod"!==t){(i=new w(null)).length=u+1,i.words=new Array(i.length);for(var c=0;c<i.length;c++)i.words[c]=0}var s=n.clone()._ishlnsubmul(a,1,u);0===s.negative&&(n=s,i&&(i.words[u]=1));for(var l=u-1;l>=0;l--){var f=67108864*(0|n.words[a.length+l])+(0|n.words[a.length+l-1]);for(f=Math.min(f/o|0,67108863),n._ishlnsubmul(a,f,l);0!==n.negative;)f--,n.negative=0,n._ishlnsubmul(a,1,l),n.isZero()||(n.negative^=1);i&&(i.words[l]=f)}return i&&i._strip(),n._strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:i||null,mod:n}},w.prototype.divmod=function(e,t,r){return n(!e.isZero()),this.isZero()?{div:new w(0),mod:new w(0)}:0!==this.negative&&0===e.negative?(i=this.neg().divmod(e,t),"mod"!==t&&(a=i.div.neg()),"div"!==t&&(o=i.mod.neg(),r&&0!==o.negative&&o.iadd(e)),{div:a,mod:o}):0===this.negative&&0!==e.negative?(i=this.divmod(e.neg(),t),"mod"!==t&&(a=i.div.neg()),{div:a,mod:i.mod}):0!=(this.negative&e.negative)?(i=this.neg().divmod(e.neg(),t),"div"!==t&&(o=i.mod.neg(),r&&0!==o.negative&&o.isub(e)),{div:i.div,mod:o}):e.length>this.length||this.cmp(e)<0?{div:new w(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new w(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new w(this.modrn(e.words[0]))}:this._wordDiv(e,t);var a,o,i},w.prototype.div=function(e){return this.divmod(e,"div",!1).div},w.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},w.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},w.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),a=e.andln(1),o=r.cmp(n);return o<0||1===a&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},w.prototype.modrn=function(e){var t=e<0;t&&(e=-e),n(e<=67108863);for(var r=67108864%e,a=0,o=this.length-1;o>=0;o--)a=(r*a+(0|this.words[o]))%e;return t?-a:a},w.prototype.modn=function(e){return this.modrn(e)},w.prototype.idivn=function(e){var t=e<0;t&&(e=-e),n(e<=67108863);for(var r=0,a=this.length-1;a>=0;a--){var o=(0|this.words[a])+67108864*r;this.words[a]=o/e|0,r=o%e}return this._strip(),t?this.ineg():this},w.prototype.divn=function(e){return this.clone().idivn(e)},w.prototype.egcd=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var a=new w(1),o=new w(0),i=new w(0),u=new w(1),c=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++c;for(var s=r.clone(),l=t.clone();!t.isZero();){for(var f=0,p=1;0==(t.words[0]&p)&&f<26;++f,p<<=1);if(f>0)for(t.iushrn(f);f-- >0;)(a.isOdd()||o.isOdd())&&(a.iadd(s),o.isub(l)),a.iushrn(1),o.iushrn(1);for(var d=0,h=1;0==(r.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(r.iushrn(d);d-- >0;)(i.isOdd()||u.isOdd())&&(i.iadd(s),u.isub(l)),i.iushrn(1),u.iushrn(1);t.cmp(r)>=0?(t.isub(r),a.isub(i),o.isub(u)):(r.isub(t),i.isub(a),u.isub(o))}return{a:i,b:u,gcd:r.iushln(c)}},w.prototype._invmp=function(e){n(0===e.negative),n(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var a,o=new w(1),i=new w(0),u=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var c=0,s=1;0==(t.words[0]&s)&&c<26;++c,s<<=1);if(c>0)for(t.iushrn(c);c-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,f=1;0==(r.words[0]&f)&&l<26;++l,f<<=1);if(l>0)for(r.iushrn(l);l-- >0;)i.isOdd()&&i.iadd(u),i.iushrn(1);t.cmp(r)>=0?(t.isub(r),o.isub(i)):(r.isub(t),i.isub(o))}return(a=0===t.cmpn(1)?o:i).cmpn(0)<0&&a.iadd(e),a},w.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var a=t.cmp(r);if(a<0){var o=t;t=r,r=o}else if(0===a||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},w.prototype.invm=function(e){return this.egcd(e).a.umod(e)},w.prototype.isEven=function(){return 0==(1&this.words[0])},w.prototype.isOdd=function(){return 1==(1&this.words[0])},w.prototype.andln=function(e){return this.words[0]&e},w.prototype.bincn=function(e){n("number"==typeof e);var t=e%26,r=(e-t)/26,a=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=a,this;for(var o=a,i=r;0!==o&&i<this.length;i++){var u=0|this.words[i];o=(u+=o)>>>26,u&=67108863,this.words[i]=u}return 0!==o&&(this.words[i]=o,this.length++),this},w.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},w.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)t=1;else{r&&(e=-e),n(e<=67108863,"Number is too big");var a=0|this.words[0];t=a===e?0:a<e?-1:1}return 0!==this.negative?0|-t:t},w.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},w.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],a=0|e.words[r];if(n!==a){n<a?t=-1:n>a&&(t=1);break}}return t},w.prototype.gtn=function(e){return 1===this.cmpn(e)},w.prototype.gt=function(e){return 1===this.cmp(e)},w.prototype.gten=function(e){return this.cmpn(e)>=0},w.prototype.gte=function(e){return this.cmp(e)>=0},w.prototype.ltn=function(e){return-1===this.cmpn(e)},w.prototype.lt=function(e){return-1===this.cmp(e)},w.prototype.lten=function(e){return this.cmpn(e)<=0},w.prototype.lte=function(e){return this.cmp(e)<=0},w.prototype.eqn=function(e){return 0===this.cmpn(e)},w.prototype.eq=function(e){return 0===this.cmp(e)},w.red=function(e){return new g(e)},w.prototype.toRed=function(e){return n(!this.red,"Already a number in reduction context"),n(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},w.prototype.fromRed=function(){return n(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},w.prototype._forceRed=function(e){return this.red=e,this},w.prototype.forceRed=function(e){return n(!this.red,"Already a number in reduction context"),this._forceRed(e)},w.prototype.redAdd=function(e){return n(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},w.prototype.redIAdd=function(e){return n(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},w.prototype.redSub=function(e){return n(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},w.prototype.redISub=function(e){return n(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},w.prototype.redShl=function(e){return n(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},w.prototype.redMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},w.prototype.redIMul=function(e){return n(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},w.prototype.redSqr=function(){return n(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},w.prototype.redISqr=function(){return n(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},w.prototype.redSqrt=function(){return n(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},w.prototype.redInvm=function(){return n(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},w.prototype.redNeg=function(){return n(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},w.prototype.redPow=function(e){return n(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var E={k256:null,p224:null,p192:null,p25519:null};h.prototype._tmp=function(){var e=new w(null);return e.words=new Array(Math.ceil(this.n/13)),e},h.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},h.prototype.split=function(e,t){e.iushrn(this.n,0,t)},h.prototype.imulK=function(e){return e.imul(this.k)},a(v,h),v.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),a=0;a<n;a++)t.words[a]=e.words[a];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&r,a=10;a<e.length;a++){var i=0|e.words[a];e.words[a-10]=(i&r)<<4|o>>>22,o=i}o>>>=22,e.words[a-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},v.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},a(m,h),a(y,h),a(b,h),b.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,a=67108863&n;n>>>=26,e.words[r]=a,t=n}return 0!==t&&(e.words[e.length++]=t),e},w._prime=function(e){if(E[e])return E[e];var t;if("k256"===e)t=new v;else if("p224"===e)t=new m;else if("p192"===e)t=new y;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new b}return E[e]=t,t},g.prototype._verify1=function(e){n(0===e.negative,"red works only with positives"),n(e.red,"red works only with red numbers")},g.prototype._verify2=function(e,t){n(0==(e.negative|t.negative),"red works only with positives"),n(e.red&&e.red===t.red,"red works only with red numbers")},g.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(c(e,e.umod(this.m)._forceRed(this)),e)},g.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},g.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},g.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},g.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},g.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},g.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},g.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},g.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},g.prototype.isqr=function(e){return this.imul(e,e.clone())},g.prototype.sqr=function(e){return this.mul(e,e)},g.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(n(t%2==1),3===t){var r=this.m.add(new w(1)).iushrn(2);return this.pow(e,r)}for(var a=this.m.subn(1),o=0;!a.isZero()&&0===a.andln(1);)o++,a.iushrn(1);n(!a.isZero());var i=new w(1).toRed(this),u=i.redNeg(),c=this.m.subn(1).iushrn(1),s=this.m.bitLength();for(s=new w(2*s*s).toRed(this);0!==this.pow(s,c).cmp(u);)s.redIAdd(u);for(var l=this.pow(s,a),f=this.pow(e,a.addn(1).iushrn(1)),p=this.pow(e,a),d=o;0!==p.cmp(i);){for(var h=p,v=0;0!==h.cmp(i);v++)h=h.redSqr();n(v<d);var m=this.pow(l,new w(1).iushln(d-v-1));f=f.redMul(m),l=m.redSqr(),p=p.redMul(l),d=v}return f},g.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},g.prototype.pow=function(e,t){if(t.isZero())return new w(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new w(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var a=r[0],o=0,i=0,u=t.bitLength()%26;for(0===u&&(u=26),n=t.length-1;n>=0;n--){for(var c=t.words[n],s=u-1;s>=0;s--){var l=c>>s&1;a!==r[0]&&(a=this.sqr(a)),0!==l||0!==o?(o<<=1,o|=l,(4===++i||0===n&&0===s)&&(a=this.mul(a,r[o]),i=0,o=0)):i=0}u=26}return a},g.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},g.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},w.mont=function(e){return new $(e)},a($,g),$.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},$.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},$.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),a=r.isub(n).iushrn(this.shift),o=a;return a.cmp(this.m)>=0?o=a.isub(this.m):a.cmpn(0)<0&&(o=a.iadd(this.m)),o._forceRed(this)},$.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new w(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),a=r.isub(n).iushrn(this.shift),o=a;return a.cmp(this.m)>=0?o=a.isub(this.m):a.cmpn(0)<0&&(o=a.iadd(this.m)),o._forceRed(this)},$.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e,this)})),parcelRequire.register("5m7wF",(function(e,t){var r=parcelRequire("jzxXn");e.exports=r("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")})),parcelRequire.register("jzxXn",(function(e,t){"use strict";var r=parcelRequire("eN0t8").Buffer;e.exports=function(e){var t=function(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return r.alloc(0);for(var t=0,a=0,o=0;e[t]===s;)a++,t++;for(var i=(e.length-t)*l+1>>>0,u=new Uint8Array(i);e[t];){var f=n[e.charCodeAt(t)];if(255===f)return;for(var p=0,d=i-1;(0!==f||p<o)&&-1!==d;d--,p++)f+=c*u[d]>>>0,u[d]=f%256>>>0,f=f/256>>>0;if(0!==f)throw new Error("Non-zero carry");o=p,t++}for(var h=i-o;h!==i&&0===u[h];)h++;var v=r.allocUnsafe(a+(i-h));v.fill(0,0,a);for(var m=a;h!==i;)v[m++]=u[h++];return v};if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),a=0;a<n.length;a++)n[a]=255;for(var o=0;o<e.length;o++){var i=e.charAt(o),u=i.charCodeAt(0);if(255!==n[u])throw new TypeError(i+" is ambiguous");n[u]=o}var c=e.length,s=e.charAt(0),l=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);return{encode:function(t){if((Array.isArray(t)||t instanceof Uint8Array)&&(t=r.from(t)),!r.isBuffer(t))throw new TypeError("Expected Buffer");if(0===t.length)return"";for(var n=0,a=0,o=0,i=t.length;o!==i&&0===t[o];)o++,n++;for(var u=(i-o)*f+1>>>0,l=new Uint8Array(u);o!==i;){for(var p=t[o],d=0,h=u-1;(0!==p||d<a)&&-1!==h;h--,d++)p+=256*l[h]>>>0,l[h]=p%c>>>0,p=p/c>>>0;if(0!==p)throw new Error("Non-zero carry");a=d,o++}for(var v=u-a;v!==u&&0===l[v];)v++;for(var m=s.repeat(n);v<u;++v)m+=e.charAt(l[v]);return m},decodeUnsafe:t,decode:function(e){var r=t(e);if(r)return r;throw new Error("Non-base"+c+" character")}}}})),parcelRequire.register("eN0t8",(function(e,t){var r=parcelRequire("jPoaI"),n=r.Buffer;function a(e,t){for(var r in e)t[r]=e[r]}function o(e,t,r){return n(e,t,r)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?e.exports=r:(a(r,e.exports),e.exports.Buffer=o),a(n,o),o.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return n(e,t,r)},o.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var a=n(e);return void 0!==t?"string"==typeof r?a.fill(t,r):a.fill(t):a.fill(0),a},o.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return n(e)},o.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}})),parcelRequire.register("7fpPy",(function(e,t){var r,n;function a(e,t,r){return t<=e&&e<=r}function o(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}$parcel$export(e.exports,"TextEncoder",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"TextDecoder",(function(){return n}),(function(e){return n=e}));function i(e){this.tokens=[].slice.call(e)}i.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():-1},prepend:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.unshift(t.pop());else this.tokens.unshift(e)},push:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.push(t.shift());else this.tokens.push(e)}};var u=-1;function c(e,t){if(e)throw TypeError("Decoder error");return t||65533}var s="utf-8";function l(e,t){if(!(this instanceof l))return new l(e,t);if((e=void 0!==e?String(e).toLowerCase():s)!==s)throw new Error("Encoding not supported. Only utf-8 is supported");t=o(t),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=Boolean(t.fatal),this._ignoreBOM=Boolean(t.ignoreBOM),Object.defineProperty(this,"encoding",{value:"utf-8"}),Object.defineProperty(this,"fatal",{value:this._fatal}),Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}function f(e,t){if(!(this instanceof f))return new f(e,t);if((e=void 0!==e?String(e).toLowerCase():s)!==s)throw new Error("Encoding not supported. Only utf-8 is supported");t=o(t),this._streaming=!1,this._encoder=null,this._options={fatal:Boolean(t.fatal)},Object.defineProperty(this,"encoding",{value:"utf-8"})}function p(e){var t=e.fatal,r=0,n=0,o=0,i=128,s=191;this.handler=function(e,l){if(-1===l&&0!==o)return o=0,c(t);if(-1===l)return u;if(0===o){if(a(l,0,127))return l;if(a(l,194,223))o=1,r=l-192;else if(a(l,224,239))224===l&&(i=160),237===l&&(s=159),o=2,r=l-224;else{if(!a(l,240,244))return c(t);240===l&&(i=144),244===l&&(s=143),o=3,r=l-240}return r<<=6*o,null}if(!a(l,i,s))return r=o=n=0,i=128,s=191,e.prepend(l),c(t);if(i=128,s=191,r+=l-128<<6*(o-(n+=1)),n!==o)return null;var f=r;return r=o=n=0,f}}function d(e){e.fatal;this.handler=function(e,t){if(-1===t)return u;if(a(t,0,127))return t;var r,n;a(t,128,2047)?(r=1,n=192):a(t,2048,65535)?(r=2,n=224):a(t,65536,1114111)&&(r=3,n=240);for(var o=[(t>>6*r)+n];r>0;){var i=t>>6*(r-1);o.push(128|63&i),r-=1}return o}}l.prototype={decode:function(e,t){var r;r="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=o(t),this._streaming||(this._decoder=new p({fatal:this._fatal}),this._BOMseen=!1),this._streaming=Boolean(t.stream);for(var n,a=new i(r),c=[];!a.endOfStream()&&(n=this._decoder.handler(a,a.read()))!==u;)null!==n&&(Array.isArray(n)?c.push.apply(c,n):c.push(n));if(!this._streaming){do{if((n=this._decoder.handler(a,a.read()))===u)break;null!==n&&(Array.isArray(n)?c.push.apply(c,n):c.push(n))}while(!a.endOfStream());this._decoder=null}return c.length&&(-1===["utf-8"].indexOf(this.encoding)||this._ignoreBOM||this._BOMseen||(65279===c[0]?(this._BOMseen=!0,c.shift()):this._BOMseen=!0)),function(e){for(var t="",r=0;r<e.length;++r){var n=e[r];n<=65535?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode(55296+(n>>10),56320+(1023&n)))}return t}(c)}},f.prototype={encode:function(e,t){e=e?String(e):"",t=o(t),this._streaming||(this._encoder=new d(this._options)),this._streaming=Boolean(t.stream);for(var r,n=[],a=new i(function(e){for(var t=String(e),r=t.length,n=0,a=[];n<r;){var o=t.charCodeAt(n);if(o<55296||o>57343)a.push(o);else if(56320<=o&&o<=57343)a.push(65533);else if(55296<=o&&o<=56319)if(n===r-1)a.push(65533);else{var i=e.charCodeAt(n+1);if(56320<=i&&i<=57343){var u=1023&o,c=1023&i;a.push(65536+(u<<10)+c),n+=1}else a.push(65533)}n+=1}return a}(e));!a.endOfStream()&&(r=this._encoder.handler(a,a.read()))!==u;)Array.isArray(r)?n.push.apply(n,r):n.push(r);if(!this._streaming){for(;(r=this._encoder.handler(a,a.read()))!==u;)Array.isArray(r)?n.push.apply(n,r):n.push(r);this._encoder=null}return new Uint8Array(n)}},r=f,n=l})),parcelRequire.register("5dmHG",(function(e,t){var r=parcelRequire("8y9hR");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Assignable=e.exports.Enum=void 0;e.exports.Enum=function e(t){var n=this;if((0,r.default)(this,e),1!==Object.keys(t).length)throw new Error("Enum can only take single value");Object.keys(t).map((function(e){n[e]=t[e],n.enum=e}))};e.exports.Assignable=function e(t){var n=this;(0,r.default)(this,e),Object.keys(t).map((function(e){n[e]=t[e]}))}})),parcelRequire.register("3dAWg",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("kY881"),u=parcelRequire("4Z8U5");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.BrowserLocalStorageKeyStore=void 0;var c=parcelRequire("eJ8Lr"),s=parcelRequire("8pTGX"),l="near-api-js:keystore:",f=function(e){(0,o.default)(c,e);var t=(0,i.default)(c);function c(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.localStorage,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;return(0,n.default)(this,c),(e=t.call(this)).localStorage=r,e.prefix=a,e}return(0,a.default)(c,[{key:"setKey",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:a.localStorage.setItem(a.storageKeyForSecretKey(e,t),n.toString());case 1:case"end":return r.stop()}}),r)})))()}},{key:"getKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(a=n.localStorage.getItem(n.storageKeyForSecretKey(e,t))){r.next=3;break}return r.abrupt("return",null);case 3:return r.abrupt("return",s.KeyPair.fromString(a));case 4:case"end":return r.stop()}}),r)})))()}},{key:"removeKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:n.localStorage.removeItem(n.storageKeyForSecretKey(e,t));case 1:case"end":return r.stop()}}),r)})))()}},{key:"clear",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){var r,n,a,o,i,c;return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(r=!0,n=!1,a=void 0,t.prev=1,o=e.storageKeys()[Symbol.iterator]();!(r=(i=o.next()).done);r=!0)(c=i.value).startsWith(e.prefix)&&e.localStorage.removeItem(c);t.next=9;break;case 5:t.prev=5,t.t0=t.catch(1),n=!0,a=t.t0;case 9:t.prev=9,t.prev=10,r||null==o.return||o.return();case 12:if(t.prev=12,!n){t.next=15;break}throw a;case 15:return t.finish(12);case 16:return t.finish(9);case 17:case"end":return t.stop()}}),t,null,[[1,5,9,17],[10,,12,16]])})))()}},{key:"getNetworks",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){var r,n,a,o,i,c,s,l;return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(r=new Set,n=!0,a=!1,o=void 0,t.prev=2,i=e.storageKeys()[Symbol.iterator]();!(n=(c=i.next()).done);n=!0)(s=c.value).startsWith(e.prefix)&&(l=s.substring(e.prefix.length).split(":"),r.add(l[1]));t.next=10;break;case 6:t.prev=6,t.t0=t.catch(2),a=!0,o=t.t0;case 10:t.prev=10,t.prev=11,n||null==i.return||i.return();case 13:if(t.prev=13,!a){t.next=16;break}throw o;case 16:return t.finish(13);case 17:return t.finish(10);case 18:return t.abrupt("return",Array.from(r.values()));case 19:case"end":return t.stop()}}),t,null,[[2,6,10,18],[11,,13,17]])})))()}},{key:"getAccounts",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var n,a,o,i,c,s,l,f;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:for(n=new Array,a=!0,o=!1,i=void 0,r.prev=2,c=t.storageKeys()[Symbol.iterator]();!(a=(s=c.next()).done);a=!0)(l=s.value).startsWith(t.prefix)&&(f=l.substring(t.prefix.length).split(":"))[1]===e&&n.push(f[0]);r.next=10;break;case 6:r.prev=6,r.t0=r.catch(2),o=!0,i=r.t0;case 10:r.prev=10,r.prev=11,a||null==c.return||c.return();case 13:if(r.prev=13,!o){r.next=16;break}throw i;case 16:return r.finish(13);case 17:return r.finish(10);case 18:return r.abrupt("return",n);case 19:case"end":return r.stop()}}),r,null,[[2,6,10,18],[11,,13,17]])})))()}},{key:"storageKeyForSecretKey",value:function(e,t){return"".concat(this.prefix).concat(t,":").concat(e)}},{key:"storageKeys",value:$parcel$interopDefault(u).mark((function e(){var t;return $parcel$interopDefault(u).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=0;case 1:if(!(t<this.localStorage.length)){e.next=7;break}return e.next=4,this.localStorage.key(t);case 4:t++,e.next=1;break;case 7:case"end":return e.stop()}}),e,this)}))}]),c}(c.KeyStore);e.exports.BrowserLocalStorageKeyStore=f})),parcelRequire.register("llqmF",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("kY881"),u=parcelRequire("4Z8U5");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.MergeKeyStore=void 0;var c=function(e){(0,o.default)(c,e);var t=(0,i.default)(c);function c(e){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{writeKeyStoreIndex:0};return(0,n.default)(this,c),(r=t.call(this)).options=a,r.keyStores=e,r}return(0,a.default)(c,[{key:"setKey",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,a.keyStores[a.options.writeKeyStoreIndex].setKey(e,t,n);case 2:case"end":return r.stop()}}),r)})))()}},{key:"getKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a,o,i,c,s,l,f;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:a=!0,o=!1,i=void 0,r.prev=1,c=n.keyStores[Symbol.iterator]();case 3:if(a=(s=c.next()).done){r.next=13;break}return l=s.value,r.next=7,l.getKey(e,t);case 7:if(!(f=r.sent)){r.next=10;break}return r.abrupt("return",f);case 10:a=!0,r.next=3;break;case 13:r.next=19;break;case 15:r.prev=15,r.t0=r.catch(1),o=!0,i=r.t0;case 19:r.prev=19,r.prev=20,a||null==c.return||c.return();case 22:if(r.prev=22,!o){r.next=25;break}throw i;case 25:return r.finish(22);case 26:return r.finish(19);case 27:return r.abrupt("return",null);case 28:case"end":return r.stop()}}),r,null,[[1,15,19,27],[20,,22,26]])})))()}},{key:"removeKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a,o,i,c,s,l;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:a=!0,o=!1,i=void 0,r.prev=1,c=n.keyStores[Symbol.iterator]();case 3:if(a=(s=c.next()).done){r.next=10;break}return l=s.value,r.next=7,l.removeKey(e,t);case 7:a=!0,r.next=3;break;case 10:r.next=16;break;case 12:r.prev=12,r.t0=r.catch(1),o=!0,i=r.t0;case 16:r.prev=16,r.prev=17,a||null==c.return||c.return();case 19:if(r.prev=19,!o){r.next=22;break}throw i;case 22:return r.finish(19);case 23:return r.finish(16);case 24:case"end":return r.stop()}}),r,null,[[1,12,16,24],[17,,19,23]])})))()}},{key:"clear",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){var r,n,a,o,i,c;return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=!0,n=!1,a=void 0,t.prev=1,o=e.keyStores[Symbol.iterator]();case 3:if(r=(i=o.next()).done){t.next=10;break}return c=i.value,t.next=7,c.clear();case 7:r=!0,t.next=3;break;case 10:t.next=16;break;case 12:t.prev=12,t.t0=t.catch(1),n=!0,a=t.t0;case 16:t.prev=16,t.prev=17,r||null==o.return||o.return();case 19:if(t.prev=19,!n){t.next=22;break}throw a;case 22:return t.finish(19);case 23:return t.finish(16);case 24:case"end":return t.stop()}}),t,null,[[1,12,16,24],[17,,19,23]])})))()}},{key:"getNetworks",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(u).mark((function t(){var r,n,a,o,i,c,s,l,f,p,d,h,v;return $parcel$interopDefault(u).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=new Set,n=!0,a=!1,o=void 0,i=!0,c=!1,s=void 0,t.prev=2,l=e.keyStores[Symbol.iterator]();case 4:if(i=(f=l.next()).done){t.next=33;break}return p=f.value,t.prev=6,t.next=9,p.getNetworks();case 9:t.t0=Symbol.iterator,d=t.sent[t.t0]();case 11:if(n=(h=d.next()).done){t.next=16;break}v=h.value,r.add(v);case 13:n=!0,t.next=11;break;case 16:t.next=22;break;case 18:t.prev=18,t.t1=t.catch(6),a=!0,o=t.t1;case 22:t.prev=22,t.prev=23,n||null==d.return||d.return();case 25:if(t.prev=25,!a){t.next=28;break}throw o;case 28:return t.finish(25);case 29:return t.finish(22);case 30:i=!0,t.next=4;break;case 33:t.next=39;break;case 35:t.prev=35,t.t2=t.catch(2),c=!0,s=t.t2;case 39:t.prev=39,t.prev=40,i||null==l.return||l.return();case 42:if(t.prev=42,!c){t.next=45;break}throw s;case 45:return t.finish(42);case 46:return t.finish(39);case 47:return t.abrupt("return",Array.from(r));case 48:case"end":return t.stop()}}),t,null,[[2,35,39,47],[6,18,22,30],[23,,25,29],[40,,42,46]])})))()}},{key:"getAccounts",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var n,a,o,i,c,s,l,f,p,d,h,v,m;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:n=new Set,a=!0,o=!1,i=void 0,c=!0,s=!1,l=void 0,r.prev=2,f=t.keyStores[Symbol.iterator]();case 4:if(c=(p=f.next()).done){r.next=33;break}return d=p.value,r.prev=6,r.next=9,d.getAccounts(e);case 9:r.t0=Symbol.iterator,h=r.sent[r.t0]();case 11:if(a=(v=h.next()).done){r.next=16;break}m=v.value,n.add(m);case 13:a=!0,r.next=11;break;case 16:r.next=22;break;case 18:r.prev=18,r.t1=r.catch(6),o=!0,i=r.t1;case 22:r.prev=22,r.prev=23,a||null==h.return||h.return();case 25:if(r.prev=25,!o){r.next=28;break}throw i;case 28:return r.finish(25);case 29:return r.finish(22);case 30:c=!0,r.next=4;break;case 33:r.next=39;break;case 35:r.prev=35,r.t2=r.catch(2),s=!0,l=r.t2;case 39:r.prev=39,r.prev=40,c||null==f.return||f.return();case 42:if(r.prev=42,!s){r.next=45;break}throw l;case 45:return r.finish(42);case 46:return r.finish(39);case 47:return r.abrupt("return",Array.from(n));case 48:case"end":return r.stop()}}),r,null,[[2,35,39,47],[6,18,22,30],[23,,25,29],[40,,42,46]])})))()}},{key:"toString",value:function(){return"MergeKeyStore(".concat(this.keyStores.join(", "),")")}}]),c}(parcelRequire("eJ8Lr").KeyStore);e.exports.MergeKeyStore=c})),parcelRequire.register("hHZrX",(function(e,t){"use strict";var r=e.exports&&e.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=e.exports&&e.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=e.exports&&e.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&r(t,e,a);return n(t,e),t};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.WalletConnection=e.exports.WalletAccount=e.exports.ConnectedWalletAccount=e.exports.Near=e.exports.KeyPair=e.exports.Signer=e.exports.InMemorySigner=e.exports.Contract=e.exports.Connection=e.exports.Account=e.exports.multisig=e.exports.validators=e.exports.transactions=e.exports.utils=e.exports.providers=e.exports.accountCreator=void 0;var o=a(parcelRequire("bMcUu"));e.exports.providers=o;var i=a(parcelRequire("jSV3x"));e.exports.utils=i;var u=a(parcelRequire("7cM39"));e.exports.transactions=u;var c=a(parcelRequire("kfiwQ"));e.exports.validators=c;var s=parcelRequire("gXWlL");Object.defineProperty(e.exports,"Account",{enumerable:!0,get:function(){return s.Account}});var l=a(parcelRequire("staLo"));e.exports.multisig=l;var f=a(parcelRequire("g5374"));e.exports.accountCreator=f;var p=parcelRequire("5YbZv");Object.defineProperty(e.exports,"Connection",{enumerable:!0,get:function(){return p.Connection}});var d=parcelRequire("e29vo");Object.defineProperty(e.exports,"Signer",{enumerable:!0,get:function(){return d.Signer}}),Object.defineProperty(e.exports,"InMemorySigner",{enumerable:!0,get:function(){return d.InMemorySigner}});var h=parcelRequire("hRJ6X");Object.defineProperty(e.exports,"Contract",{enumerable:!0,get:function(){return h.Contract}});var v=parcelRequire("8pTGX");Object.defineProperty(e.exports,"KeyPair",{enumerable:!0,get:function(){return v.KeyPair}});var m=parcelRequire("kowPj");Object.defineProperty(e.exports,"Near",{enumerable:!0,get:function(){return m.Near}});var y=parcelRequire("k3l4B");Object.defineProperty(e.exports,"ConnectedWalletAccount",{enumerable:!0,get:function(){return y.ConnectedWalletAccount}}),Object.defineProperty(e.exports,"WalletAccount",{enumerable:!0,get:function(){return y.WalletAccount}}),Object.defineProperty(e.exports,"WalletConnection",{enumerable:!0,get:function(){return y.WalletConnection}})})),parcelRequire.register("bMcUu",(function(e,t){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.ErrorContext=e.exports.TypedError=e.exports.getTransactionLastResult=e.exports.FinalExecutionStatusBasic=e.exports.JsonRpcProvider=e.exports.Provider=void 0;var r=parcelRequire("iAzPz");Object.defineProperty(e.exports,"Provider",{enumerable:!0,get:function(){return r.Provider}}),Object.defineProperty(e.exports,"getTransactionLastResult",{enumerable:!0,get:function(){return r.getTransactionLastResult}}),Object.defineProperty(e.exports,"FinalExecutionStatusBasic",{enumerable:!0,get:function(){return r.FinalExecutionStatusBasic}});var n=parcelRequire("bRaG5");Object.defineProperty(e.exports,"JsonRpcProvider",{enumerable:!0,get:function(){return n.JsonRpcProvider}}),Object.defineProperty(e.exports,"TypedError",{enumerable:!0,get:function(){return n.TypedError}}),Object.defineProperty(e.exports,"ErrorContext",{enumerable:!0,get:function(){return n.ErrorContext}})})),parcelRequire.register("iAzPz",(function(e,t){var r,n,a,o=parcelRequire("8y9hR"),i=parcelRequire("jPoaI").Buffer;Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.getTransactionLastResult=e.exports.Provider=e.exports.IdType=e.exports.FinalExecutionStatusBasic=e.exports.ExecutionStatusBasic=void 0,(r=e.exports.ExecutionStatusBasic||(e.exports.ExecutionStatusBasic={})).Unknown="Unknown",r.Pending="Pending",r.Failure="Failure",(n=e.exports.FinalExecutionStatusBasic||(e.exports.FinalExecutionStatusBasic={})).NotStarted="NotStarted",n.Started="Started",n.Failure="Failure",(a=e.exports.IdType||(e.exports.IdType={})).Transaction="transaction",a.Receipt="receipt";e.exports.Provider=function e(){(0,o.default)(this,e)},e.exports.getTransactionLastResult=function(e){if("object"==typeof e.status&&"string"==typeof e.status.SuccessValue){var t=i.from(e.status.SuccessValue,"base64").toString();try{return JSON.parse(t)}catch(e){return t}}return null}})),parcelRequire.register("bRaG5",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("hNZKs"),u=parcelRequire("kY881"),c=parcelRequire("4Z8U5"),s=parcelRequire("jPoaI").Buffer,l=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.JsonRpcProvider=e.exports.ErrorContext=e.exports.TypedError=void 0;var f=l(parcelRequire("7kbiF")),p=parcelRequire("iAzPz"),d=parcelRequire("9Nstj"),h=parcelRequire("6vXKs");Object.defineProperty(e.exports,"TypedError",{enumerable:!0,get:function(){return h.TypedError}}),Object.defineProperty(e.exports,"ErrorContext",{enumerable:!0,get:function(){return h.ErrorContext}});var v=parcelRequire("2HPkT"),m=l(parcelRequire("dkG2P")),y=parcelRequire("2RlOX"),b=123,g=function(e){(0,o.default)(l,e);var t=(0,u.default)(l);function l(e){var r;((0,n.default)(this,l),r=t.call(this),null!=e&&"object"==typeof e)?r.connection=e:(f.default("JsonRpcProvider(url?: string)")("use `JsonRpcProvider(connectionInfo: ConnectionInfo)` instead"),r.connection={url:e});return r}return(0,a.default)(l,[{key:"status",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(c).mark((function t(){return $parcel$interopDefault(c).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",e.sendJsonRpc("status",[]));case 1:case"end":return t.stop()}}),t)})))()}},{key:"sendTransaction",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var n;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=e.encode(),r.abrupt("return",t.sendJsonRpc("broadcast_tx_commit",[s.from(n).toString("base64")]));case 2:case"end":return r.stop()}}),r)})))()}},{key:"sendTransactionAsync",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var n;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=e.encode(),r.abrupt("return",t.sendJsonRpc("broadcast_tx_async",[s.from(n).toString("base64")]));case 2:case"end":return r.stop()}}),r)})))()}},{key:"txStatus",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if("string"!=typeof e){r.next=4;break}return r.abrupt("return",n.txStatusString(e,t));case 4:return r.abrupt("return",n.txStatusUint8Array(e,t));case 5:case"end":return r.stop()}}),r)})))()}},{key:"txStatusUint8Array",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",n.sendJsonRpc("tx",[v.baseEncode(e),t]));case 1:case"end":return r.stop()}}),r)})))()}},{key:"txStatusString",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",n.sendJsonRpc("tx",[e,t]));case 1:case"end":return r.stop()}}),r)})))()}},{key:"txStatusReceipts",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",n.sendJsonRpc("EXPERIMENTAL_tx_status",[v.baseEncode(e),t]));case 1:case"end":return r.stop()}}),r)})))()}},{key:"query",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=this;return(0,r.default)($parcel$interopDefault(c).mark((function e(){var r,n,o,u;return $parcel$interopDefault(c).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(1!==t.length){e.next=7;break}return e.next=4,a.sendJsonRpc("query",t[0]);case 4:r=e.sent,e.next=11;break;case 7:return n=(0,i.default)(t,2),o=n[0],u=n[1],e.next=10,a.sendJsonRpc("query",[o,u]);case 10:r=e.sent;case 11:if(!r||!r.error){e.next=13;break}throw new h.TypedError("Querying ".concat(t," failed: ").concat(r.error,".\n").concat(JSON.stringify(r,null,2)),y.getErrorTypeFromErrorMessage(r.error));case 13:return e.abrupt("return",r);case 14:case"end":return e.stop()}}),e)})))()}},{key:"block",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var n,a;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=e.finality,a=e.blockId,"object"!=typeof e&&(f.default("JsonRpcProvider.block(blockId)")("use `block({ blockId })` or `block({ finality })` instead"),a=e),r.abrupt("return",t.sendJsonRpc("block",{block_id:a,finality:n}));case 4:case"end":return r.stop()}}),r)})))()}},{key:"blockChanges",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var n,a;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=e.finality,a=e.blockId,r.abrupt("return",t.sendJsonRpc("EXPERIMENTAL_changes_in_block",{block_id:a,finality:n}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"chunk",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",t.sendJsonRpc("chunk",[e]));case 1:case"end":return r.stop()}}),r)})))()}},{key:"validators",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",t.sendJsonRpc("validators",[e]));case 1:case"end":return r.stop()}}),r)})))()}},{key:"experimental_genesisConfig",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(c).mark((function t(){return $parcel$interopDefault(c).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f.default("JsonRpcProvider.experimental_protocolConfig()")("use `experimental_protocolConfig({ sync_checkpoint: 'genesis' })` to fetch the up-to-date or genesis protocol config explicitly"),t.next=4,e.sendJsonRpc("EXPERIMENTAL_protocol_config",{sync_checkpoint:"genesis"});case 4:return t.abrupt("return",t.sent);case 5:case"end":return t.stop()}}),t)})))()}},{key:"experimental_protocolConfig",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.sendJsonRpc("EXPERIMENTAL_protocol_config",e);case 2:return r.abrupt("return",r.sent);case 3:case"end":return r.stop()}}),r)})))()}},{key:"experimental_lightClientProof",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return f.default("JsonRpcProvider.experimental_lightClientProof(request)")("use `lightClientProof` instead"),r.next=4,t.lightClientProof(e);case 4:return r.abrupt("return",r.sent);case 5:case"end":return r.stop()}}),r)})))()}},{key:"lightClientProof",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.sendJsonRpc("EXPERIMENTAL_light_client_proof",e);case 2:return r.abrupt("return",r.sent);case 3:case"end":return r.stop()}}),r)})))()}},{key:"accessKeyChanges",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var a,o;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=t.finality,o=t.blockId,r.abrupt("return",n.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"all_access_key_changes",account_ids:e,block_id:o,finality:a}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"singleAccessKeyChanges",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var a,o;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=t.finality,o=t.blockId,r.abrupt("return",n.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"single_access_key_changes",keys:e,block_id:o,finality:a}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"accountChanges",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var a,o;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=t.finality,o=t.blockId,r.abrupt("return",n.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"account_changes",account_ids:e,block_id:o,finality:a}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"contractStateChanges",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",a=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var o,i;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return o=t.finality,i=t.blockId,r.abrupt("return",a.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"data_changes",account_ids:e,key_prefix_base64:n,block_id:i,finality:o}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"contractCodeChanges",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){var a,o;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=t.finality,o=t.blockId,r.abrupt("return",n.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"contract_code_changes",account_ids:e,block_id:o,finality:a}));case 3:case"end":return r.stop()}}),r)})))()}},{key:"gasPrice",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(c).mark((function r(){return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.sendJsonRpc("gas_price",[e]);case 2:return r.abrupt("return",r.sent);case 3:case"end":return r.stop()}}),r)})))()}},{key:"sendJsonRpc",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(c).mark((function a(){var o,i;return $parcel$interopDefault(c).wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,m.default(500,12,1.5,(0,r.default)($parcel$interopDefault(c).mark((function r(){var a,o,i;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,a={method:e,params:t,id:b++,jsonrpc:"2.0"},r.next=4,d.fetchJson(n.connection,JSON.stringify(a));case 4:if(!(o=r.sent).error){r.next=16;break}if("object"!=typeof o.error.data){r.next=12;break}if("string"!=typeof o.error.data.error_message||"string"!=typeof o.error.data.error_type){r.next=9;break}throw new h.TypedError(o.error.data.error_message,o.error.data.error_type);case 9:throw y.parseRpcError(o.error.data);case 12:if(i="[".concat(o.error.code,"] ").concat(o.error.message,": ").concat(o.error.data),"Timeout"!==o.error.data&&!i.includes("Timeout error")&&!i.includes("query has timed out")){r.next=15;break}throw new h.TypedError(i,"TimeoutError");case 15:throw new h.TypedError(i,y.getErrorTypeFromErrorMessage(o.error.data));case 16:return r.abrupt("return",o);case 19:if(r.prev=19,r.t0=r.catch(0),"TimeoutError"!==r.t0.type){r.next=24;break}return console.warn("Retrying request to ".concat(e," as it has timed out"),t),r.abrupt("return",null);case 24:throw r.t0;case 25:case"end":return r.stop()}}),r,null,[[0,19]])}))));case 2:if(o=a.sent,void 0!==(i=o.result)){a.next=6;break}throw new h.TypedError("Exceeded ".concat(12," attempts for request to ").concat(e,"."),"RetriesExceeded");case 6:return a.abrupt("return",i);case 7:case"end":return a.stop()}}),a)})))()}}]),l}(p.Provider);e.exports.JsonRpcProvider=g})),parcelRequire.register("7kbiF",(function(e,t){
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
"use strict";function r(e,t){if("function"!=typeof e)throw new TypeError("argument fn must be a function");return e}function n(e,t,r){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var n=Object.getOwnPropertyDescriptor(e,t);if(!n)throw new TypeError("must call property on owner object");if(!n.configurable)throw new TypeError("property must be configurable")}e.exports=function(e){var t=function(e){};if(!e)throw new TypeError("argument namespace is required");return t._file=void 0,t._ignored=!0,t._namespace=e,t._traced=!1,t._warned=Object.create(null),t.function=r,t.property=n,t}})),parcelRequire.register("9Nstj",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("ebKTL"),a=parcelRequire("9OS8c"),o=parcelRequire("4Z8U5"),i=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.fetchJson=void 0;var u=i(parcelRequire("4XLTY")),c=i(parcelRequire("dkG2P")),s=parcelRequire("bMcUu"),l=parcelRequire("6vXKs");function f(){return(f=(0,r.default)($parcel$interopDefault(o).mark((function e(t,i){var f,p;return $parcel$interopDefault(o).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f={url:null},"string"==typeof t?f.url=t:f=t,e.next=4,c.default(1e3,10,1.5,(0,r.default)($parcel$interopDefault(o).mark((function e(){var t;return $parcel$interopDefault(o).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(f.url,{method:i?"POST":"GET",body:i||void 0,headers:(0,a.default)((0,n.default)({},f.headers),{"Content-Type":"application/json"})});case 3:if((t=e.sent).ok){e.next=14;break}if(503!==t.status){e.next=8;break}return l.logWarning("Retrying HTTP request for ".concat(f.url," as it's not available now")),e.abrupt("return",null);case 8:return e.t0=u,e.t1=t.status,e.next=12,t.text();case 12:throw e.t2=e.sent,e.t0.default.call(e.t0,e.t1,e.t2);case 14:return e.abrupt("return",t);case 17:if(e.prev=17,e.t3=e.catch(0),!e.t3.toString().includes("FetchError")&&!e.t3.toString().includes("Failed to fetch")){e.next=22;break}return l.logWarning("Retrying HTTP request for ".concat(f.url," because of error: ").concat(e.t3)),e.abrupt("return",null);case 22:throw e.t3;case 23:case"end":return e.stop()}}),e,null,[[0,17]])}))));case 4:if(p=e.sent){e.next=7;break}throw new s.TypedError("Exceeded ".concat(10," attempts for ").concat(f.url,"."),"RetriesExceeded");case 7:return e.next=9,p.json();case 9:return e.abrupt("return",e.sent);case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}e.exports.fetchJson=function(e,t){return f.apply(this,arguments)}})),parcelRequire.register("ebKTL",(function(e,t){$parcel$export(e.exports,"default",(function(){return n}));var r=parcelRequire("d0ZZj");function n(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){(0,r.default)(e,t,n[t])}))}return e}})),parcelRequire.register("9OS8c",(function(e,t){function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("4XLTY",(function(e,t){var r,n=parcelRequire("dTym2"),a=parcelRequire("7QY2I")("http-errors"),o=parcelRequire("fzpDq"),i=parcelRequire("9Pe52"),u=parcelRequire("kvFQ5"),c=parcelRequire("g14Bq");
/*!
 * http-errors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */function s(e){return Number(String(e).charAt(0)+"00")}function l(e,t){var r=Object.getOwnPropertyDescriptor(e,"name");r&&r.configurable&&(r.value=t,Object.defineProperty(e,"name",r))}function f(e){return"Error"!==e.substr(-5)?e+"Error":e}e.exports=function e(){for(var t,r,o=500,u={},c=0;c<arguments.length;c++){var l=arguments[c];if(l instanceof Error)o=(t=l).status||t.statusCode||o;else switch(void 0===l?"undefined":(0,n.default)(l)){case"string":r=l;break;case"number":o=l,0!==c&&a("non-first-argument status code; replace with createError("+l+", ...)");break;case"object":u=l}}"number"==typeof o&&(o<400||o>=600)&&a("non-error status code; use only 4xx or 5xx status codes");("number"!=typeof o||!i[o]&&(o<400||o>=600))&&(o=500);var f=e[o]||e[s(o)];t||(t=f?new f(r):new Error(r||i[o]),Error.captureStackTrace(t,e));f&&t instanceof f&&t.status===o||(t.expose=o<500,t.status=t.statusCode=o);for(var p in u)"status"!==p&&"statusCode"!==p&&(t[p]=u[p]);return t},e.exports.HttpError=(u(r=function(){throw new TypeError("cannot construct abstract class")},Error),r),e.exports.isHttpError=function(e){return function(t){return!(!t||"object"!=typeof t)&&(t instanceof e||t instanceof Error&&"boolean"==typeof t.expose&&"number"==typeof t.statusCode&&t.status===t.statusCode)}}(e.exports.HttpError),function(e,t,r){t.forEach((function(t){var n,a=c(i[t]);switch(s(t)){case 400:n=function(e,t,r){var n=f(t);function a(e){var t=null!=e?e:i[r],u=new Error(t);return Error.captureStackTrace(u,a),o(u,a.prototype),Object.defineProperty(u,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(u,"name",{enumerable:!1,configurable:!0,value:n,writable:!0}),u}return u(a,e),l(a,n),a.prototype.status=r,a.prototype.statusCode=r,a.prototype.expose=!0,a}(r,a,t);break;case 500:n=function(e,t,r){var n=f(t);function a(e){var t=null!=e?e:i[r],u=new Error(t);return Error.captureStackTrace(u,a),o(u,a.prototype),Object.defineProperty(u,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(u,"name",{enumerable:!1,configurable:!0,value:n,writable:!0}),u}return u(a,e),l(a,n),a.prototype.status=r,a.prototype.statusCode=r,a.prototype.expose=!1,a}(r,a,t)}n&&(e[t]=n,e[a]=n)})),e["I'mateapot"]=a.function(e.ImATeapot,'"I\'mateapot"; use "ImATeapot" instead')}(e.exports,i.codes,e.exports.HttpError)})),parcelRequire.register("7QY2I",(function(e,t){
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
"use strict";function r(e,t){if("function"!=typeof e)throw new TypeError("argument fn must be a function");return e}function n(e,t,r){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var n=Object.getOwnPropertyDescriptor(e,t);if(!n)throw new TypeError("must call property on owner object");if(!n.configurable)throw new TypeError("property must be configurable")}e.exports=function(e){var t=function(e){};if(!e)throw new TypeError("argument namespace is required");return t._file=void 0,t._ignored=!0,t._namespace=e,t._traced=!1,t._warned=Object.create(null),t.function=r,t.property=n,t}})),parcelRequire.register("fzpDq",(function(e,t){"use strict";e.exports=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(e,t){return e.__proto__=t,e}:function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(e,r)||(e[r]=t[r]);return e})})),parcelRequire.register("9Pe52",(function(e,t){
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */
"use strict";var r,n,a,o=parcelRequire("5ITrS");function i(e){if("number"==typeof e){if(!i[e])throw new Error("invalid status code: "+e);return e}if("string"!=typeof e)throw new TypeError("code must be a number or string");var t=parseInt(e,10);if(!isNaN(t)){if(!i[t])throw new Error("invalid status code: "+t);return t}if(!(t=i[e.toLowerCase()]))throw new Error('invalid status message: "'+e+'"');return t}e.exports=i,i.STATUS_CODES=o,i.codes=(r=i,n=o,a=[],Object.keys(n).forEach((function(e){var t=n[e],o=Number(e);r[o]=t,r[t]=o,r[t.toLowerCase()]=o,a.push(o)})),a),i.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},i.empty={204:!0,205:!0,304:!0},i.retry={502:!0,503:!0,504:!0}})),parcelRequire.register("5ITrS",(function(e,t){e.exports=JSON.parse('{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","306":"(Unused)","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I\'m a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}')})),parcelRequire.register("kvFQ5",(function(e,t){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}})),parcelRequire.register("g14Bq",(function(e,t){
/*!
 * toidentifier
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */
"use strict";e.exports=function(e){return e.split(" ").map((function(e){return e.slice(0,1).toUpperCase()+e.slice(1)})).join("").replace(/[^ _0-9a-z]/gi,"")}})),parcelRequire.register("dkG2P",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("4Z8U5");function a(){return(a=(0,r.default)($parcel$interopDefault(n).mark((function e(t,r,a,i){var u,c,s;return $parcel$interopDefault(n).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:u=t,c=0;case 2:if(!(c<r)){e.next=14;break}return e.next=5,i();case 5:if(!(s=e.sent)){e.next=8;break}return e.abrupt("return",s);case 8:return e.next=10,o(u);case 10:u*=a;case 11:c++,e.next=2;break;case 14:return e.abrupt("return",null);case 15:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function o(e){return new Promise((function(t){return setTimeout(t,e)}))}Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e,t,r,n){return a.apply(this,arguments)}})),parcelRequire.register("6vXKs",(function(e,t){var r=parcelRequire("8y9hR"),n=parcelRequire("5Djcm"),a=parcelRequire("jLWle"),o=parcelRequire("3i6WR"),i=parcelRequire("kY881");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.logWarning=e.exports.ErrorContext=e.exports.TypedError=e.exports.ArgumentTypeError=e.exports.PositionalArgsError=void 0;var u=function(e){(0,n.default)(a,e);var t=(0,i.default)(a);function a(){return(0,r.default)(this,a),t.call(this,"Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }")}return a}((0,o.default)(Error));e.exports.PositionalArgsError=u;var c=function(e){(0,n.default)(a,e);var t=(0,i.default)(a);function a(e,n,o){return(0,r.default)(this,a),t.call(this,"Expected ".concat(n," for '").concat(e,"' argument, but got '").concat(JSON.stringify(o),"'"))}return a}((0,o.default)(Error));e.exports.ArgumentTypeError=c;var s=function(e){(0,n.default)(a,e);var t=(0,i.default)(a);function a(e,n,o){var i;return(0,r.default)(this,a),(i=t.call(this,e)).type=n||"UntypedError",i.context=o,i}return a}((0,o.default)(Error));e.exports.TypedError=s;e.exports.ErrorContext=function e(t){(0,r.default)(this,e),this.transactionHash=t},e.exports.logWarning=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;(n=console).warn.apply(n,(0,a.default)(t))}})),parcelRequire.register("jLWle",(function(e,t){$parcel$export(e.exports,"default",(function(){return i}));var r=parcelRequire("3c83a"),n=parcelRequire("aVtMw"),a=parcelRequire("b9sve"),o=parcelRequire("ezjYu");function i(e){return(0,r.default)(e)||(0,n.default)(e)||(0,o.default)(e)||(0,a.default)()}})),parcelRequire.register("3c83a",(function(e,t){$parcel$export(e.exports,"default",(function(){return n}));var r=parcelRequire("dnAMa");function n(e){if(Array.isArray(e))return(0,r.default)(e)}})),parcelRequire.register("b9sve",(function(e,t){function r(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}$parcel$export(e.exports,"default",(function(){return r}))})),parcelRequire.register("2RlOX",(function(e,t){var r=parcelRequire("8y9hR"),n=parcelRequire("5Djcm"),a=parcelRequire("ebKTL"),o=parcelRequire("kY881"),i=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.getErrorTypeFromErrorMessage=e.exports.formatError=e.exports.parseResultError=e.exports.parseRpcError=e.exports.ServerError=void 0;var u=i(parcelRequire("kIkEy")),c=i(parcelRequire("4WO7v")),s=i(parcelRequire("7WUyz")),l=parcelRequire("hHZrX"),f=parcelRequire("6vXKs"),p={formatNear:function(){return function(e,t){return l.utils.format.formatNearAmount(t(e))}}},d=function(e){(0,n.default)(a,e);var t=(0,o.default)(a);function a(){return(0,r.default)(this,a),t.apply(this,arguments)}return a}(f.TypedError);e.exports.ServerError=d;var h=function(e){(0,n.default)(a,e);var t=(0,o.default)(a);function a(){return(0,r.default)(this,a),t.apply(this,arguments)}return a}(d);function v(e){var t={},r=y(e,c.default.schema,t,""),n=new d(m(r,t),r);return Object.assign(n,t),n}function m(e,t){return"string"==typeof s.default[e]?u.default.render(s.default[e],(0,a.default)({},t,p)):JSON.stringify(t)}function y(e,t,r,n){var a,o,i,u;for(var c in t){if(u=e[c],"[object String]"===Object.prototype.toString.call(u))return e[c];if(b(e[c]))a=e[c],o=t[c],i=c;else{if(!b(e.kind)||!b(e.kind[c]))continue;a=e.kind[c],o=t[c],i=c}}if(a&&o){var s=!0,l=!1,f=void 0;try{for(var p,d=Object.keys(o.props)[Symbol.iterator]();!(s=(p=d.next()).done);s=!0){var h=p.value;r[h]=a[h]}}catch(e){l=!0,f=e}finally{try{s||null==d.return||d.return()}finally{if(l)throw f}}return y(a,t,r,i)}return r.kind=e,n}function b(e){return"[object Object]"===Object.prototype.toString.call(e)}e.exports.parseRpcError=v,e.exports.parseResultError=function(e){var t=v(e.status.Failure),r=new h;return Object.assign(r,t),r.type=t.type,r.message=t.message,r.transaction_outcome=e.transaction_outcome,r},e.exports.formatError=m,e.exports.getErrorTypeFromErrorMessage=function(e){switch(!0){case/^account .*? does not exist while viewing$/.test(e):case/^Account .*? doesn't exist$/.test(e):return"AccountDoesNotExist";case/^access key .*? does not exist while viewing$/.test(e):return"AccessKeyDoesNotExist";case/wasm execution failed with error: FunctionCallError\(CompilationError\(CodeDoesNotExist/.test(e):return"CodeDoesNotExist";case/Transaction nonce \d+ must be larger than nonce of the used access key \d+/.test(e):return"InvalidNonce";default:return"UntypedError"}}})),parcelRequire.register("kIkEy",(function(e,t){var r=parcelRequire("dTym2");e.exports=function(){"use strict";var e=function(e){return"function"==typeof e},t=function(e){return m(e)?"array":void 0===e?"undefined":(0,r.default)(e)},n=function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},a=function(e,t){return null!=e&&"object"==typeof e&&t in e},o=function(e,t){return null!=e&&"object"!=typeof e&&e.hasOwnProperty&&e.hasOwnProperty(t)},i=function(e,t){return y.call(e,t)},u=function(e){return!i(b,e)},c=function(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return g[e]}))},s=function(e,t){if(!e)return[];var r,a,o,i=!1,c=[],s=[],d=[],h=!1,v=!1,y="",b=0;function g(){if(h&&!v)for(;d.length;)delete s[d.pop()];else d=[];h=!1,v=!1}function E(e){if("string"==typeof e&&(e=e.split(w,2)),!m(e)||2!==e.length)throw new Error("Invalid tags: "+e);r=new RegExp(n(e[0])+"\\s*"),a=new RegExp("\\s*"+n(e[1])),o=new RegExp("\\s*"+n("}"+e[1]))}E(t||S.tags);for(var R,A,M,C,T,I,P=new p(e);!P.eos();){if(R=P.pos,M=P.scanUntil(r))for(var N=0,O=M.length;N<O;++N)C=M.charAt(N),u(C)?(d.push(s.length),y+=C):(v=!0,i=!0,y+=" "),s.push(["text",C,R,R+1]),R+=1,"\n"===C&&(g(),y="",b=0,i=!1);if(!P.scan(r))break;if(h=!0,A=P.scan(_)||"name",P.scan($),"="===A?(M=P.scanUntil(x),P.scan(x),P.scanUntil(a)):"{"===A?(M=P.scanUntil(o),P.scan(k),P.scanUntil(a),A="&"):M=P.scanUntil(a),!P.scan(a))throw new Error("Unclosed tag at "+P.pos);if(T=">"==A?[A,M,R,P.pos,y,b,i]:[A,M,R,P.pos],b++,s.push(T),"#"===A||"^"===A)c.push(T);else if("/"===A){if(!(I=c.pop()))throw new Error('Unopened section "'+M+'" at '+R);if(I[1]!==M)throw new Error('Unclosed section "'+I[1]+'" at '+R)}else"name"===A||"{"===A||"&"===A?v=!0:"="===A&&E(M)}if(g(),I=c.pop())throw new Error('Unclosed section "'+I[1]+'" at '+P.pos);return f(l(s))},l=function(e){for(var t,r,n=[],a=0,o=e.length;a<o;++a)(t=e[a])&&("text"===t[0]&&r&&"text"===r[0]?(r[1]+=t[1],r[3]=t[3]):(n.push(t),r=t));return n},f=function(e){for(var t,r=[],n=r,a=[],o=0,i=e.length;o<i;++o)switch((t=e[o])[0]){case"#":case"^":n.push(t),a.push(t),n=t[4]=[];break;case"/":a.pop()[5]=t[2],n=a.length>0?a[a.length-1][4]:r;break;default:n.push(t)}return r},p=function(e){this.string=e,this.tail=e,this.pos=0},d=function(e,t){this.view=e,this.cache={".":this.view},this.parent=t},h=function(){this.templateCache={_cache:{},set:function(e,t){this._cache[e]=t},get:function(e){return this._cache[e]},clear:function(){this._cache={}}}},v=Object.prototype.toString,m=Array.isArray||function(e){return"[object Array]"===v.call(e)},y=RegExp.prototype.test,b=/\S/,g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},$=/\s*/,w=/\s+/,x=/\s*=/,k=/\s*\}/,_=/#|\^|\/|>|\{|&|=|!/;p.prototype.eos=function(){return""===this.tail},p.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var r=t[0];return this.tail=this.tail.substring(r.length),this.pos+=r.length,r},p.prototype.scanUntil=function(e){var t,r=this.tail.search(e);switch(r){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,r),this.tail=this.tail.substring(r)}return this.pos+=t.length,t},d.prototype.push=function(e){return new d(e,this)},d.prototype.lookup=function(t){var r,n=this.cache;if(n.hasOwnProperty(t))r=n[t];else{for(var i,u,c,s=this,l=!1;s;){if(t.indexOf(".")>0)for(i=s.view,u=t.split("."),c=0;null!=i&&c<u.length;)c===u.length-1&&(l=a(i,u[c])||o(i,u[c])),i=i[u[c++]];else i=s.view[t],l=a(s.view,t);if(l){r=i;break}s=s.parent}n[t]=r}return e(r)&&(r=r.call(this.view)),r},h.prototype.clearCache=function(){void 0!==this.templateCache&&this.templateCache.clear()},h.prototype.parse=function(e,t){var r=this.templateCache,n=e+":"+(t||S.tags).join(":"),a=void 0!==r,o=a?r.get(n):void 0;return null==o&&(o=s(e,t),a&&r.set(n,o)),o},h.prototype.render=function(e,t,r,n){var a=this.getConfigTags(n),o=this.parse(e,a),i=t instanceof d?t:new d(t,void 0);return this.renderTokens(o,i,r,e,n)},h.prototype.renderTokens=function(e,t,r,n,a){for(var o,i,u,c="",s=0,l=e.length;s<l;++s)u=void 0,"#"===(i=(o=e[s])[0])?u=this.renderSection(o,t,r,n,a):"^"===i?u=this.renderInverted(o,t,r,n,a):">"===i?u=this.renderPartial(o,t,r,a):"&"===i?u=this.unescapedValue(o,t):"name"===i?u=this.escapedValue(o,t,a):"text"===i&&(u=this.rawValue(o)),void 0!==u&&(c+=u);return c},h.prototype.renderSection=function(t,r,n,a,o){var i=function(e){return u.render(e,r,n,o)},u=this,c="",s=r.lookup(t[1]);if(s){if(m(s))for(var l=0,f=s.length;l<f;++l)c+=this.renderTokens(t[4],r.push(s[l]),n,a,o);else if("object"==typeof s||"string"==typeof s||"number"==typeof s)c+=this.renderTokens(t[4],r.push(s),n,a,o);else if(e(s)){if("string"!=typeof a)throw new Error("Cannot use higher-order sections without the original template");null!=(s=s.call(r.view,a.slice(t[3],t[5]),i))&&(c+=s)}else c+=this.renderTokens(t[4],r,n,a,o);return c}},h.prototype.renderInverted=function(e,t,r,n,a){var o=t.lookup(e[1]);if(!o||m(o)&&0===o.length)return this.renderTokens(e[4],t,r,n,a)},h.prototype.indentPartial=function(e,t,r){for(var n=t.replace(/[^ \t]/g,""),a=e.split("\n"),o=0;o<a.length;o++)a[o].length&&(o>0||!r)&&(a[o]=n+a[o]);return a.join("\n")},h.prototype.renderPartial=function(t,r,n,a){if(n){var o=this.getConfigTags(a),i=e(n)?n(t[1]):n[t[1]];if(null!=i){var u=t[6],c=t[5],s=t[4],l=i;0==c&&s&&(l=this.indentPartial(i,s,u));var f=this.parse(l,o);return this.renderTokens(f,r,n,l,a)}}},h.prototype.unescapedValue=function(e,t){var r=t.lookup(e[1]);if(null!=r)return r},h.prototype.escapedValue=function(e,t,r){var n=this.getConfigEscape(r)||S.escape,a=t.lookup(e[1]);if(null!=a)return"number"==typeof a&&n===S.escape?String(a):n(a)},h.prototype.rawValue=function(e){return e[1]},h.prototype.getConfigTags=function(e){return m(e)?e:e&&"object"==typeof e?e.tags:void 0},h.prototype.getConfigEscape=function(e){return e&&"object"==typeof e&&!m(e)?e.escape:void 0};var S={name:"mustache.js",version:"4.2.0",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,Scanner:void 0,Context:void 0,Writer:void 0,set templateCache(e){E.templateCache=e},get templateCache(){return E.templateCache}},E=new h;return S.clearCache=function(){return E.clearCache()},S.parse=function(e,t){return E.parse(e,t)},S.render=function(e,r,n,a){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+t(e)+'" was given as the first argument for mustache#render(template, view, partials)');return E.render(e,r,n,a)},S.escape=c,S.Scanner=p,S.Context=d,S.Writer=h,S}()})),parcelRequire.register("4WO7v",(function(e,t){e.exports=JSON.parse('{"schema":{"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BreakpointTrap":{"name":"BreakpointTrap","subtypes":[],"props":{}},"CacheError":{"name":"CacheError","subtypes":["ReadError","WriteError","DeserializationError","SerializationError"],"props":{}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"DeserializationError":{"name":"DeserializationError","subtypes":[],"props":{}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"FunctionCallError":{"name":"FunctionCallError","subtypes":["CompilationError","LinkError","MethodResolveError","WasmTrap","WasmUnknownError","HostError","EvmError"],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LinkError":{"name":"LinkError","subtypes":[],"props":{"msg":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodUTF8Error","MethodNotFound","MethodInvalidSignature"],"props":{}},"MethodUTF8Error":{"name":"MethodUTF8Error","subtypes":[],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReadError":{"name":"ReadError","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"SerializationError":{"name":"SerializationError","subtypes":[],"props":{"hash":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","BreakpointTrap","StackOverflow","GenericTrap"],"props":{}},"WasmUnknownError":{"name":"WasmUnknownError","subtypes":[],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"WriteError":{"name":"WriteError","subtypes":[],"props":{}},"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation"],"props":{}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"InternalError":{"name":"InternalError","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed","InternalError"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}')})),parcelRequire.register("7WUyz",(function(e,t){e.exports=JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed"}')})),parcelRequire.register("jSV3x",(function(e,t){"use strict";var r=e.exports&&e.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=e.exports&&e.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=e.exports&&e.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&r(t,e,a);return n(t,e),t};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.logWarning=e.exports.rpc_errors=e.exports.KeyPairEd25519=e.exports.KeyPair=e.exports.PublicKey=e.exports.format=e.exports.enums=e.exports.web=e.exports.serialize=e.exports.key_pair=void 0;var o=a(parcelRequire("8pTGX"));e.exports.key_pair=o;var i=a(parcelRequire("2RCX3"));e.exports.serialize=i;var u=a(parcelRequire("9Nstj"));e.exports.web=u;var c=a(parcelRequire("5dmHG"));e.exports.enums=c;var s=a(parcelRequire("fbj1i"));e.exports.format=s;var l=a(parcelRequire("2RlOX"));e.exports.rpc_errors=l,Object.defineProperty(e.exports,"PublicKey",{enumerable:!0,get:function(){return parcelRequire("8pTGX").PublicKey}}),Object.defineProperty(e.exports,"KeyPair",{enumerable:!0,get:function(){return parcelRequire("8pTGX").KeyPair}}),Object.defineProperty(e.exports,"KeyPairEd25519",{enumerable:!0,get:function(){return parcelRequire("8pTGX").KeyPairEd25519}});var f=parcelRequire("6vXKs");Object.defineProperty(e.exports,"logWarning",{enumerable:!0,get:function(){return f.logWarning}})})),parcelRequire.register("fbj1i",(function(e,t){"use strict";var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.parseNearAmount=e.exports.formatNearAmount=e.exports.NEAR_NOMINATION=e.exports.NEAR_NOMINATION_EXP=void 0;var n=r(parcelRequire("jlWHo"));e.exports.NEAR_NOMINATION_EXP=24,e.exports.NEAR_NOMINATION=new n.default("10",10).pow(new n.default(e.exports.NEAR_NOMINATION_EXP,10));for(var a=[],o=new n.default(10),i=0,u=new n.default(5);i<e.exports.NEAR_NOMINATION_EXP;i++,u=u.mul(o))a[i]=u;function c(e){return e.replace(/\.?0*$/,"")}function s(e){for(var t=/(-?\d+)(\d{3})/;t.test(e);)e=e.replace(t,"$1,$2");return e}e.exports.formatNearAmount=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.exports.NEAR_NOMINATION_EXP,o=new n.default(t,10);if(r!==e.exports.NEAR_NOMINATION_EXP){var i=e.exports.NEAR_NOMINATION_EXP-r-1;i>0&&o.iadd(a[i])}var u=(t=o.toString()).substring(0,t.length-e.exports.NEAR_NOMINATION_EXP)||"0",l=t.substring(t.length-e.exports.NEAR_NOMINATION_EXP).padStart(e.exports.NEAR_NOMINATION_EXP,"0").substring(0,r);return c("".concat(s(u),".").concat(l))},e.exports.parseNearAmount=function(t){if(!t)return null;var r,n=(t=t.replace(/,/g,"").trim()).split("."),a=n[0],o=n[1]||"";if(n.length>2||o.length>e.exports.NEAR_NOMINATION_EXP)throw new Error("Cannot parse '".concat(t,"' as NEAR amount"));return""===(r=(r=a+o.padEnd(e.exports.NEAR_NOMINATION_EXP,"0")).replace(/^0+/,""))?"0":r}})),parcelRequire.register("7cM39",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("hNZKs"),u=parcelRequire("kY881"),c=parcelRequire("4Z8U5"),s=parcelRequire("jPoaI").Buffer,l=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.signTransaction=e.exports.createTransaction=e.exports.SCHEMA=e.exports.Action=e.exports.SignedTransaction=e.exports.Transaction=e.exports.Signature=e.exports.deleteAccount=e.exports.deleteKey=e.exports.addKey=e.exports.stake=e.exports.transfer=e.exports.functionCall=e.exports.stringifyJsonOrBytes=e.exports.deployContract=e.exports.createAccount=e.exports.DeleteAccount=e.exports.DeleteKey=e.exports.AddKey=e.exports.Stake=e.exports.Transfer=e.exports.FunctionCall=e.exports.DeployContract=e.exports.CreateAccount=e.exports.IAction=e.exports.functionCallAccessKey=e.exports.fullAccessKey=e.exports.AccessKey=e.exports.AccessKeyPermission=e.exports.FullAccessPermission=e.exports.FunctionCallPermission=void 0;var f=l(parcelRequire("hRCvM")),p=parcelRequire("5dmHG"),d=parcelRequire("2HPkT"),h=parcelRequire("8pTGX"),v=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Assignable);e.exports.FunctionCallPermission=v;var m=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Assignable);e.exports.FullAccessPermission=m;var y=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Enum);e.exports.AccessKeyPermission=y;var b=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Assignable);e.exports.AccessKey=b,e.exports.fullAccessKey=function(){return new b({nonce:0,permission:new y({fullAccess:new m({})})})},e.exports.functionCallAccessKey=function(e,t,r){return new b({nonce:0,permission:new y({functionCall:new v({receiverId:e,allowance:r,methodNames:t})})})};var g=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Assignable);e.exports.IAction=g;var $=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.CreateAccount=$;var w=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.DeployContract=w;var x=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.FunctionCall=x;var k=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.Transfer=k;var _=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.Stake=_;var S=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.AddKey=S;var E=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);e.exports.DeleteKey=E;var R=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(g);function A(e){return void 0!==e.byteLength&&e.byteLength===e.length?e:s.from(JSON.stringify(e))}e.exports.DeleteAccount=R,e.exports.createAccount=function(){return new I({createAccount:new $({})})},e.exports.deployContract=function(e){return new I({deployContract:new w({code:e})})},e.exports.stringifyJsonOrBytes=A,e.exports.functionCall=function(e,t,r,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:A;return new I({functionCall:new x({methodName:e,args:a(t),gas:r,deposit:n})})},e.exports.transfer=function(e){return new I({transfer:new k({deposit:e})})},e.exports.stake=function(e,t){return new I({stake:new _({stake:e,publicKey:t})})},e.exports.addKey=function(e,t){return new I({addKey:new S({publicKey:e,accessKey:t})})},e.exports.deleteKey=function(e){return new I({deleteKey:new E({publicKey:e})})},e.exports.deleteAccount=function(e){return new I({deleteAccount:new R({beneficiaryId:e})})};var M=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Assignable);e.exports.Signature=M;var C=function(t){(0,o.default)(i,t);var r=(0,u.default)(i);function i(){return(0,n.default)(this,i),r.apply(this,arguments)}return(0,a.default)(i,[{key:"encode",value:function(){return d.serialize(e.exports.SCHEMA,this)}}],[{key:"decode",value:function(t){return d.deserialize(e.exports.SCHEMA,i,t)}}]),i}(p.Assignable);e.exports.Transaction=C;var T=function(t){(0,o.default)(i,t);var r=(0,u.default)(i);function i(){return(0,n.default)(this,i),r.apply(this,arguments)}return(0,a.default)(i,[{key:"encode",value:function(){return d.serialize(e.exports.SCHEMA,this)}}],[{key:"decode",value:function(t){return d.deserialize(e.exports.SCHEMA,i,t)}}]),i}(p.Assignable);e.exports.SignedTransaction=T;var I=function(e){(0,o.default)(r,e);var t=(0,u.default)(r);function r(){return(0,n.default)(this,r),t.apply(this,arguments)}return r}(p.Enum);function P(e,t,r,n,a,o){return new C({signerId:e,publicKey:t,nonce:n,receiverId:r,actions:a,blockHash:o})}function N(e,t,r,n){return O.apply(this,arguments)}function O(){return(O=(0,r.default)($parcel$interopDefault(c).mark((function t(r,n,a,o){var i,u,s,l;return $parcel$interopDefault(c).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=d.serialize(e.exports.SCHEMA,r),u=new Uint8Array(f.default.sha256.array(i)),t.next=4,n.signMessage(i,a,o);case 4:return s=t.sent,l=new T({transaction:r,signature:new M({keyType:r.publicKey.keyType,data:s.signature})}),t.abrupt("return",[u,l]);case 7:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function D(){return D=(0,r.default)($parcel$interopDefault(c).mark((function e(){var t,r,n,a,o,u,s,l,f,p,d,h,v,m,y,b,g,$,w=arguments;return $parcel$interopDefault(c).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=w.length,r=new Array(t),n=0;n<t;n++)r[n]=w[n];if(r[0].constructor!==C){e.next=6;break}return a=(0,i.default)(r,4),o=a[0],u=a[1],s=a[2],l=a[3],e.abrupt("return",N(o,u,s,l));case 6:return f=(0,i.default)(r,7),p=f[0],d=f[1],h=f[2],v=f[3],m=f[4],y=f[5],b=f[6],e.next=9,m.getPublicKey(y,b);case 9:return g=e.sent,$=P(y,g,p,d,h,v),e.abrupt("return",N($,m,y,b));case 12:case"end":return e.stop()}}),e)}))),D.apply(this,arguments)}e.exports.Action=I,e.exports.SCHEMA=new Map([[M,{kind:"struct",fields:[["keyType","u8"],["data",[64]]]}],[T,{kind:"struct",fields:[["transaction",C],["signature",M]]}],[C,{kind:"struct",fields:[["signerId","string"],["publicKey",h.PublicKey],["nonce","u64"],["receiverId","string"],["blockHash",[32]],["actions",[I]]]}],[h.PublicKey,{kind:"struct",fields:[["keyType","u8"],["data",[32]]]}],[b,{kind:"struct",fields:[["nonce","u64"],["permission",y]]}],[y,{kind:"enum",field:"enum",values:[["functionCall",v],["fullAccess",m]]}],[v,{kind:"struct",fields:[["allowance",{kind:"option",type:"u128"}],["receiverId","string"],["methodNames",["string"]]]}],[m,{kind:"struct",fields:[]}],[I,{kind:"enum",field:"enum",values:[["createAccount",$],["deployContract",w],["functionCall",x],["transfer",k],["stake",_],["addKey",S],["deleteKey",E],["deleteAccount",R]]}],[$,{kind:"struct",fields:[]}],[w,{kind:"struct",fields:[["code",["u8"]]]}],[x,{kind:"struct",fields:[["methodName","string"],["args",["u8"]],["gas","u64"],["deposit","u128"]]}],[k,{kind:"struct",fields:[["deposit","u128"]]}],[_,{kind:"struct",fields:[["stake","u128"],["publicKey",h.PublicKey]]}],[S,{kind:"struct",fields:[["publicKey",h.PublicKey],["accessKey",b]]}],[E,{kind:"struct",fields:[["publicKey",h.PublicKey]]}],[R,{kind:"struct",fields:[["beneficiaryId","string"]]}]]),e.exports.createTransaction=P,e.exports.signTransaction=function(){return D.apply(this,arguments)}})),parcelRequire.register("hRCvM",(function(module,exports){var $dTym2=parcelRequire("dTym2"),$a8i8g=parcelRequire("a8i8g");
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */(function(){"use strict";var Sha256=function(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e},HmacSha256=function(e,t,r){var n,a=void 0===e?"undefined":(0,$dTym2.default)(e);if("string"===a){var o,i=[],u=e.length,c=0;for(n=0;n<u;++n)(o=e.charCodeAt(n))<128?i[c++]=o:o<2048?(i[c++]=192|o>>6,i[c++]=128|63&o):o<55296||o>=57344?(i[c++]=224|o>>12,i[c++]=128|o>>6&63,i[c++]=128|63&o):(o=65536+((1023&o)<<10|1023&e.charCodeAt(++n)),i[c++]=240|o>>18,i[c++]=128|o>>12&63,i[c++]=128|o>>6&63,i[c++]=128|63&o);e=i}else{if("object"!==a)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var s=[],l=[];for(n=0;n<64;++n){var f=e[n]||0;s[n]=92^f,l[n]=54^f}Sha256.call(this,t,r),this.update(l),this.oKeyPad=s,this.inner=!0,this.sharedMemory=r},ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof $a8i8g&&$a8i8g.versions&&$a8i8g.versions.node;NODE_JS?root=$parcel$global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD="function"==typeof define&&define.amd,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function nodeWrap(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};Sha256.prototype.update=function(e){if(!this.finalized){var t,r=void 0===e?"undefined":(0,$dTym2.default)(e);if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,a,o=0,i=e.length,u=this.blocks;o<i;){if(this.hashed&&(this.hashed=!1,u[0]=this.block,u[16]=u[1]=u[2]=u[3]=u[4]=u[5]=u[6]=u[7]=u[8]=u[9]=u[10]=u[11]=u[12]=u[13]=u[14]=u[15]=0),t)for(a=this.start;o<i&&a<64;++o)u[a>>2]|=e[o]<<SHIFT[3&a++];else for(a=this.start;o<i&&a<64;++o)(n=e.charCodeAt(o))<128?u[a>>2]|=n<<SHIFT[3&a++]:n<2048?(u[a>>2]|=(192|n>>6)<<SHIFT[3&a++],u[a>>2]|=(128|63&n)<<SHIFT[3&a++]):n<55296||n>=57344?(u[a>>2]|=(224|n>>12)<<SHIFT[3&a++],u[a>>2]|=(128|n>>6&63)<<SHIFT[3&a++],u[a>>2]|=(128|63&n)<<SHIFT[3&a++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++o)),u[a>>2]|=(240|n>>18)<<SHIFT[3&a++],u[a>>2]|=(128|n>>12&63)<<SHIFT[3&a++],u[a>>2]|=(128|n>>6&63)<<SHIFT[3&a++],u[a>>2]|=(128|63&n)<<SHIFT[3&a++]);this.lastByteIndex=a,this.bytes+=a-this.start,a>=64?(this.block=u[16],this.start=a-64,this.hash(),this.hashed=!0):this.start=a}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,a,o,i,u,c,s=this.h0,l=this.h1,f=this.h2,p=this.h3,d=this.h4,h=this.h5,v=this.h6,m=this.h7,y=this.blocks;for(e=16;e<64;++e)t=((a=y[e-15])>>>7|a<<25)^(a>>>18|a<<14)^a>>>3,r=((a=y[e-2])>>>17|a<<15)^(a>>>19|a<<13)^a>>>10,y[e]=y[e-16]+t+y[e-7]+r<<0;for(c=l&f,e=0;e<64;e+=4)this.first?(this.is224?(o=300032,m=(a=y[0]-1413257819)-150054599<<0,p=a+24177077<<0):(o=704751109,m=(a=y[0]-210244248)-1521486534<<0,p=a+143694565<<0),this.first=!1):(t=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),n=(o=s&l)^s&f^c,m=p+(a=m+(r=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&h^~d&v)+K[e]+y[e])<<0,p=a+(t+n)<<0),t=(p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),n=(i=p&s)^p&l^o,v=f+(a=v+(r=(m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(m&d^~m&h)+K[e+1]+y[e+1])<<0,t=((f=a+(t+n)<<0)>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10),n=(u=f&p)^f&s^i,h=l+(a=h+(r=(v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+(v&m^~v&d)+K[e+2]+y[e+2])<<0,t=((l=a+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(c=l&f)^l&p^u,d=s+(a=d+(r=(h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(h&v^~h&m)+K[e+3]+y[e+3])<<0,s=a+(t+n)<<0;this.h0=this.h0+s<<0,this.h1=this.h1+l<<0,this.h2=this.h2+f<<0,this.h3=this.h3+p<<0,this.h4=this.h4+d<<0,this.h5=this.h5+h<<0,this.h6=this.h6+v<<0,this.h7=this.h7+m<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,a=this.h4,o=this.h5,i=this.h6,u=this.h7,c=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i];return this.is224||(c+=HEX_CHARS[u>>28&15]+HEX_CHARS[u>>24&15]+HEX_CHARS[u>>20&15]+HEX_CHARS[u>>16&15]+HEX_CHARS[u>>12&15]+HEX_CHARS[u>>8&15]+HEX_CHARS[u>>4&15]+HEX_CHARS[15&u]),c},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,a=this.h4,o=this.h5,i=this.h6,u=this.h7,c=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,a>>24&255,a>>16&255,a>>8&255,255&a,o>>24&255,o>>16&255,o>>8&255,255&o,i>>24&255,i>>16&255,i>>8&255,255&i];return this.is224||c.push(u>>24&255,u>>16&255,u>>8&255,255&u),c},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define((function(){return exports})))})()})),parcelRequire.register("a8i8g",(function(e,t){var r,n,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function u(e){if(r===setTimeout)return setTimeout(e,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:o}catch(e){r=o}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var c,s=[],l=!1,f=-1;function p(){l&&c&&(l=!1,c.length?s=c.concat(s):f=-1,s.length&&d())}function d(){if(!l){var e=u(p);l=!0;for(var t=s.length;t;){for(c=s,s=[];++f<t;)c&&c[f].run();f=-1,t=s.length}c=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function v(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];s.push(new h(e,t)),1!==s.length||l||u(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=v,a.addListener=v,a.once=v,a.off=v,a.removeListener=v,a.removeAllListeners=v,a.emit=v,a.prependListener=v,a.prependOnceListener=v,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}})),parcelRequire.register("kfiwQ",(function(e,t){"use strict";var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.diffEpochValidators=e.exports.findSeatPrice=void 0;var n=r(parcelRequire("jlWHo")),a=r(parcelRequire("7kbiF"));e.exports.findSeatPrice=function(e,t,r,o){return o&&o<49?function(e,t){var r=e.map((function(e){return new n.default(e.stake,10)})).sort((function(e,t){return e.cmp(t)})),a=new n.default(t),o=r.reduce((function(e,t){return e.add(t)}));if(o.lt(a))throw new Error("Stakes are below seats");var i=new n.default(1),u=o.add(new n.default(1));for(;!i.eq(u.sub(new n.default(1)));){for(var c=i.add(u).div(new n.default(2)),s=!1,l=new n.default(0),f=0;f<r.length;++f)if((l=l.add(r[f].div(c))).gte(a)){i=c,s=!0;break}s||(u=c)}return i}(e,t):(r||(a.default("findSeatPrice(validators, maxNumberOfSeats)")("`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead"),r=[1,6250]),function(e,t,r){if(2!=r.length)throw Error("minimumStakeRatio should have 2 elements");var a=e.map((function(e){return new n.default(e.stake,10)})).sort((function(e,t){return e.cmp(t)})),o=a.reduce((function(e,t){return e.add(t)}));return e.length<t?o.mul(new n.default(r[0])).div(new n.default(r[1])):a[0].add(new n.default(1))}(e,t,r))},e.exports.diffEpochValidators=function(e,t){var r=new Map;e.forEach((function(e){return r.set(e.account_id,e)}));var n=new Set(t.map((function(e){return e.account_id})));return{newValidators:t.filter((function(e){return!r.has(e.account_id)})),removedValidators:e.filter((function(e){return!n.has(e.account_id)})),changedValidators:t.filter((function(e){return r.has(e.account_id)&&r.get(e.account_id).stake!=e.stake})).map((function(e){return{current:r.get(e.account_id),next:e}}))}}})),parcelRequire.register("gXWlL",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("ebKTL"),i=parcelRequire("9OS8c"),u=parcelRequire("hNZKs"),c=parcelRequire("jLWle"),s=parcelRequire("4Z8U5"),l=parcelRequire("jPoaI").Buffer,f=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Account=void 0;var p=f(parcelRequire("jlWHo")),d=f(parcelRequire("7kbiF")),h=parcelRequire("7cM39"),v=parcelRequire("bMcUu"),m=parcelRequire("2HPkT"),y=parcelRequire("8pTGX"),b=parcelRequire("6vXKs"),g=parcelRequire("2RlOX"),$=parcelRequire("NN8ep"),w=f(parcelRequire("dkG2P"));function x(e){return JSON.parse(l.from(e).toString())}function k(e){return l.from(JSON.stringify(e))}var _=function(){function e(t,r){(0,n.default)(this,e),this.accessKeyByPublicKeyCache={},this.connection=t,this.accountId=r}return(0,a.default)(e,[{key:"ready",get:function(){return d.default("Account.ready()")("not needed anymore, always ready"),Promise.resolve()}},{key:"fetchState",value:function(){return(0,r.default)($parcel$interopDefault(s).mark((function e(){return $parcel$interopDefault(s).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:d.default("Account.fetchState()")("use `Account.state()` instead");case 2:case"end":return e.stop()}}),e)})))()}},{key:"state",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(s).mark((function t(){return $parcel$interopDefault(s).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",e.connection.provider.query({request_type:"view_account",account_id:e.accountId,finality:"optimistic"}));case 1:case"end":return t.stop()}}),t)})))()}},{key:"printLogsAndFailures",value:function(e,t){var r=!0,n=!1,a=void 0;try{for(var o,i=t[Symbol.iterator]();!(r=(o=i.next()).done);r=!0){var u=o.value;console.log("Receipt".concat(u.receiptIds.length>1?"s":"",": ").concat(u.receiptIds.join(", "))),this.printLogs(e,u.logs,"\t"),u.failure&&console.warn("\tFailure [".concat(e,"]: ").concat(u.failure))}}catch(e){n=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(n)throw a}}}},{key:"printLogs",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done);n=!0){var c=i.value;console.log("".concat(r,"Log [").concat(e,"]: ").concat(c))}}catch(e){a=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}}},{key:"signTransaction",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var a,o,i,u,c;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n.findAccessKey(e,t);case 2:if(a=r.sent){r.next=5;break}throw new v.TypedError("Can not sign transactions for account ".concat(n.accountId," on network ").concat(n.connection.networkId,", no matching key pair found in ").concat(n.connection.signer,"."),"KeyNotFound");case 5:return o=a.accessKey,r.next=8,n.connection.provider.block({finality:"final"});case 8:return i=r.sent,u=i.header.hash,c=++o.nonce,r.next=13,h.signTransaction(e,c,t,m.baseDecode(u),n.connection.signer,n.accountId,n.connection.networkId);case 13:return r.abrupt("return",r.sent);case 14:case"end":return r.stop()}}),r)})))()}},{key:"signAndSendTransaction",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return"string"==typeof t[0]?this.signAndSendTransactionV1(t[0],t[1]):this.signAndSendTransactionV2(t[0])}},{key:"signAndSendTransactionV1",value:function(e,t){return d.default("Account.signAndSendTransaction(receiverId, actions")("use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead"),this.signAndSendTransactionV2({receiverId:e,actions:t})}},{key:"signAndSendTransactionV2",value:function(e){var t=e.receiverId,n=e.actions,a=e.returnError,o=this;return(0,r.default)($parcel$interopDefault(s).mark((function e(){var i,l,f,p;return $parcel$interopDefault(s).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,w.default(500,12,1.5,(0,r.default)($parcel$interopDefault(s).mark((function e(){var r,a;return $parcel$interopDefault(s).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=u.default,e.next=4,o.signTransaction(t,n);case 4:return e.t1=e.sent,r=(0,e.t0)(e.t1,2),i=r[0],l=r[1],a=l.transaction.publicKey,e.prev=10,e.next=13,o.connection.provider.sendTransaction(l);case 13:return e.abrupt("return",e.sent);case 16:if(e.prev=16,e.t2=e.catch(10),"InvalidNonce"!==e.t2.type){e.next=22;break}return b.logWarning("Retrying transaction ".concat(t,":").concat(m.baseEncode(i)," with new nonce.")),delete o.accessKeyByPublicKeyCache[a.toString()],e.abrupt("return",null);case 22:if("Expired"!==e.t2.type){e.next=25;break}return b.logWarning("Retrying transaction ".concat(t,":").concat(m.baseEncode(i)," due to expired block hash")),e.abrupt("return",null);case 25:throw e.t2.context=new v.ErrorContext(m.baseEncode(i)),e.t2;case 27:case"end":return e.stop()}}),e,null,[[10,16]])}))));case 3:if(f=e.sent){e.next=6;break}throw new v.TypedError("nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.","RetriesExceeded");case 6:if(p=[f.transaction_outcome].concat((0,c.default)(f.receipts_outcome)).reduce((function(e,t){return t.outcome.logs.length||"object"==typeof t.outcome.status&&"object"==typeof t.outcome.status.Failure?e.concat({receiptIds:t.outcome.receipt_ids,logs:t.outcome.logs,failure:void 0!==t.outcome.status.Failure?g.parseRpcError(t.outcome.status.Failure):null}):e}),[]),o.printLogsAndFailures(l.transaction.receiverId,p),a||"object"!=typeof f.status||"object"!=typeof f.status.Failure){e.next=14;break}if(!f.status.Failure.error_message||!f.status.Failure.error_type){e.next=13;break}throw new v.TypedError("Transaction ".concat(f.transaction_outcome.id," failed. ").concat(f.status.Failure.error_message),f.status.Failure.error_type);case 13:throw g.parseResultError(f);case 14:return e.abrupt("return",f);case 15:case"end":return e.stop()}}),e)})))()}},{key:"findAccessKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(s).mark((function e(){var t,r,a;return $parcel$interopDefault(s).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.connection.signer.getPublicKey(n.accountId,n.connection.networkId);case 2:if(t=e.sent){e.next=5;break}return e.abrupt("return",null);case 5:if(void 0===(r=n.accessKeyByPublicKeyCache[t.toString()])){e.next=8;break}return e.abrupt("return",{publicKey:t,accessKey:r});case 8:return e.prev=8,e.next=11,n.connection.provider.query({request_type:"view_access_key",account_id:n.accountId,public_key:t.toString(),finality:"optimistic"});case 11:if(a=e.sent,!n.accessKeyByPublicKeyCache[t.toString()]){e.next=14;break}return e.abrupt("return",{publicKey:t,accessKey:n.accessKeyByPublicKeyCache[t.toString()]});case 14:return n.accessKeyByPublicKeyCache[t.toString()]=a,e.abrupt("return",{publicKey:t,accessKey:a});case 18:if(e.prev=18,e.t0=e.catch(8),"AccessKeyDoesNotExist"!=e.t0.type){e.next=22;break}return e.abrupt("return",null);case 22:throw e.t0;case 23:case"end":return e.stop()}}),e,null,[[8,18]])})))()}},{key:"createAndDeployContract",value:function(t,n,a,o){var i=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var u,c;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return u=h.fullAccessKey(),r.next=3,i.signAndSendTransaction({receiverId:t,actions:[h.createAccount(),h.transfer(o),h.addKey(y.PublicKey.from(n),u),h.deployContract(a)]});case 3:return c=new e(i.connection,t),r.abrupt("return",c);case 5:case"end":return r.stop()}}),r)})))()}},{key:"sendMoney",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",n.signAndSendTransaction({receiverId:e,actions:[h.transfer(t)]}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"createAccount",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var o;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return o=h.fullAccessKey(),r.abrupt("return",a.signAndSendTransaction({receiverId:e,actions:[h.createAccount(),h.transfer(n),h.addKey(y.PublicKey.from(t),o)]}));case 2:case"end":return r.stop()}}),r)})))()}},{key:"deleteAccount",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",t.signAndSendTransaction({receiverId:t.accountId,actions:[h.deleteAccount(e)]}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"deployContract",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",t.signAndSendTransaction({receiverId:t.accountId,actions:[h.deployContract(e)]}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"functionCall",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=this;return(0,r.default)($parcel$interopDefault(s).mark((function e(){return $parcel$interopDefault(s).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("string"!=typeof t[0]){e.next=4;break}return e.abrupt("return",a.functionCallV1(t[0],t[1],t[2],t[3],t[4]));case 4:return e.abrupt("return",a.functionCallV2(t[0]));case 5:case"end":return e.stop()}}),e)})))()}},{key:"functionCallV1",value:function(e,t,r,n,a){return d.default("Account.functionCall(contractId, methodName, args, gas, amount)")("use `Account.functionCall(FunctionCallOptions)` instead"),r=r||{},this.validateArgs(r),this.signAndSendTransaction({receiverId:e,actions:[h.functionCall(t,r,n||$.DEFAULT_FUNCTION_CALL_GAS,a)]})}},{key:"functionCallV2",value:function(e){var t=e.contractId,r=e.methodName,n=e.args,a=void 0===n?{}:n,o=e.gas,i=void 0===o?$.DEFAULT_FUNCTION_CALL_GAS:o,u=e.attachedDeposit,c=e.walletMeta,s=e.walletCallbackUrl,l=e.stringify;this.validateArgs(a);var f=void 0===l?h.stringifyJsonOrBytes:l;return this.signAndSendTransaction({receiverId:t,actions:[h.functionCall(r,a,i,u,f)],walletMeta:c,walletCallbackUrl:s})}},{key:"addKey",value:function(e,t,n,a){var o=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var i;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n||(n=[]),Array.isArray(n)||(n=[n]),i=t?h.functionCallAccessKey(t,n,a):h.fullAccessKey(),r.abrupt("return",o.signAndSendTransaction({receiverId:o.accountId,actions:[h.addKey(y.PublicKey.from(e),i)]}));case 5:case"end":return r.stop()}}),r)})))()}},{key:"deleteKey",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",t.signAndSendTransaction({receiverId:t.accountId,actions:[h.deleteKey(y.PublicKey.from(e))]}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"stake",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",n.signAndSendTransaction({receiverId:n.accountId,actions:[h.stake(t,y.PublicKey.from(e))]}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"validateArgs",value:function(e){if(!(void 0!==e.byteLength&&e.byteLength===e.length)&&(Array.isArray(e)||"object"!=typeof e))throw new b.PositionalArgsError}},{key:"viewFunction",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=a.parse,i=void 0===o?x:o,u=a.stringify,c=void 0===u?k:u,f=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var a,o;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return f.validateArgs(n),a=c(n).toString("base64"),r.next=4,f.connection.provider.query({request_type:"call_function",account_id:e,method_name:t,args_base64:a,finality:"optimistic"});case 4:return(o=r.sent).logs&&f.printLogs(e,o.logs),r.abrupt("return",o.result&&o.result.length>0&&i(l.from(o.result)));case 7:case"end":return r.stop()}}),r)})))()}},{key:"viewState",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{finality:"optimistic"},n=this;return(0,r.default)($parcel$interopDefault(s).mark((function r(){var a;return $parcel$interopDefault(s).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n.connection.provider.query((0,i.default)((0,o.default)({request_type:"view_state"},t),{account_id:n.accountId,prefix_base64:l.from(e).toString("base64")}));case 2:return a=r.sent.values,r.abrupt("return",a.map((function(e){var t=e.key,r=e.value;return{key:l.from(t,"base64"),value:l.from(r,"base64")}})));case 4:case"end":return r.stop()}}),r)})))()}},{key:"getAccessKeys",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(s).mark((function t(){var r;return $parcel$interopDefault(s).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.connection.provider.query({request_type:"view_access_key_list",account_id:e.accountId,finality:"optimistic"});case 2:if(r=t.sent,!Array.isArray(r)){t.next=5;break}return t.abrupt("return",r);case 5:return t.abrupt("return",r.keys);case 6:case"end":return t.stop()}}),t)})))()}},{key:"getAccountDetails",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(s).mark((function t(){var r,n;return $parcel$interopDefault(s).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.getAccessKeys();case 2:return r=t.sent,n=r.filter((function(e){return"FullAccess"!==e.access_key.permission})).map((function(e){var t=e.access_key.permission;return{contractId:t.FunctionCall.receiver_id,amount:t.FunctionCall.allowance,publicKey:e.public_key}})),t.abrupt("return",{authorizedApps:n});case 5:case"end":return t.stop()}}),t)})))()}},{key:"getAccountBalance",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(s).mark((function t(){var r,n,a,o,i,u,c;return $parcel$interopDefault(s).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.connection.provider.experimental_protocolConfig({finality:"final"});case 2:return r=t.sent,t.next=5,e.state();case 5:return n=t.sent,a=new p.default(r.runtime_config.storage_amount_per_byte),o=new p.default(n.storage_usage).mul(a),i=new p.default(n.locked),u=new p.default(n.amount).add(i),c=u.sub(p.default.max(i,o)),t.abrupt("return",{total:u.toString(),stateStaked:o.toString(),staked:i.toString(),available:c.toString()});case 12:case"end":return t.stop()}}),t)})))()}}]),e}();e.exports.Account=_})),parcelRequire.register("NN8ep",(function(e,t){"use strict";var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.DEFAULT_FUNCTION_CALL_GAS=void 0;var n=r(parcelRequire("jlWHo"));e.exports.DEFAULT_FUNCTION_CALL_GAS=new n.default("30000000000000")})),parcelRequire.register("staLo",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("d0ZZj"),i=parcelRequire("9FpQT"),u=parcelRequire("2zNXU"),c=parcelRequire("5Djcm"),s=parcelRequire("ebKTL"),l=parcelRequire("jLWle"),f=parcelRequire("kY881"),p=parcelRequire("4Z8U5"),d=parcelRequire("jPoaI").Buffer,h=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Account2FA=e.exports.AccountMultisig=e.exports.MULTISIG_CONFIRM_METHODS=e.exports.MULTISIG_CHANGE_METHODS=e.exports.MULTISIG_DEPOSIT=e.exports.MULTISIG_GAS=e.exports.MULTISIG_ALLOWANCE=e.exports.MULTISIG_STORAGE_KEY=void 0;var v=h(parcelRequire("jlWHo")),m=h(parcelRequire("7kbiF")),y=parcelRequire("gXWlL"),b=parcelRequire("fbj1i"),g=parcelRequire("8pTGX"),$=parcelRequire("7cM39"),w=parcelRequire("9Nstj");e.exports.MULTISIG_STORAGE_KEY="__multisigRequest",e.exports.MULTISIG_ALLOWANCE=new v.default(b.parseNearAmount("1")),e.exports.MULTISIG_GAS=new v.default("100000000000000"),e.exports.MULTISIG_DEPOSIT=new v.default("0"),e.exports.MULTISIG_CHANGE_METHODS=["add_request","add_request_and_confirm","delete_request","confirm"],e.exports.MULTISIG_CONFIRM_METHODS=["confirm"];var x=(0,o.default)({},e.exports.MULTISIG_STORAGE_KEY,null),k=function(t){(0,c.default)(l,t);var o=(0,f.default)(l);function l(e,t,r){var a;return(0,n.default)(this,l),(a=o.call(this,e,t)).storage=r.storage,a.onAddRequestResult=r.onAddRequestResult,a}return(0,a.default)(l,[{key:"signAndSendTransactionWithAccount",value:function(e,t){var n=this,a=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",(0,i.default)((0,u.default)(l.prototype),"signAndSendTransaction",n).call(a,{receiverId:e,actions:t}));case 1:case"end":return r.stop()}}),r)})))()}},{key:"signAndSendTransaction",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return"string"==typeof t[0]?this._signAndSendTransaction({receiverId:t[0],actions:t[1]}):this._signAndSendTransaction(t[0])}},{key:"_signAndSendTransaction",value:function(t){var n=t.receiverId,a=t.actions,o=this,c=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r,f,h,v;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=c.accountId,f=d.from(JSON.stringify({request:{receiver_id:n,actions:E(a,r,n)}})),t.prev=3,t.next=6,(0,i.default)((0,u.default)(l.prototype),"signAndSendTransaction",o).call(c,{receiverId:r,actions:[$.functionCall("add_request_and_confirm",f,e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT)]});case 6:h=t.sent,t.next=18;break;case 9:if(t.prev=9,t.t0=t.catch(3),!t.t0.toString().includes("Account has too many active requests. Confirm or delete some")){t.next=17;break}return t.next=14,c.deleteUnconfirmedRequests();case 14:return t.next=16,c.signAndSendTransaction(n,a);case 16:return t.abrupt("return",t.sent);case 17:throw t.t0;case 18:if(h.status){t.next=20;break}throw new Error("Request failed");case 20:if((v=(0,s.default)({},h.status)).SuccessValue&&"string"==typeof v.SuccessValue){t.next=23;break}throw new Error("Request failed");case 23:if(c.setRequest({accountId:r,actions:a,requestId:parseInt(d.from(v.SuccessValue,"base64").toString("ascii"),10)}),!c.onAddRequestResult){t.next=27;break}return t.next=27,c.onAddRequestResult(h);case 27:return c.deleteUnconfirmedRequests(),t.abrupt("return",h);case 29:case"end":return t.stop()}}),t,null,[[3,9]])})))()}},{key:"deleteUnconfirmedRequests",value:function(){var t=this,n=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){var a,o,c,s,f,d,h,v;return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n.getRequestIds();case 2:a=r.sent,o=n.getRequest().requestId,c=!0,s=!1,f=void 0,r.prev=5,d=a[Symbol.iterator]();case 7:if(c=(h=d.next()).done){r.next=22;break}if((v=h.value)!=o){r.next=11;break}return r.abrupt("continue",19);case 11:return r.prev=11,r.next=14,(0,i.default)((0,u.default)(l.prototype),"signAndSendTransaction",t).call(n,{receiverId:n.accountId,actions:[$.functionCall("delete_request",{request_id:v},e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT)]});case 14:r.next=19;break;case 16:r.prev=16,r.t0=r.catch(11),console.warn("Attempt to delete an earlier request before 15 minutes failed. Will try again.");case 19:c=!0,r.next=7;break;case 22:r.next=28;break;case 24:r.prev=24,r.t1=r.catch(5),s=!0,f=r.t1;case 28:r.prev=28,r.prev=29,c||null==d.return||d.return();case 31:if(r.prev=31,!s){r.next=34;break}throw f;case 34:return r.finish(31);case 35:return r.finish(28);case 36:case"end":return r.stop()}}),r,null,[[5,24,28,36],[11,16],[29,,31,35]])})))()}},{key:"getRequestIds",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",e.viewFunction(e.accountId,"list_request_ids"));case 1:case"end":return t.stop()}}),t)})))()}},{key:"getRequest",value:function(){return this.storage?JSON.parse(this.storage.getItem(e.exports.MULTISIG_STORAGE_KEY)||"{}"):x[e.exports.MULTISIG_STORAGE_KEY]}},{key:"setRequest",value:function(t){if(this.storage)return this.storage.setItem(e.exports.MULTISIG_STORAGE_KEY,JSON.stringify(t));x[e.exports.MULTISIG_STORAGE_KEY]=t}}]),l}(y.Account);e.exports.AccountMultisig=k;var _=function(t){(0,c.default)(h,t);var o=(0,f.default)(h);function h(e,t,r){var a;return(0,n.default)(this,h),(a=o.call(this,e,t,r)).helperUrl="https://helper.testnet.near.org",a.helperUrl=r.helperUrl||a.helperUrl,a.storage=r.storage,a.sendCode=r.sendCode||a.sendCodeDefault,a.getCode=r.getCode||a.getCodeDefault,a.verifyCode=r.verifyCode||a.verifyCodeDefault,a.onConfirmResult=r.onConfirmResult,a}return(0,a.default)(h,[{key:"signAndSendTransaction",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=this;return(0,r.default)($parcel$interopDefault(p).mark((function e(){return $parcel$interopDefault(p).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("string"!=typeof t[0]){e.next=6;break}return m.default("Account.signAndSendTransaction(receiverId, actions")("use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead"),e.abrupt("return",a.__signAndSendTransaction({receiverId:t[0],actions:t[1]}));case 6:return e.abrupt("return",a.__signAndSendTransaction(t[0]));case 7:case"end":return e.stop()}}),e)})))()}},{key:"__signAndSendTransaction",value:function(e){var t=e.receiverId,n=e.actions,a=this,o=this;return(0,r.default)($parcel$interopDefault(p).mark((function e(){var r;return $parcel$interopDefault(p).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,i.default)((0,u.default)(h.prototype),"signAndSendTransaction",a).call(o,{receiverId:t,actions:n});case 2:return e.next=4,o.sendCode();case 4:return e.next=6,o.promptAndVerify();case 6:if(r=e.sent,!o.onConfirmResult){e.next=10;break}return e.next=10,o.onConfirmResult(r);case 10:return e.abrupt("return",r);case 11:case"end":return e.stop()}}),e)})))()}},{key:"deployMultisig",value:function(t){var n=this,a=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){var o,c,s,f,v,m;return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return o=a.accountId,r.next=3,a.getRecoveryMethods();case 3:return c=r.sent.data.filter((function(e){var t=e.kind,r=e.publicKey;return("phrase"===t||"ledger"===t)&&null!==r})).map((function(e){return e.publicKey})),r.next=6,a.getAccessKeys();case 6:return s=r.sent.filter((function(e){var t=e.public_key;return"FullAccess"===e.access_key.permission&&!c.includes(t)})).map((function(e){return e.public_key})).map(S),r.t0=S,r.next=10,a.postSignedJson("/2fa/getAccessKey",{accountId:o});case 10:return r.t1=r.sent.publicKey,f=(0,r.t0)(r.t1),v=d.from(JSON.stringify({num_confirmations:2})),m=(0,l.default)(s.map((function(e){return $.deleteKey(e)}))).concat((0,l.default)(s.map((function(t){return $.addKey(t,$.functionCallAccessKey(o,e.exports.MULTISIG_CHANGE_METHODS,null))}))),[$.addKey(f,$.functionCallAccessKey(o,e.exports.MULTISIG_CONFIRM_METHODS,null)),$.deployContract(t)]),r.next=16,a.state();case 16:if(r.t2=r.sent.code_hash,"11111111111111111111111111111111"!==r.t2){r.next=19;break}m.push($.functionCall("new",v,e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT));case 19:return console.log("deploying multisig contract for",o),r.next=22,(0,i.default)((0,u.default)(h.prototype),"signAndSendTransactionWithAccount",n).call(a,o,m);case 22:return r.abrupt("return",r.sent);case 23:case"end":return r.stop()}}),r)})))()}},{key:"disable",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){var n,a,o,i,u;return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.accountId,r.next=3,t.getAccessKeys();case 3:return a=r.sent,o=a.filter((function(e){return"FullAccess"!==e.access_key.permission})).filter((function(e){var t=e.access_key.permission.FunctionCall;return t.receiver_id===n&&4===t.method_names.length&&t.method_names.includes("add_request_and_confirm")})),r.t0=g.PublicKey,r.next=8,t.postSignedJson("/2fa/getAccessKey",{accountId:n});case 8:return r.t1=r.sent.publicKey,i=r.t0.from.call(r.t0,r.t1),u=[$.deleteKey(i)].concat((0,l.default)(o.map((function(e){var t=e.public_key;return $.deleteKey(g.PublicKey.from(t))}))),(0,l.default)(o.map((function(e){var t=e.public_key;return $.addKey(g.PublicKey.from(t),null)}))),[$.deployContract(e)]),console.log("disabling 2fa for",n),r.next=14,t.signAndSendTransaction({receiverId:n,actions:u});case 14:return r.abrupt("return",r.sent);case 15:case"end":return r.stop()}}),r)})))()}},{key:"sendCodeDefault",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r,n,a;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.accountId,n=e.getRequest().requestId,t.next=4,e.get2faMethod();case 4:return a=t.sent,t.next=7,e.postSignedJson("/2fa/send",{accountId:r,method:a,requestId:n});case 7:return t.abrupt("return",n);case 8:case"end":return t.stop()}}),t)})))()}},{key:"getCodeDefault",value:function(e){return(0,r.default)($parcel$interopDefault(p).mark((function e(){return $parcel$interopDefault(p).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is "email" or "phone".');case 1:case"end":return e.stop()}}),e)})))()}},{key:"promptAndVerify",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r,n,a;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.get2faMethod();case 2:return r=t.sent,t.next=5,e.getCode(r);case 5:return n=t.sent,t.prev=6,t.next=9,e.verifyCode(n);case 9:return a=t.sent,t.abrupt("return",a);case 13:if(t.prev=13,t.t0=t.catch(6),console.warn("Error validating security code:",t.t0),!t.t0.toString().includes("invalid 2fa code provided")&&!t.t0.toString().includes("2fa code not valid")){t.next=20;break}return t.next=19,e.promptAndVerify();case 19:return t.abrupt("return",t.sent);case 20:throw t.t0;case 21:case"end":return t.stop()}}),t,null,[[6,13]])})))()}},{key:"verifyCodeDefault",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){var n,a,o;return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.accountId,a=t.getRequest()){r.next=4;break}throw new Error("no request pending");case 4:return o=a.requestId,r.next=7,t.postSignedJson("/2fa/verify",{accountId:n,securityCode:e,requestId:o});case 7:return r.abrupt("return",r.sent);case 8:case"end":return r.stop()}}),r)})))()}},{key:"getRecoveryMethods",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.accountId,t.t0=r,t.next=4,e.postSignedJson("/account/recoveryMethods",{accountId:r});case 4:return t.t1=t.sent,t.abrupt("return",{accountId:t.t0,data:t.t1});case 6:case"end":return t.stop()}}),t)})))()}},{key:"get2faMethod",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r,n,a;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.getRecoveryMethods();case 2:if((r=t.sent.data)&&r.length&&(r=r.find((function(e){return 0===e.kind.indexOf("2fa-")}))),r){t.next=6;break}return t.abrupt("return",null);case 6:return n=r.kind,a=r.detail,t.abrupt("return",{kind:n,detail:a});case 8:case"end":return t.stop()}}),t)})))()}},{key:"signatureFor",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(p).mark((function t(){var r,n,a,o,i;return $parcel$interopDefault(p).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.accountId,t.next=3,e.connection.provider.block({finality:"final"});case 3:return n=t.sent,a=n.header.height.toString(),t.next=7,e.connection.signer.signMessage(d.from(a),r,e.connection.networkId);case 7:return o=t.sent,i=d.from(o.signature).toString("base64"),t.abrupt("return",{blockNumber:a,blockNumberSignature:i});case 10:case"end":return t.stop()}}),t)})))()}},{key:"postSignedJson",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(p).mark((function r(){return $parcel$interopDefault(p).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.t0=w,r.t1=n.helperUrl+e,r.t2=JSON,r.t3=s.default,r.t4={},r.t5=t,r.next=8,n.signatureFor();case 8:return r.t6=r.sent,r.t7=(0,r.t3)(r.t4,r.t5,r.t6),r.t8=r.t2.stringify.call(r.t2,r.t7),r.next=13,r.t0.fetchJson.call(r.t0,r.t1,r.t8);case 13:return r.abrupt("return",r.sent);case 14:case"end":return r.stop()}}),r)})))()}}]),h}(k);e.exports.Account2FA=_;var S=function(e){return g.PublicKey.from(e)},E=function(t,r,n){return t.map((function(t){var a,o=t.enum,i=t[o],u=i.gas,c=i.publicKey,s=i.methodName,l=i.args,f=i.deposit,p=i.accessKey,h=i.code,v={type:o[0].toUpperCase()+o.substr(1),gas:u&&u.toString()||void 0,public_key:c&&(a=c,a.toString().replace("ed25519:",""))||void 0,method_name:s,args:l&&d.from(l).toString("base64")||void 0,code:h&&d.from(h).toString("base64")||void 0,amount:f&&f.toString()||void 0,deposit:f&&f.toString()||"0",permission:void 0};if(p&&(n===r&&"fullAccess"!==p.permission.enum&&(v.permission={receiver_id:r,allowance:e.exports.MULTISIG_ALLOWANCE.toString(),method_names:e.exports.MULTISIG_CHANGE_METHODS}),"functionCall"===p.permission.enum)){var m=p.permission.functionCall,y=m.receiverId,b=m.methodNames,g=m.allowance;v.permission={receiver_id:y,allowance:g&&g.toString()||void 0,method_names:b}}return v}))}})),parcelRequire.register("9FpQT",(function(e,t){$parcel$export(e.exports,"default",(function(){return a}));var r=parcelRequire("jVMBM");function n(e,t,a){return n="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var a=(0,r.default)(e,t);if(a){var o=Object.getOwnPropertyDescriptor(a,t);return o.get?o.get.call(n||e):o.value}},n(e,t,a)}function a(e,t,r){return n(e,t,r)}})),parcelRequire.register("jVMBM",(function(e,t){$parcel$export(e.exports,"default",(function(){return n}));var r=parcelRequire("2zNXU");function n(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=(0,r.default)(e)););return e}})),parcelRequire.register("g5374",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("kY881"),u=parcelRequire("4Z8U5");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.UrlAccountCreator=e.exports.LocalAccountCreator=e.exports.AccountCreator=void 0;var c=parcelRequire("9Nstj"),s=function e(){(0,n.default)(this,e)};e.exports.AccountCreator=s;var l=function(e){(0,o.default)(c,e);var t=(0,i.default)(c);function c(e,r){var a;return(0,n.default)(this,c),(a=t.call(this)).masterAccount=e,a.initialBalance=r,a}return(0,a.default)(c,[{key:"createAccount",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n.masterAccount.createAccount(e,t,n.initialBalance);case 2:case"end":return r.stop()}}),r)})))()}}]),c}(s);e.exports.LocalAccountCreator=l;var f=function(e){(0,o.default)(s,e);var t=(0,i.default)(s);function s(e,r){var a;return(0,n.default)(this,s),(a=t.call(this)).connection=e,a.helperUrl=r,a}return(0,a.default)(s,[{key:"createAccount",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,c.fetchJson("".concat(n.helperUrl,"/account"),JSON.stringify({newAccountId:e,newAccountPublicKey:t.toString()}));case 2:case"end":return r.stop()}}),r)})))()}}]),s}(s);e.exports.UrlAccountCreator=f})),parcelRequire.register("5YbZv",(function(e,t){var r=parcelRequire("8y9hR"),n=parcelRequire("2WaBo"),a=parcelRequire("ebKTL");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Connection=void 0;var o=parcelRequire("bMcUu"),i=parcelRequire("e29vo");var u=function(){function e(t,n,a){(0,r.default)(this,e),this.networkId=t,this.provider=n,this.signer=a}return(0,n.default)(e,null,[{key:"fromConfig",value:function(t){var r=function(e){switch(e.type){case void 0:return e;case"JsonRpcProvider":return new o.JsonRpcProvider((0,a.default)({},e.args));default:throw new Error("Unknown provider type ".concat(e.type))}}(t.provider),n=function(e){switch(e.type){case void 0:return e;case"InMemorySigner":return new i.InMemorySigner(e.keyStore);default:throw new Error("Unknown signer type ".concat(e.type))}}(t.signer);return new e(t.networkId,r,n)}}]),e}();e.exports.Connection=u})),parcelRequire.register("e29vo",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("5Djcm"),i=parcelRequire("kY881"),u=parcelRequire("4Z8U5"),c=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.InMemorySigner=e.exports.Signer=void 0;var s=c(parcelRequire("hRCvM")),l=parcelRequire("8pTGX"),f=parcelRequire("5u7wK"),p=function e(){(0,n.default)(this,e)};e.exports.Signer=p;var d=function(e){(0,o.default)(c,e);var t=(0,i.default)(c);function c(e){var r;return(0,n.default)(this,c),(r=t.call(this)).keyStore=e,r}return(0,a.default)(c,[{key:"createKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=l.KeyPair.fromRandom("ed25519"),r.next=3,n.keyStore.setKey(t,e,a);case 3:return r.abrupt("return",a.getPublicKey());case 4:case"end":return r.stop()}}),r)})))()}},{key:"getPublicKey",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n.keyStore.getKey(t,e);case 2:if(null!==(a=r.sent)){r.next=5;break}return r.abrupt("return",null);case 5:return r.abrupt("return",a.getPublicKey());case 6:case"end":return r.stop()}}),r)})))()}},{key:"signMessage",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(u).mark((function r(){var o,i;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(o=new Uint8Array(s.default.sha256.array(e)),t){r.next=3;break}throw new Error("InMemorySigner requires provided account id");case 3:return r.next=5,a.keyStore.getKey(n,t);case 5:if(null!==(i=r.sent)){r.next=8;break}throw new Error("Key for ".concat(t," not found in ").concat(n));case 8:return r.abrupt("return",i.sign(o));case 9:case"end":return r.stop()}}),r)})))()}},{key:"toString",value:function(){return"InMemorySigner(".concat(this.keyStore,")")}}],[{key:"fromKeyPair",value:function(e,t,n){return(0,r.default)($parcel$interopDefault(u).mark((function r(){var a;return $parcel$interopDefault(u).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=new f.InMemoryKeyStore,r.next=3,a.setKey(e,t,n);case 3:return r.abrupt("return",new c(a));case 4:case"end":return r.stop()}}),r)})))()}}]),c}(p);e.exports.InMemorySigner=d})),parcelRequire.register("hRJ6X",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("d0ZZj"),i=parcelRequire("ebKTL"),u=parcelRequire("jLWle"),c=parcelRequire("4Z8U5"),s=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Contract=void 0;var l=s(parcelRequire("jlWHo")),f=s(parcelRequire("7kbiF")),p=parcelRequire("bMcUu"),d=parcelRequire("6vXKs");function h(e,t){return(0,o.default)({},e,(function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return t.apply(void 0,(0,u.default)(r))}))[e]}var v=function(e){return e&&void 0!==e.byteLength&&e.byteLength===e.length},m=function(e){return"[object Object]"===Object.prototype.toString.call(e)},y=function(){function e(t,a,o){var u=this;(0,n.default)(this,e),this.account=t,this.contractId=a;var s=o.viewMethods,l=void 0===s?[]:s,p=o.changeMethods,y=void 0===p?[]:p;l.forEach((function(e){var t=u;Object.defineProperty(u,e,{writable:!1,enumerable:!0,value:h(e,(0,r.default)($parcel$interopDefault(c).mark((function r(){var n,a,o,i,u,s=arguments;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:for(n=s.length>0&&void 0!==s[0]?s[0]:{},a=s.length>1&&void 0!==s[1]?s[1]:{},o=s.length,i=new Array(o>2?o-2:0),u=2;u<o;u++)i[u-2]=s[u];if(!i.length&&(m(n)||v(n))&&m(a)){r.next=4;break}throw new d.PositionalArgsError;case 4:return r.abrupt("return",t.account.viewFunction(t.contractId,e,n,a));case 5:case"end":return r.stop()}}),r)}))))})})),y.forEach((function(e){var t=u;Object.defineProperty(u,e,{writable:!1,enumerable:!0,value:h(e,(0,r.default)($parcel$interopDefault(c).mark((function r(){var n,a,o,u=arguments;return $parcel$interopDefault(c).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:for(n=u.length,a=new Array(n),o=0;o<n;o++)a[o]=u[o];if(!a.length||!(a.length>3||!m(a[0])&&!v(a[0]))){r.next=3;break}throw new d.PositionalArgsError;case 3:if(!(a.length>1)&&a[0]&&a[0].args){r.next=7;break}return f.default("contract.methodName(args, gas, amount)")("use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead"),r.abrupt("return",t._changeMethod({methodName:e,args:a[0],gas:a[1],amount:a[2]}));case 7:return r.abrupt("return",t._changeMethod((0,i.default)({methodName:e},a[0])));case 8:case"end":return r.stop()}}),r)}))))})}))}return(0,a.default)(e,[{key:"_changeMethod",value:function(e){var t=e.args,n=e.methodName,a=e.gas,o=e.amount,i=e.meta,u=e.callbackUrl,s=this;return(0,r.default)($parcel$interopDefault(c).mark((function e(){var r;return $parcel$interopDefault(c).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return b({gas:a,amount:o}),e.next=3,s.account.functionCall({contractId:s.contractId,methodName:n,args:t,gas:a,attachedDeposit:o,walletMeta:i,walletCallbackUrl:u});case 3:return r=e.sent,e.abrupt("return",p.getTransactionLastResult(r));case 5:case"end":return e.stop()}}),e)})))()}}]),e}();function b(e){var t=!0,r=!1,n=void 0;try{for(var a,o=Object.keys(e)[Symbol.iterator]();!(t=(a=o.next()).done);t=!0){var i=a.value,u=e[i];if(u&&!l.default.isBN(u)&&isNaN(u))throw new d.ArgumentTypeError(i,"number, decimal string or BN",u)}}catch(e){r=!0,n=e}finally{try{t||null==o.return||o.return()}finally{if(r)throw n}}}e.exports.Contract=y})),parcelRequire.register("kowPj",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("4Z8U5"),i=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Near=void 0;var u=i(parcelRequire("jlWHo")),c=parcelRequire("gXWlL"),s=parcelRequire("5YbZv"),l=parcelRequire("hRJ6X"),f=parcelRequire("g5374"),p=function(){function e(t){if((0,n.default)(this,e),this.config=t,this.connection=s.Connection.fromConfig({networkId:t.networkId,provider:{type:"JsonRpcProvider",args:{url:t.nodeUrl,headers:t.headers}},signer:t.signer||{type:"InMemorySigner",keyStore:t.keyStore||t.deps.keyStore}}),t.masterAccount){var r=t.initialBalance?new u.default(t.initialBalance):new u.default("500000000000000000000000000");this.accountCreator=new f.LocalAccountCreator(new c.Account(this.connection,t.masterAccount),r)}else t.helperUrl?this.accountCreator=new f.UrlAccountCreator(this.connection,t.helperUrl):this.accountCreator=null}return(0,a.default)(e,[{key:"account",value:function(e){var t=this;return(0,r.default)($parcel$interopDefault(o).mark((function r(){var n;return $parcel$interopDefault(o).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=new c.Account(t.connection,e),r.abrupt("return",n);case 2:case"end":return r.stop()}}),r)})))()}},{key:"createAccount",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(o).mark((function r(){return $parcel$interopDefault(o).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n.accountCreator){r.next=2;break}throw new Error("Must specify account creator, either via masterAccount or helperUrl configuration settings.");case 2:return r.next=4,n.accountCreator.createAccount(e,t);case 4:return r.abrupt("return",new c.Account(n.connection,e));case 5:case"end":return r.stop()}}),r)})))()}},{key:"loadContract",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(o).mark((function r(){var a;return $parcel$interopDefault(o).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return a=new c.Account(n.connection,t.sender),r.abrupt("return",new l.Contract(a,e,t));case 2:case"end":return r.stop()}}),r)})))()}},{key:"sendTokens",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(o).mark((function r(){var i,u;return $parcel$interopDefault(o).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return console.warn("near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead."),i=new c.Account(a.connection,t),r.next=4,i.sendMoney(n,e);case 4:return u=r.sent,r.abrupt("return",u.transaction_outcome.id);case 6:case"end":return r.stop()}}),r)})))()}}]),e}();e.exports.Near=p})),parcelRequire.register("k3l4B",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("8y9hR"),a=parcelRequire("2WaBo"),o=parcelRequire("9FpQT"),i=parcelRequire("2zNXU"),u=parcelRequire("5Djcm"),c=parcelRequire("hNZKs"),s=parcelRequire("kY881"),l=parcelRequire("4Z8U5"),f=parcelRequire("jPoaI").Buffer,p=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.ConnectedWalletAccount=e.exports.WalletAccount=e.exports.WalletConnection=void 0;var d=p(parcelRequire("7kbiF")),h=parcelRequire("gXWlL"),v=parcelRequire("7cM39"),m=parcelRequire("jSV3x"),y=parcelRequire("2HPkT"),b=(y=parcelRequire("2HPkT"),"/login/"),g="pending_key",$=function(){function e(t,r){(0,n.default)(this,e),this._near=t;var a=r+"_wallet_auth_key",o=JSON.parse(window.localStorage.getItem(a));this._networkId=t.config.networkId,this._walletBaseUrl=t.config.walletUrl,r=r||t.config.contractName||"default",this._keyStore=t.connection.signer.keyStore,this._authData=o||{allKeys:[]},this._authDataKey=a,this.isSignedIn()||this._completeSignInWithAccessKey()}return(0,a.default)(e,[{key:"isSignedIn",value:function(){return!!this._authData.accountId}},{key:"getAccountId",value:function(){return this._authData.accountId||""}},{key:"requestSignIn",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0,a=this;return(0,r.default)($parcel$interopDefault(l).mark((function r(){var o,i,u,c,s;return $parcel$interopDefault(l).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if("string"==typeof e?(d.default("requestSignIn(contractId, title)")("`title` ignored; use `requestSignIn({ contractId, methodNames, successUrl, failureUrl })` instead"),o={contractId:e,successUrl:t,failureUrl:n}):o=e,i=new URL(window.location.href),(u=new URL(a._walletBaseUrl+b)).searchParams.set("success_url",o.successUrl||i.href),u.searchParams.set("failure_url",o.failureUrl||i.href),!o.contractId){r.next=17;break}return r.next=9,a._near.account(o.contractId);case 9:return c=r.sent,r.next=12,c.state();case 12:return u.searchParams.set("contract_id",o.contractId),s=m.KeyPair.fromRandom("ed25519"),u.searchParams.set("public_key",s.getPublicKey().toString()),r.next=17,a._keyStore.setKey(a._networkId,g+s.getPublicKey(),s);case 17:o.methodNames&&o.methodNames.forEach((function(e){u.searchParams.append("methodNames",e)})),window.location.assign(u.toString());case 19:case"end":return r.stop()}}),r)})))()}},{key:"requestSignTransactions",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=this;return(0,r.default)($parcel$interopDefault(l).mark((function e(){return $parcel$interopDefault(l).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!Array.isArray(t[0])){e.next=4;break}return d.default("WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)")("use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead"),e.abrupt("return",a._requestSignTransactions({transactions:t[0],callbackUrl:t[1],meta:t[2]}));case 4:return e.abrupt("return",a._requestSignTransactions(t[0]));case 5:case"end":return e.stop()}}),e)})))()}},{key:"_requestSignTransactions",value:function(e){var t=e.transactions,n=e.meta,a=e.callbackUrl,o=this;return(0,r.default)($parcel$interopDefault(l).mark((function e(){var r,i;return $parcel$interopDefault(l).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=new URL(window.location.href),(i=new URL("sign",o._walletBaseUrl)).searchParams.set("transactions",t.map((function(e){return y.serialize(v.SCHEMA,e)})).map((function(e){return f.from(e).toString("base64")})).join(",")),i.searchParams.set("callbackUrl",a||r.href),n&&i.searchParams.set("meta",n),window.location.assign(i.toString());case 6:case"end":return e.stop()}}),e)})))()}},{key:"_completeSignInWithAccessKey",value:function(){var e=this;return(0,r.default)($parcel$interopDefault(l).mark((function t(){var r,n,a,o;return $parcel$interopDefault(l).wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=new URL(window.location.href),n=r.searchParams.get("public_key")||"",a=(r.searchParams.get("all_keys")||"").split(","),!(o=r.searchParams.get("account_id")||"")){t.next=10;break}if(e._authData={accountId:o,allKeys:a},window.localStorage.setItem(e._authDataKey,JSON.stringify(e._authData)),!n){t.next=10;break}return t.next=10,e._moveKeyFromTempToPermanent(o,n);case 10:r.searchParams.delete("public_key"),r.searchParams.delete("all_keys"),r.searchParams.delete("account_id"),r.searchParams.delete("meta"),r.searchParams.delete("transactionHashes"),window.history.replaceState({},document.title,r.toString());case 16:case"end":return t.stop()}}),t)})))()}},{key:"_moveKeyFromTempToPermanent",value:function(e,t){var n=this;return(0,r.default)($parcel$interopDefault(l).mark((function r(){var a;return $parcel$interopDefault(l).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,n._keyStore.getKey(n._networkId,g+t);case 2:return a=r.sent,r.next=5,n._keyStore.setKey(n._networkId,e,a);case 5:return r.next=7,n._keyStore.removeKey(n._networkId,g+t);case 7:case"end":return r.stop()}}),r)})))()}},{key:"signOut",value:function(){this._authData={},window.localStorage.removeItem(this._authDataKey)}},{key:"account",value:function(){return this._connectedAccount||(this._connectedAccount=new w(this,this._near.connection,this._authData.accountId)),this._connectedAccount}}]),e}();e.exports.WalletConnection=$,e.exports.WalletAccount=$;var w=function(e){(0,u.default)(f,e);var t=(0,s.default)(f);function f(e,r,a){var o;return(0,n.default)(this,f),(o=t.call(this,r,a)).walletConnection=e,o}return(0,a.default)(f,[{key:"signAndSendTransaction",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return"string"==typeof t[0]?this._signAndSendTransaction({receiverId:t[0],actions:t[1]}):this._signAndSendTransaction(t[0])}},{key:"_signAndSendTransaction",value:function(e){var t=e.receiverId,n=e.actions,a=e.walletMeta,u=e.walletCallbackUrl,c=void 0===u?window.location.href:u,s=this,p=this;return(0,r.default)($parcel$interopDefault(l).mark((function e(){var r,u,d,h,b,g,$;return $parcel$interopDefault(l).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p.connection.signer.getPublicKey(p.accountId,p.connection.networkId);case 2:return r=e.sent,e.next=5,p.accessKeyForTransaction(t,n,r);case 5:if(u=e.sent){e.next=8;break}throw new Error("Cannot find matching key for transaction sent to ".concat(t));case 8:if(!r||r.toString()!==u.public_key){e.next=24;break}return e.prev=9,e.next=12,(0,o.default)((0,i.default)(f.prototype),"signAndSendTransaction",s).call(p,{receiverId:t,actions:n});case 12:return e.abrupt("return",e.sent);case 15:if(e.prev=15,e.t0=e.catch(9),"NotEnoughAllowance"!==e.t0.type){e.next=23;break}return e.next=20,p.accessKeyForTransaction(t,n);case 20:u=e.sent,e.next=24;break;case 23:throw e.t0;case 24:return e.next=26,p.connection.provider.block({finality:"final"});case 26:return d=e.sent,h=y.baseDecode(d.header.hash),b=m.PublicKey.from(u.public_key),g=u.access_key.nonce+1,$=v.createTransaction(p.accountId,b,t,g,n,h),e.next=33,p.walletConnection.requestSignTransactions({transactions:[$],meta:a,callbackUrl:c});case 33:return e.abrupt("return",new Promise((function(e,t){setTimeout((function(){t(new Error("Failed to redirect to sign transaction"))}),1e3)})));case 34:case"end":return e.stop()}}),e,null,[[9,15]])})))()}},{key:"accessKeyMatchesTransaction",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(l).mark((function r(){var o,i,u,s,f,p;return $parcel$interopDefault(l).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if("FullAccess"!==(o=e.access_key.permission)){r.next=3;break}return r.abrupt("return",!0);case 3:if(!o.FunctionCall){r.next=12;break}if(i=o.FunctionCall,u=i.receiver_id,s=i.method_names,u!==a.accountId||!s.includes("add_request_and_confirm")){r.next=7;break}return r.abrupt("return",!0);case 7:if(u!==t){r.next=12;break}if(1===n.length){r.next=10;break}return r.abrupt("return",!1);case 10:return f=(0,c.default)(n,1),p=f[0].functionCall,r.abrupt("return",p&&(!p.deposit||"0"===p.deposit.toString())&&(0===s.length||s.includes(p.methodName)));case 12:return r.abrupt("return",!1);case 13:case"end":return r.stop()}}),r)})))()}},{key:"accessKeyForTransaction",value:function(e,t,n){var a=this;return(0,r.default)($parcel$interopDefault(l).mark((function r(){var o,i,u,c,s,f,p,d,h;return $parcel$interopDefault(l).wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,a.getAccessKeys();case 2:if(o=r.sent,!n){r.next=12;break}if(i=o.find((function(e){return e.public_key.toString()===n.toString()})),r.t0=i,!r.t0){r.next=10;break}return r.next=9,a.accessKeyMatchesTransaction(i,e,t);case 9:r.t0=r.sent;case 10:if(!r.t0){r.next=12;break}return r.abrupt("return",i);case 12:u=a.walletConnection._authData.allKeys,c=!0,s=!1,f=void 0,r.prev=14,p=o[Symbol.iterator]();case 16:if(c=(d=p.next()).done){r.next=28;break}if(h=d.value,r.t1=-1!==u.indexOf(h.public_key),!r.t1){r.next=23;break}return r.next=22,a.accessKeyMatchesTransaction(h,e,t);case 22:r.t1=r.sent;case 23:if(!r.t1){r.next=25;break}return r.abrupt("return",h);case 25:c=!0,r.next=16;break;case 28:r.next=34;break;case 30:r.prev=30,r.t2=r.catch(14),s=!0,f=r.t2;case 34:r.prev=34,r.prev=35,c||null==p.return||p.return();case 37:if(r.prev=37,!s){r.next=40;break}throw f;case 40:return r.finish(37);case 41:return r.finish(34);case 42:return r.abrupt("return",null);case 43:case"end":return r.stop()}}),r,null,[[14,30,34,42],[35,,37,41]])})))()}}]),f}(h.Account);e.exports.ConnectedWalletAccount=w})),parcelRequire.register("85znT",(function(e,t){var r=parcelRequire("1zs4k"),n=parcelRequire("4Z8U5");Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.connect=void 0;var a=parcelRequire("kowPj");function o(){return(o=(0,r.default)($parcel$interopDefault(n).mark((function e(t){return $parcel$interopDefault(n).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",new a.Near(t));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}e.exports.connect=function(e){return o.apply(this,arguments)}})),parcelRequire.register("fU2q1",(function(e,t){parcelRequire("daRlP");var r,n=parcelRequire("hBCvE");r=n("Error.captureStackTrace")?parcelRequire("1dl9C"):n("Error.prototype.stack")?parcelRequire("biTSf"):parcelRequire("kNTt5"),e.exports=r()})),parcelRequire.register("daRlP",(function(e,t){parcelRequire("hBCvE").check("es5")})),parcelRequire.register("hBCvE",(function(e,t){parcelRequire("cHQrq"),e.exports=parcelRequire("bzjnC")})),parcelRequire.register("cHQrq",(function(e,t){var r=parcelRequire("bzjnC"),n=r.define,a=r.test;n("strict mode",(function(){return void 0===this})),n("arguments.callee.caller",(function(){try{return function(){return arguments.callee.caller}()===arguments.callee}catch(e){return!1}})),n("es5",(function(){return a("Array.prototype.forEach")&&a("Array.prototype.map")&&a("Function.prototype.bind")&&a("Object.create")&&a("Object.defineProperties")&&a("Object.defineProperty")&&a("Object.prototype.hasOwnProperty")})),n("Array.prototype.forEach",(function(){return Array.prototype.forEach})),n("Array.prototype.map",(function(){return Array.prototype.map})),n("Function.prototype.bind",(function(){return Function.prototype.bind})),n("Object.create",(function(){return Object.create})),n("Object.defineProperties",(function(){return Object.defineProperties})),n("Object.defineProperty",(function(){return Object.defineProperty})),n("Object.prototype.hasOwnProperty",(function(){return Object.prototype.hasOwnProperty})),n("Error.captureStackTrace",(function(){return Error.captureStackTrace})),n("Error.prototype.stack",(function(){try{throw new Error}catch(e){return e.stack||e.stacktrace}}))})),parcelRequire.register("bzjnC",(function(e,t){var r=new(parcelRequire("1RBoH")),n=function(e){return r.test(e)};n.define=function(e,t){r.define(e,t)},n.check=function(e){r.check(e)},n.test=n,e.exports=n})),parcelRequire.register("1RBoH",(function(e,t){var r=function(){this.tests={},this.cache={}};r.prototype={constructor:r,define:function(e,t){if("string"!=typeof e||!(t instanceof Function))throw new Error("Invalid capability definition.");if(this.tests[e])throw new Error('Duplicated capability definition by "'+e+'".');this.tests[e]=t},check:function(e){if(!this.test(e))throw new Error('The current environment does not support "'+e+'", therefore we cannot continue.')},test:function(e){if(void 0!==this.cache[e])return this.cache[e];if(!this.tests[e])throw new Error('Unknown capability with name "'+e+'".');var t=this.tests[e];return this.cache[e]=!!t(),this.cache[e]}},e.exports=r})),parcelRequire.register("1dl9C",(function(e,t){var r=parcelRequire("eJSga");e.exports=function(){return Error.getStackTrace=function(e){return e.stack},{prepareStackTrace:r}}})),parcelRequire.register("eJSga",(function(e,t){e.exports=function(e,t,r){var n="";if(n+=e.name||"Error",n+=": "+(e.message||""),r instanceof Array)for(var a in r){n+="\n   # "+r[a]}for(var o in t){n+="\n   at "+t[o].toString()}return n}})),parcelRequire.register("biTSf",(function(e,t){var r=parcelRequire("5G1Xa"),n=parcelRequire("g1nxr"),a=parcelRequire("5yr8C").cache,o=parcelRequire("eJSga");e.exports=function(){return Error.captureStackTrace=function e(t,i){var u=[e];i&&u.push(i);var c=r.getInstance().captureFrameStrings(u);Object.defineProperties(t,{stack:{configurable:!0,get:a((function(){var e=n.getInstance().getFrames(c.frameStrings,c.functionValues);return(Error.prepareStackTrace||o)(t,e,undefined)}))},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})},Error.getStackTrace=function(e){if(e.cachedStack)return e.stack;var t,a=r.getInstance().getFrameStrings(e),i=[];a?i=n.getInstance().getFrames(a,[]):t=["The stack is not readable by unthrown errors in this environment."];var u=(Error.prepareStackTrace||o)(e,i,t);if(a)try{Object.defineProperties(e,{stack:{configurable:!0,writable:!0,enumerable:!1,value:u},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})}catch(e){}return u},{prepareStackTrace:o}}})),parcelRequire.register("5G1Xa",(function(e,t){var r=parcelRequire("90gMA").Class,n=parcelRequire("90gMA").abstractMethod,a=parcelRequire("5yr8C").eachCombination,o=parcelRequire("5yr8C").cache,i=parcelRequire("hBCvE"),u=r(Object,{prototype:{captureFrameStrings:function(e){var t=this.createError();e.unshift(this.captureFrameStrings),e.unshift(this.createError);var r=this.getFrameStrings(t),n=r.slice(e.length),a=[];if(i("arguments.callee.caller")){var o=[this.createError,this.captureFrameStrings];try{for(var u=arguments.callee;u=u.caller;)o.push(u)}catch(e){}a=o.slice(e.length)}return{frameStrings:n,functionValues:a}},getFrameStrings:function(e){var t=e.message||"",r=e.name||"",n=this.getStackString(e);if(void 0!==n){var a=n.split("\n"),o=0,i=a.length;return this.hasHeader&&(o+=r.split("\n").length+t.split("\n").length-1),this.hasFooter&&(i-=1),a.slice(o,i)}},createError:n,getStackString:n,hasHeader:void 0,hasFooter:void 0}}),c=r(Object,{prototype:{calibrateClass:function(e){return this.calibrateMethods(e)&&this.calibrateEnvelope(e)},calibrateMethods:function(e){try{a([[function(e){return new Error(e)},function(e){try{throw new Error(e)}catch(e){return e}}],[function(e){return e.stack},function(e){return e.stacktrace}]],(function(e,t){if(t(e()))throw{getStackString:t,createError:e}}))}catch(t){return r.merge.call(e,{prototype:t}),!0}return!1},calibrateEnvelope:function(e){var t=(0,e.prototype.getStackString)((0,e.prototype.createError)("marker")).split("\n");return r.merge.call(e,{prototype:{hasHeader:/marker/.test(t[0]),hasFooter:""===t[t.length-1]}}),!0}}});e.exports={getClass:o((function(){var e;if(e)return e;if(e=r(u,{}),!(new c).calibrateClass(e))throw new Error("Cannot read Error.prototype.stack in this environment.");return e})),getInstance:o((function(){return new(this.getClass())}))}})),parcelRequire.register("90gMA",(function(e,t){parcelRequire("daRlP"),e.exports=parcelRequire("2FQHe")})),parcelRequire.register("2FQHe",(function(e,t){e.exports={Class:parcelRequire("1VnWp"),abstractMethod:parcelRequire("8D7RK")}})),parcelRequire.register("1VnWp",(function(e,t){var r=function(){for(var e=function(e){var r="config";if(e instanceof Function)r="Source";else if(e instanceof Array)r="buildArgs";else{if(!(e instanceof Object))throw new Error("Invalid configuration option.");r="config"}if(t.hasOwnProperty(r))throw new Error("Duplicated configuration option: "+r+".");t[r]=e},t=Object.create({Source:Object,config:{},buildArgs:[]}),n=0,a=arguments.length;n<a;++n)e(arguments[n]);var o=t.Source,i=t.config,u=t.buildArgs;return(o.extend||r.extend).call(o,i,u)};r.factory=function(){return function(){var e=this;e.build instanceof Function&&e.build.apply(e,arguments),e.init instanceof Function&&e.init.apply(e,arguments)}},r.extend=function(e,t){var n,a=this;return e||(e={}),e.prototype instanceof Object&&e.prototype.constructor!==Object?n=e.prototype.constructor:e.factory instanceof Function&&(n=e.factory.call(a)),((n=(a.clone||r.clone).call(a,n,t)).merge||r.merge).call(n,e),n},r.prototype.extend=function(e,t){var n=(this.clone||r.prototype.clone).apply(this,t);return(n.merge||r.prototype.merge).call(n,e),n},r.clone=function(e,t){var n=this;for(var a in e instanceof Function||(e=(n.factory||r.factory).call(n)),e.prototype=(n.prototype.clone||r.prototype.clone).apply(n.prototype,t||[]),e.prototype.constructor=e,n)"prototype"!==a&&(e[a]=n[a]);return e},r.prototype.clone=function(){var e=this,t=Object.create(e);return t.build instanceof Function&&t.build.apply(t,arguments),t},r.merge=function(e){var t=this;for(var n in e)"prototype"!==n&&(t[n]=e[n]);return e.prototype instanceof Object&&(t.prototype.merge||r.prototype.merge).call(t.prototype,e.prototype),t},r.prototype.merge=function(e){for(var t in e)"constructor"!==t&&(this[t]=e[t]);return this},r.absorb=function(e){var t=this;for(var n in e)"prototype"===n||void 0!==t[n]&&t[n]!==Function.prototype[n]||(t[n]=e[n]);return e.prototype instanceof Object&&(t.prototype.absorb||r.prototype.absorb).call(t.prototype,e.prototype),t},r.prototype.absorb=function(e){var t=this;for(var r in e)"constructor"===r||void 0!==t[r]&&t[r]!==Object.prototype[r]||(t[r]=e[r]);return t},r.getAncestor=function(){var e=this;if(e!==e.prototype.constructor)return e.prototype.constructor},r.newInstance=function(){var e=this,t=Object.create(this.prototype);return e.apply(t,arguments),t},e.exports=r})),parcelRequire.register("8D7RK",(function(e,t){e.exports=function(){throw new Error("Not implemented.")}})),parcelRequire.register("5yr8C",(function(e,t){e.exports=parcelRequire("1G303")})),parcelRequire.register("1G303",(function(e,t){e.exports={cache:parcelRequire("2YAee"),eachCombination:parcelRequire("218bB")}})),parcelRequire.register("2YAee",(function(e,t){e.exports=function(e){var t,r=!1;return e instanceof Function||(r=!0,t=e,e=null),function(){return r||(r=!0,t=e.apply(this,arguments),e=null),t}}})),parcelRequire.register("218bB",(function(e,t){e.exports=function e(t,r,n){if(n||(n=[]),n.length<t.length){var a=t[n.length];for(var o in a)n[n.length]=a[o],e(t,r,n),--n.length}else r.apply(null,n)}})),parcelRequire.register("g1nxr",(function(e,t){var r=parcelRequire("90gMA").Class,n=parcelRequire("5suK2"),a=parcelRequire("5yr8C").cache,o=r(Object,{prototype:{stackParser:null,frameParser:null,locationParsers:null,constructor:function(e){r.prototype.merge.call(this,e)},getFrames:function(e,t){for(var r=[],n=0,a=e.length;n<a;++n)r[n]=this.getFrame(e[n],t[n]);return r},getFrame:function(e,t){return new n({frameString:e,functionValue:t})}}});e.exports={getClass:a((function(){return o})),getInstance:a((function(){return new(this.getClass())}))}})),parcelRequire.register("5suK2",(function(e,t){var r=parcelRequire("90gMA").Class,n=parcelRequire("90gMA").abstractMethod,a=r(Object,{prototype:{init:r.prototype.merge,frameString:void 0,toString:function(){return this.frameString},functionValue:void 0,getThis:n,getTypeName:n,getFunction:function(){return this.functionValue},getFunctionName:n,getMethodName:n,getFileName:n,getLineNumber:n,getColumnNumber:n,getEvalOrigin:n,isTopLevel:n,isEval:n,isNative:n,isConstructor:n}});e.exports=a})),parcelRequire.register("kNTt5",(function(e,t){var r=parcelRequire("5yr8C").cache,n=parcelRequire("eJSga");e.exports=function(){return Error.captureStackTrace=function(e,t){Object.defineProperties(e,{stack:{configurable:!0,get:r((function(){return(Error.prepareStackTrace||n)(e,[])}))},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})},Error.getStackTrace=function(e){if(e.cachedStack)return e.stack;var t=(Error.prepareStackTrace||n)(e,[]);try{Object.defineProperties(e,{stack:{configurable:!0,writable:!0,enumerable:!1,value:t},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})}catch(e){}return t},{prepareStackTrace:n}}}));var $e9f4ce35a6dde517$exports={};parcelRequire("lGKbD").register(JSON.parse('{"7lIXA":"index.050cf18d.js","kjdlk":"logo-black.54439fde.svg","d5szX":"unchain_logo.1e4f0fe1.png","83BU3":"cross.ec329b3d.png","5Afzg":"top_img.935bf645.avif","dF64F":"like_icon.ee688b38.png","kIad3":"index.ac3b5833.css"}'));var $fba0f23e9e6a11bb$exports={},$64d0b1ebdd6bcffe$export$882461b6382ed46c,$64d0b1ebdd6bcffe$export$757ceba2d55c277e;$fba0f23e9e6a11bb$exports=parcelRequire("a58XM"),parcelRequire("6cds3");var $6d4849ee44552f5f$exports={},$64d0b1ebdd6bcffe$var$i,$64d0b1ebdd6bcffe$var$c,$64d0b1ebdd6bcffe$var$o,$64d0b1ebdd6bcffe$var$c1,$64d0b1ebdd6bcffe$var$h,$64d0b1ebdd6bcffe$var$o1;function $6d4849ee44552f5f$var$checkDCE(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($6d4849ee44552f5f$var$checkDCE)}catch(e){console.error(e)}}$6d4849ee44552f5f$var$checkDCE(),$6d4849ee44552f5f$exports=parcelRequire("jZA9I"),$64d0b1ebdd6bcffe$export$882461b6382ed46c=$6d4849ee44552f5f$exports.createRoot,$64d0b1ebdd6bcffe$export$757ceba2d55c277e=$6d4849ee44552f5f$exports.hydrateRoot,parcelRequire("4Z8U5"),parcelRequire("6cds3");var $1a569f9b4916864d$exports={};$1a569f9b4916864d$exports=parcelRequire("17QCl").getBundleURL("7lIXA")+parcelRequire("lGKbD").resolve("kjdlk");var $0246c15819f25bdd$exports={};$0246c15819f25bdd$exports=parcelRequire("17QCl").getBundleURL("7lIXA")+parcelRequire("lGKbD").resolve("d5szX");var $7b29a78ea31418a9$exports={};$7b29a78ea31418a9$exports=parcelRequire("17QCl").getBundleURL("7lIXA")+parcelRequire("lGKbD").resolve("83BU3");var $0bda21bb5756b7ef$exports={};$0bda21bb5756b7ef$exports=parcelRequire("17QCl").getBundleURL("7lIXA")+parcelRequire("lGKbD").resolve("5Afzg"),parcelRequire("6cds3");var $hNZKs=parcelRequire("hNZKs"),$6cds3=parcelRequire("6cds3"),$06e105ab24f6c561$export$e19cd5f9376f8cee,Action;function $9c3c5e85872c2b24$export$2e2bcd8739ae039(){return $9c3c5e85872c2b24$export$2e2bcd8739ae039=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},$9c3c5e85872c2b24$export$2e2bcd8739ae039.apply(this,arguments)}Action=$06e105ab24f6c561$export$e19cd5f9376f8cee||($06e105ab24f6c561$export$e19cd5f9376f8cee={}),Action.Pop="POP",Action.Push="PUSH",Action.Replace="REPLACE";var $06e105ab24f6c561$var$readOnly=function(e){return e};function $06e105ab24f6c561$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}var $06e105ab24f6c561$var$BeforeUnloadEventType="beforeunload",$06e105ab24f6c561$var$HashChangeEventType="hashchange",$06e105ab24f6c561$var$PopStateEventType="popstate";function $06e105ab24f6c561$export$719fc203c4e16dee(e){var t=function(){var e=s.location,t=e.pathname,r=e.search,n=e.hash,a=l.state||{};return[a.idx,$06e105ab24f6c561$var$readOnly({pathname:t,search:r,hash:n,state:a.usr||null,key:a.key||"default"})]},r=function(e){return"string"==typeof e?e:$06e105ab24f6c561$export$fe53371bee54353d(e)},n=function(e,t){return void 0===t&&(t=null),$06e105ab24f6c561$var$readOnly($9c3c5e85872c2b24$export$2e2bcd8739ae039({pathname:v.pathname,hash:"",search:""},"string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e,{state:t,key:$06e105ab24f6c561$var$createKey()}))},a=function(e,t){return[{usr:e.state,key:e.key,idx:t},r(e)]},o=function(e,t,r){return!y.length||(y.call({action:e,location:t,retry:r}),!1)},i=function(e){p=e;var r=t();h=r[0],v=r[1],m.call({action:p,location:v})},u=function(e){l.go(e)};void 0===e&&(e={});var c=e.window,s=void 0===c?document.defaultView:c,l=s.history,f=null;s.addEventListener($06e105ab24f6c561$var$PopStateEventType,(function(){if(f)y.call(f),f=null;else{var e=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,r=t(),n=r[0],a=r[1];if(y.length){if(null!=n){var o=h-n;o&&(f={action:e,location:a,retry:function(){u(-1*o)}},u(o))}}else i(e)}}));var p=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,d=t(),h=d[0],v=d[1],m=$06e105ab24f6c561$var$createEvents(),y=$06e105ab24f6c561$var$createEvents();null==h&&(h=0,l.replaceState($9c3c5e85872c2b24$export$2e2bcd8739ae039({},l.state,{idx:h}),""));var b={get action(){return p},get location(){return v},createHref:r,push:function e(t,r){var u=$06e105ab24f6c561$export$e19cd5f9376f8cee.Push,c=n(t,r);if(o(u,c,(function(){e(t,r)}))){var f=a(c,h+1),p=f[0],d=f[1];try{l.pushState(p,"",d)}catch(e){s.location.assign(d)}i(u)}},replace:function e(t,r){var u=$06e105ab24f6c561$export$e19cd5f9376f8cee.Replace,c=n(t,r);if(o(u,c,(function(){e(t,r)}))){var s=a(c,h),f=s[0],p=s[1];l.replaceState(f,"",p),i(u)}},go:u,back:function(){u(-1)},forward:function(){u(1)},listen:function(e){return m.push(e)},block:function(e){var t=y.push(e);return 1===y.length&&s.addEventListener($06e105ab24f6c561$var$BeforeUnloadEventType,$06e105ab24f6c561$var$promptBeforeUnload),function(){t(),y.length||s.removeEventListener($06e105ab24f6c561$var$BeforeUnloadEventType,$06e105ab24f6c561$var$promptBeforeUnload)}}};return b}function $06e105ab24f6c561$export$b71fdd3798280242(e){var t=function(){var e=$06e105ab24f6c561$export$8ccf933b0513f8d0(l.location.hash.substr(1)),t=e.pathname,r=void 0===t?"/":t,n=e.search,a=void 0===n?"":n,o=e.hash,i=void 0===o?"":o,u=f.state||{};return[u.idx,$06e105ab24f6c561$var$readOnly({pathname:r,search:a,hash:i,state:u.usr||null,key:u.key||"default"})]},r=function(){if(p)b.call(p),p=null;else{var e=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,r=t(),n=r[0],a=r[1];if(b.length){if(null!=n){var o=v-n;o&&(p={action:e,location:a,retry:function(){c(-1*o)}},c(o))}}else u(e)}},n=function(e){return function(){var e=document.querySelector("base"),t="";if(e&&e.getAttribute("href")){var r=l.location.href,n=r.indexOf("#");t=-1===n?r:r.slice(0,n)}return t}()+"#"+("string"==typeof e?e:$06e105ab24f6c561$export$fe53371bee54353d(e))},a=function(e,t){return void 0===t&&(t=null),$06e105ab24f6c561$var$readOnly($9c3c5e85872c2b24$export$2e2bcd8739ae039({pathname:m.pathname,hash:"",search:""},"string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e,{state:t,key:$06e105ab24f6c561$var$createKey()}))},o=function(e,t){return[{usr:e.state,key:e.key,idx:t},n(e)]},i=function(e,t,r){return!b.length||(b.call({action:e,location:t,retry:r}),!1)},u=function(e){d=e;var r=t();v=r[0],m=r[1],y.call({action:d,location:m})},c=function(e){f.go(e)};void 0===e&&(e={});var s=e.window,l=void 0===s?document.defaultView:s,f=l.history,p=null;l.addEventListener($06e105ab24f6c561$var$PopStateEventType,r),l.addEventListener($06e105ab24f6c561$var$HashChangeEventType,(function(){$06e105ab24f6c561$export$fe53371bee54353d(t()[1])!==$06e105ab24f6c561$export$fe53371bee54353d(m)&&r()}));var d=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,h=t(),v=h[0],m=h[1],y=$06e105ab24f6c561$var$createEvents(),b=$06e105ab24f6c561$var$createEvents();null==v&&(v=0,f.replaceState($9c3c5e85872c2b24$export$2e2bcd8739ae039({},f.state,{idx:v}),""));var g={get action(){return d},get location(){return m},createHref:n,push:function e(t,r){var n=$06e105ab24f6c561$export$e19cd5f9376f8cee.Push,c=a(t,r);if(i(n,c,(function(){e(t,r)}))){var s=o(c,v+1),p=s[0],d=s[1];try{f.pushState(p,"",d)}catch(e){l.location.assign(d)}u(n)}},replace:function e(t,r){var n=$06e105ab24f6c561$export$e19cd5f9376f8cee.Replace,c=a(t,r);if(i(n,c,(function(){e(t,r)}))){var s=o(c,v),l=s[0],p=s[1];f.replaceState(l,"",p),u(n)}},go:c,back:function(){c(-1)},forward:function(){c(1)},listen:function(e){return y.push(e)},block:function(e){var t=b.push(e);return 1===b.length&&l.addEventListener($06e105ab24f6c561$var$BeforeUnloadEventType,$06e105ab24f6c561$var$promptBeforeUnload),function(){t(),b.length||l.removeEventListener($06e105ab24f6c561$var$BeforeUnloadEventType,$06e105ab24f6c561$var$promptBeforeUnload)}}};return g}function $06e105ab24f6c561$export$2b76ad033c6e6d08(e){var t=function(e,t){return void 0===t&&(t=null),$06e105ab24f6c561$var$readOnly($9c3c5e85872c2b24$export$2e2bcd8739ae039({pathname:f.pathname,search:"",hash:""},"string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e,{state:t,key:$06e105ab24f6c561$var$createKey()}))},r=function(e,t,r){return!d.length||(d.call({action:e,location:t,retry:r}),!1)},n=function(e,t){l=e,f=t,p.call({action:l,location:f})};void 0===e&&(e={});var a=e,o=a.initialEntries,i=void 0===o?["/"]:o,u=a.initialIndex,c=i.map((function(e){return $06e105ab24f6c561$var$readOnly($9c3c5e85872c2b24$export$2e2bcd8739ae039({pathname:"/",search:"",hash:"",state:null,key:$06e105ab24f6c561$var$createKey()},"string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e))})),s=$06e105ab24f6c561$var$clamp(null==u?c.length-1:u,0,c.length-1),l=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,f=c[s],p=$06e105ab24f6c561$var$createEvents(),d=$06e105ab24f6c561$var$createEvents();function h(e){var t=$06e105ab24f6c561$var$clamp(s+e,0,c.length-1),a=$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop,o=c[t];r(a,o,(function(){h(e)}))&&(s=t,n(a,o))}var v={get index(){return s},get action(){return l},get location(){return f},createHref:function(e){return"string"==typeof e?e:$06e105ab24f6c561$export$fe53371bee54353d(e)},push:function e(a,o){var i=$06e105ab24f6c561$export$e19cd5f9376f8cee.Push,u=t(a,o);r(i,u,(function(){e(a,o)}))&&(s+=1,c.splice(s,c.length,u),n(i,u))},replace:function e(a,o){var i=$06e105ab24f6c561$export$e19cd5f9376f8cee.Replace,u=t(a,o);r(i,u,(function(){e(a,o)}))&&(c[s]=u,n(i,u))},go:h,back:function(){h(-1)},forward:function(){h(1)},listen:function(e){return p.push(e)},block:function(e){return d.push(e)}};return v}function $06e105ab24f6c561$var$clamp(e,t,r){return Math.min(Math.max(e,t),r)}function $06e105ab24f6c561$var$promptBeforeUnload(e){e.preventDefault(),e.returnValue=""}function $06e105ab24f6c561$var$createEvents(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function $06e105ab24f6c561$var$createKey(){return Math.random().toString(36).substr(2,8)}function $06e105ab24f6c561$export$fe53371bee54353d(e){var t=e.pathname,r=void 0===t?"/":t,n=e.search,a=void 0===n?"":n,o=e.hash,i=void 0===o?"":o;return a&&"?"!==a&&(r+="?"===a.charAt(0)?a:"?"+a),i&&"#"!==i&&(r+="#"===i.charAt(0)?i:"#"+i),r}function $06e105ab24f6c561$export$8ccf933b0513f8d0(e){var t={};if(e){var r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));var n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}var $hNZKs=parcelRequire("hNZKs"),$6cds3=parcelRequire("6cds3"),$f73f9126b1f83e8a$export$26749e8557646306=(0,$6cds3.createContext)(null),$f73f9126b1f83e8a$export$c7914228fb69b0f5=(0,$6cds3.createContext)(null),$f73f9126b1f83e8a$export$9072aa6dd1f93057=(0,$6cds3.createContext)({outlet:null,matches:[]});function $f73f9126b1f83e8a$var$invariant(e,t){if(!e)throw new Error(t)}function $f73f9126b1f83e8a$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}var $f73f9126b1f83e8a$var$alreadyWarned={};function $f73f9126b1f83e8a$var$warningOnce(e,t,r){t||$f73f9126b1f83e8a$var$alreadyWarned[e]||($f73f9126b1f83e8a$var$alreadyWarned[e]=!0)}function $f73f9126b1f83e8a$export$82476f982757e71e(e,t){return void 0===t&&(t={}),e.replace(/:(\w+)/g,(function(e,r){return null==t[r]&&$f73f9126b1f83e8a$var$invariant(!1),t[r]})).replace(/\/*\*$/,(function(e){return null==t["*"]?"":t["*"].replace(/^\/*/,"/")}))}function $f73f9126b1f83e8a$export$2708184779ceb39d(e,t,r){void 0===r&&(r="/");var n=$f73f9126b1f83e8a$var$stripBasename(("string"==typeof t?$06e105ab24f6c561$export$8ccf933b0513f8d0(t):t).pathname||"/",r);if(null==n)return null;var a=$f73f9126b1f83e8a$var$flattenRoutes(e);$f73f9126b1f83e8a$var$rankRouteBranches(a);for(var o=null,i=0;null==o&&i<a.length;++i)o=$f73f9126b1f83e8a$var$matchRouteBranch(a[i],n);return o}function $f73f9126b1f83e8a$var$flattenRoutes(e,t,r,n){return void 0===t&&(t=[]),void 0===r&&(r=[]),void 0===n&&(n=""),e.forEach((function(e,a){var o={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};o.relativePath.startsWith("/")&&(!o.relativePath.startsWith(n)&&$f73f9126b1f83e8a$var$invariant(!1),o.relativePath=o.relativePath.slice(n.length));var i=$f73f9126b1f83e8a$var$joinPaths([n,o.relativePath]),u=r.concat(o);e.children&&e.children.length>0&&(!0===e.index&&$f73f9126b1f83e8a$var$invariant(!1),$f73f9126b1f83e8a$var$flattenRoutes(e.children,t,u,i)),(null!=e.path||e.index)&&t.push({path:i,score:$f73f9126b1f83e8a$var$computeScore(i,e.index),routesMeta:u})})),t}function $f73f9126b1f83e8a$var$rankRouteBranches(e){e.sort((function(e,t){return e.score!==t.score?t.score-e.score:$f73f9126b1f83e8a$var$compareIndexes(e.routesMeta.map((function(e){return e.childrenIndex})),t.routesMeta.map((function(e){return e.childrenIndex})))}))}var $f73f9126b1f83e8a$var$paramRe=/^:\w+$/,$f73f9126b1f83e8a$var$dynamicSegmentValue=3,$f73f9126b1f83e8a$var$indexRouteValue=2,$f73f9126b1f83e8a$var$emptySegmentValue=1,$f73f9126b1f83e8a$var$staticSegmentValue=10,$f73f9126b1f83e8a$var$splatPenalty=-2,$f73f9126b1f83e8a$var$isSplat=function(e){return"*"===e};function $f73f9126b1f83e8a$var$computeScore(e,t){var r=e.split("/"),n=r.length;return r.some($f73f9126b1f83e8a$var$isSplat)&&(n+=$f73f9126b1f83e8a$var$splatPenalty),t&&(n+=$f73f9126b1f83e8a$var$indexRouteValue),r.filter((function(e){return!$f73f9126b1f83e8a$var$isSplat(e)})).reduce((function(e,t){return e+($f73f9126b1f83e8a$var$paramRe.test(t)?$f73f9126b1f83e8a$var$dynamicSegmentValue:""===t?$f73f9126b1f83e8a$var$emptySegmentValue:$f73f9126b1f83e8a$var$staticSegmentValue)}),n)}function $f73f9126b1f83e8a$var$compareIndexes(e,t){return e.length===t.length&&e.slice(0,-1).every((function(e,r){return e===t[r]}))?e[e.length-1]-t[t.length-1]:0}function $f73f9126b1f83e8a$var$matchRouteBranch(e,t){for(var r=e.routesMeta,n={},a="/",o=[],i=0;i<r.length;++i){var u=r[i],c=i===r.length-1,s="/"===a?t:t.slice(a.length)||"/",l=$f73f9126b1f83e8a$export$81336c211d5ff295({path:u.relativePath,caseSensitive:u.caseSensitive,end:c},s);if(!l)return null;Object.assign(n,l.params);var f=u.route;o.push({params:n,pathname:$f73f9126b1f83e8a$var$joinPaths([a,l.pathname]),pathnameBase:$f73f9126b1f83e8a$var$normalizePathname($f73f9126b1f83e8a$var$joinPaths([a,l.pathnameBase])),route:f}),"/"!==l.pathnameBase&&(a=$f73f9126b1f83e8a$var$joinPaths([a,l.pathnameBase]))}return o}function $f73f9126b1f83e8a$export$81336c211d5ff295(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});var r=(0,$hNZKs.default)($f73f9126b1f83e8a$var$compilePath(e.path,e.caseSensitive,e.end),2),n=r[0],a=r[1],o=t.match(n);if(!o)return null;var i=o[0],u=i.replace(/(.)\/+$/,"$1"),c=o.slice(1);return{params:a.reduce((function(e,t,r){if("*"===t){var n=c[r]||"";u=i.slice(0,i.length-n.length).replace(/(.)\/+$/,"$1")}return e[t]=$f73f9126b1f83e8a$var$safelyDecodeURIComponent(c[r]||"",t),e}),{}),pathname:i,pathnameBase:u,pattern:e}}function $f73f9126b1f83e8a$var$compilePath(e,t,r){void 0===t&&(t=!1),void 0===r&&(r=!0);var n=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(function(e,t){return n.push(t),"([^\\/]+)"}));return e.endsWith("*")?(n.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):a+=r?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(a,t?void 0:"i"),n]}function $f73f9126b1f83e8a$var$safelyDecodeURIComponent(e,t){try{return decodeURIComponent(e)}catch(t){return e}}function $f73f9126b1f83e8a$export$b09f2ff0bbcb43c7(e,t){void 0===t&&(t="/");var r="string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e,n=r.pathname,a=r.search,o=void 0===a?"":a,i=r.hash,u=void 0===i?"":i;return{pathname:n?n.startsWith("/")?n:$f73f9126b1f83e8a$var$resolvePathname(n,t):t,search:$f73f9126b1f83e8a$var$normalizeSearch(o),hash:$f73f9126b1f83e8a$var$normalizeHash(u)}}function $f73f9126b1f83e8a$var$resolvePathname(e,t){var r=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((function(e){".."===e?r.length>1&&r.pop():"."!==e&&r.push(e)})),r.length>1?r.join("/"):"/"}function $f73f9126b1f83e8a$var$resolveTo(e,t,r){var n,a="string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e):e,o=""===e||""===a.pathname?"/":a.pathname;if(null==o)n=r;else{var i=t.length-1;if(o.startsWith("..")){for(var u=o.split("/");".."===u[0];)u.shift(),i-=1;a.pathname=u.join("/")}n=i>=0?t[i]:"/"}var c=$f73f9126b1f83e8a$export$b09f2ff0bbcb43c7(a,n);return o&&"/"!==o&&o.endsWith("/")&&!c.pathname.endsWith("/")&&(c.pathname+="/"),c}function $f73f9126b1f83e8a$var$getToPathname(e){return""===e||""===e.pathname?"/":"string"==typeof e?$06e105ab24f6c561$export$8ccf933b0513f8d0(e).pathname:e.pathname}function $f73f9126b1f83e8a$var$stripBasename(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;var r=e.charAt(t.length);return r&&"/"!==r?null:e.slice(t.length)||"/"}var $f73f9126b1f83e8a$var$joinPaths=function(e){return e.join("/").replace(/\/\/+/g,"/")},$f73f9126b1f83e8a$var$normalizePathname=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},$f73f9126b1f83e8a$var$normalizeSearch=function(e){return e&&"?"!==e?e.startsWith("?")?e:"?"+e:""},$f73f9126b1f83e8a$var$normalizeHash=function(e){return e&&"#"!==e?e.startsWith("#")?e:"#"+e:""};function $f73f9126b1f83e8a$export$b66bb29c5006f12f(e){!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var t=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$26749e8557646306),r=t.basename,n=t.navigator,a=$f73f9126b1f83e8a$export$e75d2a2d1b3c245b(e),o=a.hash,i=a.pathname,u=a.search,c=i;if("/"!==r){var s=$f73f9126b1f83e8a$var$getToPathname(e),l=null!=s&&s.endsWith("/");c="/"===i?r+(l?"/":""):$f73f9126b1f83e8a$var$joinPaths([r,i])}return n.createHref({pathname:c,search:u,hash:o})}function $f73f9126b1f83e8a$export$9c954a9d03d32f4a(){return null!=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$c7914228fb69b0f5)}function $f73f9126b1f83e8a$export$45d76561a5302f2b(){return!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1),(0,$6cds3.useContext)($f73f9126b1f83e8a$export$c7914228fb69b0f5).location}function $f73f9126b1f83e8a$export$1b3f31771c5d07c(){return(0,$6cds3.useContext)($f73f9126b1f83e8a$export$c7914228fb69b0f5).navigationType}function $f73f9126b1f83e8a$export$6c330e8992e8a295(e){!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var t=$f73f9126b1f83e8a$export$45d76561a5302f2b().pathname;return(0,$6cds3.useMemo)((function(){return $f73f9126b1f83e8a$export$81336c211d5ff295(e,t)}),[t,e])}function $f73f9126b1f83e8a$export$9770f232ac06a008(){!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var e=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$26749e8557646306),t=e.basename,r=e.navigator,n=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$9072aa6dd1f93057).matches,a=$f73f9126b1f83e8a$export$45d76561a5302f2b().pathname,o=JSON.stringify(n.map((function(e){return e.pathnameBase}))),i=(0,$6cds3.useRef)(!1);return(0,$6cds3.useEffect)((function(){i.current=!0})),(0,$6cds3.useCallback)((function(e,n){if(void 0===n&&(n={}),i.current)if("number"!=typeof e){var u=$f73f9126b1f83e8a$var$resolveTo(e,JSON.parse(o),a);"/"!==t&&(u.pathname=$f73f9126b1f83e8a$var$joinPaths([t,u.pathname])),(n.replace?r.replace:r.push)(u,n.state)}else r.go(e)}),[t,r,o,a])}var $f73f9126b1f83e8a$var$OutletContext=(0,$6cds3.createContext)(null);function $f73f9126b1f83e8a$export$4138103a3ae699cc(){return(0,$6cds3.useContext)($f73f9126b1f83e8a$var$OutletContext)}function $f73f9126b1f83e8a$export$a3be3530d8e40d0b(e){var t=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$9072aa6dd1f93057).outlet;return t?(0,$6cds3.createElement)($f73f9126b1f83e8a$var$OutletContext.Provider,{value:e},t):t}function $f73f9126b1f83e8a$export$99eaa27ddbbb95ef(){var e=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$9072aa6dd1f93057).matches,t=e[e.length-1];return t?t.params:{}}function $f73f9126b1f83e8a$export$e75d2a2d1b3c245b(e){var t=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$9072aa6dd1f93057).matches,r=$f73f9126b1f83e8a$export$45d76561a5302f2b().pathname,n=JSON.stringify(t.map((function(e){return e.pathnameBase})));return(0,$6cds3.useMemo)((function(){return $f73f9126b1f83e8a$var$resolveTo(e,JSON.parse(n),r)}),[e,n,r])}function $f73f9126b1f83e8a$export$5d3fca4a98652595(e,t){!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var r,n=(0,$6cds3.useContext)($f73f9126b1f83e8a$export$9072aa6dd1f93057).matches,a=n[n.length-1],o=a?a.params:{},i=(a&&a.pathname,a?a.pathnameBase:"/"),u=(a&&a.route,$f73f9126b1f83e8a$export$45d76561a5302f2b());if(t){var c,s="string"==typeof t?$06e105ab24f6c561$export$8ccf933b0513f8d0(t):t;"/"!==i&&!(null==(c=s.pathname)?void 0:c.startsWith(i))&&$f73f9126b1f83e8a$var$invariant(!1),r=s}else r=u;var l=r.pathname||"/",f=$f73f9126b1f83e8a$export$2708184779ceb39d(e,{pathname:"/"===i?l:l.slice(i.length)||"/"});return $f73f9126b1f83e8a$var$_renderMatches(f&&f.map((function(e){return Object.assign({},e,{params:Object.assign({},o,e.params),pathname:$f73f9126b1f83e8a$var$joinPaths([i,e.pathname]),pathnameBase:"/"===e.pathnameBase?i:$f73f9126b1f83e8a$var$joinPaths([i,e.pathnameBase])})})),n)}function $f73f9126b1f83e8a$var$_renderMatches(e,t){return void 0===t&&(t=[]),null==e?null:e.reduceRight((function(r,n,a){return(0,$6cds3.createElement)($f73f9126b1f83e8a$export$9072aa6dd1f93057.Provider,{children:void 0!==n.route.element?n.route.element:r,value:{outlet:r,matches:t.concat(e.slice(0,a+1))}})}),null)}function $f73f9126b1f83e8a$export$ae46f04cfaffe093(e){var t=e.basename,r=e.children,n=e.initialEntries,a=e.initialIndex,o=(0,$6cds3.useRef)();null==o.current&&(o.current=$06e105ab24f6c561$export$2b76ad033c6e6d08({initialEntries:n,initialIndex:a}));var i=o.current,u=(0,$hNZKs.default)((0,$6cds3.useState)({action:i.action,location:i.location}),2),c=u[0],s=u[1];return(0,$6cds3.useLayoutEffect)((function(){return i.listen(s)}),[i]),(0,$6cds3.createElement)($f73f9126b1f83e8a$export$55185c17a0fcbe46,{basename:t,children:r,location:c.location,navigationType:c.action,navigator:i})}function $f73f9126b1f83e8a$export$444b3ab0cb9aec40(e){var t=e.to,r=e.replace,n=e.state;!$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var a=$f73f9126b1f83e8a$export$9770f232ac06a008();return(0,$6cds3.useEffect)((function(){a(t,{replace:r,state:n})})),null}function $f73f9126b1f83e8a$export$910ae8079b2c2852(e){return $f73f9126b1f83e8a$export$a3be3530d8e40d0b(e.context)}function $f73f9126b1f83e8a$export$e7b0ac011bb776c6(e){$f73f9126b1f83e8a$var$invariant(!1)}function $f73f9126b1f83e8a$export$55185c17a0fcbe46(e){var t=e.basename,r=void 0===t?"/":t,n=e.children,a=void 0===n?null:n,o=e.location,i=e.navigationType,u=void 0===i?$06e105ab24f6c561$export$e19cd5f9376f8cee.Pop:i,c=e.navigator,s=e.static,l=void 0!==s&&s;$f73f9126b1f83e8a$export$9c954a9d03d32f4a()&&$f73f9126b1f83e8a$var$invariant(!1);var f=$f73f9126b1f83e8a$var$normalizePathname(r),p=(0,$6cds3.useMemo)((function(){return{basename:f,navigator:c,static:l}}),[f,c,l]);"string"==typeof o&&(o=$06e105ab24f6c561$export$8ccf933b0513f8d0(o));var d=o.pathname,h=void 0===d?"/":d,v=o.search,m=void 0===v?"":v,y=o.hash,b=void 0===y?"":y,g=o.state,$=void 0===g?null:g,w=o.key,x=void 0===w?"default":w,k=(0,$6cds3.useMemo)((function(){var e=$f73f9126b1f83e8a$var$stripBasename(h,f);return null==e?null:{pathname:e,search:m,hash:b,state:$,key:x}}),[f,h,m,b,$,x]);return null==k?null:(0,$6cds3.createElement)($f73f9126b1f83e8a$export$26749e8557646306.Provider,{value:p},(0,$6cds3.createElement)($f73f9126b1f83e8a$export$c7914228fb69b0f5.Provider,{children:a,value:{location:k,navigationType:u}}))}function $f73f9126b1f83e8a$export$3565eb3d00ca5a74(e){var t=e.children,r=e.location;return $f73f9126b1f83e8a$export$5d3fca4a98652595($f73f9126b1f83e8a$export$16da398f5434bdec(t),r)}function $f73f9126b1f83e8a$export$16da398f5434bdec(e){var t=[];return $6cds3.Children.forEach(e,(function(e){if((0,$6cds3.isValidElement)(e))if(e.type!==$6cds3.Fragment){e.type!==$f73f9126b1f83e8a$export$e7b0ac011bb776c6&&$f73f9126b1f83e8a$var$invariant(!1);var r={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(r.children=$f73f9126b1f83e8a$export$16da398f5434bdec(e.props.children)),t.push(r)}else t.push.apply(t,$f73f9126b1f83e8a$export$16da398f5434bdec(e.props.children))})),t}function $f73f9126b1f83e8a$export$daf73786167a7f72(e){return $f73f9126b1f83e8a$var$_renderMatches(e)}function $4a58c45c402afb9a$var$_extends(){return $4a58c45c402afb9a$var$_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},$4a58c45c402afb9a$var$_extends.apply(this,arguments)}function $4a58c45c402afb9a$var$_objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}var $4a58c45c402afb9a$var$_excluded=["onClick","reloadDocument","replace","state","target","to"],$4a58c45c402afb9a$var$_excluded2=["aria-current","caseSensitive","className","end","style","to","children"];function $4a58c45c402afb9a$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function $4a58c45c402afb9a$export$9ba4e89fdfa1fc54(e){var t=e.basename,r=e.children,n=e.window,a=(0,$6cds3.useRef)();null==a.current&&(a.current=$06e105ab24f6c561$export$719fc203c4e16dee({window:n}));var o=a.current,i=(0,$hNZKs.default)((0,$6cds3.useState)({action:o.action,location:o.location}),2),u=i[0],c=i[1];return(0,$6cds3.useLayoutEffect)((function(){return o.listen(c)}),[o]),(0,$6cds3.createElement)($f73f9126b1f83e8a$export$55185c17a0fcbe46,{basename:t,children:r,location:u.location,navigationType:u.action,navigator:o})}function $4a58c45c402afb9a$export$7221d69dcfc8e36b(e){var t=e.basename,r=e.children,n=e.window,a=(0,$6cds3.useRef)();null==a.current&&(a.current=$06e105ab24f6c561$export$b71fdd3798280242({window:n}));var o=a.current,i=(0,$hNZKs.default)((0,$6cds3.useState)({action:o.action,location:o.location}),2),u=i[0],c=i[1];return(0,$6cds3.useLayoutEffect)((function(){return o.listen(c)}),[o]),(0,$6cds3.createElement)($f73f9126b1f83e8a$export$55185c17a0fcbe46,{basename:t,children:r,location:u.location,navigationType:u.action,navigator:o})}function $4a58c45c402afb9a$export$eefb0c834599897e(e){var t=e.basename,r=e.children,n=e.history,a=(0,$hNZKs.default)((0,$6cds3.useState)({action:n.action,location:n.location}),2),o=a[0],i=a[1];return(0,$6cds3.useLayoutEffect)((function(){return n.listen(i)}),[n]),(0,$6cds3.createElement)($f73f9126b1f83e8a$export$55185c17a0fcbe46,{basename:t,children:r,location:o.location,navigationType:o.action,navigator:n})}function $4a58c45c402afb9a$var$isModifiedEvent(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}var $4a58c45c402afb9a$export$a6c7ac8248d6e38a=(0,$6cds3.forwardRef)((function(e,t){var r=e.onClick,n=e.reloadDocument,a=e.replace,o=void 0!==a&&a,i=e.state,u=e.target,c=e.to,s=$4a58c45c402afb9a$var$_objectWithoutPropertiesLoose(e,$4a58c45c402afb9a$var$_excluded),l=$f73f9126b1f83e8a$export$b66bb29c5006f12f(c),f=$4a58c45c402afb9a$export$67621102c14d847(c,{replace:o,state:i,target:u});return(0,$6cds3.createElement)("a",$4a58c45c402afb9a$var$_extends({},s,{href:l,onClick:function(e){r&&r(e),e.defaultPrevented||n||f(e)},ref:t,target:u}))})),$4a58c45c402afb9a$export$b0d92dbee9b5b60d=(0,$6cds3.forwardRef)((function(e,t){var r=e["aria-current"],n=void 0===r?"page":r,a=e.caseSensitive,o=void 0!==a&&a,i=e.className,u=void 0===i?"":i,c=e.end,s=void 0!==c&&c,l=e.style,f=e.to,p=e.children,d=$4a58c45c402afb9a$var$_objectWithoutPropertiesLoose(e,$4a58c45c402afb9a$var$_excluded2),h=$f73f9126b1f83e8a$export$45d76561a5302f2b(),v=$f73f9126b1f83e8a$export$e75d2a2d1b3c245b(f),m=h.pathname,y=v.pathname;o||(m=m.toLowerCase(),y=y.toLowerCase());var b,g=m===y||!s&&m.startsWith(y)&&"/"===m.charAt(y.length),$=g?n:void 0;b="function"==typeof u?u({isActive:g}):[u,g?"active":null].filter(Boolean).join(" ");var w="function"==typeof l?l({isActive:g}):l;return(0,$6cds3.createElement)($4a58c45c402afb9a$export$a6c7ac8248d6e38a,$4a58c45c402afb9a$var$_extends({},d,{"aria-current":$,className:b,ref:t,style:w,to:f}),"function"==typeof p?p({isActive:g}):p)}));function $4a58c45c402afb9a$export$67621102c14d847(e,t){var r=void 0===t?{}:t,n=r.target,a=r.replace,o=r.state,i=$f73f9126b1f83e8a$export$9770f232ac06a008(),u=$f73f9126b1f83e8a$export$45d76561a5302f2b(),c=$f73f9126b1f83e8a$export$e75d2a2d1b3c245b(e);return(0,$6cds3.useCallback)((function(t){if(!(0!==t.button||n&&"_self"!==n||$4a58c45c402afb9a$var$isModifiedEvent(t))){t.preventDefault();var r=!!a||$06e105ab24f6c561$export$fe53371bee54353d(u)===$06e105ab24f6c561$export$fe53371bee54353d(c);i(e,{replace:r,state:o})}}),[u,i,c,a,o,n,e])}function $4a58c45c402afb9a$export$f1a78c17382fe22a(e){var t=(0,$6cds3.useRef)($4a58c45c402afb9a$export$a2e4e2dcc7b1f22f(e)),r=$f73f9126b1f83e8a$export$45d76561a5302f2b(),n=(0,$6cds3.useMemo)((function(){var e=$4a58c45c402afb9a$export$a2e4e2dcc7b1f22f(r.search),n=!0,a=!1,o=void 0;try{for(var i,u=function(r,n){var a=n.value;e.has(a)||t.current.getAll(a).forEach((function(t){e.append(a,t)}))},c=t.current.keys()[Symbol.iterator]();!(n=(i=c.next()).done);n=!0)u(0,i)}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return e}),[r.search]),a=$f73f9126b1f83e8a$export$9770f232ac06a008();return[n,(0,$6cds3.useCallback)((function(e,t){a("?"+$4a58c45c402afb9a$export$a2e4e2dcc7b1f22f(e),t)}),[a])]}function $4a58c45c402afb9a$export$a2e4e2dcc7b1f22f(e){return void 0===e&&(e=""),new URLSearchParams("string"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce((function(t,r){var n=e[r];return t.concat(Array.isArray(n)?n.map((function(e){return[r,e]})):[[r,n]])}),[]))}var $1zs4k=parcelRequire("1zs4k"),$hNZKs=parcelRequire("hNZKs"),$4Z8U5=parcelRequire("4Z8U5"),$6cds3=parcelRequire("6cds3"),$1zs4k=parcelRequire("1zs4k"),$4Z8U5=parcelRequire("4Z8U5"),$c1be85fca55b560a$exports={},$c1be85fca55b560a$var$__createBinding=$c1be85fca55b560a$exports&&$c1be85fca55b560a$exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),$c1be85fca55b560a$var$__setModuleDefault=$c1be85fca55b560a$exports&&$c1be85fca55b560a$exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),$c1be85fca55b560a$var$__importStar=$c1be85fca55b560a$exports&&$c1be85fca55b560a$exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&$c1be85fca55b560a$var$__createBinding(t,e,r);return $c1be85fca55b560a$var$__setModuleDefault(t,e),t},$c1be85fca55b560a$var$__exportStar=$c1be85fca55b560a$exports&&$c1be85fca55b560a$exports.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||$c1be85fca55b560a$var$__createBinding(t,e,r)};Object.defineProperty($c1be85fca55b560a$exports,"__esModule",{value:!0}),$c1be85fca55b560a$exports.keyStores=$c1be85fca55b560a$var$__importStar(parcelRequire("7KkEL")),$c1be85fca55b560a$var$__exportStar(parcelRequire("hHZrX"),$c1be85fca55b560a$exports),$c1be85fca55b560a$var$__exportStar(parcelRequire("85znT"),$c1be85fca55b560a$exports);var $01b3352f6ea28008$exports={};$01b3352f6ea28008$exports=parcelRequire("fU2q1");var $f8977c02c2f7dd22$var$CONTRACT_NAME=void 0;function $f8977c02c2f7dd22$export$44487a86467333c3(e){switch(e){case"production":case"mainnet":return{networkId:"mainnet",nodeUrl:"https://rpc.mainnet.near.org",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME,walletUrl:"https://wallet.near.org",helperUrl:"https://helper.mainnet.near.org",explorerUrl:"https://explorer.mainnet.near.org"};case"development":case"testnet":return{networkId:"testnet",nodeUrl:"https://rpc.testnet.near.org",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME,walletUrl:"https://wallet.testnet.near.org",helperUrl:"https://helper.testnet.near.org",explorerUrl:"https://explorer.testnet.near.org"};case"betanet":return{networkId:"betanet",nodeUrl:"https://rpc.betanet.near.org",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME,walletUrl:"https://wallet.betanet.near.org",helperUrl:"https://helper.betanet.near.org",explorerUrl:"https://explorer.betanet.near.org"};case"local":return{networkId:"local",nodeUrl:"http://localhost:3030",keyPath:"/Users/harukikondo/.near/validator_key.json",walletUrl:"http://localhost:4000/wallet",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME};case"test":case"ci":return{networkId:"shared-test",nodeUrl:"https://rpc.ci-testnet.near.org",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME,masterAccount:"test.near"};case"ci-betanet":return{networkId:"shared-test-staging",nodeUrl:"https://rpc.ci-betanet.near.org",contractName:$f8977c02c2f7dd22$var$CONTRACT_NAME,masterAccount:"test.near"};default:throw Error("Unconfigured environment '".concat(e,"'. Can be configured in src/config.js."))}}var $jlWHo=parcelRequire("jlWHo"),$d04650fb1e3f877c$var$nearConfig=$f8977c02c2f7dd22$export$44487a86467333c3("production");function $d04650fb1e3f877c$export$32789f8ce7a59bb6(){return $d04650fb1e3f877c$var$_initContract.apply(this,arguments)}function $d04650fb1e3f877c$var$_initContract(){return($d04650fb1e3f877c$var$_initContract=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){var t;return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,$c1be85fca55b560a$exports.connect)(Object.assign({deps:{keyStore:new $c1be85fca55b560a$exports.keyStores.BrowserLocalStorageKeyStore}},$d04650fb1e3f877c$var$nearConfig));case 2:return t=e.sent,window.walletConnection=new(0,$c1be85fca55b560a$exports.WalletConnection)(t),window.accountId=window.walletConnection.getAccountId(),e.next=7,new(0,$c1be85fca55b560a$exports.Contract)(window.walletConnection.account(),$d04650fb1e3f877c$var$nearConfig.contractName,{viewMethods:["nft_metadata","nft_tokens_for_kind","nft_return_candidate_likes","check_voter_has_been_added","check_voter_has_voted","if_election_closed"],changeMethods:["new_default_meta","nft_mint","nft_transfer","nft_add_likes_to_candidate","voter_voted","close_election","reopen_election"]});case 7:window.contract=e.sent;case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$a0973bcfe11b05c9(){window.walletConnection.signOut(),window.location.replace(window.location.origin+window.location.pathname)}function $d04650fb1e3f877c$export$596d806903d1f59e(){window.walletConnection.requestSignIn($d04650fb1e3f877c$var$nearConfig.contractName)}function $d04650fb1e3f877c$export$532bae3a9e2b8b87(){return $d04650fb1e3f877c$var$_new_default_meta.apply(this,arguments)}function $d04650fb1e3f877c$var$_new_default_meta(){return($d04650fb1e3f877c$var$_new_default_meta=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.new_default_meta({owner_id:window.accountId});case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$632bd9ab6dba7ff7(e,t,r,n,a,o,i,u){return $d04650fb1e3f877c$var$_nft_mint.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_mint(){return($d04650fb1e3f877c$var$_nft_mint=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t,r,n,a,o,i,u,c){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_mint({metadata:{title:t,description:r,media:n,media_CID:a,candidate_name:o,candidate_manifest:i,token_kind:u},receiver_id:c},3e14,new $jlWHo("1000000000000000000000000"));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$b0e1854fd82ab232(e,t){return $d04650fb1e3f877c$var$_nft_transfer.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_transfer(){return($d04650fb1e3f877c$var$_nft_transfer=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t,r){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_transfer({receiver_id:t,token_id:r},3e14,new $jlWHo("1"));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$56bd6d2936ccd6cf(e){return $d04650fb1e3f877c$var$_nft_add_likes_to_candidate.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_add_likes_to_candidate(){return($d04650fb1e3f877c$var$_nft_add_likes_to_candidate=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_add_likes_to_candidate({token_id:t});case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$dda17c3f66e1e1ad(){return $d04650fb1e3f877c$var$_nft_metadata.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_metadata(){return($d04650fb1e3f877c$var$_nft_metadata=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){var t;return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_metadata();case 2:return t=e.sent,e.abrupt("return",t);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$65cdffd68bbec2fe(e){return $d04650fb1e3f877c$var$_nft_tokens_for_kind.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_tokens_for_kind(){return($d04650fb1e3f877c$var$_nft_tokens_for_kind=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){var r;return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_tokens_for_kind({token_kind:t});case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$c0b4cf505e0f4676(e){return $d04650fb1e3f877c$var$_nft_return_candidate_likes.apply(this,arguments)}function $d04650fb1e3f877c$var$_nft_return_candidate_likes(){return($d04650fb1e3f877c$var$_nft_return_candidate_likes=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){var r;return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.nft_return_candidate_likes({token_id:t});case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$f8d1fece213c1fbd(e){return $d04650fb1e3f877c$var$_check_voter_has_been_added.apply(this,arguments)}function $d04650fb1e3f877c$var$_check_voter_has_been_added(){return($d04650fb1e3f877c$var$_check_voter_has_been_added=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.check_voter_has_been_added({voter_id:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$1ecc0473ae248361(e){return $d04650fb1e3f877c$var$_check_voter_has_voted.apply(this,arguments)}function $d04650fb1e3f877c$var$_check_voter_has_voted(){return($d04650fb1e3f877c$var$_check_voter_has_voted=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.check_voter_has_voted({voter_id:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$7bedc6ca3b4ed0db(e){return $d04650fb1e3f877c$var$_voter_voted.apply(this,arguments)}function $d04650fb1e3f877c$var$_voter_voted(){return($d04650fb1e3f877c$var$_voter_voted=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(t){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.voter_voted({voter_id:t});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$6d0bd67c93ae3616(){return $d04650fb1e3f877c$var$_if_election_closed.apply(this,arguments)}function $d04650fb1e3f877c$var$_if_election_closed(){return($d04650fb1e3f877c$var$_if_election_closed=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.if_election_closed();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$2999ae38e81d7eac(){return $d04650fb1e3f877c$var$_close_election.apply(this,arguments)}function $d04650fb1e3f877c$var$_close_election(){return($d04650fb1e3f877c$var$_close_election=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.close_election();case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $d04650fb1e3f877c$export$f3fc5f415e7e53a1(){return $d04650fb1e3f877c$var$_reopen_election.apply(this,arguments)}function $d04650fb1e3f877c$var$_reopen_election(){return($d04650fb1e3f877c$var$_reopen_election=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.contract.reopen_election();case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}parcelRequire("6cds3");var $6cds3=parcelRequire("6cds3");function $e2bb3fa087a9df71$var$_regeneratorRuntime(){var e=function(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]},t=function(e,t,a,o){var i=t&&t.prototype instanceof n?t:n,u=Object.create(i.prototype),c=new l(o||[]);return u._invoke=function(e,t,n){var a="suspendedStart";return function(o,i){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===o)throw i;return p()}for(n.method=o,n.arg=i;;){var u=n.delegate;if(u){var c=S(u,n);if(c){if(c===$)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var s=r(e,t,n);if("normal"===s.type){if(a=n.done?"completed":"suspendedYield",s.arg===$)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a="completed",n.method="throw",n.arg=s.arg)}}}(e,a,c),u},r=function(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}},n=function(){},a=function(){},o=function(){},i=function(t){["next","throw","return"].forEach((function(r){e(t,r,(function(e){return this._invoke(r,e)}))}))},u=function(e,t){function n(a,o,i,u){var c=r(e[a],e,o);if("throw"!==c.type){var s=c.arg,l=s.value;return l&&"object"==typeof l&&v.call(l,"__await")?t.resolve(l.__await).then((function(e){n("next",e,i,u)}),(function(e){n("throw",e,i,u)})):t.resolve(l).then((function(e){s.value=e,i(s)}),(function(e){return n("throw",e,i,u)}))}u(c.arg)}var a;this._invoke=function(e,r){function o(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(o,o):o()}},c=function(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)},s=function(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t},l=function(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(c,this),this.reset(!0)},f=function(e){if(e){var t=e[y];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(v.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return n.next=n}}return{next:p}},p=function(){return{value:void 0,done:!0}};
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */$e2bb3fa087a9df71$var$_regeneratorRuntime=function(){return d};var d={},h=Object.prototype,v=h.hasOwnProperty,m="function"==typeof Symbol?Symbol:{},y=m.iterator||"@@iterator",b=m.asyncIterator||"@@asyncIterator",g=m.toStringTag||"@@toStringTag";try{e({},"")}catch(t){e=function(e,t,r){return e[t]=r}}d.wrap=t;var $={},w={};e(w,y,(function(){return this}));var x=Object.getPrototypeOf,k=x&&x(x(f([])));k&&k!==h&&v.call(k,y)&&(w=k);var _=o.prototype=n.prototype=Object.create(w);function S(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method))return $;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return $}var a=r(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,$;var o=a.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,$):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,$)}return a.prototype=o,e(_,"constructor",o),e(o,"constructor",a),a.displayName=e(o,g,"GeneratorFunction"),d.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===a||"GeneratorFunction"===(t.displayName||t.name))},d.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,o):(t.__proto__=o,e(t,g,"GeneratorFunction")),t.prototype=Object.create(_),t},d.awrap=function(e){return{__await:e}},i(u.prototype),e(u.prototype,b,(function(){return this})),d.AsyncIterator=u,d.async=function(e,r,n,a,o){void 0===o&&(o=Promise);var i=new u(t(e,r,n,a),o);return d.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},i(_),e(_,g,"Generator"),e(_,y,(function(){return this})),e(_,"toString",(function(){return"[object Generator]"})),d.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},d.values=f,l.prototype={constructor:l,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(s),!e)for(var t in this)"t"===t.charAt(0)&&v.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){var t=function(t,n){return o.type="throw",o.arg=e,r.next=t,n&&(r.method="next",r.arg=void 0),!!n};if(this.done)throw e;for(var r=this,n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n],o=a.completion;if("root"===a.tryLoc)return t("end");if(a.tryLoc<=this.prev){var i=v.call(a,"catchLoc"),u=v.call(a,"finallyLoc");if(i&&u){if(this.prev<a.catchLoc)return t(a.catchLoc,!0);if(this.prev<a.finallyLoc)return t(a.finallyLoc)}else if(i){if(this.prev<a.catchLoc)return t(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return t(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&v.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var a=n;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,$):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),$},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),s(r),$}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;s(r)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:f(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),$}},d}function $e2bb3fa087a9df71$var$asyncGeneratorStep(e,t,r,n,a,o,i){try{var u=e[o](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,a)}function $e2bb3fa087a9df71$var$_asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function i(e){$e2bb3fa087a9df71$var$asyncGeneratorStep(o,n,a,i,u,"next",e)}function u(e){$e2bb3fa087a9df71$var$asyncGeneratorStep(o,n,a,i,u,"throw",e)}i(void 0)}))}}function $e2bb3fa087a9df71$var$_objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}var $e2bb3fa087a9df71$var$DEFAULT_IPFS_GATEWAY_URL="https://ipfs.infura.io/ipfs",$e2bb3fa087a9df71$var$cleanUpHash=function(e){return e.startsWith("ipfs://")?e.substring(7):e},$e2bb3fa087a9df71$export$dcfc6cbc19def6c2=function(){var e=$e2bb3fa087a9df71$var$_asyncToGenerator($e2bb3fa087a9df71$var$_regeneratorRuntime().mark((function e(t,r){var n,a,o;return $e2bb3fa087a9df71$var$_regeneratorRuntime().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===r&&(r=$e2bb3fa087a9df71$var$DEFAULT_IPFS_GATEWAY_URL),n=$e2bb3fa087a9df71$var$cleanUpHash(t),a=r+"/"+n,e.next=5,fetch(a);case 5:return e.next=7,e.sent.json();case 7:return o=e.sent,e.abrupt("return",o.image);case 9:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),$e2bb3fa087a9df71$export$998a7eee03b32ad4=function(e){var t=(0,$6cds3.useState)([]),r=t[0],n=t[1];return(0,$6cds3.useEffect)((function(){var t=function(){var t=$e2bb3fa087a9df71$var$_asyncToGenerator($e2bb3fa087a9df71$var$_regeneratorRuntime().mark((function t(){var r;return $e2bb3fa087a9df71$var$_regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all(e.map((function(e){return $e2bb3fa087a9df71$export$dcfc6cbc19def6c2(e)})));case 2:r=t.sent,n(r);case 4:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();t()}),[e]),r},$e2bb3fa087a9df71$var$_excluded=["hash","gatewayUrl"],$e2bb3fa087a9df71$export$fce25f310ce4c63f=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$e2bb3fa087a9df71$var$DEFAULT_IPFS_GATEWAY_URL:r,a=$e2bb3fa087a9df71$var$_objectWithoutPropertiesLoose(e,$e2bb3fa087a9df71$var$_excluded);return $parcel$interopDefault($6cds3).createElement("img",Object.assign({src:n+"/"+$e2bb3fa087a9df71$var$cleanUpHash(t)},a))},$e2bb3fa087a9df71$var$_excluded$1=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$e2bb3fa087a9df71$export$4a71c73b1888cb58=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$e2bb3fa087a9df71$var$DEFAULT_IPFS_GATEWAY_URL:r,a=$e2bb3fa087a9df71$var$_objectWithoutPropertiesLoose(e,$e2bb3fa087a9df71$var$_excluded$1);return $parcel$interopDefault($6cds3).createElement("video",Object.assign({loop:!0,autoPlay:!0,muted:!0,controls:!0},a),$parcel$interopDefault($6cds3).createElement("source",{src:n+"/"+$e2bb3fa087a9df71$var$cleanUpHash(t)}))},$e2bb3fa087a9df71$var$_excluded$2=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$e2bb3fa087a9df71$export$94de9ab01c13f989=function(e){var t=e.hash,r=e.autoPlay,n=void 0===r||r,a=e.muted,o=void 0===a||a,i=e.controls,u=void 0===i||i,c=e.loop,s=void 0===c||c,l=$e2bb3fa087a9df71$var$_objectWithoutPropertiesLoose(e,$e2bb3fa087a9df71$var$_excluded$2),f=(0,$6cds3.useState)(!1),p=f[0],d=f[1],h=(0,$6cds3.useState)(!1),v=h[0],m=h[1];return(0,$6cds3.useEffect)((function(){d(!1),m(!1)}),[t]),$parcel$interopDefault($6cds3).createElement($parcel$interopDefault($6cds3).Fragment,null,!p&&$parcel$interopDefault($6cds3).createElement($e2bb3fa087a9df71$export$fce25f310ce4c63f,Object.assign({hash:t,onError:function(){return d(!0)}},l)),!v&&$parcel$interopDefault($6cds3).createElement($e2bb3fa087a9df71$export$4a71c73b1888cb58,Object.assign({hash:t,onError:function(){return m(!0)},autoPlay:n,muted:o,controls:u,loop:s},l)))},$e2bb3fa087a9df71$var$_excluded$3=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$e2bb3fa087a9df71$export$a3b92cc32375b0b2=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$e2bb3fa087a9df71$var$DEFAULT_IPFS_GATEWAY_URL:r,a=$e2bb3fa087a9df71$var$_objectWithoutPropertiesLoose(e,$e2bb3fa087a9df71$var$_excluded$3);return $parcel$interopDefault($6cds3).createElement("audio",Object.assign({loop:!0,autoPlay:!0,muted:!0,controls:!0},a),$parcel$interopDefault($6cds3).createElement("source",{src:n+"/"+$e2bb3fa087a9df71$var$cleanUpHash(t)}))},$35d12a79e47951fa$var$CandidateCard=function(e){return(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"max-w-sm rounded overflow-hidden shadow-lg w-64 h-96",children:[(0,$fba0f23e9e6a11bb$exports.jsx)($e2bb3fa087a9df71$export$fce25f310ce4c63f,{className:"w-full h-3/5",hash:e.CID,gatewayUrl:"https://gateway.pinata.cloud/ipfs/",alt:"Sunset in the mountains"}),(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"px-6 py-4",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"font-bold text-xl mb-2",children:e.name}),(0,$fba0f23e9e6a11bb$exports.jsx)("p",{className:"text-gray-700 text-base",children:e.manifest})]})]})},$35d12a79e47951fa$export$2e2bcd8739ae039=$35d12a79e47951fa$var$CandidateCard,$0239c4f1bb26561d$exports={};$0239c4f1bb26561d$exports=parcelRequire("17QCl").getBundleURL("7lIXA")+parcelRequire("lGKbD").resolve("dF64F");var $0cc1163e23fc48ea$var$State={Fetching:"fetching",Fetched:"fetched",Open:"open",Closed:"closed"},$0cc1163e23fc48ea$var$Home=function(){var e=(0,$hNZKs.default)((0,$6cds3.useState)(),2),t=e[0],r=e[1],n=(0,$hNZKs.default)((0,$6cds3.useState)([]),1)[0],a=(0,$hNZKs.default)((0,$6cds3.useState)("fetching"),2),o=a[0],i=a[1];(0,$6cds3.useEffect)((function(){var e,t=(e=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,$d04650fb1e3f877c$export$65cdffd68bbec2fe("candidate").then((function(e){r(e),i("fetched")}));case 2:case"end":return e.stop()}}),e)}))),function(){return e.apply(this,arguments)});t()}),[]);var u,c=(u=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){var r,a;return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=0;case 1:if(!(r<t.length)){e.next=7;break}return e.next=4,$d04650fb1e3f877c$export$c0b4cf505e0f4676(t[r].metadata.token_id).then((function(e){n.push(e)}));case 4:r++,e.next=1;break;case 7:return e.next=9,$d04650fb1e3f877c$export$6d0bd67c93ae3616();case 9:a=e.sent,console.log(a),i(a?"closed":"open");case 12:case"end":return e.stop()}}),e)}))),function(){return u.apply(this,arguments)}),s=function(){return(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"grid h-screen place-items-center text-3xl",children:"Fetching NFTs of candidates..."})};switch(o){case $0cc1163e23fc48ea$var$State.Fetching:return(0,$fba0f23e9e6a11bb$exports.jsx)("div",{children:s()});case $0cc1163e23fc48ea$var$State.Fetched:return c(),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{children:s()});case $0cc1163e23fc48ea$var$State.Open:return(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{children:[(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"center",children:function(){if(void 0===window.accountId)return(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"close_button hover:skew-1 h-10 bg-red-600 mb-3",onClick:function(){confirm("Are you sure to close this election?")&&($d04650fb1e3f877c$export$2999ae38e81d7eac(),i("closed"))},children:"Close Election"})}()}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"grid grid-cols-3 gap-10",children:function(){for(var e=[],r=0;r<t.length;r++)e.push((0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)($35d12a79e47951fa$export$2e2bcd8739ae039,{CID:t[r].metadata.media_CID,name:t[r].metadata.candidate_name,manifest:t[r].metadata.candidate_manifest}),(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0239c4f1bb26561d$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("p",{className:"mr-2",children:n[r]}),(0,$fba0f23e9e6a11bb$exports.jsx)("button",{value:t[r].metadata.token_id,onClick:function(e){return t=parseInt(e.target.value),void $d04650fb1e3f877c$export$1ecc0473ae248361(window.accountId).then((function(e){Boolean(e)?alert("You have already voted!"):$d04650fb1e3f877c$export$f8d1fece213c1fbd(window.accountId).then((function(e){var r=parseFloat(e);0!=r?confirm("Once you vote, you can't change selected candidate. Are you OK?")&&($d04650fb1e3f877c$export$b0e1854fd82ab232(void 0,r),$d04650fb1e3f877c$export$56bd6d2936ccd6cf(t),$d04650fb1e3f877c$export$7bedc6ca3b4ed0db(window.accountId)):alert("You don't have vote ticket! Please ask deployer to give it to you.")}))}));var t},className:"vote_button hover:skew-1",children:"Vote!"})]})]}));return e}()})]});case $0cc1163e23fc48ea$var$State.Closed:return(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{children:[(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"center",children:function(){if(void 0===window.accountId)return(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"close_button hover:skew-1 h-10 bg-red-600 mb-3",onClick:function(){confirm("Are you sure to reopen this election?")&&($d04650fb1e3f877c$export$f3fc5f415e7e53a1(),i("open"))},children:"Reopen Election"})}()}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"grid grid-cols-3 gap-10",children:function(){for(var e=[],r=n.reduce((function(e,t){return Math.max(e,t)})),a=0;a<t.length;a++)n[a]==r?e.push((0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"text-2xl shadow-rose-600 center font-semibold text-red-700",children:"Won!"}),(0,$fba0f23e9e6a11bb$exports.jsx)($35d12a79e47951fa$export$2e2bcd8739ae039,{CID:t[a].metadata.media_CID,name:t[a].metadata.candidate_name,manifest:t[a].metadata.candidate_manifest}),(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0239c4f1bb26561d$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("p",{className:"mr-2",children:n[a]})]})]})):e.push((0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"items-center opacity-20",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"pt-7"}),(0,$fba0f23e9e6a11bb$exports.jsx)($35d12a79e47951fa$export$2e2bcd8739ae039,{CID:t[a].metadata.media_CID,name:t[a].metadata.candidate_name,manifest:t[a].metadata.candidate_manifest}),(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0239c4f1bb26561d$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("p",{className:"mr-2",children:n[a]})]})]}));return e}()})]})}},$0cc1163e23fc48ea$export$2e2bcd8739ae039=$0cc1163e23fc48ea$var$Home,$1zs4k=parcelRequire("1zs4k"),$hNZKs=parcelRequire("hNZKs"),$4Z8U5=parcelRequire("4Z8U5"),$6cds3=parcelRequire("6cds3");parcelRequire("6cds3");var $2fba96a442a99c48$var$Title=function(e){return(0,$fba0f23e9e6a11bb$exports.jsx)("span",{className:"box-content h-7 w-1/3 p-4 border-4 m4 center text-4xl items-center",children:e.name})},$2fba96a442a99c48$export$2e2bcd8739ae039=$2fba96a442a99c48$var$Title;parcelRequire("6cds3");var $0aa3770bc69741e0$var$Input=function(e){return(0,$fba0f23e9e6a11bb$exports.jsx)("form",{className:"w-3/5",onSubmit:function(e){e.preventDefault()},children:(0,$fba0f23e9e6a11bb$exports.jsxs)("label",{className:"block",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("span",{className:"block text-3xl font-medium text-slate-700",children:e.title}),(0,$fba0f23e9e6a11bb$exports.jsx)("input",{value:e.input,placeholder:e.hint,onChange:e.setInput,className:"mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500 disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none invalid:border-pink-500 invalid:text-pink-600 focus:invalid:border-pink-500 focus:invalid:ring-pink-500"})]})})},$0aa3770bc69741e0$export$2e2bcd8739ae039=$0aa3770bc69741e0$var$Input,$b29ba8bf64b67c57$var$Candidate=function(){var e,t=(0,$hNZKs.default)((0,$6cds3.useState)(""),2),r=t[0],n=t[1],a=(0,$hNZKs.default)((0,$6cds3.useState)(""),2),o=a[0],i=a[1],u=(0,$hNZKs.default)((0,$6cds3.useState)(""),2),c=u[0],s=u[1],l=(e=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,$d04650fb1e3f877c$export$632bd9ab6dba7ff7("".concat(o,"(candidate)"),"","https://gateway.pinata.cloud/ipfs/".concat(r),r,o,c,"candidate",void 0);case 2:n(""),i(""),s(""),alert("Candidate's NFT has minted! Let's Check it at Home screen!");case 6:case"end":return e.stop()}}),e)}))),function(){return e.apply(this,arguments)});return(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"grid place-items-center w-full",children:[(0,$fba0f23e9e6a11bb$exports.jsx)($2fba96a442a99c48$export$2e2bcd8739ae039,{name:"Add Candidate"}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"my-3 text-2xl text-red-400",children:"Add candidate who you think must be a leader!"}),(0,$fba0f23e9e6a11bb$exports.jsx)($0aa3770bc69741e0$export$2e2bcd8739ae039,{title:"Image URI(IPFS Content CID)",hint:"QmT...",className:"mb-3",input:r,setInput:function(e){return n(e.target.value)}}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"mb-6"}),(0,$fba0f23e9e6a11bb$exports.jsx)($0aa3770bc69741e0$export$2e2bcd8739ae039,{title:"Name",hint:"Robert Downey Jr.",input:o,setInput:function(e){return i(e.target.value)}}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"mb-6"}),(0,$fba0f23e9e6a11bb$exports.jsx)($0aa3770bc69741e0$export$2e2bcd8739ae039,{title:"Manifest",hint:"I'm gonna prosper this city with web3 tech!",input:c,setInput:function(e){return s(e.target.value)}}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"mb-6"}),(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"button",onClick:(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",l());case 1:case"end":return e.stop()}}),e)}))),children:"Add"})]})},$b29ba8bf64b67c57$export$2e2bcd8739ae039=$b29ba8bf64b67c57$var$Candidate,$1zs4k=parcelRequire("1zs4k"),$hNZKs=parcelRequire("hNZKs"),$4Z8U5=parcelRequire("4Z8U5"),$6cds3=parcelRequire("6cds3"),$a0a253810b3c0a4a$var$Voter=function(){var e,t=(0,$hNZKs.default)((0,$6cds3.useState)(""),2),r=t[0],n=t[1],a=(e=(0,$1zs4k.default)($parcel$interopDefault($4Z8U5).mark((function e(){return $parcel$interopDefault($4Z8U5).wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===window.accountId){e.next=3;break}return alert("You are not contract deployer, so you can't add voter"),e.abrupt("return");case 3:return e.next=5,$d04650fb1e3f877c$export$f8d1fece213c1fbd("".concat(r));case 5:if(0===e.sent){e.next=9;break}return alert("You've already got vote ticket or voted and used it!"),e.abrupt("return");case 9:return e.next=11,$d04650fb1e3f877c$export$632bd9ab6dba7ff7("Vote Ticket","","https://gateway.pinata.cloud/ipfs/QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx","QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx","Vote Ticket","You can vote with this ticket! But remember that you can do it just once.","vote","".concat(r));case 11:alert("Vote ticket is minted to ".concat(r,"!")),n("");case 13:case"end":return e.stop()}}),e)}))),function(){return e.apply(this,arguments)});return(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"grid place-items-center w-full",children:[(0,$fba0f23e9e6a11bb$exports.jsx)($2fba96a442a99c48$export$2e2bcd8739ae039,{name:"Add Voter"}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"text-lg",children:"※Only contract deployer can add voter."}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"mb-24"}),(0,$fba0f23e9e6a11bb$exports.jsx)($0aa3770bc69741e0$export$2e2bcd8739ae039,{title:"Wallet ID",hint:"0x...",input:r,type:"text",setInput:function(e){return n(e.target.value)}}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"mb-24"}),(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"button",onClick:function(){return a()},children:"Add"})]})},$a0a253810b3c0a4a$export$2e2bcd8739ae039=$a0a253810b3c0a4a$var$Voter,$244639cf527e6540$var$AppRouter=function(){return(0,$fba0f23e9e6a11bb$exports.jsx)($4a58c45c402afb9a$export$9ba4e89fdfa1fc54,{children:(0,$fba0f23e9e6a11bb$exports.jsxs)($f73f9126b1f83e8a$export$3565eb3d00ca5a74,{children:[(0,$fba0f23e9e6a11bb$exports.jsx)($f73f9126b1f83e8a$export$e7b0ac011bb776c6,{path:"/",exact:!0,element:(0,$fba0f23e9e6a11bb$exports.jsx)($0cc1163e23fc48ea$export$2e2bcd8739ae039,{})}),(0,$fba0f23e9e6a11bb$exports.jsx)($f73f9126b1f83e8a$export$e7b0ac011bb776c6,{path:"/candidate",exact:!0,element:(0,$fba0f23e9e6a11bb$exports.jsx)($b29ba8bf64b67c57$export$2e2bcd8739ae039,{})}),(0,$fba0f23e9e6a11bb$exports.jsx)($f73f9126b1f83e8a$export$e7b0ac011bb776c6,{path:"/voter",exact:!0,element:(0,$fba0f23e9e6a11bb$exports.jsx)($a0a253810b3c0a4a$export$2e2bcd8739ae039,{})})]})})},$244639cf527e6540$export$2e2bcd8739ae039=$244639cf527e6540$var$AppRouter;function $0ff4309b76eef923$export$2e2bcd8739ae039(){return window.walletConnection.isSignedIn()?(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"bg-white min-h-screen",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("nav",{className:"bg-white pt-2.5",children:(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"container flex flex-wrap justify-between items-center mx-auto",children:[(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"flex items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($1a569f9b4916864d$exports),className:"object-cover h-12 w-12"}),(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($7b29a78ea31418a9$exports),className:"object-cover h-4 w-4"}),(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0246c15819f25bdd$exports),className:"object-cover h-9 w-9 mx-2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("span",{className:"self-center text-3xl font-semibold whitespace-nowrap app_title",children:"Election Dapp"})]}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"md:block md:w-auto pt-1",children:(0,$fba0f23e9e6a11bb$exports.jsxs)("ul",{className:"flex md:flex-row md:space-x-8 md:text-xl md:font-medium",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("li",{children:(0,$fba0f23e9e6a11bb$exports.jsx)("a",{href:"http://localhost:1234/",children:" Home "})}),(0,$fba0f23e9e6a11bb$exports.jsx)("li",{children:(0,$fba0f23e9e6a11bb$exports.jsx)("a",{href:"http://localhost:1234/candidate",children:" Add Candidate "})}),(0,$fba0f23e9e6a11bb$exports.jsx)("li",{children:(0,$fba0f23e9e6a11bb$exports.jsx)("a",{href:"http://localhost:1234/voter",children:" Add Voter "})}),(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"link text-red-500",style:{float:"right"},onClick:$d04650fb1e3f877c$export$a0973bcfe11b05c9,children:"Sign out"})]})})]})}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"center",children:(0,$fba0f23e9e6a11bb$exports.jsx)($244639cf527e6540$export$2e2bcd8739ae039,{})})]}):(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"grid h-3/4 place-items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsxs)("div",{className:"flex items-center",children:[(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($1a569f9b4916864d$exports),className:"object-cover h-16 w-16"}),(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($7b29a78ea31418a9$exports),className:"object-cover h-6 w-6"}),(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0246c15819f25bdd$exports),className:"object-cover h-12 w-12 mx-2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("span",{className:"self-center text-3xl font-semibold whitespace-nowrap app_title",children:"Election Dapp"})]}),(0,$fba0f23e9e6a11bb$exports.jsx)("div",{className:"text-3xl",children:"Have a liberate and fair election!"}),(0,$fba0f23e9e6a11bb$exports.jsx)("img",{src:$parcel$interopDefault($0bda21bb5756b7ef$exports),className:"mb-4 h-5/6 w-1/2"}),(0,$fba0f23e9e6a11bb$exports.jsx)("button",{className:"text-white w-2/5 h-12 bg-gradient-to-r from-rose-500 via-rose-600 to-rose-800 hover:bg-gradient-to-br focus:ring-4 focus:outline-none font-medium rounded-lg text-3xl text-center ",onClick:$d04650fb1e3f877c$export$596d806903d1f59e,children:"Sign In"})]})}var $73c899650c16bd75$var$reactRoot=$64d0b1ebdd6bcffe$export$882461b6382ed46c(document.querySelector("#root"));window.nearInitPromise=$d04650fb1e3f877c$export$32789f8ce7a59bb6().then((function(){$73c899650c16bd75$var$reactRoot.render((0,$fba0f23e9e6a11bb$exports.jsx)($0ff4309b76eef923$export$2e2bcd8739ae039,{}))})).catch((function(e){$73c899650c16bd75$var$reactRoot.render((0,$fba0f23e9e6a11bb$exports.jsxs)("div",{style:{color:"red"},children:["Error: ",(0,$fba0f23e9e6a11bb$exports.jsx)("code",{children:e.message})]})),console.error(e)}))})();
//# sourceMappingURL=index.050cf18d.js.map

'''
'''--- near-election-dapp/frontend/frontend/dist/index.1afa09c0.css ---
*, :before, :after {
  box-sizing: border-box;
  border: 0 solid #e5e7eb;
}

:before, :after {
  --tw-content: "";
}

html {
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
}

body {
  line-height: inherit;
  margin: 0;
}

hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

abbr:where([title]) {
  text-decoration: underline dotted;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

b, strong {
  font-weight: bolder;
}

code, kbd, samp, pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub, sup {
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

button, input, optgroup, select, textarea {
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}

button, select {
  text-transform: none;
}

button, [type="button"], [type="reset"], [type="submit"] {
  -webkit-appearance: button;
  background-color: #0000;
  background-image: none;
}

:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

progress {
  vertical-align: baseline;
}

::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

summary {
  display: list-item;
}

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol, ul, menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

textarea {
  resize: vertical;
}

input::placeholder, textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button, [role="button"] {
  cursor: pointer;
}

:disabled {
  cursor: default;
}

img, svg, video, canvas, audio, iframe, embed, object {
  vertical-align: middle;
  display: block;
}

img, video {
  max-width: 100%;
  height: auto;
}

*, :before, :after, ::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #3b82f680;
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.title {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
  -webkit-background-clip: text;
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  color: #0000;
  -webkit-background-clip: text;
  background-clip: text;
  padding-top: .75rem;
  padding-bottom: .75rem;
  font-size: 3rem;
  font-weight: 600;
  line-height: 1;
}

.app_title {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
  --tw-gradient-from: #ef4444;
  --tw-gradient-to: #ef444400;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  --tw-gradient-to: #facc15;
  -webkit-background-clip: text;
  color: #0000;
  -webkit-background-clip: text;
  background-clip: text;
  font-size: 6rem;
  font-weight: 800;
  line-height: 1;
}

.center {
  justify-content: center;
  display: flex;
}

.button {
  --tw-border-opacity: 1;
  border-bottom-width: 4px;
  border-color: rgb(29 78 216 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  border-radius: .25rem;
  padding: .5rem 1rem;
  font-weight: 700;
}

.button:hover {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity));
}

.vote_button {
  height: 2rem;
  --tw-border-opacity: 1;
  border-color: rgb(159 18 57 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(225 29 72 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: #e11d4880;
  --tw-shadow: var(--tw-shadow-colored);
  --tw-drop-shadow: drop-shadow(0 20px 13px #00000008) drop-shadow(0 8px 5px #00000014);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  border-radius: .25rem;
  margin-top: .5rem;
  margin-bottom: .5rem;
  padding: 0 .75rem;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.75rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.vote_button:hover {
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity));
}

.close_button {
  height: 2rem;
  --tw-border-opacity: 1;
  border-color: rgb(153 27 27 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(136 19 55 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: #e11d4880;
  --tw-shadow: var(--tw-shadow-colored);
  border-radius: .25rem;
  margin-top: .5rem;
  margin-bottom: .75rem;
  padding: 0 .75rem;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.75rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.close_button:hover {
  --tw-border-opacity: 1;
  border-color: rgb(147 51 234 / var(--tw-border-opacity));
}

.mx-2 {
  margin-left: .5rem;
  margin-right: .5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-3 {
  margin-top: .75rem;
  margin-bottom: .75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-2 {
  margin-bottom: .5rem;
}

.mt-1 {
  margin-top: .25rem;
}

.mb-3 {
  margin-bottom: .75rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mr-2 {
  margin-right: .5rem;
}

.mb-24 {
  margin-bottom: 6rem;
}

.box-content {
  box-sizing: content-box;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-3\/4 {
  height: 75%;
}

.h-16 {
  height: 4rem;
}

.h-6 {
  height: 1.5rem;
}

.h-12 {
  height: 3rem;
}

.h-5\/6 {
  height: 83.3333%;
}

.h-4 {
  height: 1rem;
}

.h-9 {
  height: 2.25rem;
}

.h-96 {
  height: 24rem;
}

.h-3\/5 {
  height: 60%;
}

.h-7 {
  height: 1.75rem;
}

.h-5 {
  height: 1.25rem;
}

.h-10 {
  height: 2.5rem;
}

.h-screen {
  height: 100vh;
}

.min-h-screen {
  min-height: 100vh;
}

.w-16 {
  width: 4rem;
}

.w-6 {
  width: 1.5rem;
}

.w-12 {
  width: 3rem;
}

.w-1\/2 {
  width: 50%;
}

.w-2\/5 {
  width: 40%;
}

.w-4 {
  width: 1rem;
}

.w-9 {
  width: 2.25rem;
}

.w-64 {
  width: 16rem;
}

.w-full {
  width: 100%;
}

.w-3\/5 {
  width: 60%;
}

.w-1\/3 {
  width: 33.3333%;
}

.w-5 {
  width: 1.25rem;
}

.max-w-sm {
  max-width: 24rem;
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.flex-wrap {
  flex-wrap: wrap;
}

.place-items-center {
  place-items: center;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-10 {
  gap: 2.5rem;
}

.self-center {
  align-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-lg {
  border-radius: .5rem;
}

.rounded {
  border-radius: .25rem;
}

.rounded-md {
  border-radius: .375rem;
}

.border {
  border-width: 1px;
}

.border-4 {
  border-width: 4px;
}

.border-slate-300 {
  --tw-border-opacity: 1;
  border-color: rgb(203 213 225 / var(--tw-border-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-rose-500 {
  --tw-gradient-from: #f43f5e;
  --tw-gradient-to: #f43f5e00;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-rose-600 {
  --tw-gradient-to: #e11d4800;
  --tw-gradient-stops: var(--tw-gradient-from), #e11d48, var(--tw-gradient-to);
}

.to-rose-800 {
  --tw-gradient-to: #9f1239;
}

.object-cover {
  object-fit: cover;
}

.p-4 {
  padding: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-3 {
  padding-left: .75rem;
  padding-right: .75rem;
}

.py-2 {
  padding-top: .5rem;
  padding-bottom: .5rem;
}

.pt-2\.5 {
  padding-top: .625rem;
}

.pt-2 {
  padding-top: .5rem;
}

.pt-1 {
  padding-top: .25rem;
}

.pt-7 {
  padding-top: 1.75rem;
}

.text-center {
  text-align: center;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: .875rem;
  line-height: 1.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.font-semibold {
  font-weight: 600;
}

.font-medium {
  font-weight: 500;
}

.font-bold {
  font-weight: 700;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.text-slate-700 {
  --tw-text-opacity: 1;
  color: rgb(51 65 85 / var(--tw-text-opacity));
}

.text-red-400 {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}

.placeholder-slate-400::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(148 163 184 / var(--tw-placeholder-opacity));
}

.opacity-20 {
  opacity: .2;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 #0000000d;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-rose-600 {
  --tw-shadow-color: #e11d48;
  --tw-shadow: var(--tw-shadow-colored);
}

html {
  font-size: calc(.9em + .5vw);
}

.invalid\:border-pink-500:invalid {
  --tw-border-opacity: 1;
  border-color: rgb(236 72 153 / var(--tw-border-opacity));
}

.invalid\:text-pink-600:invalid {
  --tw-text-opacity: 1;
  color: rgb(219 39 119 / var(--tw-text-opacity));
}

.hover\:bg-gradient-to-br:hover {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.focus\:border-sky-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(14 165 233 / var(--tw-border-opacity));
}

.focus\:outline-none:focus {
  outline-offset: 2px;
  outline: 2px solid #0000;
}

.focus\:ring-4:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-sky-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(14 165 233 / var(--tw-ring-opacity));
}

.focus\:invalid\:border-pink-500:invalid:focus {
  --tw-border-opacity: 1;
  border-color: rgb(236 72 153 / var(--tw-border-opacity));
}

.focus\:invalid\:ring-pink-500:invalid:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(236 72 153 / var(--tw-ring-opacity));
}

.disabled\:border-slate-200:disabled {
  --tw-border-opacity: 1;
  border-color: rgb(226 232 240 / var(--tw-border-opacity));
}

.disabled\:bg-slate-50:disabled {
  --tw-bg-opacity: 1;
  background-color: rgb(248 250 252 / var(--tw-bg-opacity));
}

.disabled\:text-slate-500:disabled {
  --tw-text-opacity: 1;
  color: rgb(100 116 139 / var(--tw-text-opacity));
}

.disabled\:shadow-none:disabled {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 768px) {
  .md\:block {
    display: block;
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)) );
  }

  .md\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .md\:font-medium {
    font-weight: 500;
  }
}

/*# sourceMappingURL=index.1afa09c0.css.map */

'''
'''--- near-election-dapp/frontend/frontend/dist/index.82b276bf.js ---
function $parcel$export(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var $parcel$global="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function $parcel$interopDefault(e){return e&&e.__esModule?e.default:e}var $parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequiref931;null==parcelRequire&&(parcelRequire=function(e){if(e in $parcel$modules)return $parcel$modules[e].exports;if(e in $parcel$inits){var t=$parcel$inits[e];delete $parcel$inits[e];var r={id:e,exports:{}};return $parcel$modules[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n},parcelRequire.register=function(e,t){$parcel$inits[e]=t},$parcel$global.parcelRequiref931=parcelRequire),parcelRequire.register("4SSe9",(function(e,t){var r,n;$parcel$export(e.exports,"register",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"resolve",(function(){return n}),(function(e){return n=e}));var o={};r=function(e){for(var t=Object.keys(e),r=0;r<t.length;r++)o[t[r]]=e[t[r]]},n=function(e){var t=o[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),parcelRequire.register("2nzLi",(function(e,t){var r,n,o;$parcel$export(e.exports,"Fragment",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"jsx",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"jsxs",(function(){return o}),(function(e){return o=e}));var a=parcelRequire("7fPBF"),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),u=Object.prototype.hasOwnProperty,c=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function f(e,t,r){var n,o={},a=null,s=null;for(n in void 0!==r&&(a=""+r),void 0!==t.key&&(a=""+t.key),void 0!==t.ref&&(s=t.ref),t)u.call(t,n)&&!l.hasOwnProperty(n)&&(o[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===o[n]&&(o[n]=t[n]);return{$$typeof:i,type:e,key:a,ref:s,props:o,_owner:c.current}}r=s,n=f,o=f})),parcelRequire.register("7fPBF",(function(e,t){e.exports=parcelRequire("fSPLm")})),parcelRequire.register("fSPLm",(function(e,t){var r,n,o,a,i,s,u,c,l,f,d,p,h,m,y,g,b,v,w,$,x,_,S,E,k,A,M,R,C,P,T,I,N,O,U;$parcel$export(e.exports,"Children",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"Component",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"Fragment",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"Profiler",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"PureComponent",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"StrictMode",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"Suspense",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"cloneElement",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"createContext",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"createElement",(function(){return d}),(function(e){return d=e})),$parcel$export(e.exports,"createFactory",(function(){return p}),(function(e){return p=e})),$parcel$export(e.exports,"createRef",(function(){return h}),(function(e){return h=e})),$parcel$export(e.exports,"forwardRef",(function(){return m}),(function(e){return m=e})),$parcel$export(e.exports,"isValidElement",(function(){return y}),(function(e){return y=e})),$parcel$export(e.exports,"lazy",(function(){return g}),(function(e){return g=e})),$parcel$export(e.exports,"memo",(function(){return b}),(function(e){return b=e})),$parcel$export(e.exports,"startTransition",(function(){return v}),(function(e){return v=e})),$parcel$export(e.exports,"unstable_act",(function(){return w}),(function(e){return w=e})),$parcel$export(e.exports,"useCallback",(function(){return $}),(function(e){return $=e})),$parcel$export(e.exports,"useContext",(function(){return x}),(function(e){return x=e})),$parcel$export(e.exports,"useDebugValue",(function(){return _}),(function(e){return _=e})),$parcel$export(e.exports,"useDeferredValue",(function(){return S}),(function(e){return S=e})),$parcel$export(e.exports,"useEffect",(function(){return E}),(function(e){return E=e})),$parcel$export(e.exports,"useId",(function(){return k}),(function(e){return k=e})),$parcel$export(e.exports,"useImperativeHandle",(function(){return A}),(function(e){return A=e})),$parcel$export(e.exports,"useInsertionEffect",(function(){return M}),(function(e){return M=e})),$parcel$export(e.exports,"useLayoutEffect",(function(){return R}),(function(e){return R=e})),$parcel$export(e.exports,"useMemo",(function(){return C}),(function(e){return C=e})),$parcel$export(e.exports,"useReducer",(function(){return P}),(function(e){return P=e})),$parcel$export(e.exports,"useRef",(function(){return T}),(function(e){return T=e})),$parcel$export(e.exports,"useState",(function(){return I}),(function(e){return I=e})),$parcel$export(e.exports,"useSyncExternalStore",(function(){return N}),(function(e){return N=e})),$parcel$export(e.exports,"useTransition",(function(){return O}),(function(e){return O=e})),$parcel$export(e.exports,"version",(function(){return U}),(function(e){return U=e}));var L=Symbol.for("react.element"),F=Symbol.for("react.portal"),B=Symbol.for("react.fragment"),j=Symbol.for("react.strict_mode"),q=Symbol.for("react.profiler"),D=Symbol.for("react.provider"),z=Symbol.for("react.context"),K=Symbol.for("react.forward_ref"),H=Symbol.for("react.suspense"),W=Symbol.for("react.memo"),V=Symbol.for("react.lazy"),G=Symbol.iterator;var X={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Y=Object.assign,J={};function Q(e,t,r){this.props=e,this.context=t,this.refs=J,this.updater=r||X}function Z(){}function ee(e,t,r){this.props=e,this.context=t,this.refs=J,this.updater=r||X}Q.prototype.isReactComponent={},Q.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},Q.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},Z.prototype=Q.prototype;var te=ee.prototype=new Z;te.constructor=ee,Y(te,Q.prototype),te.isPureReactComponent=!0;var re=Array.isArray,ne=Object.prototype.hasOwnProperty,oe={current:null},ae={key:!0,ref:!0,__self:!0,__source:!0};function ie(e,t,r){var n,o={},a=null,i=null;if(null!=t)for(n in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)ne.call(t,n)&&!ae.hasOwnProperty(n)&&(o[n]=t[n]);var s=arguments.length-2;if(1===s)o.children=r;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(n in s=e.defaultProps)void 0===o[n]&&(o[n]=s[n]);return{$$typeof:L,type:e,key:a,ref:i,props:o,_owner:oe.current}}function se(e){return"object"==typeof e&&null!==e&&e.$$typeof===L}var ue=/\/+/g;function ce(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function le(e,t,r,n,o){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var i=!1;if(null===e)i=!0;else switch(a){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case L:case F:i=!0}}if(i)return o=o(i=e),e=""===n?"."+ce(i,0):n,re(o)?(r="",null!=e&&(r=e.replace(ue,"$&/")+"/"),le(o,t,r,"",(function(e){return e}))):null!=o&&(se(o)&&(o=function(e,t){return{$$typeof:L,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||i&&i.key===o.key?"":(""+o.key).replace(ue,"$&/")+"/")+e)),t.push(o)),1;if(i=0,n=""===n?".":n+":",re(e))for(var s=0;s<e.length;s++){var u=n+ce(a=e[s],s);i+=le(a,t,r,u,o)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=G&&e[G]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),s=0;!(a=e.next()).done;)i+=le(a=a.value,t,r,u=n+ce(a,s++),o);else if("object"===a)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return i}function fe(e,t,r){if(null==e)return e;var n=[],o=0;return le(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function de(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var pe={current:null},he={transition:null};r={map:fe,forEach:function(e,t,r){fe(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return fe(e,(function(){t++})),t},toArray:function(e){return fe(e,(function(e){return e}))||[]},only:function(e){if(!se(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n=Q,o=B,a=q,i=ee,s=j,u=H,c={ReactCurrentDispatcher:pe,ReactCurrentBatchConfig:he,ReactCurrentOwner:oe},l=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=Y({},e.props),o=e.key,a=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,i=oe.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in t)ne.call(t,u)&&!ae.hasOwnProperty(u)&&(n[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}var u=arguments.length-2;if(1===u)n.children=r;else if(1<u){s=Array(u);for(var c=0;c<u;c++)s[c]=arguments[c+2];n.children=s}return{$$typeof:L,type:e.type,key:o,ref:a,props:n,_owner:i}},f=function(e){return(e={$$typeof:z,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:D,_context:e},e.Consumer=e},d=ie,p=function(e){var t=ie.bind(null,e);return t.type=e,t},h=function(){return{current:null}},m=function(e){return{$$typeof:K,render:e}},y=se,g=function(e){return{$$typeof:V,_payload:{_status:-1,_result:e},_init:de}},b=function(e,t){return{$$typeof:W,type:e,compare:void 0===t?null:t}},v=function(e){var t=he.transition;he.transition={};try{e()}finally{he.transition=t}},w=function(){throw Error("act(...) is not supported in production builds of React.")},$=function(e,t){return pe.current.useCallback(e,t)},x=function(e){return pe.current.useContext(e)},_=function(){},S=function(e){return pe.current.useDeferredValue(e)},E=function(e,t){return pe.current.useEffect(e,t)},k=function(){return pe.current.useId()},A=function(e,t,r){return pe.current.useImperativeHandle(e,t,r)},M=function(e,t){return pe.current.useInsertionEffect(e,t)},R=function(e,t){return pe.current.useLayoutEffect(e,t)},C=function(e,t){return pe.current.useMemo(e,t)},P=function(e,t,r){return pe.current.useReducer(e,t,r)},T=function(e){return pe.current.useRef(e)},I=function(e){return pe.current.useState(e)},N=function(e,t,r){return pe.current.useSyncExternalStore(e,t,r)},O=function(){return pe.current.useTransition()},U="18.2.0"})),parcelRequire.register("6EA3T",(function(e,t){var r,n,o,a,i,s,u,c,l,f,d,p;$parcel$export(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"createPortal",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"createRoot",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"findDOMNode",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"flushSync",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"hydrate",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"hydrateRoot",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"render",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"unmountComponentAtNode",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"unstable_batchedUpdates",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"unstable_renderSubtreeIntoContainer",(function(){return d}),(function(e){return d=e})),$parcel$export(e.exports,"version",(function(){return p}),(function(e){return p=e}));var h=parcelRequire("7fPBF"),m=parcelRequire("33s19");function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g=new Set,b={};function v(e,t){w(e,t),w(e+"Capture",t)}function w(e,t){for(b[e]=t,e=0;e<t.length;e++)g.add(t[e])}var $=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),x=Object.prototype.hasOwnProperty,_=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,S={},E={};function k(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var A={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){A[e]=new k(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];A[t]=new k(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){A[e]=new k(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){A[e]=new k(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){A[e]=new k(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){A[e]=new k(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){A[e]=new k(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){A[e]=new k(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){A[e]=new k(e,5,!1,e.toLowerCase(),null,!1,!1)}));var M=/[\-:]([a-z])/g;function R(e){return e[1].toUpperCase()}function C(e,t,r,n){var o=A.hasOwnProperty(t)?A[t]:null;(null!==o?0!==o.type:n||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!x.call(E,e)||!x.call(S,e)&&(_.test(e)?E[e]=!0:(S[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(M,R);A[t]=new k(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(M,R);A[t]=new k(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(M,R);A[t]=new k(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){A[e]=new k(e,1,!1,e.toLowerCase(),null,!1,!1)})),A.xlinkHref=new k("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){A[e]=new k(e,1,!1,e.toLowerCase(),null,!0,!0)}));var P=h.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,T=Symbol.for("react.element"),I=Symbol.for("react.portal"),N=Symbol.for("react.fragment"),O=Symbol.for("react.strict_mode"),U=Symbol.for("react.profiler"),L=Symbol.for("react.provider"),F=Symbol.for("react.context"),B=Symbol.for("react.forward_ref"),j=Symbol.for("react.suspense"),q=Symbol.for("react.suspense_list"),D=Symbol.for("react.memo"),z=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var K=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var H=Symbol.iterator;function W(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=H&&e[H]||e["@@iterator"])?e:null}var V,G=Object.assign;function X(e){if(void 0===V)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);V=t&&t[1]||""}return"\n"+V+e}var Y=!1;function J(e,t){if(!e||Y)return"";Y=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(t){if(t&&n&&"string"==typeof t.stack){for(var o=t.stack.split("\n"),a=n.stack.split("\n"),i=o.length-1,s=a.length-1;1<=i&&0<=s&&o[i]!==a[s];)s--;for(;1<=i&&0<=s;i--,s--)if(o[i]!==a[s]){if(1!==i||1!==s)do{if(i--,0>--s||o[i]!==a[s]){var u="\n"+o[i].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=i&&0<=s);break}}}finally{Y=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?X(e):""}function Q(e){switch(e.tag){case 5:return X(e.type);case 16:return X("Lazy");case 13:return X("Suspense");case 19:return X("SuspenseList");case 0:case 2:case 15:return e=J(e.type,!1);case 11:return e=J(e.type.render,!1);case 1:return e=J(e.type,!0);default:return""}}function Z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case N:return"Fragment";case I:return"Portal";case U:return"Profiler";case O:return"StrictMode";case j:return"Suspense";case q:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case F:return(e.displayName||"Context")+".Consumer";case L:return(e._context.displayName||"Context")+".Provider";case B:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case D:return null!==(t=e.displayName||null)?t:Z(e.type)||"Memo";case z:t=e._payload,e=e._init;try{return Z(e(t))}catch(e){}}return null}function ee(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Z(t);case 8:return t===O?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function te(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function re(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ne(e){e._valueTracker||(e._valueTracker=function(e){var t=re(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function oe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=re(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function ae(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function ie(e,t){var r=t.checked;return G({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function se(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=te(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function ue(e,t){null!=(t=t.checked)&&C(e,"checked",t,!1)}function ce(e,t){ue(e,t);var r=te(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?fe(e,t.type,r):t.hasOwnProperty("defaultValue")&&fe(e,t.type,te(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function le(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function fe(e,t,r){"number"===t&&ae(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var de=Array.isArray;function pe(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+te(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function he(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(y(91));return G({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function me(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(y(92));if(de(r)){if(1<r.length)throw Error(y(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:te(r)}}function ye(e,t){var r=te(t.value),n=te(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ge(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function be(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ve(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?be(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var we,$e,xe=($e=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((we=we||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=we.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return $e(e,t)}))}:$e);function _e(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var Se={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ee=["Webkit","ms","Moz","O"];function ke(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||Se.hasOwnProperty(e)&&Se[e]?(""+t).trim():t+"px"}function Ae(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=ke(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(Se).forEach((function(e){Ee.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Se[t]=Se[e]}))}));var Me=G({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Re(e,t){if(t){if(Me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(y(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(y(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(y(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(y(62))}}function Ce(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Pe=null;function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ie=null,Ne=null,Oe=null;function Ue(e){if(e=Po(e)){if("function"!=typeof Ie)throw Error(y(280));var t=e.stateNode;t&&(t=Io(t),Ie(e.stateNode,e.type,t))}}function Le(e){Ne?Oe?Oe.push(e):Oe=[e]:Ne=e}function Fe(){if(Ne){var e=Ne,t=Oe;if(Oe=Ne=null,Ue(e),t)for(e=0;e<t.length;e++)Ue(t[e])}}function Be(e,t){return e(t)}function je(){}var qe=!1;function De(e,t,r){if(qe)return e(t,r);qe=!0;try{return Be(e,t,r)}finally{qe=!1,(null!==Ne||null!==Oe)&&(je(),Fe())}}function ze(e,t){var r=e.stateNode;if(null===r)return null;var n=Io(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(y(231,t,typeof r));return r}var Ke=!1;if($)try{var He={};Object.defineProperty(He,"passive",{get:function(){Ke=!0}}),window.addEventListener("test",He,He),window.removeEventListener("test",He,He)}catch($e){Ke=!1}function We(e,t,r,n,o,a,i,s,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var Ve=!1,Ge=null,Xe=!1,Ye=null,Je={onError:function(e){Ve=!0,Ge=e}};function Qe(e,t,r,n,o,a,i,s,u){Ve=!1,Ge=null,We.apply(Je,arguments)}function Ze(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(y(188))}function rt(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(y(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return tt(o),e;if(a===n)return tt(o),t;a=a.sibling}throw Error(y(188))}if(r.return!==n.return)r=o,n=a;else{for(var i=!1,s=o.child;s;){if(s===r){i=!0,r=o,n=a;break}if(s===n){i=!0,n=o,r=a;break}s=s.sibling}if(!i){for(s=a.child;s;){if(s===r){i=!0,r=a,n=o;break}if(s===n){i=!0,n=a,r=o;break}s=s.sibling}if(!i)throw Error(y(189))}}if(r.alternate!==n)throw Error(y(190))}if(3!==r.tag)throw Error(y(188));return r.stateNode.current===r?e:t}(e))?nt(e):null}function nt(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=nt(e);if(null!==t)return t;e=e.sibling}return null}var ot=m.unstable_scheduleCallback,at=m.unstable_cancelCallback,it=m.unstable_shouldYield,st=m.unstable_requestPaint,ut=m.unstable_now,ct=m.unstable_getCurrentPriorityLevel,lt=m.unstable_ImmediatePriority,ft=m.unstable_UserBlockingPriority,dt=m.unstable_NormalPriority,pt=m.unstable_LowPriority,ht=m.unstable_IdlePriority,mt=null,yt=null;var gt=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(bt(e)/vt|0)|0},bt=Math.log,vt=Math.LN2;var wt=64,$t=4194304;function xt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function _t(e,t){var r=e.pendingLanes;if(0===r)return 0;var n=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&r;if(0!==i){var s=i&~o;0!==s?n=xt(s):0!==(a&=i)&&(n=xt(a))}else 0!==(i=r&~o)?n=xt(i):0!==a&&(n=xt(a));if(0===n)return 0;if(0!==t&&t!==n&&0==(t&o)&&((o=n&-n)>=(a=t&-t)||16===o&&0!=(4194240&a)))return t;if(0!=(4&n)&&(n|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-gt(t)),n|=e[r],t&=~o;return n}function St(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function Et(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function kt(){var e=wt;return 0==(4194240&(wt<<=1))&&(wt=64),e}function At(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Mt(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-gt(t)]=r}function Rt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-gt(r),o=1<<n;o&t|e[n]&t&&(e[n]|=t),r&=~o}}var Ct=0;function Pt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Tt,It,Nt,Ot,Ut,Lt=!1,Ft=[],Bt=null,jt=null,qt=null,Dt=new Map,zt=new Map,Kt=[],Ht="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Wt(e,t){switch(e){case"focusin":case"focusout":Bt=null;break;case"dragenter":case"dragleave":jt=null;break;case"mouseover":case"mouseout":qt=null;break;case"pointerover":case"pointerout":Dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":zt.delete(t.pointerId)}}function Vt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:a,targetContainers:[o]},null!==t&&(null!==(t=Po(t))&&It(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function Gt(e){var t=Co(e.target);if(null!==t){var r=Ze(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=et(r)))return e.blockedOn=t,void Ut(e.priority,(function(){Nt(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Xt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=ir(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=Po(r))&&It(t),e.blockedOn=r,!1;var n=new(r=e.nativeEvent).constructor(r.type,r);Pe=n,r.target.dispatchEvent(n),Pe=null,t.shift()}return!0}function Yt(e,t,r){Xt(e)&&r.delete(t)}function Jt(){Lt=!1,null!==Bt&&Xt(Bt)&&(Bt=null),null!==jt&&Xt(jt)&&(jt=null),null!==qt&&Xt(qt)&&(qt=null),Dt.forEach(Yt),zt.forEach(Yt)}function Qt(e,t){e.blockedOn===t&&(e.blockedOn=null,Lt||(Lt=!0,m.unstable_scheduleCallback(m.unstable_NormalPriority,Jt)))}function Zt(e){function t(t){return Qt(t,e)}if(0<Ft.length){Qt(Ft[0],e);for(var r=1;r<Ft.length;r++){var n=Ft[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==Bt&&Qt(Bt,e),null!==jt&&Qt(jt,e),null!==qt&&Qt(qt,e),Dt.forEach(t),zt.forEach(t),r=0;r<Kt.length;r++)(n=Kt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<Kt.length&&null===(r=Kt[0]).blockedOn;)Gt(r),null===r.blockedOn&&Kt.shift()}var er=P.ReactCurrentBatchConfig,tr=!0;function rr(e,t,r,n){var o=Ct,a=er.transition;er.transition=null;try{Ct=1,or(e,t,r,n)}finally{Ct=o,er.transition=a}}function nr(e,t,r,n){var o=Ct,a=er.transition;er.transition=null;try{Ct=4,or(e,t,r,n)}finally{Ct=o,er.transition=a}}function or(e,t,r,n){if(tr){var o=ir(e,t,r,n);if(null===o)to(e,t,n,ar,r),Wt(e,n);else if(function(e,t,r,n,o){switch(t){case"focusin":return Bt=Vt(Bt,e,t,r,n,o),!0;case"dragenter":return jt=Vt(jt,e,t,r,n,o),!0;case"mouseover":return qt=Vt(qt,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return Dt.set(a,Vt(Dt.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,zt.set(a,Vt(zt.get(a)||null,e,t,r,n,o)),!0}return!1}(o,e,t,r,n))n.stopPropagation();else if(Wt(e,n),4&t&&-1<Ht.indexOf(e)){for(;null!==o;){var a=Po(o);if(null!==a&&Tt(a),null===(a=ir(e,t,r,n))&&to(e,t,n,ar,r),a===o)break;o=a}null!==o&&n.stopPropagation()}else to(e,t,n,null,r)}}var ar=null;function ir(e,t,r,n){if(ar=null,null!==(e=Co(e=Te(n))))if(null===(t=Ze(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=et(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return ar=e,null}function sr(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ct()){case lt:return 1;case ft:return 4;case dt:case pt:return 16;case ht:return 536870912;default:return 16}default:return 16}}var ur=null,cr=null,lr=null;function fr(){if(lr)return lr;var e,t,r=cr,n=r.length,o="value"in ur?ur.value:ur.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return lr=o.slice(e,1<t?1-t:void 0)}function dr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function pr(){return!0}function hr(){return!1}function mr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?pr:hr,this.isPropagationStopped=hr,this}return G(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=pr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=pr)},persist:function(){},isPersistent:pr}),t}var yr,gr,br,vr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},wr=mr(vr),$r=G({},vr,{view:0,detail:0}),xr=mr($r),_r=G({},$r,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Or,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==br&&(br&&"mousemove"===e.type?(yr=e.screenX-br.screenX,gr=e.screenY-br.screenY):gr=yr=0,br=e),yr)},movementY:function(e){return"movementY"in e?e.movementY:gr}}),Sr=mr(_r),Er=mr(G({},_r,{dataTransfer:0})),kr=mr(G({},$r,{relatedTarget:0})),Ar=mr(G({},vr,{animationName:0,elapsedTime:0,pseudoElement:0})),Mr=G({},vr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Rr=mr(Mr),Cr=mr(G({},vr,{data:0})),Pr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Tr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ir={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ir[e])&&!!t[e]}function Or(){return Nr}var Ur=G({},$r,{key:function(e){if(e.key){var t=Pr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=dr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Tr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Or,charCode:function(e){return"keypress"===e.type?dr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?dr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Lr=mr(Ur),Fr=mr(G({},_r,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Br=mr(G({},$r,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Or})),jr=mr(G({},vr,{propertyName:0,elapsedTime:0,pseudoElement:0})),qr=G({},_r,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dr=mr(qr),zr=[9,13,27,32],Kr=$&&"CompositionEvent"in window,Hr=null;$&&"documentMode"in document&&(Hr=document.documentMode);var Wr=$&&"TextEvent"in window&&!Hr,Vr=$&&(!Kr||Hr&&8<Hr&&11>=Hr),Gr=String.fromCharCode(32),Xr=!1;function Yr(e,t){switch(e){case"keyup":return-1!==zr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Jr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Qr=!1;var Zr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function en(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Zr[e.type]:"textarea"===t}function tn(e,t,r,n){Le(n),0<(t=no(t,"onChange")).length&&(r=new wr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var rn=null,nn=null;function on(e){Xn(e,0)}function an(e){if(oe(To(e)))return e}function sn(e,t){if("change"===e)return t}var un=!1;if($){var cn;if($){var ln="oninput"in document;if(!ln){var fn=document.createElement("div");fn.setAttribute("oninput","return;"),ln="function"==typeof fn.oninput}cn=ln}else cn=!1;un=cn&&(!document.documentMode||9<document.documentMode)}function dn(){rn&&(rn.detachEvent("onpropertychange",pn),nn=rn=null)}function pn(e){if("value"===e.propertyName&&an(nn)){var t=[];tn(t,nn,e,Te(e)),De(on,t)}}function hn(e,t,r){"focusin"===e?(dn(),nn=r,(rn=t).attachEvent("onpropertychange",pn)):"focusout"===e&&dn()}function mn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return an(nn)}function yn(e,t){if("click"===e)return an(t)}function gn(e,t){if("input"===e||"change"===e)return an(t)}var bn="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function vn(e,t){if(bn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var o=r[n];if(!x.call(t,o)||!bn(e[o],t[o]))return!1}return!0}function wn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function $n(e,t){var r,n=wn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=wn(n)}}function xn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?xn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function _n(){for(var e=window,t=ae();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=ae((e=t.contentWindow).document)}return t}function Sn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function En(e){var t=_n(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&xn(r.ownerDocument.documentElement,r)){if(null!==n&&Sn(r))if(t=n.start,void 0===(e=n.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=r.textContent.length,a=Math.min(n.start,o);n=void 0===n.end?a:Math.min(n.end,o),!e.extend&&a>n&&(o=n,n=a,a=o),o=$n(r,a);var i=$n(r,n);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>n?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var kn=$&&"documentMode"in document&&11>=document.documentMode,An=null,Mn=null,Rn=null,Cn=!1;function Pn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;Cn||null==An||An!==ae(n)||("selectionStart"in(n=An)&&Sn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Rn&&vn(Rn,n)||(Rn=n,0<(n=no(Mn,"onSelect")).length&&(t=new wr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=An)))}function Tn(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var In={animationend:Tn("Animation","AnimationEnd"),animationiteration:Tn("Animation","AnimationIteration"),animationstart:Tn("Animation","AnimationStart"),transitionend:Tn("Transition","TransitionEnd")},Nn={},On={};function Un(e){if(Nn[e])return Nn[e];if(!In[e])return e;var t,r=In[e];for(t in r)if(r.hasOwnProperty(t)&&t in On)return Nn[e]=r[t];return e}$&&(On=document.createElement("div").style,"AnimationEvent"in window||(delete In.animationend.animation,delete In.animationiteration.animation,delete In.animationstart.animation),"TransitionEvent"in window||delete In.transitionend.transition);var Ln=Un("animationend"),Fn=Un("animationiteration"),Bn=Un("animationstart"),jn=Un("transitionend"),qn=new Map,Dn="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zn(e,t){qn.set(e,t),v(t,[e])}for(var Kn=0;Kn<Dn.length;Kn++){var Hn=Dn[Kn];zn(Hn.toLowerCase(),"on"+(Hn[0].toUpperCase()+Hn.slice(1)))}zn(Ln,"onAnimationEnd"),zn(Fn,"onAnimationIteration"),zn(Bn,"onAnimationStart"),zn("dblclick","onDoubleClick"),zn("focusin","onFocus"),zn("focusout","onBlur"),zn(jn,"onTransitionEnd"),w("onMouseEnter",["mouseout","mouseover"]),w("onMouseLeave",["mouseout","mouseover"]),w("onPointerEnter",["pointerout","pointerover"]),w("onPointerLeave",["pointerout","pointerover"]),v("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),v("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),v("onBeforeInput",["compositionend","keypress","textInput","paste"]),v("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),v("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),v("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Wn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Vn=new Set("cancel close invalid load scroll toggle".split(" ").concat(Wn));function Gn(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,i,s,u){if(Qe.apply(this,arguments),Ve){if(!Ve)throw Error(y(198));var c=Ge;Ve=!1,Ge=null,Xe||(Xe=!0,Ye=c)}}(n,t,void 0,e),e.currentTarget=null}function Xn(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var s=n[i],u=s.instance,c=s.currentTarget;if(s=s.listener,u!==a&&o.isPropagationStopped())break e;Gn(o,s,c),a=u}else for(i=0;i<n.length;i++){if(u=(s=n[i]).instance,c=s.currentTarget,s=s.listener,u!==a&&o.isPropagationStopped())break e;Gn(o,s,c),a=u}}}if(Xe)throw e=Ye,Xe=!1,Ye=null,e}function Yn(e,t){var r=t[Ao];void 0===r&&(r=t[Ao]=new Set);var n=e+"__bubble";r.has(n)||(eo(t,e,2,!1),r.add(n))}function Jn(e,t,r){var n=0;t&&(n|=4),eo(r,e,n,t)}var Qn="_reactListening"+Math.random().toString(36).slice(2);function Zn(e){if(!e[Qn]){e[Qn]=!0,g.forEach((function(t){"selectionchange"!==t&&(Vn.has(t)||Jn(t,!1,e),Jn(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Qn]||(t[Qn]=!0,Jn("selectionchange",!1,t))}}function eo(e,t,r,n){switch(sr(t)){case 1:var o=rr;break;case 4:o=nr;break;default:o=or}r=o.bind(null,t,r,e),o=void 0,!Ke||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function to(e,t,r,n,o){var a=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var s=n.stateNode.containerInfo;if(s===o||8===s.nodeType&&s.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==s;){if(null===(i=Co(s)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}s=s.parentNode}}n=n.return}De((function(){var n=a,o=Te(r),i=[];e:{var s=qn.get(e);if(void 0!==s){var u=wr,c=e;switch(e){case"keypress":if(0===dr(r))break e;case"keydown":case"keyup":u=Lr;break;case"focusin":c="focus",u=kr;break;case"focusout":c="blur",u=kr;break;case"beforeblur":case"afterblur":u=kr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=Sr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=Er;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Br;break;case Ln:case Fn:case Bn:u=Ar;break;case jn:u=jr;break;case"scroll":u=xr;break;case"wheel":u=Dr;break;case"copy":case"cut":case"paste":u=Rr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Fr}var l=0!=(4&t),f=!l&&"scroll"===e,d=l?null!==s?s+"Capture":null:s;l=[];for(var p,h=n;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=ze(h,d))&&l.push(ro(h,m,p)))),f)break;h=h.return}0<l.length&&(s=new u(s,c,null,r,o),i.push({event:s,listeners:l}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||r===Pe||!(c=r.relatedTarget||r.fromElement)||!Co(c)&&!c[ko])&&(u||s)&&(s=o.window===o?o:(s=o.ownerDocument)?s.defaultView||s.parentWindow:window,u?(u=n,null!==(c=(c=r.relatedTarget||r.toElement)?Co(c):null)&&(c!==(f=Ze(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=n),u!==c)){if(l=Sr,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(l=Fr,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?s:To(u),p=null==c?s:To(c),(s=new l(m,h+"leave",u,r,o)).target=f,s.relatedTarget=p,m=null,Co(o)===n&&((l=new l(d,h+"enter",c,r,o)).target=p,l.relatedTarget=f,m=l),f=m,u&&c)e:{for(d=c,h=0,p=l=u;p;p=oo(p))h++;for(p=0,m=d;m;m=oo(m))p++;for(;0<h-p;)l=oo(l),h--;for(;0<p-h;)d=oo(d),p--;for(;h--;){if(l===d||null!==d&&l===d.alternate)break e;l=oo(l),d=oo(d)}l=null}else l=null;null!==u&&ao(i,s,u,l,!1),null!==c&&null!==f&&ao(i,f,c,l,!0)}if("select"===(u=(s=n?To(n):window).nodeName&&s.nodeName.toLowerCase())||"input"===u&&"file"===s.type)var y=sn;else if(en(s))if(un)y=gn;else{y=mn;var g=hn}else(u=s.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(y=yn);switch(y&&(y=y(e,n))?tn(i,y,r,o):(g&&g(e,s,n),"focusout"===e&&(g=s._wrapperState)&&g.controlled&&"number"===s.type&&fe(s,"number",s.value)),g=n?To(n):window,e){case"focusin":(en(g)||"true"===g.contentEditable)&&(An=g,Mn=n,Rn=null);break;case"focusout":Rn=Mn=An=null;break;case"mousedown":Cn=!0;break;case"contextmenu":case"mouseup":case"dragend":Cn=!1,Pn(i,r,o);break;case"selectionchange":if(kn)break;case"keydown":case"keyup":Pn(i,r,o)}var b;if(Kr)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Qr?Yr(e,r)&&(v="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(v="onCompositionStart");v&&(Vr&&"ko"!==r.locale&&(Qr||"onCompositionStart"!==v?"onCompositionEnd"===v&&Qr&&(b=fr()):(cr="value"in(ur=o)?ur.value:ur.textContent,Qr=!0)),0<(g=no(n,v)).length&&(v=new Cr(v,e,null,r,o),i.push({event:v,listeners:g}),b?v.data=b:null!==(b=Jr(r))&&(v.data=b))),(b=Wr?function(e,t){switch(e){case"compositionend":return Jr(t);case"keypress":return 32!==t.which?null:(Xr=!0,Gr);case"textInput":return(e=t.data)===Gr&&Xr?null:e;default:return null}}(e,r):function(e,t){if(Qr)return"compositionend"===e||!Kr&&Yr(e,t)?(e=fr(),lr=cr=ur=null,Qr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Vr&&"ko"!==t.locale?null:t.data}}(e,r))&&(0<(n=no(n,"onBeforeInput")).length&&(o=new Cr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=b))}Xn(i,t)}))}function ro(e,t,r){return{instance:e,listener:t,currentTarget:r}}function no(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=ze(e,r))&&n.unshift(ro(e,a,o)),null!=(a=ze(e,t))&&n.push(ro(e,a,o))),e=e.return}return n}function oo(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function ao(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var s=r,u=s.alternate,c=s.stateNode;if(null!==u&&u===n)break;5===s.tag&&null!==c&&(s=c,o?null!=(u=ze(r,a))&&i.unshift(ro(r,u,s)):o||null!=(u=ze(r,a))&&i.push(ro(r,u,s))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}var io=/\r\n?/g,so=/\u0000|\uFFFD/g;function uo(e){return("string"==typeof e?e:""+e).replace(io,"\n").replace(so,"")}function co(e,t,r){if(t=uo(t),uo(e)!==t&&r)throw Error(y(425))}function lo(){}var fo=null,po=null;function ho(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var mo="function"==typeof setTimeout?setTimeout:void 0,yo="function"==typeof clearTimeout?clearTimeout:void 0,go="function"==typeof Promise?Promise:void 0,bo="function"==typeof queueMicrotask?queueMicrotask:void 0!==go?function(e){return go.resolve(null).then(e).catch(vo)}:mo;function vo(e){setTimeout((function(){throw e}))}function wo(e,t){var r=t,n=0;do{var o=r.nextSibling;if(e.removeChild(r),o&&8===o.nodeType)if("/$"===(r=o.data)){if(0===n)return e.removeChild(o),void Zt(t);n--}else"$"!==r&&"$?"!==r&&"$!"!==r||n++;r=o}while(r);Zt(t)}function $o(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function xo(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var _o=Math.random().toString(36).slice(2),So="__reactFiber$"+_o,Eo="__reactProps$"+_o,ko="__reactContainer$"+_o,Ao="__reactEvents$"+_o,Mo="__reactListeners$"+_o,Ro="__reactHandles$"+_o;function Co(e){var t=e[So];if(t)return t;for(var r=e.parentNode;r;){if(t=r[ko]||r[So]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=xo(e);null!==e;){if(r=e[So])return r;e=xo(e)}return t}r=(e=r).parentNode}return null}function Po(e){return!(e=e[So]||e[ko])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function To(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(y(33))}function Io(e){return e[Eo]||null}var No=[],Oo=-1;function Uo(e){return{current:e}}function Lo(e){0>Oo||(e.current=No[Oo],No[Oo]=null,Oo--)}function Fo(e,t){Oo++,No[Oo]=e.current,e.current=t}var Bo={},jo=Uo(Bo),qo=Uo(!1),Do=Bo;function zo(e,t){var r=e.type.contextTypes;if(!r)return Bo;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ko(e){return null!=(e=e.childContextTypes)}function Ho(){Lo(qo),Lo(jo)}function Wo(e,t,r){if(jo.current!==Bo)throw Error(y(168));Fo(jo,t),Fo(qo,r)}function Vo(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var o in n=n.getChildContext())if(!(o in t))throw Error(y(108,ee(e)||"Unknown",o));return G({},r,n)}function Go(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Bo,Do=jo.current,Fo(jo,e),Fo(qo,qo.current),!0}function Xo(e,t,r){var n=e.stateNode;if(!n)throw Error(y(169));r?(e=Vo(e,t,Do),n.__reactInternalMemoizedMergedChildContext=e,Lo(qo),Lo(jo),Fo(jo,e)):Lo(qo),Fo(qo,r)}var Yo=null,Jo=!1,Qo=!1;function Zo(e){null===Yo?Yo=[e]:Yo.push(e)}function ea(){if(!Qo&&null!==Yo){Qo=!0;var e=0,t=Ct;try{var r=Yo;for(Ct=1;e<r.length;e++){var n=r[e];do{n=n(!0)}while(null!==n)}Yo=null,Jo=!1}catch(t){throw null!==Yo&&(Yo=Yo.slice(e+1)),ot(lt,ea),t}finally{Ct=t,Qo=!1}}return null}var ta=[],ra=0,na=null,oa=0,aa=[],ia=0,sa=null,ua=1,ca="";function la(e,t){ta[ra++]=oa,ta[ra++]=na,na=e,oa=t}function fa(e,t,r){aa[ia++]=ua,aa[ia++]=ca,aa[ia++]=sa,sa=e;var n=ua;e=ca;var o=32-gt(n)-1;n&=~(1<<o),r+=1;var a=32-gt(t)+o;if(30<a){var i=o-o%5;a=(n&(1<<i)-1).toString(32),n>>=i,o-=i,ua=1<<32-gt(t)+o|r<<o|n,ca=a+e}else ua=1<<a|r<<o|n,ca=e}function da(e){null!==e.return&&(la(e,1),fa(e,1,0))}function pa(e){for(;e===na;)na=ta[--ra],ta[ra]=null,oa=ta[--ra],ta[ra]=null;for(;e===sa;)sa=aa[--ia],aa[ia]=null,ca=aa[--ia],aa[ia]=null,ua=aa[--ia],aa[ia]=null}var ha=null,ma=null,ya=!1,ga=null;function ba(e,t){var r=Dc(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function va(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ha=e,ma=$o(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ha=e,ma=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==sa?{id:ua,overflow:ca}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Dc(18,null,null,0)).stateNode=t,r.return=e,e.child=r,ha=e,ma=null,!0);default:return!1}}function wa(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function $a(e){if(ya){var t=ma;if(t){var r=t;if(!va(e,t)){if(wa(e))throw Error(y(418));t=$o(r.nextSibling);var n=ha;t&&va(e,t)?ba(n,r):(e.flags=-4097&e.flags|2,ya=!1,ha=e)}}else{if(wa(e))throw Error(y(418));e.flags=-4097&e.flags|2,ya=!1,ha=e}}}function xa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ha=e}function _a(e){if(e!==ha)return!1;if(!ya)return xa(e),ya=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ho(e.type,e.memoizedProps)),t&&(t=ma)){if(wa(e))throw Sa(),Error(y(418));for(;t;)ba(e,t),t=$o(t.nextSibling)}if(xa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(y(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){ma=$o(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}ma=null}}else ma=ha?$o(e.stateNode.nextSibling):null;return!0}function Sa(){for(var e=ma;e;)e=$o(e.nextSibling)}function Ea(){ma=ha=null,ya=!1}function ka(e){null===ga?ga=[e]:ga.push(e)}var Aa=P.ReactCurrentBatchConfig;function Ma(e,t){if(e&&e.defaultProps){for(var r in t=G({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Ra=Uo(null),Ca=null,Pa=null,Ta=null;function Ia(){Ta=Pa=Ca=null}function Na(e){var t=Ra.current;Lo(Ra),e._currentValue=t}function Oa(e,t,r){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==n&&(n.childLanes|=t)):null!==n&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function Ua(e,t){Ca=e,Ta=Pa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ps=!0),e.firstContext=null)}function La(e){var t=e._currentValue;if(Ta!==e)if(e={context:e,memoizedValue:t,next:null},null===Pa){if(null===Ca)throw Error(y(308));Pa=e,Ca.dependencies={lanes:0,firstContext:e}}else Pa=Pa.next=e;return t}var Fa=null;function Ba(e){null===Fa?Fa=[e]:Fa.push(e)}function ja(e,t,r,n){var o=t.interleaved;return null===o?(r.next=r,Ba(t)):(r.next=o.next,o.next=r),t.interleaved=r,qa(e,n)}function qa(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Da=!1;function za(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ka(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ha(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Wa(e,t,r){var n=e.updateQueue;if(null===n)return null;if(n=n.shared,0!=(2&Bu)){var o=n.pending;return null===o?t.next=t:(t.next=o.next,o.next=t),n.pending=t,qa(e,r)}return null===(o=n.interleaved)?(t.next=t,Ba(n)):(t.next=o.next,o.next=t),n.interleaved=t,qa(e,r)}function Va(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,Rt(e,r)}}function Ga(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Xa(e,t,r,n){var o=e.updateQueue;Da=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,s=o.shared.pending;if(null!==s){o.shared.pending=null;var u=s,c=u.next;u.next=null,null===i?a=c:i.next=c,i=u;var l=e.alternate;null!==l&&((s=(l=l.updateQueue).lastBaseUpdate)!==i&&(null===s?l.firstBaseUpdate=c:s.next=c,l.lastBaseUpdate=u))}if(null!==a){var f=o.baseState;for(i=0,l=c=u=null,s=a;;){var d=s.lane,p=s.eventTime;if((n&d)===d){null!==l&&(l=l.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var h=e,m=s;switch(d=t,p=r,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=G({},f,d);break e;case 2:Da=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(d=o.effects)?o.effects=[s]:d.push(s))}else p={eventTime:p,lane:d,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===l?(c=l=p,u=f):l=l.next=p,i|=d;if(null===(s=s.next)){if(null===(s=o.shared.pending))break;s=(d=s).next,d.next=null,o.lastBaseUpdate=d,o.shared.pending=null}}if(null===l&&(u=f),o.baseState=u,o.firstBaseUpdate=c,o.lastBaseUpdate=l,null!==(t=o.shared.interleaved)){o=t;do{i|=o.lane,o=o.next}while(o!==t)}else null===a&&(o.shared.lanes=0);Vu|=i,e.lanes=i,e.memoizedState=f}}function Ya(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!=typeof o)throw Error(y(191,o));o.call(n)}}}var Ja=(new h.Component).refs;function Qa(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:G({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var Za={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=fc(),o=dc(e),a=Ha(n,o);a.payload=t,null!=r&&(a.callback=r),null!==(t=Wa(e,a,o))&&(pc(t,e,o,n),Va(t,e,o))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=fc(),o=dc(e),a=Ha(n,o);a.tag=1,a.payload=t,null!=r&&(a.callback=r),null!==(t=Wa(e,a,o))&&(pc(t,e,o,n),Va(t,e,o))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=fc(),n=dc(e),o=Ha(r,n);o.tag=2,null!=t&&(o.callback=t),null!==(t=Wa(e,o,n))&&(pc(t,e,n,r),Va(t,e,n))}};function ei(e,t,r,n,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!vn(r,n)||!vn(o,a))}function ti(e,t,r){var n=!1,o=Bo,a=t.contextType;return"object"==typeof a&&null!==a?a=La(a):(o=Ko(t)?Do:jo.current,a=(n=null!=(n=t.contextTypes))?zo(e,o):Bo),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Za,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ri(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&Za.enqueueReplaceState(t,t.state,null)}function ni(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=Ja,za(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=La(a):(a=Ko(t)?Do:jo.current,o.context=zo(e,a)),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(Qa(e,t,a,r),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Za.enqueueReplaceState(o,o.state,null),Xa(e,r,o,n),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function oi(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(y(309));var n=r.stateNode}if(!n)throw Error(y(147,e));var o=n,a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=o.refs;t===Ja&&(t=o.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(y(284));if(!r._owner)throw Error(y(290,e))}return e}function ai(e,t){throw e=Object.prototype.toString.call(t),Error(y(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ii(e){return(0,e._init)(e._payload)}function si(e){function t(t,r){if(e){var n=t.deletions;null===n?(t.deletions=[r],t.flags|=16):n.push(r)}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Kc(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags|=2,r):n:(t.flags|=2,r):(t.flags|=1048576,r)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,r,n){return null===t||6!==t.tag?((t=Gc(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function u(e,t,r,n){var a=r.type;return a===N?l(e,t,r.props.children,n,r.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===z&&ii(a)===t.type)?((n=o(t,r.props)).ref=oi(e,t,r),n.return=e,n):((n=Hc(r.type,r.key,r.props,null,e.mode,n)).ref=oi(e,t,r),n.return=e,n)}function c(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Xc(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function l(e,t,r,n,a){return null===t||7!==t.tag?((t=Wc(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function f(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Gc(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case T:return(r=Hc(t.type,t.key,t.props,null,e.mode,r)).ref=oi(e,null,t),r.return=e,r;case I:return(t=Xc(t,e.mode,r)).return=e,t;case z:return f(e,(0,t._init)(t._payload),r)}if(de(t)||W(t))return(t=Wc(t,e.mode,r,null)).return=e,t;ai(e,t)}return null}function d(e,t,r,n){var o=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==o?null:s(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case T:return r.key===o?u(e,t,r,n):null;case I:return r.key===o?c(e,t,r,n):null;case z:return d(e,t,(o=r._init)(r._payload),n)}if(de(r)||W(r))return null!==o?null:l(e,t,r,n,null);ai(e,r)}return null}function p(e,t,r,n,o){if("string"==typeof n&&""!==n||"number"==typeof n)return s(t,e=e.get(r)||null,""+n,o);if("object"==typeof n&&null!==n){switch(n.$$typeof){case T:return u(t,e=e.get(null===n.key?r:n.key)||null,n,o);case I:return c(t,e=e.get(null===n.key?r:n.key)||null,n,o);case z:return p(e,t,r,(0,n._init)(n._payload),o)}if(de(n)||W(n))return l(t,e=e.get(r)||null,n,o,null);ai(t,n)}return null}function h(o,i,s,u){for(var c=null,l=null,h=i,m=i=0,y=null;null!==h&&m<s.length;m++){h.index>m?(y=h,h=null):y=h.sibling;var g=d(o,h,s[m],u);if(null===g){null===h&&(h=y);break}e&&h&&null===g.alternate&&t(o,h),i=a(g,i,m),null===l?c=g:l.sibling=g,l=g,h=y}if(m===s.length)return r(o,h),ya&&la(o,m),c;if(null===h){for(;m<s.length;m++)null!==(h=f(o,s[m],u))&&(i=a(h,i,m),null===l?c=h:l.sibling=h,l=h);return ya&&la(o,m),c}for(h=n(o,h);m<s.length;m++)null!==(y=p(h,o,m,s[m],u))&&(e&&null!==y.alternate&&h.delete(null===y.key?m:y.key),i=a(y,i,m),null===l?c=y:l.sibling=y,l=y);return e&&h.forEach((function(e){return t(o,e)})),ya&&la(o,m),c}function m(o,i,s,u){var c=W(s);if("function"!=typeof c)throw Error(y(150));if(null==(s=c.call(s)))throw Error(y(151));for(var l=c=null,h=i,m=i=0,g=null,b=s.next();null!==h&&!b.done;m++,b=s.next()){h.index>m?(g=h,h=null):g=h.sibling;var v=d(o,h,b.value,u);if(null===v){null===h&&(h=g);break}e&&h&&null===v.alternate&&t(o,h),i=a(v,i,m),null===l?c=v:l.sibling=v,l=v,h=g}if(b.done)return r(o,h),ya&&la(o,m),c;if(null===h){for(;!b.done;m++,b=s.next())null!==(b=f(o,b.value,u))&&(i=a(b,i,m),null===l?c=b:l.sibling=b,l=b);return ya&&la(o,m),c}for(h=n(o,h);!b.done;m++,b=s.next())null!==(b=p(h,o,m,b.value,u))&&(e&&null!==b.alternate&&h.delete(null===b.key?m:b.key),i=a(b,i,m),null===l?c=b:l.sibling=b,l=b);return e&&h.forEach((function(e){return t(o,e)})),ya&&la(o,m),c}return function e(n,a,s,u){if("object"==typeof s&&null!==s&&s.type===N&&null===s.key&&(s=s.props.children),"object"==typeof s&&null!==s){switch(s.$$typeof){case T:e:{for(var c=s.key,l=a;null!==l;){if(l.key===c){if((c=s.type)===N){if(7===l.tag){r(n,l.sibling),(a=o(l,s.props.children)).return=n,n=a;break e}}else if(l.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===z&&ii(c)===l.type){r(n,l.sibling),(a=o(l,s.props)).ref=oi(n,l,s),a.return=n,n=a;break e}r(n,l);break}t(n,l),l=l.sibling}s.type===N?((a=Wc(s.props.children,n.mode,u,s.key)).return=n,n=a):((u=Hc(s.type,s.key,s.props,null,n.mode,u)).ref=oi(n,a,s),u.return=n,n=u)}return i(n);case I:e:{for(l=s.key;null!==a;){if(a.key===l){if(4===a.tag&&a.stateNode.containerInfo===s.containerInfo&&a.stateNode.implementation===s.implementation){r(n,a.sibling),(a=o(a,s.children||[])).return=n,n=a;break e}r(n,a);break}t(n,a),a=a.sibling}(a=Xc(s,n.mode,u)).return=n,n=a}return i(n);case z:return e(n,a,(l=s._init)(s._payload),u)}if(de(s))return h(n,a,s,u);if(W(s))return m(n,a,s,u);ai(n,s)}return"string"==typeof s&&""!==s||"number"==typeof s?(s=""+s,null!==a&&6===a.tag?(r(n,a.sibling),(a=o(a,s)).return=n,n=a):(r(n,a),(a=Gc(s,n.mode,u)).return=n,n=a),i(n)):r(n,a)}}var ui=si(!0),ci=si(!1),li={},fi=Uo(li),di=Uo(li),pi=Uo(li);function hi(e){if(e===li)throw Error(y(174));return e}function mi(e,t){switch(Fo(pi,t),Fo(di,e),Fo(fi,li),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ve(null,"");break;default:t=ve(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Lo(fi),Fo(fi,t)}function yi(){Lo(fi),Lo(di),Lo(pi)}function gi(e){hi(pi.current);var t=hi(fi.current),r=ve(t,e.type);t!==r&&(Fo(di,e),Fo(fi,r))}function bi(e){di.current===e&&(Lo(fi),Lo(di))}var vi=Uo(0);function wi(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var $i=[];function xi(){for(var e=0;e<$i.length;e++)$i[e]._workInProgressVersionPrimary=null;$i.length=0}var _i=P.ReactCurrentDispatcher,Si=P.ReactCurrentBatchConfig,Ei=0,ki=null,Ai=null,Mi=null,Ri=!1,Ci=!1,Pi=0,Ti=0;function Ii(){throw Error(y(321))}function Ni(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!bn(e[r],t[r]))return!1;return!0}function Oi(e,t,r,n,o,a){if(Ei=a,ki=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,_i.current=null===e||null===e.memoizedState?bs:vs,e=r(n,o),Ci){a=0;do{if(Ci=!1,Pi=0,25<=a)throw Error(y(301));a+=1,Mi=Ai=null,t.updateQueue=null,_i.current=ws,e=r(n,o)}while(Ci)}if(_i.current=gs,t=null!==Ai&&null!==Ai.next,Ei=0,Mi=Ai=ki=null,Ri=!1,t)throw Error(y(300));return e}function Ui(){var e=0!==Pi;return Pi=0,e}function Li(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Mi?ki.memoizedState=Mi=e:Mi=Mi.next=e,Mi}function Fi(){if(null===Ai){var e=ki.alternate;e=null!==e?e.memoizedState:null}else e=Ai.next;var t=null===Mi?ki.memoizedState:Mi.next;if(null!==t)Mi=t,Ai=e;else{if(null===e)throw Error(y(310));e={memoizedState:(Ai=e).memoizedState,baseState:Ai.baseState,baseQueue:Ai.baseQueue,queue:Ai.queue,next:null},null===Mi?ki.memoizedState=Mi=e:Mi=Mi.next=e}return Mi}function Bi(e,t){return"function"==typeof t?t(e):t}function ji(e){var t=Fi(),r=t.queue;if(null===r)throw Error(y(311));r.lastRenderedReducer=e;var n=Ai,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var i=o.next;o.next=a.next,a.next=i}n.baseQueue=o=a,r.pending=null}if(null!==o){a=o.next,n=n.baseState;var s=i=null,u=null,c=a;do{var l=c.lane;if((Ei&l)===l)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),n=c.hasEagerState?c.eagerState:e(n,c.action);else{var f={lane:l,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(s=u=f,i=n):u=u.next=f,ki.lanes|=l,Vu|=l}c=c.next}while(null!==c&&c!==a);null===u?i=n:u.next=s,bn(n,t.memoizedState)||(Ps=!0),t.memoizedState=n,t.baseState=i,t.baseQueue=u,r.lastRenderedState=n}if(null!==(e=r.interleaved)){o=e;do{a=o.lane,ki.lanes|=a,Vu|=a,o=o.next}while(o!==e)}else null===o&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function qi(e){var t=Fi(),r=t.queue;if(null===r)throw Error(y(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var i=o=o.next;do{a=e(a,i.action),i=i.next}while(i!==o);bn(a,t.memoizedState)||(Ps=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function Di(){}function zi(e,t){var r=ki,n=Fi(),o=t(),a=!bn(n.memoizedState,o);if(a&&(n.memoizedState=o,Ps=!0),n=n.queue,ts(Wi.bind(null,r,n,e),[e]),n.getSnapshot!==t||a||null!==Mi&&1&Mi.memoizedState.tag){if(r.flags|=2048,Yi(9,Hi.bind(null,r,n,o,t),void 0,null),null===ju)throw Error(y(349));0!=(30&Ei)||Ki(r,t,o)}return o}function Ki(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=ki.updateQueue)?(t={lastEffect:null,stores:null},ki.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Hi(e,t,r,n){t.value=r,t.getSnapshot=n,Vi(t)&&Gi(e)}function Wi(e,t,r){return r((function(){Vi(t)&&Gi(e)}))}function Vi(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!bn(e,r)}catch(e){return!0}}function Gi(e){var t=qa(e,1);null!==t&&pc(t,e,1,-1)}function Xi(e){var t=Li();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Bi,lastRenderedState:e},t.queue=e,e=e.dispatch=ps.bind(null,ki,e),[t.memoizedState,e]}function Yi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=ki.updateQueue)?(t={lastEffect:null,stores:null},ki.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function Ji(){return Fi().memoizedState}function Qi(e,t,r,n){var o=Li();ki.flags|=e,o.memoizedState=Yi(1|t,r,void 0,void 0===n?null:n)}function Zi(e,t,r,n){var o=Fi();n=void 0===n?null:n;var a=void 0;if(null!==Ai){var i=Ai.memoizedState;if(a=i.destroy,null!==n&&Ni(n,i.deps))return void(o.memoizedState=Yi(t,r,a,n))}ki.flags|=e,o.memoizedState=Yi(1|t,r,a,n)}function es(e,t){return Qi(8390656,8,e,t)}function ts(e,t){return Zi(2048,8,e,t)}function rs(e,t){return Zi(4,2,e,t)}function ns(e,t){return Zi(4,4,e,t)}function os(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function as(e,t,r){return r=null!=r?r.concat([e]):null,Zi(4,4,os.bind(null,t,e),r)}function is(){}function ss(e,t){var r=Fi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Ni(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function us(e,t){var r=Fi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Ni(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function cs(e,t,r){return 0==(21&Ei)?(e.baseState&&(e.baseState=!1,Ps=!0),e.memoizedState=r):(bn(r,t)||(r=kt(),ki.lanes|=r,Vu|=r,e.baseState=!0),t)}function ls(e,t){var r=Ct;Ct=0!==r&&4>r?r:4,e(!0);var n=Si.transition;Si.transition={};try{e(!1),t()}finally{Ct=r,Si.transition=n}}function fs(){return Fi().memoizedState}function ds(e,t,r){var n=dc(e);if(r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},hs(e))ms(t,r);else if(null!==(r=ja(e,t,r,n))){pc(r,e,n,fc()),ys(r,t,n)}}function ps(e,t,r){var n=dc(e),o={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(hs(e))ms(t,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,s=a(i,r);if(o.hasEagerState=!0,o.eagerState=s,bn(s,i)){var u=t.interleaved;return null===u?(o.next=o,Ba(t)):(o.next=u.next,u.next=o),void(t.interleaved=o)}}catch(e){}null!==(r=ja(e,t,o,n))&&(pc(r,e,n,o=fc()),ys(r,t,n))}}function hs(e){var t=e.alternate;return e===ki||null!==t&&t===ki}function ms(e,t){Ci=Ri=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function ys(e,t,r){if(0!=(4194240&r)){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,Rt(e,r)}}var gs={readContext:La,useCallback:Ii,useContext:Ii,useEffect:Ii,useImperativeHandle:Ii,useInsertionEffect:Ii,useLayoutEffect:Ii,useMemo:Ii,useReducer:Ii,useRef:Ii,useState:Ii,useDebugValue:Ii,useDeferredValue:Ii,useTransition:Ii,useMutableSource:Ii,useSyncExternalStore:Ii,useId:Ii,unstable_isNewReconciler:!1},bs={readContext:La,useCallback:function(e,t){return Li().memoizedState=[e,void 0===t?null:t],e},useContext:La,useEffect:es,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,Qi(4194308,4,os.bind(null,t,e),r)},useLayoutEffect:function(e,t){return Qi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Qi(4,2,e,t)},useMemo:function(e,t){var r=Li();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=Li();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=ds.bind(null,ki,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},Li().memoizedState=e},useState:Xi,useDebugValue:is,useDeferredValue:function(e){return Li().memoizedState=e},useTransition:function(){var e=Xi(!1),t=e[0];return e=ls.bind(null,e[1]),Li().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=ki,o=Li();if(ya){if(void 0===r)throw Error(y(407));r=r()}else{if(r=t(),null===ju)throw Error(y(349));0!=(30&Ei)||Ki(n,t,r)}o.memoizedState=r;var a={value:r,getSnapshot:t};return o.queue=a,es(Wi.bind(null,n,a,e),[e]),n.flags|=2048,Yi(9,Hi.bind(null,n,a,r,t),void 0,null),r},useId:function(){var e=Li(),t=ju.identifierPrefix;if(ya){var r=ca;t=":"+t+"R"+(r=(ua&~(1<<32-gt(ua)-1)).toString(32)+r),0<(r=Pi++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=Ti++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},vs={readContext:La,useCallback:ss,useContext:La,useEffect:ts,useImperativeHandle:as,useInsertionEffect:rs,useLayoutEffect:ns,useMemo:us,useReducer:ji,useRef:Ji,useState:function(){return ji(Bi)},useDebugValue:is,useDeferredValue:function(e){return cs(Fi(),Ai.memoizedState,e)},useTransition:function(){return[ji(Bi)[0],Fi().memoizedState]},useMutableSource:Di,useSyncExternalStore:zi,useId:fs,unstable_isNewReconciler:!1},ws={readContext:La,useCallback:ss,useContext:La,useEffect:ts,useImperativeHandle:as,useInsertionEffect:rs,useLayoutEffect:ns,useMemo:us,useReducer:qi,useRef:Ji,useState:function(){return qi(Bi)},useDebugValue:is,useDeferredValue:function(e){var t=Fi();return null===Ai?t.memoizedState=e:cs(t,Ai.memoizedState,e)},useTransition:function(){return[qi(Bi)[0],Fi().memoizedState]},useMutableSource:Di,useSyncExternalStore:zi,useId:fs,unstable_isNewReconciler:!1};function $s(e,t){try{var r="",n=t;do{r+=Q(n),n=n.return}while(n);var o=r}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o,digest:null}}function xs(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function _s(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var Ss="function"==typeof WeakMap?WeakMap:Map;function Es(e,t,r){(r=Ha(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){tc||(tc=!0,rc=n),_s(0,t)},r}function ks(e,t,r){(r=Ha(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var o=t.value;r.payload=function(){return n(o)},r.callback=function(){_s(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(r.callback=function(){_s(0,t),"function"!=typeof n&&(null===nc?nc=new Set([this]):nc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function As(e,t,r){var n=e.pingCache;if(null===n){n=e.pingCache=new Ss;var o=new Set;n.set(t,o)}else void 0===(o=n.get(t))&&(o=new Set,n.set(t,o));o.has(r)||(o.add(r),e=Uc.bind(null,e,t,r),t.then(e,e))}function Ms(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function Rs(e,t,r,n,o){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Ha(-1,1)).tag=2,Wa(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var Cs=P.ReactCurrentOwner,Ps=!1;function Ts(e,t,r,n){t.child=null===e?ci(t,null,r,n):ui(t,e.child,r,n)}function Is(e,t,r,n,o){r=r.render;var a=t.ref;return Ua(t,o),n=Oi(e,t,r,n,a,o),r=Ui(),null===e||Ps?(ya&&r&&da(t),t.flags|=1,Ts(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,tu(e,t,o))}function Ns(e,t,r,n,o){if(null===e){var a=r.type;return"function"!=typeof a||zc(a)||void 0!==a.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Hc(r.type,null,n,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Os(e,t,a,n,o))}if(a=e.child,0==(e.lanes&o)){var i=a.memoizedProps;if((r=null!==(r=r.compare)?r:vn)(i,n)&&e.ref===t.ref)return tu(e,t,o)}return t.flags|=1,(e=Kc(a,n)).ref=t.ref,e.return=t,t.child=e}function Os(e,t,r,n,o){if(null!==e){var a=e.memoizedProps;if(vn(a,n)&&e.ref===t.ref){if(Ps=!1,t.pendingProps=n=a,0==(e.lanes&o))return t.lanes=e.lanes,tu(e,t,o);0!=(131072&e.flags)&&(Ps=!0)}}return Fs(e,t,r,n,o)}function Us(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Fo(Ku,zu),zu|=r;else{if(0==(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Fo(Ku,zu),zu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=null!==a?a.baseLanes:r,Fo(Ku,zu),zu|=n}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,Fo(Ku,zu),zu|=n;return Ts(e,t,o,r),t.child}function Ls(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function Fs(e,t,r,n,o){var a=Ko(r)?Do:jo.current;return a=zo(t,a),Ua(t,o),r=Oi(e,t,r,n,a,o),n=Ui(),null===e||Ps?(ya&&n&&da(t),t.flags|=1,Ts(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,tu(e,t,o))}function Bs(e,t,r,n,o){if(Ko(r)){var a=!0;Go(t)}else a=!1;if(Ua(t,o),null===t.stateNode)eu(e,t),ti(t,r,n),ni(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,s=t.memoizedProps;i.props=s;var u=i.context,c=r.contextType;"object"==typeof c&&null!==c?c=La(c):c=zo(t,c=Ko(r)?Do:jo.current);var l=r.getDerivedStateFromProps,f="function"==typeof l||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==n||u!==c)&&ri(t,i,n,c),Da=!1;var d=t.memoizedState;i.state=d,Xa(t,n,i,o),u=t.memoizedState,s!==n||d!==u||qo.current||Da?("function"==typeof l&&(Qa(t,r,l,n),u=t.memoizedState),(s=Da||ei(t,r,s,n,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=c,n=s):("function"==typeof i.componentDidMount&&(t.flags|=4194308),n=!1)}else{i=t.stateNode,Ka(e,t),s=t.memoizedProps,c=t.type===t.elementType?s:Ma(t.type,s),i.props=c,f=t.pendingProps,d=i.context,"object"==typeof(u=r.contextType)&&null!==u?u=La(u):u=zo(t,u=Ko(r)?Do:jo.current);var p=r.getDerivedStateFromProps;(l="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==f||d!==u)&&ri(t,i,n,u),Da=!1,d=t.memoizedState,i.state=d,Xa(t,n,i,o);var h=t.memoizedState;s!==f||d!==h||qo.current||Da?("function"==typeof p&&(Qa(t,r,p,n),h=t.memoizedState),(c=Da||ei(t,r,c,n,d,h,u)||!1)?(l||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=c):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),n=!1)}return js(e,t,r,n,a,o)}function js(e,t,r,n,o,a){Ls(e,t);var i=0!=(128&t.flags);if(!n&&!i)return o&&Xo(t,r,!1),tu(e,t,a);n=t.stateNode,Cs.current=t;var s=i&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=ui(t,e.child,null,a),t.child=ui(t,null,s,a)):Ts(e,t,s,a),t.memoizedState=n.state,o&&Xo(t,r,!0),t.child}function qs(e){var t=e.stateNode;t.pendingContext?Wo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Wo(0,t.context,!1),mi(e,t.containerInfo)}function Ds(e,t,r,n,o){return Ea(),ka(o),t.flags|=256,Ts(e,t,r,n),t.child}var zs,Ks,Hs,Ws={dehydrated:null,treeContext:null,retryLane:0};function Vs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Gs(e,t,r){var n,o=t.pendingProps,a=vi.current,i=!1,s=0!=(128&t.flags);if((n=s)||(n=(null===e||null!==e.memoizedState)&&0!=(2&a)),n?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),Fo(vi,1&a),null===e)return $a(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(s=o.children,e=o.fallback,i?(o=t.mode,i=t.child,s={mode:"hidden",children:s},0==(1&o)&&null!==i?(i.childLanes=0,i.pendingProps=s):i=Vc(s,o,0,null),e=Wc(e,o,r,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Vs(r),t.memoizedState=Ws,e):Xs(t,s));if(null!==(a=e.memoizedState)&&null!==(n=a.dehydrated))return function(e,t,r,n,o,a,i){if(r)return 256&t.flags?(t.flags&=-257,Ys(e,t,i,n=xs(Error(y(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(a=n.fallback,o=t.mode,n=Vc({mode:"visible",children:n.children},o,0,null),(a=Wc(a,o,i,null)).flags|=2,n.return=t,a.return=t,n.sibling=a,t.child=n,0!=(1&t.mode)&&ui(t,e.child,null,i),t.child.memoizedState=Vs(i),t.memoizedState=Ws,a);if(0==(1&t.mode))return Ys(e,t,i,null);if("$!"===o.data){if(n=o.nextSibling&&o.nextSibling.dataset)var s=n.dgst;return n=s,Ys(e,t,i,n=xs(a=Error(y(419)),n,void 0))}if(s=0!=(i&e.childLanes),Ps||s){if(null!==(n=ju)){switch(i&-i){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!=(o&(n.suspendedLanes|i))?0:o)&&o!==a.retryLane&&(a.retryLane=o,qa(e,o),pc(n,e,o,-1))}return kc(),Ys(e,t,i,n=xs(Error(y(421))))}return"$?"===o.data?(t.flags|=128,t.child=e.child,t=Fc.bind(null,e),o._reactRetry=t,null):(e=a.treeContext,ma=$o(o.nextSibling),ha=t,ya=!0,ga=null,null!==e&&(aa[ia++]=ua,aa[ia++]=ca,aa[ia++]=sa,ua=e.id,ca=e.overflow,sa=t),(t=Xs(t,n.children)).flags|=4096,t)}(e,t,s,o,n,a,r);if(i){i=o.fallback,s=t.mode,n=(a=e.child).sibling;var u={mode:"hidden",children:o.children};return 0==(1&s)&&t.child!==a?((o=t.child).childLanes=0,o.pendingProps=u,t.deletions=null):(o=Kc(a,u)).subtreeFlags=14680064&a.subtreeFlags,null!==n?i=Kc(n,i):(i=Wc(i,s,r,null)).flags|=2,i.return=t,o.return=t,o.sibling=i,t.child=o,o=i,i=t.child,s=null===(s=e.child.memoizedState)?Vs(r):{baseLanes:s.baseLanes|r,cachePool:null,transitions:s.transitions},i.memoizedState=s,i.childLanes=e.childLanes&~r,t.memoizedState=Ws,o}return e=(i=e.child).sibling,o=Kc(i,{mode:"visible",children:o.children}),0==(1&t.mode)&&(o.lanes=r),o.return=t,o.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=o,t.memoizedState=null,o}function Xs(e,t){return(t=Vc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ys(e,t,r,n){return null!==n&&ka(n),ui(t,e.child,null,r),(e=Xs(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Js(e,t,r){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Oa(e.return,t,r)}function Qs(e,t,r,n,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=n,a.tail=r,a.tailMode=o)}function Zs(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(Ts(e,t,n.children,r),0!=(2&(n=vi.current)))n=1&n|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Js(e,r,t);else if(19===e.tag)Js(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(Fo(vi,n),0==(1&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===wi(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),Qs(t,!1,o,r,a);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===wi(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}Qs(t,!0,r,null,a);break;case"together":Qs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function eu(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function tu(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Vu|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(y(153));if(null!==t.child){for(r=Kc(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Kc(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function ru(e,t){if(!ya)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function nu(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,n=0;if(t)for(var o=e.child;null!==o;)r|=o.lanes|o.childLanes,n|=14680064&o.subtreeFlags,n|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)r|=o.lanes|o.childLanes,n|=o.subtreeFlags,n|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function ou(e,t,r){var n=t.pendingProps;switch(pa(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return nu(t),null;case 1:case 17:return Ko(t.type)&&Ho(),nu(t),null;case 3:return n=t.stateNode,yi(),Lo(qo),Lo(jo),xi(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(_a(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ga&&(gc(ga),ga=null))),nu(t),null;case 5:bi(t);var o=hi(pi.current);if(r=t.type,null!==e&&null!=t.stateNode)Ks(e,t,r,n),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(null===t.stateNode)throw Error(y(166));return nu(t),null}if(e=hi(fi.current),_a(t)){n=t.stateNode,r=t.type;var a=t.memoizedProps;switch(n[So]=t,n[Eo]=a,e=0!=(1&t.mode),r){case"dialog":Yn("cancel",n),Yn("close",n);break;case"iframe":case"object":case"embed":Yn("load",n);break;case"video":case"audio":for(o=0;o<Wn.length;o++)Yn(Wn[o],n);break;case"source":Yn("error",n);break;case"img":case"image":case"link":Yn("error",n),Yn("load",n);break;case"details":Yn("toggle",n);break;case"input":se(n,a),Yn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!a.multiple},Yn("invalid",n);break;case"textarea":me(n,a),Yn("invalid",n)}for(var i in Re(r,a),o=null,a)if(a.hasOwnProperty(i)){var s=a[i];"children"===i?"string"==typeof s?n.textContent!==s&&(!0!==a.suppressHydrationWarning&&co(n.textContent,s,e),o=["children",s]):"number"==typeof s&&n.textContent!==""+s&&(!0!==a.suppressHydrationWarning&&co(n.textContent,s,e),o=["children",""+s]):b.hasOwnProperty(i)&&null!=s&&"onScroll"===i&&Yn("scroll",n)}switch(r){case"input":ne(n),le(n,a,!0);break;case"textarea":ne(n),ge(n);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(n.onclick=lo)}n=o,t.updateQueue=n,null!==n&&(t.flags|=4)}else{i=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=be(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=i.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=i.createElement(r,{is:n.is}):(e=i.createElement(r),"select"===r&&(i=e,n.multiple?i.multiple=!0:n.size&&(i.size=n.size))):e=i.createElementNS(e,r),e[So]=t,e[Eo]=n,zs(e,t),t.stateNode=e;e:{switch(i=Ce(r,n),r){case"dialog":Yn("cancel",e),Yn("close",e),o=n;break;case"iframe":case"object":case"embed":Yn("load",e),o=n;break;case"video":case"audio":for(o=0;o<Wn.length;o++)Yn(Wn[o],e);o=n;break;case"source":Yn("error",e),o=n;break;case"img":case"image":case"link":Yn("error",e),Yn("load",e),o=n;break;case"details":Yn("toggle",e),o=n;break;case"input":se(e,n),o=ie(e,n),Yn("invalid",e);break;case"option":default:o=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},o=G({},n,{value:void 0}),Yn("invalid",e);break;case"textarea":me(e,n),o=he(e,n),Yn("invalid",e)}for(a in Re(r,o),s=o)if(s.hasOwnProperty(a)){var u=s[a];"style"===a?Ae(e,u):"dangerouslySetInnerHTML"===a?null!=(u=u?u.__html:void 0)&&xe(e,u):"children"===a?"string"==typeof u?("textarea"!==r||""!==u)&&_e(e,u):"number"==typeof u&&_e(e,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(b.hasOwnProperty(a)?null!=u&&"onScroll"===a&&Yn("scroll",e):null!=u&&C(e,a,u,i))}switch(r){case"input":ne(e),le(e,n,!1);break;case"textarea":ne(e),ge(e);break;case"option":null!=n.value&&e.setAttribute("value",""+te(n.value));break;case"select":e.multiple=!!n.multiple,null!=(a=n.value)?pe(e,!!n.multiple,a,!1):null!=n.defaultValue&&pe(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=lo)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return nu(t),null;case 6:if(e&&null!=t.stateNode)Hs(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(y(166));if(r=hi(pi.current),hi(fi.current),_a(t)){if(n=t.stateNode,r=t.memoizedProps,n[So]=t,(a=n.nodeValue!==r)&&null!==(e=ha))switch(e.tag){case 3:co(n.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&co(n.nodeValue,r,0!=(1&e.mode))}a&&(t.flags|=4)}else(n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[So]=t,t.stateNode=n}return nu(t),null;case 13:if(Lo(vi),n=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ya&&null!==ma&&0!=(1&t.mode)&&0==(128&t.flags))Sa(),Ea(),t.flags|=98560,a=!1;else if(a=_a(t),null!==n&&null!==n.dehydrated){if(null===e){if(!a)throw Error(y(318));if(!(a=null!==(a=t.memoizedState)?a.dehydrated:null))throw Error(y(317));a[So]=t}else Ea(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;nu(t),a=!1}else null!==ga&&(gc(ga),ga=null),a=!0;if(!a)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=r,t):((n=null!==n)!==(null!==e&&null!==e.memoizedState)&&n&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&vi.current)?0===Hu&&(Hu=3):kc())),null!==t.updateQueue&&(t.flags|=4),nu(t),null);case 4:return yi(),null===e&&Zn(t.stateNode.containerInfo),nu(t),null;case 10:return Na(t.type._context),nu(t),null;case 19:if(Lo(vi),null===(a=t.memoizedState))return nu(t),null;if(n=0!=(128&t.flags),null===(i=a.rendering))if(n)ru(a,!1);else{if(0!==Hu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(i=wi(e))){for(t.flags|=128,ru(a,!1),null!==(n=i.updateQueue)&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;null!==r;)e=n,(a=r).flags&=14680066,null===(i=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=i.childLanes,a.lanes=i.lanes,a.child=i.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=i.memoizedProps,a.memoizedState=i.memoizedState,a.updateQueue=i.updateQueue,a.type=i.type,e=i.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return Fo(vi,1&vi.current|2),t.child}e=e.sibling}null!==a.tail&&ut()>Zu&&(t.flags|=128,n=!0,ru(a,!1),t.lanes=4194304)}else{if(!n)if(null!==(e=wi(i))){if(t.flags|=128,n=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),ru(a,!0),null===a.tail&&"hidden"===a.tailMode&&!i.alternate&&!ya)return nu(t),null}else 2*ut()-a.renderingStartTime>Zu&&1073741824!==r&&(t.flags|=128,n=!0,ru(a,!1),t.lanes=4194304);a.isBackwards?(i.sibling=t.child,t.child=i):(null!==(r=a.last)?r.sibling=i:t.child=i,a.last=i)}return null!==a.tail?(t=a.tail,a.rendering=t,a.tail=t.sibling,a.renderingStartTime=ut(),t.sibling=null,r=vi.current,Fo(vi,n?1&r|2:1&r),t):(nu(t),null);case 22:case 23:return xc(),n=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==n&&(t.flags|=8192),n&&0!=(1&t.mode)?0!=(1073741824&zu)&&(nu(t),6&t.subtreeFlags&&(t.flags|=8192)):nu(t),null;case 24:case 25:return null}throw Error(y(156,t.tag))}function au(e,t){switch(pa(t),t.tag){case 1:return Ko(t.type)&&Ho(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return yi(),Lo(qo),Lo(jo),xi(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return bi(t),null;case 13:if(Lo(vi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(y(340));Ea()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Lo(vi),null;case 4:return yi(),null;case 10:return Na(t.type._context),null;case 22:case 23:return xc(),null;default:return null}}zs=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Ks=function(e,t,r,n){var o=e.memoizedProps;if(o!==n){e=t.stateNode,hi(fi.current);var a,i=null;switch(r){case"input":o=ie(e,o),n=ie(e,n),i=[];break;case"select":o=G({},o,{value:void 0}),n=G({},n,{value:void 0}),i=[];break;case"textarea":o=he(e,o),n=he(e,n),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof n.onClick&&(e.onclick=lo)}for(c in Re(r,n),r=null,o)if(!n.hasOwnProperty(c)&&o.hasOwnProperty(c)&&null!=o[c])if("style"===c){var s=o[c];for(a in s)s.hasOwnProperty(a)&&(r||(r={}),r[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(b.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in n){var u=n[c];if(s=null!=o?o[c]:void 0,n.hasOwnProperty(c)&&u!==s&&(null!=u||null!=s))if("style"===c)if(s){for(a in s)!s.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(r||(r={}),r[a]="");for(a in u)u.hasOwnProperty(a)&&s[a]!==u[a]&&(r||(r={}),r[a]=u[a])}else r||(i||(i=[]),i.push(c,r)),r=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(b.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Yn("scroll",e),i||s===u||(i=[])):(i=i||[]).push(c,u))}r&&(i=i||[]).push("style",r);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Hs=function(e,t,r,n){r!==n&&(t.flags|=4)};var iu=!1,su=!1,uu="function"==typeof WeakSet?WeakSet:Set,cu=null;function lu(e,t){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){Oc(e,t,r)}else r.current=null}function fu(e,t,r){try{r()}catch(r){Oc(e,t,r)}}var du=!1;function pu(e,t,r){var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var o=n=n.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&fu(t,r,a)}o=o.next}while(o!==n)}}function hu(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function mu(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function yu(e){var t=e.alternate;null!==t&&(e.alternate=null,yu(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[So],delete t[Eo],delete t[Ao],delete t[Mo],delete t[Ro])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function gu(e){return 5===e.tag||3===e.tag||4===e.tag}function bu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||gu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function vu(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=lo));else if(4!==n&&null!==(e=e.child))for(vu(e,t,r),e=e.sibling;null!==e;)vu(e,t,r),e=e.sibling}function wu(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(wu(e,t,r),e=e.sibling;null!==e;)wu(e,t,r),e=e.sibling}var $u=null,xu=!1;function _u(e,t,r){for(r=r.child;null!==r;)Su(e,t,r),r=r.sibling}function Su(e,t,r){if(yt&&"function"==typeof yt.onCommitFiberUnmount)try{yt.onCommitFiberUnmount(mt,r)}catch(e){}switch(r.tag){case 5:su||lu(r,t);case 6:var n=$u,o=xu;$u=null,_u(e,t,r),xu=o,null!==($u=n)&&(xu?(e=$u,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):$u.removeChild(r.stateNode));break;case 18:null!==$u&&(xu?(e=$u,r=r.stateNode,8===e.nodeType?wo(e.parentNode,r):1===e.nodeType&&wo(e,r),Zt(e)):wo($u,r.stateNode));break;case 4:n=$u,o=xu,$u=r.stateNode.containerInfo,xu=!0,_u(e,t,r),$u=n,xu=o;break;case 0:case 11:case 14:case 15:if(!su&&(null!==(n=r.updateQueue)&&null!==(n=n.lastEffect))){o=n=n.next;do{var a=o,i=a.destroy;a=a.tag,void 0!==i&&(0!=(2&a)||0!=(4&a))&&fu(r,t,i),o=o.next}while(o!==n)}_u(e,t,r);break;case 1:if(!su&&(lu(r,t),"function"==typeof(n=r.stateNode).componentWillUnmount))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(e){Oc(r,t,e)}_u(e,t,r);break;case 21:_u(e,t,r);break;case 22:1&r.mode?(su=(n=su)||null!==r.memoizedState,_u(e,t,r),su=n):_u(e,t,r);break;default:_u(e,t,r)}}function Eu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new uu),t.forEach((function(t){var n=Bc.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function ku(e,t){var r=t.deletions;if(null!==r)for(var n=0;n<r.length;n++){var o=r[n];try{var a=e,i=t,s=i;e:for(;null!==s;){switch(s.tag){case 5:$u=s.stateNode,xu=!1;break e;case 3:case 4:$u=s.stateNode.containerInfo,xu=!0;break e}s=s.return}if(null===$u)throw Error(y(160));Su(a,i,o),$u=null,xu=!1;var u=o.alternate;null!==u&&(u.return=null),o.return=null}catch(e){Oc(o,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)Au(t,e),t=t.sibling}function Au(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ku(t,e),Mu(e),4&n){try{pu(3,e,e.return),hu(3,e)}catch(t){Oc(e,e.return,t)}try{pu(5,e,e.return)}catch(t){Oc(e,e.return,t)}}break;case 1:ku(t,e),Mu(e),512&n&&null!==r&&lu(r,r.return);break;case 5:if(ku(t,e),Mu(e),512&n&&null!==r&&lu(r,r.return),32&e.flags){var o=e.stateNode;try{_e(o,"")}catch(t){Oc(e,e.return,t)}}if(4&n&&null!=(o=e.stateNode)){var a=e.memoizedProps,i=null!==r?r.memoizedProps:a,s=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===s&&"radio"===a.type&&null!=a.name&&ue(o,a),Ce(s,i);var c=Ce(s,a);for(i=0;i<u.length;i+=2){var l=u[i],f=u[i+1];"style"===l?Ae(o,f):"dangerouslySetInnerHTML"===l?xe(o,f):"children"===l?_e(o,f):C(o,l,f,c)}switch(s){case"input":ce(o,a);break;case"textarea":ye(o,a);break;case"select":var d=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!a.multiple;var p=a.value;null!=p?pe(o,!!a.multiple,p,!1):d!==!!a.multiple&&(null!=a.defaultValue?pe(o,!!a.multiple,a.defaultValue,!0):pe(o,!!a.multiple,a.multiple?[]:"",!1))}o[Eo]=a}catch(t){Oc(e,e.return,t)}}break;case 6:if(ku(t,e),Mu(e),4&n){if(null===e.stateNode)throw Error(y(162));o=e.stateNode,a=e.memoizedProps;try{o.nodeValue=a}catch(t){Oc(e,e.return,t)}}break;case 3:if(ku(t,e),Mu(e),4&n&&null!==r&&r.memoizedState.isDehydrated)try{Zt(t.containerInfo)}catch(t){Oc(e,e.return,t)}break;case 4:default:ku(t,e),Mu(e);break;case 13:ku(t,e),Mu(e),8192&(o=e.child).flags&&(a=null!==o.memoizedState,o.stateNode.isHidden=a,!a||null!==o.alternate&&null!==o.alternate.memoizedState||(Qu=ut())),4&n&&Eu(e);break;case 22:if(l=null!==r&&null!==r.memoizedState,1&e.mode?(su=(c=su)||l,ku(t,e),su=c):ku(t,e),Mu(e),8192&n){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!l&&0!=(1&e.mode))for(cu=e,l=e.child;null!==l;){for(f=cu=l;null!==cu;){switch(p=(d=cu).child,d.tag){case 0:case 11:case 14:case 15:pu(4,d,d.return);break;case 1:lu(d,d.return);var h=d.stateNode;if("function"==typeof h.componentWillUnmount){n=d,r=d.return;try{t=n,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){Oc(n,r,e)}}break;case 5:lu(d,d.return);break;case 22:if(null!==d.memoizedState){Tu(f);continue}}null!==p?(p.return=d,cu=p):Tu(f)}l=l.sibling}e:for(l=null,f=e;;){if(5===f.tag){if(null===l){l=f;try{o=f.stateNode,c?"function"==typeof(a=o.style).setProperty?a.setProperty("display","none","important"):a.display="none":(s=f.stateNode,i=null!=(u=f.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,s.style.display=ke("display",i))}catch(t){Oc(e,e.return,t)}}}else if(6===f.tag){if(null===l)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(t){Oc(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;l===f&&(l=null),f=f.return}l===f&&(l=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ku(t,e),Mu(e),4&n&&Eu(e);case 21:}}function Mu(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(gu(r)){var n=r;break e}r=r.return}throw Error(y(160))}switch(n.tag){case 5:var o=n.stateNode;32&n.flags&&(_e(o,""),n.flags&=-33),wu(e,bu(e),o);break;case 3:case 4:var a=n.stateNode.containerInfo;vu(e,bu(e),a);break;default:throw Error(y(161))}}catch(t){Oc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function Ru(e,t,r){cu=e,Cu(e,t,r)}function Cu(e,t,r){for(var n=0!=(1&e.mode);null!==cu;){var o=cu,a=o.child;if(22===o.tag&&n){var i=null!==o.memoizedState||iu;if(!i){var s=o.alternate,u=null!==s&&null!==s.memoizedState||su;s=iu;var c=su;if(iu=i,(su=u)&&!c)for(cu=o;null!==cu;)u=(i=cu).child,22===i.tag&&null!==i.memoizedState?Iu(o):null!==u?(u.return=i,cu=u):Iu(o);for(;null!==a;)cu=a,Cu(a,t,r),a=a.sibling;cu=o,iu=s,su=c}Pu(e)}else 0!=(8772&o.subtreeFlags)&&null!==a?(a.return=o,cu=a):Pu(e)}}function Pu(e){for(;null!==cu;){var t=cu;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:su||hu(5,t);break;case 1:var n=t.stateNode;if(4&t.flags&&!su)if(null===r)n.componentDidMount();else{var o=t.elementType===t.type?r.memoizedProps:Ma(t.type,r.memoizedProps);n.componentDidUpdate(o,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var a=t.updateQueue;null!==a&&Ya(t,a,n);break;case 3:var i=t.updateQueue;if(null!==i){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}Ya(t,i,r)}break;case 5:var s=t.stateNode;if(null===r&&4&t.flags){r=s;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&r.focus();break;case"img":u.src&&(r.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var l=c.memoizedState;if(null!==l){var f=l.dehydrated;null!==f&&Zt(f)}}}break;default:throw Error(y(163))}su||512&t.flags&&mu(t)}catch(e){Oc(t,t.return,e)}}if(t===e){cu=null;break}if(null!==(r=t.sibling)){r.return=t.return,cu=r;break}cu=t.return}}function Tu(e){for(;null!==cu;){var t=cu;if(t===e){cu=null;break}var r=t.sibling;if(null!==r){r.return=t.return,cu=r;break}cu=t.return}}function Iu(e){for(;null!==cu;){var t=cu;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{hu(4,t)}catch(e){Oc(t,r,e)}break;case 1:var n=t.stateNode;if("function"==typeof n.componentDidMount){var o=t.return;try{n.componentDidMount()}catch(e){Oc(t,o,e)}}var a=t.return;try{mu(t)}catch(e){Oc(t,a,e)}break;case 5:var i=t.return;try{mu(t)}catch(e){Oc(t,i,e)}}}catch(e){Oc(t,t.return,e)}if(t===e){cu=null;break}var s=t.sibling;if(null!==s){s.return=t.return,cu=s;break}cu=t.return}}var Nu,Ou=Math.ceil,Uu=P.ReactCurrentDispatcher,Lu=P.ReactCurrentOwner,Fu=P.ReactCurrentBatchConfig,Bu=0,ju=null,qu=null,Du=0,zu=0,Ku=Uo(0),Hu=0,Wu=null,Vu=0,Gu=0,Xu=0,Yu=null,Ju=null,Qu=0,Zu=1/0,ec=null,tc=!1,rc=null,nc=null,oc=!1,ac=null,ic=0,sc=0,uc=null,cc=-1,lc=0;function fc(){return 0!=(6&Bu)?ut():-1!==cc?cc:cc=ut()}function dc(e){return 0==(1&e.mode)?1:0!=(2&Bu)&&0!==Du?Du&-Du:null!==Aa.transition?(0===lc&&(lc=kt()),lc):0!==(e=Ct)?e:e=void 0===(e=window.event)?16:sr(e.type)}function pc(e,t,r,n){if(50<sc)throw sc=0,uc=null,Error(y(185));Mt(e,r,n),0!=(2&Bu)&&e===ju||(e===ju&&(0==(2&Bu)&&(Gu|=r),4===Hu&&bc(e,Du)),hc(e,n),1===r&&0===Bu&&0==(1&t.mode)&&(Zu=ut()+500,Jo&&ea()))}function hc(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-gt(a),s=1<<i,u=o[i];-1===u?0!=(s&r)&&0==(s&n)||(o[i]=St(s,t)):u<=t&&(e.expiredLanes|=s),a&=~s}}(e,t);var n=_t(e,e===ju?Du:0);if(0===n)null!==r&&at(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(null!=r&&at(r),1===t)0===e.tag?function(e){Jo=!0,Zo(e)}(vc.bind(null,e)):Zo(vc.bind(null,e)),bo((function(){0==(6&Bu)&&ea()})),r=null;else{switch(Pt(n)){case 1:r=lt;break;case 4:r=ft;break;case 16:default:r=dt;break;case 536870912:r=ht}r=jc(r,mc.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function mc(e,t){if(cc=-1,lc=0,0!=(6&Bu))throw Error(y(327));var r=e.callbackNode;if(Ic()&&e.callbackNode!==r)return null;var n=_t(e,e===ju?Du:0);if(0===n)return null;if(0!=(30&n)||0!=(n&e.expiredLanes)||t)t=Ac(e,n);else{t=n;var o=Bu;Bu|=2;var a=Ec();for(ju===e&&Du===t||(ec=null,Zu=ut()+500,_c(e,t));;)try{Rc();break}catch(t){Sc(e,t)}Ia(),Uu.current=a,Bu=o,null!==qu?t=0:(ju=null,Du=0,t=Hu)}if(0!==t){if(2===t&&(0!==(o=Et(e))&&(n=o,t=yc(e,o))),1===t)throw r=Wu,_c(e,0),bc(e,n),hc(e,ut()),r;if(6===t)bc(e,n);else{if(o=e.current.alternate,0==(30&n)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var n=0;n<r.length;n++){var o=r[n],a=o.getSnapshot;o=o.value;try{if(!bn(a(),o))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(o)&&(2===(t=Ac(e,n))&&(0!==(a=Et(e))&&(n=a,t=yc(e,a))),1===t))throw r=Wu,_c(e,0),bc(e,n),hc(e,ut()),r;switch(e.finishedWork=o,e.finishedLanes=n,t){case 0:case 1:throw Error(y(345));case 2:case 5:Tc(e,Ju,ec);break;case 3:if(bc(e,n),(130023424&n)===n&&10<(t=Qu+500-ut())){if(0!==_t(e,0))break;if(((o=e.suspendedLanes)&n)!==n){fc(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=mo(Tc.bind(null,e,Ju,ec),t);break}Tc(e,Ju,ec);break;case 4:if(bc(e,n),(4194240&n)===n)break;for(t=e.eventTimes,o=-1;0<n;){var i=31-gt(n);a=1<<i,(i=t[i])>o&&(o=i),n&=~a}if(n=o,10<(n=(120>(n=ut()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ou(n/1960))-n)){e.timeoutHandle=mo(Tc.bind(null,e,Ju,ec),n);break}Tc(e,Ju,ec);break;default:throw Error(y(329))}}}return hc(e,ut()),e.callbackNode===r?mc.bind(null,e):null}function yc(e,t){var r=Yu;return e.current.memoizedState.isDehydrated&&(_c(e,t).flags|=256),2!==(e=Ac(e,t))&&(t=Ju,Ju=r,null!==t&&gc(t)),e}function gc(e){null===Ju?Ju=e:Ju.push.apply(Ju,e)}function bc(e,t){for(t&=~Xu,t&=~Gu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-gt(t),n=1<<r;e[r]=-1,t&=~n}}function vc(e){if(0!=(6&Bu))throw Error(y(327));Ic();var t=_t(e,0);if(0==(1&t))return hc(e,ut()),null;var r=Ac(e,t);if(0!==e.tag&&2===r){var n=Et(e);0!==n&&(t=n,r=yc(e,n))}if(1===r)throw r=Wu,_c(e,0),bc(e,t),hc(e,ut()),r;if(6===r)throw Error(y(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Tc(e,Ju,ec),hc(e,ut()),null}function wc(e,t){var r=Bu;Bu|=1;try{return e(t)}finally{0===(Bu=r)&&(Zu=ut()+500,Jo&&ea())}}function $c(e){null!==ac&&0===ac.tag&&0==(6&Bu)&&Ic();var t=Bu;Bu|=1;var r=Fu.transition,n=Ct;try{if(Fu.transition=null,Ct=1,e)return e()}finally{Ct=n,Fu.transition=r,0==(6&(Bu=t))&&ea()}}function xc(){zu=Ku.current,Lo(Ku)}function _c(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,yo(r)),null!==qu)for(r=qu.return;null!==r;){var n=r;switch(pa(n),n.tag){case 1:null!=(n=n.type.childContextTypes)&&Ho();break;case 3:yi(),Lo(qo),Lo(jo),xi();break;case 5:bi(n);break;case 4:yi();break;case 13:case 19:Lo(vi);break;case 10:Na(n.type._context);break;case 22:case 23:xc()}r=r.return}if(ju=e,qu=e=Kc(e.current,null),Du=zu=t,Hu=0,Wu=null,Xu=Gu=Vu=0,Ju=Yu=null,null!==Fa){for(t=0;t<Fa.length;t++)if(null!==(n=(r=Fa[t]).interleaved)){r.interleaved=null;var o=n.next,a=r.pending;if(null!==a){var i=a.next;a.next=o,n.next=i}r.pending=n}Fa=null}return e}function Sc(e,t){for(;;){var r=qu;try{if(Ia(),_i.current=gs,Ri){for(var n=ki.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}Ri=!1}if(Ei=0,Mi=Ai=ki=null,Ci=!1,Pi=0,Lu.current=null,null===r||null===r.return){Hu=1,Wu=t,qu=null;break}e:{var a=e,i=r.return,s=r,u=t;if(t=Du,s.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,l=s,f=l.tag;if(0==(1&l.mode)&&(0===f||11===f||15===f)){var d=l.alternate;d?(l.updateQueue=d.updateQueue,l.memoizedState=d.memoizedState,l.lanes=d.lanes):(l.updateQueue=null,l.memoizedState=null)}var p=Ms(i);if(null!==p){p.flags&=-257,Rs(p,i,s,0,t),1&p.mode&&As(a,c,t),u=c;var h=(t=p).updateQueue;if(null===h){var m=new Set;m.add(u),t.updateQueue=m}else h.add(u);break e}if(0==(1&t)){As(a,c,t),kc();break e}u=Error(y(426))}else if(ya&&1&s.mode){var g=Ms(i);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),Rs(g,i,s,0,t),ka($s(u,s));break e}}a=u=$s(u,s),4!==Hu&&(Hu=2),null===Yu?Yu=[a]:Yu.push(a),a=i;do{switch(a.tag){case 3:a.flags|=65536,t&=-t,a.lanes|=t,Ga(a,Es(0,u,t));break e;case 1:s=u;var b=a.type,v=a.stateNode;if(0==(128&a.flags)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===nc||!nc.has(v)))){a.flags|=65536,t&=-t,a.lanes|=t,Ga(a,ks(a,s,t));break e}}a=a.return}while(null!==a)}Pc(r)}catch(e){t=e,qu===r&&null!==r&&(qu=r=r.return);continue}break}}function Ec(){var e=Uu.current;return Uu.current=gs,null===e?gs:e}function kc(){0!==Hu&&3!==Hu&&2!==Hu||(Hu=4),null===ju||0==(268435455&Vu)&&0==(268435455&Gu)||bc(ju,Du)}function Ac(e,t){var r=Bu;Bu|=2;var n=Ec();for(ju===e&&Du===t||(ec=null,_c(e,t));;)try{Mc();break}catch(t){Sc(e,t)}if(Ia(),Bu=r,Uu.current=n,null!==qu)throw Error(y(261));return ju=null,Du=0,Hu}function Mc(){for(;null!==qu;)Cc(qu)}function Rc(){for(;null!==qu&&!it();)Cc(qu)}function Cc(e){var t=Nu(e.alternate,e,zu);e.memoizedProps=e.pendingProps,null===t?Pc(e):qu=t,Lu.current=null}function Pc(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=ou(r,t,zu)))return void(qu=r)}else{if(null!==(r=au(r,t)))return r.flags&=32767,void(qu=r);if(null===e)return Hu=6,void(qu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(qu=t);qu=t=e}while(null!==t);0===Hu&&(Hu=5)}function Tc(e,t,r){var n=Ct,o=Fu.transition;try{Fu.transition=null,Ct=1,function(e,t,r,n){do{Ic()}while(null!==ac);if(0!=(6&Bu))throw Error(y(327));r=e.finishedWork;var o=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(y(177));e.callbackNode=null,e.callbackPriority=0;var a=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var o=31-gt(r),a=1<<o;t[o]=0,n[o]=-1,e[o]=-1,r&=~a}}(e,a),e===ju&&(qu=ju=null,Du=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||oc||(oc=!0,jc(dt,(function(){return Ic(),null}))),a=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||a){a=Fu.transition,Fu.transition=null;var i=Ct;Ct=1;var s=Bu;Bu|=4,Lu.current=null,function(e,t){if(fo=tr,Sn(e=_n())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(n&&0!==n.rangeCount){r=n.anchorNode;var o=n.anchorOffset,a=n.focusNode;n=n.focusOffset;try{r.nodeType,a.nodeType}catch(e){r=null;break e}var i=0,s=-1,u=-1,c=0,l=0,f=e,d=null;t:for(;;){for(var p;f!==r||0!==o&&3!==f.nodeType||(s=i+o),f!==a||0!==n&&3!==f.nodeType||(u=i+n),3===f.nodeType&&(i+=f.nodeValue.length),null!==(p=f.firstChild);)d=f,f=p;for(;;){if(f===e)break t;if(d===r&&++c===o&&(s=i),d===a&&++l===n&&(u=i),null!==(p=f.nextSibling))break;d=(f=d).parentNode}f=p}r=-1===s||-1===u?null:{start:s,end:u}}else r=null}r=r||{start:0,end:0}}else r=null;for(po={focusedElem:e,selectionRange:r},tr=!1,cu=t;null!==cu;)if(e=(t=cu).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,cu=e;else for(;null!==cu;){t=cu;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var m=h.memoizedProps,g=h.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?m:Ma(t.type,m),g);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(y(163))}}catch(e){Oc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,cu=e;break}cu=t.return}h=du,du=!1}(e,r),Au(r,e),En(po),tr=!!fo,po=fo=null,e.current=r,Ru(r,e,o),st(),Bu=s,Ct=i,Fu.transition=a}else e.current=r;if(oc&&(oc=!1,ac=e,ic=o),0===(a=e.pendingLanes)&&(nc=null),function(e){if(yt&&"function"==typeof yt.onCommitFiberRoot)try{yt.onCommitFiberRoot(mt,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),hc(e,ut()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)o=t[r],n(o.value,{componentStack:o.stack,digest:o.digest});if(tc)throw tc=!1,e=rc,rc=null,e;0!=(1&ic)&&0!==e.tag&&Ic(),0!=(1&(a=e.pendingLanes))?e===uc?sc++:(sc=0,uc=e):sc=0,ea()}(e,t,r,n)}finally{Fu.transition=o,Ct=n}return null}function Ic(){if(null!==ac){var e=Pt(ic),t=Fu.transition,r=Ct;try{if(Fu.transition=null,Ct=16>e?16:e,null===ac)var n=!1;else{if(e=ac,ac=null,ic=0,0!=(6&Bu))throw Error(y(331));var o=Bu;for(Bu|=4,cu=e.current;null!==cu;){var a=cu,i=a.child;if(0!=(16&cu.flags)){var s=a.deletions;if(null!==s){for(var u=0;u<s.length;u++){var c=s[u];for(cu=c;null!==cu;){var l=cu;switch(l.tag){case 0:case 11:case 15:pu(8,l,a)}var f=l.child;if(null!==f)f.return=l,cu=f;else for(;null!==cu;){var d=(l=cu).sibling,p=l.return;if(yu(l),l===c){cu=null;break}if(null!==d){d.return=p,cu=d;break}cu=p}}}var h=a.alternate;if(null!==h){var m=h.child;if(null!==m){h.child=null;do{var g=m.sibling;m.sibling=null,m=g}while(null!==m)}}cu=a}}if(0!=(2064&a.subtreeFlags)&&null!==i)i.return=a,cu=i;else e:for(;null!==cu;){if(0!=(2048&(a=cu).flags))switch(a.tag){case 0:case 11:case 15:pu(9,a,a.return)}var b=a.sibling;if(null!==b){b.return=a.return,cu=b;break e}cu=a.return}}var v=e.current;for(cu=v;null!==cu;){var w=(i=cu).child;if(0!=(2064&i.subtreeFlags)&&null!==w)w.return=i,cu=w;else e:for(i=v;null!==cu;){if(0!=(2048&(s=cu).flags))try{switch(s.tag){case 0:case 11:case 15:hu(9,s)}}catch(e){Oc(s,s.return,e)}if(s===i){cu=null;break e}var $=s.sibling;if(null!==$){$.return=s.return,cu=$;break e}cu=s.return}}if(Bu=o,ea(),yt&&"function"==typeof yt.onPostCommitFiberRoot)try{yt.onPostCommitFiberRoot(mt,e)}catch(e){}n=!0}return n}finally{Ct=r,Fu.transition=t}}return!1}function Nc(e,t,r){e=Wa(e,t=Es(0,t=$s(r,t),1),1),t=fc(),null!==e&&(Mt(e,1,t),hc(e,t))}function Oc(e,t,r){if(3===e.tag)Nc(e,e,r);else for(;null!==t;){if(3===t.tag){Nc(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===nc||!nc.has(n))){t=Wa(t,e=ks(t,e=$s(r,e),1),1),e=fc(),null!==t&&(Mt(t,1,e),hc(t,e));break}}t=t.return}}function Uc(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=fc(),e.pingedLanes|=e.suspendedLanes&r,ju===e&&(Du&r)===r&&(4===Hu||3===Hu&&(130023424&Du)===Du&&500>ut()-Qu?_c(e,0):Xu|=r),hc(e,t)}function Lc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=$t,0==(130023424&($t<<=1))&&($t=4194304)));var r=fc();null!==(e=qa(e,t))&&(Mt(e,t,r),hc(e,r))}function Fc(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),Lc(e,r)}function Bc(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,o=e.memoizedState;null!==o&&(r=o.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(y(314))}null!==n&&n.delete(t),Lc(e,r)}function jc(e,t){return ot(e,t)}function qc(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Dc(e,t,r,n){return new qc(e,t,r,n)}function zc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Kc(e,t){var r=e.alternate;return null===r?((r=Dc(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Hc(e,t,r,n,o,a){var i=2;if(n=e,"function"==typeof e)zc(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case N:return Wc(r.children,o,a,t);case O:i=8,o|=8;break;case U:return(e=Dc(12,r,t,2|o)).elementType=U,e.lanes=a,e;case j:return(e=Dc(13,r,t,o)).elementType=j,e.lanes=a,e;case q:return(e=Dc(19,r,t,o)).elementType=q,e.lanes=a,e;case K:return Vc(r,o,a,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case L:i=10;break e;case F:i=9;break e;case B:i=11;break e;case D:i=14;break e;case z:i=16,n=null;break e}throw Error(y(130,null==e?e:typeof e,""))}return(t=Dc(i,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Wc(e,t,r,n){return(e=Dc(7,e,n,t)).lanes=r,e}function Vc(e,t,r,n){return(e=Dc(22,e,n,t)).elementType=K,e.lanes=r,e.stateNode={isHidden:!1},e}function Gc(e,t,r){return(e=Dc(6,e,null,t)).lanes=r,e}function Xc(e,t,r){return(t=Dc(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yc(e,t,r,n,o){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=At(0),this.expirationTimes=At(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=At(0),this.identifierPrefix=n,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Jc(e,t,r,n,o,a,i,s,u){return e=new Yc(e,t,r,s,u),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Dc(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},za(a),e}function Qc(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:I,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Zc(e){if(!e)return Bo;e:{if(Ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(y(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ko(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(y(171))}if(1===e.tag){var r=e.type;if(Ko(r))return Vo(e,r,t)}return t}function el(e,t,r,n,o,a,i,s,u){return(e=Jc(r,n,!0,e,0,a,0,s,u)).context=Zc(null),r=e.current,(a=Ha(n=fc(),o=dc(r))).callback=null!=t?t:null,Wa(r,a,o),e.current.lanes=o,Mt(e,o,n),hc(e,n),e}function tl(e,t,r,n){var o=t.current,a=fc(),i=dc(o);return r=Zc(r),null===t.context?t.context=r:t.pendingContext=r,(t=Ha(a,i)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),null!==(e=Wa(o,t,i))&&(pc(e,o,i,a),Va(e,o,i)),i}function rl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function nl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ol(e,t){nl(e,t),(e=e.alternate)&&nl(e,t)}Nu=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||qo.current)Ps=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return Ps=!1,function(e,t,r){switch(t.tag){case 3:qs(t),Ea();break;case 5:gi(t);break;case 1:Ko(t.type)&&Go(t);break;case 4:mi(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,o=t.memoizedProps.value;Fo(Ra,n._currentValue),n._currentValue=o;break;case 13:if(null!==(n=t.memoizedState))return null!==n.dehydrated?(Fo(vi,1&vi.current),t.flags|=128,null):0!=(r&t.child.childLanes)?Gs(e,t,r):(Fo(vi,1&vi.current),null!==(e=tu(e,t,r))?e.sibling:null);Fo(vi,1&vi.current);break;case 19:if(n=0!=(r&t.childLanes),0!=(128&e.flags)){if(n)return Zs(e,t,r);t.flags|=128}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),Fo(vi,vi.current),n)break;return null;case 22:case 23:return t.lanes=0,Us(e,t,r)}return tu(e,t,r)}(e,t,r);Ps=0!=(131072&e.flags)}else Ps=!1,ya&&0!=(1048576&t.flags)&&fa(t,oa,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;eu(e,t),e=t.pendingProps;var o=zo(t,jo.current);Ua(t,r),o=Oi(null,t,n,e,o,r);var a=Ui();return t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ko(n)?(a=!0,Go(t)):a=!1,t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,za(t),o.updater=Za,t.stateNode=o,o._reactInternals=t,ni(t,n,e,r),t=js(null,t,n,!0,a,r)):(t.tag=0,ya&&a&&da(t),Ts(null,t,o,r),t=t.child),t;case 16:n=t.elementType;e:{switch(eu(e,t),e=t.pendingProps,n=(o=n._init)(n._payload),t.type=n,o=t.tag=function(e){if("function"==typeof e)return zc(e)?1:0;if(null!=e){if((e=e.$$typeof)===B)return 11;if(e===D)return 14}return 2}(n),e=Ma(n,e),o){case 0:t=Fs(null,t,n,e,r);break e;case 1:t=Bs(null,t,n,e,r);break e;case 11:t=Is(null,t,n,e,r);break e;case 14:t=Ns(null,t,n,Ma(n.type,e),r);break e}throw Error(y(306,n,""))}return t;case 0:return n=t.type,o=t.pendingProps,Fs(e,t,n,o=t.elementType===n?o:Ma(n,o),r);case 1:return n=t.type,o=t.pendingProps,Bs(e,t,n,o=t.elementType===n?o:Ma(n,o),r);case 3:e:{if(qs(t),null===e)throw Error(y(387));n=t.pendingProps,o=(a=t.memoizedState).element,Ka(e,t),Xa(t,n,null,r);var i=t.memoizedState;if(n=i.element,a.isDehydrated){if(a={element:n,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=a,t.memoizedState=a,256&t.flags){t=Ds(e,t,n,r,o=$s(Error(y(423)),t));break e}if(n!==o){t=Ds(e,t,n,r,o=$s(Error(y(424)),t));break e}for(ma=$o(t.stateNode.containerInfo.firstChild),ha=t,ya=!0,ga=null,r=ci(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(Ea(),n===o){t=tu(e,t,r);break e}Ts(e,t,n,r)}t=t.child}return t;case 5:return gi(t),null===e&&$a(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,i=o.children,ho(n,o)?i=null:null!==a&&ho(n,a)&&(t.flags|=32),Ls(e,t),Ts(e,t,i,r),t.child;case 6:return null===e&&$a(t),null;case 13:return Gs(e,t,r);case 4:return mi(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=ui(t,null,n,r):Ts(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Is(e,t,n,o=t.elementType===n?o:Ma(n,o),r);case 7:return Ts(e,t,t.pendingProps,r),t.child;case 8:case 12:return Ts(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value,Fo(Ra,n._currentValue),n._currentValue=i,null!==a)if(bn(a.value,i)){if(a.children===o.children&&!qo.current){t=tu(e,t,r);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){var s=a.dependencies;if(null!==s){i=a.child;for(var u=s.firstContext;null!==u;){if(u.context===n){if(1===a.tag){(u=Ha(-1,r&-r)).tag=2;var c=a.updateQueue;if(null!==c){var l=(c=c.shared).pending;null===l?u.next=u:(u.next=l.next,l.next=u),c.pending=u}}a.lanes|=r,null!==(u=a.alternate)&&(u.lanes|=r),Oa(a.return,r,t),s.lanes|=r;break}u=u.next}}else if(10===a.tag)i=a.type===t.type?null:a.child;else if(18===a.tag){if(null===(i=a.return))throw Error(y(341));i.lanes|=r,null!==(s=i.alternate)&&(s.lanes|=r),Oa(i,r,t),i=a.sibling}else i=a.child;if(null!==i)i.return=a;else for(i=a;null!==i;){if(i===t){i=null;break}if(null!==(a=i.sibling)){a.return=i.return,i=a;break}i=i.return}a=i}Ts(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=t.pendingProps.children,Ua(t,r),n=n(o=La(o)),t.flags|=1,Ts(e,t,n,r),t.child;case 14:return o=Ma(n=t.type,t.pendingProps),Ns(e,t,n,o=Ma(n.type,o),r);case 15:return Os(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Ma(n,o),eu(e,t),t.tag=1,Ko(n)?(e=!0,Go(t)):e=!1,Ua(t,r),ti(t,n,o),ni(t,n,o,r),js(null,t,n,!0,e,r);case 19:return Zs(e,t,r);case 22:return Us(e,t,r)}throw Error(y(156,t.tag))};var al="function"==typeof reportError?reportError:function(e){console.error(e)};function il(e){this._internalRoot=e}function sl(e){this._internalRoot=e}function ul(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function cl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ll(){}function fl(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a;if("function"==typeof o){var s=o;o=function(){var e=rl(i);s.call(e)}}tl(t,i,e,o)}else i=function(e,t,r,n,o){if(o){if("function"==typeof n){var a=n;n=function(){var e=rl(i);a.call(e)}}var i=el(t,n,e,0,null,!1,0,"",ll);return e._reactRootContainer=i,e[ko]=i.current,Zn(8===e.nodeType?e.parentNode:e),$c(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof n){var s=n;n=function(){var e=rl(u);s.call(e)}}var u=Jc(e,0,!1,null,0,!1,0,"",ll);return e._reactRootContainer=u,e[ko]=u.current,Zn(8===e.nodeType?e.parentNode:e),$c((function(){tl(t,u,r,n)})),u}(r,t,e,o,n);return rl(i)}sl.prototype.render=il.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(y(409));tl(e,t,null,null)},sl.prototype.unmount=il.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;$c((function(){tl(null,e,null,null)})),t[ko]=null}},sl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ot();e={blockedOn:null,target:e,priority:t};for(var r=0;r<Kt.length&&0!==t&&t<Kt[r].priority;r++);Kt.splice(r,0,e),0===r&&Gt(e)}},Tt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=xt(t.pendingLanes);0!==r&&(Rt(t,1|r),hc(t,ut()),0==(6&Bu)&&(Zu=ut()+500,ea()))}break;case 13:$c((function(){var t=qa(e,1);if(null!==t){var r=fc();pc(t,e,1,r)}})),ol(e,1)}},It=function(e){if(13===e.tag){var t=qa(e,134217728);if(null!==t)pc(t,e,134217728,fc());ol(e,134217728)}},Nt=function(e){if(13===e.tag){var t=dc(e),r=qa(e,t);if(null!==r)pc(r,e,t,fc());ol(e,t)}},Ot=function(){return Ct},Ut=function(e,t){var r=Ct;try{return Ct=e,t()}finally{Ct=r}},Ie=function(e,t,r){switch(t){case"input":if(ce(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=Io(n);if(!o)throw Error(y(90));oe(n),ce(n,o)}}}break;case"textarea":ye(e,r);break;case"select":null!=(t=r.value)&&pe(e,!!r.multiple,t,!1)}},Be=wc,je=$c;var dl={usingClientEntryPoint:!1,Events:[Po,To,Io,Le,Fe,wc]},pl={findFiberByHostInstance:Co,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},hl={bundleType:pl.bundleType,version:pl.version,rendererPackageName:pl.rendererPackageName,rendererConfig:pl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:P.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rt(e))?null:e.stateNode},findFiberByHostInstance:pl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ml=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ml.isDisabled&&ml.supportsFiber)try{mt=ml.inject(hl),yt=ml}catch(e){}}r=dl,n=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ul(t))throw Error(y(200));return Qc(e,t,null,r)},o=function(e,t){if(!ul(e))throw Error(y(299));var r=!1,n="",o=al;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(n=t.identifierPrefix),void 0!==t.onRecoverableError&&(o=t.onRecoverableError)),t=Jc(e,1,!1,null,0,r,0,n,o),e[ko]=t.current,Zn(8===e.nodeType?e.parentNode:e),new il(t)},a=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(y(188));throw e=Object.keys(e).join(","),Error(y(268,e))}return e=null===(e=rt(t))?null:e.stateNode},i=function(e){return $c(e)},s=function(e,t,r){if(!cl(t))throw Error(y(200));return fl(null,e,t,!0,r)},u=function(e,t,r){if(!ul(e))throw Error(y(405));var n=null!=r&&r.hydratedSources||null,o=!1,a="",i=al;if(null!=r&&(!0===r.unstable_strictMode&&(o=!0),void 0!==r.identifierPrefix&&(a=r.identifierPrefix),void 0!==r.onRecoverableError&&(i=r.onRecoverableError)),t=el(t,null,e,1,null!=r?r:null,o,0,a,i),e[ko]=t.current,Zn(e),n)for(e=0;e<n.length;e++)o=(o=(r=n[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,o]:t.mutableSourceEagerHydrationData.push(r,o);return new sl(t)},c=function(e,t,r){if(!cl(t))throw Error(y(200));return fl(null,e,t,!1,r)},l=function(e){if(!cl(e))throw Error(y(40));return!!e._reactRootContainer&&($c((function(){fl(null,null,e,!1,(function(){e._reactRootContainer=null,e[ko]=null}))})),!0)},f=wc,d=function(e,t,r,n){if(!cl(r))throw Error(y(200));if(null==e||void 0===e._reactInternals)throw Error(y(38));return fl(e,t,r,!1,n)},p="18.2.0-next-9e3b772b8-20220608"})),parcelRequire.register("33s19",(function(e,t){e.exports=parcelRequire("a0C75")})),parcelRequire.register("a0C75",(function(e,t){var r,n,o,a,i,s,u,c,l,f,d,p,h,m,y,g,b,v,w;function $(e,t){var r=e.length;e.push(t);e:for(;0<r;){var n=r-1>>>1,o=e[n];if(!(0<S(o,t)))break e;e[n]=t,e[r]=o,r=n}}function x(e){return 0===e.length?null:e[0]}function _(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length,a=o>>>1;n<a;){var i=2*(n+1)-1,s=e[i],u=i+1,c=e[u];if(0>S(s,r))u<o&&0>S(c,s)?(e[n]=c,e[u]=r,n=u):(e[n]=s,e[i]=r,n=i);else{if(!(u<o&&0>S(c,r)))break e;e[n]=c,e[u]=r,n=u}}}return t}function S(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if($parcel$export(e.exports,"unstable_now",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"unstable_IdlePriority",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"unstable_ImmediatePriority",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"unstable_LowPriority",(function(){return a}),(function(e){return a=e})),$parcel$export(e.exports,"unstable_NormalPriority",(function(){return i}),(function(e){return i=e})),$parcel$export(e.exports,"unstable_Profiling",(function(){return s}),(function(e){return s=e})),$parcel$export(e.exports,"unstable_UserBlockingPriority",(function(){return u}),(function(e){return u=e})),$parcel$export(e.exports,"unstable_cancelCallback",(function(){return c}),(function(e){return c=e})),$parcel$export(e.exports,"unstable_continueExecution",(function(){return l}),(function(e){return l=e})),$parcel$export(e.exports,"unstable_forceFrameRate",(function(){return f}),(function(e){return f=e})),$parcel$export(e.exports,"unstable_getCurrentPriorityLevel",(function(){return d}),(function(e){return d=e})),$parcel$export(e.exports,"unstable_getFirstCallbackNode",(function(){return p}),(function(e){return p=e})),$parcel$export(e.exports,"unstable_next",(function(){return h}),(function(e){return h=e})),$parcel$export(e.exports,"unstable_pauseExecution",(function(){return m}),(function(e){return m=e})),$parcel$export(e.exports,"unstable_requestPaint",(function(){return y}),(function(e){return y=e})),$parcel$export(e.exports,"unstable_runWithPriority",(function(){return g}),(function(e){return g=e})),$parcel$export(e.exports,"unstable_scheduleCallback",(function(){return b}),(function(e){return b=e})),$parcel$export(e.exports,"unstable_shouldYield",(function(){return v}),(function(e){return v=e})),$parcel$export(e.exports,"unstable_wrapCallback",(function(){return w}),(function(e){return w=e})),"object"==typeof performance&&"function"==typeof performance.now){var E=performance;r=function(){return E.now()}}else{var k=Date,A=k.now();r=function(){return k.now()-A}}var M=[],R=[],C=1,P=null,T=3,I=!1,N=!1,O=!1,U="function"==typeof setTimeout?setTimeout:null,L="function"==typeof clearTimeout?clearTimeout:null,F="undefined"!=typeof setImmediate?setImmediate:null;function B(e){for(var t=x(R);null!==t;){if(null===t.callback)_(R);else{if(!(t.startTime<=e))break;_(R),t.sortIndex=t.expirationTime,$(M,t)}t=x(R)}}function j(e){if(O=!1,B(e),!N)if(null!==x(M))N=!0,Q(q);else{var t=x(R);null!==t&&Z(j,t.startTime-e)}}function q(e,t){N=!1,O&&(O=!1,L(H),H=-1),I=!0;var n=T;try{for(B(t),P=x(M);null!==P&&(!(P.expirationTime>t)||e&&!G());){var o=P.callback;if("function"==typeof o){P.callback=null,T=P.priorityLevel;var a=o(P.expirationTime<=t);t=r(),"function"==typeof a?P.callback=a:P===x(M)&&_(M),B(t)}else _(M);P=x(M)}if(null!==P)var i=!0;else{var s=x(R);null!==s&&Z(j,s.startTime-t),i=!1}return i}finally{P=null,T=n,I=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var D,z=!1,K=null,H=-1,W=5,V=-1;function G(){return!(r()-V<W)}function X(){if(null!==K){var e=r();V=e;var t=!0;try{t=K(!0,e)}finally{t?D():(z=!1,K=null)}}else z=!1}if("function"==typeof F)D=function(){F(X)};else if("undefined"!=typeof MessageChannel){var Y=new MessageChannel,J=Y.port2;Y.port1.onmessage=X,D=function(){J.postMessage(null)}}else D=function(){U(X,0)};function Q(e){K=e,z||(z=!0,D())}function Z(e,t){H=U((function(){e(r())}),t)}n=5,o=1,a=4,i=3,s=null,u=2,c=function(e){e.callback=null},l=function(){N||I||(N=!0,Q(q))},f=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):W=0<e?Math.floor(1e3/e):5},d=function(){return T},p=function(){return x(M)},h=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var r=T;T=t;try{return e()}finally{T=r}},m=function(){},y=function(){},g=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=T;T=e;try{return t()}finally{T=r}},b=function(e,t,n){var o=r();switch("object"==typeof n&&null!==n?n="number"==typeof(n=n.delay)&&0<n?o+n:o:n=o,e){case 1:var a=-1;break;case 2:a=250;break;case 5:a=1073741823;break;case 4:a=1e4;break;default:a=5e3}return e={id:C++,callback:t,priorityLevel:e,startTime:n,expirationTime:a=n+a,sortIndex:-1},n>o?(e.sortIndex=n,$(R,e),null===x(M)&&e===x(R)&&(O?(L(H),H=-1):O=!0,Z(j,n-o))):(e.sortIndex=a,$(M,e),N||I||(N=!0,Q(q))),e},v=G,w=function(e){var t=T;return function(){var r=T;T=t;try{return e.apply(this,arguments)}finally{T=r}}}})),parcelRequire.register("cZqlV",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.MergeKeyStore=e.exports.BrowserLocalStorageKeyStore=e.exports.InMemoryKeyStore=e.exports.KeyStore=void 0;var r=parcelRequire("lDg8Y");Object.defineProperty(e.exports,"KeyStore",{enumerable:!0,get:function(){return r.KeyStore}});var n=parcelRequire("72EX5");Object.defineProperty(e.exports,"InMemoryKeyStore",{enumerable:!0,get:function(){return n.InMemoryKeyStore}});var o=parcelRequire("lJfNi");Object.defineProperty(e.exports,"BrowserLocalStorageKeyStore",{enumerable:!0,get:function(){return o.BrowserLocalStorageKeyStore}});var a=parcelRequire("4T7XU");Object.defineProperty(e.exports,"MergeKeyStore",{enumerable:!0,get:function(){return a.MergeKeyStore}})})),parcelRequire.register("lDg8Y",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.KeyStore=void 0;e.exports.KeyStore=class{}})),parcelRequire.register("72EX5",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.InMemoryKeyStore=void 0;var r=parcelRequire("lDg8Y"),n=parcelRequire("h9FZF");class o extends r.KeyStore{async setKey(e,t,r){this.keys[`${t}:${e}`]=r.toString()}async getKey(e,t){const r=this.keys[`${t}:${e}`];return r?n.KeyPair.fromString(r):null}async removeKey(e,t){delete this.keys[`${t}:${e}`]}async clear(){this.keys={}}async getNetworks(){const e=new Set;return Object.keys(this.keys).forEach((t=>{const r=t.split(":");e.add(r[1])})),Array.from(e.values())}async getAccounts(e){const t=new Array;return Object.keys(this.keys).forEach((r=>{const n=r.split(":");n[n.length-1]===e&&t.push(n.slice(0,n.length-1).join(":"))})),t}toString(){return"InMemoryKeyStore"}constructor(){super(),this.keys={}}}e.exports.InMemoryKeyStore=o})),parcelRequire.register("h9FZF",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.KeyPairEd25519=e.exports.KeyPair=e.exports.PublicKey=e.exports.KeyType=void 0;const n=r(parcelRequire("4qjqW"));var o,a,i=parcelRequire("4vyb6"),s=parcelRequire("iSdxe");function u(e){if("ed25519"===e.toLowerCase())return o.ED25519;throw new Error(`Unknown key type ${e}`)}(a=o=e.exports.KeyType||(e.exports.KeyType={}))[a.ED25519=0]="ED25519";class c extends s.Assignable{static from(e){return"string"==typeof e?c.fromString(e):e}static fromString(e){const t=e.split(":");if(1===t.length)return new c({keyType:o.ED25519,data:i.base_decode(t[0])});if(2===t.length)return new c({keyType:u(t[0]),data:i.base_decode(t[1])});throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}toString(){return`${function(e){if(e===o.ED25519)return"ed25519";throw new Error(`Unknown key type ${e}`)}(this.keyType)}:${i.base_encode(this.data)}`}verify(e,t){if(this.keyType===o.ED25519)return n.default.sign.detached.verify(e,t,this.data);throw new Error(`Unknown key type ${this.keyType}`)}}e.exports.PublicKey=c;class l{static fromRandom(e){if("ED25519"===e.toUpperCase())return f.fromRandom();throw new Error(`Unknown curve ${e}`)}static fromString(e){const t=e.split(":");if(1===t.length)return new f(t[0]);if(2===t.length){if("ED25519"===t[0].toUpperCase())return new f(t[1]);throw new Error(`Unknown curve: ${t[0]}`)}throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}}e.exports.KeyPair=l;class f extends l{static fromRandom(){const e=n.default.sign.keyPair();return new f(i.base_encode(e.secretKey))}sign(e){return{signature:n.default.sign.detached(e,i.base_decode(this.secretKey)),publicKey:this.publicKey}}verify(e,t){return this.publicKey.verify(e,t)}toString(){return`ed25519:${this.secretKey}`}getPublicKey(){return this.publicKey}constructor(e){super();const t=n.default.sign.keyPair.fromSecretKey(i.base_decode(e));this.publicKey=new c({keyType:o.ED25519,data:t.publicKey}),this.secretKey=e}}e.exports.KeyPairEd25519=f})),parcelRequire.register("4qjqW",(function(e,t){!function(e){var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var a=t(),i=t([1]),s=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),c=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),f=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),d=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function h(e,t,r,n,o){var a,i=0;for(a=0;a<o;a++)i|=e[t+a]^r[n+a];return(1&i-1>>>8)-1}function m(e,t,r,n){return h(e,t,r,n,16)}function y(e,t,r,n){return h(e,t,r,n,32)}function g(e,t,r,n){!function(e,t,r,n){for(var o,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,i=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,p=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,g=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,$=a,x=i,_=s,S=u,E=c,k=l,A=f,M=d,R=p,C=h,P=m,T=y,I=g,N=b,O=v,U=w,L=0;L<20;L+=2)$^=(o=(I^=(o=(R^=(o=(E^=(o=$+I|0)<<7|o>>>25)+$|0)<<9|o>>>23)+E|0)<<13|o>>>19)+R|0)<<18|o>>>14,k^=(o=(x^=(o=(N^=(o=(C^=(o=k+x|0)<<7|o>>>25)+k|0)<<9|o>>>23)+C|0)<<13|o>>>19)+N|0)<<18|o>>>14,P^=(o=(A^=(o=(_^=(o=(O^=(o=P+A|0)<<7|o>>>25)+P|0)<<9|o>>>23)+O|0)<<13|o>>>19)+_|0)<<18|o>>>14,U^=(o=(T^=(o=(M^=(o=(S^=(o=U+T|0)<<7|o>>>25)+U|0)<<9|o>>>23)+S|0)<<13|o>>>19)+M|0)<<18|o>>>14,$^=(o=(S^=(o=(_^=(o=(x^=(o=$+S|0)<<7|o>>>25)+$|0)<<9|o>>>23)+x|0)<<13|o>>>19)+_|0)<<18|o>>>14,k^=(o=(E^=(o=(M^=(o=(A^=(o=k+E|0)<<7|o>>>25)+k|0)<<9|o>>>23)+A|0)<<13|o>>>19)+M|0)<<18|o>>>14,P^=(o=(C^=(o=(R^=(o=(T^=(o=P+C|0)<<7|o>>>25)+P|0)<<9|o>>>23)+T|0)<<13|o>>>19)+R|0)<<18|o>>>14,U^=(o=(O^=(o=(N^=(o=(I^=(o=U+O|0)<<7|o>>>25)+U|0)<<9|o>>>23)+I|0)<<13|o>>>19)+N|0)<<18|o>>>14;$=$+a|0,x=x+i|0,_=_+s|0,S=S+u|0,E=E+c|0,k=k+l|0,A=A+f|0,M=M+d|0,R=R+p|0,C=C+h|0,P=P+m|0,T=T+y|0,I=I+g|0,N=N+b|0,O=O+v|0,U=U+w|0,e[0]=$>>>0&255,e[1]=$>>>8&255,e[2]=$>>>16&255,e[3]=$>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=_>>>0&255,e[9]=_>>>8&255,e[10]=_>>>16&255,e[11]=_>>>24&255,e[12]=S>>>0&255,e[13]=S>>>8&255,e[14]=S>>>16&255,e[15]=S>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=k>>>0&255,e[21]=k>>>8&255,e[22]=k>>>16&255,e[23]=k>>>24&255,e[24]=A>>>0&255,e[25]=A>>>8&255,e[26]=A>>>16&255,e[27]=A>>>24&255,e[28]=M>>>0&255,e[29]=M>>>8&255,e[30]=M>>>16&255,e[31]=M>>>24&255,e[32]=R>>>0&255,e[33]=R>>>8&255,e[34]=R>>>16&255,e[35]=R>>>24&255,e[36]=C>>>0&255,e[37]=C>>>8&255,e[38]=C>>>16&255,e[39]=C>>>24&255,e[40]=P>>>0&255,e[41]=P>>>8&255,e[42]=P>>>16&255,e[43]=P>>>24&255,e[44]=T>>>0&255,e[45]=T>>>8&255,e[46]=T>>>16&255,e[47]=T>>>24&255,e[48]=I>>>0&255,e[49]=I>>>8&255,e[50]=I>>>16&255,e[51]=I>>>24&255,e[52]=N>>>0&255,e[53]=N>>>8&255,e[54]=N>>>16&255,e[55]=N>>>24&255,e[56]=O>>>0&255,e[57]=O>>>8&255,e[58]=O>>>16&255,e[59]=O>>>24&255,e[60]=U>>>0&255,e[61]=U>>>8&255,e[62]=U>>>16&255,e[63]=U>>>24&255}(e,t,r,n)}function b(e,t,r,n){!function(e,t,r,n){for(var o,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,i=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,c=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,p=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,h=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,y=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,g=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,b=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,w=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,$=0;$<20;$+=2)a^=(o=(g^=(o=(p^=(o=(c^=(o=a+g|0)<<7|o>>>25)+a|0)<<9|o>>>23)+c|0)<<13|o>>>19)+p|0)<<18|o>>>14,l^=(o=(i^=(o=(b^=(o=(h^=(o=l+i|0)<<7|o>>>25)+l|0)<<9|o>>>23)+h|0)<<13|o>>>19)+b|0)<<18|o>>>14,m^=(o=(f^=(o=(s^=(o=(v^=(o=m+f|0)<<7|o>>>25)+m|0)<<9|o>>>23)+v|0)<<13|o>>>19)+s|0)<<18|o>>>14,w^=(o=(y^=(o=(d^=(o=(u^=(o=w+y|0)<<7|o>>>25)+w|0)<<9|o>>>23)+u|0)<<13|o>>>19)+d|0)<<18|o>>>14,a^=(o=(u^=(o=(s^=(o=(i^=(o=a+u|0)<<7|o>>>25)+a|0)<<9|o>>>23)+i|0)<<13|o>>>19)+s|0)<<18|o>>>14,l^=(o=(c^=(o=(d^=(o=(f^=(o=l+c|0)<<7|o>>>25)+l|0)<<9|o>>>23)+f|0)<<13|o>>>19)+d|0)<<18|o>>>14,m^=(o=(h^=(o=(p^=(o=(y^=(o=m+h|0)<<7|o>>>25)+m|0)<<9|o>>>23)+y|0)<<13|o>>>19)+p|0)<<18|o>>>14,w^=(o=(v^=(o=(b^=(o=(g^=(o=w+v|0)<<7|o>>>25)+w|0)<<9|o>>>23)+g|0)<<13|o>>>19)+b|0)<<18|o>>>14;e[0]=a>>>0&255,e[1]=a>>>8&255,e[2]=a>>>16&255,e[3]=a>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=m>>>0&255,e[9]=m>>>8&255,e[10]=m>>>16&255,e[11]=m>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=f>>>0&255,e[17]=f>>>8&255,e[18]=f>>>16&255,e[19]=f>>>24&255,e[20]=d>>>0&255,e[21]=d>>>8&255,e[22]=d>>>16&255,e[23]=d>>>24&255,e[24]=p>>>0&255,e[25]=p>>>8&255,e[26]=p>>>16&255,e[27]=p>>>24&255,e[28]=h>>>0&255,e[29]=h>>>8&255,e[30]=h>>>16&255,e[31]=h>>>24&255}(e,t,r,n)}var v=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function w(e,t,r,n,o,a,i){var s,u,c=new Uint8Array(16),l=new Uint8Array(64);for(u=0;u<16;u++)c[u]=0;for(u=0;u<8;u++)c[u]=a[u];for(;o>=64;){for(g(l,c,i,v),u=0;u<64;u++)e[t+u]=r[n+u]^l[u];for(s=1,u=8;u<16;u++)s=s+(255&c[u])|0,c[u]=255&s,s>>>=8;o-=64,t+=64,n+=64}if(o>0)for(g(l,c,i,v),u=0;u<o;u++)e[t+u]=r[n+u]^l[u];return 0}function $(e,t,r,n,o){var a,i,s=new Uint8Array(16),u=new Uint8Array(64);for(i=0;i<16;i++)s[i]=0;for(i=0;i<8;i++)s[i]=n[i];for(;r>=64;){for(g(u,s,o,v),i=0;i<64;i++)e[t+i]=u[i];for(a=1,i=8;i<16;i++)a=a+(255&s[i])|0,s[i]=255&a,a>>>=8;r-=64,t+=64}if(r>0)for(g(u,s,o,v),i=0;i<r;i++)e[t+i]=u[i];return 0}function x(e,t,r,n,o){var a=new Uint8Array(32);b(a,n,o,v);for(var i=new Uint8Array(8),s=0;s<8;s++)i[s]=n[s+16];return $(e,t,r,i,a)}function _(e,t,r,n,o,a,i){var s=new Uint8Array(32);b(s,a,i,v);for(var u=new Uint8Array(8),c=0;c<8;c++)u[c]=a[c+16];return w(e,t,r,n,o,u,s)}var S=function(e){var t,r,n,o,a,i,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),o=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|o<<9),a=255&e[8]|(255&e[9])<<8,this.r[4]=255&(o>>>4|a<<12),this.r[5]=a>>>1&8190,i=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(a>>>14|i<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(i>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,t,r,n,o,a){var i=new S(a);return i.update(r,n,o),i.finish(e,t),0}function k(e,t,r,n,o,a){var i=new Uint8Array(16);return E(i,0,r,n,o,a),m(e,t,i,0)}function A(e,t,r,n,o){var a;if(r<32)return-1;for(_(e,0,t,0,r,n,o),E(e,16,e,32,r-32,e),a=0;a<16;a++)e[a]=0;return 0}function M(e,t,r,n,o){var a,i=new Uint8Array(32);if(r<32)return-1;if(x(i,0,32,n,o),0!==k(t,16,t,32,r-32,i))return-1;for(_(e,0,t,0,r,n,o),a=0;a<32;a++)e[a]=0;return 0}function R(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function C(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function P(e,t,r){for(var n,o=~(r-1),a=0;a<16;a++)n=o&(e[a]^t[a]),e[a]^=n,t[a]^=n}function T(e,r){var n,o,a,i=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(C(s),C(s),C(s),o=0;o<2;o++){for(i[0]=s[0]-65517,n=1;n<15;n++)i[n]=s[n]-65535-(i[n-1]>>16&1),i[n-1]&=65535;i[15]=s[15]-32767-(i[14]>>16&1),a=i[15]>>16&1,i[14]&=65535,P(s,i,1-a)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function I(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return T(r,e),T(n,t),y(r,0,n,0)}function N(e){var t=new Uint8Array(32);return T(t,e),1&t[0]}function O(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function U(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function L(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function F(e,t,r){var n,o,a=0,i=0,s=0,u=0,c=0,l=0,f=0,d=0,p=0,h=0,m=0,y=0,g=0,b=0,v=0,w=0,$=0,x=0,_=0,S=0,E=0,k=0,A=0,M=0,R=0,C=0,P=0,T=0,I=0,N=0,O=0,U=r[0],L=r[1],F=r[2],B=r[3],j=r[4],q=r[5],D=r[6],z=r[7],K=r[8],H=r[9],W=r[10],V=r[11],G=r[12],X=r[13],Y=r[14],J=r[15];a+=(n=t[0])*U,i+=n*L,s+=n*F,u+=n*B,c+=n*j,l+=n*q,f+=n*D,d+=n*z,p+=n*K,h+=n*H,m+=n*W,y+=n*V,g+=n*G,b+=n*X,v+=n*Y,w+=n*J,i+=(n=t[1])*U,s+=n*L,u+=n*F,c+=n*B,l+=n*j,f+=n*q,d+=n*D,p+=n*z,h+=n*K,m+=n*H,y+=n*W,g+=n*V,b+=n*G,v+=n*X,w+=n*Y,$+=n*J,s+=(n=t[2])*U,u+=n*L,c+=n*F,l+=n*B,f+=n*j,d+=n*q,p+=n*D,h+=n*z,m+=n*K,y+=n*H,g+=n*W,b+=n*V,v+=n*G,w+=n*X,$+=n*Y,x+=n*J,u+=(n=t[3])*U,c+=n*L,l+=n*F,f+=n*B,d+=n*j,p+=n*q,h+=n*D,m+=n*z,y+=n*K,g+=n*H,b+=n*W,v+=n*V,w+=n*G,$+=n*X,x+=n*Y,_+=n*J,c+=(n=t[4])*U,l+=n*L,f+=n*F,d+=n*B,p+=n*j,h+=n*q,m+=n*D,y+=n*z,g+=n*K,b+=n*H,v+=n*W,w+=n*V,$+=n*G,x+=n*X,_+=n*Y,S+=n*J,l+=(n=t[5])*U,f+=n*L,d+=n*F,p+=n*B,h+=n*j,m+=n*q,y+=n*D,g+=n*z,b+=n*K,v+=n*H,w+=n*W,$+=n*V,x+=n*G,_+=n*X,S+=n*Y,E+=n*J,f+=(n=t[6])*U,d+=n*L,p+=n*F,h+=n*B,m+=n*j,y+=n*q,g+=n*D,b+=n*z,v+=n*K,w+=n*H,$+=n*W,x+=n*V,_+=n*G,S+=n*X,E+=n*Y,k+=n*J,d+=(n=t[7])*U,p+=n*L,h+=n*F,m+=n*B,y+=n*j,g+=n*q,b+=n*D,v+=n*z,w+=n*K,$+=n*H,x+=n*W,_+=n*V,S+=n*G,E+=n*X,k+=n*Y,A+=n*J,p+=(n=t[8])*U,h+=n*L,m+=n*F,y+=n*B,g+=n*j,b+=n*q,v+=n*D,w+=n*z,$+=n*K,x+=n*H,_+=n*W,S+=n*V,E+=n*G,k+=n*X,A+=n*Y,M+=n*J,h+=(n=t[9])*U,m+=n*L,y+=n*F,g+=n*B,b+=n*j,v+=n*q,w+=n*D,$+=n*z,x+=n*K,_+=n*H,S+=n*W,E+=n*V,k+=n*G,A+=n*X,M+=n*Y,R+=n*J,m+=(n=t[10])*U,y+=n*L,g+=n*F,b+=n*B,v+=n*j,w+=n*q,$+=n*D,x+=n*z,_+=n*K,S+=n*H,E+=n*W,k+=n*V,A+=n*G,M+=n*X,R+=n*Y,C+=n*J,y+=(n=t[11])*U,g+=n*L,b+=n*F,v+=n*B,w+=n*j,$+=n*q,x+=n*D,_+=n*z,S+=n*K,E+=n*H,k+=n*W,A+=n*V,M+=n*G,R+=n*X,C+=n*Y,P+=n*J,g+=(n=t[12])*U,b+=n*L,v+=n*F,w+=n*B,$+=n*j,x+=n*q,_+=n*D,S+=n*z,E+=n*K,k+=n*H,A+=n*W,M+=n*V,R+=n*G,C+=n*X,P+=n*Y,T+=n*J,b+=(n=t[13])*U,v+=n*L,w+=n*F,$+=n*B,x+=n*j,_+=n*q,S+=n*D,E+=n*z,k+=n*K,A+=n*H,M+=n*W,R+=n*V,C+=n*G,P+=n*X,T+=n*Y,I+=n*J,v+=(n=t[14])*U,w+=n*L,$+=n*F,x+=n*B,_+=n*j,S+=n*q,E+=n*D,k+=n*z,A+=n*K,M+=n*H,R+=n*W,C+=n*V,P+=n*G,T+=n*X,I+=n*Y,N+=n*J,w+=(n=t[15])*U,i+=38*(x+=n*F),s+=38*(_+=n*B),u+=38*(S+=n*j),c+=38*(E+=n*q),l+=38*(k+=n*D),f+=38*(A+=n*z),d+=38*(M+=n*K),p+=38*(R+=n*H),h+=38*(C+=n*W),m+=38*(P+=n*V),y+=38*(T+=n*G),g+=38*(I+=n*X),b+=38*(N+=n*Y),v+=38*(O+=n*J),a=(n=(a+=38*($+=n*L))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),i=(n=i+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),a=(n=(a+=o-1+37*(o-1))+(o=1)+65535)-65536*(o=Math.floor(n/65536)),i=(n=i+o+65535)-65536*(o=Math.floor(n/65536)),s=(n=s+o+65535)-65536*(o=Math.floor(n/65536)),u=(n=u+o+65535)-65536*(o=Math.floor(n/65536)),c=(n=c+o+65535)-65536*(o=Math.floor(n/65536)),l=(n=l+o+65535)-65536*(o=Math.floor(n/65536)),f=(n=f+o+65535)-65536*(o=Math.floor(n/65536)),d=(n=d+o+65535)-65536*(o=Math.floor(n/65536)),p=(n=p+o+65535)-65536*(o=Math.floor(n/65536)),h=(n=h+o+65535)-65536*(o=Math.floor(n/65536)),m=(n=m+o+65535)-65536*(o=Math.floor(n/65536)),y=(n=y+o+65535)-65536*(o=Math.floor(n/65536)),g=(n=g+o+65535)-65536*(o=Math.floor(n/65536)),b=(n=b+o+65535)-65536*(o=Math.floor(n/65536)),v=(n=v+o+65535)-65536*(o=Math.floor(n/65536)),w=(n=w+o+65535)-65536*(o=Math.floor(n/65536)),a+=o-1+37*(o-1),e[0]=a,e[1]=i,e[2]=s,e[3]=u,e[4]=c,e[5]=l,e[6]=f,e[7]=d,e[8]=p,e[9]=h,e[10]=m,e[11]=y,e[12]=g,e[13]=b,e[14]=v,e[15]=w}function B(e,t){F(e,t,t)}function j(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=253;n>=0;n--)B(o,o),2!==n&&4!==n&&F(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function q(e,r){var n,o=t();for(n=0;n<16;n++)o[n]=r[n];for(n=250;n>=0;n--)B(o,o),1!==n&&F(o,o,r);for(n=0;n<16;n++)e[n]=o[n]}function D(e,r,n){var o,a,i=new Uint8Array(32),u=new Float64Array(80),c=t(),l=t(),f=t(),d=t(),p=t(),h=t();for(a=0;a<31;a++)i[a]=r[a];for(i[31]=127&r[31]|64,i[0]&=248,O(u,n),a=0;a<16;a++)l[a]=u[a],d[a]=c[a]=f[a]=0;for(c[0]=d[0]=1,a=254;a>=0;--a)P(c,l,o=i[a>>>3]>>>(7&a)&1),P(f,d,o),U(p,c,f),L(c,c,f),U(f,l,d),L(l,l,d),B(d,p),B(h,c),F(c,f,c),F(f,l,p),U(p,c,f),L(c,c,f),B(l,c),L(f,d,h),F(c,f,s),U(c,c,d),F(f,f,c),F(c,d,h),F(d,l,u),B(l,p),P(c,l,o),P(f,d,o);for(a=0;a<16;a++)u[a+16]=c[a],u[a+32]=f[a],u[a+48]=l[a],u[a+64]=d[a];var m=u.subarray(32),y=u.subarray(16);return j(m,m),F(y,y,m),T(e,y),0}function z(e,t){return D(e,t,o)}function K(e,t){return r(t,32),z(e,t)}function H(e,t,r){var o=new Uint8Array(32);return D(o,r,t),b(e,n,o,v)}S.prototype.blocks=function(e,t,r){for(var n,o,a,i,s,u,c,l,f,d,p,h,m,y,g,b,v,w,$,x=this.fin?0:2048,_=this.h[0],S=this.h[1],E=this.h[2],k=this.h[3],A=this.h[4],M=this.h[5],R=this.h[6],C=this.h[7],P=this.h[8],T=this.h[9],I=this.r[0],N=this.r[1],O=this.r[2],U=this.r[3],L=this.r[4],F=this.r[5],B=this.r[6],j=this.r[7],q=this.r[8],D=this.r[9];r>=16;)d=f=0,d+=(_+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*I,d+=(S+=8191&(n>>>13|(o=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*D),d+=(E+=8191&(o>>>10|(a=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*q),d+=(k+=8191&(a>>>7|(i=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*j),f=(d+=(A+=8191&(i>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*B))>>>13,d&=8191,d+=(M+=s>>>1&8191)*(5*F),d+=(R+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*L),d+=(C+=8191&(u>>>11|(c=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*U),d+=(P+=8191&(c>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*O),p=f+=(d+=(T+=l>>>5|x)*(5*N))>>>13,p+=_*N,p+=S*I,p+=E*(5*D),p+=k*(5*q),f=(p+=A*(5*j))>>>13,p&=8191,p+=M*(5*B),p+=R*(5*F),p+=C*(5*L),p+=P*(5*U),f+=(p+=T*(5*O))>>>13,p&=8191,h=f,h+=_*O,h+=S*N,h+=E*I,h+=k*(5*D),f=(h+=A*(5*q))>>>13,h&=8191,h+=M*(5*j),h+=R*(5*B),h+=C*(5*F),h+=P*(5*L),m=f+=(h+=T*(5*U))>>>13,m+=_*U,m+=S*O,m+=E*N,m+=k*I,f=(m+=A*(5*D))>>>13,m&=8191,m+=M*(5*q),m+=R*(5*j),m+=C*(5*B),m+=P*(5*F),y=f+=(m+=T*(5*L))>>>13,y+=_*L,y+=S*U,y+=E*O,y+=k*N,f=(y+=A*I)>>>13,y&=8191,y+=M*(5*D),y+=R*(5*q),y+=C*(5*j),y+=P*(5*B),g=f+=(y+=T*(5*F))>>>13,g+=_*F,g+=S*L,g+=E*U,g+=k*O,f=(g+=A*N)>>>13,g&=8191,g+=M*I,g+=R*(5*D),g+=C*(5*q),g+=P*(5*j),b=f+=(g+=T*(5*B))>>>13,b+=_*B,b+=S*F,b+=E*L,b+=k*U,f=(b+=A*O)>>>13,b&=8191,b+=M*N,b+=R*I,b+=C*(5*D),b+=P*(5*q),v=f+=(b+=T*(5*j))>>>13,v+=_*j,v+=S*B,v+=E*F,v+=k*L,f=(v+=A*U)>>>13,v&=8191,v+=M*O,v+=R*N,v+=C*I,v+=P*(5*D),w=f+=(v+=T*(5*q))>>>13,w+=_*q,w+=S*j,w+=E*B,w+=k*F,f=(w+=A*L)>>>13,w&=8191,w+=M*U,w+=R*O,w+=C*N,w+=P*I,$=f+=(w+=T*(5*D))>>>13,$+=_*D,$+=S*q,$+=E*j,$+=k*B,f=($+=A*F)>>>13,$&=8191,$+=M*L,$+=R*U,$+=C*O,$+=P*N,_=d=8191&(f=(f=((f+=($+=T*I)>>>13)<<2)+f|0)+(d&=8191)|0),S=p+=f>>>=13,E=h&=8191,k=m&=8191,A=y&=8191,M=g&=8191,R=b&=8191,C=v&=8191,P=w&=8191,T=$&=8191,t+=16,r-=16;this.h[0]=_,this.h[1]=S,this.h[2]=E,this.h[3]=k,this.h[4]=A,this.h[5]=M,this.h[6]=R,this.h[7]=C,this.h[8]=P,this.h[9]=T},S.prototype.finish=function(e,t){var r,n,o,a,i=new Uint16Array(10);if(this.leftover){for(a=this.leftover,this.buffer[a++]=1;a<16;a++)this.buffer[a]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,a=2;a<10;a++)this.h[a]+=r,r=this.h[a]>>>13,this.h[a]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,i[0]=this.h[0]+5,r=i[0]>>>13,i[0]&=8191,a=1;a<10;a++)i[a]=this.h[a]+r,r=i[a]>>>13,i[a]&=8191;for(i[9]-=8192,n=(1^r)-1,a=0;a<10;a++)i[a]&=n;for(n=~n,a=0;a<10;a++)this.h[a]=this.h[a]&n|i[a];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),o=this.h[0]+this.pad[0],this.h[0]=65535&o,a=1;a<8;a++)o=(this.h[a]+this.pad[a]|0)+(o>>>16)|0,this.h[a]=65535&o;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},S.prototype.update=function(e,t,r){var n,o;if(this.leftover){for((o=16-this.leftover)>r&&(o=r),n=0;n<o;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=o,t+=o,this.leftover+=o,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(o=r-r%16,this.blocks(e,t,o),t+=o,r-=o),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var W=A,V=M;var G=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function X(e,t,r,n){for(var o,a,i,s,u,c,l,f,d,p,h,m,y,g,b,v,w,$,x,_,S,E,k,A,M,R,C=new Int32Array(16),P=new Int32Array(16),T=e[0],I=e[1],N=e[2],O=e[3],U=e[4],L=e[5],F=e[6],B=e[7],j=t[0],q=t[1],D=t[2],z=t[3],K=t[4],H=t[5],W=t[6],V=t[7],X=0;n>=128;){for(x=0;x<16;x++)_=8*x+X,C[x]=r[_+0]<<24|r[_+1]<<16|r[_+2]<<8|r[_+3],P[x]=r[_+4]<<24|r[_+5]<<16|r[_+6]<<8|r[_+7];for(x=0;x<80;x++)if(o=T,a=I,i=N,s=O,u=U,c=L,l=F,B,d=j,p=q,h=D,m=z,y=K,g=H,b=W,V,k=65535&(E=V),A=E>>>16,M=65535&(S=B),R=S>>>16,k+=65535&(E=(K>>>14|U<<18)^(K>>>18|U<<14)^(U>>>9|K<<23)),A+=E>>>16,M+=65535&(S=(U>>>14|K<<18)^(U>>>18|K<<14)^(K>>>9|U<<23)),R+=S>>>16,k+=65535&(E=K&H^~K&W),A+=E>>>16,M+=65535&(S=U&L^~U&F),R+=S>>>16,k+=65535&(E=G[2*x+1]),A+=E>>>16,M+=65535&(S=G[2*x]),R+=S>>>16,S=C[x%16],A+=(E=P[x%16])>>>16,M+=65535&S,R+=S>>>16,M+=(A+=(k+=65535&E)>>>16)>>>16,k=65535&(E=$=65535&k|A<<16),A=E>>>16,M=65535&(S=w=65535&M|(R+=M>>>16)<<16),R=S>>>16,k+=65535&(E=(j>>>28|T<<4)^(T>>>2|j<<30)^(T>>>7|j<<25)),A+=E>>>16,M+=65535&(S=(T>>>28|j<<4)^(j>>>2|T<<30)^(j>>>7|T<<25)),R+=S>>>16,A+=(E=j&q^j&D^q&D)>>>16,M+=65535&(S=T&I^T&N^I&N),R+=S>>>16,f=65535&(M+=(A+=(k+=65535&E)>>>16)>>>16)|(R+=M>>>16)<<16,v=65535&k|A<<16,k=65535&(E=m),A=E>>>16,M=65535&(S=s),R=S>>>16,A+=(E=$)>>>16,M+=65535&(S=w),R+=S>>>16,I=o,N=a,O=i,U=s=65535&(M+=(A+=(k+=65535&E)>>>16)>>>16)|(R+=M>>>16)<<16,L=u,F=c,B=l,T=f,q=d,D=p,z=h,K=m=65535&k|A<<16,H=y,W=g,V=b,j=v,x%16==15)for(_=0;_<16;_++)S=C[_],k=65535&(E=P[_]),A=E>>>16,M=65535&S,R=S>>>16,S=C[(_+9)%16],k+=65535&(E=P[(_+9)%16]),A+=E>>>16,M+=65535&S,R+=S>>>16,w=C[(_+1)%16],k+=65535&(E=(($=P[(_+1)%16])>>>1|w<<31)^($>>>8|w<<24)^($>>>7|w<<25)),A+=E>>>16,M+=65535&(S=(w>>>1|$<<31)^(w>>>8|$<<24)^w>>>7),R+=S>>>16,w=C[(_+14)%16],A+=(E=(($=P[(_+14)%16])>>>19|w<<13)^(w>>>29|$<<3)^($>>>6|w<<26))>>>16,M+=65535&(S=(w>>>19|$<<13)^($>>>29|w<<3)^w>>>6),R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,C[_]=65535&M|R<<16,P[_]=65535&k|A<<16;k=65535&(E=j),A=E>>>16,M=65535&(S=T),R=S>>>16,S=e[0],A+=(E=t[0])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[0]=T=65535&M|R<<16,t[0]=j=65535&k|A<<16,k=65535&(E=q),A=E>>>16,M=65535&(S=I),R=S>>>16,S=e[1],A+=(E=t[1])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[1]=I=65535&M|R<<16,t[1]=q=65535&k|A<<16,k=65535&(E=D),A=E>>>16,M=65535&(S=N),R=S>>>16,S=e[2],A+=(E=t[2])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[2]=N=65535&M|R<<16,t[2]=D=65535&k|A<<16,k=65535&(E=z),A=E>>>16,M=65535&(S=O),R=S>>>16,S=e[3],A+=(E=t[3])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[3]=O=65535&M|R<<16,t[3]=z=65535&k|A<<16,k=65535&(E=K),A=E>>>16,M=65535&(S=U),R=S>>>16,S=e[4],A+=(E=t[4])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[4]=U=65535&M|R<<16,t[4]=K=65535&k|A<<16,k=65535&(E=H),A=E>>>16,M=65535&(S=L),R=S>>>16,S=e[5],A+=(E=t[5])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[5]=L=65535&M|R<<16,t[5]=H=65535&k|A<<16,k=65535&(E=W),A=E>>>16,M=65535&(S=F),R=S>>>16,S=e[6],A+=(E=t[6])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[6]=F=65535&M|R<<16,t[6]=W=65535&k|A<<16,k=65535&(E=V),A=E>>>16,M=65535&(S=B),R=S>>>16,S=e[7],A+=(E=t[7])>>>16,M+=65535&S,R+=S>>>16,R+=(M+=(A+=(k+=65535&E)>>>16)>>>16)>>>16,e[7]=B=65535&M|R<<16,t[7]=V=65535&k|A<<16,X+=128,n-=128}return n}function Y(e,t,r){var n,o=new Int32Array(8),a=new Int32Array(8),i=new Uint8Array(256),s=r;for(o[0]=1779033703,o[1]=3144134277,o[2]=1013904242,o[3]=2773480762,o[4]=1359893119,o[5]=2600822924,o[6]=528734635,o[7]=1541459225,a[0]=4089235720,a[1]=2227873595,a[2]=4271175723,a[3]=1595750129,a[4]=2917565137,a[5]=725511199,a[6]=4215389547,a[7]=327033209,X(o,a,t,r),r%=128,n=0;n<r;n++)i[n]=t[s-r+n];for(i[r]=128,i[(r=256-128*(r<112?1:0))-9]=0,p(i,r-8,s/536870912|0,s<<3),X(o,a,i,r),n=0;n<8;n++)p(e,8*n,o[n],a[n]);return 0}function J(e,r){var n=t(),o=t(),a=t(),i=t(),s=t(),u=t(),l=t(),f=t(),d=t();L(n,e[1],e[0]),L(d,r[1],r[0]),F(n,n,d),U(o,e[0],e[1]),U(d,r[0],r[1]),F(o,o,d),F(a,e[3],r[3]),F(a,a,c),F(i,e[2],r[2]),U(i,i,i),L(s,o,n),L(u,i,a),U(l,i,a),U(f,o,n),F(e[0],s,u),F(e[1],f,l),F(e[2],l,u),F(e[3],s,f)}function Q(e,t,r){var n;for(n=0;n<4;n++)P(e[n],t[n],r)}function Z(e,r){var n=t(),o=t(),a=t();j(a,r[2]),F(n,r[0],a),F(o,r[1],a),T(e,o),e[31]^=N(n)<<7}function ee(e,t,r){var n,o;for(R(e[0],a),R(e[1],i),R(e[2],i),R(e[3],a),o=255;o>=0;--o)Q(e,t,n=r[o/8|0]>>(7&o)&1),J(t,e),J(e,e),Q(e,t,n)}function te(e,r){var n=[t(),t(),t(),t()];R(n[0],l),R(n[1],f),R(n[2],i),F(n[3],l,f),ee(e,n,r)}function re(e,n,o){var a,i=new Uint8Array(64),s=[t(),t(),t(),t()];for(o||r(n,32),Y(i,n,32),i[0]&=248,i[31]&=127,i[31]|=64,te(s,i),Z(e,s),a=0;a<32;a++)n[a+32]=e[a];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var r,n,o,a;for(n=63;n>=32;--n){for(r=0,o=n-32,a=n-12;o<a;++o)t[o]+=r-16*t[n]*ne[o-(n-32)],r=Math.floor((t[o]+128)/256),t[o]-=256*r;t[o]+=r,t[n]=0}for(r=0,o=0;o<32;o++)t[o]+=r-(t[31]>>4)*ne[o],r=t[o]>>8,t[o]&=255;for(o=0;o<32;o++)t[o]-=r*ne[o];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,r)}function ie(e,r,n,o){var a,i,s=new Uint8Array(64),u=new Uint8Array(64),c=new Uint8Array(64),l=new Float64Array(64),f=[t(),t(),t(),t()];Y(s,o,32),s[0]&=248,s[31]&=127,s[31]|=64;var d=n+64;for(a=0;a<n;a++)e[64+a]=r[a];for(a=0;a<32;a++)e[32+a]=s[32+a];for(Y(c,e.subarray(32),n+32),ae(c),te(f,c),Z(e,f),a=32;a<64;a++)e[a]=o[a];for(Y(u,e,n+64),ae(u),a=0;a<64;a++)l[a]=0;for(a=0;a<32;a++)l[a]=c[a];for(a=0;a<32;a++)for(i=0;i<32;i++)l[a+i]+=u[a]*s[i];return oe(e.subarray(32),l),d}function se(e,r,n,o){var s,c=new Uint8Array(32),l=new Uint8Array(64),f=[t(),t(),t(),t()],p=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),o=t(),s=t(),c=t(),l=t(),f=t(),p=t();return R(e[2],i),O(e[1],r),B(s,e[1]),F(c,s,u),L(s,s,e[2]),U(c,e[2],c),B(l,c),B(f,l),F(p,f,l),F(n,p,s),F(n,n,c),q(n,n),F(n,n,s),F(n,n,c),F(n,n,c),F(e[0],n,c),B(o,e[0]),F(o,o,c),I(o,s)&&F(e[0],e[0],d),B(o,e[0]),F(o,o,c),I(o,s)?-1:(N(e[0])===r[31]>>7&&L(e[0],a,e[0]),F(e[3],e[0],e[1]),0)}(p,o))return-1;for(s=0;s<n;s++)e[s]=r[s];for(s=0;s<32;s++)e[s+32]=o[s];if(Y(l,e,n),ae(l),ee(f,p,l),te(p,r.subarray(32)),J(f,p),Z(c,f),n-=64,y(r,0,c,0)){for(s=0;s<n;s++)e[s]=0;return-1}for(s=0;s<n;s++)e[s]=r[s+64];return n}var ue=16,ce=64,le=32,fe=64;function de(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function he(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:b,crypto_stream_xor:_,crypto_stream:x,crypto_stream_salsa20_xor:w,crypto_stream_salsa20:$,crypto_onetimeauth:E,crypto_onetimeauth_verify:k,crypto_verify_16:m,crypto_verify_32:y,crypto_secretbox:A,crypto_secretbox_open:M,crypto_scalarmult:D,crypto_scalarmult_base:z,crypto_box_beforenm:H,crypto_box_afternm:W,crypto_box:function(e,t,r,n,o,a){var i=new Uint8Array(32);return H(i,o,a),W(e,t,r,n,i)},crypto_box_open:function(e,t,r,n,o,a){var i=new Uint8Array(32);return H(i,o,a),V(e,t,r,n,i)},crypto_box_keypair:K,crypto_hash:Y,crypto_sign:ie,crypto_sign_keypair:re,crypto_sign_open:se,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ue,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:le,crypto_sign_SECRETKEYBYTES:fe,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:u,L:ne,pack25519:T,unpack25519:O,M:F,A:U,S:B,Z:L,pow2523:q,add:J,set25519:R,modL:oe,scalarmult:ee,scalarbase:te},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){pe(e,t,r),de(r,t);for(var n=new Uint8Array(32+e.length),o=new Uint8Array(n.length),a=0;a<e.length;a++)n[a+32]=e[a];return A(o,n,n.length,t,r),o.subarray(ue)},e.secretbox.open=function(e,t,r){pe(e,t,r),de(r,t);for(var n=new Uint8Array(ue+e.length),o=new Uint8Array(n.length),a=0;a<e.length;a++)n[a+ue]=e[a];return n.length<32||0!==M(o,n,n.length,t,r)?null:o.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=ue,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return D(r,e,t),r},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return z(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,o){var a=e.box.before(n,o);return e.secretbox(t,r,a)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return H(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,o){var a=e.box.before(n,o);return e.secretbox.open(t,r,a)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return K(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return z(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==fe)throw new Error("bad secret key size");var r=new Uint8Array(ce+e.length);return ie(r,e,e.length,t),r},e.sign.open=function(e,t){if(pe(e,t),t.length!==le)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=se(r,e,e.length,t);if(n<0)return null;for(var o=new Uint8Array(n),a=0;a<o.length;a++)o[a]=r[a];return o},e.sign.detached=function(t,r){for(var n=e.sign(t,r),o=new Uint8Array(ce),a=0;a<o.length;a++)o[a]=n[a];return o},e.sign.detached.verify=function(e,t,r){if(pe(e,t,r),t.length!==ce)throw new Error("bad signature size");if(r.length!==le)throw new Error("bad public key size");var n,o=new Uint8Array(ce+e.length),a=new Uint8Array(ce+e.length);for(n=0;n<ce;n++)o[n]=t[n];for(n=0;n<e.length;n++)o[n+ce]=e[n];return se(a,o,o.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(le),t=new Uint8Array(fe);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==fe)throw new Error("bad secret key size");for(var t=new Uint8Array(le),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(le),r=new Uint8Array(fe),n=0;n<32;n++)r[n]=e[n];return re(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=le,e.sign.secretKeyLength=fe,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){pe(e);var t=new Uint8Array(64);return Y(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===h(e,0,t,0,e.length))},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG((function(e,r){var n,o=new Uint8Array(r);for(n=0;n<r;n+=65536)t.getRandomValues(o.subarray(n,n+Math.min(r-n,65536)));for(n=0;n<r;n++)e[n]=o[n];he(o)}))}else(t=parcelRequire("ifbub"))&&t.randomBytes&&e.setPRNG((function(e,r){var n,o=t.randomBytes(r);for(n=0;n<r;n++)e[n]=o[n];he(o)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})})),parcelRequire.register("ifbub",(function(e,t){})),parcelRequire.register("4vyb6",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0});var r=parcelRequire("fXZ66");Object.defineProperty(e.exports,"base_encode",{enumerable:!0,get:function(){return r.baseEncode}}),Object.defineProperty(e.exports,"base_decode",{enumerable:!0,get:function(){return r.baseDecode}}),Object.defineProperty(e.exports,"serialize",{enumerable:!0,get:function(){return r.serialize}}),Object.defineProperty(e.exports,"deserialize",{enumerable:!0,get:function(){return r.deserialize}}),Object.defineProperty(e.exports,"BorshError",{enumerable:!0,get:function(){return r.BorshError}}),Object.defineProperty(e.exports,"BinaryWriter",{enumerable:!0,get:function(){return r.BinaryWriter}}),Object.defineProperty(e.exports,"BinaryReader",{enumerable:!0,get:function(){return r.BinaryReader}})})),parcelRequire.register("fXZ66",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=e.exports&&e.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=e.exports&&e.exports.__decorate||function(e,t,r,n){var o,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,r,i):o(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},i=e.exports&&e.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},s=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.deserializeUnchecked=e.exports.deserialize=e.exports.serialize=e.exports.BinaryReader=e.exports.BinaryWriter=e.exports.BorshError=e.exports.baseDecode=e.exports.baseEncode=void 0;const u=s(parcelRequire("aVh2m")),c=s(parcelRequire("7LTy6")),l=i(parcelRequire("7bUqw")),f=new("function"!=typeof $parcel$global.TextDecoder?l.TextDecoder:$parcel$global.TextDecoder)("utf-8",{fatal:!0});e.exports.baseEncode=function(e){return"string"==typeof e&&(e=r.from(e,"utf8")),c.default.encode(r.from(e))},e.exports.baseDecode=function(e){return r.from(c.default.decode(e))};const d=1024;class p extends Error{addToFieldPath(e){this.fieldPath.splice(0,0,e),this.message=this.originalMessage+": "+this.fieldPath.join(".")}constructor(e){super(e),this.fieldPath=[],this.originalMessage=e}}e.exports.BorshError=p;class h{maybeResize(){this.buf.length<16+this.length&&(this.buf=r.concat([this.buf,r.alloc(d)]))}writeU8(e){this.maybeResize(),this.buf.writeUInt8(e,this.length),this.length+=1}writeU16(e){this.maybeResize(),this.buf.writeUInt16LE(e,this.length),this.length+=2}writeU32(e){this.maybeResize(),this.buf.writeUInt32LE(e,this.length),this.length+=4}writeU64(e){this.maybeResize(),this.writeBuffer(r.from(new u.default(e).toArray("le",8)))}writeU128(e){this.maybeResize(),this.writeBuffer(r.from(new u.default(e).toArray("le",16)))}writeU256(e){this.maybeResize(),this.writeBuffer(r.from(new u.default(e).toArray("le",32)))}writeU512(e){this.maybeResize(),this.writeBuffer(r.from(new u.default(e).toArray("le",64)))}writeBuffer(e){this.buf=r.concat([r.from(this.buf.subarray(0,this.length)),e,r.alloc(d)]),this.length+=e.length}writeString(e){this.maybeResize();const t=r.from(e,"utf8");this.writeU32(t.length),this.writeBuffer(t)}writeFixedArray(e){this.writeBuffer(r.from(e))}writeArray(e,t){this.maybeResize(),this.writeU32(e.length);for(const r of e)this.maybeResize(),t(r)}toArray(){return this.buf.subarray(0,this.length)}constructor(){this.buf=r.alloc(d),this.length=0}}function m(e,t,r){const n=r.value;r.value=function(...e){try{return n.apply(this,e)}catch(e){if(e instanceof RangeError){const t=e.code;if(["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(t)>=0)throw new p("Reached the end of buffer when deserializing")}throw e}}}e.exports.BinaryWriter=h;class y{readU8(){const e=this.buf.readUInt8(this.offset);return this.offset+=1,e}readU16(){const e=this.buf.readUInt16LE(this.offset);return this.offset+=2,e}readU32(){const e=this.buf.readUInt32LE(this.offset);return this.offset+=4,e}readU64(){const e=this.readBuffer(8);return new u.default(e,"le")}readU128(){const e=this.readBuffer(16);return new u.default(e,"le")}readU256(){const e=this.readBuffer(32);return new u.default(e,"le")}readU512(){const e=this.readBuffer(64);return new u.default(e,"le")}readBuffer(e){if(this.offset+e>this.buf.length)throw new p(`Expected buffer length ${e} isn't within bounds`);const t=this.buf.slice(this.offset,this.offset+e);return this.offset+=e,t}readString(){const e=this.readU32(),t=this.readBuffer(e);try{return f.decode(t)}catch(e){throw new p(`Error decoding UTF-8 string: ${e}`)}}readFixedArray(e){return new Uint8Array(this.readBuffer(e))}readArray(e){const t=this.readU32(),r=Array();for(let n=0;n<t;++n)r.push(e());return r}constructor(e){this.buf=e,this.offset=0}}function g(e){return e.charAt(0).toUpperCase()+e.slice(1)}function b(e,t,r,n,o){try{if("string"==typeof n)o[`write${g(n)}`](r);else if(n instanceof Array)if("number"==typeof n[0]){if(r.length!==n[0])throw new p(`Expecting byte array of length ${n[0]}, but got ${r.length} bytes`);o.writeFixedArray(r)}else if(2===n.length&&"number"==typeof n[1]){if(r.length!==n[1])throw new p(`Expecting byte array of length ${n[1]}, but got ${r.length} bytes`);for(let t=0;t<n[1];t++)b(e,null,r[t],n[0],o)}else o.writeArray(r,(r=>{b(e,t,r,n[0],o)}));else if(void 0!==n.kind){if("option"!==n.kind)throw new p(`FieldType ${n} unrecognized`);null==r?o.writeU8(0):(o.writeU8(1),b(e,t,r,n.type,o))}else v(e,r,o)}catch(e){throw e instanceof p&&e.addToFieldPath(t),e}}function v(e,t,r){if("function"==typeof t.borshSerialize)return void t.borshSerialize(r);const n=e.get(t.constructor);if(!n)throw new p(`Class ${t.constructor.name} is missing in schema`);if("struct"===n.kind)n.fields.map((([n,o])=>{b(e,n,t[n],o,r)}));else{if("enum"!==n.kind)throw new p(`Unexpected schema kind: ${n.kind} for ${t.constructor.name}`);{const o=t[n.field];for(let a=0;a<n.values.length;++a){const[i,s]=n.values[a];if(i===o){r.writeU8(a),b(e,i,t[i],s,r);break}}}}}function w(e,t,r,n){try{if("string"==typeof r)return n[`read${g(r)}`]();if(r instanceof Array){if("number"==typeof r[0])return n.readFixedArray(r[0]);if("number"==typeof r[1]){const t=[];for(let o=0;o<r[1];o++)t.push(w(e,null,r[0],n));return t}return n.readArray((()=>w(e,t,r[0],n)))}if("option"===r.kind){return n.readU8()?w(e,t,r.type,n):void 0}return $(e,r,n)}catch(e){throw e instanceof p&&e.addToFieldPath(t),e}}function $(e,t,r){if("function"==typeof t.borshDeserialize)return t.borshDeserialize(r);const n=e.get(t);if(!n)throw new p(`Class ${t.name} is missing in schema`);if("struct"===n.kind){const n={};for(const[o,a]of e.get(t).fields)n[o]=w(e,o,a,r);return new t(n)}if("enum"===n.kind){const o=r.readU8();if(o>=n.values.length)throw new p(`Enum index: ${o} is out of range`);const[a,i]=n.values[o];return new t({[a]:w(e,a,i,r)})}throw new p(`Unexpected schema kind: ${n.kind} for ${t.constructor.name}`)}a([m],y.prototype,"readU8",null),a([m],y.prototype,"readU16",null),a([m],y.prototype,"readU32",null),a([m],y.prototype,"readU64",null),a([m],y.prototype,"readU128",null),a([m],y.prototype,"readU256",null),a([m],y.prototype,"readU512",null),a([m],y.prototype,"readString",null),a([m],y.prototype,"readFixedArray",null),a([m],y.prototype,"readArray",null),e.exports.BinaryReader=y,e.exports.serialize=function(e,t,r=h){const n=new r;return v(e,t,n),n.toArray()},e.exports.deserialize=function(e,t,r,n=y){const o=new n(r),a=$(e,t,o);if(o.offset<r.length)throw new p(`Unexpected ${r.length-o.offset} bytes after deserialized data`);return a},e.exports.deserializeUnchecked=function(e,t,r,n=y){return $(e,t,new n(r))}})),parcelRequire.register("6i6c3",(function(e,t){var r,n,o,a;$parcel$export(e.exports,"Buffer",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"SlowBuffer",(function(){return n}),(function(e){return n=e})),$parcel$export(e.exports,"INSPECT_MAX_BYTES",(function(){return o}),(function(e){return o=e})),$parcel$export(e.exports,"kMaxLength",(function(){return a}),(function(e){return a=e}));var i=parcelRequire("kgG6s"),s=parcelRequire("eLdXg"),u="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;r=f,n=function(e){+e!=e&&(e=0);return f.alloc(+e)},o=50;var c=2147483647;function l(e){if(e>c)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,f.prototype),t}function f(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return d(e,t,r)}function d(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!f.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var r=0|b(e,t),n=l(r),o=n.write(e,t);o!==r&&(n=n.slice(0,o));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){var t=new Uint8Array(e);return y(t.buffer,t.byteOffset,t.byteLength)}return m(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return y(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return y(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return f.from(n,t,r);var o=function(e){if(f.isBuffer(e)){var t=0|g(e.length),r=l(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||H(e.length)?l(0):m(e);if("Buffer"===e.type&&Array.isArray(e.data))return m(e.data)}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return f.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function p(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return p(e),l(e<0?0:0|g(e))}function m(e){for(var t=e.length<0?0:0|g(e.length),r=l(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function y(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');var n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,f.prototype),n}function g(e){if(e>=c)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+c.toString(16)+" bytes");return 0|e}function b(e,t){if(f.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;for(var o=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return q(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return D(e).length;default:if(o)return n?-1:q(e).length;t=(""+t).toLowerCase(),o=!0}}function v(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,r);case"utf8":case"utf-8":return R(this,t,r);case"ascii":return P(this,t,r);case"latin1":case"binary":return T(this,t,r);case"base64":return M(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function w(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function $(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),H(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=f.from(t,n)),f.isBuffer(t))return 0===t.length?-1:x(e,t,r,n,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):x(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function x(e,t,r,n,o){var a,i=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;i=2,s/=2,u/=2,r/=2}function c(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){var l=-1;for(a=r;a<s;a++)if(c(e,a)===c(t,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===u)return l*i}else-1!==l&&(a-=a-l),l=-1}else for(r+u>s&&(r=s-u),a=r;a>=0;a--){for(var f=!0,d=0;d<u;d++)if(c(e,a+d)!==c(t,d)){f=!1;break}if(f)return a}return-1}function _(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;var a=t.length;n>a/2&&(n=a/2);for(var i=0;i<n;++i){var s=parseInt(t.substr(2*i,2),16);if(H(s))return i;e[r+i]=s}return i}function S(e,t,r,n){return z(q(t,e.length-r),e,r,n)}function E(e,t,r,n){return z(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function k(e,t,r,n){return z(D(t),e,r,n)}function A(e,t,r,n){return z(function(e,t){for(var r,n,o,a=[],i=0;i<e.length&&!((t-=2)<0);++i)n=(r=e.charCodeAt(i))>>8,o=r%256,a.push(o),a.push(n);return a}(t,e.length-r),e,r,n)}function M(e,t,r){return 0===t&&r===e.length?i.fromByteArray(e):i.fromByteArray(e.slice(t,r))}function R(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var a,i,s,u,c=e[o],l=null,f=c>239?4:c>223?3:c>191?2:1;if(o+f<=r)switch(f){case 1:c<128&&(l=c);break;case 2:128==(192&(a=e[o+1]))&&(u=(31&c)<<6|63&a)>127&&(l=u);break;case 3:a=e[o+1],i=e[o+2],128==(192&a)&&128==(192&i)&&(u=(15&c)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:a=e[o+1],i=e[o+2],s=e[o+3],128==(192&a)&&128==(192&i)&&128==(192&s)&&(u=(15&c)<<18|(63&a)<<12|(63&i)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,f=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),o+=f}return function(e){var t=e.length;if(t<=C)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=C));return r}(n)}a=c,f.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),f.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(f.prototype,"parent",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.buffer}}),Object.defineProperty(f.prototype,"offset",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.byteOffset}}),f.poolSize=8192,f.from=function(e,t,r){return d(e,t,r)},Object.setPrototypeOf(f.prototype,Uint8Array.prototype),Object.setPrototypeOf(f,Uint8Array),f.alloc=function(e,t,r){return function(e,t,r){return p(e),e<=0?l(e):void 0!==t?"string"==typeof r?l(e).fill(t,r):l(e).fill(t):l(e)}(e,t,r)},f.allocUnsafe=function(e){return h(e)},f.allocUnsafeSlow=function(e){return h(e)},f.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==f.prototype},f.compare=function(e,t){if(K(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),!f.isBuffer(e)||!f.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var r=e.length,n=t.length,o=0,a=Math.min(r,n);o<a;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},f.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},f.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return f.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=f.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var a=e[r];if(K(a,Uint8Array))o+a.length>n.length?f.from(a).copy(n,o):Uint8Array.prototype.set.call(n,a,o);else{if(!f.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(n,o)}o+=a.length}return n},f.byteLength=b,f.prototype._isBuffer=!0,f.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)w(this,t,t+1);return this},f.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)w(this,t,t+3),w(this,t+1,t+2);return this},f.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)w(this,t,t+7),w(this,t+1,t+6),w(this,t+2,t+5),w(this,t+3,t+4);return this},f.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?R(this,0,e):v.apply(this,arguments)},f.prototype.toLocaleString=f.prototype.toString,f.prototype.equals=function(e){if(!f.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===f.compare(this,e)},f.prototype.inspect=function(){var e="",t=o;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},u&&(f.prototype[u]=f.prototype.inspect),f.prototype.compare=function(e,t,r,n,o){if(K(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(n>>>=0),i=(r>>>=0)-(t>>>=0),s=Math.min(a,i),u=this.slice(n,o),c=e.slice(t,r),l=0;l<s;++l)if(u[l]!==c[l]){a=u[l],i=c[l];break}return a<i?-1:i<a?1:0},f.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},f.prototype.indexOf=function(e,t,r){return $(this,e,t,r,!0)},f.prototype.lastIndexOf=function(e,t,r){return $(this,e,t,r,!1)},f.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var a=!1;;)switch(n){case"hex":return _(this,e,t,r);case"utf8":case"utf-8":return S(this,e,t,r);case"ascii":case"latin1":case"binary":return E(this,e,t,r);case"base64":return k(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,t,r);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}},f.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var C=4096;function P(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function T(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function I(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var o="",a=t;a<r;++a)o+=W[e[a]];return o}function N(e,t,r){for(var n=e.slice(t,r),o="",a=0;a<n.length-1;a+=2)o+=String.fromCharCode(n[a]+256*n[a+1]);return o}function O(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function U(e,t,r,n,o,a){if(!f.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function L(e,t,r,n,o,a){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function F(e,t,r,n,o){return t=+t,r>>>=0,o||L(e,0,r,4),s.write(e,t,r,n,23,4),r+4}function B(e,t,r,n,o){return t=+t,r>>>=0,o||L(e,0,r,8),s.write(e,t,r,n,52,8),r+8}f.prototype.slice=function(e,t){var r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);var n=this.subarray(e,t);return Object.setPrototypeOf(n,f.prototype),n},f.prototype.readUintLE=f.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||O(e,t,this.length);for(var n=this[e],o=1,a=0;++a<t&&(o*=256);)n+=this[e+a]*o;return n},f.prototype.readUintBE=f.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||O(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},f.prototype.readUint8=f.prototype.readUInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),this[e]},f.prototype.readUint16LE=f.prototype.readUInt16LE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]|this[e+1]<<8},f.prototype.readUint16BE=f.prototype.readUInt16BE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]<<8|this[e+1]},f.prototype.readUint32LE=f.prototype.readUInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},f.prototype.readUint32BE=f.prototype.readUInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},f.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||O(e,t,this.length);for(var n=this[e],o=1,a=0;++a<t&&(o*=256);)n+=this[e+a]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},f.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||O(e,t,this.length);for(var n=t,o=1,a=this[e+--n];n>0&&(o*=256);)a+=this[e+--n]*o;return a>=(o*=128)&&(a-=Math.pow(2,8*t)),a},f.prototype.readInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},f.prototype.readInt16LE=function(e,t){e>>>=0,t||O(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt16BE=function(e,t){e>>>=0,t||O(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},f.prototype.readInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},f.prototype.readFloatLE=function(e,t){return e>>>=0,t||O(e,4,this.length),s.read(this,e,!0,23,4)},f.prototype.readFloatBE=function(e,t){return e>>>=0,t||O(e,4,this.length),s.read(this,e,!1,23,4)},f.prototype.readDoubleLE=function(e,t){return e>>>=0,t||O(e,8,this.length),s.read(this,e,!0,52,8)},f.prototype.readDoubleBE=function(e,t){return e>>>=0,t||O(e,8,this.length),s.read(this,e,!1,52,8)},f.prototype.writeUintLE=f.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||U(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,a=0;for(this[t]=255&e;++a<r&&(o*=256);)this[t+a]=e/o&255;return t+r},f.prototype.writeUintBE=f.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t>>>=0,r>>>=0,n)||U(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,a=1;for(this[t+o]=255&e;--o>=0&&(a*=256);)this[t+o]=e/a&255;return t+r},f.prototype.writeUint8=f.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,1,255,0),this[t]=255&e,t+1},f.prototype.writeUint16LE=f.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},f.prototype.writeUint16BE=f.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},f.prototype.writeUint32LE=f.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},f.prototype.writeUint32BE=f.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},f.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);U(this,e,t,r,o-1,-o)}var a=0,i=1,s=0;for(this[t]=255&e;++a<r&&(i*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},f.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);U(this,e,t,r,o-1,-o)}var a=r-1,i=1,s=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},f.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},f.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},f.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},f.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},f.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||U(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},f.prototype.writeFloatLE=function(e,t,r){return F(this,e,t,!0,r)},f.prototype.writeFloatBE=function(e,t,r){return F(this,e,t,!1,r)},f.prototype.writeDoubleLE=function(e,t,r){return B(this,e,t,!0,r)},f.prototype.writeDoubleBE=function(e,t,r){return B(this,e,t,!1,r)},f.prototype.copy=function(e,t,r,n){if(!f.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),o},f.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!f.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){var o=e.charCodeAt(0);("utf8"===n&&o<128||"latin1"===n)&&(e=o)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var a;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{var i=f.isBuffer(e)?e:f.from(e,n),s=i.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=i[a%s]}return this};var j=/[^+/0-9A-Za-z-_]/g;function q(e,t){var r;t=t||1/0;for(var n=e.length,o=null,a=[],i=0;i<n;++i){if((r=e.charCodeAt(i))>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===n){(t-=3)>-1&&a.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&a.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&a.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return a}function D(e){return i.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function z(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function H(e){return e!=e}var W=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,o=0;o<16;++o)t[n+o]=e[r]+e[o];return t}()})),parcelRequire.register("kgG6s",(function(e,t){var r,n;$parcel$export(e.exports,"toByteArray",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"fromByteArray",(function(){return n}),(function(e){return n=e})),r=function(e){var t,r,n=l(e),o=n[0],s=n[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,o,s)),c=0,f=s>0?o-4:o;for(r=0;r<f;r+=4)t=a[e.charCodeAt(r)]<<18|a[e.charCodeAt(r+1)]<<12|a[e.charCodeAt(r+2)]<<6|a[e.charCodeAt(r+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;2===s&&(t=a[e.charCodeAt(r)]<<2|a[e.charCodeAt(r+1)]>>4,u[c++]=255&t);1===s&&(t=a[e.charCodeAt(r)]<<10|a[e.charCodeAt(r+1)]<<4|a[e.charCodeAt(r+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t);return u},n=function(e){for(var t,r=e.length,n=r%3,a=[],i=16383,s=0,u=r-n;s<u;s+=i)a.push(f(e,s,s+i>u?u:s+i));1===n?(t=e[r-1],a.push(o[t>>2]+o[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],a.push(o[t>>10]+o[t>>4&63]+o[t<<2&63]+"="));return a.join("")};for(var o=[],a=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,c=s.length;u<c;++u)o[u]=s[u],a[s.charCodeAt(u)]=u;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function f(e,t,r){for(var n,a,i=[],s=t;s<r;s+=3)n=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),i.push(o[(a=n)>>18&63]+o[a>>12&63]+o[a>>6&63]+o[63&a]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63})),parcelRequire.register("eLdXg",(function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */var r,n;$parcel$export(e.exports,"read",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"write",(function(){return n}),(function(e){return n=e})),r=function(e,t,r,n,o){var a,i,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,d=r?-1:1,p=e[t+f];for(f+=d,a=p&(1<<-l)-1,p>>=-l,l+=s;l>0;a=256*a+e[t+f],f+=d,l-=8);for(i=a&(1<<-l)-1,a>>=-l,l+=n;l>0;i=256*i+e[t+f],f+=d,l-=8);if(0===a)a=1-c;else{if(a===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,n),a-=c}return(p?-1:1)*i*Math.pow(2,a-n)},n=function(e,t,r,n,o,a){var i,s,u,c=8*a-o-1,l=(1<<c)-1,f=l>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:a-1,h=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+f>=1?d/u:d*Math.pow(2,1-f))*u>=2&&(i++,u/=2),i+f>=l?(s=0,i=l):i+f>=1?(s=(t*u-1)*Math.pow(2,o),i+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),i=0));o>=8;e[r+p]=255&s,p+=h,s/=256,o-=8);for(i=i<<o|s,c+=o;c>0;e[r+p]=255&i,p+=h,i/=256,c-=8);e[r+p-h]|=128*m}})),parcelRequire.register("aVh2m",(function(e,t){!function(e,t){function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function n(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function o(e,t,r){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var a;"object"==typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{a="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:parcelRequire("ifbub").Buffer}catch(e){}function i(e,t){var n=e.charCodeAt(t);return n>=48&&n<=57?n-48:n>=65&&n<=70?n-55:n>=97&&n<=102?n-87:void r(!1,"Invalid character in "+e)}function s(e,t,r){var n=i(e,r);return r-1>=t&&(n|=i(e,r-1)<<4),n}function u(e,t,n,o){for(var a=0,i=0,s=Math.min(e.length,n),u=t;u<s;u++){var c=e.charCodeAt(u)-48;a*=o,i=c>=49?c-49+10:c>=17?c-17+10:c,r(c>=0&&i<o,"Invalid character"),a+=i}return a}function c(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(o.isBN=function(e){return e instanceof o||null!==e&&"object"==typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,n){if("number"==typeof e)return this._initNumber(e,t,n);if("object"==typeof e)return this._initArray(e,t,n);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var o=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(o++,this.negative=1),o<e.length&&(16===t?this._parseHex(e,o,n):(this._parseBase(e,t,o),"le"===n&&this._initArray(this.toArray(),t,n)))},o.prototype._initNumber=function(e,t,n){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),t,n)},o.prototype._initArray=function(e,t,n){if(r("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var o=0;o<this.length;o++)this.words[o]=0;var a,i,s=0;if("be"===n)for(o=e.length-1,a=0;o>=0;o-=3)i=e[o]|e[o-1]<<8|e[o-2]<<16,this.words[a]|=i<<s&67108863,this.words[a+1]=i>>>26-s&67108863,(s+=24)>=26&&(s-=26,a++);else if("le"===n)for(o=0,a=0;o<e.length;o+=3)i=e[o]|e[o+1]<<8|e[o+2]<<16,this.words[a]|=i<<s&67108863,this.words[a+1]=i>>>26-s&67108863,(s+=24)>=26&&(s-=26,a++);return this._strip()},o.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var o,a=0,i=0;if("be"===r)for(n=e.length-1;n>=t;n-=2)o=s(e,t,n)<<a,this.words[i]|=67108863&o,a>=18?(a-=18,i+=1,this.words[i]|=o>>>26):a+=8;else for(n=(e.length-t)%2==0?t+1:t;n<e.length;n+=2)o=s(e,t,n)<<a,this.words[i]|=67108863&o,a>=18?(a-=18,i+=1,this.words[i]|=o>>>26):a+=8;this._strip()},o.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var n=0,o=1;o<=67108863;o*=t)n++;n--,o=o/t|0;for(var a=e.length-r,i=a%n,s=Math.min(a,a-i)+r,c=0,l=r;l<s;l+=n)c=u(e,l,l+n,t),this.imuln(o),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==i){var f=1;for(c=u(e,l,e.length,t),l=0;l<i;l++)f*=t;this.imuln(f),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}this._strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype._move=function(e){c(e,this)},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{o.prototype[Symbol.for("nodejs.util.inspect.custom")]=l}catch(e){o.prototype.inspect=l}else o.prototype.inspect=l;function l(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var f=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],d=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(e,t){var n;if(t=0|t||1,16===(e=e||10)||"hex"===e){n="";for(var o=0,a=0,i=0;i<this.length;i++){var s=this.words[i],u=(16777215&(s<<o|a)).toString(16);n=0!==(a=s>>>24-o&16777215)||i!==this.length-1?f[6-u.length]+u+n:u+n,(o+=2)>=26&&(o-=26,i--)}for(0!==a&&(n=a.toString(16)+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(e===(0|e)&&e>=2&&e<=36){var c=d[e],l=p[e];n="";var h=this.clone();for(h.negative=0;!h.isZero();){var m=h.modrn(l).toString(e);n=(h=h.idivn(l)).isZero()?m+n:f[c-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16,2)},a&&(o.prototype.toBuffer=function(e,t){return this.toArrayLike(a,e,t)}),o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)};function h(e,t,r){r.negative=t.negative^e.negative;var n=e.length+t.length|0;r.length=n,n=n-1|0;var o=0|e.words[0],a=0|t.words[0],i=o*a,s=67108863&i,u=i/67108864|0;r.words[0]=s;for(var c=1;c<n;c++){for(var l=u>>>26,f=67108863&u,d=Math.min(c,t.length-1),p=Math.max(0,c-e.length+1);p<=d;p++){var h=c-p|0;l+=(i=(o=0|e.words[h])*(a=0|t.words[p])+f)/67108864|0,f=67108863&i}r.words[c]=0|f,u=0|l}return 0!==u?r.words[c]=0|u:r.length--,r._strip()}o.prototype.toArrayLike=function(e,t,n){this._strip();var o=this.byteLength(),a=n||Math.max(1,o);r(o<=a,"byte array longer than desired length"),r(a>0,"Requested array length <= 0");var i=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,a);return this["_toArrayLike"+("le"===t?"LE":"BE")](i,o),i},o.prototype._toArrayLikeLE=function(e,t){for(var r=0,n=0,o=0,a=0;o<this.length;o++){var i=this.words[o]<<a|n;e[r++]=255&i,r<e.length&&(e[r++]=i>>8&255),r<e.length&&(e[r++]=i>>16&255),6===a?(r<e.length&&(e[r++]=i>>24&255),n=0,a=0):(n=i>>>24,a+=2)}if(r<e.length)for(e[r++]=n;r<e.length;)e[r++]=0},o.prototype._toArrayLikeBE=function(e,t){for(var r=e.length-1,n=0,o=0,a=0;o<this.length;o++){var i=this.words[o]<<a|n;e[r--]=255&i,r>=0&&(e[r--]=i>>8&255),r>=0&&(e[r--]=i>>16&255),6===a?(r>=0&&(e[r--]=i>>24&255),n=0,a=0):(n=i>>>24,a+=2)}if(r>=0)for(e[r--]=n;r>=0;)e[r--]=0},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},o.prototype.ior=function(e){return r(0==(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this._strip()},o.prototype.iand=function(e){return r(0==(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var n=0;n<r.length;n++)this.words[n]=t.words[n]^r.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this._strip()},o.prototype.ixor=function(e){return r(0==(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){r("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),n=e%26;this._expand(t),n>0&&t--;for(var o=0;o<t;o++)this.words[o]=67108863&~this.words[o];return n>0&&(this.words[o]=~this.words[o]&67108863>>26-n),this._strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){r("number"==typeof e&&e>=0);var n=e/26|0,o=e%26;return this._expand(n+1),this.words[n]=t?this.words[n]|1<<o:this.words[n]&~(1<<o),this._strip()},o.prototype.iadd=function(e){var t,r,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,n=e):(r=e,n=this);for(var o=0,a=0;a<n.length;a++)t=(0|r.words[a])+(0|n.words[a])+o,this.words[a]=67108863&t,o=t>>>26;for(;0!==o&&a<r.length;a++)t=(0|r.words[a])+o,this.words[a]=67108863&t,o=t>>>26;if(this.length=r.length,0!==o)this.words[this.length]=o,this.length++;else if(r!==this)for(;a<r.length;a++)this.words[a]=r.words[a];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,n,o=this.cmp(e);if(0===o)return this.negative=0,this.length=1,this.words[0]=0,this;o>0?(r=this,n=e):(r=e,n=this);for(var a=0,i=0;i<n.length;i++)a=(t=(0|r.words[i])-(0|n.words[i])+a)>>26,this.words[i]=67108863&t;for(;0!==a&&i<r.length;i++)a=(t=(0|r.words[i])+a)>>26,this.words[i]=67108863&t;if(0===a&&i<r.length&&r!==this)for(;i<r.length;i++)this.words[i]=r.words[i];return this.length=Math.max(this.length,i),r!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var m=function(e,t,r){var n,o,a,i=e.words,s=t.words,u=r.words,c=0,l=0|i[0],f=8191&l,d=l>>>13,p=0|i[1],h=8191&p,m=p>>>13,y=0|i[2],g=8191&y,b=y>>>13,v=0|i[3],w=8191&v,$=v>>>13,x=0|i[4],_=8191&x,S=x>>>13,E=0|i[5],k=8191&E,A=E>>>13,M=0|i[6],R=8191&M,C=M>>>13,P=0|i[7],T=8191&P,I=P>>>13,N=0|i[8],O=8191&N,U=N>>>13,L=0|i[9],F=8191&L,B=L>>>13,j=0|s[0],q=8191&j,D=j>>>13,z=0|s[1],K=8191&z,H=z>>>13,W=0|s[2],V=8191&W,G=W>>>13,X=0|s[3],Y=8191&X,J=X>>>13,Q=0|s[4],Z=8191&Q,ee=Q>>>13,te=0|s[5],re=8191&te,ne=te>>>13,oe=0|s[6],ae=8191&oe,ie=oe>>>13,se=0|s[7],ue=8191&se,ce=se>>>13,le=0|s[8],fe=8191&le,de=le>>>13,pe=0|s[9],he=8191&pe,me=pe>>>13;r.negative=e.negative^t.negative,r.length=19;var ye=(c+(n=Math.imul(f,q))|0)+((8191&(o=(o=Math.imul(f,D))+Math.imul(d,q)|0))<<13)|0;c=((a=Math.imul(d,D))+(o>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(h,q),o=(o=Math.imul(h,D))+Math.imul(m,q)|0,a=Math.imul(m,D);var ge=(c+(n=n+Math.imul(f,K)|0)|0)+((8191&(o=(o=o+Math.imul(f,H)|0)+Math.imul(d,K)|0))<<13)|0;c=((a=a+Math.imul(d,H)|0)+(o>>>13)|0)+(ge>>>26)|0,ge&=67108863,n=Math.imul(g,q),o=(o=Math.imul(g,D))+Math.imul(b,q)|0,a=Math.imul(b,D),n=n+Math.imul(h,K)|0,o=(o=o+Math.imul(h,H)|0)+Math.imul(m,K)|0,a=a+Math.imul(m,H)|0;var be=(c+(n=n+Math.imul(f,V)|0)|0)+((8191&(o=(o=o+Math.imul(f,G)|0)+Math.imul(d,V)|0))<<13)|0;c=((a=a+Math.imul(d,G)|0)+(o>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(w,q),o=(o=Math.imul(w,D))+Math.imul($,q)|0,a=Math.imul($,D),n=n+Math.imul(g,K)|0,o=(o=o+Math.imul(g,H)|0)+Math.imul(b,K)|0,a=a+Math.imul(b,H)|0,n=n+Math.imul(h,V)|0,o=(o=o+Math.imul(h,G)|0)+Math.imul(m,V)|0,a=a+Math.imul(m,G)|0;var ve=(c+(n=n+Math.imul(f,Y)|0)|0)+((8191&(o=(o=o+Math.imul(f,J)|0)+Math.imul(d,Y)|0))<<13)|0;c=((a=a+Math.imul(d,J)|0)+(o>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(_,q),o=(o=Math.imul(_,D))+Math.imul(S,q)|0,a=Math.imul(S,D),n=n+Math.imul(w,K)|0,o=(o=o+Math.imul(w,H)|0)+Math.imul($,K)|0,a=a+Math.imul($,H)|0,n=n+Math.imul(g,V)|0,o=(o=o+Math.imul(g,G)|0)+Math.imul(b,V)|0,a=a+Math.imul(b,G)|0,n=n+Math.imul(h,Y)|0,o=(o=o+Math.imul(h,J)|0)+Math.imul(m,Y)|0,a=a+Math.imul(m,J)|0;var we=(c+(n=n+Math.imul(f,Z)|0)|0)+((8191&(o=(o=o+Math.imul(f,ee)|0)+Math.imul(d,Z)|0))<<13)|0;c=((a=a+Math.imul(d,ee)|0)+(o>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(k,q),o=(o=Math.imul(k,D))+Math.imul(A,q)|0,a=Math.imul(A,D),n=n+Math.imul(_,K)|0,o=(o=o+Math.imul(_,H)|0)+Math.imul(S,K)|0,a=a+Math.imul(S,H)|0,n=n+Math.imul(w,V)|0,o=(o=o+Math.imul(w,G)|0)+Math.imul($,V)|0,a=a+Math.imul($,G)|0,n=n+Math.imul(g,Y)|0,o=(o=o+Math.imul(g,J)|0)+Math.imul(b,Y)|0,a=a+Math.imul(b,J)|0,n=n+Math.imul(h,Z)|0,o=(o=o+Math.imul(h,ee)|0)+Math.imul(m,Z)|0,a=a+Math.imul(m,ee)|0;var $e=(c+(n=n+Math.imul(f,re)|0)|0)+((8191&(o=(o=o+Math.imul(f,ne)|0)+Math.imul(d,re)|0))<<13)|0;c=((a=a+Math.imul(d,ne)|0)+(o>>>13)|0)+($e>>>26)|0,$e&=67108863,n=Math.imul(R,q),o=(o=Math.imul(R,D))+Math.imul(C,q)|0,a=Math.imul(C,D),n=n+Math.imul(k,K)|0,o=(o=o+Math.imul(k,H)|0)+Math.imul(A,K)|0,a=a+Math.imul(A,H)|0,n=n+Math.imul(_,V)|0,o=(o=o+Math.imul(_,G)|0)+Math.imul(S,V)|0,a=a+Math.imul(S,G)|0,n=n+Math.imul(w,Y)|0,o=(o=o+Math.imul(w,J)|0)+Math.imul($,Y)|0,a=a+Math.imul($,J)|0,n=n+Math.imul(g,Z)|0,o=(o=o+Math.imul(g,ee)|0)+Math.imul(b,Z)|0,a=a+Math.imul(b,ee)|0,n=n+Math.imul(h,re)|0,o=(o=o+Math.imul(h,ne)|0)+Math.imul(m,re)|0,a=a+Math.imul(m,ne)|0;var xe=(c+(n=n+Math.imul(f,ae)|0)|0)+((8191&(o=(o=o+Math.imul(f,ie)|0)+Math.imul(d,ae)|0))<<13)|0;c=((a=a+Math.imul(d,ie)|0)+(o>>>13)|0)+(xe>>>26)|0,xe&=67108863,n=Math.imul(T,q),o=(o=Math.imul(T,D))+Math.imul(I,q)|0,a=Math.imul(I,D),n=n+Math.imul(R,K)|0,o=(o=o+Math.imul(R,H)|0)+Math.imul(C,K)|0,a=a+Math.imul(C,H)|0,n=n+Math.imul(k,V)|0,o=(o=o+Math.imul(k,G)|0)+Math.imul(A,V)|0,a=a+Math.imul(A,G)|0,n=n+Math.imul(_,Y)|0,o=(o=o+Math.imul(_,J)|0)+Math.imul(S,Y)|0,a=a+Math.imul(S,J)|0,n=n+Math.imul(w,Z)|0,o=(o=o+Math.imul(w,ee)|0)+Math.imul($,Z)|0,a=a+Math.imul($,ee)|0,n=n+Math.imul(g,re)|0,o=(o=o+Math.imul(g,ne)|0)+Math.imul(b,re)|0,a=a+Math.imul(b,ne)|0,n=n+Math.imul(h,ae)|0,o=(o=o+Math.imul(h,ie)|0)+Math.imul(m,ae)|0,a=a+Math.imul(m,ie)|0;var _e=(c+(n=n+Math.imul(f,ue)|0)|0)+((8191&(o=(o=o+Math.imul(f,ce)|0)+Math.imul(d,ue)|0))<<13)|0;c=((a=a+Math.imul(d,ce)|0)+(o>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(O,q),o=(o=Math.imul(O,D))+Math.imul(U,q)|0,a=Math.imul(U,D),n=n+Math.imul(T,K)|0,o=(o=o+Math.imul(T,H)|0)+Math.imul(I,K)|0,a=a+Math.imul(I,H)|0,n=n+Math.imul(R,V)|0,o=(o=o+Math.imul(R,G)|0)+Math.imul(C,V)|0,a=a+Math.imul(C,G)|0,n=n+Math.imul(k,Y)|0,o=(o=o+Math.imul(k,J)|0)+Math.imul(A,Y)|0,a=a+Math.imul(A,J)|0,n=n+Math.imul(_,Z)|0,o=(o=o+Math.imul(_,ee)|0)+Math.imul(S,Z)|0,a=a+Math.imul(S,ee)|0,n=n+Math.imul(w,re)|0,o=(o=o+Math.imul(w,ne)|0)+Math.imul($,re)|0,a=a+Math.imul($,ne)|0,n=n+Math.imul(g,ae)|0,o=(o=o+Math.imul(g,ie)|0)+Math.imul(b,ae)|0,a=a+Math.imul(b,ie)|0,n=n+Math.imul(h,ue)|0,o=(o=o+Math.imul(h,ce)|0)+Math.imul(m,ue)|0,a=a+Math.imul(m,ce)|0;var Se=(c+(n=n+Math.imul(f,fe)|0)|0)+((8191&(o=(o=o+Math.imul(f,de)|0)+Math.imul(d,fe)|0))<<13)|0;c=((a=a+Math.imul(d,de)|0)+(o>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(F,q),o=(o=Math.imul(F,D))+Math.imul(B,q)|0,a=Math.imul(B,D),n=n+Math.imul(O,K)|0,o=(o=o+Math.imul(O,H)|0)+Math.imul(U,K)|0,a=a+Math.imul(U,H)|0,n=n+Math.imul(T,V)|0,o=(o=o+Math.imul(T,G)|0)+Math.imul(I,V)|0,a=a+Math.imul(I,G)|0,n=n+Math.imul(R,Y)|0,o=(o=o+Math.imul(R,J)|0)+Math.imul(C,Y)|0,a=a+Math.imul(C,J)|0,n=n+Math.imul(k,Z)|0,o=(o=o+Math.imul(k,ee)|0)+Math.imul(A,Z)|0,a=a+Math.imul(A,ee)|0,n=n+Math.imul(_,re)|0,o=(o=o+Math.imul(_,ne)|0)+Math.imul(S,re)|0,a=a+Math.imul(S,ne)|0,n=n+Math.imul(w,ae)|0,o=(o=o+Math.imul(w,ie)|0)+Math.imul($,ae)|0,a=a+Math.imul($,ie)|0,n=n+Math.imul(g,ue)|0,o=(o=o+Math.imul(g,ce)|0)+Math.imul(b,ue)|0,a=a+Math.imul(b,ce)|0,n=n+Math.imul(h,fe)|0,o=(o=o+Math.imul(h,de)|0)+Math.imul(m,fe)|0,a=a+Math.imul(m,de)|0;var Ee=(c+(n=n+Math.imul(f,he)|0)|0)+((8191&(o=(o=o+Math.imul(f,me)|0)+Math.imul(d,he)|0))<<13)|0;c=((a=a+Math.imul(d,me)|0)+(o>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(F,K),o=(o=Math.imul(F,H))+Math.imul(B,K)|0,a=Math.imul(B,H),n=n+Math.imul(O,V)|0,o=(o=o+Math.imul(O,G)|0)+Math.imul(U,V)|0,a=a+Math.imul(U,G)|0,n=n+Math.imul(T,Y)|0,o=(o=o+Math.imul(T,J)|0)+Math.imul(I,Y)|0,a=a+Math.imul(I,J)|0,n=n+Math.imul(R,Z)|0,o=(o=o+Math.imul(R,ee)|0)+Math.imul(C,Z)|0,a=a+Math.imul(C,ee)|0,n=n+Math.imul(k,re)|0,o=(o=o+Math.imul(k,ne)|0)+Math.imul(A,re)|0,a=a+Math.imul(A,ne)|0,n=n+Math.imul(_,ae)|0,o=(o=o+Math.imul(_,ie)|0)+Math.imul(S,ae)|0,a=a+Math.imul(S,ie)|0,n=n+Math.imul(w,ue)|0,o=(o=o+Math.imul(w,ce)|0)+Math.imul($,ue)|0,a=a+Math.imul($,ce)|0,n=n+Math.imul(g,fe)|0,o=(o=o+Math.imul(g,de)|0)+Math.imul(b,fe)|0,a=a+Math.imul(b,de)|0;var ke=(c+(n=n+Math.imul(h,he)|0)|0)+((8191&(o=(o=o+Math.imul(h,me)|0)+Math.imul(m,he)|0))<<13)|0;c=((a=a+Math.imul(m,me)|0)+(o>>>13)|0)+(ke>>>26)|0,ke&=67108863,n=Math.imul(F,V),o=(o=Math.imul(F,G))+Math.imul(B,V)|0,a=Math.imul(B,G),n=n+Math.imul(O,Y)|0,o=(o=o+Math.imul(O,J)|0)+Math.imul(U,Y)|0,a=a+Math.imul(U,J)|0,n=n+Math.imul(T,Z)|0,o=(o=o+Math.imul(T,ee)|0)+Math.imul(I,Z)|0,a=a+Math.imul(I,ee)|0,n=n+Math.imul(R,re)|0,o=(o=o+Math.imul(R,ne)|0)+Math.imul(C,re)|0,a=a+Math.imul(C,ne)|0,n=n+Math.imul(k,ae)|0,o=(o=o+Math.imul(k,ie)|0)+Math.imul(A,ae)|0,a=a+Math.imul(A,ie)|0,n=n+Math.imul(_,ue)|0,o=(o=o+Math.imul(_,ce)|0)+Math.imul(S,ue)|0,a=a+Math.imul(S,ce)|0,n=n+Math.imul(w,fe)|0,o=(o=o+Math.imul(w,de)|0)+Math.imul($,fe)|0,a=a+Math.imul($,de)|0;var Ae=(c+(n=n+Math.imul(g,he)|0)|0)+((8191&(o=(o=o+Math.imul(g,me)|0)+Math.imul(b,he)|0))<<13)|0;c=((a=a+Math.imul(b,me)|0)+(o>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(F,Y),o=(o=Math.imul(F,J))+Math.imul(B,Y)|0,a=Math.imul(B,J),n=n+Math.imul(O,Z)|0,o=(o=o+Math.imul(O,ee)|0)+Math.imul(U,Z)|0,a=a+Math.imul(U,ee)|0,n=n+Math.imul(T,re)|0,o=(o=o+Math.imul(T,ne)|0)+Math.imul(I,re)|0,a=a+Math.imul(I,ne)|0,n=n+Math.imul(R,ae)|0,o=(o=o+Math.imul(R,ie)|0)+Math.imul(C,ae)|0,a=a+Math.imul(C,ie)|0,n=n+Math.imul(k,ue)|0,o=(o=o+Math.imul(k,ce)|0)+Math.imul(A,ue)|0,a=a+Math.imul(A,ce)|0,n=n+Math.imul(_,fe)|0,o=(o=o+Math.imul(_,de)|0)+Math.imul(S,fe)|0,a=a+Math.imul(S,de)|0;var Me=(c+(n=n+Math.imul(w,he)|0)|0)+((8191&(o=(o=o+Math.imul(w,me)|0)+Math.imul($,he)|0))<<13)|0;c=((a=a+Math.imul($,me)|0)+(o>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(F,Z),o=(o=Math.imul(F,ee))+Math.imul(B,Z)|0,a=Math.imul(B,ee),n=n+Math.imul(O,re)|0,o=(o=o+Math.imul(O,ne)|0)+Math.imul(U,re)|0,a=a+Math.imul(U,ne)|0,n=n+Math.imul(T,ae)|0,o=(o=o+Math.imul(T,ie)|0)+Math.imul(I,ae)|0,a=a+Math.imul(I,ie)|0,n=n+Math.imul(R,ue)|0,o=(o=o+Math.imul(R,ce)|0)+Math.imul(C,ue)|0,a=a+Math.imul(C,ce)|0,n=n+Math.imul(k,fe)|0,o=(o=o+Math.imul(k,de)|0)+Math.imul(A,fe)|0,a=a+Math.imul(A,de)|0;var Re=(c+(n=n+Math.imul(_,he)|0)|0)+((8191&(o=(o=o+Math.imul(_,me)|0)+Math.imul(S,he)|0))<<13)|0;c=((a=a+Math.imul(S,me)|0)+(o>>>13)|0)+(Re>>>26)|0,Re&=67108863,n=Math.imul(F,re),o=(o=Math.imul(F,ne))+Math.imul(B,re)|0,a=Math.imul(B,ne),n=n+Math.imul(O,ae)|0,o=(o=o+Math.imul(O,ie)|0)+Math.imul(U,ae)|0,a=a+Math.imul(U,ie)|0,n=n+Math.imul(T,ue)|0,o=(o=o+Math.imul(T,ce)|0)+Math.imul(I,ue)|0,a=a+Math.imul(I,ce)|0,n=n+Math.imul(R,fe)|0,o=(o=o+Math.imul(R,de)|0)+Math.imul(C,fe)|0,a=a+Math.imul(C,de)|0;var Ce=(c+(n=n+Math.imul(k,he)|0)|0)+((8191&(o=(o=o+Math.imul(k,me)|0)+Math.imul(A,he)|0))<<13)|0;c=((a=a+Math.imul(A,me)|0)+(o>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,n=Math.imul(F,ae),o=(o=Math.imul(F,ie))+Math.imul(B,ae)|0,a=Math.imul(B,ie),n=n+Math.imul(O,ue)|0,o=(o=o+Math.imul(O,ce)|0)+Math.imul(U,ue)|0,a=a+Math.imul(U,ce)|0,n=n+Math.imul(T,fe)|0,o=(o=o+Math.imul(T,de)|0)+Math.imul(I,fe)|0,a=a+Math.imul(I,de)|0;var Pe=(c+(n=n+Math.imul(R,he)|0)|0)+((8191&(o=(o=o+Math.imul(R,me)|0)+Math.imul(C,he)|0))<<13)|0;c=((a=a+Math.imul(C,me)|0)+(o>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,n=Math.imul(F,ue),o=(o=Math.imul(F,ce))+Math.imul(B,ue)|0,a=Math.imul(B,ce),n=n+Math.imul(O,fe)|0,o=(o=o+Math.imul(O,de)|0)+Math.imul(U,fe)|0,a=a+Math.imul(U,de)|0;var Te=(c+(n=n+Math.imul(T,he)|0)|0)+((8191&(o=(o=o+Math.imul(T,me)|0)+Math.imul(I,he)|0))<<13)|0;c=((a=a+Math.imul(I,me)|0)+(o>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(F,fe),o=(o=Math.imul(F,de))+Math.imul(B,fe)|0,a=Math.imul(B,de);var Ie=(c+(n=n+Math.imul(O,he)|0)|0)+((8191&(o=(o=o+Math.imul(O,me)|0)+Math.imul(U,he)|0))<<13)|0;c=((a=a+Math.imul(U,me)|0)+(o>>>13)|0)+(Ie>>>26)|0,Ie&=67108863;var Ne=(c+(n=Math.imul(F,he))|0)+((8191&(o=(o=Math.imul(F,me))+Math.imul(B,he)|0))<<13)|0;return c=((a=Math.imul(B,me))+(o>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,u[0]=ye,u[1]=ge,u[2]=be,u[3]=ve,u[4]=we,u[5]=$e,u[6]=xe,u[7]=_e,u[8]=Se,u[9]=Ee,u[10]=ke,u[11]=Ae,u[12]=Me,u[13]=Re,u[14]=Ce,u[15]=Pe,u[16]=Te,u[17]=Ie,u[18]=Ne,0!==c&&(u[19]=c,r.length++),r};function y(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var n=0,o=0,a=0;a<r.length-1;a++){var i=o;o=0;for(var s=67108863&n,u=Math.min(a,t.length-1),c=Math.max(0,a-e.length+1);c<=u;c++){var l=a-c,f=(0|e.words[l])*(0|t.words[c]),d=67108863&f;s=67108863&(d=d+s|0),o+=(i=(i=i+(f/67108864|0)|0)+(d>>>26)|0)>>>26,i&=67108863}r.words[a]=s,n=i,i=o}return 0!==n?r.words[a]=n:r.length--,r._strip()}function g(e,t,r){return y(e,t,r)}function b(e,t){this.x=e,this.y=t}Math.imul||(m=h),o.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?m(this,e,t):r<63?h(this,e,t):r<1024?y(this,e,t):g(this,e,t)},b.prototype.makeRBT=function(e){for(var t=new Array(e),r=o.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,r,e);return t},b.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var n=0,o=0;o<t;o++)n|=(1&e)<<t-o-1,e>>=1;return n},b.prototype.permute=function(e,t,r,n,o,a){for(var i=0;i<a;i++)n[i]=t[e[i]],o[i]=r[e[i]]},b.prototype.transform=function(e,t,r,n,o,a){this.permute(a,e,t,r,n,o);for(var i=1;i<o;i<<=1)for(var s=i<<1,u=Math.cos(2*Math.PI/s),c=Math.sin(2*Math.PI/s),l=0;l<o;l+=s)for(var f=u,d=c,p=0;p<i;p++){var h=r[l+p],m=n[l+p],y=r[l+p+i],g=n[l+p+i],b=f*y-d*g;g=f*g+d*y,y=b,r[l+p]=h+y,n[l+p]=m+g,r[l+p+i]=h-y,n[l+p+i]=m-g,p!==s&&(b=u*f-c*d,d=u*d+c*f,f=b)}},b.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),n=1&r,o=0;for(r=r/2|0;r;r>>>=1)o++;return 1<<o+1+n},b.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var n=0;n<r/2;n++){var o=e[n];e[n]=e[r-n-1],e[r-n-1]=o,o=t[n],t[n]=-t[r-n-1],t[r-n-1]=-o}},b.prototype.normalize13b=function(e,t){for(var r=0,n=0;n<t/2;n++){var o=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+r;e[n]=67108863&o,r=o<67108864?0:o/67108864|0}return e},b.prototype.convert13b=function(e,t,n,o){for(var a=0,i=0;i<t;i++)a+=0|e[i],n[2*i]=8191&a,a>>>=13,n[2*i+1]=8191&a,a>>>=13;for(i=2*t;i<o;++i)n[i]=0;r(0===a),r(0==(-8192&a))},b.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},b.prototype.mulp=function(e,t,r){var n=2*this.guessLen13b(e.length,t.length),o=this.makeRBT(n),a=this.stub(n),i=new Array(n),s=new Array(n),u=new Array(n),c=new Array(n),l=new Array(n),f=new Array(n),d=r.words;d.length=n,this.convert13b(e.words,e.length,i,n),this.convert13b(t.words,t.length,c,n),this.transform(i,a,s,u,n,o),this.transform(c,a,l,f,n,o);for(var p=0;p<n;p++){var h=s[p]*l[p]-u[p]*f[p];u[p]=s[p]*f[p]+u[p]*l[p],s[p]=h}return this.conjugate(s,u,n),this.transform(s,u,d,a,n,o),this.conjugate(d,a,n),this.normalize13b(d,n),r.negative=e.negative^t.negative,r.length=e.length+t.length,r._strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),g(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){var t=e<0;t&&(e=-e),r("number"==typeof e),r(e<67108864);for(var n=0,o=0;o<this.length;o++){var a=(0|this.words[o])*e,i=(67108863&a)+(67108863&n);n>>=26,n+=a/67108864|0,n+=i>>>26,this.words[o]=67108863&i}return 0!==n&&(this.words[o]=n,this.length++),t?this.ineg():this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var n=r/26|0,o=r%26;t[r]=e.words[n]>>>o&1}return t}(e);if(0===t.length)return new o(1);for(var r=this,n=0;n<t.length&&0===t[n];n++,r=r.sqr());if(++n<t.length)for(var a=r.sqr();n<t.length;n++,a=a.sqr())0!==t[n]&&(r=r.mul(a));return r},o.prototype.iushln=function(e){r("number"==typeof e&&e>=0);var t,n=e%26,o=(e-n)/26,a=67108863>>>26-n<<26-n;if(0!==n){var i=0;for(t=0;t<this.length;t++){var s=this.words[t]&a,u=(0|this.words[t])-s<<n;this.words[t]=u|i,i=s>>>26-n}i&&(this.words[t]=i,this.length++)}if(0!==o){for(t=this.length-1;t>=0;t--)this.words[t+o]=this.words[t];for(t=0;t<o;t++)this.words[t]=0;this.length+=o}return this._strip()},o.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,n){var o;r("number"==typeof e&&e>=0),o=t?(t-t%26)/26:0;var a=e%26,i=Math.min((e-a)/26,this.length),s=67108863^67108863>>>a<<a,u=n;if(o-=i,o=Math.max(0,o),u){for(var c=0;c<i;c++)u.words[c]=this.words[c];u.length=i}if(0===i);else if(this.length>i)for(this.length-=i,c=0;c<this.length;c++)this.words[c]=this.words[c+i];else this.words[0]=0,this.length=1;var l=0;for(c=this.length-1;c>=0&&(0!==l||c>=o);c--){var f=0|this.words[c];this.words[c]=l<<26-a|f>>>a,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(e,t,n){return r(0===this.negative),this.iushrn(e,t,n)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26,o=1<<t;return!(this.length<=n)&&!!(this.words[n]&o)},o.prototype.imaskn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==t&&n++,this.length=Math.min(n,this.length),0!==t){var o=67108863^67108863>>>t<<t;this.words[this.length-1]&=o}return this._strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return r("number"==typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(r("number"==typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,n){var o,a,i=e.length+n;this._expand(i);var s=0;for(o=0;o<e.length;o++){a=(0|this.words[o+n])+s;var u=(0|e.words[o])*t;s=((a-=67108863&u)>>26)-(u/67108864|0),this.words[o+n]=67108863&a}for(;o<this.length-n;o++)s=(a=(0|this.words[o+n])+s)>>26,this.words[o+n]=67108863&a;if(0===s)return this._strip();for(r(-1===s),s=0,o=0;o<this.length;o++)s=(a=-(0|this.words[o])+s)>>26,this.words[o]=67108863&a;return this.negative=1,this._strip()},o.prototype._wordDiv=function(e,t){var r=(this.length,e.length),n=this.clone(),a=e,i=0|a.words[a.length-1];0!==(r=26-this._countBits(i))&&(a=a.ushln(r),n.iushln(r),i=0|a.words[a.length-1]);var s,u=n.length-a.length;if("mod"!==t){(s=new o(null)).length=u+1,s.words=new Array(s.length);for(var c=0;c<s.length;c++)s.words[c]=0}var l=n.clone()._ishlnsubmul(a,1,u);0===l.negative&&(n=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var d=67108864*(0|n.words[a.length+f])+(0|n.words[a.length+f-1]);for(d=Math.min(d/i|0,67108863),n._ishlnsubmul(a,d,f);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(a,1,f),n.isZero()||(n.negative^=1);s&&(s.words[f]=d)}return s&&s._strip(),n._strip(),"div"!==t&&0!==r&&n.iushrn(r),{div:s||null,mod:n}},o.prototype.divmod=function(e,t,n){return r(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(s=this.neg().divmod(e,t),"mod"!==t&&(a=s.div.neg()),"div"!==t&&(i=s.mod.neg(),n&&0!==i.negative&&i.iadd(e)),{div:a,mod:i}):0===this.negative&&0!==e.negative?(s=this.divmod(e.neg(),t),"mod"!==t&&(a=s.div.neg()),{div:a,mod:s.mod}):0!=(this.negative&e.negative)?(s=this.neg().divmod(e.neg(),t),"div"!==t&&(i=s.mod.neg(),n&&0!==i.negative&&i.isub(e)),{div:s.div,mod:i}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modrn(e.words[0]))}:this._wordDiv(e,t);var a,i,s},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),o=e.andln(1),a=r.cmp(n);return a<0||1===o&&0===a?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modrn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=67108864%e,o=0,a=this.length-1;a>=0;a--)o=(n*o+(0|this.words[a]))%e;return t?-o:o},o.prototype.modn=function(e){return this.modrn(e)},o.prototype.idivn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=0,o=this.length-1;o>=0;o--){var a=(0|this.words[o])+67108864*n;this.words[o]=a/e|0,n=a%e}return this._strip(),t?this.ineg():this},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var a=new o(1),i=new o(0),s=new o(0),u=new o(1),c=0;t.isEven()&&n.isEven();)t.iushrn(1),n.iushrn(1),++c;for(var l=n.clone(),f=t.clone();!t.isZero();){for(var d=0,p=1;0==(t.words[0]&p)&&d<26;++d,p<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(a.isOdd()||i.isOdd())&&(a.iadd(l),i.isub(f)),a.iushrn(1),i.iushrn(1);for(var h=0,m=1;0==(n.words[0]&m)&&h<26;++h,m<<=1);if(h>0)for(n.iushrn(h);h-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);t.cmp(n)>=0?(t.isub(n),a.isub(s),i.isub(u)):(n.isub(t),s.isub(a),u.isub(i))}return{a:s,b:u,gcd:n.iushln(c)}},o.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var a,i=new o(1),s=new o(0),u=n.clone();t.cmpn(1)>0&&n.cmpn(1)>0;){for(var c=0,l=1;0==(t.words[0]&l)&&c<26;++c,l<<=1);if(c>0)for(t.iushrn(c);c-- >0;)i.isOdd()&&i.iadd(u),i.iushrn(1);for(var f=0,d=1;0==(n.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(n.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);t.cmp(n)>=0?(t.isub(n),i.isub(s)):(n.isub(t),s.isub(i))}return(a=0===t.cmpn(1)?i:s).cmpn(0)<0&&a.iadd(e),a},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var n=0;t.isEven()&&r.isEven();n++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var o=t.cmp(r);if(o<0){var a=t;t=r,r=a}else if(0===o||0===r.cmpn(1))break;t.isub(r)}return r.iushln(n)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){r("number"==typeof e);var t=e%26,n=(e-t)/26,o=1<<t;if(this.length<=n)return this._expand(n+1),this.words[n]|=o,this;for(var a=o,i=n;0!==a&&i<this.length;i++){var s=0|this.words[i];a=(s+=a)>>>26,s&=67108863,this.words[i]=s}return 0!==a&&(this.words[i]=a,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,n=e<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this._strip(),this.length>1)t=1;else{n&&(e=-e),r(e<=67108863,"Number is too big");var o=0|this.words[0];t=o===e?0:o<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],o=0|e.words[r];if(n!==o){n<o?t=-1:n>o&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new E(e)},o.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var v={k256:null,p224:null,p192:null,p25519:null};function w(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function $(){w.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function x(){w.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function _(){w.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){w.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function E(e){if("string"==typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function k(e){E.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}w.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},w.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},w.prototype.split=function(e,t){e.iushrn(this.n,0,t)},w.prototype.imulK=function(e){return e.imul(this.k)},n($,w),$.prototype.split=function(e,t){for(var r=4194303,n=Math.min(e.length,9),o=0;o<n;o++)t.words[o]=e.words[o];if(t.length=n,e.length<=9)return e.words[0]=0,void(e.length=1);var a=e.words[9];for(t.words[t.length++]=a&r,o=10;o<e.length;o++){var i=0|e.words[o];e.words[o-10]=(i&r)<<4|a>>>22,a=i}a>>>=22,e.words[o-10]=a,0===a&&e.length>10?e.length-=10:e.length-=9},$.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var n=0|e.words[r];t+=977*n,e.words[r]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},n(x,w),n(_,w),n(S,w),S.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var n=19*(0|e.words[r])+t,o=67108863&n;n>>>=26,e.words[r]=o,t=n}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(v[e])return v[e];var t;if("k256"===e)t=new $;else if("p224"===e)t=new x;else if("p192"===e)t=new _;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new S}return v[e]=t,t},E.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},E.prototype._verify2=function(e,t){r(0==(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},E.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(c(e,e.umod(this.m)._forceRed(this)),e)},E.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},E.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},E.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},E.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},E.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},E.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},E.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},E.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},E.prototype.isqr=function(e){return this.imul(e,e.clone())},E.prototype.sqr=function(e){return this.mul(e,e)},E.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2==1),3===t){var n=this.m.add(new o(1)).iushrn(2);return this.pow(e,n)}for(var a=this.m.subn(1),i=0;!a.isZero()&&0===a.andln(1);)i++,a.iushrn(1);r(!a.isZero());var s=new o(1).toRed(this),u=s.redNeg(),c=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,c).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,a),d=this.pow(e,a.addn(1).iushrn(1)),p=this.pow(e,a),h=i;0!==p.cmp(s);){for(var m=p,y=0;0!==m.cmp(s);y++)m=m.redSqr();r(y<h);var g=this.pow(f,new o(1).iushln(h-y-1));d=d.redMul(g),f=g.redSqr(),p=p.redMul(f),h=y}return d},E.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},E.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new o(1).toRed(this),r[1]=e;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],e);var a=r[0],i=0,s=0,u=t.bitLength()%26;for(0===u&&(u=26),n=t.length-1;n>=0;n--){for(var c=t.words[n],l=u-1;l>=0;l--){var f=c>>l&1;a!==r[0]&&(a=this.sqr(a)),0!==f||0!==i?(i<<=1,i|=f,(4===++s||0===n&&0===l)&&(a=this.mul(a,r[i]),s=0,i=0)):s=0}u=26}return a},E.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},E.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new k(e)},n(k,E),k.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},k.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},k.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),o=r.isub(n).iushrn(this.shift),a=o;return o.cmp(this.m)>=0?a=o.isub(this.m):o.cmpn(0)<0&&(a=o.iadd(this.m)),a._forceRed(this)},k.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var r=e.mul(t),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),a=r.isub(n).iushrn(this.shift),i=a;return a.cmp(this.m)>=0?i=a.isub(this.m):a.cmpn(0)<0&&(i=a.iadd(this.m)),i._forceRed(this)},k.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e,this)})),parcelRequire.register("7LTy6",(function(e,t){var r=parcelRequire("ik96u");e.exports=r("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")})),parcelRequire.register("ik96u",(function(e,t){var r=parcelRequire("838j1").Buffer;e.exports=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<e.length;o++){var a=e.charAt(o),i=a.charCodeAt(0);if(255!==t[i])throw new TypeError(a+" is ambiguous");t[i]=o}var s=e.length,u=e.charAt(0),c=Math.log(s)/Math.log(256),l=Math.log(256)/Math.log(s);function f(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return r.alloc(0);for(var n=0,o=0,a=0;e[n]===u;)o++,n++;for(var i=(e.length-n)*c+1>>>0,l=new Uint8Array(i);e[n];){var f=t[e.charCodeAt(n)];if(255===f)return;for(var d=0,p=i-1;(0!==f||d<a)&&-1!==p;p--,d++)f+=s*l[p]>>>0,l[p]=f%256>>>0,f=f/256>>>0;if(0!==f)throw new Error("Non-zero carry");a=d,n++}for(var h=i-a;h!==i&&0===l[h];)h++;var m=r.allocUnsafe(o+(i-h));m.fill(0,0,o);for(var y=o;h!==i;)m[y++]=l[h++];return m}return{encode:function(t){if((Array.isArray(t)||t instanceof Uint8Array)&&(t=r.from(t)),!r.isBuffer(t))throw new TypeError("Expected Buffer");if(0===t.length)return"";for(var n=0,o=0,a=0,i=t.length;a!==i&&0===t[a];)a++,n++;for(var c=(i-a)*l+1>>>0,f=new Uint8Array(c);a!==i;){for(var d=t[a],p=0,h=c-1;(0!==d||p<o)&&-1!==h;h--,p++)d+=256*f[h]>>>0,f[h]=d%s>>>0,d=d/s>>>0;if(0!==d)throw new Error("Non-zero carry");o=p,a++}for(var m=c-o;m!==c&&0===f[m];)m++;for(var y=u.repeat(n);m<c;++m)y+=e.charAt(f[m]);return y},decodeUnsafe:f,decode:function(e){var t=f(e);if(t)return t;throw new Error("Non-base"+s+" character")}}}})),parcelRequire.register("838j1",(function(e,t){var r=parcelRequire("6i6c3"),n=r.Buffer;function o(e,t){for(var r in e)t[r]=e[r]}function a(e,t,r){return n(e,t,r)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?e.exports=r:(o(r,e.exports),e.exports.Buffer=a),o(n,a),a.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return n(e,t,r)},a.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var o=n(e);return void 0!==t?"string"==typeof r?o.fill(t,r):o.fill(t):o.fill(0),o},a.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return n(e)},a.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}})),parcelRequire.register("7bUqw",(function(e,t){var r,n;function o(e,t,r){return t<=e&&e<=r}function a(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}$parcel$export(e.exports,"TextEncoder",(function(){return r}),(function(e){return r=e})),$parcel$export(e.exports,"TextDecoder",(function(){return n}),(function(e){return n=e}));function i(e){this.tokens=[].slice.call(e)}i.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():-1},prepend:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.unshift(t.pop());else this.tokens.unshift(e)},push:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.push(t.shift());else this.tokens.push(e)}};var s=-1;function u(e,t){if(e)throw TypeError("Decoder error");return t||65533}var c="utf-8";function l(e,t){if(!(this instanceof l))return new l(e,t);if((e=void 0!==e?String(e).toLowerCase():c)!==c)throw new Error("Encoding not supported. Only utf-8 is supported");t=a(t),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=Boolean(t.fatal),this._ignoreBOM=Boolean(t.ignoreBOM),Object.defineProperty(this,"encoding",{value:"utf-8"}),Object.defineProperty(this,"fatal",{value:this._fatal}),Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}function f(e,t){if(!(this instanceof f))return new f(e,t);if((e=void 0!==e?String(e).toLowerCase():c)!==c)throw new Error("Encoding not supported. Only utf-8 is supported");t=a(t),this._streaming=!1,this._encoder=null,this._options={fatal:Boolean(t.fatal)},Object.defineProperty(this,"encoding",{value:"utf-8"})}function d(e){var t=e.fatal,r=0,n=0,a=0,i=128,c=191;this.handler=function(e,l){if(-1===l&&0!==a)return a=0,u(t);if(-1===l)return s;if(0===a){if(o(l,0,127))return l;if(o(l,194,223))a=1,r=l-192;else if(o(l,224,239))224===l&&(i=160),237===l&&(c=159),a=2,r=l-224;else{if(!o(l,240,244))return u(t);240===l&&(i=144),244===l&&(c=143),a=3,r=l-240}return r<<=6*a,null}if(!o(l,i,c))return r=a=n=0,i=128,c=191,e.prepend(l),u(t);if(i=128,c=191,r+=l-128<<6*(a-(n+=1)),n!==a)return null;var f=r;return r=a=n=0,f}}function p(e){e.fatal;this.handler=function(e,t){if(-1===t)return s;if(o(t,0,127))return t;var r,n;o(t,128,2047)?(r=1,n=192):o(t,2048,65535)?(r=2,n=224):o(t,65536,1114111)&&(r=3,n=240);for(var a=[(t>>6*r)+n];r>0;){var i=t>>6*(r-1);a.push(128|63&i),r-=1}return a}}l.prototype={decode:function(e,t){var r;r="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=a(t),this._streaming||(this._decoder=new d({fatal:this._fatal}),this._BOMseen=!1),this._streaming=Boolean(t.stream);for(var n,o=new i(r),u=[];!o.endOfStream()&&(n=this._decoder.handler(o,o.read()))!==s;)null!==n&&(Array.isArray(n)?u.push.apply(u,n):u.push(n));if(!this._streaming){do{if((n=this._decoder.handler(o,o.read()))===s)break;null!==n&&(Array.isArray(n)?u.push.apply(u,n):u.push(n))}while(!o.endOfStream());this._decoder=null}return u.length&&(-1===["utf-8"].indexOf(this.encoding)||this._ignoreBOM||this._BOMseen||(65279===u[0]?(this._BOMseen=!0,u.shift()):this._BOMseen=!0)),function(e){for(var t="",r=0;r<e.length;++r){var n=e[r];n<=65535?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode(55296+(n>>10),56320+(1023&n)))}return t}(u)}},f.prototype={encode:function(e,t){e=e?String(e):"",t=a(t),this._streaming||(this._encoder=new p(this._options)),this._streaming=Boolean(t.stream);for(var r,n=[],o=new i(function(e){for(var t=String(e),r=t.length,n=0,o=[];n<r;){var a=t.charCodeAt(n);if(a<55296||a>57343)o.push(a);else if(56320<=a&&a<=57343)o.push(65533);else if(55296<=a&&a<=56319)if(n===r-1)o.push(65533);else{var i=e.charCodeAt(n+1);if(56320<=i&&i<=57343){var s=1023&a,u=1023&i;o.push(65536+(s<<10)+u),n+=1}else o.push(65533)}n+=1}return o}(e));!o.endOfStream()&&(r=this._encoder.handler(o,o.read()))!==s;)Array.isArray(r)?n.push.apply(n,r):n.push(r);if(!this._streaming){for(;(r=this._encoder.handler(o,o.read()))!==s;)Array.isArray(r)?n.push.apply(n,r):n.push(r);this._encoder=null}return new Uint8Array(n)}},r=f,n=l})),parcelRequire.register("iSdxe",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Assignable=e.exports.Enum=void 0;e.exports.Enum=class{constructor(e){if(1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((t=>{this[t]=e[t],this.enum=t}))}};e.exports.Assignable=class{constructor(e){Object.keys(e).map((t=>{this[t]=e[t]}))}}})),parcelRequire.register("lJfNi",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.BrowserLocalStorageKeyStore=void 0;var r=parcelRequire("lDg8Y"),n=parcelRequire("h9FZF");class o extends r.KeyStore{async setKey(e,t,r){this.localStorage.setItem(this.storageKeyForSecretKey(e,t),r.toString())}async getKey(e,t){const r=this.localStorage.getItem(this.storageKeyForSecretKey(e,t));return r?n.KeyPair.fromString(r):null}async removeKey(e,t){this.localStorage.removeItem(this.storageKeyForSecretKey(e,t))}async clear(){for(const e of this.storageKeys())e.startsWith(this.prefix)&&this.localStorage.removeItem(e)}async getNetworks(){const e=new Set;for(const t of this.storageKeys())if(t.startsWith(this.prefix)){const r=t.substring(this.prefix.length).split(":");e.add(r[1])}return Array.from(e.values())}async getAccounts(e){const t=new Array;for(const r of this.storageKeys())if(r.startsWith(this.prefix)){const n=r.substring(this.prefix.length).split(":");n[1]===e&&t.push(n[0])}return t}storageKeyForSecretKey(e,t){return`${this.prefix}${t}:${e}`}*storageKeys(){for(let e=0;e<this.localStorage.length;e++)yield this.localStorage.key(e)}constructor(e=window.localStorage,t="near-api-js:keystore:"){super(),this.localStorage=e,this.prefix=t}}e.exports.BrowserLocalStorageKeyStore=o})),parcelRequire.register("4T7XU",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.MergeKeyStore=void 0;var r=parcelRequire("lDg8Y");class n extends r.KeyStore{async setKey(e,t,r){await this.keyStores[this.options.writeKeyStoreIndex].setKey(e,t,r)}async getKey(e,t){for(const r of this.keyStores){const n=await r.getKey(e,t);if(n)return n}return null}async removeKey(e,t){for(const r of this.keyStores)await r.removeKey(e,t)}async clear(){for(const e of this.keyStores)await e.clear()}async getNetworks(){const e=new Set;for(const t of this.keyStores)for(const r of await t.getNetworks())e.add(r);return Array.from(e)}async getAccounts(e){const t=new Set;for(const r of this.keyStores)for(const n of await r.getAccounts(e))t.add(n);return Array.from(t)}toString(){return`MergeKeyStore(${this.keyStores.join(", ")})`}constructor(e,t={writeKeyStoreIndex:0}){super(),this.options=t,this.keyStores=e}}e.exports.MergeKeyStore=n})),parcelRequire.register("1OCaU",(function(e,t){var r=e.exports&&e.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=e.exports&&e.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=e.exports&&e.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.hasOwnProperty.call(e,o)&&r(t,e,o);return n(t,e),t};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.WalletConnection=e.exports.WalletAccount=e.exports.ConnectedWalletAccount=e.exports.Near=e.exports.KeyPair=e.exports.Signer=e.exports.InMemorySigner=e.exports.Contract=e.exports.Connection=e.exports.Account=e.exports.multisig=e.exports.validators=e.exports.transactions=e.exports.utils=e.exports.providers=e.exports.accountCreator=void 0;const a=o(parcelRequire("8wUQ8"));e.exports.providers=a;const i=o(parcelRequire("2FeSb"));e.exports.utils=i;const s=o(parcelRequire("iRwne"));e.exports.transactions=s;const u=o(parcelRequire("fKh1r"));e.exports.validators=u;var c=parcelRequire("3BYEc");Object.defineProperty(e.exports,"Account",{enumerable:!0,get:function(){return c.Account}});const l=o(parcelRequire("2T2Ub"));e.exports.multisig=l;const f=o(parcelRequire("egBB3"));e.exports.accountCreator=f;var d=parcelRequire("eXozz");Object.defineProperty(e.exports,"Connection",{enumerable:!0,get:function(){return d.Connection}});var p=parcelRequire("h9UaC");Object.defineProperty(e.exports,"Signer",{enumerable:!0,get:function(){return p.Signer}}),Object.defineProperty(e.exports,"InMemorySigner",{enumerable:!0,get:function(){return p.InMemorySigner}});var h=parcelRequire("2etLB");Object.defineProperty(e.exports,"Contract",{enumerable:!0,get:function(){return h.Contract}});var m=parcelRequire("h9FZF");Object.defineProperty(e.exports,"KeyPair",{enumerable:!0,get:function(){return m.KeyPair}});var y=parcelRequire("jbGiX");Object.defineProperty(e.exports,"Near",{enumerable:!0,get:function(){return y.Near}});var g=parcelRequire("afz2B");Object.defineProperty(e.exports,"ConnectedWalletAccount",{enumerable:!0,get:function(){return g.ConnectedWalletAccount}}),Object.defineProperty(e.exports,"WalletAccount",{enumerable:!0,get:function(){return g.WalletAccount}}),Object.defineProperty(e.exports,"WalletConnection",{enumerable:!0,get:function(){return g.WalletConnection}})})),parcelRequire.register("8wUQ8",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.ErrorContext=e.exports.TypedError=e.exports.getTransactionLastResult=e.exports.FinalExecutionStatusBasic=e.exports.JsonRpcProvider=e.exports.Provider=void 0;var r=parcelRequire("4QBox");Object.defineProperty(e.exports,"Provider",{enumerable:!0,get:function(){return r.Provider}}),Object.defineProperty(e.exports,"getTransactionLastResult",{enumerable:!0,get:function(){return r.getTransactionLastResult}}),Object.defineProperty(e.exports,"FinalExecutionStatusBasic",{enumerable:!0,get:function(){return r.FinalExecutionStatusBasic}});var n=parcelRequire("vlTZv");Object.defineProperty(e.exports,"JsonRpcProvider",{enumerable:!0,get:function(){return n.JsonRpcProvider}}),Object.defineProperty(e.exports,"TypedError",{enumerable:!0,get:function(){return n.TypedError}}),Object.defineProperty(e.exports,"ErrorContext",{enumerable:!0,get:function(){return n.ErrorContext}})})),parcelRequire.register("4QBox",(function(e,t){var r,n,o,a=parcelRequire("6i6c3").Buffer;Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.getTransactionLastResult=e.exports.Provider=e.exports.IdType=e.exports.FinalExecutionStatusBasic=e.exports.ExecutionStatusBasic=void 0,(r=e.exports.ExecutionStatusBasic||(e.exports.ExecutionStatusBasic={})).Unknown="Unknown",r.Pending="Pending",r.Failure="Failure",(n=e.exports.FinalExecutionStatusBasic||(e.exports.FinalExecutionStatusBasic={})).NotStarted="NotStarted",n.Started="Started",n.Failure="Failure",(o=e.exports.IdType||(e.exports.IdType={})).Transaction="transaction",o.Receipt="receipt";e.exports.Provider=class{},e.exports.getTransactionLastResult=function(e){if("object"==typeof e.status&&"string"==typeof e.status.SuccessValue){const t=a.from(e.status.SuccessValue,"base64").toString();try{return JSON.parse(t)}catch(e){return t}}return null}})),parcelRequire.register("vlTZv",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.JsonRpcProvider=e.exports.ErrorContext=e.exports.TypedError=void 0;const o=n(parcelRequire("9P71R"));var a=parcelRequire("4QBox"),i=parcelRequire("kQCkE"),s=parcelRequire("15muY");Object.defineProperty(e.exports,"TypedError",{enumerable:!0,get:function(){return s.TypedError}}),Object.defineProperty(e.exports,"ErrorContext",{enumerable:!0,get:function(){return s.ErrorContext}});var u=parcelRequire("fXZ66");const c=n(parcelRequire("fzOUs"));var l=parcelRequire("aOz3M");let f=123;class d extends a.Provider{async status(){return this.sendJsonRpc("status",[])}async sendTransaction(e){const t=e.encode();return this.sendJsonRpc("broadcast_tx_commit",[r.from(t).toString("base64")])}async sendTransactionAsync(e){const t=e.encode();return this.sendJsonRpc("broadcast_tx_async",[r.from(t).toString("base64")])}async txStatus(e,t){return"string"==typeof e?this.txStatusString(e,t):this.txStatusUint8Array(e,t)}async txStatusUint8Array(e,t){return this.sendJsonRpc("tx",[u.baseEncode(e),t])}async txStatusString(e,t){return this.sendJsonRpc("tx",[e,t])}async txStatusReceipts(e,t){return this.sendJsonRpc("EXPERIMENTAL_tx_status",[u.baseEncode(e),t])}async query(...e){let t;if(1===e.length)t=await this.sendJsonRpc("query",e[0]);else{const[r,n]=e;t=await this.sendJsonRpc("query",[r,n])}if(t&&t.error)throw new s.TypedError(`Querying ${e} failed: ${t.error}.\n${JSON.stringify(t,null,2)}`,l.getErrorTypeFromErrorMessage(t.error));return t}async block(e){const{finality:t}=e;let{blockId:r}=e;if("object"!=typeof e){o.default("JsonRpcProvider.block(blockId)")("use `block({ blockId })` or `block({ finality })` instead"),r=e}return this.sendJsonRpc("block",{block_id:r,finality:t})}async blockChanges(e){const{finality:t}=e,{blockId:r}=e;return this.sendJsonRpc("EXPERIMENTAL_changes_in_block",{block_id:r,finality:t})}async chunk(e){return this.sendJsonRpc("chunk",[e])}async validators(e){return this.sendJsonRpc("validators",[e])}async experimental_genesisConfig(){return o.default("JsonRpcProvider.experimental_protocolConfig()")("use `experimental_protocolConfig({ sync_checkpoint: 'genesis' })` to fetch the up-to-date or genesis protocol config explicitly"),await this.sendJsonRpc("EXPERIMENTAL_protocol_config",{sync_checkpoint:"genesis"})}async experimental_protocolConfig(e){return await this.sendJsonRpc("EXPERIMENTAL_protocol_config",e)}async experimental_lightClientProof(e){return o.default("JsonRpcProvider.experimental_lightClientProof(request)")("use `lightClientProof` instead"),await this.lightClientProof(e)}async lightClientProof(e){return await this.sendJsonRpc("EXPERIMENTAL_light_client_proof",e)}async accessKeyChanges(e,t){const{finality:r}=t,{blockId:n}=t;return this.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"all_access_key_changes",account_ids:e,block_id:n,finality:r})}async singleAccessKeyChanges(e,t){const{finality:r}=t,{blockId:n}=t;return this.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"single_access_key_changes",keys:e,block_id:n,finality:r})}async accountChanges(e,t){const{finality:r}=t,{blockId:n}=t;return this.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"account_changes",account_ids:e,block_id:n,finality:r})}async contractStateChanges(e,t,r=""){const{finality:n}=t,{blockId:o}=t;return this.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"data_changes",account_ids:e,key_prefix_base64:r,block_id:o,finality:n})}async contractCodeChanges(e,t){const{finality:r}=t,{blockId:n}=t;return this.sendJsonRpc("EXPERIMENTAL_changes",{changes_type:"contract_code_changes",account_ids:e,block_id:n,finality:r})}async gasPrice(e){return await this.sendJsonRpc("gas_price",[e])}async sendJsonRpc(e,t){const r=await c.default(500,12,1.5,(async()=>{try{const r={method:e,params:t,id:f++,jsonrpc:"2.0"},n=await i.fetchJson(this.connection,JSON.stringify(r));if(n.error){if("object"==typeof n.error.data){if("string"==typeof n.error.data.error_message&&"string"==typeof n.error.data.error_type)throw new s.TypedError(n.error.data.error_message,n.error.data.error_type);throw l.parseRpcError(n.error.data)}{const e=`[${n.error.code}] ${n.error.message}: ${n.error.data}`;if("Timeout"===n.error.data||e.includes("Timeout error")||e.includes("query has timed out"))throw new s.TypedError(e,"TimeoutError");throw new s.TypedError(e,l.getErrorTypeFromErrorMessage(n.error.data))}}return n}catch(r){if("TimeoutError"===r.type)return console.warn(`Retrying request to ${e} as it has timed out`,t),null;throw r}})),{result:n}=r;if(void 0===n)throw new s.TypedError(`Exceeded 12 attempts for request to ${e}.`,"RetriesExceeded");return n}constructor(e){if(super(),null!=e&&"object"==typeof e)this.connection=e;else{o.default("JsonRpcProvider(url?: string)")("use `JsonRpcProvider(connectionInfo: ConnectionInfo)` instead"),this.connection={url:e}}}}e.exports.JsonRpcProvider=d})),parcelRequire.register("9P71R",(function(e,t){function r(e,t){if("function"!=typeof e)throw new TypeError("argument fn must be a function");return e}function n(e,t,r){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var n=Object.getOwnPropertyDescriptor(e,t);if(!n)throw new TypeError("must call property on owner object");if(!n.configurable)throw new TypeError("property must be configurable")}e.exports=function(e){if(!e)throw new TypeError("argument namespace is required");function t(e){}return t._file=void 0,t._ignored=!0,t._namespace=e,t._traced=!1,t._warned=Object.create(null),t.function=r,t.property=n,t}})),parcelRequire.register("kQCkE",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.fetchJson=void 0;const n=r(parcelRequire("k7O5e")),o=r(parcelRequire("fzOUs"));var a=parcelRequire("8wUQ8"),i=parcelRequire("15muY");e.exports.fetchJson=async function(e,t){let r={url:null};"string"==typeof e?r.url=e:r=e;const s=await o.default(1e3,10,1.5,(async()=>{try{const e=await fetch(r.url,{method:t?"POST":"GET",body:t||void 0,headers:{...r.headers,"Content-Type":"application/json"}});if(!e.ok){if(503===e.status)return i.logWarning(`Retrying HTTP request for ${r.url} as it's not available now`),null;throw n.default(e.status,await e.text())}return e}catch(e){if(e.toString().includes("FetchError")||e.toString().includes("Failed to fetch"))return i.logWarning(`Retrying HTTP request for ${r.url} because of error: ${e}`),null;throw e}}));if(!s)throw new a.TypedError(`Exceeded 10 attempts for ${r.url}.`,"RetriesExceeded");return await s.json()}})),parcelRequire.register("k7O5e",(function(e,t){var r,n=parcelRequire("4WlpF")("http-errors"),o=parcelRequire("exWrh"),a=parcelRequire("244Ut"),i=parcelRequire("dhT4G"),s=parcelRequire("cQWi2");function u(e){return Number(String(e).charAt(0)+"00")}function c(e,t){var r=Object.getOwnPropertyDescriptor(e,"name");r&&r.configurable&&(r.value=t,Object.defineProperty(e,"name",r))}function l(e){return"Error"!==e.substr(-5)?e+"Error":e}e.exports=function e(){for(var t,r,o=500,i={},s=0;s<arguments.length;s++){var c=arguments[s];if(c instanceof Error)o=(t=c).status||t.statusCode||o;else switch(typeof c){case"string":r=c;break;case"number":o=c,0!==s&&n("non-first-argument status code; replace with createError("+c+", ...)");break;case"object":i=c}}"number"==typeof o&&(o<400||o>=600)&&n("non-error status code; use only 4xx or 5xx status codes");("number"!=typeof o||!a[o]&&(o<400||o>=600))&&(o=500);var l=e[o]||e[u(o)];t||(t=l?new l(r):new Error(r||a[o]),Error.captureStackTrace(t,e));l&&t instanceof l&&t.status===o||(t.expose=o<500,t.status=t.statusCode=o);for(var f in i)"status"!==f&&"statusCode"!==f&&(t[f]=i[f]);return t},e.exports.HttpError=function(){function e(){throw new TypeError("cannot construct abstract class")}return i(e,Error),e}(),e.exports.isHttpError=(r=e.exports.HttpError,function(e){return!(!e||"object"!=typeof e)&&(e instanceof r||e instanceof Error&&"boolean"==typeof e.expose&&"number"==typeof e.statusCode&&e.status===e.statusCode)}),function(e,t,r){t.forEach((function(t){var n,f=s(a[t]);switch(u(t)){case 400:n=function(e,t,r){var n=l(t);function s(e){var t=null!=e?e:a[r],i=new Error(t);return Error.captureStackTrace(i,s),o(i,s.prototype),Object.defineProperty(i,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(i,"name",{enumerable:!1,configurable:!0,value:n,writable:!0}),i}return i(s,e),c(s,n),s.prototype.status=r,s.prototype.statusCode=r,s.prototype.expose=!0,s}(r,f,t);break;case 500:n=function(e,t,r){var n=l(t);function s(e){var t=null!=e?e:a[r],i=new Error(t);return Error.captureStackTrace(i,s),o(i,s.prototype),Object.defineProperty(i,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(i,"name",{enumerable:!1,configurable:!0,value:n,writable:!0}),i}return i(s,e),c(s,n),s.prototype.status=r,s.prototype.statusCode=r,s.prototype.expose=!1,s}(r,f,t)}n&&(e[t]=n,e[f]=n)})),e["I'mateapot"]=n.function(e.ImATeapot,'"I\'mateapot"; use "ImATeapot" instead')}(e.exports,a.codes,e.exports.HttpError)})),parcelRequire.register("4WlpF",(function(e,t){function r(e,t){if("function"!=typeof e)throw new TypeError("argument fn must be a function");return e}function n(e,t,r){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var n=Object.getOwnPropertyDescriptor(e,t);if(!n)throw new TypeError("must call property on owner object");if(!n.configurable)throw new TypeError("property must be configurable")}e.exports=function(e){if(!e)throw new TypeError("argument namespace is required");function t(e){}return t._file=void 0,t._ignored=!0,t._namespace=e,t._traced=!1,t._warned=Object.create(null),t.function=r,t.property=n,t}})),parcelRequire.register("exWrh",(function(e,t){e.exports=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(e,t){return e.__proto__=t,e}:function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(e,r)||(e[r]=t[r]);return e})})),parcelRequire.register("244Ut",(function(e,t){var r,n,o,a=parcelRequire("59w31");function i(e){if("number"==typeof e){if(!i[e])throw new Error("invalid status code: "+e);return e}if("string"!=typeof e)throw new TypeError("code must be a number or string");var t=parseInt(e,10);if(!isNaN(t)){if(!i[t])throw new Error("invalid status code: "+t);return t}if(!(t=i[e.toLowerCase()]))throw new Error('invalid status message: "'+e+'"');return t}e.exports=i,i.STATUS_CODES=a,i.codes=(r=i,n=a,o=[],Object.keys(n).forEach((function(e){var t=n[e],a=Number(e);r[a]=t,r[t]=a,r[t.toLowerCase()]=a,o.push(a)})),o),i.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},i.empty={204:!0,205:!0,304:!0},i.retry={502:!0,503:!0,504:!0}})),parcelRequire.register("59w31",(function(e,t){e.exports=JSON.parse('{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","306":"(Unused)","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I\'m a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}')})),parcelRequire.register("dhT4G",(function(e,t){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}})),parcelRequire.register("cQWi2",(function(e,t){e.exports=function(e){return e.split(" ").map((function(e){return e.slice(0,1).toUpperCase()+e.slice(1)})).join("").replace(/[^ _0-9a-z]/gi,"")}})),parcelRequire.register("fzOUs",(function(e,t){function r(e){return new Promise((t=>setTimeout(t,e)))}Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=async function(e,t,n,o){let a=e;for(let e=0;e<t;e++){const e=await o();if(e)return e;await r(a),a*=n}return null}})),parcelRequire.register("15muY",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.logWarning=e.exports.ErrorContext=e.exports.TypedError=e.exports.ArgumentTypeError=e.exports.PositionalArgsError=void 0;class r extends Error{constructor(){super("Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }")}}e.exports.PositionalArgsError=r;class n extends Error{constructor(e,t,r){super(`Expected ${t} for '${e}' argument, but got '${JSON.stringify(r)}'`)}}e.exports.ArgumentTypeError=n;class o extends Error{constructor(e,t,r){super(e),this.type=t||"UntypedError",this.context=r}}e.exports.TypedError=o;e.exports.ErrorContext=class{constructor(e){this.transactionHash=e}},e.exports.logWarning=function(...e){console.warn(...e)}})),parcelRequire.register("aOz3M",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.getErrorTypeFromErrorMessage=e.exports.formatError=e.exports.parseResultError=e.exports.parseRpcError=e.exports.ServerError=void 0;const n=r(parcelRequire("5BjI6")),o=r(parcelRequire("kHpMs")),a=r(parcelRequire("gKRW3"));var i=parcelRequire("1OCaU"),s=parcelRequire("15muY");const u={formatNear:()=>(e,t)=>i.utils.format.formatNearAmount(t(e))};class c extends s.TypedError{}e.exports.ServerError=c;class l extends c{}function f(e){const t={},r=p(e,o.default.schema,t,""),n=new c(d(r,t),r);return Object.assign(n,t),n}function d(e,t){return"string"==typeof a.default[e]?n.default.render(a.default[e],{...t,...u}):JSON.stringify(t)}function p(e,t,r,n){let o,a,i;for(const r in t){if(s=e[r],"[object String]"===Object.prototype.toString.call(s))return e[r];if(h(e[r]))o=e[r],a=t[r],i=r;else{if(!h(e.kind)||!h(e.kind[r]))continue;o=e.kind[r],a=t[r],i=r}}var s;if(o&&a){for(const e of Object.keys(a.props))r[e]=o[e];return p(o,t,r,i)}return r.kind=e,n}function h(e){return"[object Object]"===Object.prototype.toString.call(e)}e.exports.parseRpcError=f,e.exports.parseResultError=function(e){const t=f(e.status.Failure),r=new l;return Object.assign(r,t),r.type=t.type,r.message=t.message,r.transaction_outcome=e.transaction_outcome,r},e.exports.formatError=d,e.exports.getErrorTypeFromErrorMessage=function(e){switch(!0){case/^account .*? does not exist while viewing$/.test(e):case/^Account .*? doesn't exist$/.test(e):return"AccountDoesNotExist";case/^access key .*? does not exist while viewing$/.test(e):return"AccessKeyDoesNotExist";case/wasm execution failed with error: FunctionCallError\(CompilationError\(CodeDoesNotExist/.test(e):return"CodeDoesNotExist";case/Transaction nonce \d+ must be larger than nonce of the used access key \d+/.test(e):return"InvalidNonce";default:return"UntypedError"}}})),parcelRequire.register("5BjI6",(function(e,t){e.exports,e.exports=function(){
/*!
   * mustache.js - Logic-less {{mustache}} templates with JavaScript
   * http://github.com/janl/mustache.js
   */
var e=Object.prototype.toString,t=Array.isArray||function(t){return"[object Array]"===e.call(t)};function r(e){return"function"==typeof e}function n(e){return t(e)?"array":typeof e}function o(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function a(e,t){return null!=e&&"object"==typeof e&&t in e}function i(e,t){return null!=e&&"object"!=typeof e&&e.hasOwnProperty&&e.hasOwnProperty(t)}var s=RegExp.prototype.test;function u(e,t){return s.call(e,t)}var c=/\S/;function l(e){return!u(c,e)}var f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};function d(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return f[e]}))}var p=/\s*/,h=/\s+/,m=/\s*=/,y=/\s*\}/,g=/#|\^|\/|>|\{|&|=|!/;function b(e,r){if(!e)return[];var n,a,i,s=!1,u=[],c=[],f=[],d=!1,b=!1,x="",_=0;function E(){if(d&&!b)for(;f.length;)delete c[f.pop()];else f=[];d=!1,b=!1}function k(e){if("string"==typeof e&&(e=e.split(h,2)),!t(e)||2!==e.length)throw new Error("Invalid tags: "+e);n=new RegExp(o(e[0])+"\\s*"),a=new RegExp("\\s*"+o(e[1])),i=new RegExp("\\s*"+o("}"+e[1]))}k(r||S.tags);for(var A,M,R,C,P,T,I=new $(e);!I.eos();){if(A=I.pos,R=I.scanUntil(n))for(var N=0,O=R.length;N<O;++N)l(C=R.charAt(N))?(f.push(c.length),x+=C):(b=!0,s=!0,x+=" "),c.push(["text",C,A,A+1]),A+=1,"\n"===C&&(E(),x="",_=0,s=!1);if(!I.scan(n))break;if(d=!0,M=I.scan(g)||"name",I.scan(p),"="===M?(R=I.scanUntil(m),I.scan(m),I.scanUntil(a)):"{"===M?(R=I.scanUntil(i),I.scan(y),I.scanUntil(a),M="&"):R=I.scanUntil(a),!I.scan(a))throw new Error("Unclosed tag at "+I.pos);if(P=">"==M?[M,R,A,I.pos,x,_,s]:[M,R,A,I.pos],_++,c.push(P),"#"===M||"^"===M)u.push(P);else if("/"===M){if(!(T=u.pop()))throw new Error('Unopened section "'+R+'" at '+A);if(T[1]!==R)throw new Error('Unclosed section "'+T[1]+'" at '+A)}else"name"===M||"{"===M||"&"===M?b=!0:"="===M&&k(R)}if(E(),T=u.pop())throw new Error('Unclosed section "'+T[1]+'" at '+I.pos);return w(v(c))}function v(e){for(var t,r,n=[],o=0,a=e.length;o<a;++o)(t=e[o])&&("text"===t[0]&&r&&"text"===r[0]?(r[1]+=t[1],r[3]=t[3]):(n.push(t),r=t));return n}function w(e){for(var t,r=[],n=r,o=[],a=0,i=e.length;a<i;++a)switch((t=e[a])[0]){case"#":case"^":n.push(t),o.push(t),n=t[4]=[];break;case"/":o.pop()[5]=t[2],n=o.length>0?o[o.length-1][4]:r;break;default:n.push(t)}return r}function $(e){this.string=e,this.tail=e,this.pos=0}function x(e,t){this.view=e,this.cache={".":this.view},this.parent=t}function _(){this.templateCache={_cache:{},set:function(e,t){this._cache[e]=t},get:function(e){return this._cache[e]},clear:function(){this._cache={}}}}$.prototype.eos=function(){return""===this.tail},$.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var r=t[0];return this.tail=this.tail.substring(r.length),this.pos+=r.length,r},$.prototype.scanUntil=function(e){var t,r=this.tail.search(e);switch(r){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,r),this.tail=this.tail.substring(r)}return this.pos+=t.length,t},x.prototype.push=function(e){return new x(e,this)},x.prototype.lookup=function(e){var t,n=this.cache;if(n.hasOwnProperty(e))t=n[e];else{for(var o,s,u,c=this,l=!1;c;){if(e.indexOf(".")>0)for(o=c.view,s=e.split("."),u=0;null!=o&&u<s.length;)u===s.length-1&&(l=a(o,s[u])||i(o,s[u])),o=o[s[u++]];else o=c.view[e],l=a(c.view,e);if(l){t=o;break}c=c.parent}n[e]=t}return r(t)&&(t=t.call(this.view)),t},_.prototype.clearCache=function(){void 0!==this.templateCache&&this.templateCache.clear()},_.prototype.parse=function(e,t){var r=this.templateCache,n=e+":"+(t||S.tags).join(":"),o=void 0!==r,a=o?r.get(n):void 0;return null==a&&(a=b(e,t),o&&r.set(n,a)),a},_.prototype.render=function(e,t,r,n){var o=this.getConfigTags(n),a=this.parse(e,o),i=t instanceof x?t:new x(t,void 0);return this.renderTokens(a,i,r,e,n)},_.prototype.renderTokens=function(e,t,r,n,o){for(var a,i,s,u="",c=0,l=e.length;c<l;++c)s=void 0,"#"===(i=(a=e[c])[0])?s=this.renderSection(a,t,r,n,o):"^"===i?s=this.renderInverted(a,t,r,n,o):">"===i?s=this.renderPartial(a,t,r,o):"&"===i?s=this.unescapedValue(a,t):"name"===i?s=this.escapedValue(a,t,o):"text"===i&&(s=this.rawValue(a)),void 0!==s&&(u+=s);return u},_.prototype.renderSection=function(e,n,o,a,i){var s=this,u="",c=n.lookup(e[1]);function l(e){return s.render(e,n,o,i)}if(c){if(t(c))for(var f=0,d=c.length;f<d;++f)u+=this.renderTokens(e[4],n.push(c[f]),o,a,i);else if("object"==typeof c||"string"==typeof c||"number"==typeof c)u+=this.renderTokens(e[4],n.push(c),o,a,i);else if(r(c)){if("string"!=typeof a)throw new Error("Cannot use higher-order sections without the original template");null!=(c=c.call(n.view,a.slice(e[3],e[5]),l))&&(u+=c)}else u+=this.renderTokens(e[4],n,o,a,i);return u}},_.prototype.renderInverted=function(e,r,n,o,a){var i=r.lookup(e[1]);if(!i||t(i)&&0===i.length)return this.renderTokens(e[4],r,n,o,a)},_.prototype.indentPartial=function(e,t,r){for(var n=t.replace(/[^ \t]/g,""),o=e.split("\n"),a=0;a<o.length;a++)o[a].length&&(a>0||!r)&&(o[a]=n+o[a]);return o.join("\n")},_.prototype.renderPartial=function(e,t,n,o){if(n){var a=this.getConfigTags(o),i=r(n)?n(e[1]):n[e[1]];if(null!=i){var s=e[6],u=e[5],c=e[4],l=i;0==u&&c&&(l=this.indentPartial(i,c,s));var f=this.parse(l,a);return this.renderTokens(f,t,n,l,o)}}},_.prototype.unescapedValue=function(e,t){var r=t.lookup(e[1]);if(null!=r)return r},_.prototype.escapedValue=function(e,t,r){var n=this.getConfigEscape(r)||S.escape,o=t.lookup(e[1]);if(null!=o)return"number"==typeof o&&n===S.escape?String(o):n(o)},_.prototype.rawValue=function(e){return e[1]},_.prototype.getConfigTags=function(e){return t(e)?e:e&&"object"==typeof e?e.tags:void 0},_.prototype.getConfigEscape=function(e){return e&&"object"==typeof e&&!t(e)?e.escape:void 0};var S={name:"mustache.js",version:"4.2.0",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,Scanner:void 0,Context:void 0,Writer:void 0,set templateCache(e){E.templateCache=e},get templateCache(){return E.templateCache}},E=new _;return S.clearCache=function(){return E.clearCache()},S.parse=function(e,t){return E.parse(e,t)},S.render=function(e,t,r,o){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+n(e)+'" was given as the first argument for mustache#render(template, view, partials)');return E.render(e,t,r,o)},S.escape=d,S.Scanner=$,S.Context=x,S.Writer=_,S}()})),parcelRequire.register("kHpMs",(function(e,t){e.exports=JSON.parse('{"schema":{"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BreakpointTrap":{"name":"BreakpointTrap","subtypes":[],"props":{}},"CacheError":{"name":"CacheError","subtypes":["ReadError","WriteError","DeserializationError","SerializationError"],"props":{}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"DeserializationError":{"name":"DeserializationError","subtypes":[],"props":{}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"FunctionCallError":{"name":"FunctionCallError","subtypes":["CompilationError","LinkError","MethodResolveError","WasmTrap","WasmUnknownError","HostError","EvmError"],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LinkError":{"name":"LinkError","subtypes":[],"props":{"msg":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodUTF8Error","MethodNotFound","MethodInvalidSignature"],"props":{}},"MethodUTF8Error":{"name":"MethodUTF8Error","subtypes":[],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReadError":{"name":"ReadError","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"SerializationError":{"name":"SerializationError","subtypes":[],"props":{"hash":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","BreakpointTrap","StackOverflow","GenericTrap"],"props":{}},"WasmUnknownError":{"name":"WasmUnknownError","subtypes":[],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"WriteError":{"name":"WriteError","subtypes":[],"props":{}},"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation"],"props":{}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"InternalError":{"name":"InternalError","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed","InternalError"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}')})),parcelRequire.register("gKRW3",(function(e,t){e.exports=JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed"}')})),parcelRequire.register("2FeSb",(function(e,t){var r=e.exports&&e.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=e.exports&&e.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=e.exports&&e.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.hasOwnProperty.call(e,o)&&r(t,e,o);return n(t,e),t};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.logWarning=e.exports.rpc_errors=e.exports.KeyPairEd25519=e.exports.KeyPair=e.exports.PublicKey=e.exports.format=e.exports.enums=e.exports.web=e.exports.serialize=e.exports.key_pair=void 0;const a=o(parcelRequire("h9FZF"));e.exports.key_pair=a;const i=o(parcelRequire("4vyb6"));e.exports.serialize=i;const s=o(parcelRequire("kQCkE"));e.exports.web=s;const u=o(parcelRequire("iSdxe"));e.exports.enums=u;const c=o(parcelRequire("lNPF9"));e.exports.format=c;const l=o(parcelRequire("aOz3M"));e.exports.rpc_errors=l,Object.defineProperty(e.exports,"PublicKey",{enumerable:!0,get:function(){return parcelRequire("h9FZF").PublicKey}}),Object.defineProperty(e.exports,"KeyPair",{enumerable:!0,get:function(){return parcelRequire("h9FZF").KeyPair}}),Object.defineProperty(e.exports,"KeyPairEd25519",{enumerable:!0,get:function(){return parcelRequire("h9FZF").KeyPairEd25519}});var f=parcelRequire("15muY");Object.defineProperty(e.exports,"logWarning",{enumerable:!0,get:function(){return f.logWarning}})})),parcelRequire.register("lNPF9",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.parseNearAmount=e.exports.formatNearAmount=e.exports.NEAR_NOMINATION=e.exports.NEAR_NOMINATION_EXP=void 0;const n=r(parcelRequire("aVh2m"));e.exports.NEAR_NOMINATION_EXP=24,e.exports.NEAR_NOMINATION=new n.default("10",10).pow(new n.default(e.exports.NEAR_NOMINATION_EXP,10));const o=[],a=new n.default(10);for(let t=0,r=new n.default(5);t<e.exports.NEAR_NOMINATION_EXP;t++,r=r.mul(a))o[t]=r;e.exports.formatNearAmount=function(t,r=e.exports.NEAR_NOMINATION_EXP){const a=new n.default(t,10);if(r!==e.exports.NEAR_NOMINATION_EXP){const t=e.exports.NEAR_NOMINATION_EXP-r-1;t>0&&a.iadd(o[t])}const i=(t=a.toString()).substring(0,t.length-e.exports.NEAR_NOMINATION_EXP)||"0",s=t.substring(t.length-e.exports.NEAR_NOMINATION_EXP).padStart(e.exports.NEAR_NOMINATION_EXP,"0").substring(0,r);return`${function(e){const t=/(-?\d+)(\d{3})/;for(;t.test(e);)e=e.replace(t,"$1,$2");return e}(i)}.${s}`.replace(/\.?0*$/,"")},e.exports.parseNearAmount=function(t){if(!t)return null;const r=(t=t.replace(/,/g,"").trim()).split("."),n=r[0],o=r[1]||"";if(r.length>2||o.length>e.exports.NEAR_NOMINATION_EXP)throw new Error(`Cannot parse '${t}' as NEAR amount`);return""===(a=(a=n+o.padEnd(e.exports.NEAR_NOMINATION_EXP,"0")).replace(/^0+/,""))?"0":a;var a}})),parcelRequire.register("iRwne",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.signTransaction=e.exports.createTransaction=e.exports.SCHEMA=e.exports.Action=e.exports.SignedTransaction=e.exports.Transaction=e.exports.Signature=e.exports.deleteAccount=e.exports.deleteKey=e.exports.addKey=e.exports.stake=e.exports.transfer=e.exports.functionCall=e.exports.stringifyJsonOrBytes=e.exports.deployContract=e.exports.createAccount=e.exports.DeleteAccount=e.exports.DeleteKey=e.exports.AddKey=e.exports.Stake=e.exports.Transfer=e.exports.FunctionCall=e.exports.DeployContract=e.exports.CreateAccount=e.exports.IAction=e.exports.functionCallAccessKey=e.exports.fullAccessKey=e.exports.AccessKey=e.exports.AccessKeyPermission=e.exports.FullAccessPermission=e.exports.FunctionCallPermission=void 0;const o=n(parcelRequire("9AzhF"));var a=parcelRequire("iSdxe"),i=parcelRequire("fXZ66"),s=parcelRequire("h9FZF");class u extends a.Assignable{}e.exports.FunctionCallPermission=u;class c extends a.Assignable{}e.exports.FullAccessPermission=c;class l extends a.Enum{}e.exports.AccessKeyPermission=l;class f extends a.Assignable{}e.exports.AccessKey=f,e.exports.fullAccessKey=function(){return new f({nonce:0,permission:new l({fullAccess:new c({})})})},e.exports.functionCallAccessKey=function(e,t,r){return new f({nonce:0,permission:new l({functionCall:new u({receiverId:e,allowance:r,methodNames:t})})})};class d extends a.Assignable{}e.exports.IAction=d;class p extends d{}e.exports.CreateAccount=p;class h extends d{}e.exports.DeployContract=h;class m extends d{}e.exports.FunctionCall=m;class y extends d{}e.exports.Transfer=y;class g extends d{}e.exports.Stake=g;class b extends d{}e.exports.AddKey=b;class v extends d{}e.exports.DeleteKey=v;class w extends d{}function $(e){return void 0!==e.byteLength&&e.byteLength===e.length?e:r.from(JSON.stringify(e))}e.exports.DeleteAccount=w,e.exports.createAccount=function(){return new E({createAccount:new p({})})},e.exports.deployContract=function(e){return new E({deployContract:new h({code:e})})},e.exports.stringifyJsonOrBytes=$,e.exports.functionCall=function(e,t,r,n,o=$){return new E({functionCall:new m({methodName:e,args:o(t),gas:r,deposit:n})})},e.exports.transfer=function(e){return new E({transfer:new y({deposit:e})})},e.exports.stake=function(e,t){return new E({stake:new g({stake:e,publicKey:t})})},e.exports.addKey=function(e,t){return new E({addKey:new b({publicKey:e,accessKey:t})})},e.exports.deleteKey=function(e){return new E({deleteKey:new v({publicKey:e})})},e.exports.deleteAccount=function(e){return new E({deleteAccount:new w({beneficiaryId:e})})};class x extends a.Assignable{}e.exports.Signature=x;class _ extends a.Assignable{encode(){return i.serialize(e.exports.SCHEMA,this)}static decode(t){return i.deserialize(e.exports.SCHEMA,_,t)}}e.exports.Transaction=_;class S extends a.Assignable{encode(){return i.serialize(e.exports.SCHEMA,this)}static decode(t){return i.deserialize(e.exports.SCHEMA,S,t)}}e.exports.SignedTransaction=S;class E extends a.Enum{}function k(e,t,r,n,o,a){return new _({signerId:e,publicKey:t,nonce:n,receiverId:r,actions:o,blockHash:a})}async function A(t,r,n,a){const s=i.serialize(e.exports.SCHEMA,t),u=new Uint8Array(o.default.sha256.array(s)),c=await r.signMessage(s,n,a);return[u,new S({transaction:t,signature:new x({keyType:t.publicKey.keyType,data:c.signature})})]}e.exports.Action=E,e.exports.SCHEMA=new Map([[x,{kind:"struct",fields:[["keyType","u8"],["data",[64]]]}],[S,{kind:"struct",fields:[["transaction",_],["signature",x]]}],[_,{kind:"struct",fields:[["signerId","string"],["publicKey",s.PublicKey],["nonce","u64"],["receiverId","string"],["blockHash",[32]],["actions",[E]]]}],[s.PublicKey,{kind:"struct",fields:[["keyType","u8"],["data",[32]]]}],[f,{kind:"struct",fields:[["nonce","u64"],["permission",l]]}],[l,{kind:"enum",field:"enum",values:[["functionCall",u],["fullAccess",c]]}],[u,{kind:"struct",fields:[["allowance",{kind:"option",type:"u128"}],["receiverId","string"],["methodNames",["string"]]]}],[c,{kind:"struct",fields:[]}],[E,{kind:"enum",field:"enum",values:[["createAccount",p],["deployContract",h],["functionCall",m],["transfer",y],["stake",g],["addKey",b],["deleteKey",v],["deleteAccount",w]]}],[p,{kind:"struct",fields:[]}],[h,{kind:"struct",fields:[["code",["u8"]]]}],[m,{kind:"struct",fields:[["methodName","string"],["args",["u8"]],["gas","u64"],["deposit","u128"]]}],[y,{kind:"struct",fields:[["deposit","u128"]]}],[g,{kind:"struct",fields:[["stake","u128"],["publicKey",s.PublicKey]]}],[b,{kind:"struct",fields:[["publicKey",s.PublicKey],["accessKey",f]]}],[v,{kind:"struct",fields:[["publicKey",s.PublicKey]]}],[w,{kind:"struct",fields:[["beneficiaryId","string"]]}]]),e.exports.createTransaction=k,e.exports.signTransaction=async function(...e){if(e[0].constructor===_){const[t,r,n,o]=e;return A(t,r,n,o)}{const[t,r,n,o,a,i,s]=e;return A(k(i,await a.getPublicKey(i,s),t,r,n,o),a,i,s)}}})),parcelRequire.register("9AzhF",(function(module,exports){var $4ZL0H=parcelRequire("4ZL0H");
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */(function(){var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof $4ZL0H&&$4ZL0H.versions&&$4ZL0H.versions.node;NODE_JS?root=$parcel$global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD="function"==typeof define&&define.amd,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(r){return new Sha256(t,!0).update(r)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(r,n){return new HmacSha256(r,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<OUTPUT_TYPES.length;++r){var n=OUTPUT_TYPES[r];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,r){var n,o=typeof e;if("string"===o){var a,i=[],s=e.length,u=0;for(n=0;n<s;++n)(a=e.charCodeAt(n))<128?i[u++]=a:a<2048?(i[u++]=192|a>>6,i[u++]=128|63&a):a<55296||a>=57344?(i[u++]=224|a>>12,i[u++]=128|a>>6&63,i[u++]=128|63&a):(a=65536+((1023&a)<<10|1023&e.charCodeAt(++n)),i[u++]=240|a>>18,i[u++]=128|a>>12&63,i[u++]=128|a>>6&63,i[u++]=128|63&a);e=i}else{if("object"!==o)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var c=[],l=[];for(n=0;n<64;++n){var f=e[n]||0;c[n]=92^f,l[n]=54^f}Sha256.call(this,t,r),this.update(l),this.oKeyPad=c,this.inner=!0,this.sharedMemory=r}Sha256.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,o,a=0,i=e.length,s=this.blocks;a<i;){if(this.hashed&&(this.hashed=!1,s[0]=this.block,s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),t)for(o=this.start;a<i&&o<64;++a)s[o>>2]|=e[a]<<SHIFT[3&o++];else for(o=this.start;a<i&&o<64;++a)(n=e.charCodeAt(a))<128?s[o>>2]|=n<<SHIFT[3&o++]:n<2048?(s[o>>2]|=(192|n>>6)<<SHIFT[3&o++],s[o>>2]|=(128|63&n)<<SHIFT[3&o++]):n<55296||n>=57344?(s[o>>2]|=(224|n>>12)<<SHIFT[3&o++],s[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],s[o>>2]|=(128|63&n)<<SHIFT[3&o++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++a)),s[o>>2]|=(240|n>>18)<<SHIFT[3&o++],s[o>>2]|=(128|n>>12&63)<<SHIFT[3&o++],s[o>>2]|=(128|n>>6&63)<<SHIFT[3&o++],s[o>>2]|=(128|63&n)<<SHIFT[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=s[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,r,n,o,a,i,s,u,c=this.h0,l=this.h1,f=this.h2,d=this.h3,p=this.h4,h=this.h5,m=this.h6,y=this.h7,g=this.blocks;for(e=16;e<64;++e)t=((o=g[e-15])>>>7|o<<25)^(o>>>18|o<<14)^o>>>3,r=((o=g[e-2])>>>17|o<<15)^(o>>>19|o<<13)^o>>>10,g[e]=g[e-16]+t+g[e-7]+r<<0;for(u=l&f,e=0;e<64;e+=4)this.first?(this.is224?(a=300032,y=(o=g[0]-1413257819)-150054599<<0,d=o+24177077<<0):(a=704751109,y=(o=g[0]-210244248)-1521486534<<0,d=o+143694565<<0),this.first=!1):(t=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),n=(a=c&l)^c&f^u,y=d+(o=y+(r=(p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(p&h^~p&m)+K[e]+g[e])<<0,d=o+(t+n)<<0),t=(d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10),n=(i=d&c)^d&l^a,m=f+(o=m+(r=(y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(y&p^~y&h)+K[e+1]+g[e+1])<<0,t=((f=o+(t+n)<<0)>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10),n=(s=f&d)^f&c^i,h=l+(o=h+(r=(m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(m&y^~m&p)+K[e+2]+g[e+2])<<0,t=((l=o+(t+n)<<0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(u=l&f)^l&d^s,p=c+(o=p+(r=(h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(h&m^~h&y)+K[e+3]+g[e+3])<<0,c=o+(t+n)<<0;this.h0=this.h0+c<<0,this.h1=this.h1+l<<0,this.h2=this.h2+f<<0,this.h3=this.h3+d<<0,this.h4=this.h4+p<<0,this.h5=this.h5+h<<0,this.h6=this.h6+m<<0,this.h7=this.h7+y<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,a=this.h5,i=this.h6,s=this.h7,u=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i];return this.is224||(u+=HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s]),u},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,n=this.h3,o=this.h4,a=this.h5,i=this.h6,s=this.h7,u=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,n>>24&255,n>>16&255,n>>8&255,255&n,o>>24&255,o>>16&255,o>>8&255,255&o,a>>24&255,a>>16&255,a>>8&255,255&a,i>>24&255,i>>16&255,i>>8&255,255&i];return this.is224||u.push(s>>24&255,s>>16&255,s>>8&255,255&s),u},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define((function(){return exports})))})()})),parcelRequire.register("4ZL0H",(function(e,t){var r,n,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function s(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:a}catch(e){r=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var u,c=[],l=!1,f=-1;function d(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!l){var e=s(d);l=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||l||s(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}})),parcelRequire.register("fKh1r",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.diffEpochValidators=e.exports.findSeatPrice=void 0;const n=r(parcelRequire("aVh2m")),o=r(parcelRequire("9P71R"));e.exports.findSeatPrice=function(e,t,r,a){if(a&&a<49)return function(e,t){const r=e.map((e=>new n.default(e.stake,10))).sort(((e,t)=>e.cmp(t))),o=new n.default(t),a=r.reduce(((e,t)=>e.add(t)));if(a.lt(o))throw new Error("Stakes are below seats");let i=new n.default(1),s=a.add(new n.default(1));for(;!i.eq(s.sub(new n.default(1)));){const e=i.add(s).div(new n.default(2));let t=!1,a=new n.default(0);for(let n=0;n<r.length;++n)if(a=a.add(r[n].div(e)),a.gte(o)){i=e,t=!0;break}t||(s=e)}return i}(e,t);if(!r){o.default("findSeatPrice(validators, maxNumberOfSeats)")("`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead"),r=[1,6250]}return function(e,t,r){if(2!=r.length)throw Error("minimumStakeRatio should have 2 elements");const o=e.map((e=>new n.default(e.stake,10))).sort(((e,t)=>e.cmp(t))),a=o.reduce(((e,t)=>e.add(t)));return e.length<t?a.mul(new n.default(r[0])).div(new n.default(r[1])):o[0].add(new n.default(1))}(e,t,r)},e.exports.diffEpochValidators=function(e,t){const r=new Map;e.forEach((e=>r.set(e.account_id,e)));const n=new Set(t.map((e=>e.account_id)));return{newValidators:t.filter((e=>!r.has(e.account_id))),removedValidators:e.filter((e=>!n.has(e.account_id))),changedValidators:t.filter((e=>r.has(e.account_id)&&r.get(e.account_id).stake!=e.stake)).map((e=>({current:r.get(e.account_id),next:e})))}}})),parcelRequire.register("3BYEc",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Account=void 0;const o=n(parcelRequire("aVh2m")),a=n(parcelRequire("9P71R"));var i=parcelRequire("iRwne"),s=parcelRequire("8wUQ8"),u=parcelRequire("fXZ66"),c=parcelRequire("h9FZF"),l=parcelRequire("15muY"),f=parcelRequire("aOz3M"),d=parcelRequire("7Kvdf");const p=n(parcelRequire("fzOUs"));function h(e){return JSON.parse(r.from(e).toString())}function m(e){return r.from(JSON.stringify(e))}class y{get ready(){return a.default("Account.ready()")("not needed anymore, always ready"),Promise.resolve()}async fetchState(){a.default("Account.fetchState()")("use `Account.state()` instead")}async state(){return this.connection.provider.query({request_type:"view_account",account_id:this.accountId,finality:"optimistic"})}printLogsAndFailures(e,t){for(const r of t)console.log(`Receipt${r.receiptIds.length>1?"s":""}: ${r.receiptIds.join(", ")}`),this.printLogs(e,r.logs,"\t"),r.failure&&console.warn(`\tFailure [${e}]: ${r.failure}`)}printLogs(e,t,r=""){for(const n of t)console.log(`${r}Log [${e}]: ${n}`)}async signTransaction(e,t){const r=await this.findAccessKey(e,t);if(!r)throw new s.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`,"KeyNotFound");const{accessKey:n}=r,o=(await this.connection.provider.block({finality:"final"})).header.hash,a=++n.nonce;return await i.signTransaction(e,a,t,u.baseDecode(o),this.connection.signer,this.accountId,this.connection.networkId)}signAndSendTransaction(...e){return"string"==typeof e[0]?this.signAndSendTransactionV1(e[0],e[1]):this.signAndSendTransactionV2(e[0])}signAndSendTransactionV1(e,t){return a.default("Account.signAndSendTransaction(receiverId, actions")("use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead"),this.signAndSendTransactionV2({receiverId:e,actions:t})}async signAndSendTransactionV2({receiverId:e,actions:t,returnError:r}){let n,o;const a=await p.default(500,12,1.5,(async()=>{[n,o]=await this.signTransaction(e,t);const r=o.transaction.publicKey;try{return await this.connection.provider.sendTransaction(o)}catch(t){if("InvalidNonce"===t.type)return l.logWarning(`Retrying transaction ${e}:${u.baseEncode(n)} with new nonce.`),delete this.accessKeyByPublicKeyCache[r.toString()],null;if("Expired"===t.type)return l.logWarning(`Retrying transaction ${e}:${u.baseEncode(n)} due to expired block hash`),null;throw t.context=new s.ErrorContext(u.baseEncode(n)),t}}));if(!a)throw new s.TypedError("nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.","RetriesExceeded");const i=[a.transaction_outcome,...a.receipts_outcome].reduce(((e,t)=>t.outcome.logs.length||"object"==typeof t.outcome.status&&"object"==typeof t.outcome.status.Failure?e.concat({receiptIds:t.outcome.receipt_ids,logs:t.outcome.logs,failure:void 0!==t.outcome.status.Failure?f.parseRpcError(t.outcome.status.Failure):null}):e),[]);if(this.printLogsAndFailures(o.transaction.receiverId,i),!r&&"object"==typeof a.status&&"object"==typeof a.status.Failure)throw a.status.Failure.error_message&&a.status.Failure.error_type?new s.TypedError(`Transaction ${a.transaction_outcome.id} failed. ${a.status.Failure.error_message}`,a.status.Failure.error_type):f.parseResultError(a);return a}async findAccessKey(e,t){const r=await this.connection.signer.getPublicKey(this.accountId,this.connection.networkId);if(!r)return null;const n=this.accessKeyByPublicKeyCache[r.toString()];if(void 0!==n)return{publicKey:r,accessKey:n};try{const e=await this.connection.provider.query({request_type:"view_access_key",account_id:this.accountId,public_key:r.toString(),finality:"optimistic"});return this.accessKeyByPublicKeyCache[r.toString()]?{publicKey:r,accessKey:this.accessKeyByPublicKeyCache[r.toString()]}:(this.accessKeyByPublicKeyCache[r.toString()]=e,{publicKey:r,accessKey:e})}catch(e){if("AccessKeyDoesNotExist"==e.type)return null;throw e}}async createAndDeployContract(e,t,r,n){const o=i.fullAccessKey();await this.signAndSendTransaction({receiverId:e,actions:[i.createAccount(),i.transfer(n),i.addKey(c.PublicKey.from(t),o),i.deployContract(r)]});return new y(this.connection,e)}async sendMoney(e,t){return this.signAndSendTransaction({receiverId:e,actions:[i.transfer(t)]})}async createAccount(e,t,r){const n=i.fullAccessKey();return this.signAndSendTransaction({receiverId:e,actions:[i.createAccount(),i.transfer(r),i.addKey(c.PublicKey.from(t),n)]})}async deleteAccount(e){return this.signAndSendTransaction({receiverId:this.accountId,actions:[i.deleteAccount(e)]})}async deployContract(e){return this.signAndSendTransaction({receiverId:this.accountId,actions:[i.deployContract(e)]})}async functionCall(...e){return"string"==typeof e[0]?this.functionCallV1(e[0],e[1],e[2],e[3],e[4]):this.functionCallV2(e[0])}functionCallV1(e,t,r,n,o){return a.default("Account.functionCall(contractId, methodName, args, gas, amount)")("use `Account.functionCall(FunctionCallOptions)` instead"),r=r||{},this.validateArgs(r),this.signAndSendTransaction({receiverId:e,actions:[i.functionCall(t,r,n||d.DEFAULT_FUNCTION_CALL_GAS,o)]})}functionCallV2({contractId:e,methodName:t,args:r={},gas:n=d.DEFAULT_FUNCTION_CALL_GAS,attachedDeposit:o,walletMeta:a,walletCallbackUrl:s,stringify:u}){this.validateArgs(r);const c=void 0===u?i.stringifyJsonOrBytes:u;return this.signAndSendTransaction({receiverId:e,actions:[i.functionCall(t,r,n,o,c)],walletMeta:a,walletCallbackUrl:s})}async addKey(e,t,r,n){let o;return r||(r=[]),Array.isArray(r)||(r=[r]),o=t?i.functionCallAccessKey(t,r,n):i.fullAccessKey(),this.signAndSendTransaction({receiverId:this.accountId,actions:[i.addKey(c.PublicKey.from(e),o)]})}async deleteKey(e){return this.signAndSendTransaction({receiverId:this.accountId,actions:[i.deleteKey(c.PublicKey.from(e))]})}async stake(e,t){return this.signAndSendTransaction({receiverId:this.accountId,actions:[i.stake(t,c.PublicKey.from(e))]})}validateArgs(e){if(!(void 0!==e.byteLength&&e.byteLength===e.length)&&(Array.isArray(e)||"object"!=typeof e))throw new l.PositionalArgsError}async viewFunction(e,t,n={},{parse:o=h,stringify:a=m}={}){this.validateArgs(n);const i=a(n).toString("base64"),s=await this.connection.provider.query({request_type:"call_function",account_id:e,method_name:t,args_base64:i,finality:"optimistic"});return s.logs&&this.printLogs(e,s.logs),s.result&&s.result.length>0&&o(r.from(s.result))}async viewState(e,t={finality:"optimistic"}){const{values:n}=await this.connection.provider.query({request_type:"view_state",...t,account_id:this.accountId,prefix_base64:r.from(e).toString("base64")});return n.map((({key:e,value:t})=>({key:r.from(e,"base64"),value:r.from(t,"base64")})))}async getAccessKeys(){const e=await this.connection.provider.query({request_type:"view_access_key_list",account_id:this.accountId,finality:"optimistic"});return Array.isArray(e)?e:e.keys}async getAccountDetails(){return{authorizedApps:(await this.getAccessKeys()).filter((e=>"FullAccess"!==e.access_key.permission)).map((e=>{const t=e.access_key.permission;return{contractId:t.FunctionCall.receiver_id,amount:t.FunctionCall.allowance,publicKey:e.public_key}}))}}async getAccountBalance(){const e=await this.connection.provider.experimental_protocolConfig({finality:"final"}),t=await this.state(),r=new o.default(e.runtime_config.storage_amount_per_byte),n=new o.default(t.storage_usage).mul(r),a=new o.default(t.locked),i=new o.default(t.amount).add(a),s=i.sub(o.default.max(a,n));return{total:i.toString(),stateStaked:n.toString(),staked:a.toString(),available:s.toString()}}constructor(e,t){this.accessKeyByPublicKeyCache={},this.connection=e,this.accountId=t}}e.exports.Account=y})),parcelRequire.register("7Kvdf",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.DEFAULT_FUNCTION_CALL_GAS=void 0;const n=r(parcelRequire("aVh2m"));e.exports.DEFAULT_FUNCTION_CALL_GAS=new n.default("30000000000000")})),parcelRequire.register("2T2Ub",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Account2FA=e.exports.AccountMultisig=e.exports.MULTISIG_CONFIRM_METHODS=e.exports.MULTISIG_CHANGE_METHODS=e.exports.MULTISIG_DEPOSIT=e.exports.MULTISIG_GAS=e.exports.MULTISIG_ALLOWANCE=e.exports.MULTISIG_STORAGE_KEY=void 0;const o=n(parcelRequire("aVh2m")),a=n(parcelRequire("9P71R"));var i=parcelRequire("3BYEc"),s=parcelRequire("lNPF9"),u=parcelRequire("h9FZF"),c=parcelRequire("iRwne"),l=parcelRequire("kQCkE");e.exports.MULTISIG_STORAGE_KEY="__multisigRequest",e.exports.MULTISIG_ALLOWANCE=new o.default(s.parseNearAmount("1")),e.exports.MULTISIG_GAS=new o.default("100000000000000"),e.exports.MULTISIG_DEPOSIT=new o.default("0"),e.exports.MULTISIG_CHANGE_METHODS=["add_request","add_request_and_confirm","delete_request","confirm"],e.exports.MULTISIG_CONFIRM_METHODS=["confirm"];const f={[e.exports.MULTISIG_STORAGE_KEY]:null};class d extends i.Account{async signAndSendTransactionWithAccount(e,t){return super.signAndSendTransaction({receiverId:e,actions:t})}signAndSendTransaction(...e){return"string"==typeof e[0]?this._signAndSendTransaction({receiverId:e[0],actions:e[1]}):this._signAndSendTransaction(e[0])}async _signAndSendTransaction({receiverId:t,actions:n}){const{accountId:o}=this,a=r.from(JSON.stringify({request:{receiver_id:t,actions:h(n,o,t)}}));let i;try{i=await super.signAndSendTransaction({receiverId:o,actions:[c.functionCall("add_request_and_confirm",a,e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT)]})}catch(e){if(e.toString().includes("Account has too many active requests. Confirm or delete some"))return await this.deleteUnconfirmedRequests(),await this.signAndSendTransaction(t,n);throw e}if(!i.status)throw new Error("Request failed");const s={...i.status};if(!s.SuccessValue||"string"!=typeof s.SuccessValue)throw new Error("Request failed");return this.setRequest({accountId:o,actions:n,requestId:parseInt(r.from(s.SuccessValue,"base64").toString("ascii"),10)}),this.onAddRequestResult&&await this.onAddRequestResult(i),this.deleteUnconfirmedRequests(),i}async deleteUnconfirmedRequests(){const t=await this.getRequestIds(),{requestId:r}=this.getRequest();for(const n of t)if(n!=r)try{await super.signAndSendTransaction({receiverId:this.accountId,actions:[c.functionCall("delete_request",{request_id:n},e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT)]})}catch(e){console.warn("Attempt to delete an earlier request before 15 minutes failed. Will try again.")}}async getRequestIds(){return this.viewFunction(this.accountId,"list_request_ids")}getRequest(){return this.storage?JSON.parse(this.storage.getItem(e.exports.MULTISIG_STORAGE_KEY)||"{}"):f[e.exports.MULTISIG_STORAGE_KEY]}setRequest(t){if(this.storage)return this.storage.setItem(e.exports.MULTISIG_STORAGE_KEY,JSON.stringify(t));f[e.exports.MULTISIG_STORAGE_KEY]=t}constructor(e,t,r){super(e,t),this.storage=r.storage,this.onAddRequestResult=r.onAddRequestResult}}e.exports.AccountMultisig=d;e.exports.Account2FA=class extends d{async signAndSendTransaction(...e){if("string"==typeof e[0]){return a.default("Account.signAndSendTransaction(receiverId, actions")("use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead"),this.__signAndSendTransaction({receiverId:e[0],actions:e[1]})}return this.__signAndSendTransaction(e[0])}async __signAndSendTransaction({receiverId:e,actions:t}){await super.signAndSendTransaction({receiverId:e,actions:t}),await this.sendCode();const r=await this.promptAndVerify();return this.onConfirmResult&&await this.onConfirmResult(r),r}async deployMultisig(t){const{accountId:n}=this,o=(await this.getRecoveryMethods()).data.filter((({kind:e,publicKey:t})=>("phrase"===e||"ledger"===e)&&null!==t)).map((e=>e.publicKey)),a=(await this.getAccessKeys()).filter((({public_key:e,access_key:{permission:t}})=>"FullAccess"===t&&!o.includes(e))).map((e=>e.public_key)).map(p),i=p((await this.postSignedJson("/2fa/getAccessKey",{accountId:n})).publicKey),s=r.from(JSON.stringify({num_confirmations:2})),u=[...a.map((e=>c.deleteKey(e))),...a.map((t=>c.addKey(t,c.functionCallAccessKey(n,e.exports.MULTISIG_CHANGE_METHODS,null)))),c.addKey(i,c.functionCallAccessKey(n,e.exports.MULTISIG_CONFIRM_METHODS,null)),c.deployContract(t)];return"11111111111111111111111111111111"===(await this.state()).code_hash&&u.push(c.functionCall("new",s,e.exports.MULTISIG_GAS,e.exports.MULTISIG_DEPOSIT)),console.log("deploying multisig contract for",n),await super.signAndSendTransactionWithAccount(n,u)}async disable(e){const{accountId:t}=this,r=(await this.getAccessKeys()).filter((({access_key:e})=>"FullAccess"!==e.permission)).filter((({access_key:e})=>{const r=e.permission.FunctionCall;return r.receiver_id===t&&4===r.method_names.length&&r.method_names.includes("add_request_and_confirm")})),n=u.PublicKey.from((await this.postSignedJson("/2fa/getAccessKey",{accountId:t})).publicKey),o=[c.deleteKey(n),...r.map((({public_key:e})=>c.deleteKey(u.PublicKey.from(e)))),...r.map((({public_key:e})=>c.addKey(u.PublicKey.from(e),null))),c.deployContract(e)];return console.log("disabling 2fa for",t),await this.signAndSendTransaction({receiverId:t,actions:o})}async sendCodeDefault(){const{accountId:e}=this,{requestId:t}=this.getRequest(),r=await this.get2faMethod();return await this.postSignedJson("/2fa/send",{accountId:e,method:r,requestId:t}),t}async getCodeDefault(e){throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is "email" or "phone".')}async promptAndVerify(){const e=await this.get2faMethod(),t=await this.getCode(e);try{return await this.verifyCode(t)}catch(e){if(console.warn("Error validating security code:",e),e.toString().includes("invalid 2fa code provided")||e.toString().includes("2fa code not valid"))return await this.promptAndVerify();throw e}}async verifyCodeDefault(e){const{accountId:t}=this,r=this.getRequest();if(!r)throw new Error("no request pending");const{requestId:n}=r;return await this.postSignedJson("/2fa/verify",{accountId:t,securityCode:e,requestId:n})}async getRecoveryMethods(){const{accountId:e}=this;return{accountId:e,data:await this.postSignedJson("/account/recoveryMethods",{accountId:e})}}async get2faMethod(){let{data:e}=await this.getRecoveryMethods();if(e&&e.length&&(e=e.find((e=>0===e.kind.indexOf("2fa-")))),!e)return null;const{kind:t,detail:r}=e;return{kind:t,detail:r}}async signatureFor(){const{accountId:e}=this,t=(await this.connection.provider.block({finality:"final"})).header.height.toString(),n=await this.connection.signer.signMessage(r.from(t),e,this.connection.networkId);return{blockNumber:t,blockNumberSignature:r.from(n.signature).toString("base64")}}async postSignedJson(e,t){return await l.fetchJson(this.helperUrl+e,JSON.stringify({...t,...await this.signatureFor()}))}constructor(e,t,r){super(e,t,r),this.helperUrl="https://helper.testnet.near.org",this.helperUrl=r.helperUrl||this.helperUrl,this.storage=r.storage,this.sendCode=r.sendCode||this.sendCodeDefault,this.getCode=r.getCode||this.getCodeDefault,this.verifyCode=r.verifyCode||this.verifyCodeDefault,this.onConfirmResult=r.onConfirmResult}};const p=e=>u.PublicKey.from(e),h=(t,n,o)=>t.map((t=>{const a=t.enum,{gas:i,publicKey:s,methodName:u,args:c,deposit:l,accessKey:f,code:d}=t[a],p={type:a[0].toUpperCase()+a.substr(1),gas:i&&i.toString()||void 0,public_key:s&&(h=s,h.toString().replace("ed25519:",""))||void 0,method_name:u,args:c&&r.from(c).toString("base64")||void 0,code:d&&r.from(d).toString("base64")||void 0,amount:l&&l.toString()||void 0,deposit:l&&l.toString()||"0",permission:void 0};var h;if(f&&(o===n&&"fullAccess"!==f.permission.enum&&(p.permission={receiver_id:n,allowance:e.exports.MULTISIG_ALLOWANCE.toString(),method_names:e.exports.MULTISIG_CHANGE_METHODS}),"functionCall"===f.permission.enum)){const{receiverId:e,methodNames:t,allowance:r}=f.permission.functionCall;p.permission={receiver_id:e,allowance:r&&r.toString()||void 0,method_names:t}}return p}))})),parcelRequire.register("egBB3",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.UrlAccountCreator=e.exports.LocalAccountCreator=e.exports.AccountCreator=void 0;var r=parcelRequire("kQCkE");class n{}e.exports.AccountCreator=n;e.exports.LocalAccountCreator=class extends n{async createAccount(e,t){await this.masterAccount.createAccount(e,t,this.initialBalance)}constructor(e,t){super(),this.masterAccount=e,this.initialBalance=t}};e.exports.UrlAccountCreator=class extends n{async createAccount(e,t){await r.fetchJson(`${this.helperUrl}/account`,JSON.stringify({newAccountId:e,newAccountPublicKey:t.toString()}))}constructor(e,t){super(),this.connection=e,this.helperUrl=t}}})),parcelRequire.register("eXozz",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Connection=void 0;var r=parcelRequire("8wUQ8"),n=parcelRequire("h9UaC");class o{static fromConfig(e){const t=function(e){switch(e.type){case void 0:return e;case"JsonRpcProvider":return new r.JsonRpcProvider({...e.args});default:throw new Error(`Unknown provider type ${e.type}`)}}(e.provider),a=function(e){switch(e.type){case void 0:return e;case"InMemorySigner":return new n.InMemorySigner(e.keyStore);default:throw new Error(`Unknown signer type ${e.type}`)}}(e.signer);return new o(e.networkId,t,a)}constructor(e,t,r){this.networkId=e,this.provider=t,this.signer=r}}e.exports.Connection=o})),parcelRequire.register("h9UaC",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.InMemorySigner=e.exports.Signer=void 0;const n=r(parcelRequire("9AzhF"));var o=parcelRequire("h9FZF"),a=parcelRequire("72EX5");class i{}e.exports.Signer=i;class s extends i{static async fromKeyPair(e,t,r){const n=new a.InMemoryKeyStore;return await n.setKey(e,t,r),new s(n)}async createKey(e,t){const r=o.KeyPair.fromRandom("ed25519");return await this.keyStore.setKey(t,e,r),r.getPublicKey()}async getPublicKey(e,t){const r=await this.keyStore.getKey(t,e);return null===r?null:r.getPublicKey()}async signMessage(e,t,r){const o=new Uint8Array(n.default.sha256.array(e));if(!t)throw new Error("InMemorySigner requires provided account id");const a=await this.keyStore.getKey(r,t);if(null===a)throw new Error(`Key for ${t} not found in ${r}`);return a.sign(o)}toString(){return`InMemorySigner(${this.keyStore})`}constructor(e){super(),this.keyStore=e}}e.exports.InMemorySigner=s})),parcelRequire.register("2etLB",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Contract=void 0;const n=r(parcelRequire("aVh2m")),o=r(parcelRequire("9P71R"));var a=parcelRequire("8wUQ8"),i=parcelRequire("15muY");function s(e,t){return{[e]:(...e)=>t(...e)}[e]}const u=e=>e&&void 0!==e.byteLength&&e.byteLength===e.length,c=e=>"[object Object]"===Object.prototype.toString.call(e);e.exports.Contract=class{async _changeMethod({args:e,methodName:t,gas:r,amount:o,meta:s,callbackUrl:u}){!function(e){const t="number, decimal string or BN";for(const r of Object.keys(e)){const o=e[r];if(o&&!n.default.isBN(o)&&isNaN(o))throw new i.ArgumentTypeError(r,t,o)}}({gas:r,amount:o});const c=await this.account.functionCall({contractId:this.contractId,methodName:t,args:e,gas:r,attachedDeposit:o,walletMeta:s,walletCallbackUrl:u});return a.getTransactionLastResult(c)}constructor(e,t,r){this.account=e,this.contractId=t;const{viewMethods:n=[],changeMethods:a=[]}=r;n.forEach((e=>{Object.defineProperty(this,e,{writable:!1,enumerable:!0,value:s(e,(async(t={},r={},...n)=>{if(n.length||!c(t)&&!u(t)||!c(r))throw new i.PositionalArgsError;return this.account.viewFunction(this.contractId,e,t,r)}))})})),a.forEach((e=>{Object.defineProperty(this,e,{writable:!1,enumerable:!0,value:s(e,(async(...t)=>{if(t.length&&(t.length>3||!c(t[0])&&!u(t[0])))throw new i.PositionalArgsError;if(t.length>1||!t[0]||!t[0].args){return o.default("contract.methodName(args, gas, amount)")("use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead"),this._changeMethod({methodName:e,args:t[0],gas:t[1],amount:t[2]})}return this._changeMethod({methodName:e,...t[0]})}))})}))}}})),parcelRequire.register("jbGiX",(function(e,t){var r=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.Near=void 0;const n=r(parcelRequire("aVh2m"));var o=parcelRequire("3BYEc"),a=parcelRequire("eXozz"),i=parcelRequire("2etLB"),s=parcelRequire("egBB3");e.exports.Near=class{async account(e){return new o.Account(this.connection,e)}async createAccount(e,t){if(!this.accountCreator)throw new Error("Must specify account creator, either via masterAccount or helperUrl configuration settings.");return await this.accountCreator.createAccount(e,t),new o.Account(this.connection,e)}async loadContract(e,t){const r=new o.Account(this.connection,t.sender);return new i.Contract(r,e,t)}async sendTokens(e,t,r){console.warn("near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.");const n=new o.Account(this.connection,t);return(await n.sendMoney(r,e)).transaction_outcome.id}constructor(e){if(this.config=e,this.connection=a.Connection.fromConfig({networkId:e.networkId,provider:{type:"JsonRpcProvider",args:{url:e.nodeUrl,headers:e.headers}},signer:e.signer||{type:"InMemorySigner",keyStore:e.keyStore||e.deps.keyStore}}),e.masterAccount){const t=e.initialBalance?new n.default(e.initialBalance):new n.default("500000000000000000000000000");this.accountCreator=new s.LocalAccountCreator(new o.Account(this.connection,e.masterAccount),t)}else e.helperUrl?this.accountCreator=new s.UrlAccountCreator(this.connection,e.helperUrl):this.accountCreator=null}}})),parcelRequire.register("afz2B",(function(e,t){var r=parcelRequire("6i6c3").Buffer,n=e.exports&&e.exports.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.ConnectedWalletAccount=e.exports.WalletAccount=e.exports.WalletConnection=void 0;const o=n(parcelRequire("9P71R"));var a=parcelRequire("3BYEc"),i=parcelRequire("iRwne"),s=parcelRequire("2FeSb"),u=parcelRequire("fXZ66");u=parcelRequire("fXZ66");const c="pending_key";class l{isSignedIn(){return!!this._authData.accountId}getAccountId(){return this._authData.accountId||""}async requestSignIn(e={},t,r,n){let a;if("string"==typeof e){o.default("requestSignIn(contractId, title)")("`title` ignored; use `requestSignIn({ contractId, methodNames, successUrl, failureUrl })` instead"),a={contractId:e,successUrl:r,failureUrl:n}}else a=e;const i=new URL(window.location.href),u=new URL(this._walletBaseUrl+"/login/");if(u.searchParams.set("success_url",a.successUrl||i.href),u.searchParams.set("failure_url",a.failureUrl||i.href),a.contractId){const e=await this._near.account(a.contractId);await e.state(),u.searchParams.set("contract_id",a.contractId);const t=s.KeyPair.fromRandom("ed25519");u.searchParams.set("public_key",t.getPublicKey().toString()),await this._keyStore.setKey(this._networkId,c+t.getPublicKey(),t)}a.methodNames&&a.methodNames.forEach((e=>{u.searchParams.append("methodNames",e)})),window.location.assign(u.toString())}async requestSignTransactions(...e){if(Array.isArray(e[0])){return o.default("WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)")("use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead"),this._requestSignTransactions({transactions:e[0],callbackUrl:e[1],meta:e[2]})}return this._requestSignTransactions(e[0])}async _requestSignTransactions({transactions:e,meta:t,callbackUrl:n}){const o=new URL(window.location.href),a=new URL("sign",this._walletBaseUrl);a.searchParams.set("transactions",e.map((e=>u.serialize(i.SCHEMA,e))).map((e=>r.from(e).toString("base64"))).join(",")),a.searchParams.set("callbackUrl",n||o.href),t&&a.searchParams.set("meta",t),window.location.assign(a.toString())}async _completeSignInWithAccessKey(){const e=new URL(window.location.href),t=e.searchParams.get("public_key")||"",r=(e.searchParams.get("all_keys")||"").split(","),n=e.searchParams.get("account_id")||"";n&&(this._authData={accountId:n,allKeys:r},window.localStorage.setItem(this._authDataKey,JSON.stringify(this._authData)),t&&await this._moveKeyFromTempToPermanent(n,t)),e.searchParams.delete("public_key"),e.searchParams.delete("all_keys"),e.searchParams.delete("account_id"),e.searchParams.delete("meta"),e.searchParams.delete("transactionHashes"),window.history.replaceState({},document.title,e.toString())}async _moveKeyFromTempToPermanent(e,t){const r=await this._keyStore.getKey(this._networkId,c+t);await this._keyStore.setKey(this._networkId,e,r),await this._keyStore.removeKey(this._networkId,c+t)}signOut(){this._authData={},window.localStorage.removeItem(this._authDataKey)}account(){return this._connectedAccount||(this._connectedAccount=new f(this,this._near.connection,this._authData.accountId)),this._connectedAccount}constructor(e,t){this._near=e;const r=t+"_wallet_auth_key",n=JSON.parse(window.localStorage.getItem(r));this._networkId=e.config.networkId,this._walletBaseUrl=e.config.walletUrl,t=t||e.config.contractName||"default",this._keyStore=e.connection.signer.keyStore,this._authData=n||{allKeys:[]},this._authDataKey=r,this.isSignedIn()||this._completeSignInWithAccessKey()}}e.exports.WalletConnection=l,e.exports.WalletAccount=l;class f extends a.Account{signAndSendTransaction(...e){return"string"==typeof e[0]?this._signAndSendTransaction({receiverId:e[0],actions:e[1]}):this._signAndSendTransaction(e[0])}async _signAndSendTransaction({receiverId:e,actions:t,walletMeta:r,walletCallbackUrl:n=window.location.href}){const o=await this.connection.signer.getPublicKey(this.accountId,this.connection.networkId);let a=await this.accessKeyForTransaction(e,t,o);if(!a)throw new Error(`Cannot find matching key for transaction sent to ${e}`);if(o&&o.toString()===a.public_key)try{return await super.signAndSendTransaction({receiverId:e,actions:t})}catch(r){if("NotEnoughAllowance"!==r.type)throw r;a=await this.accessKeyForTransaction(e,t)}const c=await this.connection.provider.block({finality:"final"}),l=u.baseDecode(c.header.hash),f=s.PublicKey.from(a.public_key),d=a.access_key.nonce+1,p=i.createTransaction(this.accountId,f,e,d,t,l);return await this.walletConnection.requestSignTransactions({transactions:[p],meta:r,callbackUrl:n}),new Promise(((e,t)=>{setTimeout((()=>{t(new Error("Failed to redirect to sign transaction"))}),1e3)}))}async accessKeyMatchesTransaction(e,t,r){const{access_key:{permission:n}}=e;if("FullAccess"===n)return!0;if(n.FunctionCall){const{receiver_id:e,method_names:o}=n.FunctionCall;if(e===this.accountId&&o.includes("add_request_and_confirm"))return!0;if(e===t){if(1!==r.length)return!1;const[{functionCall:e}]=r;return e&&(!e.deposit||"0"===e.deposit.toString())&&(0===o.length||o.includes(e.methodName))}}return!1}async accessKeyForTransaction(e,t,r){const n=await this.getAccessKeys();if(r){const o=n.find((e=>e.public_key.toString()===r.toString()));if(o&&await this.accessKeyMatchesTransaction(o,e,t))return o}const o=this.walletConnection._authData.allKeys;for(const r of n)if(-1!==o.indexOf(r.public_key)&&await this.accessKeyMatchesTransaction(r,e,t))return r;return null}constructor(e,t,r){super(t,r),this.walletConnection=e}}e.exports.ConnectedWalletAccount=f})),parcelRequire.register("33PUJ",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.connect=void 0;var r=parcelRequire("jbGiX");e.exports.connect=async function(e){return new r.Near(e)}})),parcelRequire.register("eh5sb",(function(e,t){parcelRequire("bdrfb");var r,n=parcelRequire("iULtd");r=n("Error.captureStackTrace")?parcelRequire("23qni"):n("Error.prototype.stack")?parcelRequire("kjK6A"):parcelRequire("7lTUT"),e.exports=r()})),parcelRequire.register("bdrfb",(function(e,t){parcelRequire("iULtd").check("es5")})),parcelRequire.register("iULtd",(function(e,t){parcelRequire("loowO"),e.exports=parcelRequire("1SUFG")})),parcelRequire.register("loowO",(function(e,t){var r=parcelRequire("1SUFG"),n=r.define,o=r.test;n("strict mode",(function(){return void 0===this})),n("arguments.callee.caller",(function(){try{return function(){return arguments.callee.caller}()===arguments.callee}catch(e){return!1}})),n("es5",(function(){return o("Array.prototype.forEach")&&o("Array.prototype.map")&&o("Function.prototype.bind")&&o("Object.create")&&o("Object.defineProperties")&&o("Object.defineProperty")&&o("Object.prototype.hasOwnProperty")})),n("Array.prototype.forEach",(function(){return Array.prototype.forEach})),n("Array.prototype.map",(function(){return Array.prototype.map})),n("Function.prototype.bind",(function(){return Function.prototype.bind})),n("Object.create",(function(){return Object.create})),n("Object.defineProperties",(function(){return Object.defineProperties})),n("Object.defineProperty",(function(){return Object.defineProperty})),n("Object.prototype.hasOwnProperty",(function(){return Object.prototype.hasOwnProperty})),n("Error.captureStackTrace",(function(){return Error.captureStackTrace})),n("Error.prototype.stack",(function(){try{throw new Error}catch(e){return e.stack||e.stacktrace}}))})),parcelRequire.register("1SUFG",(function(e,t){var r=new(parcelRequire("2YnQY")),n=function(e){return r.test(e)};n.define=function(e,t){r.define(e,t)},n.check=function(e){r.check(e)},n.test=n,e.exports=n})),parcelRequire.register("2YnQY",(function(e,t){var r=function(){this.tests={},this.cache={}};r.prototype={constructor:r,define:function(e,t){if("string"!=typeof e||!(t instanceof Function))throw new Error("Invalid capability definition.");if(this.tests[e])throw new Error('Duplicated capability definition by "'+e+'".');this.tests[e]=t},check:function(e){if(!this.test(e))throw new Error('The current environment does not support "'+e+'", therefore we cannot continue.')},test:function(e){if(void 0!==this.cache[e])return this.cache[e];if(!this.tests[e])throw new Error('Unknown capability with name "'+e+'".');var t=this.tests[e];return this.cache[e]=!!t(),this.cache[e]}},e.exports=r})),parcelRequire.register("23qni",(function(e,t){var r=parcelRequire("lYmt4");e.exports=function(){return Error.getStackTrace=function(e){return e.stack},{prepareStackTrace:r}}})),parcelRequire.register("lYmt4",(function(e,t){e.exports=function(e,t,r){var n="";if(n+=e.name||"Error",n+=": "+(e.message||""),r instanceof Array)for(var o in r){n+="\n   # "+r[o]}for(var a in t){n+="\n   at "+t[a].toString()}return n}})),parcelRequire.register("kjK6A",(function(e,t){var r=parcelRequire("4R3gV"),n=parcelRequire("3Hzyr"),o=parcelRequire("e0Gd4").cache,a=parcelRequire("lYmt4");e.exports=function(){return Error.captureStackTrace=function e(t,i){var s=[e];i&&s.push(i);var u=r.getInstance().captureFrameStrings(s);Object.defineProperties(t,{stack:{configurable:!0,get:o((function(){var e=n.getInstance().getFrames(u.frameStrings,u.functionValues);return(Error.prepareStackTrace||a)(t,e,undefined)}))},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})},Error.getStackTrace=function(e){if(e.cachedStack)return e.stack;var t,o=r.getInstance().getFrameStrings(e),i=[];o?i=n.getInstance().getFrames(o,[]):t=["The stack is not readable by unthrown errors in this environment."];var s=(Error.prepareStackTrace||a)(e,i,t);if(o)try{Object.defineProperties(e,{stack:{configurable:!0,writable:!0,enumerable:!1,value:s},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})}catch(e){}return s},{prepareStackTrace:a}}})),parcelRequire.register("4R3gV",(function(e,t){var r=parcelRequire("5mwlm").Class,n=parcelRequire("5mwlm").abstractMethod,o=parcelRequire("e0Gd4").eachCombination,a=parcelRequire("e0Gd4").cache,i=parcelRequire("iULtd"),s=r(Object,{prototype:{captureFrameStrings:function(e){var t=this.createError();e.unshift(this.captureFrameStrings),e.unshift(this.createError);var r=this.getFrameStrings(t),n=r.slice(e.length),o=[];if(i("arguments.callee.caller")){var a=[this.createError,this.captureFrameStrings];try{for(var s=arguments.callee;s=s.caller;)a.push(s)}catch(e){}o=a.slice(e.length)}return{frameStrings:n,functionValues:o}},getFrameStrings:function(e){var t=e.message||"",r=e.name||"",n=this.getStackString(e);if(void 0!==n){var o=n.split("\n"),a=0,i=o.length;return this.hasHeader&&(a+=r.split("\n").length+t.split("\n").length-1),this.hasFooter&&(i-=1),o.slice(a,i)}},createError:n,getStackString:n,hasHeader:void 0,hasFooter:void 0}}),u=r(Object,{prototype:{calibrateClass:function(e){return this.calibrateMethods(e)&&this.calibrateEnvelope(e)},calibrateMethods:function(e){try{o([[function(e){return new Error(e)},function(e){try{throw new Error(e)}catch(e){return e}}],[function(e){return e.stack},function(e){return e.stacktrace}]],(function(e,t){if(t(e()))throw{getStackString:t,createError:e}}))}catch(t){return r.merge.call(e,{prototype:t}),!0}return!1},calibrateEnvelope:function(e){var t=(0,e.prototype.getStackString)((0,e.prototype.createError)("marker")).split("\n");return r.merge.call(e,{prototype:{hasHeader:/marker/.test(t[0]),hasFooter:""===t[t.length-1]}}),!0}}});e.exports={getClass:a((function(){var e;if(e)return e;if(e=r(s,{}),!(new u).calibrateClass(e))throw new Error("Cannot read Error.prototype.stack in this environment.");return e})),getInstance:a((function(){return new(this.getClass())}))}})),parcelRequire.register("5mwlm",(function(e,t){parcelRequire("bdrfb"),e.exports=parcelRequire("4Ex17")})),parcelRequire.register("4Ex17",(function(e,t){e.exports={Class:parcelRequire("eyy1T"),abstractMethod:parcelRequire("49vlR")}})),parcelRequire.register("eyy1T",(function(e,t){var r=function(){var e=Object.create({Source:Object,config:{},buildArgs:[]});function t(t){var r="config";if(t instanceof Function)r="Source";else if(t instanceof Array)r="buildArgs";else{if(!(t instanceof Object))throw new Error("Invalid configuration option.");r="config"}if(e.hasOwnProperty(r))throw new Error("Duplicated configuration option: "+r+".");e[r]=t}for(var n=0,o=arguments.length;n<o;++n)t(arguments[n]);var a=e.Source,i=e.config,s=e.buildArgs;return(a.extend||r.extend).call(a,i,s)};r.factory=function(){return function(){var e=this;e.build instanceof Function&&e.build.apply(e,arguments),e.init instanceof Function&&e.init.apply(e,arguments)}},r.extend=function(e,t){var n,o=this;return e||(e={}),e.prototype instanceof Object&&e.prototype.constructor!==Object?n=e.prototype.constructor:e.factory instanceof Function&&(n=e.factory.call(o)),((n=(o.clone||r.clone).call(o,n,t)).merge||r.merge).call(n,e),n},r.prototype.extend=function(e,t){var n=(this.clone||r.prototype.clone).apply(this,t);return(n.merge||r.prototype.merge).call(n,e),n},r.clone=function(e,t){var n=this;for(var o in e instanceof Function||(e=(n.factory||r.factory).call(n)),e.prototype=(n.prototype.clone||r.prototype.clone).apply(n.prototype,t||[]),e.prototype.constructor=e,n)"prototype"!==o&&(e[o]=n[o]);return e},r.prototype.clone=function(){var e=this,t=Object.create(e);return t.build instanceof Function&&t.build.apply(t,arguments),t},r.merge=function(e){var t=this;for(var n in e)"prototype"!==n&&(t[n]=e[n]);return e.prototype instanceof Object&&(t.prototype.merge||r.prototype.merge).call(t.prototype,e.prototype),t},r.prototype.merge=function(e){for(var t in e)"constructor"!==t&&(this[t]=e[t]);return this},r.absorb=function(e){var t=this;for(var n in e)"prototype"===n||void 0!==t[n]&&t[n]!==Function.prototype[n]||(t[n]=e[n]);return e.prototype instanceof Object&&(t.prototype.absorb||r.prototype.absorb).call(t.prototype,e.prototype),t},r.prototype.absorb=function(e){var t=this;for(var r in e)"constructor"===r||void 0!==t[r]&&t[r]!==Object.prototype[r]||(t[r]=e[r]);return t},r.getAncestor=function(){var e=this;if(e!==e.prototype.constructor)return e.prototype.constructor},r.newInstance=function(){var e=this,t=Object.create(this.prototype);return e.apply(t,arguments),t},e.exports=r})),parcelRequire.register("49vlR",(function(e,t){e.exports=function(){throw new Error("Not implemented.")}})),parcelRequire.register("e0Gd4",(function(e,t){e.exports=parcelRequire("dqkSU")})),parcelRequire.register("dqkSU",(function(e,t){e.exports={cache:parcelRequire("58TRq"),eachCombination:parcelRequire("Rbu5T")}})),parcelRequire.register("58TRq",(function(e,t){e.exports=function(e){var t,r=!1;return e instanceof Function||(r=!0,t=e,e=null),function(){return r||(r=!0,t=e.apply(this,arguments),e=null),t}}})),parcelRequire.register("Rbu5T",(function(e,t){e.exports=function e(t,r,n){if(n||(n=[]),n.length<t.length){var o=t[n.length];for(var a in o)n[n.length]=o[a],e(t,r,n),--n.length}else r.apply(null,n)}})),parcelRequire.register("3Hzyr",(function(e,t){var r=parcelRequire("5mwlm").Class,n=parcelRequire("hd4SN"),o=parcelRequire("e0Gd4").cache,a=r(Object,{prototype:{stackParser:null,frameParser:null,locationParsers:null,constructor:function(e){r.prototype.merge.call(this,e)},getFrames:function(e,t){for(var r=[],n=0,o=e.length;n<o;++n)r[n]=this.getFrame(e[n],t[n]);return r},getFrame:function(e,t){return new n({frameString:e,functionValue:t})}}});e.exports={getClass:o((function(){return a})),getInstance:o((function(){return new(this.getClass())}))}})),parcelRequire.register("hd4SN",(function(e,t){var r=parcelRequire("5mwlm").Class,n=parcelRequire("5mwlm").abstractMethod,o=r(Object,{prototype:{init:r.prototype.merge,frameString:void 0,toString:function(){return this.frameString},functionValue:void 0,getThis:n,getTypeName:n,getFunction:function(){return this.functionValue},getFunctionName:n,getMethodName:n,getFileName:n,getLineNumber:n,getColumnNumber:n,getEvalOrigin:n,isTopLevel:n,isEval:n,isNative:n,isConstructor:n}});e.exports=o})),parcelRequire.register("7lTUT",(function(e,t){var r=parcelRequire("e0Gd4").cache,n=parcelRequire("lYmt4");e.exports=function(){return Error.captureStackTrace=function(e,t){Object.defineProperties(e,{stack:{configurable:!0,get:r((function(){return(Error.prepareStackTrace||n)(e,[])}))},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})},Error.getStackTrace=function(e){if(e.cachedStack)return e.stack;var t=(Error.prepareStackTrace||n)(e,[]);try{Object.defineProperties(e,{stack:{configurable:!0,writable:!0,enumerable:!1,value:t},cachedStack:{configurable:!0,writable:!0,enumerable:!1,value:!0}})}catch(e){}return t},{prepareStackTrace:n}}}));var $3f267bc2273a752f$exports={};parcelRequire("4SSe9").register(JSON.parse('{"5BSJE":"index.82b276bf.js","bLmxU":"logo-black.54439fde.svg","8PPWP":"unchain_logo.1e4f0fe1.png","6GgR1":"cross.ec329b3d.png","f7XaA":"top_img.935bf645.avif","5oxVe":"like_icon.ee688b38.png","kIad3":"index.ac3b5833.css"}'));var $824c049f32d4395d$exports={},$f11ec298ebcca059$export$882461b6382ed46c,$f11ec298ebcca059$export$757ceba2d55c277e;$824c049f32d4395d$exports=parcelRequire("2nzLi"),parcelRequire("7fPBF");var $b4ba1c853f6e1116$exports={},$f11ec298ebcca059$var$i,$f11ec298ebcca059$var$c,$f11ec298ebcca059$var$o,$f11ec298ebcca059$var$c1,$f11ec298ebcca059$var$h,$f11ec298ebcca059$var$o1;function $b4ba1c853f6e1116$var$checkDCE(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($b4ba1c853f6e1116$var$checkDCE)}catch(e){console.error(e)}}$b4ba1c853f6e1116$var$checkDCE(),$b4ba1c853f6e1116$exports=parcelRequire("6EA3T"),$f11ec298ebcca059$export$882461b6382ed46c=$b4ba1c853f6e1116$exports.createRoot,$f11ec298ebcca059$export$757ceba2d55c277e=$b4ba1c853f6e1116$exports.hydrateRoot;var $dc45162978353a1a$exports={},$dc45162978353a1a$var$runtime=function(e){var t,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof y?t:y,a=Object.create(o.prototype),i=new M(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return C()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var s=E(i,r);if(s){if(s===m)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=l(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function l(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",m={};function y(){}function g(){}function b(){}var v={};u(v,a,(function(){return this}));var w=Object.getPrototypeOf,$=w&&w(w(R([])));$&&$!==r&&n.call($,a)&&(v=$);var x=b.prototype=y.prototype=Object.create(v);function _(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,s){var u=l(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,s)}),(function(e){r("throw",e,i,s)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,s)}))}s(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function E(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,E(e,r),"throw"===r.method))return m;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var o=l(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,m;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,m):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function A(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function M(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function R(e){if(e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:C}}function C(){return{value:t,done:!0}}return g.prototype=b,u(x,"constructor",b),u(b,"constructor",g),g.displayName=u(b,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,u(e,s,"GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},_(S.prototype),u(S.prototype,i,(function(){return this})),e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},_(x),u(x,s,"Generator"),u(x,a,(function(){return this})),u(x,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=R,M.prototype={constructor:M,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return s.type="throw",s.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],s=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),A(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;A(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:R(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),m}},e}($dc45162978353a1a$exports);try{regeneratorRuntime=$dc45162978353a1a$var$runtime}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=$dc45162978353a1a$var$runtime:Function("r","regeneratorRuntime = r")($dc45162978353a1a$var$runtime)}parcelRequire("7fPBF");var $f41ea6ee3dd223a9$exports={};$f41ea6ee3dd223a9$exports=new URL(parcelRequire("4SSe9").resolve("bLmxU"),import.meta.url).toString();var $30b5b0fdd18ea070$exports={};$30b5b0fdd18ea070$exports=new URL(parcelRequire("4SSe9").resolve("8PPWP"),import.meta.url).toString();var $4c27f4ec102ffbfd$exports={};$4c27f4ec102ffbfd$exports=new URL(parcelRequire("4SSe9").resolve("6GgR1"),import.meta.url).toString();var $614c648986e51714$exports={};$614c648986e51714$exports=new URL(parcelRequire("4SSe9").resolve("f7XaA"),import.meta.url).toString(),parcelRequire("7fPBF");var $7fPBF=parcelRequire("7fPBF"),$91da240b76094466$export$e19cd5f9376f8cee,Action;function $f43c50d92a19d876$export$2e2bcd8739ae039(){return $f43c50d92a19d876$export$2e2bcd8739ae039=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},$f43c50d92a19d876$export$2e2bcd8739ae039.apply(this,arguments)}Action=$91da240b76094466$export$e19cd5f9376f8cee||($91da240b76094466$export$e19cd5f9376f8cee={}),Action.Pop="POP",Action.Push="PUSH",Action.Replace="REPLACE";var $91da240b76094466$var$readOnly=function(e){return e};function $91da240b76094466$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}var $91da240b76094466$var$BeforeUnloadEventType="beforeunload",$91da240b76094466$var$HashChangeEventType="hashchange",$91da240b76094466$var$PopStateEventType="popstate";function $91da240b76094466$export$719fc203c4e16dee(e){void 0===e&&(e={});var t=e.window,r=void 0===t?document.defaultView:t,n=r.history;function o(){var e=r.location,t=e.pathname,o=e.search,a=e.hash,i=n.state||{};return[i.idx,$91da240b76094466$var$readOnly({pathname:t,search:o,hash:a,state:i.usr||null,key:i.key||"default"})]}var a=null;r.addEventListener($91da240b76094466$var$PopStateEventType,(function(){if(a)f.call(a),a=null;else{var e=$91da240b76094466$export$e19cd5f9376f8cee.Pop,t=o(),r=t[0],n=t[1];if(f.length){if(null!=r){var i=u-r;i&&(a={action:e,location:n,retry:function(){g(-1*i)}},g(i))}}else y(e)}}));var i=$91da240b76094466$export$e19cd5f9376f8cee.Pop,s=o(),u=s[0],c=s[1],l=$91da240b76094466$var$createEvents(),f=$91da240b76094466$var$createEvents();function d(e){return"string"==typeof e?e:$91da240b76094466$export$fe53371bee54353d(e)}function p(e,t){return void 0===t&&(t=null),$91da240b76094466$var$readOnly($f43c50d92a19d876$export$2e2bcd8739ae039({pathname:c.pathname,hash:"",search:""},"string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e,{state:t,key:$91da240b76094466$var$createKey()}))}function h(e,t){return[{usr:e.state,key:e.key,idx:t},d(e)]}function m(e,t,r){return!f.length||(f.call({action:e,location:t,retry:r}),!1)}function y(e){i=e;var t=o();u=t[0],c=t[1],l.call({action:i,location:c})}function g(e){n.go(e)}null==u&&(u=0,n.replaceState($f43c50d92a19d876$export$2e2bcd8739ae039({},n.state,{idx:u}),""));var b={get action(){return i},get location(){return c},createHref:d,push:function e(t,o){var a=$91da240b76094466$export$e19cd5f9376f8cee.Push,i=p(t,o);if(m(a,i,(function(){e(t,o)}))){var s=h(i,u+1),c=s[0],l=s[1];try{n.pushState(c,"",l)}catch(e){r.location.assign(l)}y(a)}},replace:function e(t,r){var o=$91da240b76094466$export$e19cd5f9376f8cee.Replace,a=p(t,r);if(m(o,a,(function(){e(t,r)}))){var i=h(a,u),s=i[0],c=i[1];n.replaceState(s,"",c),y(o)}},go:g,back:function(){g(-1)},forward:function(){g(1)},listen:function(e){return l.push(e)},block:function(e){var t=f.push(e);return 1===f.length&&r.addEventListener($91da240b76094466$var$BeforeUnloadEventType,$91da240b76094466$var$promptBeforeUnload),function(){t(),f.length||r.removeEventListener($91da240b76094466$var$BeforeUnloadEventType,$91da240b76094466$var$promptBeforeUnload)}}};return b}function $91da240b76094466$export$b71fdd3798280242(e){void 0===e&&(e={});var t=e.window,r=void 0===t?document.defaultView:t,n=r.history;function o(){var e=$91da240b76094466$export$8ccf933b0513f8d0(r.location.hash.substr(1)),t=e.pathname,o=void 0===t?"/":t,a=e.search,i=void 0===a?"":a,s=e.hash,u=void 0===s?"":s,c=n.state||{};return[c.idx,$91da240b76094466$var$readOnly({pathname:o,search:i,hash:u,state:c.usr||null,key:c.key||"default"})]}var a=null;function i(){if(a)d.call(a),a=null;else{var e=$91da240b76094466$export$e19cd5f9376f8cee.Pop,t=o(),r=t[0],n=t[1];if(d.length){if(null!=r){var i=c-r;i&&(a={action:e,location:n,retry:function(){b(-1*i)}},b(i))}}else g(e)}}r.addEventListener($91da240b76094466$var$PopStateEventType,i),r.addEventListener($91da240b76094466$var$HashChangeEventType,(function(){$91da240b76094466$export$fe53371bee54353d(o()[1])!==$91da240b76094466$export$fe53371bee54353d(l)&&i()}));var s=$91da240b76094466$export$e19cd5f9376f8cee.Pop,u=o(),c=u[0],l=u[1],f=$91da240b76094466$var$createEvents(),d=$91da240b76094466$var$createEvents();function p(e){return function(){var e=document.querySelector("base"),t="";if(e&&e.getAttribute("href")){var n=r.location.href,o=n.indexOf("#");t=-1===o?n:n.slice(0,o)}return t}()+"#"+("string"==typeof e?e:$91da240b76094466$export$fe53371bee54353d(e))}function h(e,t){return void 0===t&&(t=null),$91da240b76094466$var$readOnly($f43c50d92a19d876$export$2e2bcd8739ae039({pathname:l.pathname,hash:"",search:""},"string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e,{state:t,key:$91da240b76094466$var$createKey()}))}function m(e,t){return[{usr:e.state,key:e.key,idx:t},p(e)]}function y(e,t,r){return!d.length||(d.call({action:e,location:t,retry:r}),!1)}function g(e){s=e;var t=o();c=t[0],l=t[1],f.call({action:s,location:l})}function b(e){n.go(e)}null==c&&(c=0,n.replaceState($f43c50d92a19d876$export$2e2bcd8739ae039({},n.state,{idx:c}),""));var v={get action(){return s},get location(){return l},createHref:p,push:function e(t,o){var a=$91da240b76094466$export$e19cd5f9376f8cee.Push,i=h(t,o);if(y(a,i,(function(){e(t,o)}))){var s=m(i,c+1),u=s[0],l=s[1];try{n.pushState(u,"",l)}catch(e){r.location.assign(l)}g(a)}},replace:function e(t,r){var o=$91da240b76094466$export$e19cd5f9376f8cee.Replace,a=h(t,r);if(y(o,a,(function(){e(t,r)}))){var i=m(a,c),s=i[0],u=i[1];n.replaceState(s,"",u),g(o)}},go:b,back:function(){b(-1)},forward:function(){b(1)},listen:function(e){return f.push(e)},block:function(e){var t=d.push(e);return 1===d.length&&r.addEventListener($91da240b76094466$var$BeforeUnloadEventType,$91da240b76094466$var$promptBeforeUnload),function(){t(),d.length||r.removeEventListener($91da240b76094466$var$BeforeUnloadEventType,$91da240b76094466$var$promptBeforeUnload)}}};return v}function $91da240b76094466$export$2b76ad033c6e6d08(e){void 0===e&&(e={});var t=e,r=t.initialEntries,n=void 0===r?["/"]:r,o=t.initialIndex,a=n.map((function(e){return $91da240b76094466$var$readOnly($f43c50d92a19d876$export$2e2bcd8739ae039({pathname:"/",search:"",hash:"",state:null,key:$91da240b76094466$var$createKey()},"string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e))})),i=$91da240b76094466$var$clamp(null==o?a.length-1:o,0,a.length-1),s=$91da240b76094466$export$e19cd5f9376f8cee.Pop,u=a[i],c=$91da240b76094466$var$createEvents(),l=$91da240b76094466$var$createEvents();function f(e,t){return void 0===t&&(t=null),$91da240b76094466$var$readOnly($f43c50d92a19d876$export$2e2bcd8739ae039({pathname:u.pathname,search:"",hash:""},"string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e,{state:t,key:$91da240b76094466$var$createKey()}))}function d(e,t,r){return!l.length||(l.call({action:e,location:t,retry:r}),!1)}function p(e,t){s=e,u=t,c.call({action:s,location:u})}function h(e){var t=$91da240b76094466$var$clamp(i+e,0,a.length-1),r=$91da240b76094466$export$e19cd5f9376f8cee.Pop,n=a[t];d(r,n,(function(){h(e)}))&&(i=t,p(r,n))}var m={get index(){return i},get action(){return s},get location(){return u},createHref:function(e){return"string"==typeof e?e:$91da240b76094466$export$fe53371bee54353d(e)},push:function e(t,r){var n=$91da240b76094466$export$e19cd5f9376f8cee.Push,o=f(t,r);d(n,o,(function(){e(t,r)}))&&(i+=1,a.splice(i,a.length,o),p(n,o))},replace:function e(t,r){var n=$91da240b76094466$export$e19cd5f9376f8cee.Replace,o=f(t,r);d(n,o,(function(){e(t,r)}))&&(a[i]=o,p(n,o))},go:h,back:function(){h(-1)},forward:function(){h(1)},listen:function(e){return c.push(e)},block:function(e){return l.push(e)}};return m}function $91da240b76094466$var$clamp(e,t,r){return Math.min(Math.max(e,t),r)}function $91da240b76094466$var$promptBeforeUnload(e){e.preventDefault(),e.returnValue=""}function $91da240b76094466$var$createEvents(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function $91da240b76094466$var$createKey(){return Math.random().toString(36).substr(2,8)}function $91da240b76094466$export$fe53371bee54353d(e){var t=e.pathname,r=void 0===t?"/":t,n=e.search,o=void 0===n?"":n,a=e.hash,i=void 0===a?"":a;return o&&"?"!==o&&(r+="?"===o.charAt(0)?o:"?"+o),i&&"#"!==i&&(r+="#"===i.charAt(0)?i:"#"+i),r}function $91da240b76094466$export$8ccf933b0513f8d0(e){var t={};if(e){var r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));var n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}var $7fPBF=parcelRequire("7fPBF");const $6de75bb8982f6eaa$export$26749e8557646306=(0,$7fPBF.createContext)(null),$6de75bb8982f6eaa$export$c7914228fb69b0f5=(0,$7fPBF.createContext)(null),$6de75bb8982f6eaa$export$9072aa6dd1f93057=(0,$7fPBF.createContext)({outlet:null,matches:[]});function $6de75bb8982f6eaa$var$invariant(e,t){if(!e)throw new Error(t)}function $6de75bb8982f6eaa$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}const $6de75bb8982f6eaa$var$alreadyWarned={};function $6de75bb8982f6eaa$var$warningOnce(e,t,r){t||$6de75bb8982f6eaa$var$alreadyWarned[e]||($6de75bb8982f6eaa$var$alreadyWarned[e]=!0)}function $6de75bb8982f6eaa$export$82476f982757e71e(e,t){return void 0===t&&(t={}),e.replace(/:(\w+)/g,((e,r)=>(null==t[r]&&$6de75bb8982f6eaa$var$invariant(!1),t[r]))).replace(/\/*\*$/,(e=>null==t["*"]?"":t["*"].replace(/^\/*/,"/")))}function $6de75bb8982f6eaa$export$2708184779ceb39d(e,t,r){void 0===r&&(r="/");let n=$6de75bb8982f6eaa$var$stripBasename(("string"==typeof t?$91da240b76094466$export$8ccf933b0513f8d0(t):t).pathname||"/",r);if(null==n)return null;let o=$6de75bb8982f6eaa$var$flattenRoutes(e);$6de75bb8982f6eaa$var$rankRouteBranches(o);let a=null;for(let e=0;null==a&&e<o.length;++e)a=$6de75bb8982f6eaa$var$matchRouteBranch(o[e],n);return a}function $6de75bb8982f6eaa$var$flattenRoutes(e,t,r,n){return void 0===t&&(t=[]),void 0===r&&(r=[]),void 0===n&&(n=""),e.forEach(((e,o)=>{let a={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:o,route:e};a.relativePath.startsWith("/")&&(!a.relativePath.startsWith(n)&&$6de75bb8982f6eaa$var$invariant(!1),a.relativePath=a.relativePath.slice(n.length));let i=$6de75bb8982f6eaa$var$joinPaths([n,a.relativePath]),s=r.concat(a);e.children&&e.children.length>0&&(!0===e.index&&$6de75bb8982f6eaa$var$invariant(!1),$6de75bb8982f6eaa$var$flattenRoutes(e.children,t,s,i)),(null!=e.path||e.index)&&t.push({path:i,score:$6de75bb8982f6eaa$var$computeScore(i,e.index),routesMeta:s})})),t}function $6de75bb8982f6eaa$var$rankRouteBranches(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:$6de75bb8982f6eaa$var$compareIndexes(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}const $6de75bb8982f6eaa$var$paramRe=/^:\w+$/,$6de75bb8982f6eaa$var$dynamicSegmentValue=3,$6de75bb8982f6eaa$var$indexRouteValue=2,$6de75bb8982f6eaa$var$emptySegmentValue=1,$6de75bb8982f6eaa$var$staticSegmentValue=10,$6de75bb8982f6eaa$var$splatPenalty=-2,$6de75bb8982f6eaa$var$isSplat=e=>"*"===e;function $6de75bb8982f6eaa$var$computeScore(e,t){let r=e.split("/"),n=r.length;return r.some($6de75bb8982f6eaa$var$isSplat)&&(n+=$6de75bb8982f6eaa$var$splatPenalty),t&&(n+=$6de75bb8982f6eaa$var$indexRouteValue),r.filter((e=>!$6de75bb8982f6eaa$var$isSplat(e))).reduce(((e,t)=>e+($6de75bb8982f6eaa$var$paramRe.test(t)?$6de75bb8982f6eaa$var$dynamicSegmentValue:""===t?$6de75bb8982f6eaa$var$emptySegmentValue:$6de75bb8982f6eaa$var$staticSegmentValue)),n)}function $6de75bb8982f6eaa$var$compareIndexes(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,r)=>e===t[r]))?e[e.length-1]-t[t.length-1]:0}function $6de75bb8982f6eaa$var$matchRouteBranch(e,t){let{routesMeta:r}=e,n={},o="/",a=[];for(let e=0;e<r.length;++e){let i=r[e],s=e===r.length-1,u="/"===o?t:t.slice(o.length)||"/",c=$6de75bb8982f6eaa$export$81336c211d5ff295({path:i.relativePath,caseSensitive:i.caseSensitive,end:s},u);if(!c)return null;Object.assign(n,c.params);let l=i.route;a.push({params:n,pathname:$6de75bb8982f6eaa$var$joinPaths([o,c.pathname]),pathnameBase:$6de75bb8982f6eaa$var$normalizePathname($6de75bb8982f6eaa$var$joinPaths([o,c.pathnameBase])),route:l}),"/"!==c.pathnameBase&&(o=$6de75bb8982f6eaa$var$joinPaths([o,c.pathnameBase]))}return a}function $6de75bb8982f6eaa$export$81336c211d5ff295(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[r,n]=$6de75bb8982f6eaa$var$compilePath(e.path,e.caseSensitive,e.end),o=t.match(r);if(!o)return null;let a=o[0],i=a.replace(/(.)\/+$/,"$1"),s=o.slice(1);return{params:n.reduce(((e,t,r)=>{if("*"===t){let e=s[r]||"";i=a.slice(0,a.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=$6de75bb8982f6eaa$var$safelyDecodeURIComponent(s[r]||"",t),e}),{}),pathname:a,pathnameBase:i,pattern:e}}function $6de75bb8982f6eaa$var$compilePath(e,t,r){void 0===t&&(t=!1),void 0===r&&(r=!0);let n=[],o="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(n.push(t),"([^\\/]+)")));return e.endsWith("*")?(n.push("*"),o+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):o+=r?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(o,t?void 0:"i"),n]}function $6de75bb8982f6eaa$var$safelyDecodeURIComponent(e,t){try{return decodeURIComponent(e)}catch(t){return e}}function $6de75bb8982f6eaa$export$b09f2ff0bbcb43c7(e,t){void 0===t&&(t="/");let{pathname:r,search:n="",hash:o=""}="string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e;return{pathname:r?r.startsWith("/")?r:$6de75bb8982f6eaa$var$resolvePathname(r,t):t,search:$6de75bb8982f6eaa$var$normalizeSearch(n),hash:$6de75bb8982f6eaa$var$normalizeHash(o)}}function $6de75bb8982f6eaa$var$resolvePathname(e,t){let r=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?r.length>1&&r.pop():"."!==e&&r.push(e)})),r.length>1?r.join("/"):"/"}function $6de75bb8982f6eaa$var$resolveTo(e,t,r){let n,o="string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e):e,a=""===e||""===o.pathname?"/":o.pathname;if(null==a)n=r;else{let e=t.length-1;if(a.startsWith("..")){let t=a.split("/");for(;".."===t[0];)t.shift(),e-=1;o.pathname=t.join("/")}n=e>=0?t[e]:"/"}let i=$6de75bb8982f6eaa$export$b09f2ff0bbcb43c7(o,n);return a&&"/"!==a&&a.endsWith("/")&&!i.pathname.endsWith("/")&&(i.pathname+="/"),i}function $6de75bb8982f6eaa$var$getToPathname(e){return""===e||""===e.pathname?"/":"string"==typeof e?$91da240b76094466$export$8ccf933b0513f8d0(e).pathname:e.pathname}function $6de75bb8982f6eaa$var$stripBasename(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let r=e.charAt(t.length);return r&&"/"!==r?null:e.slice(t.length)||"/"}const $6de75bb8982f6eaa$var$joinPaths=e=>e.join("/").replace(/\/\/+/g,"/"),$6de75bb8982f6eaa$var$normalizePathname=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),$6de75bb8982f6eaa$var$normalizeSearch=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",$6de75bb8982f6eaa$var$normalizeHash=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function $6de75bb8982f6eaa$export$b66bb29c5006f12f(e){!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let{basename:t,navigator:r}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$26749e8557646306),{hash:n,pathname:o,search:a}=$6de75bb8982f6eaa$export$e75d2a2d1b3c245b(e),i=o;if("/"!==t){let r=$6de75bb8982f6eaa$var$getToPathname(e),n=null!=r&&r.endsWith("/");i="/"===o?t+(n?"/":""):$6de75bb8982f6eaa$var$joinPaths([t,o])}return r.createHref({pathname:i,search:a,hash:n})}function $6de75bb8982f6eaa$export$9c954a9d03d32f4a(){return null!=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$c7914228fb69b0f5)}function $6de75bb8982f6eaa$export$45d76561a5302f2b(){return!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1),(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$c7914228fb69b0f5).location}function $6de75bb8982f6eaa$export$1b3f31771c5d07c(){return(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$c7914228fb69b0f5).navigationType}function $6de75bb8982f6eaa$export$6c330e8992e8a295(e){!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let{pathname:t}=$6de75bb8982f6eaa$export$45d76561a5302f2b();return(0,$7fPBF.useMemo)((()=>$6de75bb8982f6eaa$export$81336c211d5ff295(e,t)),[t,e])}function $6de75bb8982f6eaa$export$9770f232ac06a008(){!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let{basename:e,navigator:t}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$26749e8557646306),{matches:r}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$9072aa6dd1f93057),{pathname:n}=$6de75bb8982f6eaa$export$45d76561a5302f2b(),o=JSON.stringify(r.map((e=>e.pathnameBase))),a=(0,$7fPBF.useRef)(!1);return(0,$7fPBF.useEffect)((()=>{a.current=!0})),(0,$7fPBF.useCallback)((function(r,i){if(void 0===i&&(i={}),!a.current)return;if("number"==typeof r)return void t.go(r);let s=$6de75bb8982f6eaa$var$resolveTo(r,JSON.parse(o),n);"/"!==e&&(s.pathname=$6de75bb8982f6eaa$var$joinPaths([e,s.pathname])),(i.replace?t.replace:t.push)(s,i.state)}),[e,t,o,n])}const $6de75bb8982f6eaa$var$OutletContext=(0,$7fPBF.createContext)(null);function $6de75bb8982f6eaa$export$4138103a3ae699cc(){return(0,$7fPBF.useContext)($6de75bb8982f6eaa$var$OutletContext)}function $6de75bb8982f6eaa$export$a3be3530d8e40d0b(e){let t=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$9072aa6dd1f93057).outlet;return t?(0,$7fPBF.createElement)($6de75bb8982f6eaa$var$OutletContext.Provider,{value:e},t):t}function $6de75bb8982f6eaa$export$99eaa27ddbbb95ef(){let{matches:e}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$9072aa6dd1f93057),t=e[e.length-1];return t?t.params:{}}function $6de75bb8982f6eaa$export$e75d2a2d1b3c245b(e){let{matches:t}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$9072aa6dd1f93057),{pathname:r}=$6de75bb8982f6eaa$export$45d76561a5302f2b(),n=JSON.stringify(t.map((e=>e.pathnameBase)));return(0,$7fPBF.useMemo)((()=>$6de75bb8982f6eaa$var$resolveTo(e,JSON.parse(n),r)),[e,n,r])}function $6de75bb8982f6eaa$export$5d3fca4a98652595(e,t){!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let r,{matches:n}=(0,$7fPBF.useContext)($6de75bb8982f6eaa$export$9072aa6dd1f93057),o=n[n.length-1],a=o?o.params:{},i=(o&&o.pathname,o?o.pathnameBase:"/"),s=(o&&o.route,$6de75bb8982f6eaa$export$45d76561a5302f2b());if(t){var u;let e="string"==typeof t?$91da240b76094466$export$8ccf933b0513f8d0(t):t;"/"!==i&&!(null==(u=e.pathname)?void 0:u.startsWith(i))&&$6de75bb8982f6eaa$var$invariant(!1),r=e}else r=s;let c=r.pathname||"/",l=$6de75bb8982f6eaa$export$2708184779ceb39d(e,{pathname:"/"===i?c:c.slice(i.length)||"/"});return $6de75bb8982f6eaa$var$_renderMatches(l&&l.map((e=>Object.assign({},e,{params:Object.assign({},a,e.params),pathname:$6de75bb8982f6eaa$var$joinPaths([i,e.pathname]),pathnameBase:"/"===e.pathnameBase?i:$6de75bb8982f6eaa$var$joinPaths([i,e.pathnameBase])}))),n)}function $6de75bb8982f6eaa$var$_renderMatches(e,t){return void 0===t&&(t=[]),null==e?null:e.reduceRight(((r,n,o)=>(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$9072aa6dd1f93057.Provider,{children:void 0!==n.route.element?n.route.element:r,value:{outlet:r,matches:t.concat(e.slice(0,o+1))}})),null)}function $6de75bb8982f6eaa$export$ae46f04cfaffe093(e){let{basename:t,children:r,initialEntries:n,initialIndex:o}=e,a=(0,$7fPBF.useRef)();null==a.current&&(a.current=$91da240b76094466$export$2b76ad033c6e6d08({initialEntries:n,initialIndex:o}));let i=a.current,[s,u]=(0,$7fPBF.useState)({action:i.action,location:i.location});return(0,$7fPBF.useLayoutEffect)((()=>i.listen(u)),[i]),(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$55185c17a0fcbe46,{basename:t,children:r,location:s.location,navigationType:s.action,navigator:i})}function $6de75bb8982f6eaa$export$444b3ab0cb9aec40(e){let{to:t,replace:r,state:n}=e;!$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let o=$6de75bb8982f6eaa$export$9770f232ac06a008();return(0,$7fPBF.useEffect)((()=>{o(t,{replace:r,state:n})})),null}function $6de75bb8982f6eaa$export$910ae8079b2c2852(e){return $6de75bb8982f6eaa$export$a3be3530d8e40d0b(e.context)}function $6de75bb8982f6eaa$export$e7b0ac011bb776c6(e){$6de75bb8982f6eaa$var$invariant(!1)}function $6de75bb8982f6eaa$export$55185c17a0fcbe46(e){let{basename:t="/",children:r=null,location:n,navigationType:o=$91da240b76094466$export$e19cd5f9376f8cee.Pop,navigator:a,static:i=!1}=e;$6de75bb8982f6eaa$export$9c954a9d03d32f4a()&&$6de75bb8982f6eaa$var$invariant(!1);let s=$6de75bb8982f6eaa$var$normalizePathname(t),u=(0,$7fPBF.useMemo)((()=>({basename:s,navigator:a,static:i})),[s,a,i]);"string"==typeof n&&(n=$91da240b76094466$export$8ccf933b0513f8d0(n));let{pathname:c="/",search:l="",hash:f="",state:d=null,key:p="default"}=n,h=(0,$7fPBF.useMemo)((()=>{let e=$6de75bb8982f6eaa$var$stripBasename(c,s);return null==e?null:{pathname:e,search:l,hash:f,state:d,key:p}}),[s,c,l,f,d,p]);return null==h?null:(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$26749e8557646306.Provider,{value:u},(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$c7914228fb69b0f5.Provider,{children:r,value:{location:h,navigationType:o}}))}function $6de75bb8982f6eaa$export$3565eb3d00ca5a74(e){let{children:t,location:r}=e;return $6de75bb8982f6eaa$export$5d3fca4a98652595($6de75bb8982f6eaa$export$16da398f5434bdec(t),r)}function $6de75bb8982f6eaa$export$16da398f5434bdec(e){let t=[];return $7fPBF.Children.forEach(e,(e=>{if(!(0,$7fPBF.isValidElement)(e))return;if(e.type===$7fPBF.Fragment)return void t.push.apply(t,$6de75bb8982f6eaa$export$16da398f5434bdec(e.props.children));e.type!==$6de75bb8982f6eaa$export$e7b0ac011bb776c6&&$6de75bb8982f6eaa$var$invariant(!1);let r={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(r.children=$6de75bb8982f6eaa$export$16da398f5434bdec(e.props.children)),t.push(r)})),t}function $6de75bb8982f6eaa$export$daf73786167a7f72(e){return $6de75bb8982f6eaa$var$_renderMatches(e)}function $1a29469ea96a6022$var$_extends(){return $1a29469ea96a6022$var$_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},$1a29469ea96a6022$var$_extends.apply(this,arguments)}function $1a29469ea96a6022$var$_objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}const $1a29469ea96a6022$var$_excluded=["onClick","reloadDocument","replace","state","target","to"],$1a29469ea96a6022$var$_excluded2=["aria-current","caseSensitive","className","end","style","to","children"];function $1a29469ea96a6022$var$warning(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function $1a29469ea96a6022$export$9ba4e89fdfa1fc54(e){let{basename:t,children:r,window:n}=e,o=(0,$7fPBF.useRef)();null==o.current&&(o.current=$91da240b76094466$export$719fc203c4e16dee({window:n}));let a=o.current,[i,s]=(0,$7fPBF.useState)({action:a.action,location:a.location});return(0,$7fPBF.useLayoutEffect)((()=>a.listen(s)),[a]),(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$55185c17a0fcbe46,{basename:t,children:r,location:i.location,navigationType:i.action,navigator:a})}function $1a29469ea96a6022$export$7221d69dcfc8e36b(e){let{basename:t,children:r,window:n}=e,o=(0,$7fPBF.useRef)();null==o.current&&(o.current=$91da240b76094466$export$b71fdd3798280242({window:n}));let a=o.current,[i,s]=(0,$7fPBF.useState)({action:a.action,location:a.location});return(0,$7fPBF.useLayoutEffect)((()=>a.listen(s)),[a]),(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$55185c17a0fcbe46,{basename:t,children:r,location:i.location,navigationType:i.action,navigator:a})}function $1a29469ea96a6022$export$eefb0c834599897e(e){let{basename:t,children:r,history:n}=e;const[o,a]=(0,$7fPBF.useState)({action:n.action,location:n.location});return(0,$7fPBF.useLayoutEffect)((()=>n.listen(a)),[n]),(0,$7fPBF.createElement)($6de75bb8982f6eaa$export$55185c17a0fcbe46,{basename:t,children:r,location:o.location,navigationType:o.action,navigator:n})}function $1a29469ea96a6022$var$isModifiedEvent(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}const $1a29469ea96a6022$export$a6c7ac8248d6e38a=(0,$7fPBF.forwardRef)((function(e,t){let{onClick:r,reloadDocument:n,replace:o=!1,state:a,target:i,to:s}=e,u=$1a29469ea96a6022$var$_objectWithoutPropertiesLoose(e,$1a29469ea96a6022$var$_excluded),c=$6de75bb8982f6eaa$export$b66bb29c5006f12f(s),l=$1a29469ea96a6022$export$67621102c14d847(s,{replace:o,state:a,target:i});return(0,$7fPBF.createElement)("a",$1a29469ea96a6022$var$_extends({},u,{href:c,onClick:function(e){r&&r(e),e.defaultPrevented||n||l(e)},ref:t,target:i}))})),$1a29469ea96a6022$export$b0d92dbee9b5b60d=(0,$7fPBF.forwardRef)((function(e,t){let{"aria-current":r="page",caseSensitive:n=!1,className:o="",end:a=!1,style:i,to:s,children:u}=e,c=$1a29469ea96a6022$var$_objectWithoutPropertiesLoose(e,$1a29469ea96a6022$var$_excluded2),l=$6de75bb8982f6eaa$export$45d76561a5302f2b(),f=$6de75bb8982f6eaa$export$e75d2a2d1b3c245b(s),d=l.pathname,p=f.pathname;n||(d=d.toLowerCase(),p=p.toLowerCase());let h,m=d===p||!a&&d.startsWith(p)&&"/"===d.charAt(p.length),y=m?r:void 0;h="function"==typeof o?o({isActive:m}):[o,m?"active":null].filter(Boolean).join(" ");let g="function"==typeof i?i({isActive:m}):i;return(0,$7fPBF.createElement)($1a29469ea96a6022$export$a6c7ac8248d6e38a,$1a29469ea96a6022$var$_extends({},c,{"aria-current":y,className:h,ref:t,style:g,to:s}),"function"==typeof u?u({isActive:m}):u)}));function $1a29469ea96a6022$export$67621102c14d847(e,t){let{target:r,replace:n,state:o}=void 0===t?{}:t,a=$6de75bb8982f6eaa$export$9770f232ac06a008(),i=$6de75bb8982f6eaa$export$45d76561a5302f2b(),s=$6de75bb8982f6eaa$export$e75d2a2d1b3c245b(e);return(0,$7fPBF.useCallback)((t=>{if(!(0!==t.button||r&&"_self"!==r||$1a29469ea96a6022$var$isModifiedEvent(t))){t.preventDefault();let r=!!n||$91da240b76094466$export$fe53371bee54353d(i)===$91da240b76094466$export$fe53371bee54353d(s);a(e,{replace:r,state:o})}}),[i,a,s,n,o,r,e])}function $1a29469ea96a6022$export$f1a78c17382fe22a(e){let t=(0,$7fPBF.useRef)($1a29469ea96a6022$export$a2e4e2dcc7b1f22f(e)),r=$6de75bb8982f6eaa$export$45d76561a5302f2b(),n=(0,$7fPBF.useMemo)((()=>{let e=$1a29469ea96a6022$export$a2e4e2dcc7b1f22f(r.search);for(let r of t.current.keys())e.has(r)||t.current.getAll(r).forEach((t=>{e.append(r,t)}));return e}),[r.search]),o=$6de75bb8982f6eaa$export$9770f232ac06a008();return[n,(0,$7fPBF.useCallback)(((e,t)=>{o("?"+$1a29469ea96a6022$export$a2e4e2dcc7b1f22f(e),t)}),[o])]}function $1a29469ea96a6022$export$a2e4e2dcc7b1f22f(e){return void 0===e&&(e=""),new URLSearchParams("string"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce(((t,r)=>{let n=e[r];return t.concat(Array.isArray(n)?n.map((e=>[r,e])):[[r,n]])}),[]))}var $7fPBF=parcelRequire("7fPBF"),$37ff6a009add455f$exports={},$37ff6a009add455f$var$__createBinding=$37ff6a009add455f$exports&&$37ff6a009add455f$exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),$37ff6a009add455f$var$__setModuleDefault=$37ff6a009add455f$exports&&$37ff6a009add455f$exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),$37ff6a009add455f$var$__importStar=$37ff6a009add455f$exports&&$37ff6a009add455f$exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&$37ff6a009add455f$var$__createBinding(t,e,r);return $37ff6a009add455f$var$__setModuleDefault(t,e),t},$37ff6a009add455f$var$__exportStar=$37ff6a009add455f$exports&&$37ff6a009add455f$exports.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||$37ff6a009add455f$var$__createBinding(t,e,r)};Object.defineProperty($37ff6a009add455f$exports,"__esModule",{value:!0}),$37ff6a009add455f$exports.keyStores=$37ff6a009add455f$var$__importStar(parcelRequire("cZqlV")),$37ff6a009add455f$var$__exportStar(parcelRequire("1OCaU"),$37ff6a009add455f$exports),$37ff6a009add455f$var$__exportStar(parcelRequire("33PUJ"),$37ff6a009add455f$exports);var $86c6be72ed6ad485$exports={};$86c6be72ed6ad485$exports=parcelRequire("eh5sb");const $a472ac17c1f14b34$var$CONTRACT_NAME=void 0;function $a472ac17c1f14b34$export$44487a86467333c3(e){switch(e){case"production":case"mainnet":return{networkId:"mainnet",nodeUrl:"https://rpc.mainnet.near.org",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME,walletUrl:"https://wallet.near.org",helperUrl:"https://helper.mainnet.near.org",explorerUrl:"https://explorer.mainnet.near.org"};case"development":case"testnet":return{networkId:"testnet",nodeUrl:"https://rpc.testnet.near.org",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME,walletUrl:"https://wallet.testnet.near.org",helperUrl:"https://helper.testnet.near.org",explorerUrl:"https://explorer.testnet.near.org"};case"betanet":return{networkId:"betanet",nodeUrl:"https://rpc.betanet.near.org",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME,walletUrl:"https://wallet.betanet.near.org",helperUrl:"https://helper.betanet.near.org",explorerUrl:"https://explorer.betanet.near.org"};case"local":return{networkId:"local",nodeUrl:"http://localhost:3030",keyPath:"/Users/harukikondo/.near/validator_key.json",walletUrl:"http://localhost:4000/wallet",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME};case"test":case"ci":return{networkId:"shared-test",nodeUrl:"https://rpc.ci-testnet.near.org",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME,masterAccount:"test.near"};case"ci-betanet":return{networkId:"shared-test-staging",nodeUrl:"https://rpc.ci-betanet.near.org",contractName:$a472ac17c1f14b34$var$CONTRACT_NAME,masterAccount:"test.near"};default:throw Error(`Unconfigured environment '${e}'. Can be configured in src/config.js.`)}}var $aVh2m=parcelRequire("aVh2m");const $1eb56f3537ba19d4$var$nearConfig=$a472ac17c1f14b34$export$44487a86467333c3("production");async function $1eb56f3537ba19d4$export$32789f8ce7a59bb6(){const e=await(0,$37ff6a009add455f$exports.connect)(Object.assign({deps:{keyStore:new $37ff6a009add455f$exports.keyStores.BrowserLocalStorageKeyStore}},$1eb56f3537ba19d4$var$nearConfig));window.walletConnection=new(0,$37ff6a009add455f$exports.WalletConnection)(e),window.accountId=window.walletConnection.getAccountId(),window.contract=await new(0,$37ff6a009add455f$exports.Contract)(window.walletConnection.account(),$1eb56f3537ba19d4$var$nearConfig.contractName,{viewMethods:["nft_metadata","nft_tokens_for_kind","nft_return_candidate_likes","check_voter_has_been_added","check_voter_has_voted","if_election_closed"],changeMethods:["new_default_meta","nft_mint","nft_transfer","nft_add_likes_to_candidate","voter_voted","close_election","reopen_election"]})}function $1eb56f3537ba19d4$export$a0973bcfe11b05c9(){window.walletConnection.signOut(),window.location.replace(window.location.origin+window.location.pathname)}function $1eb56f3537ba19d4$export$596d806903d1f59e(){window.walletConnection.requestSignIn($1eb56f3537ba19d4$var$nearConfig.contractName)}async function $1eb56f3537ba19d4$export$532bae3a9e2b8b87(){await window.contract.new_default_meta({owner_id:window.accountId})}async function $1eb56f3537ba19d4$export$632bd9ab6dba7ff7(e,t,r,n,o,a,i,s){await window.contract.nft_mint({metadata:{title:e,description:t,media:r,media_CID:n,candidate_name:o,candidate_manifest:a,token_kind:i},receiver_id:s},3e14,new $aVh2m("1000000000000000000000000"))}async function $1eb56f3537ba19d4$export$b0e1854fd82ab232(e,t){await window.contract.nft_transfer({receiver_id:e,token_id:t},3e14,new $aVh2m("1"))}async function $1eb56f3537ba19d4$export$56bd6d2936ccd6cf(e){await window.contract.nft_add_likes_to_candidate({token_id:e})}async function $1eb56f3537ba19d4$export$dda17c3f66e1e1ad(){return await window.contract.nft_metadata()}async function $1eb56f3537ba19d4$export$65cdffd68bbec2fe(e){return await window.contract.nft_tokens_for_kind({token_kind:e})}async function $1eb56f3537ba19d4$export$c0b4cf505e0f4676(e){return await window.contract.nft_return_candidate_likes({token_id:e})}async function $1eb56f3537ba19d4$export$f8d1fece213c1fbd(e){return await window.contract.check_voter_has_been_added({voter_id:e})}async function $1eb56f3537ba19d4$export$1ecc0473ae248361(e){return await window.contract.check_voter_has_voted({voter_id:e})}async function $1eb56f3537ba19d4$export$7bedc6ca3b4ed0db(e){return await window.contract.voter_voted({voter_id:e})}async function $1eb56f3537ba19d4$export$6d0bd67c93ae3616(){return await window.contract.if_election_closed()}async function $1eb56f3537ba19d4$export$2999ae38e81d7eac(){await window.contract.close_election()}async function $1eb56f3537ba19d4$export$f3fc5f415e7e53a1(){await window.contract.reopen_election()}parcelRequire("7fPBF");var $7fPBF=parcelRequire("7fPBF");function $c4b9bc9cfdf34c3d$var$_regeneratorRuntime(){
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */$c4b9bc9cfdf34c3d$var$_regeneratorRuntime=function(){return e};var e={},t=Object.prototype,r=t.hasOwnProperty,n="function"==typeof Symbol?Symbol:{},o=n.iterator||"@@iterator",a=n.asyncIterator||"@@asyncIterator",i=n.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var o=t&&t.prototype instanceof f?t:f,a=Object.create(o.prototype),i=new _(n||[]);return a._invoke=function(e,t,r){var n="suspendedStart";return function(o,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw a;return E()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var s=w(i,r);if(s){if(s===l)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var u=c(e,t,r);if("normal"===u.type){if(n=r.done?"completed":"suspendedYield",u.arg===l)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n="completed",r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function c(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var l={};function f(){}function d(){}function p(){}var h={};s(h,o,(function(){return this}));var m=Object.getPrototypeOf,y=m&&m(m(S([])));y&&y!==t&&r.call(y,o)&&(h=y);var g=p.prototype=f.prototype=Object.create(h);function b(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function v(e,t){function n(o,a,i,s){var u=c(e[o],e,a);if("throw"!==u.type){var l=u.arg,f=l.value;return f&&"object"==typeof f&&r.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,i,s)}),(function(e){n("throw",e,i,s)})):t.resolve(f).then((function(e){l.value=e,i(l)}),(function(e){return n("throw",e,i,s)}))}s(u.arg)}var o;this._invoke=function(e,r){function a(){return new t((function(t,o){n(e,r,t,o)}))}return o=o?o.then(a,a):a()}}function w(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var n=c(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,l;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function $(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach($,this),this.reset(!0)}function S(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:E}}function E(){return{value:void 0,done:!0}}return d.prototype=p,s(g,"constructor",p),s(p,"constructor",d),d.displayName=s(p,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,s(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},b(v.prototype),s(v.prototype,a,(function(){return this})),e.AsyncIterator=v,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new v(u(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},b(g),s(g,i,"Generator"),s(g,o,(function(){return this})),s(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=S,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(r,n){return i.type="throw",i.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),u=r.call(a,"finallyLoc");if(s&&u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,l):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),l},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),x(r),l}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;x(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:S(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),l}},e}function $c4b9bc9cfdf34c3d$var$asyncGeneratorStep(e,t,r,n,o,a,i){try{var s=e[a](i),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function $c4b9bc9cfdf34c3d$var$_asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){$c4b9bc9cfdf34c3d$var$asyncGeneratorStep(a,n,o,i,s,"next",e)}function s(e){$c4b9bc9cfdf34c3d$var$asyncGeneratorStep(a,n,o,i,s,"throw",e)}i(void 0)}))}}function $c4b9bc9cfdf34c3d$var$_objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}var $c4b9bc9cfdf34c3d$var$DEFAULT_IPFS_GATEWAY_URL="https://ipfs.infura.io/ipfs",$c4b9bc9cfdf34c3d$var$cleanUpHash=function(e){return e.startsWith("ipfs://")?e.substring(7):e},$c4b9bc9cfdf34c3d$export$dcfc6cbc19def6c2=function(){var e=$c4b9bc9cfdf34c3d$var$_asyncToGenerator($c4b9bc9cfdf34c3d$var$_regeneratorRuntime().mark((function e(t,r){var n,o,a;return $c4b9bc9cfdf34c3d$var$_regeneratorRuntime().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===r&&(r=$c4b9bc9cfdf34c3d$var$DEFAULT_IPFS_GATEWAY_URL),n=$c4b9bc9cfdf34c3d$var$cleanUpHash(t),o=r+"/"+n,e.next=5,fetch(o);case 5:return e.next=7,e.sent.json();case 7:return a=e.sent,e.abrupt("return",a.image);case 9:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),$c4b9bc9cfdf34c3d$export$998a7eee03b32ad4=function(e){var t=(0,$7fPBF.useState)([]),r=t[0],n=t[1];return(0,$7fPBF.useEffect)((function(){var t=function(){var t=$c4b9bc9cfdf34c3d$var$_asyncToGenerator($c4b9bc9cfdf34c3d$var$_regeneratorRuntime().mark((function t(){var r;return $c4b9bc9cfdf34c3d$var$_regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all(e.map((function(e){return $c4b9bc9cfdf34c3d$export$dcfc6cbc19def6c2(e)})));case 2:r=t.sent,n(r);case 4:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();t()}),[e]),r},$c4b9bc9cfdf34c3d$var$_excluded=["hash","gatewayUrl"],$c4b9bc9cfdf34c3d$export$fce25f310ce4c63f=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$c4b9bc9cfdf34c3d$var$DEFAULT_IPFS_GATEWAY_URL:r,o=$c4b9bc9cfdf34c3d$var$_objectWithoutPropertiesLoose(e,$c4b9bc9cfdf34c3d$var$_excluded);return $parcel$interopDefault($7fPBF).createElement("img",Object.assign({src:n+"/"+$c4b9bc9cfdf34c3d$var$cleanUpHash(t)},o))},$c4b9bc9cfdf34c3d$var$_excluded$1=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$c4b9bc9cfdf34c3d$export$4a71c73b1888cb58=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$c4b9bc9cfdf34c3d$var$DEFAULT_IPFS_GATEWAY_URL:r,o=$c4b9bc9cfdf34c3d$var$_objectWithoutPropertiesLoose(e,$c4b9bc9cfdf34c3d$var$_excluded$1);return $parcel$interopDefault($7fPBF).createElement("video",Object.assign({loop:!0,autoPlay:!0,muted:!0,controls:!0},o),$parcel$interopDefault($7fPBF).createElement("source",{src:n+"/"+$c4b9bc9cfdf34c3d$var$cleanUpHash(t)}))},$c4b9bc9cfdf34c3d$var$_excluded$2=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$c4b9bc9cfdf34c3d$export$94de9ab01c13f989=function(e){var t=e.hash,r=e.autoPlay,n=void 0===r||r,o=e.muted,a=void 0===o||o,i=e.controls,s=void 0===i||i,u=e.loop,c=void 0===u||u,l=$c4b9bc9cfdf34c3d$var$_objectWithoutPropertiesLoose(e,$c4b9bc9cfdf34c3d$var$_excluded$2),f=(0,$7fPBF.useState)(!1),d=f[0],p=f[1],h=(0,$7fPBF.useState)(!1),m=h[0],y=h[1];return(0,$7fPBF.useEffect)((function(){p(!1),y(!1)}),[t]),$parcel$interopDefault($7fPBF).createElement($parcel$interopDefault($7fPBF).Fragment,null,!d&&$parcel$interopDefault($7fPBF).createElement($c4b9bc9cfdf34c3d$export$fce25f310ce4c63f,Object.assign({hash:t,onError:function(){return p(!0)}},l)),!m&&$parcel$interopDefault($7fPBF).createElement($c4b9bc9cfdf34c3d$export$4a71c73b1888cb58,Object.assign({hash:t,onError:function(){return y(!0)},autoPlay:n,muted:a,controls:s,loop:c},l)))},$c4b9bc9cfdf34c3d$var$_excluded$3=["hash","gatewayUrl","autoPlay","muted","controls","loop"],$c4b9bc9cfdf34c3d$export$a3b92cc32375b0b2=function(e){var t=e.hash,r=e.gatewayUrl,n=void 0===r?$c4b9bc9cfdf34c3d$var$DEFAULT_IPFS_GATEWAY_URL:r,o=$c4b9bc9cfdf34c3d$var$_objectWithoutPropertiesLoose(e,$c4b9bc9cfdf34c3d$var$_excluded$3);return $parcel$interopDefault($7fPBF).createElement("audio",Object.assign({loop:!0,autoPlay:!0,muted:!0,controls:!0},o),$parcel$interopDefault($7fPBF).createElement("source",{src:n+"/"+$c4b9bc9cfdf34c3d$var$cleanUpHash(t)}))};const $28972515a7a104cd$var$CandidateCard=e=>(0,$824c049f32d4395d$exports.jsxs)("div",{className:"max-w-sm rounded overflow-hidden shadow-lg w-64 h-96",children:[(0,$824c049f32d4395d$exports.jsx)($c4b9bc9cfdf34c3d$export$fce25f310ce4c63f,{className:"w-full h-3/5",hash:e.CID,gatewayUrl:"https://gateway.pinata.cloud/ipfs/",alt:"Sunset in the mountains"}),(0,$824c049f32d4395d$exports.jsxs)("div",{className:"px-6 py-4",children:[(0,$824c049f32d4395d$exports.jsx)("div",{className:"font-bold text-xl mb-2",children:e.name}),(0,$824c049f32d4395d$exports.jsx)("p",{className:"text-gray-700 text-base",children:e.manifest})]})]});var $28972515a7a104cd$export$2e2bcd8739ae039=$28972515a7a104cd$var$CandidateCard,$7b150a5572fe3c67$exports={};$7b150a5572fe3c67$exports=new URL(parcelRequire("4SSe9").resolve("5oxVe"),import.meta.url).toString();const $68fcf543abd3360c$var$State={Fetching:"fetching",Fetched:"fetched",Open:"open",Closed:"closed"},$68fcf543abd3360c$var$Home=()=>{const[e,t]=(0,$7fPBF.useState)(),[r]=(0,$7fPBF.useState)([]),[n,o]=(0,$7fPBF.useState)("fetching");(0,$7fPBF.useEffect)((()=>{(async()=>{await $1eb56f3537ba19d4$export$65cdffd68bbec2fe("candidate").then((e=>{t(e),o("fetched")}))})()}),[]);const a=()=>{let t=[];for(let n=0;n<e.length;n++)t.push((0,$824c049f32d4395d$exports.jsxs)("div",{className:"items-center",children:[(0,$824c049f32d4395d$exports.jsx)($28972515a7a104cd$export$2e2bcd8739ae039,{CID:e[n].metadata.media_CID,name:e[n].metadata.candidate_name,manifest:e[n].metadata.candidate_manifest}),(0,$824c049f32d4395d$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($7b150a5572fe3c67$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$824c049f32d4395d$exports.jsx)("p",{className:"mr-2",children:r[n]}),(0,$824c049f32d4395d$exports.jsx)("button",{value:e[n].metadata.token_id,onClick:e=>{return t=parseInt(e.target.value),void $1eb56f3537ba19d4$export$1ecc0473ae248361(window.accountId).then((e=>{Boolean(e)?alert("You have already voted!"):$1eb56f3537ba19d4$export$f8d1fece213c1fbd(window.accountId).then((e=>{let r=parseFloat(e);0!=r?confirm("Once you vote, you can't change selected candidate. Are you OK?")&&($1eb56f3537ba19d4$export$b0e1854fd82ab232(void 0,r),$1eb56f3537ba19d4$export$56bd6d2936ccd6cf(t),$1eb56f3537ba19d4$export$7bedc6ca3b4ed0db(window.accountId)):alert("You don't have vote ticket! Please ask deployer to give it to you.")}))}));var t},className:"vote_button hover:skew-1",children:"Vote!"})]})]}));return t},i=()=>{let t=[],n=r.reduce(((e,t)=>Math.max(e,t)));for(let o=0;o<e.length;o++)r[o]==n?t.push((0,$824c049f32d4395d$exports.jsxs)("div",{className:"items-center",children:[(0,$824c049f32d4395d$exports.jsx)("div",{className:"text-2xl shadow-rose-600 center font-semibold text-red-700",children:"Won!"}),(0,$824c049f32d4395d$exports.jsx)($28972515a7a104cd$export$2e2bcd8739ae039,{CID:e[o].metadata.media_CID,name:e[o].metadata.candidate_name,manifest:e[o].metadata.candidate_manifest}),(0,$824c049f32d4395d$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($7b150a5572fe3c67$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$824c049f32d4395d$exports.jsx)("p",{className:"mr-2",children:r[o]})]})]})):t.push((0,$824c049f32d4395d$exports.jsxs)("div",{className:"items-center opacity-20",children:[(0,$824c049f32d4395d$exports.jsx)("div",{className:"pt-7"}),(0,$824c049f32d4395d$exports.jsx)($28972515a7a104cd$export$2e2bcd8739ae039,{CID:e[o].metadata.media_CID,name:e[o].metadata.candidate_name,manifest:e[o].metadata.candidate_manifest}),(0,$824c049f32d4395d$exports.jsxs)("div",{className:"center text-xl items-center",children:[(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($7b150a5572fe3c67$exports),className:"object-cover h-5 w-5 mr-2"}),(0,$824c049f32d4395d$exports.jsx)("p",{className:"mr-2",children:r[o]})]})]}));return t},s=()=>{if(void 0===window.accountId)return(0,$824c049f32d4395d$exports.jsx)("button",{className:"close_button hover:skew-1 h-10 bg-red-600 mb-3",onClick:()=>{confirm("Are you sure to close this election?")&&($1eb56f3537ba19d4$export$2999ae38e81d7eac(),o("closed"))},children:"Close Election"})},u=()=>{if(void 0===window.accountId)return(0,$824c049f32d4395d$exports.jsx)("button",{className:"close_button hover:skew-1 h-10 bg-red-600 mb-3",onClick:()=>{confirm("Are you sure to reopen this election?")&&($1eb56f3537ba19d4$export$f3fc5f415e7e53a1(),o("open"))},children:"Reopen Election"})},c=()=>(0,$824c049f32d4395d$exports.jsx)("div",{className:"grid h-screen place-items-center text-3xl",children:"Fetching NFTs of candidates..."});switch(n){case $68fcf543abd3360c$var$State.Fetching:return(0,$824c049f32d4395d$exports.jsx)("div",{children:c()});case $68fcf543abd3360c$var$State.Fetched:return(async()=>{for(let t=0;t<e.length;t++)await $1eb56f3537ba19d4$export$c0b4cf505e0f4676(e[t].metadata.token_id).then((e=>{r.push(e)}));let t=await $1eb56f3537ba19d4$export$6d0bd67c93ae3616();console.log(t),o(t?"closed":"open")})(),(0,$824c049f32d4395d$exports.jsx)("div",{children:c()});case $68fcf543abd3360c$var$State.Open:return(0,$824c049f32d4395d$exports.jsxs)("div",{children:[(0,$824c049f32d4395d$exports.jsx)("div",{className:"center",children:s()}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"grid grid-cols-3 gap-10",children:a()})]});case $68fcf543abd3360c$var$State.Closed:return(0,$824c049f32d4395d$exports.jsxs)("div",{children:[(0,$824c049f32d4395d$exports.jsx)("div",{className:"center",children:u()}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"grid grid-cols-3 gap-10",children:i()})]})}};var $68fcf543abd3360c$export$2e2bcd8739ae039=$68fcf543abd3360c$var$Home,$7fPBF=parcelRequire("7fPBF");parcelRequire("7fPBF");const $8586119614494849$var$Title=e=>(0,$824c049f32d4395d$exports.jsx)("span",{className:"box-content h-7 w-1/3 p-4 border-4 m4 center text-4xl items-center",children:e.name});var $8586119614494849$export$2e2bcd8739ae039=$8586119614494849$var$Title;parcelRequire("7fPBF");const $768b83a014dc6b8f$var$Input=e=>(0,$824c049f32d4395d$exports.jsx)("form",{className:"w-3/5",onSubmit:e=>{e.preventDefault()},children:(0,$824c049f32d4395d$exports.jsxs)("label",{className:"block",children:[(0,$824c049f32d4395d$exports.jsx)("span",{className:"block text-3xl font-medium text-slate-700",children:e.title}),(0,$824c049f32d4395d$exports.jsx)("input",{value:e.input,placeholder:e.hint,onChange:e.setInput,className:"mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500 disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none invalid:border-pink-500 invalid:text-pink-600 focus:invalid:border-pink-500 focus:invalid:ring-pink-500"})]})});var $768b83a014dc6b8f$export$2e2bcd8739ae039=$768b83a014dc6b8f$var$Input;const $fdbd3578e89f2ce3$var$Candidate=()=>{const[e,t]=(0,$7fPBF.useState)(""),[r,n]=(0,$7fPBF.useState)(""),[o,a]=(0,$7fPBF.useState)("");return(0,$824c049f32d4395d$exports.jsxs)("div",{className:"grid place-items-center w-full",children:[(0,$824c049f32d4395d$exports.jsx)($8586119614494849$export$2e2bcd8739ae039,{name:"Add Candidate"}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"my-3 text-2xl text-red-400",children:"Add candidate who you think must be a leader!"}),(0,$824c049f32d4395d$exports.jsx)($768b83a014dc6b8f$export$2e2bcd8739ae039,{title:"Image URI(IPFS Content CID)",hint:"QmT...",className:"mb-3",input:e,setInput:e=>t(e.target.value)}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"mb-6"}),(0,$824c049f32d4395d$exports.jsx)($768b83a014dc6b8f$export$2e2bcd8739ae039,{title:"Name",hint:"Robert Downey Jr.",input:r,setInput:e=>n(e.target.value)}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"mb-6"}),(0,$824c049f32d4395d$exports.jsx)($768b83a014dc6b8f$export$2e2bcd8739ae039,{title:"Manifest",hint:"I'm gonna prosper this city with web3 tech!",input:o,setInput:e=>a(e.target.value)}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"mb-6"}),(0,$824c049f32d4395d$exports.jsx)("button",{className:"button",onClick:async()=>(async()=>{await $1eb56f3537ba19d4$export$632bd9ab6dba7ff7(`${r}(candidate)`,"",`https://gateway.pinata.cloud/ipfs/${e}`,e,r,o,"candidate",void 0),t(""),n(""),a(""),alert("Candidate's NFT has minted! Let's Check it at Home screen!")})(),children:"Add"})]})};var $fdbd3578e89f2ce3$export$2e2bcd8739ae039=$fdbd3578e89f2ce3$var$Candidate,$7fPBF=parcelRequire("7fPBF");const $79c87cfdfe3973cb$var$Voter=()=>{const[e,t]=(0,$7fPBF.useState)("");return(0,$824c049f32d4395d$exports.jsxs)("div",{className:"grid place-items-center w-full",children:[(0,$824c049f32d4395d$exports.jsx)($8586119614494849$export$2e2bcd8739ae039,{name:"Add Voter"}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"text-lg",children:"※Only contract deployer can add voter."}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"mb-24"}),(0,$824c049f32d4395d$exports.jsx)($768b83a014dc6b8f$export$2e2bcd8739ae039,{title:"Wallet ID",hint:"0x...",input:e,type:"text",setInput:e=>t(e.target.value)}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"mb-24"}),(0,$824c049f32d4395d$exports.jsx)("button",{className:"button",onClick:()=>(async()=>{if(void 0!==window.accountId)return void alert("You are not contract deployer, so you can't add voter");0===await $1eb56f3537ba19d4$export$f8d1fece213c1fbd(`${e}`)?(await $1eb56f3537ba19d4$export$632bd9ab6dba7ff7("Vote Ticket","","https://gateway.pinata.cloud/ipfs/QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx","QmUs5K3LwdvbhKA58bH9C6FX5Q7Bhsvvg9GRAhr9aVKLyx","Vote Ticket","You can vote with this ticket! But remember that you can do it just once.","vote",`${e}`),alert(`Vote ticket is minted to ${e}!`),t("")):alert("You've already got vote ticket or voted and used it!")})(),children:"Add"})]})};var $79c87cfdfe3973cb$export$2e2bcd8739ae039=$79c87cfdfe3973cb$var$Voter;const $637a60cc4eaa3060$var$AppRouter=()=>(0,$824c049f32d4395d$exports.jsx)($1a29469ea96a6022$export$9ba4e89fdfa1fc54,{children:(0,$824c049f32d4395d$exports.jsxs)($6de75bb8982f6eaa$export$3565eb3d00ca5a74,{children:[(0,$824c049f32d4395d$exports.jsx)($6de75bb8982f6eaa$export$e7b0ac011bb776c6,{path:"/",exact:!0,element:(0,$824c049f32d4395d$exports.jsx)($68fcf543abd3360c$export$2e2bcd8739ae039,{})}),(0,$824c049f32d4395d$exports.jsx)($6de75bb8982f6eaa$export$e7b0ac011bb776c6,{path:"/candidate",exact:!0,element:(0,$824c049f32d4395d$exports.jsx)($fdbd3578e89f2ce3$export$2e2bcd8739ae039,{})}),(0,$824c049f32d4395d$exports.jsx)($6de75bb8982f6eaa$export$e7b0ac011bb776c6,{path:"/voter",exact:!0,element:(0,$824c049f32d4395d$exports.jsx)($79c87cfdfe3973cb$export$2e2bcd8739ae039,{})})]})});var $637a60cc4eaa3060$export$2e2bcd8739ae039=$637a60cc4eaa3060$var$AppRouter;function $ad4a834a025c9f22$export$2e2bcd8739ae039(){return window.walletConnection.isSignedIn()?(0,$824c049f32d4395d$exports.jsxs)("div",{className:"bg-white min-h-screen",children:[(0,$824c049f32d4395d$exports.jsx)("nav",{className:"bg-white pt-2.5",children:(0,$824c049f32d4395d$exports.jsxs)("div",{className:"container flex flex-wrap justify-between items-center mx-auto",children:[(0,$824c049f32d4395d$exports.jsxs)("div",{className:"flex items-center",children:[(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($f41ea6ee3dd223a9$exports),className:"object-cover h-12 w-12"}),(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($4c27f4ec102ffbfd$exports),className:"object-cover h-4 w-4"}),(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($30b5b0fdd18ea070$exports),className:"object-cover h-9 w-9 mx-2"}),(0,$824c049f32d4395d$exports.jsx)("span",{className:"self-center text-3xl font-semibold whitespace-nowrap app_title",children:"Election Dapp"})]}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"md:block md:w-auto pt-1",children:(0,$824c049f32d4395d$exports.jsxs)("ul",{className:"flex md:flex-row md:space-x-8 md:text-xl md:font-medium",children:[(0,$824c049f32d4395d$exports.jsx)("li",{children:(0,$824c049f32d4395d$exports.jsx)("a",{href:"http://localhost:1234/",children:" Home "})}),(0,$824c049f32d4395d$exports.jsx)("li",{children:(0,$824c049f32d4395d$exports.jsx)("a",{href:"http://localhost:1234/candidate",children:" Add Candidate "})}),(0,$824c049f32d4395d$exports.jsx)("li",{children:(0,$824c049f32d4395d$exports.jsx)("a",{href:"http://localhost:1234/voter",children:" Add Voter "})}),(0,$824c049f32d4395d$exports.jsx)("button",{className:"link text-red-500",style:{float:"right"},onClick:$1eb56f3537ba19d4$export$a0973bcfe11b05c9,children:"Sign out"})]})})]})}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"center",children:(0,$824c049f32d4395d$exports.jsx)($637a60cc4eaa3060$export$2e2bcd8739ae039,{})})]}):(0,$824c049f32d4395d$exports.jsxs)("div",{className:"grid h-3/4 place-items-center",children:[(0,$824c049f32d4395d$exports.jsxs)("div",{className:"flex items-center",children:[(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($f41ea6ee3dd223a9$exports),className:"object-cover h-16 w-16"}),(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($4c27f4ec102ffbfd$exports),className:"object-cover h-6 w-6"}),(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($30b5b0fdd18ea070$exports),className:"object-cover h-12 w-12 mx-2"}),(0,$824c049f32d4395d$exports.jsx)("span",{className:"self-center text-3xl font-semibold whitespace-nowrap app_title",children:"Election Dapp"})]}),(0,$824c049f32d4395d$exports.jsx)("div",{className:"text-3xl",children:"Have a liberate and fair election!"}),(0,$824c049f32d4395d$exports.jsx)("img",{src:$parcel$interopDefault($614c648986e51714$exports),className:"mb-4 h-5/6 w-1/2"}),(0,$824c049f32d4395d$exports.jsx)("button",{className:"text-white w-2/5 h-12 bg-gradient-to-r from-rose-500 via-rose-600 to-rose-800 hover:bg-gradient-to-br focus:ring-4 focus:outline-none font-medium rounded-lg text-3xl text-center ",onClick:$1eb56f3537ba19d4$export$596d806903d1f59e,children:"Sign In"})]})}const $61c1830666b31696$var$reactRoot=$f11ec298ebcca059$export$882461b6382ed46c(document.querySelector("#root"));window.nearInitPromise=$1eb56f3537ba19d4$export$32789f8ce7a59bb6().then((()=>{$61c1830666b31696$var$reactRoot.render((0,$824c049f32d4395d$exports.jsx)($ad4a834a025c9f22$export$2e2bcd8739ae039,{}))})).catch((e=>{$61c1830666b31696$var$reactRoot.render((0,$824c049f32d4395d$exports.jsxs)("div",{style:{color:"red"},children:["Error: ",(0,$824c049f32d4395d$exports.jsx)("code",{children:e.message})]})),console.error(e)}));
//# sourceMappingURL=index.82b276bf.js.map

'''
'''--- near-election-dapp/frontend/frontend/dist/index.ac3b5833.css ---
*,:before,:after{box-sizing:border-box;border:0 solid #e5e7eb}:before,:after{--tw-content:""}html{-webkit-text-size-adjust:100%;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{line-height:inherit;margin:0}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:rgba(0,0,0,0);background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{margin:0;padding:0;list-style:none}textarea{resize:vertical}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{vertical-align:middle;display:block}img,video{max-width:100%;height:auto}*,:before,:after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 rgba(0,0,0,0);--tw-ring-shadow:0 0 rgba(0,0,0,0);--tw-shadow:0 0 rgba(0,0,0,0);--tw-shadow-colored:0 0 rgba(0,0,0,0);--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 rgba(0,0,0,0);--tw-ring-shadow:0 0 rgba(0,0,0,0);--tw-shadow:0 0 rgba(0,0,0,0);--tw-shadow-colored:0 0 rgba(0,0,0,0);--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 rgba(0,0,0,0);--tw-ring-shadow:0 0 rgba(0,0,0,0);--tw-shadow:0 0 rgba(0,0,0,0);--tw-shadow-colored:0 0 rgba(0,0,0,0);--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.title{background-image:linear-gradient(to bottom,var(--tw-gradient-stops));-webkit-background-clip:text;--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity));color:rgba(0,0,0,0);-webkit-background-clip:text;-webkit-background-clip:text;background-clip:text;padding-top:.75rem;padding-bottom:.75rem;font-size:3rem;font-weight:600;line-height:1}.app_title{background-image:linear-gradient(to right,var(--tw-gradient-stops));--tw-gradient-from:#ef4444;--tw-gradient-to:rgba(239,68,68,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#facc15;-webkit-background-clip:text;color:rgba(0,0,0,0);-webkit-background-clip:text;-webkit-background-clip:text;background-clip:text;font-size:6rem;font-weight:800;line-height:1}.center{justify-content:center;display:flex}.button{--tw-border-opacity:1;border-bottom-width:4px;border-color:rgba(29,78,216,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(59,130,246,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));border-radius:.25rem;padding:.5rem 1rem;font-weight:700}.button:hover{--tw-border-opacity:1;border-color:rgba(59,130,246,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(96,165,250,var(--tw-bg-opacity))}.vote_button{height:2rem;--tw-border-opacity:1;border-color:rgba(159,18,57,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(225,29,72,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 rgba(0,0,0,0)),var(--tw-ring-shadow,0 0 rgba(0,0,0,0)),var(--tw-shadow);--tw-shadow-color:rgba(225,29,72,.5);--tw-shadow:var(--tw-shadow-colored);--tw-drop-shadow:drop-shadow(0 20px 13px rgba(0,0,0,.03))drop-shadow(0 8px 5px rgba(0,0,0,.08));-webkit-filter:var(--tw-blur)var(--tw-brightness)var(--tw-contrast)var(--tw-grayscale)var(--tw-hue-rotate)var(--tw-invert)var(--tw-saturate)var(--tw-sepia)var(--tw-drop-shadow);-webkit-filter:var(--tw-blur)var(--tw-brightness)var(--tw-contrast)var(--tw-grayscale)var(--tw-hue-rotate)var(--tw-invert)var(--tw-saturate)var(--tw-sepia)var(--tw-drop-shadow);-webkit-filter:var(--tw-blur)var(--tw-brightness)var(--tw-contrast)var(--tw-grayscale)var(--tw-hue-rotate)var(--tw-invert)var(--tw-saturate)var(--tw-sepia)var(--tw-drop-shadow);filter:var(--tw-blur)var(--tw-brightness)var(--tw-contrast)var(--tw-grayscale)var(--tw-hue-rotate)var(--tw-invert)var(--tw-saturate)var(--tw-sepia)var(--tw-drop-shadow);border-radius:.25rem;margin-top:.5rem;margin-bottom:.5rem;padding:0 .75rem;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-size:1.25rem;font-weight:600;line-height:1.75rem;transition-property:color,background-color,border-color,-webkit-text-decoration-color,-webkit-text-decoration-color,text-decoration-color,fill,stroke,opacity,box-shadow,-webkit-transform,-webkit-transform,transform,-webkit-filter,-webkit-filter,filter,-webkit-backdrop-filter,-webkit-backdrop-filter,backdrop-filter,-webkit-text-decoration-color,-webkit-transform,-webkit-filter,-webkit-backdrop-filter;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.vote_button:hover{--tw-border-opacity:1;border-color:rgba(220,38,38,var(--tw-border-opacity))}.close_button{height:2rem;--tw-border-opacity:1;border-color:rgba(153,27,27,var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(136,19,55,var(--tw-bg-opacity));--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 rgba(0,0,0,0)),var(--tw-ring-shadow,0 0 rgba(0,0,0,0)),var(--tw-shadow);--tw-shadow-color:rgba(225,29,72,.5);--tw-shadow:var(--tw-shadow-colored);border-radius:.25rem;margin-top:.5rem;margin-bottom:.75rem;padding:0 .75rem;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-size:1.25rem;font-weight:600;line-height:1.75rem;transition-property:color,background-color,border-color,-webkit-text-decoration-color,-webkit-text-decoration-color,text-decoration-color,fill,stroke,opacity,box-shadow,-webkit-transform,-webkit-transform,transform,-webkit-filter,-webkit-filter,filter,-webkit-backdrop-filter,-webkit-backdrop-filter,backdrop-filter,-webkit-text-decoration-color,-webkit-transform,-webkit-filter,-webkit-backdrop-filter;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.close_button:hover{--tw-border-opacity:1;border-color:rgba(147,51,234,var(--tw-border-opacity))}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-auto{margin-left:auto;margin-right:auto}.my-3{margin-top:.75rem;margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-2{margin-bottom:.5rem}.mt-1{margin-top:.25rem}.mb-3{margin-bottom:.75rem}.mb-6{margin-bottom:1.5rem}.mr-2{margin-right:.5rem}.mb-24{margin-bottom:6rem}.box-content{box-sizing:content-box}.block{display:block}.flex{display:flex}.grid{display:grid}.h-3\/4{height:75%}.h-16{height:4rem}.h-6{height:1.5rem}.h-12{height:3rem}.h-5\/6{height:83.3333%}.h-4{height:1rem}.h-9{height:2.25rem}.h-96{height:24rem}.h-3\/5{height:60%}.h-7{height:1.75rem}.h-5{height:1.25rem}.h-10{height:2.5rem}.h-screen{height:100vh}.min-h-screen{min-height:100vh}.w-16{width:4rem}.w-6{width:1.5rem}.w-12{width:3rem}.w-1\/2{width:50%}.w-2\/5{width:40%}.w-4{width:1rem}.w-9{width:2.25rem}.w-64{width:16rem}.w-full{width:100%}.w-3\/5{width:60%}.w-1\/3{width:33.3333%}.w-5{width:1.25rem}.max-w-sm{max-width:24rem}.grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.flex-wrap{flex-wrap:wrap}.place-items-center{align-items:center;justify-items:center}.items-center{align-items:center}.justify-between{justify-content:space-between}.gap-10{gap:2.5rem}.self-center{align-self:center}.overflow-hidden{overflow:hidden}.whitespace-nowrap{white-space:nowrap}.rounded-lg{border-radius:.5rem}.rounded{border-radius:.25rem}.rounded-md{border-radius:.375rem}.border{border-width:1px}.border-4{border-width:4px}.border-slate-300{--tw-border-opacity:1;border-color:rgba(203,213,225,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-red-600{--tw-bg-opacity:1;background-color:rgba(220,38,38,var(--tw-bg-opacity))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.from-rose-500{--tw-gradient-from:#f43f5e;--tw-gradient-to:rgba(244,63,94,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-rose-600{--tw-gradient-to:rgba(225,29,72,0);--tw-gradient-stops:var(--tw-gradient-from),#e11d48,var(--tw-gradient-to)}.to-rose-800{--tw-gradient-to:#9f1239}.object-cover{object-fit:cover}.p-4{padding:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.pt-2\.5{padding-top:.625rem}.pt-2{padding-top:.5rem}.pt-1{padding-top:.25rem}.pt-7{padding-top:1.75rem}.text-center{text-align:center}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-base{font-size:1rem;line-height:1.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.font-semibold{font-weight:600}.font-medium{font-weight:500}.font-bold{font-weight:700}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgba(239,68,68,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.text-slate-700{--tw-text-opacity:1;color:rgba(51,65,85,var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgba(248,113,113,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.placeholder-slate-400::-webkit-input-placeholder{--tw-placeholder-opacity:1;color:rgba(148,163,184,var(--tw-placeholder-opacity))}.placeholder-slate-400::placeholder{--tw-placeholder-opacity:1;color:rgba(148,163,184,var(--tw-placeholder-opacity))}.opacity-20{opacity:.2}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 rgba(0,0,0,0)),var(--tw-ring-shadow,0 0 rgba(0,0,0,0)),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 rgba(0,0,0,0)),var(--tw-ring-shadow,0 0 rgba(0,0,0,0)),var(--tw-shadow)}.shadow-rose-600{--tw-shadow-color:#e11d48;--tw-shadow:var(--tw-shadow-colored)}html{font-size:calc(.9em + .5vw)}.invalid\:border-pink-500:invalid{--tw-border-opacity:1;border-color:rgba(236,72,153,var(--tw-border-opacity))}.invalid\:text-pink-600:invalid{--tw-text-opacity:1;color:rgba(219,39,119,var(--tw-text-opacity))}.hover\:bg-gradient-to-br:hover{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.focus\:border-sky-500:focus{--tw-border-opacity:1;border-color:rgba(14,165,233,var(--tw-border-opacity))}.focus\:outline-none:focus{outline-offset:2px;outline:2px solid rgba(0,0,0,0)}.focus\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset)0 0 0 calc(4px + var(--tw-ring-offset-width))var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 rgba(0,0,0,0))}.focus\:ring-1:focus{--tw-ring-offset-shadow:var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 rgba(0,0,0,0))}.focus\:ring-sky-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgba(14,165,233,var(--tw-ring-opacity))}.focus\:invalid\:border-pink-500:invalid:focus{--tw-border-opacity:1;border-color:rgba(236,72,153,var(--tw-border-opacity))}.focus\:invalid\:ring-pink-500:invalid:focus{--tw-ring-opacity:1;--tw-ring-color:rgba(236,72,153,var(--tw-ring-opacity))}.disabled\:border-slate-200:disabled{--tw-border-opacity:1;border-color:rgba(226,232,240,var(--tw-border-opacity))}.disabled\:bg-slate-50:disabled{--tw-bg-opacity:1;background-color:rgba(248,250,252,var(--tw-bg-opacity))}.disabled\:text-slate-500:disabled{--tw-text-opacity:1;color:rgba(100,116,139,var(--tw-text-opacity))}.disabled\:shadow-none:disabled{--tw-shadow:0 0 rgba(0,0,0,0);--tw-shadow-colored:0 0 rgba(0,0,0,0);box-shadow:var(--tw-ring-offset-shadow,0 0 rgba(0,0,0,0)),var(--tw-ring-shadow,0 0 rgba(0,0,0,0)),var(--tw-shadow)}@media (min-width:768px){.md\:block{display:block}.md\:w-auto{width:auto}.md\:flex-row{flex-direction:row}.md\:space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(2rem*var(--tw-space-x-reverse));margin-left:calc(2rem*calc(1 - var(--tw-space-x-reverse)))}.md\:text-xl{font-size:1.25rem;line-height:1.75rem}.md\:font-medium{font-weight:500}}
/*# sourceMappingURL=index.ac3b5833.css.map */

'''
'''--- near-election-dapp/frontend/frontend/dist/index.bc0daea6.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: #5ace84;
  --primary: #ff585d;
  --secondary: #0072ce;
  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
  font-size: calc(.9em + .5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  max-width: 26em;
  margin: 0 auto;
}

h1 {
  text-align: center;
  background-image: url("logo-black.4514ed42.svg");
  background-position: 50% 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0;
  font-size: 1.5em;
}

.greeting {
  color: var(--secondary);
  text-decoration: underline;
}

h2 {
  text-align: center;
}

.please-wait .change {
  pointer-events: none;
}

ul.information {
  text-align: left;
  margin: 2em 0;
  padding: 0;
  font-size: .8em;
}

.information li:first-child {
  border-top: 1px solid var(--light-gray);
}

.information li {
  border-bottom: 1px solid var(--light-gray);
  padding: .5em 0;
  list-style: none;
}

.change {
  border: 2px solid var(--light-gray);
  flex-direction: column;
  place-content: stretch space-evenly;
  align-items: stretch;
  padding: .5em;
  font-size: 1em;
  display: flex;
}

.change > div {
  place-content: stretch space-evenly;
  align-items: stretch;
  display: flex;
}

.change input {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  flex: 1;
}

.change label {
  text-align: left;
  margin-right: 10px;
  padding-bottom: .5em;
  display: block;
}

.change button {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

a, .link {
  color: var(--primary);
  text-decoration: none;
}

a:hover, a:focus, .link:hover, .link:focus {
  text-decoration: underline;
}

a:active, .link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}

main.please-wait .change button {
  pointer-events: none;
  background-color: #fff;
  position: relative;
}

main.please-wait .change button span {
  visibility: hidden;
}

button {
  background-color: var(--secondary);
  color: #efefef;
  cursor: pointer;
  border: none;
  border-radius: 5px;
  padding: .3em .75em;
  transition: transform 30ms;
}

button:hover, button:focus {
  box-shadow: inset 0 0 10em #fff3;
}

input {
  background-color: var(--light-gray);
  caret-color: var(--primary);
  color: inherit;
  border: none;
  border-radius: 5px 0 0 5px;
  padding: .25em .5em;
}

input::selection {
  background-color: var(--secondary);
  color: #efefef;
}

input:focus {
  box-shadow: inset 0 0 10em #00000005;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }

  h1 {
    background-image: url("logo-white.a7716062.svg");
  }

  input:focus {
    box-shadow: inset 0 0 10em #ffffff05;
  }
}

main.please-wait .loader, main.please-wait .loader:after {
  display: inline-block;
}

.loader, .loader:after {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: none;
}

.loader {
  text-indent: -9999em;
  border-top: 3px solid var(--secondary);
  border-right: 3px solid var(--secondary);
  border-bottom: 3px solid var(--secondary);
  border-left: 3px solid #fff;
  font-size: 10px;
  animation: load8 1.1s linear infinite;
  position: absolute;
  top: calc(50% - 10px);
  left: calc(50% - 10px);
  transform: translateZ(0);
}

@keyframes load8 {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=index.bc0daea6.css.map */

'''
'''--- near-election-dapp/frontend/frontend/dist/index.html ---
<!DOCTYPE html><html lang="en"><head><link rel="stylesheet" href="index.ac3b5833.css"><meta charset="utf-8"><link rel="icon" href="favicon.721fd337.ico"><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="apple-touch-icon" href="favicon.721fd337.ico"><title>Welcome to NEAR with React</title></head><body> <noscript>You need to enable JavaScript to run this app.</noscript> <div id="root"></div> <script src="index.82b276bf.js" type="module"></script><script src="index.050cf18d.js" nomodule="" defer></script> </body></html>
'''
'''--- near-election-dapp/frontend/frontend/dist/logo-black.195bc904.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"></stop><stop offset=".42" stop-color="#24272a" stop-opacity="0"></stop><stop offset=".59" stop-color="#24272a" stop-opacity="0"></stop><stop offset=".81" stop-color="#24272a"></stop></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url('#a')"></path><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"></path></svg>
'''
'''--- near-election-dapp/frontend/frontend/dist/logo-black.4514ed42.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"></stop><stop offset=".42" stop-color="#24272a" stop-opacity="0"></stop><stop offset=".59" stop-color="#24272a" stop-opacity="0"></stop><stop offset=".81" stop-color="#24272a"></stop></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url('#a')"></path><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"></path></svg>
'''
'''--- near-election-dapp/frontend/frontend/dist/logo-black.54439fde.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="M88.46 216a16.45 16.45 0 0 0 12.46-5.71L213.48 79.72A16.42 16.42 0 0 0 199.54 72a16.46 16.46 0 0 0-12.41 5.65L74 207.45A16.46 16.46 0 0 0 88.46 216z" fill="url('#a')"/><path d="M88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45A16.46 16.46 0 0 0 216 199.54V88.46A16.46 16.46 0 0 0 199.54 72a16.36 16.36 0 0 0-7.54 1.81v109.05L104.55 77.92A16.44 16.44 0 0 0 91.91 72h-3.45A16.46 16.46 0 0 0 72 88.46v111.08A16.46 16.46 0 0 0 88.46 216z" fill="#24272a"/></svg>
'''
'''--- near-election-dapp/frontend/frontend/dist/logo-white.a40cee69.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"></stop><stop offset=".42" stop-color="#fff" stop-opacity="0"></stop><stop offset=".59" stop-color="#fff" stop-opacity="0"></stop><stop offset=".81" stop-color="#fff"></stop></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url('#a')"></path><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"></path></svg>
'''
'''--- near-election-dapp/frontend/frontend/dist/logo-white.a7716062.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"></stop><stop offset=".42" stop-color="#fff" stop-opacity="0"></stop><stop offset=".59" stop-color="#fff" stop-opacity="0"></stop><stop offset=".81" stop-color="#fff"></stop></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url('#a')"></path><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"></path></svg>
'''
'''--- near-election-dapp/frontend/frontend/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="assets/img/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="assets/img/favicon.ico" />
    <title>Welcome to NEAR with React</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <script src="./index.js" type="module"></script>
  </body>
</html>

'''
'''--- near-election-dapp/frontend/frontend/index.js ---
import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';
import { initContract } from './assets/js/near/utils';

const reactRoot = createRoot(document.querySelector('#root'));

window.nearInitPromise = initContract()
  .then(() => {
    reactRoot.render(<App />);
  })
  .catch(e => {
    reactRoot.render(<div style={{color: 'red'}}>Error: <code>{e.message}</code></div>);
    console.error(e);
  });

'''
'''--- near-election-dapp/frontend/frontend/neardev/dev-account.env ---
CONTRACT_NAME=nftcontract.dev-1660204085773-49134722844982
'''
'''--- near-election-dapp/frontend/frontend/package-lock.json ---
{
  "name": "my-near-app",
  "version": "1.0.0",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "my-near-app",
      "version": "1.0.0",
      "license": "(MIT AND Apache-2.0)",
      "dependencies": {
        "near-api-js": "^0.44.2",
        "postcss": "^8.4.14",
        "react": "^18.1.0",
        "react-dom": "^18.1.0",
        "react-ipfs-image": "^0.6.0",
        "react-router-dom": "^6.3.0",
        "regenerator-runtime": "^0.13.9",
        "tailwindcss": "^3.1.6"
      },
      "devDependencies": {
        "@babel/core": "^7.18.2",
        "@babel/preset-env": "^7.18.2",
        "@babel/preset-react": "^7.17.12",
        "@tailwindcss/typography": "^0.5.4",
        "@types/node": "^18.6.2",
        "ava": "^4.2.0",
        "env-cmd": "^10.1.0",
        "nodemon": "^2.0.16",
        "parcel": "^2.6.0",
        "process": "^0.11.10",
        "react-test-renderer": "^18.1.0",
        "ts-node": "^10.8.0",
        "typescript": "^4.7.2"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dev": true,
      "dependencies": {
        "@babel/highlight": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.18.8.tgz",
      "integrity": "sha512-HSmX4WZPPK3FUxYp7g2T6EyO8j96HlZJlxmKPSh6KAcqwyDrfx7hKjXpAW/0FhFfTJsR0Yt4lAjLI2coMptIHQ==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.18.10.tgz",
      "integrity": "sha512-JQM6k6ENcBFKVtWvLavlvi/mPcpYZ3+R+2EySDEMSMbp7Mn4FexlbbJVrx2R7Ijhr01T8gyqrOaABWIOgxeUyw==",
      "dev": true,
      "dependencies": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.18.10",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-module-transforms": "^7.18.9",
        "@babel/helpers": "^7.18.9",
        "@babel/parser": "^7.18.10",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.18.10",
        "@babel/types": "^7.18.10",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.18.12",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.18.12.tgz",
      "integrity": "sha512-dfQ8ebCN98SvyL7IxNMCUtZQSq5R7kxgN+r8qYTGDmmSion1hX2C0zq2yo1bsCDhXixokv1SAWTZUMYbO/V5zg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.10",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/generator/node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "dev": true,
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz",
      "integrity": "sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-explode-assignable-expression": "^7.18.6",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.18.9.tgz",
      "integrity": "sha512-tzLCyVmqUiFlcFoAPLA/gL9TeYrF61VLNtb+hvkuVaB5SUjW7jcfrglBIX1vUIoT7CLP3bBlIMeyEsIl2eFQNg==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.20.2",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.18.9.tgz",
      "integrity": "sha512-WvypNAYaVh23QcjpMR24CwZY2Nz6hqdOcFdPbNpV56hL5H6KiFheO7Xm1aPdlLQ7d5emYZX7VZwPp9x3z+2opw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.18.6.tgz",
      "integrity": "sha512-7LcpH1wnQLGrI+4v+nPp+zUvIkF9x0ddv1Hkdue10tg3gmRnLy97DXh4STiOf1qeIInyD69Qv5kKSZzKD8B/7A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "regexpu-core": "^5.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.2.tgz",
      "integrity": "sha512-r9QJJ+uDWrd+94BSPcP6/de67ygLtvVy6cK4luE6MOuDsZIdoaPBnfSpbO/+LTifjPckbKXRuI9BB/Z2/y3iTg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.17.7",
        "@babel/helper-plugin-utils": "^7.16.7",
        "debug": "^4.1.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.14.2",
        "semver": "^6.1.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0-0"
      }
    },
    "node_modules/@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-explode-assignable-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz",
      "integrity": "sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-function-name": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.18.9.tgz",
      "integrity": "sha512-fJgWlZt7nxGksJS9a0XdSaI4XvpExnNIgRP+rVefWh5U7BL8pPuir6SJUmFKRfjWQ51OtWSzwOxhaH/EBWWc0A==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.18.6",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.18.9.tgz",
      "integrity": "sha512-KYNqY0ICwfv19b31XzvmI/mfcylOzbLtowkw+mfvGPAQ3kfCnMLYbED3YecL5tPd8nAYFQFAd6JHp2LxZk/J1g==",
      "dev": true,
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.18.6",
        "@babel/template": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.18.9.tgz",
      "integrity": "sha512-aBXPT3bmtLryXaoJLyYPXPlSD4p1ld9aYeR+sJNOZjJJGiOpb+fKfh3NkcCu7J54nUJwCERPBExCCpyCOHnu/w==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-remap-async-to-generator": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz",
      "integrity": "sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-wrap-function": "^7.18.9",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.18.9.tgz",
      "integrity": "sha512-dNsWibVI4lNT6HiuOIBr1oyxo40HvIVmbwPUm3XZ7wMh4k2WxrxTqZwSqw/eEmXDS9np0ey5M2bz9tBmO9c+YQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-simple-access": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.18.6.tgz",
      "integrity": "sha512-iNpIgTgyAvDQpDj76POqg+YEt8fPxx3yaNBg3S30dxNKm2SWfYhD0TGrK/Eu9wHpUW63VQU894TsTg+GLbUa1g==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.18.9.tgz",
      "integrity": "sha512-imytd2gHi3cJPsybLRbmFrF7u5BIEuI2cNheyKi3/iOBC63kNn3q8Crn2xVuESli0aM4KYsyEqKyS7lFL8YVtw==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.18.10.tgz",
      "integrity": "sha512-XtIfWmeNY3i4t7t4D2t02q50HvqHybPqW2ki1kosnvWCwuCMeo81Jf0gwr85jy/neUdg5XDdeFE/80DXiO+njw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-wrap-function": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.18.11.tgz",
      "integrity": "sha512-oBUlbv+rjZLh2Ks9SKi4aL7eKaAXBWleHzU89mP0G6BMUlRxSckk9tSIkgDGydhgFxHuGSlBQZfnaD47oBEB7w==",
      "dev": true,
      "dependencies": {
        "@babel/helper-function-name": "^7.18.9",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.18.11",
        "@babel/types": "^7.18.10"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.18.9.tgz",
      "integrity": "sha512-Jf5a+rbrLoR4eNdUmnFu8cN5eNJT6qdTdOg5IHIzq87WwyRw9PwguLFOWYgktN/60IP4fgDUawJvs7PjQIzELQ==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dev": true,
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.18.11.tgz",
      "integrity": "sha512-9JKn5vN+hDt0Hdqn1PiJ2guflwP+B6Ga8qbDuoF0PzzVhrzsKIJo8yGqVk6CmMHiMei9w1C1Bp9IMJSIK+HPIQ==",
      "dev": true,
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz",
      "integrity": "sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.18.9.tgz",
      "integrity": "sha512-AHrP9jadvH7qlOj6PINbgSuphjQUAK7AOT7DPjBo9EHoLhQTnnK5u45e1Hd4DbSQEO9nqPWtQ89r+XEOWFScKg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9",
        "@babel/plugin-proposal-optional-chaining": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.13.0"
      }
    },
    "node_modules/@babel/plugin-proposal-async-generator-functions": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.18.10.tgz",
      "integrity": "sha512-1mFuY2TOsR1hxbjCo4QL+qlIjV07p4H4EUYw2J/WCqsvFV6V9X9z9YhXbWndc/4fw+hYGlDT7egYxliMp5O6Ew==",
      "dev": true,
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-remap-async-to-generator": "^7.18.9",
        "@babel/plugin-syntax-async-generators": "^7.8.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-class-properties": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz",
      "integrity": "sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-class-static-block": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.18.6.tgz",
      "integrity": "sha512-+I3oIiNxrCpup3Gi8n5IGMwj0gOCAjcJUSQEcotNnCCPMEnixawOQ+KeJPlgfjzx+FKQ1QSyZOWe7wmoJp7vhw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-class-static-block": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0"
      }
    },
    "node_modules/@babel/plugin-proposal-dynamic-import": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz",
      "integrity": "sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-export-namespace-from": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz",
      "integrity": "sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-json-strings": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz",
      "integrity": "sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-json-strings": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-logical-assignment-operators": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.18.9.tgz",
      "integrity": "sha512-128YbMpjCrP35IOExw2Fq+x55LMP42DzhOhX2aNNIdI9avSWl2PI0yuBWarr3RYpZBSPtabfadkH2yeRiMD61Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-nullish-coalescing-operator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz",
      "integrity": "sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-numeric-separator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz",
      "integrity": "sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-object-rest-spread": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.18.9.tgz",
      "integrity": "sha512-kDDHQ5rflIeY5xl69CEqGEZ0KY369ehsCIEbTGb4siHG5BE9sga/T0r0OUwyZNLMmZE79E1kbsqAjwFCW4ds6Q==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-transform-parameters": "^7.18.8"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-optional-catch-binding": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz",
      "integrity": "sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-optional-chaining": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.18.9.tgz",
      "integrity": "sha512-v5nwt4IqBXihxGsW2QmCWMDS3B3bzGIk/EQVZz2ei7f3NJl8NzAJVvUmpDW5q1CRNY+Beb/k58UAH1Km1N411w==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-methods": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz",
      "integrity": "sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-property-in-object": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.18.6.tgz",
      "integrity": "sha512-9Rysx7FOctvT5ouj5JODjAFAkgGoudQuLPamZb0v1TGLpapdNaftzifU8NTWQm0IRjqoYypdrSmyWgkocDQ8Dw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz",
      "integrity": "sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-properties": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.12.13"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-class-static-block": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-export-namespace-from": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz",
      "integrity": "sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.3"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-assertions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.18.6.tgz",
      "integrity": "sha512-/DU3RXad9+bZwrgWJQKbr39gYbJpLJHezqEzRzi/BHRlJ9zsQb4CK2CA/5apllXNomwA1qHwzvHl+AdEmC5krQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-jsx": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.18.6.tgz",
      "integrity": "sha512-6mmljtAedFGTWu2p/8WIORGwy+61PLgOMPOdazc7YoJ9ZCWUyFy3A6CpPkRKLKD1ToAesxX8KGEViAiLo9N+7Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-logical-assignment-operators": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-numeric-separator": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.10.4"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.8.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-private-property-in-object": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-top-level-await": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.14.5"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-arrow-functions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.18.6.tgz",
      "integrity": "sha512-9S9X9RUefzrsHZmKMbDXxweEH+YlE8JJEuat9FdvW9Qh1cw7W64jELCtWNkPBPX5En45uy28KGvA/AySqUh8CQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-to-generator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.18.6.tgz",
      "integrity": "sha512-ARE5wZLKnTgPW7/1ftQmSi1CmkqqHo2DNmtztFhvgtOWSDfq0Cq9/9L+KnZNYSNrydBekhW3rwShduf59RoXag==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-remap-async-to-generator": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoped-functions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz",
      "integrity": "sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoping": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.18.9.tgz",
      "integrity": "sha512-5sDIJRV1KtQVEbt/EIBwGy4T01uYIo4KRB3VUqzkhrAIOGx7AoctL9+Ux88btY0zXdDyPJ9mW+bg+v+XEkGmtw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-classes": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.18.9.tgz",
      "integrity": "sha512-EkRQxsxoytpTlKJmSPYrsOMjCILacAjtSVkd4gChEe2kXjFCun3yohhW5I7plXJhCemM0gKsaGMcO8tinvCA5g==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-computed-properties": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.18.9.tgz",
      "integrity": "sha512-+i0ZU1bCDymKakLxn5srGHrsAPRELC2WIbzwjLhHW9SIE1cPYkLCL0NlnXMZaM1vhfgA2+M7hySk42VBvrkBRw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-destructuring": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.18.9.tgz",
      "integrity": "sha512-p5VCYNddPLkZTq4XymQIaIfZNJwT9YsjkPOhkVEqt6QIpQFZVM9IltqqYpOEkJoN1DPznmxUDyZ5CTZs/ZCuHA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dotall-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz",
      "integrity": "sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-keys": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz",
      "integrity": "sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-exponentiation-operator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz",
      "integrity": "sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-for-of": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.18.8.tgz",
      "integrity": "sha512-yEfTRnjuskWYo0k1mHUqrVWaZwrdq8AYbfrpqULOJOaucGSp4mNMVps+YtA8byoevxS/urwU75vyhQIxcCgiBQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-function-name": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz",
      "integrity": "sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-literals": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz",
      "integrity": "sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-member-expression-literals": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz",
      "integrity": "sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-amd": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.18.6.tgz",
      "integrity": "sha512-Pra5aXsmTsOnjM3IajS8rTaLCy++nGM4v3YR4esk5PCsyg9z8NA5oQLwxzMUtDBd8F+UmVza3VxoAaWCbzH1rg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-commonjs": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.18.6.tgz",
      "integrity": "sha512-Qfv2ZOWikpvmedXQJDSbxNqy7Xr/j2Y8/KfijM0iJyKkBTmWuvCA1yeH1yDM7NJhBW/2aXxeucLj6i80/LAJ/Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-systemjs": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.18.9.tgz",
      "integrity": "sha512-zY/VSIbbqtoRoJKo2cDTewL364jSlZGvn0LKOf9ntbfxOvjfmyrdtEEOAdswOswhZEb8UH3jDkCKHd1sPgsS0A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-module-transforms": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-validator-identifier": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-umd": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz",
      "integrity": "sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.18.6.tgz",
      "integrity": "sha512-UmEOGF8XgaIqD74bC8g7iV3RYj8lMf0Bw7NJzvnS9qQhM4mg+1WHKotUIdjxgD2RGrgFLZZPCFPFj3P/kVDYhg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-new-target": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz",
      "integrity": "sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-super": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz",
      "integrity": "sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-parameters": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.18.8.tgz",
      "integrity": "sha512-ivfbE3X2Ss+Fj8nnXvKJS6sjRG4gzwPMsP+taZC+ZzEGjAYlvENixmt1sZ5Ca6tWls+BlKSGKPJ6OOXvXCbkFg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-property-literals": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz",
      "integrity": "sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-display-name": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.18.6.tgz",
      "integrity": "sha512-TV4sQ+T013n61uMoygyMRm+xf04Bd5oqFpv2jAEQwSZ8NwQA7zeRPg1LMVg2PWi3zWBz+CLKD+v5bcpZ/BS0aA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.18.10.tgz",
      "integrity": "sha512-gCy7Iikrpu3IZjYZolFE4M1Sm+nrh1/6za2Ewj77Z+XirT4TsbJcvOFOyF+fRPwU6AKKK136CZxx6L8AbSFG6A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-jsx": "^7.18.6",
        "@babel/types": "^7.18.10"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-development": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.18.6.tgz",
      "integrity": "sha512-SA6HEjwYFKF7WDjWcMcMGUimmw/nhNRDWxr+KaLSCrkD/LMDBvWRmHAYgE1HDeF8KUuI8OAu+RT6EOtKxSW2qA==",
      "dev": true,
      "dependencies": {
        "@babel/plugin-transform-react-jsx": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-pure-annotations": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.18.6.tgz",
      "integrity": "sha512-I8VfEPg9r2TRDdvnHgPepTKvuRomzA8+u+nhY7qSI1fR2hRNebasZEETLyM5mAUr0Ku56OkXJ0I7NHJnO6cJiQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regenerator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.18.6.tgz",
      "integrity": "sha512-poqRI2+qiSdeldcz4wTSTXBRryoq3Gc70ye7m7UD5Ww0nE29IXqMl6r7Nd15WBgRd74vloEMlShtH6CKxVzfmQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "regenerator-transform": "^0.15.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-reserved-words": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz",
      "integrity": "sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-shorthand-properties": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz",
      "integrity": "sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-spread": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.18.9.tgz",
      "integrity": "sha512-39Q814wyoOPtIB/qGopNIL9xDChOE1pNU0ZY5dO0owhiVt/5kFm4li+/bBtwc7QotG0u5EPzqhZdjMtmqBqyQA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-sticky-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz",
      "integrity": "sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-template-literals": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz",
      "integrity": "sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typeof-symbol": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz",
      "integrity": "sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-escapes": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz",
      "integrity": "sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz",
      "integrity": "sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-env": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.18.10.tgz",
      "integrity": "sha512-wVxs1yjFdW3Z/XkNfXKoblxoHgbtUF7/l3PvvP4m02Qz9TZ6uZGxRVYjSQeR87oQmHco9zWitW5J82DJ7sCjvA==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.18.6",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.18.9",
        "@babel/plugin-proposal-async-generator-functions": "^7.18.10",
        "@babel/plugin-proposal-class-properties": "^7.18.6",
        "@babel/plugin-proposal-class-static-block": "^7.18.6",
        "@babel/plugin-proposal-dynamic-import": "^7.18.6",
        "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
        "@babel/plugin-proposal-json-strings": "^7.18.6",
        "@babel/plugin-proposal-logical-assignment-operators": "^7.18.9",
        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
        "@babel/plugin-proposal-numeric-separator": "^7.18.6",
        "@babel/plugin-proposal-object-rest-spread": "^7.18.9",
        "@babel/plugin-proposal-optional-catch-binding": "^7.18.6",
        "@babel/plugin-proposal-optional-chaining": "^7.18.9",
        "@babel/plugin-proposal-private-methods": "^7.18.6",
        "@babel/plugin-proposal-private-property-in-object": "^7.18.6",
        "@babel/plugin-proposal-unicode-property-regex": "^7.18.6",
        "@babel/plugin-syntax-async-generators": "^7.8.4",
        "@babel/plugin-syntax-class-properties": "^7.12.13",
        "@babel/plugin-syntax-class-static-block": "^7.14.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3",
        "@babel/plugin-syntax-import-assertions": "^7.18.6",
        "@babel/plugin-syntax-json-strings": "^7.8.3",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
        "@babel/plugin-syntax-top-level-await": "^7.14.5",
        "@babel/plugin-transform-arrow-functions": "^7.18.6",
        "@babel/plugin-transform-async-to-generator": "^7.18.6",
        "@babel/plugin-transform-block-scoped-functions": "^7.18.6",
        "@babel/plugin-transform-block-scoping": "^7.18.9",
        "@babel/plugin-transform-classes": "^7.18.9",
        "@babel/plugin-transform-computed-properties": "^7.18.9",
        "@babel/plugin-transform-destructuring": "^7.18.9",
        "@babel/plugin-transform-dotall-regex": "^7.18.6",
        "@babel/plugin-transform-duplicate-keys": "^7.18.9",
        "@babel/plugin-transform-exponentiation-operator": "^7.18.6",
        "@babel/plugin-transform-for-of": "^7.18.8",
        "@babel/plugin-transform-function-name": "^7.18.9",
        "@babel/plugin-transform-literals": "^7.18.9",
        "@babel/plugin-transform-member-expression-literals": "^7.18.6",
        "@babel/plugin-transform-modules-amd": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/plugin-transform-modules-systemjs": "^7.18.9",
        "@babel/plugin-transform-modules-umd": "^7.18.6",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.18.6",
        "@babel/plugin-transform-new-target": "^7.18.6",
        "@babel/plugin-transform-object-super": "^7.18.6",
        "@babel/plugin-transform-parameters": "^7.18.8",
        "@babel/plugin-transform-property-literals": "^7.18.6",
        "@babel/plugin-transform-regenerator": "^7.18.6",
        "@babel/plugin-transform-reserved-words": "^7.18.6",
        "@babel/plugin-transform-shorthand-properties": "^7.18.6",
        "@babel/plugin-transform-spread": "^7.18.9",
        "@babel/plugin-transform-sticky-regex": "^7.18.6",
        "@babel/plugin-transform-template-literals": "^7.18.9",
        "@babel/plugin-transform-typeof-symbol": "^7.18.9",
        "@babel/plugin-transform-unicode-escapes": "^7.18.10",
        "@babel/plugin-transform-unicode-regex": "^7.18.6",
        "@babel/preset-modules": "^0.1.5",
        "@babel/types": "^7.18.10",
        "babel-plugin-polyfill-corejs2": "^0.3.2",
        "babel-plugin-polyfill-corejs3": "^0.5.3",
        "babel-plugin-polyfill-regenerator": "^0.4.0",
        "core-js-compat": "^3.22.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-modules": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz",
      "integrity": "sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
        "@babel/plugin-transform-dotall-regex": "^7.4.4",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-react": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.18.6.tgz",
      "integrity": "sha512-zXr6atUmyYdiWRVLOZahakYmOBHtWc2WGCkP8PYTgZi0iJXDY2CN180TdrIW4OGOAdLc7TifzDIvtx6izaRIzg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-react-display-name": "^7.18.6",
        "@babel/plugin-transform-react-jsx": "^7.18.6",
        "@babel/plugin-transform-react-jsx-development": "^7.18.6",
        "@babel/plugin-transform-react-pure-annotations": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.18.9.tgz",
      "integrity": "sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
      "dependencies": {
        "regenerator-runtime": "^0.13.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.18.11.tgz",
      "integrity": "sha512-TG9PiM2R/cWCAy6BPJKeHzNbu4lPzOSZpeMfeNErskGpTJx6trEvFaVCbDvpcxwy49BKWmEPwiW8mrysNiDvIQ==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.18.10",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.18.11",
        "@babel/types": "^7.18.10",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.18.10.tgz",
      "integrity": "sha512-MJvnbEiiNkpjo+LknnmRrqbY1GPUUggjv+wQVjetM/AONoupqRALB7I6jGqNUAZsKcRIEu2J6FRFvsczljjsaQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-string-parser": "^7.18.10",
        "@babel/helper-validator-identifier": "^7.18.6",
        "to-fast-properties": "^2.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "devOptional": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
      "devOptional": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "dev": true,
      "dependencies": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "devOptional": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.2.tgz",
      "integrity": "sha512-m7O9o2uR8k2ObDysZYzdfhb08VuEml5oWGiosa1VdaPZ/A6QyPkAJuwN0Q1lhULOf6B7MtQmHENS743hWtCrgw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "node_modules/@jridgewell/source-map/node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "dev": true,
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==",
      "devOptional": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@lezer/common": {
      "version": "0.15.12",
      "resolved": "https://registry.npmjs.org/@lezer/common/-/common-0.15.12.tgz",
      "integrity": "sha512-edfwCxNLnzq5pBA/yaIhwJ3U3Kz8VAUOTRg0hhxaizaI1N+qxV7EXDv/kLCkLeq2RzSFvxexlaj5Mzfn2kY0Ig==",
      "dev": true
    },
    "node_modules/@lezer/lr": {
      "version": "0.15.8",
      "resolved": "https://registry.npmjs.org/@lezer/lr/-/lr-0.15.8.tgz",
      "integrity": "sha512-bM6oE6VQZ6hIFxDNKk8bKPa14hqFrV07J/vHGOeiAbJReIaQXmkVb6xQu4MR+JBTLa5arGRyAAjJe1qaQt3Uvg==",
      "dev": true,
      "dependencies": {
        "@lezer/common": "^0.15.0"
      }
    },
    "node_modules/@lmdb/lmdb-darwin-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-arm64/-/lmdb-darwin-arm64-2.5.2.tgz",
      "integrity": "sha512-+F8ioQIUN68B4UFiIBYu0QQvgb9FmlKw2ctQMSBfW2QBrZIxz9vD9jCGqTCPqZBRbPHAS/vG1zSXnKqnS2ch/A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@lmdb/lmdb-darwin-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-x64/-/lmdb-darwin-x64-2.5.2.tgz",
      "integrity": "sha512-KvPH56KRLLx4KSfKBx0m1r7GGGUMXm0jrKmNE7plbHlesZMuPJICtn07HYgQhj1LNsK7Yqwuvnqh1QxhJnF1EA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-arm": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm/-/lmdb-linux-arm-2.5.2.tgz",
      "integrity": "sha512-5kQAP21hAkfW5Bl+e0P57dV4dGYnkNIpR7f/GAh6QHlgXx+vp/teVj4PGRZaKAvt0GX6++N6hF8NnGElLDuIDw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm64/-/lmdb-linux-arm64-2.5.2.tgz",
      "integrity": "sha512-aLl89VHL/wjhievEOlPocoefUyWdvzVrcQ/MHQYZm2JfV1jUsrbr/ZfkPPUFvZBf+VSE+Q0clWs9l29PCX1hTQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-x64/-/lmdb-linux-x64-2.5.2.tgz",
      "integrity": "sha512-xUdUfwDJLGjOUPH3BuPBt0NlIrR7f/QHKgu3GZIXswMMIihAekj2i97oI0iWG5Bok/b+OBjHPfa8IU9velnP/Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-win32-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-win32-x64/-/lmdb-win32-x64-2.5.2.tgz",
      "integrity": "sha512-zrBczSbXKxEyK2ijtbRdICDygRqWSRPpZMN5dD1T8VMEW5RIhIbwFWw2phDRXuBQdVDpSjalCIUMWMV2h3JaZA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@mischnic/json-sourcemap": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@mischnic/json-sourcemap/-/json-sourcemap-0.1.0.tgz",
      "integrity": "sha512-dQb3QnfNqmQNYA4nFSN/uLaByIic58gOXq4Y4XqLOWmOrw73KmJPt/HLyG0wvn1bnR6mBKs/Uwvkh+Hns1T0XA==",
      "dev": true,
      "dependencies": {
        "@lezer/common": "^0.15.7",
        "@lezer/lr": "^0.15.4",
        "json5": "^2.2.1"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-darwin-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-2.1.2.tgz",
      "integrity": "sha512-TyVLn3S/+ikMDsh0gbKv2YydKClN8HaJDDpONlaZR+LVJmsxLFUgA+O7zu59h9+f9gX1aj/ahw9wqa6rosmrYQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-darwin-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-2.1.2.tgz",
      "integrity": "sha512-YPXtcVkhmVNoMGlqp81ZHW4dMxK09msWgnxtsDpSiZwTzUBG2N+No2bsr7WMtBKCVJMSD6mbAl7YhKUqkp/Few==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-arm": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-2.1.2.tgz",
      "integrity": "sha512-42R4MAFeIeNn+L98qwxAt360bwzX2Kf0ZQkBBucJ2Ircza3asoY4CDbgiu9VWklq8gWJVSJSJBwDI+c/THiWkA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-2.1.2.tgz",
      "integrity": "sha512-vHZ2JiOWF2+DN9lzltGbhtQNzDo8fKFGrf37UJrgqxU0yvtERrzUugnfnX1wmVfFhSsF8OxrfqiNOUc5hko1Zg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-2.1.2.tgz",
      "integrity": "sha512-RjRoRxg7Q3kPAdUSC5EUUPlwfMkIVhmaRTIe+cqHbKrGZ4M6TyCA/b5qMaukQ/1CHWrqYY2FbKOAU8Hg0pQFzg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-win32-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-2.1.2.tgz",
      "integrity": "sha512-rIZVR48zA8hGkHIK7ED6+ZiXsjRCcAVBJbm8o89OKAMTmEAQ2QvoOxoiu3w2isAaWwzgtQIOFIqHwvZDyLKCvw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@parcel/bundler-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/bundler-default/-/bundler-default-2.7.0.tgz",
      "integrity": "sha512-PU5MtWWhc+dYI9x8mguYnm9yiG6TkI7niRpxgJgtqAyGHuEyNXVBQQ0X+qyOF4D9LdankBf8uNN18g31IET2Zg==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/cache": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/cache/-/cache-2.7.0.tgz",
      "integrity": "sha512-JlXNoZXcWzLKdDlfeF3dIj5Vtel5T9vtdBN72PJ+cjC4qNHk4Uwvc5sfOBELuibGN0bVu2bwY9nUgSwCiB1iIA==",
      "dev": true,
      "dependencies": {
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/utils": "2.7.0",
        "lmdb": "2.5.2"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/codeframe": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/codeframe/-/codeframe-2.7.0.tgz",
      "integrity": "sha512-UTKx0jejJmmO1dwTHSJuRgrO8N6PMlkxRT6sew8N6NC3Bgv6pu0EbO+RtlWt/jCvzcdLOPdIoTzj4MMZvgcMYg==",
      "dev": true,
      "dependencies": {
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/codeframe/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@parcel/codeframe/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/@parcel/codeframe/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/codeframe/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/compressor-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/compressor-raw/-/compressor-raw-2.7.0.tgz",
      "integrity": "sha512-SCXwnOOQT6EmpusBsYWNQ/RFri+2JnKuE0gMSf2dROl2xbererX45FYzeDplWALCKAdjMNDpFwU+FyMYoVZSCQ==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/config-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/config-default/-/config-default-2.7.0.tgz",
      "integrity": "sha512-ZzsLr97AYrz8c9k6qn3DlqPzifi3vbP7q3ynUrAFxmt0L4+K0H9N508ZkORYmCgaFjLIQ8Y3eWpwCJ0AewPNIg==",
      "dev": true,
      "dependencies": {
        "@parcel/bundler-default": "2.7.0",
        "@parcel/compressor-raw": "2.7.0",
        "@parcel/namer-default": "2.7.0",
        "@parcel/optimizer-css": "2.7.0",
        "@parcel/optimizer-htmlnano": "2.7.0",
        "@parcel/optimizer-image": "2.7.0",
        "@parcel/optimizer-svgo": "2.7.0",
        "@parcel/optimizer-terser": "2.7.0",
        "@parcel/packager-css": "2.7.0",
        "@parcel/packager-html": "2.7.0",
        "@parcel/packager-js": "2.7.0",
        "@parcel/packager-raw": "2.7.0",
        "@parcel/packager-svg": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/resolver-default": "2.7.0",
        "@parcel/runtime-browser-hmr": "2.7.0",
        "@parcel/runtime-js": "2.7.0",
        "@parcel/runtime-react-refresh": "2.7.0",
        "@parcel/runtime-service-worker": "2.7.0",
        "@parcel/transformer-babel": "2.7.0",
        "@parcel/transformer-css": "2.7.0",
        "@parcel/transformer-html": "2.7.0",
        "@parcel/transformer-image": "2.7.0",
        "@parcel/transformer-js": "2.7.0",
        "@parcel/transformer-json": "2.7.0",
        "@parcel/transformer-postcss": "2.7.0",
        "@parcel/transformer-posthtml": "2.7.0",
        "@parcel/transformer-raw": "2.7.0",
        "@parcel/transformer-react-refresh-wrap": "2.7.0",
        "@parcel/transformer-svg": "2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/core/-/core-2.7.0.tgz",
      "integrity": "sha512-7yKZUdh314Q/kU/9+27ZYTfcnXS6VYHuG+iiUlIohnvUUybxLqVJhdMU9Q+z2QcPka1IdJWz4K4Xx0y6/4goyg==",
      "dev": true,
      "dependencies": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/graph": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "abortcontroller-polyfill": "^1.1.9",
        "base-x": "^3.0.8",
        "browserslist": "^4.6.6",
        "clone": "^2.1.1",
        "dotenv": "^7.0.0",
        "dotenv-expand": "^5.1.0",
        "json5": "^2.2.0",
        "msgpackr": "^1.5.4",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/core/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/css": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css/-/css-1.12.2.tgz",
      "integrity": "sha512-Sa0PvZu5u877CupQA8IjEATqjJFynBfA7LxbcyutFe2LDCRSqB5Bm08jKFScyaz56qjZNIxZxXk2SApNkOvoAA==",
      "dev": true,
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "@parcel/css-darwin-arm64": "1.12.2",
        "@parcel/css-darwin-x64": "1.12.2",
        "@parcel/css-linux-arm-gnueabihf": "1.12.2",
        "@parcel/css-linux-arm64-gnu": "1.12.2",
        "@parcel/css-linux-arm64-musl": "1.12.2",
        "@parcel/css-linux-x64-gnu": "1.12.2",
        "@parcel/css-linux-x64-musl": "1.12.2",
        "@parcel/css-win32-x64-msvc": "1.12.2"
      }
    },
    "node_modules/@parcel/css-darwin-arm64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-arm64/-/css-darwin-arm64-1.12.2.tgz",
      "integrity": "sha512-6VvsoYSltBiUh/uyfPzQ+I3DiTFN7tmRv6zm1LH98J7GGCDDhbYEtbQjjCs15ex6fVn1ORZK0JO+mMlsg1JwTA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-darwin-x64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-x64/-/css-darwin-x64-1.12.2.tgz",
      "integrity": "sha512-3J0/LrDvt5vevOisnrE0q5mEcuiAY+K7OZwIv84SAnrbjlL5sshmIaaNzL869kb4thza+RClEj0mS5XTm1IUEw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm-gnueabihf": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm-gnueabihf/-/css-linux-arm-gnueabihf-1.12.2.tgz",
      "integrity": "sha512-OsX7I3dhBvnxEbAH++08RFe7yhjRp33ulzrCvJTMOP9YkxEEJ8qId3sNzJBHIVQzHyTlPTnBRHbSDhU3TFe/eQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-gnu/-/css-linux-arm64-gnu-1.12.2.tgz",
      "integrity": "sha512-R1Kqw+1Rsru9Q4+qvUEC6B8P21bpqhuF9rv8GmBmmnF1i2hMZ1JiY+uh/ej8IaRV0O3fAHeQGIyGBWx6qWDpcw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-musl/-/css-linux-arm64-musl-1.12.2.tgz",
      "integrity": "sha512-nwixgM4SEgPUQata9aAiJW0A5Q9ms+xim1tXT1i+91kOei4Fu2Wr2OuofMk+mlhbgmGKCTcu4gzMPReGxUhuRA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-x64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-gnu/-/css-linux-x64-gnu-1.12.2.tgz",
      "integrity": "sha512-cJYVMHnQSGhDwQByyvjFZppjMBNlgxXl/R4cX5DwrQE0QZmK/42BYnMp92rvoprEG6LRyRoiGtCjyfYTPWajog==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-x64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-musl/-/css-linux-x64-musl-1.12.2.tgz",
      "integrity": "sha512-u9zdO/d831/74Tf+TdPUfaIuB9v6FD4Xz8UdWUDOXgQqaOlnJ9fAsAM39EkoWlMxPPljY3f4ay6irSe1a4XgSA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-win32-x64-msvc": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-win32-x64-msvc/-/css-win32-x64-msvc-1.12.2.tgz",
      "integrity": "sha512-kCAKr3vKqvPUv9oXBG3pGZQz5il3sEk35dpmTXFa/7eDNKR5XyLpiJs8JwWJTFfuUqroymDSXA1bCcjvNEYcAg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/diagnostic": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/diagnostic/-/diagnostic-2.7.0.tgz",
      "integrity": "sha512-pdq/cTwVoL0n8yuDCRXFRSQHVWdmmIXPt3R3iT4KtYDYvOrMT2dLPT79IMqQkhYPANW8GuL15n/WxRngfRdkug==",
      "dev": true,
      "dependencies": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/events": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/events/-/events-2.7.0.tgz",
      "integrity": "sha512-kQDwMKgZ1U4M/G17qeDYF6bW5kybluN6ajYPc7mZcrWg+trEI/oXi81GMFaMX0BSUhwhbiN5+/Vb2wiG/Sn6ig==",
      "dev": true,
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/fs": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-2.7.0.tgz",
      "integrity": "sha512-PU5fo4Hh8y03LZgemgVREttc0wyHQUNmsJCybxTB7EjJie2CqJRumo+DFppArlvdchLwJdc9em03yQV/GNWrEg==",
      "dev": true,
      "dependencies": {
        "@parcel/fs-search": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/watcher": "^2.0.0",
        "@parcel/workers": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/fs-search": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs-search/-/fs-search-2.7.0.tgz",
      "integrity": "sha512-K1Hv25bnRpwQVA15RvcRuB8ZhfclnCHA8N8L6w7Ul1ncSJDxCIkIAc5hAubYNNYW3kWjCC2SOaEgFKnbvMllEQ==",
      "dev": true,
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/graph": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/graph/-/graph-2.7.0.tgz",
      "integrity": "sha512-Q6E94GS6q45PtsZh+m+gvFRp/N1Qopxhu2sxjcWsGs5iBd6IWn2oYLWOH5iVzEjWuYpW2HkB08lH6J50O63uOA==",
      "dev": true,
      "dependencies": {
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/hash": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/hash/-/hash-2.7.0.tgz",
      "integrity": "sha512-k6bSKnIlPJMPU3yjQzfgfvF9zuJZGOAlJgzpL4BbWvdbE8BTdjzLcFn0Ujrtud94EgIkiXd22sC2HpCUWoHGdA==",
      "dev": true,
      "dependencies": {
        "detect-libc": "^1.0.3",
        "xxhash-wasm": "^0.4.2"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/logger": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-2.7.0.tgz",
      "integrity": "sha512-qjMY/bYo38+o+OiIrTRldU9CwL1E7J72t+xkTP8QIcUxLWz5LYR0YbynZUVulmBSfqsykjjxCy4a+8siVr+lPw==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/markdown-ansi": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/markdown-ansi/-/markdown-ansi-2.7.0.tgz",
      "integrity": "sha512-ipOX0D6FVZFEXeb/z8MnTMq2RQEIuaILY90olVIuHEFLHHfOPEn+RK3u13HA1ChF5/9E3cMD79tu6x9JL9Kqag==",
      "dev": true,
      "dependencies": {
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/markdown-ansi/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@parcel/markdown-ansi/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/@parcel/markdown-ansi/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/markdown-ansi/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/namer-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/namer-default/-/namer-default-2.7.0.tgz",
      "integrity": "sha512-lIKMdsmi//7fepecNDYmJYzBlL91HifPsX03lJCdu1dC6q5fBs+gG0XjKKG7yPnSCw1qH/4m7drzt9+dRZYAHQ==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/node-resolver-core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/node-resolver-core/-/node-resolver-core-2.7.0.tgz",
      "integrity": "sha512-5UJQHalqMxdhJIs2hhqQzFfQpF7+NAowsRq064lYtiRvcD8wMr3OOQ9wd1iazGpFSl4JKdT7BwDU9/miDJmanQ==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/node-resolver-core/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/optimizer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-css/-/optimizer-css-2.7.0.tgz",
      "integrity": "sha512-IfnOMACqhcAclKyOW9X9JpsknB6OShk9OVvb8EvbDTKHJhQHNNmzE88OkSI/pS3ZVZP9Zj+nWcVHguV+kvDeiQ==",
      "dev": true,
      "dependencies": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-htmlnano": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-htmlnano/-/optimizer-htmlnano-2.7.0.tgz",
      "integrity": "sha512-5QrGdWS5Hi4VXE3nQNrGqugmSXt68YIsWwKRAdarOxzyULSJS3gbCiQOXqIPRJobfZjnSIcdtkyxSiCUe1inIA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "htmlnano": "^2.0.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "svgo": "^2.4.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-image/-/optimizer-image-2.7.0.tgz",
      "integrity": "sha512-EnaXz5UjR67FUu0BEcqZTT9LsbB/iFAkkghCotbnbOuC5QQsloq6tw54TKU3y+R3qsjgUoMtGxPcGfVoXxZXYw==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-svgo": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-svgo/-/optimizer-svgo-2.7.0.tgz",
      "integrity": "sha512-IO1JV4NpfP3V7FrhsqCcV8pDQIHraFi1/ZvEJyssITxjH49Im/txKlwMiQuZZryAPn8Xb8g395Muawuk6AK6sg==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "svgo": "^2.4.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-terser": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-terser/-/optimizer-terser-2.7.0.tgz",
      "integrity": "sha512-07VZjIO8xsl2/WmS/qHI8lI/cpu47iS9eRpqwfZEEsdk1cfz50jhWkmFudHBxiHGMfcZ//1+DdaPg9RDBWZtZA==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "terser": "^5.2.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/package-manager": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/package-manager/-/package-manager-2.7.0.tgz",
      "integrity": "sha512-wmfSX1mRrTi8MeA4KrnPk/x7zGUsILCQmTo6lA4gygzAxDbM1pGuyFN8/Kt0y0SFO2lbljARtD/4an5qdotH+Q==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/package-manager/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/packager-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-css/-/packager-css-2.7.0.tgz",
      "integrity": "sha512-44nzZwu+ssGuiFmYM6cf/Y4iChiUZ4DUzzpegnGlhXtKJKe4NHntxThJynuRZWKN2AAf48avApDpimg2jW0KDw==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-html/-/packager-html-2.7.0.tgz",
      "integrity": "sha512-Zgqd7sdcY/UnR370GR0q2ilmEohUDXsO8A1F28QCJzIsR1iCB6KRUT74+pawfQ1IhXZLaaFLLYe0UWcfm0JeXg==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-js/-/packager-js-2.7.0.tgz",
      "integrity": "sha512-wTRdM81PgRVDzWGXdWmqLwguWnTYWzhEDdjXpW2n8uMOu/CjHhMtogk65aaYk3GOnq6OBL/NsrmBiV/zKPj1vA==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "globals": "^13.2.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-js/node_modules/globals": {
      "version": "13.17.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.17.0.tgz",
      "integrity": "sha512-1C+6nQRb1GwGMKm2dH/E7enFAMxGTmGI7/dEdhy/DNelv85w9B72t3uc5frtMNXIbzrarJJ/lTCjcaZwbLJmyw==",
      "dev": true,
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@parcel/packager-js/node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@parcel/packager-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-raw/-/packager-raw-2.7.0.tgz",
      "integrity": "sha512-jg2Zp8dI5VpIQlaeahXDCfrPN9m/DKht1NkR9P2CylMAwqCcc1Xc1RRiF0wfwcPZpPMpq1265n+4qnB7rjGBlA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-svg/-/packager-svg-2.7.0.tgz",
      "integrity": "sha512-EmJg3HpD6/xxKBjir/CdCKJZwI24iVfBuxRS9LUp3xHAIebOzVh1z6IN+i2Di5+NyRwfOFaLliL4uMa1zwbyCA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "posthtml": "^0.16.4"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/plugin": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/plugin/-/plugin-2.7.0.tgz",
      "integrity": "sha512-qqgx+nnMn6/0lRc4lKbLGmhNtBiT93S2gFNB4Eb4Pfz/SxVYoW+fmml+KdfOSiZffWOAH5L6NwhyD7N8aSikzw==",
      "dev": true,
      "dependencies": {
        "@parcel/types": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/reporter-cli": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-cli/-/reporter-cli-2.7.0.tgz",
      "integrity": "sha512-80gEODg8cnAmnxGVuaSVDo8JJ54P9AA2bHwSs1cIkHWlJ3BjDQb83H31bBHncJ5Kn5kQ/j+7WjlqHpTCiOR9PA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "term-size": "^2.2.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/reporter-cli/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@parcel/reporter-cli/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/@parcel/reporter-cli/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/reporter-cli/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/reporter-dev-server": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-dev-server/-/reporter-dev-server-2.7.0.tgz",
      "integrity": "sha512-ySuou5addK8fGue8aXzo536BaEjMujDrEc1xkp4TasInXHVcA98b+SYX5NAZTGob5CxKvZQ5ylhg77zW30B+iA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/resolver-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/resolver-default/-/resolver-default-2.7.0.tgz",
      "integrity": "sha512-v8TvWsbLK7/q7n4gv6OrYNbW18xUx4zKbVMGZb1u4yMhzEH4HFr1D9OeoTq3jk+ximAigds8B6triQbL5exF7A==",
      "dev": true,
      "dependencies": {
        "@parcel/node-resolver-core": "2.7.0",
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-browser-hmr": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-browser-hmr/-/runtime-browser-hmr-2.7.0.tgz",
      "integrity": "sha512-PLbMLdclQeYsi2LkilZVGFV1n3y55G1jaBvby4ekedUZjMw3SWdMY2tDxgSDdFWfLCnYHJXdGUQSzGGi1kPzjA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-js/-/runtime-js-2.7.0.tgz",
      "integrity": "sha512-9/YUZTBNrSN2H6rbz/o1EOM0O7I3ZR/x9IDzxjJBD6Mi+0uCgCD02aedare/SNr1qgnbZZWmhpOzC+YgREcfLA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-react-refresh": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-react-refresh/-/runtime-react-refresh-2.7.0.tgz",
      "integrity": "sha512-vDKO0rWqRzEpmvoZ4kkYUiSsTxT5NnH904BFPFxKI0wJCl6yEmPuEifmATo73OuYhP6jIP3Qfl1R4TtiDFPJ1Q==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-error-overlay": "6.0.9",
        "react-refresh": "^0.9.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-service-worker": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-service-worker/-/runtime-service-worker-2.7.0.tgz",
      "integrity": "sha512-uD2pAV0yV6+e7JaWH4KVPbG+zRCrxr/OACyS9tIh+Q/R1vRmh8zGM3yhdrcoiZ7tFOnM72vd6xY11eTrUsSVig==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/source-map": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@parcel/source-map/-/source-map-2.1.0.tgz",
      "integrity": "sha512-E7UOEIof2o89LrKk1agSLmwakjigmEdDp1ZaEdsLVEvq63R/bul4Ij5CT+0ZDcijGpl5tnTbQADY9EyYGtjYgQ==",
      "dev": true,
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": "^12.18.3 || >=14"
      }
    },
    "node_modules/@parcel/transformer-babel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-babel/-/transformer-babel-2.7.0.tgz",
      "integrity": "sha512-7iklDXXnKH1530+QbI+e4kIJ+Q1puA1ulRS10db3aUJMj5GnvXGDFwhSZ7+T1ps66QHO7cVO29VlbqiRDarH1Q==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "json5": "^2.2.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-babel/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-css/-/transformer-css-2.7.0.tgz",
      "integrity": "sha512-J4EpWK9spQpXyNCmKK8Xnane0xW/1B/EAmfp7Fiv7g+5yUjY4ODf4KUugvE+Eb2gekPkhOKNHermO2KrX0/PFA==",
      "dev": true,
      "dependencies": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-html/-/transformer-html-2.7.0.tgz",
      "integrity": "sha512-wYJl5rn81W+Rlk9oQwDJcjoVsWVDKyeri84FzmlGXOsg0EYgnqOiG+3MDM8GeZjfuGe5fuoum4eqZeS0WdUHXw==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-html/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-image/-/transformer-image-2.7.0.tgz",
      "integrity": "sha512-mhi9/R5/ULhCkL2COVIKhNFoLDiZwQgprdaTJr5fnODggVxEX5o7ebFV6KNLMTEkwZUJWoB1hL0ziI0++DtoFA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/transformer-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-js/-/transformer-js-2.7.0.tgz",
      "integrity": "sha512-mzerR+D4rDomUSIk5RSTa2w+DXBdXUeQrpDO74WCDdpDi1lIl8ppFpqtmU7O6y6p8QsgkmS9b0g/vhcry6CJTA==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "@swc/helpers": "^0.4.2",
        "browserslist": "^4.6.6",
        "detect-libc": "^1.0.3",
        "nullthrows": "^1.1.1",
        "regenerator-runtime": "^0.13.7",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/transformer-js/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-json": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-json/-/transformer-json-2.7.0.tgz",
      "integrity": "sha512-RQjuxBpYOch+kr4a0zi77KJtOLTPYRM7iq4NN80zKnA0r0dwDUCxZBtaj2l0O0o3R4MMJnm+ncP+cB7XR7dZYA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "json5": "^2.2.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-postcss": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-postcss/-/transformer-postcss-2.7.0.tgz",
      "integrity": "sha512-b6RskXBWf0MjpC9qjR2dQ1ZdRnlOiKYseG5CEovWCqM218RtdydFKz7jS+5Gxkb6qBtOG7zGPONXdPe+gTILcA==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "clone": "^2.1.1",
        "nullthrows": "^1.1.1",
        "postcss-value-parser": "^4.2.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-postcss/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-posthtml": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-posthtml/-/transformer-posthtml-2.7.0.tgz",
      "integrity": "sha512-cP8YOiSynWJ1ycmBlhnnHeuQb2cwmklZ+BNyLUktj5p78kDy2de7VjX+dRNRHoW4H9OgEcSF4UEfDVVz5RYIhw==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-posthtml/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-raw/-/transformer-raw-2.7.0.tgz",
      "integrity": "sha512-sDnItWCFSDez0izK1i5cgv+kXzZTbcJh4rNpVIgmE1kBLvAz608sqgcCkavb2wVJIvLesxYM+5G4p1CwkDlZ1g==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-react-refresh-wrap": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-react-refresh-wrap/-/transformer-react-refresh-wrap-2.7.0.tgz",
      "integrity": "sha512-1vRmIJzyBA1nIiXTAU6tZExq2FvJj/2F0ft6KDw8GYPv0KjmdiPo/PmaZ7JeSVOM6SdXQIQCbTmp1vkMP7DtkA==",
      "dev": true,
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-refresh": "^0.9.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-svg/-/transformer-svg-2.7.0.tgz",
      "integrity": "sha512-ioER37zceuuE+K6ZrnjCyMUWEnv+63hIAFResc1OXxRhyt+7kzMz9ZqK0Mt6QMLwl1dxhkLmrU41n9IxzKZuSQ==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-svg/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/types": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/types/-/types-2.7.0.tgz",
      "integrity": "sha512-+dhXVUnseTCpJvBTGMp0V6X13z6O/A/+CUtwEpMGZ8XSmZ4Gk44GvaTiBOp0bJpWG4fvCKp+UmC8PYbrDiiziw==",
      "dev": true,
      "dependencies": {
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/workers": "2.7.0",
        "utility-types": "^3.10.0"
      }
    },
    "node_modules/@parcel/utils": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-2.7.0.tgz",
      "integrity": "sha512-jNZ5bIGg1r1RDRKi562o4kuVwnz+XJ2Ie3b0Zwrqwvgfj6AbRFIKzDd+h85dWWmcDYzKUbHp11u6VJl1u8Vapg==",
      "dev": true,
      "dependencies": {
        "@parcel/codeframe": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/markdown-ansi": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/utils/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/@parcel/utils/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/@parcel/utils/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/utils/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@parcel/watcher": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.0.5.tgz",
      "integrity": "sha512-x0hUbjv891omnkcHD7ZOhiyyUqUUR6MNjq89JhEI3BxppeKWAm6NPQsqqRrAkCJBogdT/o/My21sXtTI9rJIsw==",
      "dev": true,
      "hasInstallScript": true,
      "dependencies": {
        "node-addon-api": "^3.2.1",
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/workers": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-2.7.0.tgz",
      "integrity": "sha512-99VfaOX+89+RaoTSyH9ZQtkMBFZBFMvJmVJ/GeJT6QCd2wtKBStTHlaSnQOkLD/iRjJCNwV2xpZmm8YkTwV+hg==",
      "dev": true,
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chrome-trace-event": "^1.0.2",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@swc/helpers": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.4.6.tgz",
      "integrity": "sha512-jUMFa2/gFJOBVBnd3ZZHKRNsgqD0OQQhJMlOFR5B5stMbrUlTQoI7rXORtIGb+M/BZAU/cuI68nho4De3gXzWA==",
      "dev": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@tailwindcss/typography": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.4.tgz",
      "integrity": "sha512-QEdg40EmGvE7kKoDei8zr5sf4D1pIayHj4R31bH3lX8x2BtTiR+jNejYPOkhbmy3DXgkMF9jC8xqNiGFAuL9Sg==",
      "dev": true,
      "dependencies": {
        "lodash.castarray": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.merge": "^4.6.2"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders"
      }
    },
    "node_modules/@trysound/sax": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@trysound/sax/-/sax-0.2.0.tgz",
      "integrity": "sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA==",
      "dev": true,
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/@tsconfig/node10": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz",
      "integrity": "sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA==",
      "devOptional": true
    },
    "node_modules/@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
      "devOptional": true
    },
    "node_modules/@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
      "devOptional": true
    },
    "node_modules/@tsconfig/node16": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz",
      "integrity": "sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ==",
      "devOptional": true
    },
    "node_modules/@types/node": {
      "version": "18.7.4",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.4.tgz",
      "integrity": "sha512-RzRcw8c0B8LzryWOR4Wj7YOTFXvdYKwvrb6xQQyuDfnlTxwYXGCV5RZ/TEbq5L5kn+w3rliHAUyRcG1RtbmTFg==",
      "devOptional": true
    },
    "node_modules/@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA==",
      "dev": true
    },
    "node_modules/abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "node_modules/abortcontroller-polyfill": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.3.tgz",
      "integrity": "sha512-zetDJxd89y3X99Kvo4qFx8GKlt6GsvN3UcRZHwU6iFA/0KiOmhkTVhe8oRoTBiTVPZu09x3vCra47+w8Yz1+2Q==",
      "dev": true
    },
    "node_modules/acorn": {
      "version": "8.8.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
      "devOptional": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "dependencies": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      }
    },
    "node_modules/acorn-node/node_modules/acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-node/node_modules/acorn-walk": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==",
      "devOptional": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/aggregate-error": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-4.0.1.tgz",
      "integrity": "sha512-0poP0T7el6Vq3rstR8Mn4V/IQrpBLO6POkUSrN7RhyY+GF/InCFShQzsQ39T25gkHhLgSLByyAz+Kjb+c2L98w==",
      "dev": true,
      "dependencies": {
        "clean-stack": "^4.0.0",
        "indent-string": "^5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.1.0.tgz",
      "integrity": "sha512-VbqNsoz55SYGczauuup0MFUyXNQviSpFTj1RQtFzmQLk18qbVSpTFFGMT293rmDaQuKCT6InmbuEyUne4mTuxQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "devOptional": true
    },
    "node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/array-find-index": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
      "integrity": "sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/arrgv": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/arrgv/-/arrgv-1.0.2.tgz",
      "integrity": "sha512-a4eg4yhp7mmruZDQFqVMlxNRFGi/i1r87pt8SDHy0/I8PqSXoUTlWZRdAZo0VXgvEARcujbtTk8kiZRi1uDGRw==",
      "dev": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/arrify": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-3.0.0.tgz",
      "integrity": "sha512-tLkvA81vQG/XqE2mjDkGQHoOINtMHtysSnemrmoGe6PydDPMRbVugqyk4A6V/WDWEfm3l+0d8anA9r8cv/5Jaw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ava": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/ava/-/ava-4.3.1.tgz",
      "integrity": "sha512-zdSp9QxRTmN5hJeGmg+ZjUKL5yHFLMcP/0KBla8GH25XD8Xm7Uc34CDFlwqGL6JXtjNbVkJ0Zw+DqcTf4ggCCA==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.7.1",
        "acorn-walk": "^8.2.0",
        "ansi-styles": "^6.1.0",
        "arrgv": "^1.0.2",
        "arrify": "^3.0.0",
        "callsites": "^4.0.0",
        "cbor": "^8.1.0",
        "chalk": "^5.0.1",
        "chokidar": "^3.5.3",
        "chunkd": "^2.0.1",
        "ci-info": "^3.3.1",
        "ci-parallel-vars": "^1.0.1",
        "clean-yaml-object": "^0.1.0",
        "cli-truncate": "^3.1.0",
        "code-excerpt": "^4.0.0",
        "common-path-prefix": "^3.0.0",
        "concordance": "^5.0.4",
        "currently-unhandled": "^0.4.1",
        "debug": "^4.3.4",
        "del": "^6.1.1",
        "emittery": "^0.11.0",
        "figures": "^4.0.1",
        "globby": "^13.1.1",
        "ignore-by-default": "^2.1.0",
        "indent-string": "^5.0.0",
        "is-error": "^2.2.2",
        "is-plain-object": "^5.0.0",
        "is-promise": "^4.0.0",
        "matcher": "^5.0.0",
        "mem": "^9.0.2",
        "ms": "^2.1.3",
        "p-event": "^5.0.1",
        "p-map": "^5.4.0",
        "picomatch": "^2.3.1",
        "pkg-conf": "^4.0.0",
        "plur": "^5.1.0",
        "pretty-ms": "^7.0.1",
        "resolve-cwd": "^3.0.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.5",
        "strip-ansi": "^7.0.1",
        "supertap": "^3.0.1",
        "temp-dir": "^2.0.0",
        "write-file-atomic": "^4.0.1",
        "yargs": "^17.5.1"
      },
      "bin": {
        "ava": "entrypoints/cli.mjs"
      },
      "engines": {
        "node": ">=12.22 <13 || >=14.17 <15 || >=16.4 <17 || >=18"
      },
      "peerDependencies": {
        "@ava/typescript": "*"
      },
      "peerDependenciesMeta": {
        "@ava/typescript": {
          "optional": true
        }
      }
    },
    "node_modules/ava/node_modules/chalk": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.0.1.tgz",
      "integrity": "sha512-Fo07WOYGqMfCWHOzSXOt2CxDbC6skS/jO9ynEcmpANMoPrD+W1r1K6Vx7iNm+AQmETU1Xr2t+n8nzkV9t6xh3w==",
      "dev": true,
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/babel-plugin-dynamic-import-node": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
      "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
      "dev": true,
      "dependencies": {
        "object.assign": "^4.1.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.2.tgz",
      "integrity": "sha512-LPnodUl3lS0/4wN3Rb+m+UK8s7lj2jcLRrjho4gLw+OJs+I4bvGXshINesY5xx/apM+biTnQ9reDI8yj+0M5+Q==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.17.7",
        "@babel/helper-define-polyfill-provider": "^0.3.2",
        "semver": "^6.1.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs3": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.5.3.tgz",
      "integrity": "sha512-zKsXDh0XjnrUEW0mxIHLfjBfnXSMr5Q/goMe/fxpQnLm07mcOZiIZHBNWCMx60HmdvjxfXcalac0tfFg0wqxyw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.3.2",
        "core-js-compat": "^3.21.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/babel-plugin-polyfill-regenerator": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.0.tgz",
      "integrity": "sha512-RW1cnryiADFeHmfLS+WW/G431p1PsW5qdRdz0SDRi7TKcUgc7Oh/uXkT7MZ/+tGsT1BkczEAmD5XjUyJ5SWDTw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.3.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/blueimp-md5": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/blueimp-md5/-/blueimp-md5-2.19.0.tgz",
      "integrity": "sha512-DRQrD6gJyy8FbiE4s+bDoXS9hiW3Vbx5uCdwvcCf3zLHL+Iv7LtGHLpr+GZV8rHG8tK766FGYBwRbu8pELTt+w==",
      "dev": true
    },
    "node_modules/bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
    },
    "node_modules/boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
      "dev": true
    },
    "node_modules/borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dependencies": {
        "fill-range": "^7.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.21.3",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.3.tgz",
      "integrity": "sha512-898rgRXLAyRkM1GryrrBHGkqA5hlpkV5MhtZwg9QXeiyLUYs2k00Un05aX5l2/yJIOObYKOpS2JNo8nJDE7fWQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001370",
        "electron-to-chromium": "^1.4.202",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.5"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "node_modules/call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-4.0.0.tgz",
      "integrity": "sha512-y3jRROutgpKdz5vzEhWM34TidDU8vkJppF8dszITeb1PQmSqV3DTxyV8G/lyO/DNvtE1YTedehmw9MPZsCBHxQ==",
      "dev": true,
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001376",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001376.tgz",
      "integrity": "sha512-I27WhtOQ3X3v3it9gNs/oTpoE5KpwmqKR5oKPA8M0G7uMXh9Ty81Q904HpKUrM30ei7zfcL5jE7AXefgbOfMig==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        }
      ]
    },
    "node_modules/capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "node_modules/cbor": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/cbor/-/cbor-8.1.0.tgz",
      "integrity": "sha512-DwGjNW9omn6EwP70aXsn7FQJx5kO12tX0bZkaTjzdVFM6/7nhA4t0EENocKGx6D2Bch9PE2KzCUf5SceBdeijg==",
      "dev": true,
      "dependencies": {
        "nofilter": "^3.1.0"
      },
      "engines": {
        "node": ">=12.19"
      }
    },
    "node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/chalk/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dev": true,
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/chalk/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/chalk/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "dev": true
    },
    "node_modules/chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chrome-trace-event": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
      "integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==",
      "dev": true,
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/chunkd": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/chunkd/-/chunkd-2.0.1.tgz",
      "integrity": "sha512-7d58XsFmOq0j6el67Ug9mHf9ELUXsQXYJBkyxhH/k+6Ke0qXRnv0kbemx+Twc6fRJ07C49lcbdgm9FL1Ei/6SQ==",
      "dev": true
    },
    "node_modules/ci-info": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.3.2.tgz",
      "integrity": "sha512-xmDt/QIAdeZ9+nfdPsaBCpMvHNLFiLdjj59qjqn+6iPe6YmHGQ35sBnQ8uslRBXFmXkiZQOJRjvQeoGppoTjjg==",
      "dev": true
    },
    "node_modules/ci-parallel-vars": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ci-parallel-vars/-/ci-parallel-vars-1.0.1.tgz",
      "integrity": "sha512-uvzpYrpmidaoxvIQHM+rKSrigjOe9feHYbw4uOI2gdfe1C3xIlxO+kVXq83WQWNniTf8bAxVpy+cQeFQsMERKg==",
      "dev": true
    },
    "node_modules/clean-stack": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-4.2.0.tgz",
      "integrity": "sha512-LYv6XPxoyODi36Dp976riBtSY27VmFo+MKqEU9QCCWyTrdEPDog+RWA7xQWHi6Vbp61j5c4cdzzX1NidnwtUWg==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/clean-stack/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/clean-yaml-object": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz",
      "integrity": "sha512-3yONmlN9CSAkzNwnRCiJQ7Q2xK5mWuEfL3PuTZcAUzhObbXsfsnMptJzXwz93nc5zn9V9TwCVMmV7w4xsm43dw==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/cli-truncate": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-truncate/-/cli-truncate-3.1.0.tgz",
      "integrity": "sha512-wfOBkjXteqSnI59oPcJkcPl/ZmwvMMOj340qUIY1SKZCv0B9Cf4D4fAucRkIKQmsIuYK3x1rrgU7MeGRruiuiA==",
      "dev": true,
      "dependencies": {
        "slice-ansi": "^5.0.0",
        "string-width": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dev": true,
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/cliui/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "dev": true,
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/code-excerpt": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/code-excerpt/-/code-excerpt-4.0.0.tgz",
      "integrity": "sha512-xxodCmBen3iy2i0WtAK8FlFNrRzjUqjRsMfho58xT/wvZU1YTM3fCnRjcy1gJPMepaRlgm/0e6w8SpWHpn3/cA==",
      "dev": true,
      "dependencies": {
        "convert-to-spaces": "^2.0.1"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/common-path-prefix": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-3.0.0.tgz",
      "integrity": "sha512-QE33hToZseCH3jS0qN96O/bSh3kaw/h+Tq7ngyY9eWDUnTlTNUyqfqvCXioLe5Na5jFsL78ra/wuBU4iuEgd4w==",
      "dev": true
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "node_modules/concordance": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/concordance/-/concordance-5.0.4.tgz",
      "integrity": "sha512-OAcsnTEYu1ARJqWVGwf4zh4JDfHZEaSNlNccFmt8YjB2l/n19/PF2viLINHc57vO4FKIAFl2FWASIGZZWZ2Kxw==",
      "dev": true,
      "dependencies": {
        "date-time": "^3.1.0",
        "esutils": "^2.0.3",
        "fast-diff": "^1.2.0",
        "js-string-escape": "^1.0.1",
        "lodash": "^4.17.15",
        "md5-hex": "^3.0.1",
        "semver": "^7.3.2",
        "well-known-symbols": "^2.0.0"
      },
      "engines": {
        "node": ">=10.18.0 <11 || >=12.14.0 <13 || >=14"
      }
    },
    "node_modules/concordance/node_modules/semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dev": true,
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/convert-source-map": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
      "integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
      "dev": true,
      "dependencies": {
        "safe-buffer": "~5.1.1"
      }
    },
    "node_modules/convert-to-spaces": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/convert-to-spaces/-/convert-to-spaces-2.0.1.tgz",
      "integrity": "sha512-rcQ1bsQO9799wq24uE5AM2tAILy4gXGIK/njFWcVQkGNZ96edlpY+A7bjwvzjYvLDyzmG1MmMLZhpcsb+klNMQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/core-js-compat": {
      "version": "3.24.1",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.24.1.tgz",
      "integrity": "sha512-XhdNAGeRnTpp8xbD+sR/HFDK9CbeeeqXT6TuofXh3urqEevzkWmLRgrVoykodsw8okqo2pu1BOmuCKrHx63zdw==",
      "dev": true,
      "dependencies": {
        "browserslist": "^4.21.3",
        "semver": "7.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/core-js-compat/node_modules/semver": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
      "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/cosmiconfig": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.1.tgz",
      "integrity": "sha512-a1YWNUV2HwGimB7dU2s1wUMurNKjpx60HxBB6xUM8Re+2s1g1IIfJvFR0/iCF+XHdE0GMTKTuLR32UQff4TEyQ==",
      "dev": true,
      "dependencies": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.2.1",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.10.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
      "devOptional": true
    },
    "node_modules/cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/css-select": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-4.3.0.tgz",
      "integrity": "sha512-wPpOYtnsVontu2mODhA19JrqWxNsfdatRKd64kmpRbQgh1KtItko5sTnEpPdpSaJszTOhEMlF/RPz28qj4HqhQ==",
      "dev": true,
      "dependencies": {
        "boolbase": "^1.0.0",
        "css-what": "^6.0.1",
        "domhandler": "^4.3.1",
        "domutils": "^2.8.0",
        "nth-check": "^2.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/css-tree": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
      "integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
      "dev": true,
      "dependencies": {
        "mdn-data": "2.0.14",
        "source-map": "^0.6.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/css-what": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz",
      "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csso": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.2.0.tgz",
      "integrity": "sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==",
      "dev": true,
      "dependencies": {
        "css-tree": "^1.1.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/currently-unhandled": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
      "integrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==",
      "dev": true,
      "dependencies": {
        "array-find-index": "^1.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/date-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/date-time/-/date-time-3.1.0.tgz",
      "integrity": "sha512-uqCUKXE5q1PNBXjPqvwhwJf9SwMoAHBgWJ6DcrnS5o+W2JOiIILl0JEdVD8SGujrNS02GGxgwAg2PN2zONgtjg==",
      "dev": true,
      "dependencies": {
        "time-zone": "^1.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dev": true,
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/debug/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "dev": true
    },
    "node_modules/define-properties": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.4.tgz",
      "integrity": "sha512-uckOqKcfaVvtBdsVkdPv3XjveQJsNQqmhXgRi8uhvWWuPYZCNlzT8qAyblUgNoXdHdjMTzAqeGjAoli8f+bzPA==",
      "dev": true,
      "dependencies": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/defined": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
      "integrity": "sha512-Y2caI5+ZwS5c3RiNDJ6u53VhQHv+hHKwhkI1iHvceKUHw9Df6EK2zRLfjejRgMuCuxK7PfSWIMwWecceVvThjQ=="
    },
    "node_modules/del": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-6.1.1.tgz",
      "integrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg==",
      "dev": true,
      "dependencies": {
        "globby": "^11.0.1",
        "graceful-fs": "^4.2.4",
        "is-glob": "^4.0.1",
        "is-path-cwd": "^2.2.0",
        "is-path-inside": "^3.0.2",
        "p-map": "^4.0.0",
        "rimraf": "^3.0.2",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/del/node_modules/aggregate-error": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
      "integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
      "dev": true,
      "dependencies": {
        "clean-stack": "^2.0.0",
        "indent-string": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/del/node_modules/clean-stack": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/del/node_modules/globby": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
      "dev": true,
      "dependencies": {
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.9",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/del/node_modules/indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/del/node_modules/p-map": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
      "integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
      "dev": true,
      "dependencies": {
        "aggregate-error": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "dev": true,
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/detective": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/detective/-/detective-5.2.1.tgz",
      "integrity": "sha512-v9XE1zRnz1wRtgurGu0Bs8uHKFSTdteYZNbIPFVhUZ39L/S79ppMpdmVOZAnoz1jfEFodc48n6MX483Xo3t1yw==",
      "dependencies": {
        "acorn-node": "^1.8.2",
        "defined": "^1.0.0",
        "minimist": "^1.2.6"
      },
      "bin": {
        "detective": "bin/detective.js"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw=="
    },
    "node_modules/diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "devOptional": true,
      "engines": {
        "node": ">=0.3.1"
      }
    },
    "node_modules/dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "dependencies": {
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA=="
    },
    "node_modules/dom-serializer": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
      "integrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag==",
      "dev": true,
      "dependencies": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.0",
        "entities": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/dom-serializer?sponsor=1"
      }
    },
    "node_modules/dom-serializer/node_modules/entities": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
      "integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==",
      "dev": true,
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ]
    },
    "node_modules/domhandler": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-4.3.1.tgz",
      "integrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ==",
      "dev": true,
      "dependencies": {
        "domelementtype": "^2.2.0"
      },
      "engines": {
        "node": ">= 4"
      },
      "funding": {
        "url": "https://github.com/fb55/domhandler?sponsor=1"
      }
    },
    "node_modules/domutils": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-2.8.0.tgz",
      "integrity": "sha512-w96Cjofp72M5IIhpjgobBimYEfoPjx1Vx0BSX9P30WBdZW2WIKU0T1Bd0kz2eNZ9ikjKgHbEyKx8BB6H1L3h3A==",
      "dev": true,
      "dependencies": {
        "dom-serializer": "^1.0.1",
        "domelementtype": "^2.2.0",
        "domhandler": "^4.2.0"
      },
      "funding": {
        "url": "https://github.com/fb55/domutils?sponsor=1"
      }
    },
    "node_modules/dotenv": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-7.0.0.tgz",
      "integrity": "sha512-M3NhsLbV1i6HuGzBUH8vXrtxOk+tWmzWKDMbAVSUp3Zsjm7ywFeuwrUXhmhQyRK1q5B5GGy7hcXPbj3bnfZg2g==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==",
      "dev": true
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true
    },
    "node_modules/electron-to-chromium": {
      "version": "1.4.219",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.219.tgz",
      "integrity": "sha512-zoQJsXOUw0ZA0YxbjkmzBumAJRtr6je5JySuL/bAoFs0DuLiLJ+5FzRF7/ZayihxR2QcewlRZVm5QZdUhwjOgA==",
      "dev": true
    },
    "node_modules/emittery": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.11.0.tgz",
      "integrity": "sha512-S/7tzL6v5i+4iJd627Nhv9cLFIo5weAIlGccqJFpnBoDB8U1TF2k5tez4J/QNuxyyhWuFqHg1L84Kd3m7iXg6g==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/emittery?sponsor=1"
      }
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true
    },
    "node_modules/entities": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-3.0.1.tgz",
      "integrity": "sha512-WiyBqoomrwMdFG1e0kqvASYfnlb0lp8M5o5Fw2OFq1hNZxxcNk8Ik0Xm7LxzBhuidnZB/UtBqVCgUz3kBOP51Q==",
      "dev": true,
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/env-cmd": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/env-cmd/-/env-cmd-10.1.0.tgz",
      "integrity": "sha512-mMdWTT9XKN7yNth/6N6g2GuKuJTsKMDHlQFUDacb/heQRRWOTIZ42t1rMHnQu4jYxU1ajdTeJM+9eEETlqToMA==",
      "dev": true,
      "dependencies": {
        "commander": "^4.0.0",
        "cross-spawn": "^7.0.0"
      },
      "bin": {
        "env-cmd": "bin/env-cmd.js"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dependencies": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "dev": true,
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true,
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-diff": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.2.0.tgz",
      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.2.11",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.11.tgz",
      "integrity": "sha512-xrO3+1bxSo3ZVHAnqzyuewYT6aMFHRAd4Kcs92MAonjwQZLsK9d0SF1IyQ3k5PoirxTW0Oe/RqFgMQ6TcNE5Ew==",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/figures": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/figures/-/figures-4.0.1.tgz",
      "integrity": "sha512-rElJwkA/xS04Vfg+CaZodpso7VqBknOYbzi6I76hI4X80RUjkSxO2oAyPmGbuXUppywjqndOrQDl817hDnI++w==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/figures/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-up": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz",
      "integrity": "sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==",
      "dev": true,
      "dependencies": {
        "locate-path": "^7.1.0",
        "path-exists": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true,
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.2.tgz",
      "integrity": "sha512-Jfm3OyCxHh9DJyc28qGk+JmfkpO41A4XkneDSujN9MDXrm4oDKdHvndhZ2dN94+ERNfkYJWDclW6k2L/ZGHjXA==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-port": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-4.2.0.tgz",
      "integrity": "sha512-/b3jarXkH8KJoOMQc3uVGHASwGLPq3gSFJ7tgJm2diza+bydJPTGOibin2steecKeOylE8oY2JERlVWkAJO6yw==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/globby": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/globby/-/globby-13.1.2.tgz",
      "integrity": "sha512-LKSDZXToac40u8Q1PQtZihbNdTYSNMuWe+K5l+oa6KgDzSvVrHXlJy40hUP522RjAIoNLJYBJi7ow+rbFpIhHQ==",
      "dev": true,
      "dependencies": {
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.11",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^4.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globby/node_modules/slash": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-4.0.0.tgz",
      "integrity": "sha512-3dOsAHXXUkQTpOYcoAxLIorMTp4gIQr5IW3iVb7A7lFIp0VHhnynm9izx6TssdrIcVIESAlVjtnO2K8bg+Coew==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "dev": true,
      "dependencies": {
        "get-intrinsic": "^1.1.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/history": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/history/-/history-5.3.0.tgz",
      "integrity": "sha512-ZqaKwjjrAYUYfLG+htGaIIZ4nioX2L70ZUMIFysS3xvBsSG4x/n1V6TXV3N8ZYNuFGlDirFg32T7B6WOUPDYcQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.6"
      }
    },
    "node_modules/htmlnano": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-2.0.2.tgz",
      "integrity": "sha512-+ZrQFS4Ub+zd+/fWwfvoYCEGNEa0/zrpys6CyXxvZDwtL7Pl+pOtRkiujyvBQ7Lmfp7/iEPxtOFgxWA16Gkj3w==",
      "dev": true,
      "dependencies": {
        "cosmiconfig": "^7.0.1",
        "posthtml": "^0.16.5",
        "timsort": "^0.3.0"
      },
      "peerDependencies": {
        "cssnano": "^5.0.11",
        "postcss": "^8.3.11",
        "purgecss": "^4.0.3",
        "relateurl": "^0.2.7",
        "srcset": "^5.0.0",
        "svgo": "^2.8.0",
        "terser": "^5.10.0",
        "uncss": "^0.17.3"
      },
      "peerDependenciesMeta": {
        "cssnano": {
          "optional": true
        },
        "postcss": {
          "optional": true
        },
        "purgecss": {
          "optional": true
        },
        "relateurl": {
          "optional": true
        },
        "srcset": {
          "optional": true
        },
        "svgo": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "uncss": {
          "optional": true
        }
      }
    },
    "node_modules/htmlparser2": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-7.2.0.tgz",
      "integrity": "sha512-H7MImA4MS6cw7nbyURtLPO1Tms7C5H602LRETv95z1MxO/7CP7rDVROehUYeYBUYEON94NXXDEPmZuq+hX4sog==",
      "dev": true,
      "funding": [
        "https://github.com/fb55/htmlparser2?sponsor=1",
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "dependencies": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.2",
        "domutils": "^2.8.0",
        "entities": "^3.0.1"
      }
    },
    "node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/ignore": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.2.0.tgz",
      "integrity": "sha512-CmxgYGiEPCLhfLnpPp1MoRmifwEIOgjcHXxOBjv7mY96c+eWScsOP9c112ZyLdWHi0FxHjI+4uVhKYp/gcdRmQ==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/ignore-by-default": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-2.1.0.tgz",
      "integrity": "sha512-yiWd4GVmJp0Q6ghmM2B/V3oZGRmjrKLXvHR3TE1nfoXsmoggllfZUQe74EN0fJdPFZu2NIvNdrMMLm3OsV7Ohw==",
      "dev": true,
      "engines": {
        "node": ">=10 <11 || >=12 <13 || >=14"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dev": true,
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/indent-string": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-5.0.0.tgz",
      "integrity": "sha512-m6FAo/spmsW2Ab2fU35JTYwtOKa2yAwXSwgjSv1TJzh4Mh7mC3lzAOVLBprb72XsTrgkEIsl7YrFNAiDiRhIGg==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dev": true,
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/irregular-plurals": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-3.3.0.tgz",
      "integrity": "sha512-MVBLKUTangM3EfRPFROhmWQQKRDsrgI83J8GS3jXy+OwYqiR2/aoWndYQ5416jLE3uaGgLH7ncme3X9y09gZ3g==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
      "dev": true
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-error": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-error/-/is-error-2.2.2.tgz",
      "integrity": "sha512-IOQqts/aHWbiisY5DuPJQ0gcbvaLFCa7fBa9xoLfxBZvQ+ZI/Zh9xoI7Gk+G64N0FdK4AbibytHht2tWgpJWLg==",
      "dev": true
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-4.0.0.tgz",
      "integrity": "sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-json": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-json/-/is-json-2.0.1.tgz",
      "integrity": "sha512-6BEnpVn1rcf3ngfmViLM6vjUjGErbdrL4rwlv+u1NO1XO8kqT4YGL8+19Q+Z/bas8tY90BTWMk2+fW1g6hQjbA==",
      "dev": true
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-plain-object": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
      "integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-promise": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
      "dev": true
    },
    "node_modules/is-unicode-supported": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.2.0.tgz",
      "integrity": "sha512-wH+U77omcRzevfIG8dDhTS0V9zZyweakfD01FULl97+0EHiJTTZtJqxPSkIIo/SDPv/i07k/C9jAPY+jwLLeUQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "node_modules/js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "node_modules/js-string-escape": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
      "integrity": "sha512-Smw4xcfIQ5LVjAOuJCvN/zIodzA/BBSsluuoSykP+lUvScIi4U6RJLfwHet5cxFnCswUjISV8oAXaqaJDY3chg==",
      "dev": true,
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "dev": true,
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "dev": true
    },
    "node_modules/json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==",
      "dev": true,
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/lilconfig": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.0.6.tgz",
      "integrity": "sha512-9JROoBW7pobfsx+Sq2JsASvCo6Pfo6WWoUW79HuB1BCoBXD4PLWJPqDF6fNj67pqBYTbAHkE57M1kS/+L1neOg==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true
    },
    "node_modules/lmdb": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/lmdb/-/lmdb-2.5.2.tgz",
      "integrity": "sha512-V5V5Xa2Hp9i2XsbDALkBTeHXnBXh/lEmk9p22zdr7jtuOIY9TGhjK6vAvTpOOx9IKU4hJkRWZxn/HsvR1ELLtA==",
      "dev": true,
      "hasInstallScript": true,
      "dependencies": {
        "msgpackr": "^1.5.4",
        "node-addon-api": "^4.3.0",
        "node-gyp-build-optional-packages": "5.0.3",
        "ordered-binary": "^1.2.4",
        "weak-lru-cache": "^1.2.2"
      },
      "optionalDependencies": {
        "@lmdb/lmdb-darwin-arm64": "2.5.2",
        "@lmdb/lmdb-darwin-x64": "2.5.2",
        "@lmdb/lmdb-linux-arm": "2.5.2",
        "@lmdb/lmdb-linux-arm64": "2.5.2",
        "@lmdb/lmdb-linux-x64": "2.5.2",
        "@lmdb/lmdb-win32-x64": "2.5.2"
      }
    },
    "node_modules/lmdb/node_modules/node-addon-api": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
      "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
      "dev": true
    },
    "node_modules/load-json-file": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-7.0.1.tgz",
      "integrity": "sha512-Gnxj3ev3mB5TkVBGad0JM6dmLiQL+o0t23JPBZ9sd+yvSLk05mFoqKBw5N8gbbkU4TNXyqCgIrl/VM17OgUIgQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/locate-path": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-7.1.1.tgz",
      "integrity": "sha512-vJXaRMJgRVD3+cUZs3Mncj2mxpt5mP0EmNOsxRSZRMlbqjvxzDEOIUWXGmavo0ZC9+tNZCBLQ66reA11nbpHZg==",
      "dev": true,
      "dependencies": {
        "p-locate": "^6.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "node_modules/lodash.castarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
      "dev": true
    },
    "node_modules/lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==",
      "dev": true
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "dev": true
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "devOptional": true
    },
    "node_modules/map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "dependencies": {
        "p-defer": "^1.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/matcher": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-5.0.0.tgz",
      "integrity": "sha512-s2EMBOWtXFc8dgqvoAzKJXxNHibcdJMV0gwqKUaw9E2JBJuGUK7DrNKrA6g/i+v72TT16+6sVm5mS3thaMLQUw==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/matcher/node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/md5-hex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/md5-hex/-/md5-hex-3.0.1.tgz",
      "integrity": "sha512-BUiRtTtV39LIJwinWBjqVsU9xhdnz7/i889V859IBFpuqGAj6LuOvHv5XLbgZ2R7ptJoJaEcxkv88/h25T7Ciw==",
      "dev": true,
      "dependencies": {
        "blueimp-md5": "^2.10.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/mdn-data": {
      "version": "2.0.14",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz",
      "integrity": "sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==",
      "dev": true
    },
    "node_modules/mem": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/mem/-/mem-9.0.2.tgz",
      "integrity": "sha512-F2t4YIv9XQUBHt6AOJ0y7lSmP1+cY7Fm1DRh9GClTGzKST7UWLMx6ly9WZdLH/G/ppM5RL4MlQfRT71ri9t19A==",
      "dev": true,
      "dependencies": {
        "map-age-cleaner": "^0.1.3",
        "mimic-fn": "^4.0.0"
      },
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/mem?sponsor=1"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dependencies": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
      "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q=="
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "node_modules/msgpackr": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/msgpackr/-/msgpackr-1.6.2.tgz",
      "integrity": "sha512-bqSQ0DYJbXbrJcrZFmMygUZmqQiDfI2ewFVWcrZY12w5XHWtPuW4WppDT/e63Uu311ajwkRRXSoF0uILroBeTA==",
      "dev": true,
      "optionalDependencies": {
        "msgpackr-extract": "^2.0.2"
      }
    },
    "node_modules/msgpackr-extract": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-2.1.2.tgz",
      "integrity": "sha512-cmrmERQFb19NX2JABOGtrKdHMyI6RUyceaPBQ2iRz9GnDkjBWFjNJC0jyyoOfZl2U/LZE3tQCCQc4dlRyA8mcA==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "node-gyp-build-optional-packages": "5.0.3"
      },
      "bin": {
        "download-msgpackr-prebuilds": "bin/download-prebuilds.js"
      },
      "optionalDependencies": {
        "@msgpackr-extract/msgpackr-extract-darwin-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-darwin-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-win32-x64": "2.1.2"
      }
    },
    "node_modules/mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "bin": {
        "mustache": "bin/mustache"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.4.tgz",
      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw==",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dependencies": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A==",
      "dev": true
    },
    "node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg==",
      "dev": true,
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-gyp-build-optional-packages": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.3.tgz",
      "integrity": "sha512-k75jcVzk5wnnc/FMxsf4udAoTEUv2jY3ycfdSd3yWu6Cnd1oee6/CfZJApyscA4FJOmdoixWwiwOyf16RzD5JA==",
      "dev": true,
      "bin": {
        "node-gyp-build-optional-packages": "bin.js",
        "node-gyp-build-optional-packages-optional": "optional.js",
        "node-gyp-build-optional-packages-test": "build-test.js"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg==",
      "dev": true
    },
    "node_modules/nodemon": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.19.tgz",
      "integrity": "sha512-4pv1f2bMDj0Eeg/MhGqxrtveeQ5/G/UVe9iO6uTZzjnRluSA4PVWf8CW99LUPwGB3eNIA7zUFoP77YuI7hOc0A==",
      "dev": true,
      "hasInstallScript": true,
      "dependencies": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.0.4",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "bin": {
        "nodemon": "bin/nodemon.js"
      },
      "engines": {
        "node": ">=8.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nodemon"
      }
    },
    "node_modules/nodemon/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/nodemon/node_modules/ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
      "dev": true
    },
    "node_modules/nodemon/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/nofilter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/nofilter/-/nofilter-3.1.0.tgz",
      "integrity": "sha512-l2NNj07e9afPnhAhvgVrCD/oy2Ai1yfLpuo3EpiO1jFTsB4sFz6oIfAfSZyQzVpkZQ9xS8ZS5g1jCBgq4Hwo0g==",
      "dev": true,
      "engines": {
        "node": ">=12.19"
      }
    },
    "node_modules/nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "dev": true,
      "dependencies": {
        "abbrev": "1"
      },
      "bin": {
        "nopt": "bin/nopt.js"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "dev": true,
      "dependencies": {
        "boolbase": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/fb55/nth-check?sponsor=1"
      }
    },
    "node_modules/nullthrows": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/nullthrows/-/nullthrows-1.1.1.tgz",
      "integrity": "sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==",
      "dev": true
    },
    "node_modules/o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dependencies": {
        "capability": "^0.2.5"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.3.tgz",
      "integrity": "sha512-ZFJnX3zltyjcYJL0RoCJuzb+11zWGyaDbjgxZbdV7rFEcHQuYxrZqhow67aA7xpes6LhojyFDaBKAFfogQrikA==",
      "dev": true,
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "has-symbols": "^1.0.3",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/ordered-binary": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/ordered-binary/-/ordered-binary-1.3.0.tgz",
      "integrity": "sha512-knIeYepTI6BDAzGxqFEDGtI/iGqs57H32CInAIxEvAHG46vk1Di0CEpyc1A7iY39B1mfik3g3KLYwOTNnnMHLA==",
      "dev": true
    },
    "node_modules/p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha512-wB3wfAxZpk2AzOfUMJNL+d36xothRSyj8EXOa4f6GMqYDN9BJaaSISbsk+wS9abmnebVw95C2Kb5t85UmpCxuw==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/p-event": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/p-event/-/p-event-5.0.1.tgz",
      "integrity": "sha512-dd589iCQ7m1L0bmC5NLlVYfy3TbBEsMUfWx9PyAgPeIcFZ/E2yaTZ4Rz4MiBmmJShviiftHVXOqfnfzJ6kyMrQ==",
      "dev": true,
      "dependencies": {
        "p-timeout": "^5.0.2"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-limit": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz",
      "integrity": "sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==",
      "dev": true,
      "dependencies": {
        "yocto-queue": "^1.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz",
      "integrity": "sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==",
      "dev": true,
      "dependencies": {
        "p-limit": "^4.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-map": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-5.5.0.tgz",
      "integrity": "sha512-VFqfGDHlx87K66yZrNdI4YGtD70IRyd+zSvgks6mzHPRNkoKy+9EKP4SFC77/vTTQYmRmti7dvqC+m5jBrBAcg==",
      "dev": true,
      "dependencies": {
        "aggregate-error": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-timeout": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-5.1.0.tgz",
      "integrity": "sha512-auFDyzzzGZZZdHz3BtET9VEz0SE/uMEAx7uWfGPucfzEwwe/xH0iVeZibQmANYE/hp9T2+UUZT5m+BKyrDp3Ew==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parcel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/parcel/-/parcel-2.7.0.tgz",
      "integrity": "sha512-pRYwnivwtNP0tip8xYSo4zCB0XhLt7/gJzP1p8OovCqkmFjG9VG+GW9TcAKqMIo0ovEa9tT+/s6gY1Qy+BONGQ==",
      "dev": true,
      "dependencies": {
        "@parcel/config-default": "2.7.0",
        "@parcel/core": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/reporter-cli": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "get-port": "^4.2.0",
        "v8-compile-cache": "^2.0.0"
      },
      "bin": {
        "parcel": "lib/bin.js"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/parcel/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/parcel/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/parcel/node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "dev": true,
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/parcel/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/parcel/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parent-module/node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parse-ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/parse-ms/-/parse-ms-2.1.0.tgz",
      "integrity": "sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz",
      "integrity": "sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pkg-conf": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pkg-conf/-/pkg-conf-4.0.0.tgz",
      "integrity": "sha512-7dmgi4UY4qk+4mj5Cd8v/GExPo0K+SlY+hulOSdfZ/T6jVH6//y7NtzZo5WrfhDBxuQ0jCa7fLZmNaNh7EWL/w==",
      "dev": true,
      "dependencies": {
        "find-up": "^6.0.0",
        "load-json-file": "^7.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/plur": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/plur/-/plur-5.1.0.tgz",
      "integrity": "sha512-VP/72JeXqak2KiOzjgKtQen5y3IZHn+9GOuLDafPv0eXa47xq0At93XahYBs26MsifCQ4enGKwbjBTKgb9QJXg==",
      "dev": true,
      "dependencies": {
        "irregular-plurals": "^3.3.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/postcss": {
      "version": "8.4.14",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.14.tgz",
      "integrity": "sha512-E398TUmfAYFPBSdzgeieK2Y1+1cpdxJx8yXbK/m57nRhKSmk1GB2tO4lbLBtlkfPQTDKfe4Xqv1ASWPpayPEig==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.4",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz",
      "integrity": "sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.0.tgz",
      "integrity": "sha512-77QESFBwgX4irogGVPgQ5s07vLvFqWr228qZY+w6lW599cRlK/HmnlivnnVUxkjHnCu4J16PDMHcH+e+2HbvTQ==",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.3.3"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
      "integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
      "dependencies": {
        "lilconfig": "^2.0.5",
        "yaml": "^1.10.2"
      },
      "engines": {
        "node": ">= 10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-5.0.6.tgz",
      "integrity": "sha512-rKqm2Fk0KbA8Vt3AdGN0FB9OBOMDVajMG6ZCf/GoHgdxUJ4sBFp0A/uMIRm+MJUdo33YXEtjqIz8u7DAp8B7DA==",
      "dependencies": {
        "postcss-selector-parser": "^6.0.6"
      },
      "engines": {
        "node": ">=12.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "node_modules/posthtml": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.16.6.tgz",
      "integrity": "sha512-JcEmHlyLK/o0uGAlj65vgg+7LIms0xKXe60lcDOTU7oVX/3LuEuLwrQpW3VJ7de5TaFKiW4kWkaIpJL42FEgxQ==",
      "dev": true,
      "dependencies": {
        "posthtml-parser": "^0.11.0",
        "posthtml-render": "^3.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/posthtml-parser": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.10.2.tgz",
      "integrity": "sha512-PId6zZ/2lyJi9LiKfe+i2xv57oEjJgWbsHGGANwos5AvdQp98i6AtamAl8gzSVFGfQ43Glb5D614cvZf012VKg==",
      "dev": true,
      "dependencies": {
        "htmlparser2": "^7.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/posthtml-render": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-3.0.0.tgz",
      "integrity": "sha512-z+16RoxK3fUPgwaIgH9NGnK1HKY9XIDpydky5eQGgAFVXTCSezalv9U2jQuNV+Z9qV1fDWNzldcw4eK0SSbqKA==",
      "dev": true,
      "dependencies": {
        "is-json": "^2.0.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/posthtml/node_modules/posthtml-parser": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.11.0.tgz",
      "integrity": "sha512-QecJtfLekJbWVo/dMAA+OSwY79wpRmbqS5TeXvXSX+f0c6pW4/SE6inzZ2qkU7oAMCPqIDkZDvd/bQsSFUnKyw==",
      "dev": true,
      "dependencies": {
        "htmlparser2": "^7.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/pretty-ms": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pretty-ms/-/pretty-ms-7.0.1.tgz",
      "integrity": "sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==",
      "dev": true,
      "dependencies": {
        "parse-ms": "^2.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==",
      "dev": true,
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/react": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.0"
      },
      "peerDependencies": {
        "react": "^18.2.0"
      }
    },
    "node_modules/react-error-overlay": {
      "version": "6.0.9",
      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.9.tgz",
      "integrity": "sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew==",
      "dev": true
    },
    "node_modules/react-ipfs-image": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/react-ipfs-image/-/react-ipfs-image-0.6.0.tgz",
      "integrity": "sha512-Ms17ZQFpzUGxz0QXB3wsSW4qTQkD6m0vxkwdXJ6nVsDKuta+QG9qRBITMhO5avYnOiLARJfLZOChVbYbdNJ/Rw==",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "react": ">=16"
      }
    },
    "node_modules/react-is": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz",
      "integrity": "sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==",
      "dev": true
    },
    "node_modules/react-refresh": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.9.0.tgz",
      "integrity": "sha512-Gvzk7OZpiqKSkxsQvO/mbTN1poglhmAV7gR/DdIrRrSMXraRQQlfikRJOr3Nb9GTMPC5kof948Zy6jJZIFtDvQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.3.0.tgz",
      "integrity": "sha512-7Wh1DzVQ+tlFjkeo+ujvjSqSJmkt1+8JO+T5xklPlgrh70y7ogx75ODRW0ThWhY7S+6yEDks8TYrtQe/aoboBQ==",
      "dependencies": {
        "history": "^5.2.0"
      },
      "peerDependencies": {
        "react": ">=16.8"
      }
    },
    "node_modules/react-router-dom": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.3.0.tgz",
      "integrity": "sha512-uaJj7LKytRxZNQV8+RbzJWnJ8K2nPsOOEuX7aQstlMZKQT0164C+X2w6bnkqU3sjtLvpd5ojrezAyfZ1+0sStw==",
      "dependencies": {
        "history": "^5.2.0",
        "react-router": "6.3.0"
      },
      "peerDependencies": {
        "react": ">=16.8",
        "react-dom": ">=16.8"
      }
    },
    "node_modules/react-shallow-renderer": {
      "version": "16.15.0",
      "resolved": "https://registry.npmjs.org/react-shallow-renderer/-/react-shallow-renderer-16.15.0.tgz",
      "integrity": "sha512-oScf2FqQ9LFVQgA73vr86xl2NaOIX73rh+YFqcOp68CWj56tSfgtGKrEbyhCj0rSijyG9M1CYprTh39fBi5hzA==",
      "dev": true,
      "dependencies": {
        "object-assign": "^4.1.1",
        "react-is": "^16.12.0 || ^17.0.0 || ^18.0.0"
      },
      "peerDependencies": {
        "react": "^16.0.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-test-renderer": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-18.2.0.tgz",
      "integrity": "sha512-JWD+aQ0lh2gvh4NM3bBM42Kx+XybOxCpgYK7F8ugAlpaTSnWsX+39Z4XkOykGZAHrjwwTZT3x3KxswVWxHPUqA==",
      "dev": true,
      "dependencies": {
        "react-is": "^18.2.0",
        "react-shallow-renderer": "^16.15.0",
        "scheduler": "^0.23.0"
      },
      "peerDependencies": {
        "react": "^18.2.0"
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "dev": true
    },
    "node_modules/regenerate-unicode-properties": {
      "version": "10.0.1",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.0.1.tgz",
      "integrity": "sha512-vn5DU6yg6h8hP/2OkQo3K7uVILvY4iu0oI4t3HFa81UPkhGJwkRwM10JEc3upjdhHjs/k8GJY1sRBhk5sr69Bw==",
      "dev": true,
      "dependencies": {
        "regenerate": "^1.4.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.9",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
    },
    "node_modules/regenerator-transform": {
      "version": "0.15.0",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.0.tgz",
      "integrity": "sha512-LsrGtPmbYg19bcPHwdtmXwbW+TqNvtY4riE3P83foeHRroMbH6/2ddFBfab3t7kbzc7v7p4wbkIecHImqt0QNg==",
      "dev": true,
      "dependencies": {
        "@babel/runtime": "^7.8.4"
      }
    },
    "node_modules/regexpu-core": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.1.0.tgz",
      "integrity": "sha512-bb6hk+xWd2PEOkj5It46A16zFMs2mv86Iwpdu94la4S3sJ7C973h2dHpYKwIBGaWSO7cIRJ+UX0IeMaWcO4qwA==",
      "dev": true,
      "dependencies": {
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.0.1",
        "regjsgen": "^0.6.0",
        "regjsparser": "^0.8.2",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regjsgen": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.6.0.tgz",
      "integrity": "sha512-ozE883Uigtqj3bx7OhL1KNbCzGyW2NQZPl6Hs09WTvCuZD5sTI4JY58bkbQWa/Y9hxIsvJ3M8Nbf7j54IqeZbA==",
      "dev": true
    },
    "node_modules/regjsparser": {
      "version": "0.8.4",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.8.4.tgz",
      "integrity": "sha512-J3LABycON/VNEu3abOviqGHuB/LOtOQj8SKmfP9anY5GfAVw/SPjwzSjxGjbZXIxbGfqTHtJw58C2Li/WkStmA==",
      "dev": true,
      "dependencies": {
        "jsesc": "~0.5.0"
      },
      "bin": {
        "regjsparser": "bin/parser"
      }
    },
    "node_modules/regjsparser/node_modules/jsesc": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
      "integrity": "sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==",
      "dev": true,
      "bin": {
        "jsesc": "bin/jsesc"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dependencies": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-cwd": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
      "dev": true,
      "dependencies": {
        "resolve-from": "^5.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve-cwd/node_modules/resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/scheduler": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz",
      "integrity": "sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/serialize-error": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
      "dev": true,
      "dependencies": {
        "type-fest": "^0.13.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "node_modules/simple-update-notifier": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.0.7.tgz",
      "integrity": "sha512-BBKgR84BJQJm6WjWFMHgLVuo61FBDSj1z/xSFUIozqO6wO7ii0JxCqlIud7Enr/+LhlbNI0whErq96P2qHNWew==",
      "dev": true,
      "dependencies": {
        "semver": "~7.0.0"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/simple-update-notifier/node_modules/semver": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
      "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/slice-ansi": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-5.0.0.tgz",
      "integrity": "sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^6.0.0",
        "is-fullwidth-code-point": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/slice-ansi?sponsor=1"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz",
      "integrity": "sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "dev": true
    },
    "node_modules/stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "deprecated": "Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibility",
      "dev": true
    },
    "node_modules/stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/stack-utils/node_modules/escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/supertap": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/supertap/-/supertap-3.0.1.tgz",
      "integrity": "sha512-u1ZpIBCawJnO+0QePsEiOknOfCRq0yERxiAchT0i4li0WHNUJbf0evXXSXOcCAR4M8iMDoajXYmstm/qO81Isw==",
      "dev": true,
      "dependencies": {
        "indent-string": "^5.0.0",
        "js-yaml": "^3.14.1",
        "serialize-error": "^7.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/svgo": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-2.8.0.tgz",
      "integrity": "sha512-+N/Q9kV1+F+UeWYoSiULYo4xYSDQlTgb+ayMobAXPwMnLvop7oxKMo9OzIrX5x3eS4L4f2UHhc9axXwY8DpChg==",
      "dev": true,
      "dependencies": {
        "@trysound/sax": "0.2.0",
        "commander": "^7.2.0",
        "css-select": "^4.1.3",
        "css-tree": "^1.1.3",
        "csso": "^4.2.0",
        "picocolors": "^1.0.0",
        "stable": "^0.1.8"
      },
      "bin": {
        "svgo": "bin/svgo"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/svgo/node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "dev": true,
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.1.6.tgz",
      "integrity": "sha512-7skAOY56erZAFQssT1xkpk+kWt2NrO45kORlxFPXUt3CiGsVPhH1smuH5XoDH6sGPXLyBv+zgCKA2HWBsgCytg==",
      "dependencies": {
        "arg": "^5.0.2",
        "chokidar": "^3.5.3",
        "color-name": "^1.1.4",
        "detective": "^5.2.1",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.2.11",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "lilconfig": "^2.0.5",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.0.0",
        "postcss": "^8.4.14",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "5.0.6",
        "postcss-selector-parser": "^6.0.10",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        "resolve": "^1.22.1"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.9"
      }
    },
    "node_modules/tailwindcss/node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg=="
    },
    "node_modules/tailwindcss/node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/temp-dir": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-2.0.0.tgz",
      "integrity": "sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/term-size": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
      "integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terser": {
      "version": "5.14.2",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.14.2.tgz",
      "integrity": "sha512-oL0rGeM/WFQCUd0y2QrWxYnq7tfSuKBiqTjRPWrRgB46WD/kiwHwF8T23z78H6Q6kGCuuHcPB+KULHRdxvVGQA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/source-map": "^0.3.2",
        "acorn": "^8.5.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "node_modules/time-zone": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/time-zone/-/time-zone-1.0.0.tgz",
      "integrity": "sha512-TIsDdtKo6+XrPtiTm1ssmMngN1sAhyKnTO2kunQWqNPWIVvCm15Wmw4SWInwTVgJ5u/Tr04+8Ei9TNcw4x4ONA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha512-qsdtZH+vMoCARQtyod4imc2nIJwg9Cc7lPRrw9CzF8ZKR0khdr8+2nX80PBhET3tcyTtJDxAffGh2rXH4tyU8A==",
      "dev": true
    },
    "node_modules/to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "dev": true,
      "dependencies": {
        "nopt": "~1.0.10"
      },
      "bin": {
        "nodetouch": "bin/nodetouch.js"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "node_modules/ts-node": {
      "version": "10.9.1",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.1.tgz",
      "integrity": "sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==",
      "devOptional": true,
      "dependencies": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      },
      "bin": {
        "ts-node": "dist/bin.js",
        "ts-node-cwd": "dist/bin-cwd.js",
        "ts-node-esm": "dist/bin-esm.js",
        "ts-node-script": "dist/bin-script.js",
        "ts-node-transpile-only": "dist/bin-transpile.js",
        "ts-script": "dist/bin-script-deprecated.js"
      },
      "peerDependencies": {
        "@swc/core": ">=1.2.50",
        "@swc/wasm": ">=1.2.50",
        "@types/node": "*",
        "typescript": ">=2.7"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "@swc/wasm": {
          "optional": true
        }
      }
    },
    "node_modules/tslib": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.0.tgz",
      "integrity": "sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==",
      "dev": true
    },
    "node_modules/tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "node_modules/type-fest": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typescript": {
      "version": "4.7.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.7.4.tgz",
      "integrity": "sha512-C0WQT0gezHuw6AdY1M2jxUO83Rjf0HP7Sk1DtXj6j1EwkQNZrHAg2XPWlq62oqEhYvONq5pkC2Y9oPljWToLmQ==",
      "devOptional": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=4.2.0"
      }
    },
    "node_modules/u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "node_modules/undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true
    },
    "node_modules/unicode-canonical-property-names-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz",
      "integrity": "sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "dev": true,
      "dependencies": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-value-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.0.0.tgz",
      "integrity": "sha512-7Yhkc0Ye+t4PNYzOGKedDhXbYIBe1XEQYQxOPyhcXNMJ0WCABqqj6ckydd6pWRZTHV4GuCPKdBAUiMc60tsKVw==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-property-aliases-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5Zfuy9q/DFr4tfO7ZPeVXb1aPoeQSdeFMLpYuFebehDAhbuevLs5yxSZmIFN1tP5F9Wl4IpJrYojg85/zgyZHQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.5.tgz",
      "integrity": "sha512-dteFFpCyvuDdr9S/ff1ISkKt/9YZxKjI9WlRR99c180GaztJtRa/fn18FdxGVKVsnPY7/a/FDN68mcvUmP4U7Q==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      },
      "bin": {
        "browserslist-lint": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "node_modules/utility-types": {
      "version": "3.10.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.10.0.tgz",
      "integrity": "sha512-O11mqxmi7wMKCo6HKFt5AhO4BwY3VV68YU07tgxfz8zJTIxr4BpsezN49Ffwy9j3ZpwwJp4fkRwjRzq3uWE6Rg==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA==",
      "dev": true
    },
    "node_modules/v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
      "devOptional": true
    },
    "node_modules/weak-lru-cache": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/weak-lru-cache/-/weak-lru-cache-1.2.2.tgz",
      "integrity": "sha512-DEAoo25RfSYMuTGc9vPJzZcZullwIqRDSI9LOy+fkCJPi6hykCnfKaXTuPBDuXAUcqHXyOgFtHNp/kB2FjYHbw==",
      "dev": true
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "node_modules/well-known-symbols": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/well-known-symbols/-/well-known-symbols-2.0.0.tgz",
      "integrity": "sha512-ZMjC3ho+KXo0BfJb7JgtQ5IBuvnShdlACNkKkdsqBmYw3bPAaJfPeYUo6tLUaT5tG/Gkh7xkpBhKRQ9e7pyg9Q==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/wrap-ansi/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "node_modules/write-file-atomic": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.1.tgz",
      "integrity": "sha512-nSKUxgAbyioruk6hU87QzVbY279oYT6uiwgDoujth2ju4mJ+TZau7SQBhtbTmUyuNYTuXnSyRn66FV0+eCgcrQ==",
      "dev": true,
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.7"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16"
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/xxhash-wasm": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/xxhash-wasm/-/xxhash-wasm-0.4.2.tgz",
      "integrity": "sha512-/eyHVRJQCirEkSZ1agRSCwriMhwlyUcFkXD5TPVSLP+IPzjsqMVzZwdoczLp1SoQU0R3dxz1RpIK+4YNQbCVOA==",
      "dev": true
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/yargs": {
      "version": "17.5.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.5.1.tgz",
      "integrity": "sha512-t6YAJcxDkNX7NFYiVtKvWUz8l+PaKTLiL63mJYWR2GnHq2gjEWISzsLp9wg3aY36dY1j+gfIEL3pIF+XlJJfbA==",
      "dev": true,
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/yargs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "devOptional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/yocto-queue": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz",
      "integrity": "sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==",
      "dev": true,
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  },
  "dependencies": {
    "@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "dev": true,
      "requires": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dev": true,
      "requires": {
        "@babel/highlight": "^7.18.6"
      }
    },
    "@babel/compat-data": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.18.8.tgz",
      "integrity": "sha512-HSmX4WZPPK3FUxYp7g2T6EyO8j96HlZJlxmKPSh6KAcqwyDrfx7hKjXpAW/0FhFfTJsR0Yt4lAjLI2coMptIHQ==",
      "dev": true
    },
    "@babel/core": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.18.10.tgz",
      "integrity": "sha512-JQM6k6ENcBFKVtWvLavlvi/mPcpYZ3+R+2EySDEMSMbp7Mn4FexlbbJVrx2R7Ijhr01T8gyqrOaABWIOgxeUyw==",
      "dev": true,
      "requires": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.18.10",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-module-transforms": "^7.18.9",
        "@babel/helpers": "^7.18.9",
        "@babel/parser": "^7.18.10",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.18.10",
        "@babel/types": "^7.18.10",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      }
    },
    "@babel/generator": {
      "version": "7.18.12",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.18.12.tgz",
      "integrity": "sha512-dfQ8ebCN98SvyL7IxNMCUtZQSq5R7kxgN+r8qYTGDmmSion1hX2C0zq2yo1bsCDhXixokv1SAWTZUMYbO/V5zg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.10",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "dependencies": {
        "@jridgewell/gen-mapping": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
          "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
          "dev": true,
          "requires": {
            "@jridgewell/set-array": "^1.0.1",
            "@jridgewell/sourcemap-codec": "^1.4.10",
            "@jridgewell/trace-mapping": "^0.3.9"
          }
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz",
      "integrity": "sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==",
      "dev": true,
      "requires": {
        "@babel/helper-explode-assignable-expression": "^7.18.6",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-compilation-targets": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.18.9.tgz",
      "integrity": "sha512-tzLCyVmqUiFlcFoAPLA/gL9TeYrF61VLNtb+hvkuVaB5SUjW7jcfrglBIX1vUIoT7CLP3bBlIMeyEsIl2eFQNg==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.20.2",
        "semver": "^6.3.0"
      }
    },
    "@babel/helper-create-class-features-plugin": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.18.9.tgz",
      "integrity": "sha512-WvypNAYaVh23QcjpMR24CwZY2Nz6hqdOcFdPbNpV56hL5H6KiFheO7Xm1aPdlLQ7d5emYZX7VZwPp9x3z+2opw==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      }
    },
    "@babel/helper-create-regexp-features-plugin": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.18.6.tgz",
      "integrity": "sha512-7LcpH1wnQLGrI+4v+nPp+zUvIkF9x0ddv1Hkdue10tg3gmRnLy97DXh4STiOf1qeIInyD69Qv5kKSZzKD8B/7A==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "regexpu-core": "^5.1.0"
      }
    },
    "@babel/helper-define-polyfill-provider": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.2.tgz",
      "integrity": "sha512-r9QJJ+uDWrd+94BSPcP6/de67ygLtvVy6cK4luE6MOuDsZIdoaPBnfSpbO/+LTifjPckbKXRuI9BB/Z2/y3iTg==",
      "dev": true,
      "requires": {
        "@babel/helper-compilation-targets": "^7.17.7",
        "@babel/helper-plugin-utils": "^7.16.7",
        "debug": "^4.1.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.14.2",
        "semver": "^6.1.2"
      }
    },
    "@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==",
      "dev": true
    },
    "@babel/helper-explode-assignable-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz",
      "integrity": "sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-function-name": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.18.9.tgz",
      "integrity": "sha512-fJgWlZt7nxGksJS9a0XdSaI4XvpExnNIgRP+rVefWh5U7BL8pPuir6SJUmFKRfjWQ51OtWSzwOxhaH/EBWWc0A==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.18.6",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.18.9.tgz",
      "integrity": "sha512-KYNqY0ICwfv19b31XzvmI/mfcylOzbLtowkw+mfvGPAQ3kfCnMLYbED3YecL5tPd8nAYFQFAd6JHp2LxZk/J1g==",
      "dev": true,
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.18.6",
        "@babel/template": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.18.9.tgz",
      "integrity": "sha512-aBXPT3bmtLryXaoJLyYPXPlSD4p1ld9aYeR+sJNOZjJJGiOpb+fKfh3NkcCu7J54nUJwCERPBExCCpyCOHnu/w==",
      "dev": true
    },
    "@babel/helper-remap-async-to-generator": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz",
      "integrity": "sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-wrap-function": "^7.18.9",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-replace-supers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.18.9.tgz",
      "integrity": "sha512-dNsWibVI4lNT6HiuOIBr1oyxo40HvIVmbwPUm3XZ7wMh4k2WxrxTqZwSqw/eEmXDS9np0ey5M2bz9tBmO9c+YQ==",
      "dev": true,
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.18.6.tgz",
      "integrity": "sha512-iNpIgTgyAvDQpDj76POqg+YEt8fPxx3yaNBg3S30dxNKm2SWfYhD0TGrK/Eu9wHpUW63VQU894TsTg+GLbUa1g==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.18.9.tgz",
      "integrity": "sha512-imytd2gHi3cJPsybLRbmFrF7u5BIEuI2cNheyKi3/iOBC63kNn3q8Crn2xVuESli0aM4KYsyEqKyS7lFL8YVtw==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-string-parser": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.18.10.tgz",
      "integrity": "sha512-XtIfWmeNY3i4t7t4D2t02q50HvqHybPqW2ki1kosnvWCwuCMeo81Jf0gwr85jy/neUdg5XDdeFE/80DXiO+njw==",
      "dev": true
    },
    "@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g==",
      "dev": true
    },
    "@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw==",
      "dev": true
    },
    "@babel/helper-wrap-function": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.18.11.tgz",
      "integrity": "sha512-oBUlbv+rjZLh2Ks9SKi4aL7eKaAXBWleHzU89mP0G6BMUlRxSckk9tSIkgDGydhgFxHuGSlBQZfnaD47oBEB7w==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.18.9",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.18.11",
        "@babel/types": "^7.18.10"
      }
    },
    "@babel/helpers": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.18.9.tgz",
      "integrity": "sha512-Jf5a+rbrLoR4eNdUmnFu8cN5eNJT6qdTdOg5IHIzq87WwyRw9PwguLFOWYgktN/60IP4fgDUawJvs7PjQIzELQ==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.18.6",
        "@babel/traverse": "^7.18.9",
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dev": true,
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      }
    },
    "@babel/parser": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.18.11.tgz",
      "integrity": "sha512-9JKn5vN+hDt0Hdqn1PiJ2guflwP+B6Ga8qbDuoF0PzzVhrzsKIJo8yGqVk6CmMHiMei9w1C1Bp9IMJSIK+HPIQ==",
      "dev": true
    },
    "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz",
      "integrity": "sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.18.9.tgz",
      "integrity": "sha512-AHrP9jadvH7qlOj6PINbgSuphjQUAK7AOT7DPjBo9EHoLhQTnnK5u45e1Hd4DbSQEO9nqPWtQ89r+XEOWFScKg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9",
        "@babel/plugin-proposal-optional-chaining": "^7.18.9"
      }
    },
    "@babel/plugin-proposal-async-generator-functions": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.18.10.tgz",
      "integrity": "sha512-1mFuY2TOsR1hxbjCo4QL+qlIjV07p4H4EUYw2J/WCqsvFV6V9X9z9YhXbWndc/4fw+hYGlDT7egYxliMp5O6Ew==",
      "dev": true,
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-remap-async-to-generator": "^7.18.9",
        "@babel/plugin-syntax-async-generators": "^7.8.4"
      }
    },
    "@babel/plugin-proposal-class-properties": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz",
      "integrity": "sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-proposal-class-static-block": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.18.6.tgz",
      "integrity": "sha512-+I3oIiNxrCpup3Gi8n5IGMwj0gOCAjcJUSQEcotNnCCPMEnixawOQ+KeJPlgfjzx+FKQ1QSyZOWe7wmoJp7vhw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-class-static-block": "^7.14.5"
      }
    },
    "@babel/plugin-proposal-dynamic-import": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz",
      "integrity": "sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-export-namespace-from": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz",
      "integrity": "sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-json-strings": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz",
      "integrity": "sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-json-strings": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-logical-assignment-operators": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.18.9.tgz",
      "integrity": "sha512-128YbMpjCrP35IOExw2Fq+x55LMP42DzhOhX2aNNIdI9avSWl2PI0yuBWarr3RYpZBSPtabfadkH2yeRiMD61Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4"
      }
    },
    "@babel/plugin-proposal-nullish-coalescing-operator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz",
      "integrity": "sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-numeric-separator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz",
      "integrity": "sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4"
      }
    },
    "@babel/plugin-proposal-object-rest-spread": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.18.9.tgz",
      "integrity": "sha512-kDDHQ5rflIeY5xl69CEqGEZ0KY369ehsCIEbTGb4siHG5BE9sga/T0r0OUwyZNLMmZE79E1kbsqAjwFCW4ds6Q==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-transform-parameters": "^7.18.8"
      }
    },
    "@babel/plugin-proposal-optional-catch-binding": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz",
      "integrity": "sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-optional-chaining": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.18.9.tgz",
      "integrity": "sha512-v5nwt4IqBXihxGsW2QmCWMDS3B3bzGIk/EQVZz2ei7f3NJl8NzAJVvUmpDW5q1CRNY+Beb/k58UAH1Km1N411w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-private-methods": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz",
      "integrity": "sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-proposal-private-property-in-object": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.18.6.tgz",
      "integrity": "sha512-9Rysx7FOctvT5ouj5JODjAFAkgGoudQuLPamZb0v1TGLpapdNaftzifU8NTWQm0IRjqoYypdrSmyWgkocDQ8Dw==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-create-class-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5"
      }
    },
    "@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz",
      "integrity": "sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-class-properties": {
      "version": "7.12.13",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.12.13"
      }
    },
    "@babel/plugin-syntax-class-static-block": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
      "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-export-namespace-from": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz",
      "integrity": "sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-import-assertions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.18.6.tgz",
      "integrity": "sha512-/DU3RXad9+bZwrgWJQKbr39gYbJpLJHezqEzRzi/BHRlJ9zsQb4CK2CA/5apllXNomwA1qHwzvHl+AdEmC5krQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-jsx": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.18.6.tgz",
      "integrity": "sha512-6mmljtAedFGTWu2p/8WIORGwy+61PLgOMPOdazc7YoJ9ZCWUyFy3A6CpPkRKLKD1ToAesxX8KGEViAiLo9N+7Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-syntax-logical-assignment-operators": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.10.4"
      }
    },
    "@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-numeric-separator": {
      "version": "7.10.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
      "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.10.4"
      }
    },
    "@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-private-property-in-object": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
      "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-syntax-top-level-await": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
      "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.14.5"
      }
    },
    "@babel/plugin-transform-arrow-functions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.18.6.tgz",
      "integrity": "sha512-9S9X9RUefzrsHZmKMbDXxweEH+YlE8JJEuat9FdvW9Qh1cw7W64jELCtWNkPBPX5En45uy28KGvA/AySqUh8CQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-async-to-generator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.18.6.tgz",
      "integrity": "sha512-ARE5wZLKnTgPW7/1ftQmSi1CmkqqHo2DNmtztFhvgtOWSDfq0Cq9/9L+KnZNYSNrydBekhW3rwShduf59RoXag==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-remap-async-to-generator": "^7.18.6"
      }
    },
    "@babel/plugin-transform-block-scoped-functions": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz",
      "integrity": "sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-block-scoping": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.18.9.tgz",
      "integrity": "sha512-5sDIJRV1KtQVEbt/EIBwGy4T01uYIo4KRB3VUqzkhrAIOGx7AoctL9+Ux88btY0zXdDyPJ9mW+bg+v+XEkGmtw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-classes": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.18.9.tgz",
      "integrity": "sha512-EkRQxsxoytpTlKJmSPYrsOMjCILacAjtSVkd4gChEe2kXjFCun3yohhW5I7plXJhCemM0gKsaGMcO8tinvCA5g==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "globals": "^11.1.0"
      }
    },
    "@babel/plugin-transform-computed-properties": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.18.9.tgz",
      "integrity": "sha512-+i0ZU1bCDymKakLxn5srGHrsAPRELC2WIbzwjLhHW9SIE1cPYkLCL0NlnXMZaM1vhfgA2+M7hySk42VBvrkBRw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-destructuring": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.18.9.tgz",
      "integrity": "sha512-p5VCYNddPLkZTq4XymQIaIfZNJwT9YsjkPOhkVEqt6QIpQFZVM9IltqqYpOEkJoN1DPznmxUDyZ5CTZs/ZCuHA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-dotall-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz",
      "integrity": "sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-duplicate-keys": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz",
      "integrity": "sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-exponentiation-operator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz",
      "integrity": "sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==",
      "dev": true,
      "requires": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-for-of": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.18.8.tgz",
      "integrity": "sha512-yEfTRnjuskWYo0k1mHUqrVWaZwrdq8AYbfrpqULOJOaucGSp4mNMVps+YtA8byoevxS/urwU75vyhQIxcCgiBQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-function-name": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz",
      "integrity": "sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==",
      "dev": true,
      "requires": {
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-literals": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz",
      "integrity": "sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-member-expression-literals": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz",
      "integrity": "sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-modules-amd": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.18.6.tgz",
      "integrity": "sha512-Pra5aXsmTsOnjM3IajS8rTaLCy++nGM4v3YR4esk5PCsyg9z8NA5oQLwxzMUtDBd8F+UmVza3VxoAaWCbzH1rg==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      }
    },
    "@babel/plugin-transform-modules-commonjs": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.18.6.tgz",
      "integrity": "sha512-Qfv2ZOWikpvmedXQJDSbxNqy7Xr/j2Y8/KfijM0iJyKkBTmWuvCA1yeH1yDM7NJhBW/2aXxeucLj6i80/LAJ/Q==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      }
    },
    "@babel/plugin-transform-modules-systemjs": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.18.9.tgz",
      "integrity": "sha512-zY/VSIbbqtoRoJKo2cDTewL364jSlZGvn0LKOf9ntbfxOvjfmyrdtEEOAdswOswhZEb8UH3jDkCKHd1sPgsS0A==",
      "dev": true,
      "requires": {
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-module-transforms": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-validator-identifier": "^7.18.6",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      }
    },
    "@babel/plugin-transform-modules-umd": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz",
      "integrity": "sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.18.6.tgz",
      "integrity": "sha512-UmEOGF8XgaIqD74bC8g7iV3RYj8lMf0Bw7NJzvnS9qQhM4mg+1WHKotUIdjxgD2RGrgFLZZPCFPFj3P/kVDYhg==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-new-target": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz",
      "integrity": "sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-object-super": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz",
      "integrity": "sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.6"
      }
    },
    "@babel/plugin-transform-parameters": {
      "version": "7.18.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.18.8.tgz",
      "integrity": "sha512-ivfbE3X2Ss+Fj8nnXvKJS6sjRG4gzwPMsP+taZC+ZzEGjAYlvENixmt1sZ5Ca6tWls+BlKSGKPJ6OOXvXCbkFg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-property-literals": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz",
      "integrity": "sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-react-display-name": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.18.6.tgz",
      "integrity": "sha512-TV4sQ+T013n61uMoygyMRm+xf04Bd5oqFpv2jAEQwSZ8NwQA7zeRPg1LMVg2PWi3zWBz+CLKD+v5bcpZ/BS0aA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-react-jsx": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.18.10.tgz",
      "integrity": "sha512-gCy7Iikrpu3IZjYZolFE4M1Sm+nrh1/6za2Ewj77Z+XirT4TsbJcvOFOyF+fRPwU6AKKK136CZxx6L8AbSFG6A==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/plugin-syntax-jsx": "^7.18.6",
        "@babel/types": "^7.18.10"
      }
    },
    "@babel/plugin-transform-react-jsx-development": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.18.6.tgz",
      "integrity": "sha512-SA6HEjwYFKF7WDjWcMcMGUimmw/nhNRDWxr+KaLSCrkD/LMDBvWRmHAYgE1HDeF8KUuI8OAu+RT6EOtKxSW2qA==",
      "dev": true,
      "requires": {
        "@babel/plugin-transform-react-jsx": "^7.18.6"
      }
    },
    "@babel/plugin-transform-react-pure-annotations": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.18.6.tgz",
      "integrity": "sha512-I8VfEPg9r2TRDdvnHgPepTKvuRomzA8+u+nhY7qSI1fR2hRNebasZEETLyM5mAUr0Ku56OkXJ0I7NHJnO6cJiQ==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-regenerator": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.18.6.tgz",
      "integrity": "sha512-poqRI2+qiSdeldcz4wTSTXBRryoq3Gc70ye7m7UD5Ww0nE29IXqMl6r7Nd15WBgRd74vloEMlShtH6CKxVzfmQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "regenerator-transform": "^0.15.0"
      }
    },
    "@babel/plugin-transform-reserved-words": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz",
      "integrity": "sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-shorthand-properties": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz",
      "integrity": "sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-spread": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.18.9.tgz",
      "integrity": "sha512-39Q814wyoOPtIB/qGopNIL9xDChOE1pNU0ZY5dO0owhiVt/5kFm4li+/bBtwc7QotG0u5EPzqhZdjMtmqBqyQA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.18.9"
      }
    },
    "@babel/plugin-transform-sticky-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz",
      "integrity": "sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-template-literals": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz",
      "integrity": "sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-typeof-symbol": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz",
      "integrity": "sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-unicode-escapes": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz",
      "integrity": "sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.9"
      }
    },
    "@babel/plugin-transform-unicode-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz",
      "integrity": "sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/preset-env": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.18.10.tgz",
      "integrity": "sha512-wVxs1yjFdW3Z/XkNfXKoblxoHgbtUF7/l3PvvP4m02Qz9TZ6uZGxRVYjSQeR87oQmHco9zWitW5J82DJ7sCjvA==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.18.8",
        "@babel/helper-compilation-targets": "^7.18.9",
        "@babel/helper-plugin-utils": "^7.18.9",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.18.6",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.18.9",
        "@babel/plugin-proposal-async-generator-functions": "^7.18.10",
        "@babel/plugin-proposal-class-properties": "^7.18.6",
        "@babel/plugin-proposal-class-static-block": "^7.18.6",
        "@babel/plugin-proposal-dynamic-import": "^7.18.6",
        "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
        "@babel/plugin-proposal-json-strings": "^7.18.6",
        "@babel/plugin-proposal-logical-assignment-operators": "^7.18.9",
        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
        "@babel/plugin-proposal-numeric-separator": "^7.18.6",
        "@babel/plugin-proposal-object-rest-spread": "^7.18.9",
        "@babel/plugin-proposal-optional-catch-binding": "^7.18.6",
        "@babel/plugin-proposal-optional-chaining": "^7.18.9",
        "@babel/plugin-proposal-private-methods": "^7.18.6",
        "@babel/plugin-proposal-private-property-in-object": "^7.18.6",
        "@babel/plugin-proposal-unicode-property-regex": "^7.18.6",
        "@babel/plugin-syntax-async-generators": "^7.8.4",
        "@babel/plugin-syntax-class-properties": "^7.12.13",
        "@babel/plugin-syntax-class-static-block": "^7.14.5",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
        "@babel/plugin-syntax-export-namespace-from": "^7.8.3",
        "@babel/plugin-syntax-import-assertions": "^7.18.6",
        "@babel/plugin-syntax-json-strings": "^7.8.3",
        "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.10.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.3",
        "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
        "@babel/plugin-syntax-top-level-await": "^7.14.5",
        "@babel/plugin-transform-arrow-functions": "^7.18.6",
        "@babel/plugin-transform-async-to-generator": "^7.18.6",
        "@babel/plugin-transform-block-scoped-functions": "^7.18.6",
        "@babel/plugin-transform-block-scoping": "^7.18.9",
        "@babel/plugin-transform-classes": "^7.18.9",
        "@babel/plugin-transform-computed-properties": "^7.18.9",
        "@babel/plugin-transform-destructuring": "^7.18.9",
        "@babel/plugin-transform-dotall-regex": "^7.18.6",
        "@babel/plugin-transform-duplicate-keys": "^7.18.9",
        "@babel/plugin-transform-exponentiation-operator": "^7.18.6",
        "@babel/plugin-transform-for-of": "^7.18.8",
        "@babel/plugin-transform-function-name": "^7.18.9",
        "@babel/plugin-transform-literals": "^7.18.9",
        "@babel/plugin-transform-member-expression-literals": "^7.18.6",
        "@babel/plugin-transform-modules-amd": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/plugin-transform-modules-systemjs": "^7.18.9",
        "@babel/plugin-transform-modules-umd": "^7.18.6",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.18.6",
        "@babel/plugin-transform-new-target": "^7.18.6",
        "@babel/plugin-transform-object-super": "^7.18.6",
        "@babel/plugin-transform-parameters": "^7.18.8",
        "@babel/plugin-transform-property-literals": "^7.18.6",
        "@babel/plugin-transform-regenerator": "^7.18.6",
        "@babel/plugin-transform-reserved-words": "^7.18.6",
        "@babel/plugin-transform-shorthand-properties": "^7.18.6",
        "@babel/plugin-transform-spread": "^7.18.9",
        "@babel/plugin-transform-sticky-regex": "^7.18.6",
        "@babel/plugin-transform-template-literals": "^7.18.9",
        "@babel/plugin-transform-typeof-symbol": "^7.18.9",
        "@babel/plugin-transform-unicode-escapes": "^7.18.10",
        "@babel/plugin-transform-unicode-regex": "^7.18.6",
        "@babel/preset-modules": "^0.1.5",
        "@babel/types": "^7.18.10",
        "babel-plugin-polyfill-corejs2": "^0.3.2",
        "babel-plugin-polyfill-corejs3": "^0.5.3",
        "babel-plugin-polyfill-regenerator": "^0.4.0",
        "core-js-compat": "^3.22.1",
        "semver": "^6.3.0"
      }
    },
    "@babel/preset-modules": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz",
      "integrity": "sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
        "@babel/plugin-transform-dotall-regex": "^7.4.4",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      }
    },
    "@babel/preset-react": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.18.6.tgz",
      "integrity": "sha512-zXr6atUmyYdiWRVLOZahakYmOBHtWc2WGCkP8PYTgZi0iJXDY2CN180TdrIW4OGOAdLc7TifzDIvtx6izaRIzg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-react-display-name": "^7.18.6",
        "@babel/plugin-transform-react-jsx": "^7.18.6",
        "@babel/plugin-transform-react-jsx-development": "^7.18.6",
        "@babel/plugin-transform-react-pure-annotations": "^7.18.6"
      }
    },
    "@babel/runtime": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.18.9.tgz",
      "integrity": "sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
      "requires": {
        "regenerator-runtime": "^0.13.4"
      }
    },
    "@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      }
    },
    "@babel/traverse": {
      "version": "7.18.11",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.18.11.tgz",
      "integrity": "sha512-TG9PiM2R/cWCAy6BPJKeHzNbu4lPzOSZpeMfeNErskGpTJx6trEvFaVCbDvpcxwy49BKWmEPwiW8mrysNiDvIQ==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.18.10",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.18.9",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.18.11",
        "@babel/types": "^7.18.10",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      }
    },
    "@babel/types": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.18.10.tgz",
      "integrity": "sha512-MJvnbEiiNkpjo+LknnmRrqbY1GPUUggjv+wQVjetM/AONoupqRALB7I6jGqNUAZsKcRIEu2J6FRFvsczljjsaQ==",
      "dev": true,
      "requires": {
        "@babel/helper-string-parser": "^7.18.10",
        "@babel/helper-validator-identifier": "^7.18.6",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "devOptional": true,
      "requires": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "dependencies": {
        "@jridgewell/trace-mapping": {
          "version": "0.3.9",
          "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
          "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
          "devOptional": true,
          "requires": {
            "@jridgewell/resolve-uri": "^3.0.3",
            "@jridgewell/sourcemap-codec": "^1.4.10"
          }
        }
      }
    },
    "@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "dev": true,
      "requires": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "devOptional": true
    },
    "@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "dev": true
    },
    "@jridgewell/source-map": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.2.tgz",
      "integrity": "sha512-m7O9o2uR8k2ObDysZYzdfhb08VuEml5oWGiosa1VdaPZ/A6QyPkAJuwN0Q1lhULOf6B7MtQmHENS743hWtCrgw==",
      "dev": true,
      "requires": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "dependencies": {
        "@jridgewell/gen-mapping": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
          "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
          "dev": true,
          "requires": {
            "@jridgewell/set-array": "^1.0.1",
            "@jridgewell/sourcemap-codec": "^1.4.10",
            "@jridgewell/trace-mapping": "^0.3.9"
          }
        }
      }
    },
    "@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==",
      "devOptional": true
    },
    "@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "dev": true,
      "requires": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@lezer/common": {
      "version": "0.15.12",
      "resolved": "https://registry.npmjs.org/@lezer/common/-/common-0.15.12.tgz",
      "integrity": "sha512-edfwCxNLnzq5pBA/yaIhwJ3U3Kz8VAUOTRg0hhxaizaI1N+qxV7EXDv/kLCkLeq2RzSFvxexlaj5Mzfn2kY0Ig==",
      "dev": true
    },
    "@lezer/lr": {
      "version": "0.15.8",
      "resolved": "https://registry.npmjs.org/@lezer/lr/-/lr-0.15.8.tgz",
      "integrity": "sha512-bM6oE6VQZ6hIFxDNKk8bKPa14hqFrV07J/vHGOeiAbJReIaQXmkVb6xQu4MR+JBTLa5arGRyAAjJe1qaQt3Uvg==",
      "dev": true,
      "requires": {
        "@lezer/common": "^0.15.0"
      }
    },
    "@lmdb/lmdb-darwin-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-arm64/-/lmdb-darwin-arm64-2.5.2.tgz",
      "integrity": "sha512-+F8ioQIUN68B4UFiIBYu0QQvgb9FmlKw2ctQMSBfW2QBrZIxz9vD9jCGqTCPqZBRbPHAS/vG1zSXnKqnS2ch/A==",
      "dev": true,
      "optional": true
    },
    "@lmdb/lmdb-darwin-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-x64/-/lmdb-darwin-x64-2.5.2.tgz",
      "integrity": "sha512-KvPH56KRLLx4KSfKBx0m1r7GGGUMXm0jrKmNE7plbHlesZMuPJICtn07HYgQhj1LNsK7Yqwuvnqh1QxhJnF1EA==",
      "dev": true,
      "optional": true
    },
    "@lmdb/lmdb-linux-arm": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm/-/lmdb-linux-arm-2.5.2.tgz",
      "integrity": "sha512-5kQAP21hAkfW5Bl+e0P57dV4dGYnkNIpR7f/GAh6QHlgXx+vp/teVj4PGRZaKAvt0GX6++N6hF8NnGElLDuIDw==",
      "dev": true,
      "optional": true
    },
    "@lmdb/lmdb-linux-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm64/-/lmdb-linux-arm64-2.5.2.tgz",
      "integrity": "sha512-aLl89VHL/wjhievEOlPocoefUyWdvzVrcQ/MHQYZm2JfV1jUsrbr/ZfkPPUFvZBf+VSE+Q0clWs9l29PCX1hTQ==",
      "dev": true,
      "optional": true
    },
    "@lmdb/lmdb-linux-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-x64/-/lmdb-linux-x64-2.5.2.tgz",
      "integrity": "sha512-xUdUfwDJLGjOUPH3BuPBt0NlIrR7f/QHKgu3GZIXswMMIihAekj2i97oI0iWG5Bok/b+OBjHPfa8IU9velnP/Q==",
      "dev": true,
      "optional": true
    },
    "@lmdb/lmdb-win32-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-win32-x64/-/lmdb-win32-x64-2.5.2.tgz",
      "integrity": "sha512-zrBczSbXKxEyK2ijtbRdICDygRqWSRPpZMN5dD1T8VMEW5RIhIbwFWw2phDRXuBQdVDpSjalCIUMWMV2h3JaZA==",
      "dev": true,
      "optional": true
    },
    "@mischnic/json-sourcemap": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@mischnic/json-sourcemap/-/json-sourcemap-0.1.0.tgz",
      "integrity": "sha512-dQb3QnfNqmQNYA4nFSN/uLaByIic58gOXq4Y4XqLOWmOrw73KmJPt/HLyG0wvn1bnR6mBKs/Uwvkh+Hns1T0XA==",
      "dev": true,
      "requires": {
        "@lezer/common": "^0.15.7",
        "@lezer/lr": "^0.15.4",
        "json5": "^2.2.1"
      }
    },
    "@msgpackr-extract/msgpackr-extract-darwin-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-2.1.2.tgz",
      "integrity": "sha512-TyVLn3S/+ikMDsh0gbKv2YydKClN8HaJDDpONlaZR+LVJmsxLFUgA+O7zu59h9+f9gX1aj/ahw9wqa6rosmrYQ==",
      "dev": true,
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-darwin-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-2.1.2.tgz",
      "integrity": "sha512-YPXtcVkhmVNoMGlqp81ZHW4dMxK09msWgnxtsDpSiZwTzUBG2N+No2bsr7WMtBKCVJMSD6mbAl7YhKUqkp/Few==",
      "dev": true,
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-arm": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-2.1.2.tgz",
      "integrity": "sha512-42R4MAFeIeNn+L98qwxAt360bwzX2Kf0ZQkBBucJ2Ircza3asoY4CDbgiu9VWklq8gWJVSJSJBwDI+c/THiWkA==",
      "dev": true,
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-2.1.2.tgz",
      "integrity": "sha512-vHZ2JiOWF2+DN9lzltGbhtQNzDo8fKFGrf37UJrgqxU0yvtERrzUugnfnX1wmVfFhSsF8OxrfqiNOUc5hko1Zg==",
      "dev": true,
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-2.1.2.tgz",
      "integrity": "sha512-RjRoRxg7Q3kPAdUSC5EUUPlwfMkIVhmaRTIe+cqHbKrGZ4M6TyCA/b5qMaukQ/1CHWrqYY2FbKOAU8Hg0pQFzg==",
      "dev": true,
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-win32-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-2.1.2.tgz",
      "integrity": "sha512-rIZVR48zA8hGkHIK7ED6+ZiXsjRCcAVBJbm8o89OKAMTmEAQ2QvoOxoiu3w2isAaWwzgtQIOFIqHwvZDyLKCvw==",
      "dev": true,
      "optional": true
    },
    "@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "requires": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      }
    },
    "@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A=="
    },
    "@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "requires": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      }
    },
    "@parcel/bundler-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/bundler-default/-/bundler-default-2.7.0.tgz",
      "integrity": "sha512-PU5MtWWhc+dYI9x8mguYnm9yiG6TkI7niRpxgJgtqAyGHuEyNXVBQQ0X+qyOF4D9LdankBf8uNN18g31IET2Zg==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/cache": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/cache/-/cache-2.7.0.tgz",
      "integrity": "sha512-JlXNoZXcWzLKdDlfeF3dIj5Vtel5T9vtdBN72PJ+cjC4qNHk4Uwvc5sfOBELuibGN0bVu2bwY9nUgSwCiB1iIA==",
      "dev": true,
      "requires": {
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/utils": "2.7.0",
        "lmdb": "2.5.2"
      }
    },
    "@parcel/codeframe": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/codeframe/-/codeframe-2.7.0.tgz",
      "integrity": "sha512-UTKx0jejJmmO1dwTHSJuRgrO8N6PMlkxRT6sew8N6NC3Bgv6pu0EbO+RtlWt/jCvzcdLOPdIoTzj4MMZvgcMYg==",
      "dev": true,
      "requires": {
        "chalk": "^4.1.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "@parcel/compressor-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/compressor-raw/-/compressor-raw-2.7.0.tgz",
      "integrity": "sha512-SCXwnOOQT6EmpusBsYWNQ/RFri+2JnKuE0gMSf2dROl2xbererX45FYzeDplWALCKAdjMNDpFwU+FyMYoVZSCQ==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/config-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/config-default/-/config-default-2.7.0.tgz",
      "integrity": "sha512-ZzsLr97AYrz8c9k6qn3DlqPzifi3vbP7q3ynUrAFxmt0L4+K0H9N508ZkORYmCgaFjLIQ8Y3eWpwCJ0AewPNIg==",
      "dev": true,
      "requires": {
        "@parcel/bundler-default": "2.7.0",
        "@parcel/compressor-raw": "2.7.0",
        "@parcel/namer-default": "2.7.0",
        "@parcel/optimizer-css": "2.7.0",
        "@parcel/optimizer-htmlnano": "2.7.0",
        "@parcel/optimizer-image": "2.7.0",
        "@parcel/optimizer-svgo": "2.7.0",
        "@parcel/optimizer-terser": "2.7.0",
        "@parcel/packager-css": "2.7.0",
        "@parcel/packager-html": "2.7.0",
        "@parcel/packager-js": "2.7.0",
        "@parcel/packager-raw": "2.7.0",
        "@parcel/packager-svg": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/resolver-default": "2.7.0",
        "@parcel/runtime-browser-hmr": "2.7.0",
        "@parcel/runtime-js": "2.7.0",
        "@parcel/runtime-react-refresh": "2.7.0",
        "@parcel/runtime-service-worker": "2.7.0",
        "@parcel/transformer-babel": "2.7.0",
        "@parcel/transformer-css": "2.7.0",
        "@parcel/transformer-html": "2.7.0",
        "@parcel/transformer-image": "2.7.0",
        "@parcel/transformer-js": "2.7.0",
        "@parcel/transformer-json": "2.7.0",
        "@parcel/transformer-postcss": "2.7.0",
        "@parcel/transformer-posthtml": "2.7.0",
        "@parcel/transformer-raw": "2.7.0",
        "@parcel/transformer-react-refresh-wrap": "2.7.0",
        "@parcel/transformer-svg": "2.7.0"
      }
    },
    "@parcel/core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/core/-/core-2.7.0.tgz",
      "integrity": "sha512-7yKZUdh314Q/kU/9+27ZYTfcnXS6VYHuG+iiUlIohnvUUybxLqVJhdMU9Q+z2QcPka1IdJWz4K4Xx0y6/4goyg==",
      "dev": true,
      "requires": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/graph": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "abortcontroller-polyfill": "^1.1.9",
        "base-x": "^3.0.8",
        "browserslist": "^4.6.6",
        "clone": "^2.1.1",
        "dotenv": "^7.0.0",
        "dotenv-expand": "^5.1.0",
        "json5": "^2.2.0",
        "msgpackr": "^1.5.4",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/css": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css/-/css-1.12.2.tgz",
      "integrity": "sha512-Sa0PvZu5u877CupQA8IjEATqjJFynBfA7LxbcyutFe2LDCRSqB5Bm08jKFScyaz56qjZNIxZxXk2SApNkOvoAA==",
      "dev": true,
      "requires": {
        "@parcel/css-darwin-arm64": "1.12.2",
        "@parcel/css-darwin-x64": "1.12.2",
        "@parcel/css-linux-arm-gnueabihf": "1.12.2",
        "@parcel/css-linux-arm64-gnu": "1.12.2",
        "@parcel/css-linux-arm64-musl": "1.12.2",
        "@parcel/css-linux-x64-gnu": "1.12.2",
        "@parcel/css-linux-x64-musl": "1.12.2",
        "@parcel/css-win32-x64-msvc": "1.12.2",
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/css-darwin-arm64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-arm64/-/css-darwin-arm64-1.12.2.tgz",
      "integrity": "sha512-6VvsoYSltBiUh/uyfPzQ+I3DiTFN7tmRv6zm1LH98J7GGCDDhbYEtbQjjCs15ex6fVn1ORZK0JO+mMlsg1JwTA==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-darwin-x64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-x64/-/css-darwin-x64-1.12.2.tgz",
      "integrity": "sha512-3J0/LrDvt5vevOisnrE0q5mEcuiAY+K7OZwIv84SAnrbjlL5sshmIaaNzL869kb4thza+RClEj0mS5XTm1IUEw==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-linux-arm-gnueabihf": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm-gnueabihf/-/css-linux-arm-gnueabihf-1.12.2.tgz",
      "integrity": "sha512-OsX7I3dhBvnxEbAH++08RFe7yhjRp33ulzrCvJTMOP9YkxEEJ8qId3sNzJBHIVQzHyTlPTnBRHbSDhU3TFe/eQ==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-linux-arm64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-gnu/-/css-linux-arm64-gnu-1.12.2.tgz",
      "integrity": "sha512-R1Kqw+1Rsru9Q4+qvUEC6B8P21bpqhuF9rv8GmBmmnF1i2hMZ1JiY+uh/ej8IaRV0O3fAHeQGIyGBWx6qWDpcw==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-linux-arm64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-musl/-/css-linux-arm64-musl-1.12.2.tgz",
      "integrity": "sha512-nwixgM4SEgPUQata9aAiJW0A5Q9ms+xim1tXT1i+91kOei4Fu2Wr2OuofMk+mlhbgmGKCTcu4gzMPReGxUhuRA==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-linux-x64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-gnu/-/css-linux-x64-gnu-1.12.2.tgz",
      "integrity": "sha512-cJYVMHnQSGhDwQByyvjFZppjMBNlgxXl/R4cX5DwrQE0QZmK/42BYnMp92rvoprEG6LRyRoiGtCjyfYTPWajog==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-linux-x64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-musl/-/css-linux-x64-musl-1.12.2.tgz",
      "integrity": "sha512-u9zdO/d831/74Tf+TdPUfaIuB9v6FD4Xz8UdWUDOXgQqaOlnJ9fAsAM39EkoWlMxPPljY3f4ay6irSe1a4XgSA==",
      "dev": true,
      "optional": true
    },
    "@parcel/css-win32-x64-msvc": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-win32-x64-msvc/-/css-win32-x64-msvc-1.12.2.tgz",
      "integrity": "sha512-kCAKr3vKqvPUv9oXBG3pGZQz5il3sEk35dpmTXFa/7eDNKR5XyLpiJs8JwWJTFfuUqroymDSXA1bCcjvNEYcAg==",
      "dev": true,
      "optional": true
    },
    "@parcel/diagnostic": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/diagnostic/-/diagnostic-2.7.0.tgz",
      "integrity": "sha512-pdq/cTwVoL0n8yuDCRXFRSQHVWdmmIXPt3R3iT4KtYDYvOrMT2dLPT79IMqQkhYPANW8GuL15n/WxRngfRdkug==",
      "dev": true,
      "requires": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/events": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/events/-/events-2.7.0.tgz",
      "integrity": "sha512-kQDwMKgZ1U4M/G17qeDYF6bW5kybluN6ajYPc7mZcrWg+trEI/oXi81GMFaMX0BSUhwhbiN5+/Vb2wiG/Sn6ig==",
      "dev": true
    },
    "@parcel/fs": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-2.7.0.tgz",
      "integrity": "sha512-PU5fo4Hh8y03LZgemgVREttc0wyHQUNmsJCybxTB7EjJie2CqJRumo+DFppArlvdchLwJdc9em03yQV/GNWrEg==",
      "dev": true,
      "requires": {
        "@parcel/fs-search": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/watcher": "^2.0.0",
        "@parcel/workers": "2.7.0"
      }
    },
    "@parcel/fs-search": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs-search/-/fs-search-2.7.0.tgz",
      "integrity": "sha512-K1Hv25bnRpwQVA15RvcRuB8ZhfclnCHA8N8L6w7Ul1ncSJDxCIkIAc5hAubYNNYW3kWjCC2SOaEgFKnbvMllEQ==",
      "dev": true,
      "requires": {
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/graph": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/graph/-/graph-2.7.0.tgz",
      "integrity": "sha512-Q6E94GS6q45PtsZh+m+gvFRp/N1Qopxhu2sxjcWsGs5iBd6IWn2oYLWOH5iVzEjWuYpW2HkB08lH6J50O63uOA==",
      "dev": true,
      "requires": {
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/hash": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/hash/-/hash-2.7.0.tgz",
      "integrity": "sha512-k6bSKnIlPJMPU3yjQzfgfvF9zuJZGOAlJgzpL4BbWvdbE8BTdjzLcFn0Ujrtud94EgIkiXd22sC2HpCUWoHGdA==",
      "dev": true,
      "requires": {
        "detect-libc": "^1.0.3",
        "xxhash-wasm": "^0.4.2"
      }
    },
    "@parcel/logger": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-2.7.0.tgz",
      "integrity": "sha512-qjMY/bYo38+o+OiIrTRldU9CwL1E7J72t+xkTP8QIcUxLWz5LYR0YbynZUVulmBSfqsykjjxCy4a+8siVr+lPw==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0"
      }
    },
    "@parcel/markdown-ansi": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/markdown-ansi/-/markdown-ansi-2.7.0.tgz",
      "integrity": "sha512-ipOX0D6FVZFEXeb/z8MnTMq2RQEIuaILY90olVIuHEFLHHfOPEn+RK3u13HA1ChF5/9E3cMD79tu6x9JL9Kqag==",
      "dev": true,
      "requires": {
        "chalk": "^4.1.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "@parcel/namer-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/namer-default/-/namer-default-2.7.0.tgz",
      "integrity": "sha512-lIKMdsmi//7fepecNDYmJYzBlL91HifPsX03lJCdu1dC6q5fBs+gG0XjKKG7yPnSCw1qH/4m7drzt9+dRZYAHQ==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/node-resolver-core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/node-resolver-core/-/node-resolver-core-2.7.0.tgz",
      "integrity": "sha512-5UJQHalqMxdhJIs2hhqQzFfQpF7+NAowsRq064lYtiRvcD8wMr3OOQ9wd1iazGpFSl4JKdT7BwDU9/miDJmanQ==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/optimizer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-css/-/optimizer-css-2.7.0.tgz",
      "integrity": "sha512-IfnOMACqhcAclKyOW9X9JpsknB6OShk9OVvb8EvbDTKHJhQHNNmzE88OkSI/pS3ZVZP9Zj+nWcVHguV+kvDeiQ==",
      "dev": true,
      "requires": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/optimizer-htmlnano": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-htmlnano/-/optimizer-htmlnano-2.7.0.tgz",
      "integrity": "sha512-5QrGdWS5Hi4VXE3nQNrGqugmSXt68YIsWwKRAdarOxzyULSJS3gbCiQOXqIPRJobfZjnSIcdtkyxSiCUe1inIA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "htmlnano": "^2.0.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "svgo": "^2.4.0"
      }
    },
    "@parcel/optimizer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-image/-/optimizer-image-2.7.0.tgz",
      "integrity": "sha512-EnaXz5UjR67FUu0BEcqZTT9LsbB/iFAkkghCotbnbOuC5QQsloq6tw54TKU3y+R3qsjgUoMtGxPcGfVoXxZXYw==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/optimizer-svgo": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-svgo/-/optimizer-svgo-2.7.0.tgz",
      "integrity": "sha512-IO1JV4NpfP3V7FrhsqCcV8pDQIHraFi1/ZvEJyssITxjH49Im/txKlwMiQuZZryAPn8Xb8g395Muawuk6AK6sg==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "svgo": "^2.4.0"
      }
    },
    "@parcel/optimizer-terser": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-terser/-/optimizer-terser-2.7.0.tgz",
      "integrity": "sha512-07VZjIO8xsl2/WmS/qHI8lI/cpu47iS9eRpqwfZEEsdk1cfz50jhWkmFudHBxiHGMfcZ//1+DdaPg9RDBWZtZA==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "terser": "^5.2.0"
      }
    },
    "@parcel/package-manager": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/package-manager/-/package-manager-2.7.0.tgz",
      "integrity": "sha512-wmfSX1mRrTi8MeA4KrnPk/x7zGUsILCQmTo6lA4gygzAxDbM1pGuyFN8/Kt0y0SFO2lbljARtD/4an5qdotH+Q==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/packager-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-css/-/packager-css-2.7.0.tgz",
      "integrity": "sha512-44nzZwu+ssGuiFmYM6cf/Y4iChiUZ4DUzzpegnGlhXtKJKe4NHntxThJynuRZWKN2AAf48avApDpimg2jW0KDw==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/packager-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-html/-/packager-html-2.7.0.tgz",
      "integrity": "sha512-Zgqd7sdcY/UnR370GR0q2ilmEohUDXsO8A1F28QCJzIsR1iCB6KRUT74+pawfQ1IhXZLaaFLLYe0UWcfm0JeXg==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5"
      }
    },
    "@parcel/packager-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-js/-/packager-js-2.7.0.tgz",
      "integrity": "sha512-wTRdM81PgRVDzWGXdWmqLwguWnTYWzhEDdjXpW2n8uMOu/CjHhMtogk65aaYk3GOnq6OBL/NsrmBiV/zKPj1vA==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "globals": "^13.2.0",
        "nullthrows": "^1.1.1"
      },
      "dependencies": {
        "globals": {
          "version": "13.17.0",
          "resolved": "https://registry.npmjs.org/globals/-/globals-13.17.0.tgz",
          "integrity": "sha512-1C+6nQRb1GwGMKm2dH/E7enFAMxGTmGI7/dEdhy/DNelv85w9B72t3uc5frtMNXIbzrarJJ/lTCjcaZwbLJmyw==",
          "dev": true,
          "requires": {
            "type-fest": "^0.20.2"
          }
        },
        "type-fest": {
          "version": "0.20.2",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
          "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
          "dev": true
        }
      }
    },
    "@parcel/packager-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-raw/-/packager-raw-2.7.0.tgz",
      "integrity": "sha512-jg2Zp8dI5VpIQlaeahXDCfrPN9m/DKht1NkR9P2CylMAwqCcc1Xc1RRiF0wfwcPZpPMpq1265n+4qnB7rjGBlA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/packager-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-svg/-/packager-svg-2.7.0.tgz",
      "integrity": "sha512-EmJg3HpD6/xxKBjir/CdCKJZwI24iVfBuxRS9LUp3xHAIebOzVh1z6IN+i2Di5+NyRwfOFaLliL4uMa1zwbyCA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "posthtml": "^0.16.4"
      }
    },
    "@parcel/plugin": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/plugin/-/plugin-2.7.0.tgz",
      "integrity": "sha512-qqgx+nnMn6/0lRc4lKbLGmhNtBiT93S2gFNB4Eb4Pfz/SxVYoW+fmml+KdfOSiZffWOAH5L6NwhyD7N8aSikzw==",
      "dev": true,
      "requires": {
        "@parcel/types": "2.7.0"
      }
    },
    "@parcel/reporter-cli": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-cli/-/reporter-cli-2.7.0.tgz",
      "integrity": "sha512-80gEODg8cnAmnxGVuaSVDo8JJ54P9AA2bHwSs1cIkHWlJ3BjDQb83H31bBHncJ5Kn5kQ/j+7WjlqHpTCiOR9PA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "term-size": "^2.2.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "@parcel/reporter-dev-server": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-dev-server/-/reporter-dev-server-2.7.0.tgz",
      "integrity": "sha512-ySuou5addK8fGue8aXzo536BaEjMujDrEc1xkp4TasInXHVcA98b+SYX5NAZTGob5CxKvZQ5ylhg77zW30B+iA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      }
    },
    "@parcel/resolver-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/resolver-default/-/resolver-default-2.7.0.tgz",
      "integrity": "sha512-v8TvWsbLK7/q7n4gv6OrYNbW18xUx4zKbVMGZb1u4yMhzEH4HFr1D9OeoTq3jk+ximAigds8B6triQbL5exF7A==",
      "dev": true,
      "requires": {
        "@parcel/node-resolver-core": "2.7.0",
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/runtime-browser-hmr": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-browser-hmr/-/runtime-browser-hmr-2.7.0.tgz",
      "integrity": "sha512-PLbMLdclQeYsi2LkilZVGFV1n3y55G1jaBvby4ekedUZjMw3SWdMY2tDxgSDdFWfLCnYHJXdGUQSzGGi1kPzjA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      }
    },
    "@parcel/runtime-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-js/-/runtime-js-2.7.0.tgz",
      "integrity": "sha512-9/YUZTBNrSN2H6rbz/o1EOM0O7I3ZR/x9IDzxjJBD6Mi+0uCgCD02aedare/SNr1qgnbZZWmhpOzC+YgREcfLA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/runtime-react-refresh": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-react-refresh/-/runtime-react-refresh-2.7.0.tgz",
      "integrity": "sha512-vDKO0rWqRzEpmvoZ4kkYUiSsTxT5NnH904BFPFxKI0wJCl6yEmPuEifmATo73OuYhP6jIP3Qfl1R4TtiDFPJ1Q==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-error-overlay": "6.0.9",
        "react-refresh": "^0.9.0"
      }
    },
    "@parcel/runtime-service-worker": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-service-worker/-/runtime-service-worker-2.7.0.tgz",
      "integrity": "sha512-uD2pAV0yV6+e7JaWH4KVPbG+zRCrxr/OACyS9tIh+Q/R1vRmh8zGM3yhdrcoiZ7tFOnM72vd6xY11eTrUsSVig==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/source-map": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@parcel/source-map/-/source-map-2.1.0.tgz",
      "integrity": "sha512-E7UOEIof2o89LrKk1agSLmwakjigmEdDp1ZaEdsLVEvq63R/bul4Ij5CT+0ZDcijGpl5tnTbQADY9EyYGtjYgQ==",
      "dev": true,
      "requires": {
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/transformer-babel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-babel/-/transformer-babel-2.7.0.tgz",
      "integrity": "sha512-7iklDXXnKH1530+QbI+e4kIJ+Q1puA1ulRS10db3aUJMj5GnvXGDFwhSZ7+T1ps66QHO7cVO29VlbqiRDarH1Q==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "json5": "^2.2.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/transformer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-css/-/transformer-css-2.7.0.tgz",
      "integrity": "sha512-J4EpWK9spQpXyNCmKK8Xnane0xW/1B/EAmfp7Fiv7g+5yUjY4ODf4KUugvE+Eb2gekPkhOKNHermO2KrX0/PFA==",
      "dev": true,
      "requires": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/transformer-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-html/-/transformer-html-2.7.0.tgz",
      "integrity": "sha512-wYJl5rn81W+Rlk9oQwDJcjoVsWVDKyeri84FzmlGXOsg0EYgnqOiG+3MDM8GeZjfuGe5fuoum4eqZeS0WdUHXw==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/transformer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-image/-/transformer-image-2.7.0.tgz",
      "integrity": "sha512-mhi9/R5/ULhCkL2COVIKhNFoLDiZwQgprdaTJr5fnODggVxEX5o7ebFV6KNLMTEkwZUJWoB1hL0ziI0++DtoFA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/transformer-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-js/-/transformer-js-2.7.0.tgz",
      "integrity": "sha512-mzerR+D4rDomUSIk5RSTa2w+DXBdXUeQrpDO74WCDdpDi1lIl8ppFpqtmU7O6y6p8QsgkmS9b0g/vhcry6CJTA==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "@swc/helpers": "^0.4.2",
        "browserslist": "^4.6.6",
        "detect-libc": "^1.0.3",
        "nullthrows": "^1.1.1",
        "regenerator-runtime": "^0.13.7",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/transformer-json": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-json/-/transformer-json-2.7.0.tgz",
      "integrity": "sha512-RQjuxBpYOch+kr4a0zi77KJtOLTPYRM7iq4NN80zKnA0r0dwDUCxZBtaj2l0O0o3R4MMJnm+ncP+cB7XR7dZYA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "json5": "^2.2.0"
      }
    },
    "@parcel/transformer-postcss": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-postcss/-/transformer-postcss-2.7.0.tgz",
      "integrity": "sha512-b6RskXBWf0MjpC9qjR2dQ1ZdRnlOiKYseG5CEovWCqM218RtdydFKz7jS+5Gxkb6qBtOG7zGPONXdPe+gTILcA==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "clone": "^2.1.1",
        "nullthrows": "^1.1.1",
        "postcss-value-parser": "^4.2.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/transformer-posthtml": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-posthtml/-/transformer-posthtml-2.7.0.tgz",
      "integrity": "sha512-cP8YOiSynWJ1ycmBlhnnHeuQb2cwmklZ+BNyLUktj5p78kDy2de7VjX+dRNRHoW4H9OgEcSF4UEfDVVz5RYIhw==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/transformer-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-raw/-/transformer-raw-2.7.0.tgz",
      "integrity": "sha512-sDnItWCFSDez0izK1i5cgv+kXzZTbcJh4rNpVIgmE1kBLvAz608sqgcCkavb2wVJIvLesxYM+5G4p1CwkDlZ1g==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/transformer-react-refresh-wrap": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-react-refresh-wrap/-/transformer-react-refresh-wrap-2.7.0.tgz",
      "integrity": "sha512-1vRmIJzyBA1nIiXTAU6tZExq2FvJj/2F0ft6KDw8GYPv0KjmdiPo/PmaZ7JeSVOM6SdXQIQCbTmp1vkMP7DtkA==",
      "dev": true,
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-refresh": "^0.9.0"
      }
    },
    "@parcel/transformer-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-svg/-/transformer-svg-2.7.0.tgz",
      "integrity": "sha512-ioER37zceuuE+K6ZrnjCyMUWEnv+63hIAFResc1OXxRhyt+7kzMz9ZqK0Mt6QMLwl1dxhkLmrU41n9IxzKZuSQ==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@parcel/types": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/types/-/types-2.7.0.tgz",
      "integrity": "sha512-+dhXVUnseTCpJvBTGMp0V6X13z6O/A/+CUtwEpMGZ8XSmZ4Gk44GvaTiBOp0bJpWG4fvCKp+UmC8PYbrDiiziw==",
      "dev": true,
      "requires": {
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/workers": "2.7.0",
        "utility-types": "^3.10.0"
      }
    },
    "@parcel/utils": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-2.7.0.tgz",
      "integrity": "sha512-jNZ5bIGg1r1RDRKi562o4kuVwnz+XJ2Ie3b0Zwrqwvgfj6AbRFIKzDd+h85dWWmcDYzKUbHp11u6VJl1u8Vapg==",
      "dev": true,
      "requires": {
        "@parcel/codeframe": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/markdown-ansi": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "chalk": "^4.1.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "@parcel/watcher": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.0.5.tgz",
      "integrity": "sha512-x0hUbjv891omnkcHD7ZOhiyyUqUUR6MNjq89JhEI3BxppeKWAm6NPQsqqRrAkCJBogdT/o/My21sXtTI9rJIsw==",
      "dev": true,
      "requires": {
        "node-addon-api": "^3.2.1",
        "node-gyp-build": "^4.3.0"
      }
    },
    "@parcel/workers": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-2.7.0.tgz",
      "integrity": "sha512-99VfaOX+89+RaoTSyH9ZQtkMBFZBFMvJmVJ/GeJT6QCd2wtKBStTHlaSnQOkLD/iRjJCNwV2xpZmm8YkTwV+hg==",
      "dev": true,
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chrome-trace-event": "^1.0.2",
        "nullthrows": "^1.1.1"
      }
    },
    "@swc/helpers": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.4.6.tgz",
      "integrity": "sha512-jUMFa2/gFJOBVBnd3ZZHKRNsgqD0OQQhJMlOFR5B5stMbrUlTQoI7rXORtIGb+M/BZAU/cuI68nho4De3gXzWA==",
      "dev": true,
      "requires": {
        "tslib": "^2.4.0"
      }
    },
    "@tailwindcss/typography": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.4.tgz",
      "integrity": "sha512-QEdg40EmGvE7kKoDei8zr5sf4D1pIayHj4R31bH3lX8x2BtTiR+jNejYPOkhbmy3DXgkMF9jC8xqNiGFAuL9Sg==",
      "dev": true,
      "requires": {
        "lodash.castarray": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.merge": "^4.6.2"
      }
    },
    "@trysound/sax": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@trysound/sax/-/sax-0.2.0.tgz",
      "integrity": "sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA==",
      "dev": true
    },
    "@tsconfig/node10": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.9.tgz",
      "integrity": "sha512-jNsYVVxU8v5g43Erja32laIDHXeoNvFEpX33OK4d6hljo3jDhCBDhx5dhCCTMWUojscpAagGiRkBKxpdl9fxqA==",
      "devOptional": true
    },
    "@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
      "devOptional": true
    },
    "@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
      "devOptional": true
    },
    "@tsconfig/node16": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.3.tgz",
      "integrity": "sha512-yOlFc+7UtL/89t2ZhjPvvB/DeAr3r+Dq58IgzsFkOAvVC6NMJXmCGjbptdXdR9qsX7pKcTL+s87FtYREi2dEEQ==",
      "devOptional": true
    },
    "@types/node": {
      "version": "18.7.4",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.4.tgz",
      "integrity": "sha512-RzRcw8c0B8LzryWOR4Wj7YOTFXvdYKwvrb6xQQyuDfnlTxwYXGCV5RZ/TEbq5L5kn+w3rliHAUyRcG1RtbmTFg==",
      "devOptional": true
    },
    "@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA==",
      "dev": true
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "abortcontroller-polyfill": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.3.tgz",
      "integrity": "sha512-zetDJxd89y3X99Kvo4qFx8GKlt6GsvN3UcRZHwU6iFA/0KiOmhkTVhe8oRoTBiTVPZu09x3vCra47+w8Yz1+2Q==",
      "dev": true
    },
    "acorn": {
      "version": "8.8.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
      "devOptional": true
    },
    "acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "requires": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      },
      "dependencies": {
        "acorn": {
          "version": "7.4.1",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
          "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A=="
        },
        "acorn-walk": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
          "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA=="
        }
      }
    },
    "acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==",
      "devOptional": true
    },
    "aggregate-error": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-4.0.1.tgz",
      "integrity": "sha512-0poP0T7el6Vq3rstR8Mn4V/IQrpBLO6POkUSrN7RhyY+GF/InCFShQzsQ39T25gkHhLgSLByyAz+Kjb+c2L98w==",
      "dev": true,
      "requires": {
        "clean-stack": "^4.0.0",
        "indent-string": "^5.0.0"
      }
    },
    "ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "dev": true
    },
    "ansi-styles": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.1.0.tgz",
      "integrity": "sha512-VbqNsoz55SYGczauuup0MFUyXNQviSpFTj1RQtFzmQLk18qbVSpTFFGMT293rmDaQuKCT6InmbuEyUne4mTuxQ==",
      "dev": true
    },
    "anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "devOptional": true
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "array-find-index": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
      "integrity": "sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==",
      "dev": true
    },
    "array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true
    },
    "arrgv": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/arrgv/-/arrgv-1.0.2.tgz",
      "integrity": "sha512-a4eg4yhp7mmruZDQFqVMlxNRFGi/i1r87pt8SDHy0/I8PqSXoUTlWZRdAZo0VXgvEARcujbtTk8kiZRi1uDGRw==",
      "dev": true
    },
    "arrify": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-3.0.0.tgz",
      "integrity": "sha512-tLkvA81vQG/XqE2mjDkGQHoOINtMHtysSnemrmoGe6PydDPMRbVugqyk4A6V/WDWEfm3l+0d8anA9r8cv/5Jaw==",
      "dev": true
    },
    "ava": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/ava/-/ava-4.3.1.tgz",
      "integrity": "sha512-zdSp9QxRTmN5hJeGmg+ZjUKL5yHFLMcP/0KBla8GH25XD8Xm7Uc34CDFlwqGL6JXtjNbVkJ0Zw+DqcTf4ggCCA==",
      "dev": true,
      "requires": {
        "acorn": "^8.7.1",
        "acorn-walk": "^8.2.0",
        "ansi-styles": "^6.1.0",
        "arrgv": "^1.0.2",
        "arrify": "^3.0.0",
        "callsites": "^4.0.0",
        "cbor": "^8.1.0",
        "chalk": "^5.0.1",
        "chokidar": "^3.5.3",
        "chunkd": "^2.0.1",
        "ci-info": "^3.3.1",
        "ci-parallel-vars": "^1.0.1",
        "clean-yaml-object": "^0.1.0",
        "cli-truncate": "^3.1.0",
        "code-excerpt": "^4.0.0",
        "common-path-prefix": "^3.0.0",
        "concordance": "^5.0.4",
        "currently-unhandled": "^0.4.1",
        "debug": "^4.3.4",
        "del": "^6.1.1",
        "emittery": "^0.11.0",
        "figures": "^4.0.1",
        "globby": "^13.1.1",
        "ignore-by-default": "^2.1.0",
        "indent-string": "^5.0.0",
        "is-error": "^2.2.2",
        "is-plain-object": "^5.0.0",
        "is-promise": "^4.0.0",
        "matcher": "^5.0.0",
        "mem": "^9.0.2",
        "ms": "^2.1.3",
        "p-event": "^5.0.1",
        "p-map": "^5.4.0",
        "picomatch": "^2.3.1",
        "pkg-conf": "^4.0.0",
        "plur": "^5.1.0",
        "pretty-ms": "^7.0.1",
        "resolve-cwd": "^3.0.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.5",
        "strip-ansi": "^7.0.1",
        "supertap": "^3.0.1",
        "temp-dir": "^2.0.0",
        "write-file-atomic": "^4.0.1",
        "yargs": "^17.5.1"
      },
      "dependencies": {
        "chalk": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.0.1.tgz",
          "integrity": "sha512-Fo07WOYGqMfCWHOzSXOt2CxDbC6skS/jO9ynEcmpANMoPrD+W1r1K6Vx7iNm+AQmETU1Xr2t+n8nzkV9t6xh3w==",
          "dev": true
        }
      }
    },
    "babel-plugin-dynamic-import-node": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
      "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
      "dev": true,
      "requires": {
        "object.assign": "^4.1.0"
      }
    },
    "babel-plugin-polyfill-corejs2": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.2.tgz",
      "integrity": "sha512-LPnodUl3lS0/4wN3Rb+m+UK8s7lj2jcLRrjho4gLw+OJs+I4bvGXshINesY5xx/apM+biTnQ9reDI8yj+0M5+Q==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.17.7",
        "@babel/helper-define-polyfill-provider": "^0.3.2",
        "semver": "^6.1.1"
      }
    },
    "babel-plugin-polyfill-corejs3": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.5.3.tgz",
      "integrity": "sha512-zKsXDh0XjnrUEW0mxIHLfjBfnXSMr5Q/goMe/fxpQnLm07mcOZiIZHBNWCMx60HmdvjxfXcalac0tfFg0wqxyw==",
      "dev": true,
      "requires": {
        "@babel/helper-define-polyfill-provider": "^0.3.2",
        "core-js-compat": "^3.21.0"
      }
    },
    "babel-plugin-polyfill-regenerator": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.0.tgz",
      "integrity": "sha512-RW1cnryiADFeHmfLS+WW/G431p1PsW5qdRdz0SDRi7TKcUgc7Oh/uXkT7MZ/+tGsT1BkczEAmD5XjUyJ5SWDTw==",
      "dev": true,
      "requires": {
        "@babel/helper-define-polyfill-provider": "^0.3.2"
      }
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA=="
    },
    "blueimp-md5": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/blueimp-md5/-/blueimp-md5-2.19.0.tgz",
      "integrity": "sha512-DRQrD6gJyy8FbiE4s+bDoXS9hiW3Vbx5uCdwvcCf3zLHL+Iv7LtGHLpr+GZV8rHG8tK766FGYBwRbu8pELTt+w==",
      "dev": true
    },
    "bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
    },
    "boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
      "dev": true
    },
    "borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "requires": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "browserslist": {
      "version": "4.21.3",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.3.tgz",
      "integrity": "sha512-898rgRXLAyRkM1GryrrBHGkqA5hlpkV5MhtZwg9QXeiyLUYs2k00Un05aX5l2/yJIOObYKOpS2JNo8nJDE7fWQ==",
      "dev": true,
      "requires": {
        "caniuse-lite": "^1.0.30001370",
        "electron-to-chromium": "^1.4.202",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.5"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      }
    },
    "callsites": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-4.0.0.tgz",
      "integrity": "sha512-y3jRROutgpKdz5vzEhWM34TidDU8vkJppF8dszITeb1PQmSqV3DTxyV8G/lyO/DNvtE1YTedehmw9MPZsCBHxQ==",
      "dev": true
    },
    "camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA=="
    },
    "caniuse-lite": {
      "version": "1.0.30001376",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001376.tgz",
      "integrity": "sha512-I27WhtOQ3X3v3it9gNs/oTpoE5KpwmqKR5oKPA8M0G7uMXh9Ty81Q904HpKUrM30ei7zfcL5jE7AXefgbOfMig==",
      "dev": true
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg=="
    },
    "cbor": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/cbor/-/cbor-8.1.0.tgz",
      "integrity": "sha512-DwGjNW9omn6EwP70aXsn7FQJx5kO12tX0bZkaTjzdVFM6/7nhA4t0EENocKGx6D2Bch9PE2KzCUf5SceBdeijg==",
      "dev": true,
      "requires": {
        "nofilter": "^3.1.0"
      }
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "dev": true,
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
          "dev": true
        }
      }
    },
    "chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "requires": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "fsevents": "~2.3.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      }
    },
    "chrome-trace-event": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
      "integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==",
      "dev": true
    },
    "chunkd": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/chunkd/-/chunkd-2.0.1.tgz",
      "integrity": "sha512-7d58XsFmOq0j6el67Ug9mHf9ELUXsQXYJBkyxhH/k+6Ke0qXRnv0kbemx+Twc6fRJ07C49lcbdgm9FL1Ei/6SQ==",
      "dev": true
    },
    "ci-info": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.3.2.tgz",
      "integrity": "sha512-xmDt/QIAdeZ9+nfdPsaBCpMvHNLFiLdjj59qjqn+6iPe6YmHGQ35sBnQ8uslRBXFmXkiZQOJRjvQeoGppoTjjg==",
      "dev": true
    },
    "ci-parallel-vars": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ci-parallel-vars/-/ci-parallel-vars-1.0.1.tgz",
      "integrity": "sha512-uvzpYrpmidaoxvIQHM+rKSrigjOe9feHYbw4uOI2gdfe1C3xIlxO+kVXq83WQWNniTf8bAxVpy+cQeFQsMERKg==",
      "dev": true
    },
    "clean-stack": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-4.2.0.tgz",
      "integrity": "sha512-LYv6XPxoyODi36Dp976riBtSY27VmFo+MKqEU9QCCWyTrdEPDog+RWA7xQWHi6Vbp61j5c4cdzzX1NidnwtUWg==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "5.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
          "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
          "dev": true
        }
      }
    },
    "clean-yaml-object": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz",
      "integrity": "sha512-3yONmlN9CSAkzNwnRCiJQ7Q2xK5mWuEfL3PuTZcAUzhObbXsfsnMptJzXwz93nc5zn9V9TwCVMmV7w4xsm43dw==",
      "dev": true
    },
    "cli-truncate": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-truncate/-/cli-truncate-3.1.0.tgz",
      "integrity": "sha512-wfOBkjXteqSnI59oPcJkcPl/ZmwvMMOj340qUIY1SKZCv0B9Cf4D4fAucRkIKQmsIuYK3x1rrgU7MeGRruiuiA==",
      "dev": true,
      "requires": {
        "slice-ansi": "^5.0.0",
        "string-width": "^5.0.0"
      }
    },
    "cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dev": true,
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
          "dev": true
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "dev": true
    },
    "code-excerpt": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/code-excerpt/-/code-excerpt-4.0.0.tgz",
      "integrity": "sha512-xxodCmBen3iy2i0WtAK8FlFNrRzjUqjRsMfho58xT/wvZU1YTM3fCnRjcy1gJPMepaRlgm/0e6w8SpWHpn3/cA==",
      "dev": true,
      "requires": {
        "convert-to-spaces": "^2.0.1"
      }
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true
    },
    "common-path-prefix": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-3.0.0.tgz",
      "integrity": "sha512-QE33hToZseCH3jS0qN96O/bSh3kaw/h+Tq7ngyY9eWDUnTlTNUyqfqvCXioLe5Na5jFsL78ra/wuBU4iuEgd4w==",
      "dev": true
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "concordance": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/concordance/-/concordance-5.0.4.tgz",
      "integrity": "sha512-OAcsnTEYu1ARJqWVGwf4zh4JDfHZEaSNlNccFmt8YjB2l/n19/PF2viLINHc57vO4FKIAFl2FWASIGZZWZ2Kxw==",
      "dev": true,
      "requires": {
        "date-time": "^3.1.0",
        "esutils": "^2.0.3",
        "fast-diff": "^1.2.0",
        "js-string-escape": "^1.0.1",
        "lodash": "^4.17.15",
        "md5-hex": "^3.0.1",
        "semver": "^7.3.2",
        "well-known-symbols": "^2.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.3.7",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
          "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
          "dev": true,
          "requires": {
            "lru-cache": "^6.0.0"
          }
        }
      }
    },
    "convert-source-map": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
      "integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.1.1"
      }
    },
    "convert-to-spaces": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/convert-to-spaces/-/convert-to-spaces-2.0.1.tgz",
      "integrity": "sha512-rcQ1bsQO9799wq24uE5AM2tAILy4gXGIK/njFWcVQkGNZ96edlpY+A7bjwvzjYvLDyzmG1MmMLZhpcsb+klNMQ==",
      "dev": true
    },
    "core-js-compat": {
      "version": "3.24.1",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.24.1.tgz",
      "integrity": "sha512-XhdNAGeRnTpp8xbD+sR/HFDK9CbeeeqXT6TuofXh3urqEevzkWmLRgrVoykodsw8okqo2pu1BOmuCKrHx63zdw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.21.3",
        "semver": "7.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
          "dev": true
        }
      }
    },
    "cosmiconfig": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.1.tgz",
      "integrity": "sha512-a1YWNUV2HwGimB7dU2s1wUMurNKjpx60HxBB6xUM8Re+2s1g1IIfJvFR0/iCF+XHdE0GMTKTuLR32UQff4TEyQ==",
      "dev": true,
      "requires": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.2.1",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.10.0"
      }
    },
    "create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
      "devOptional": true
    },
    "cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dev": true,
      "requires": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      }
    },
    "css-select": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-4.3.0.tgz",
      "integrity": "sha512-wPpOYtnsVontu2mODhA19JrqWxNsfdatRKd64kmpRbQgh1KtItko5sTnEpPdpSaJszTOhEMlF/RPz28qj4HqhQ==",
      "dev": true,
      "requires": {
        "boolbase": "^1.0.0",
        "css-what": "^6.0.1",
        "domhandler": "^4.3.1",
        "domutils": "^2.8.0",
        "nth-check": "^2.0.1"
      }
    },
    "css-tree": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
      "integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
      "dev": true,
      "requires": {
        "mdn-data": "2.0.14",
        "source-map": "^0.6.1"
      }
    },
    "css-what": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz",
      "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==",
      "dev": true
    },
    "cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg=="
    },
    "csso": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.2.0.tgz",
      "integrity": "sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==",
      "dev": true,
      "requires": {
        "css-tree": "^1.1.2"
      }
    },
    "currently-unhandled": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
      "integrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==",
      "dev": true,
      "requires": {
        "array-find-index": "^1.0.1"
      }
    },
    "date-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/date-time/-/date-time-3.1.0.tgz",
      "integrity": "sha512-uqCUKXE5q1PNBXjPqvwhwJf9SwMoAHBgWJ6DcrnS5o+W2JOiIILl0JEdVD8SGujrNS02GGxgwAg2PN2zONgtjg==",
      "dev": true,
      "requires": {
        "time-zone": "^1.0.0"
      }
    },
    "debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dev": true,
      "requires": {
        "ms": "2.1.2"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "define-properties": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.4.tgz",
      "integrity": "sha512-uckOqKcfaVvtBdsVkdPv3XjveQJsNQqmhXgRi8uhvWWuPYZCNlzT8qAyblUgNoXdHdjMTzAqeGjAoli8f+bzPA==",
      "dev": true,
      "requires": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      }
    },
    "defined": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
      "integrity": "sha512-Y2caI5+ZwS5c3RiNDJ6u53VhQHv+hHKwhkI1iHvceKUHw9Df6EK2zRLfjejRgMuCuxK7PfSWIMwWecceVvThjQ=="
    },
    "del": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-6.1.1.tgz",
      "integrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg==",
      "dev": true,
      "requires": {
        "globby": "^11.0.1",
        "graceful-fs": "^4.2.4",
        "is-glob": "^4.0.1",
        "is-path-cwd": "^2.2.0",
        "is-path-inside": "^3.0.2",
        "p-map": "^4.0.0",
        "rimraf": "^3.0.2",
        "slash": "^3.0.0"
      },
      "dependencies": {
        "aggregate-error": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
          "integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
          "dev": true,
          "requires": {
            "clean-stack": "^2.0.0",
            "indent-string": "^4.0.0"
          }
        },
        "clean-stack": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
          "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
          "dev": true
        },
        "globby": {
          "version": "11.1.0",
          "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
          "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
          "dev": true,
          "requires": {
            "array-union": "^2.1.0",
            "dir-glob": "^3.0.1",
            "fast-glob": "^3.2.9",
            "ignore": "^5.2.0",
            "merge2": "^1.4.1",
            "slash": "^3.0.0"
          }
        },
        "indent-string": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
          "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
          "dev": true
        },
        "p-map": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
          "integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
          "dev": true,
          "requires": {
            "aggregate-error": "^3.0.0"
          }
        }
      }
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "dev": true
    },
    "detective": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/detective/-/detective-5.2.1.tgz",
      "integrity": "sha512-v9XE1zRnz1wRtgurGu0Bs8uHKFSTdteYZNbIPFVhUZ39L/S79ppMpdmVOZAnoz1jfEFodc48n6MX483Xo3t1yw==",
      "requires": {
        "acorn-node": "^1.8.2",
        "defined": "^1.0.0",
        "minimist": "^1.2.6"
      }
    },
    "didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw=="
    },
    "diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "devOptional": true
    },
    "dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "requires": {
        "path-type": "^4.0.0"
      }
    },
    "dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA=="
    },
    "dom-serializer": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
      "integrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag==",
      "dev": true,
      "requires": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.0",
        "entities": "^2.0.0"
      },
      "dependencies": {
        "entities": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
          "integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==",
          "dev": true
        }
      }
    },
    "domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "dev": true
    },
    "domhandler": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-4.3.1.tgz",
      "integrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ==",
      "dev": true,
      "requires": {
        "domelementtype": "^2.2.0"
      }
    },
    "domutils": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-2.8.0.tgz",
      "integrity": "sha512-w96Cjofp72M5IIhpjgobBimYEfoPjx1Vx0BSX9P30WBdZW2WIKU0T1Bd0kz2eNZ9ikjKgHbEyKx8BB6H1L3h3A==",
      "dev": true,
      "requires": {
        "dom-serializer": "^1.0.1",
        "domelementtype": "^2.2.0",
        "domhandler": "^4.2.0"
      }
    },
    "dotenv": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-7.0.0.tgz",
      "integrity": "sha512-M3NhsLbV1i6HuGzBUH8vXrtxOk+tWmzWKDMbAVSUp3Zsjm7ywFeuwrUXhmhQyRK1q5B5GGy7hcXPbj3bnfZg2g==",
      "dev": true
    },
    "dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==",
      "dev": true
    },
    "eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true
    },
    "electron-to-chromium": {
      "version": "1.4.219",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.219.tgz",
      "integrity": "sha512-zoQJsXOUw0ZA0YxbjkmzBumAJRtr6je5JySuL/bAoFs0DuLiLJ+5FzRF7/ZayihxR2QcewlRZVm5QZdUhwjOgA==",
      "dev": true
    },
    "emittery": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.11.0.tgz",
      "integrity": "sha512-S/7tzL6v5i+4iJd627Nhv9cLFIo5weAIlGccqJFpnBoDB8U1TF2k5tez4J/QNuxyyhWuFqHg1L84Kd3m7iXg6g==",
      "dev": true
    },
    "emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true
    },
    "entities": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-3.0.1.tgz",
      "integrity": "sha512-WiyBqoomrwMdFG1e0kqvASYfnlb0lp8M5o5Fw2OFq1hNZxxcNk8Ik0Xm7LxzBhuidnZB/UtBqVCgUz3kBOP51Q==",
      "dev": true
    },
    "env-cmd": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/env-cmd/-/env-cmd-10.1.0.tgz",
      "integrity": "sha512-mMdWTT9XKN7yNth/6N6g2GuKuJTsKMDHlQFUDacb/heQRRWOTIZ42t1rMHnQu4jYxU1ajdTeJM+9eEETlqToMA==",
      "dev": true,
      "requires": {
        "commander": "^4.0.0",
        "cross-spawn": "^7.0.0"
      }
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "dev": true
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "fast-diff": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.2.0.tgz",
      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==",
      "dev": true
    },
    "fast-glob": {
      "version": "3.2.11",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.11.tgz",
      "integrity": "sha512-xrO3+1bxSo3ZVHAnqzyuewYT6aMFHRAd4Kcs92MAonjwQZLsK9d0SF1IyQ3k5PoirxTW0Oe/RqFgMQ6TcNE5Ew==",
      "requires": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      }
    },
    "fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "requires": {
        "reusify": "^1.0.4"
      }
    },
    "figures": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/figures/-/figures-4.0.1.tgz",
      "integrity": "sha512-rElJwkA/xS04Vfg+CaZodpso7VqBknOYbzi6I76hI4X80RUjkSxO2oAyPmGbuXUppywjqndOrQDl817hDnI++w==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
          "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
          "dev": true
        }
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "find-up": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz",
      "integrity": "sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==",
      "dev": true,
      "requires": {
        "locate-path": "^7.1.0",
        "path-exists": "^5.0.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true
    },
    "get-intrinsic": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.2.tgz",
      "integrity": "sha512-Jfm3OyCxHh9DJyc28qGk+JmfkpO41A4XkneDSujN9MDXrm4oDKdHvndhZ2dN94+ERNfkYJWDclW6k2L/ZGHjXA==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      }
    },
    "get-port": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-4.2.0.tgz",
      "integrity": "sha512-/b3jarXkH8KJoOMQc3uVGHASwGLPq3gSFJ7tgJm2diza+bydJPTGOibin2steecKeOylE8oY2JERlVWkAJO6yw==",
      "dev": true
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true
    },
    "globby": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/globby/-/globby-13.1.2.tgz",
      "integrity": "sha512-LKSDZXToac40u8Q1PQtZihbNdTYSNMuWe+K5l+oa6KgDzSvVrHXlJy40hUP522RjAIoNLJYBJi7ow+rbFpIhHQ==",
      "dev": true,
      "requires": {
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.11",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^4.0.0"
      },
      "dependencies": {
        "slash": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-4.0.0.tgz",
          "integrity": "sha512-3dOsAHXXUkQTpOYcoAxLIorMTp4gIQr5IW3iVb7A7lFIp0VHhnynm9izx6TssdrIcVIESAlVjtnO2K8bg+Coew==",
          "dev": true
        }
      }
    },
    "graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "dev": true
    },
    "has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "dev": true,
      "requires": {
        "get-intrinsic": "^1.1.1"
      }
    },
    "has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "dev": true
    },
    "history": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/history/-/history-5.3.0.tgz",
      "integrity": "sha512-ZqaKwjjrAYUYfLG+htGaIIZ4nioX2L70ZUMIFysS3xvBsSG4x/n1V6TXV3N8ZYNuFGlDirFg32T7B6WOUPDYcQ==",
      "requires": {
        "@babel/runtime": "^7.7.6"
      }
    },
    "htmlnano": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-2.0.2.tgz",
      "integrity": "sha512-+ZrQFS4Ub+zd+/fWwfvoYCEGNEa0/zrpys6CyXxvZDwtL7Pl+pOtRkiujyvBQ7Lmfp7/iEPxtOFgxWA16Gkj3w==",
      "dev": true,
      "requires": {
        "cosmiconfig": "^7.0.1",
        "posthtml": "^0.16.5",
        "timsort": "^0.3.0"
      }
    },
    "htmlparser2": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-7.2.0.tgz",
      "integrity": "sha512-H7MImA4MS6cw7nbyURtLPO1Tms7C5H602LRETv95z1MxO/7CP7rDVROehUYeYBUYEON94NXXDEPmZuq+hX4sog==",
      "dev": true,
      "requires": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.2",
        "domutils": "^2.8.0",
        "entities": "^3.0.1"
      }
    },
    "http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
          "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ=="
        }
      }
    },
    "ignore": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.2.0.tgz",
      "integrity": "sha512-CmxgYGiEPCLhfLnpPp1MoRmifwEIOgjcHXxOBjv7mY96c+eWScsOP9c112ZyLdWHi0FxHjI+4uVhKYp/gcdRmQ==",
      "dev": true
    },
    "ignore-by-default": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-2.1.0.tgz",
      "integrity": "sha512-yiWd4GVmJp0Q6ghmM2B/V3oZGRmjrKLXvHR3TE1nfoXsmoggllfZUQe74EN0fJdPFZu2NIvNdrMMLm3OsV7Ohw==",
      "dev": true
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dev": true,
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true
    },
    "indent-string": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-5.0.0.tgz",
      "integrity": "sha512-m6FAo/spmsW2Ab2fU35JTYwtOKa2yAwXSwgjSv1TJzh4Mh7mC3lzAOVLBprb72XsTrgkEIsl7YrFNAiDiRhIGg==",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "irregular-plurals": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-3.3.0.tgz",
      "integrity": "sha512-MVBLKUTangM3EfRPFROhmWQQKRDsrgI83J8GS3jXy+OwYqiR2/aoWndYQ5416jLE3uaGgLH7ncme3X9y09gZ3g==",
      "dev": true
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
      "dev": true
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-error": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-error/-/is-error-2.2.2.tgz",
      "integrity": "sha512-IOQqts/aHWbiisY5DuPJQ0gcbvaLFCa7fBa9xoLfxBZvQ+ZI/Zh9xoI7Gk+G64N0FdK4AbibytHht2tWgpJWLg==",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ=="
    },
    "is-fullwidth-code-point": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-4.0.0.tgz",
      "integrity": "sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==",
      "dev": true
    },
    "is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-json": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-json/-/is-json-2.0.1.tgz",
      "integrity": "sha512-6BEnpVn1rcf3ngfmViLM6vjUjGErbdrL4rwlv+u1NO1XO8kqT4YGL8+19Q+Z/bas8tY90BTWMk2+fW1g6hQjbA==",
      "dev": true
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
    },
    "is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true
    },
    "is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true
    },
    "is-plain-object": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
      "integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
      "dev": true
    },
    "is-promise": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
      "dev": true
    },
    "is-unicode-supported": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.2.0.tgz",
      "integrity": "sha512-wH+U77omcRzevfIG8dDhTS0V9zZyweakfD01FULl97+0EHiJTTZtJqxPSkIIo/SDPv/i07k/C9jAPY+jwLLeUQ==",
      "dev": true
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "js-string-escape": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
      "integrity": "sha512-Smw4xcfIQ5LVjAOuJCvN/zIodzA/BBSsluuoSykP+lUvScIi4U6RJLfwHet5cxFnCswUjISV8oAXaqaJDY3chg==",
      "dev": true
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "dev": true
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "dev": true
    },
    "json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==",
      "dev": true
    },
    "lilconfig": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.0.6.tgz",
      "integrity": "sha512-9JROoBW7pobfsx+Sq2JsASvCo6Pfo6WWoUW79HuB1BCoBXD4PLWJPqDF6fNj67pqBYTbAHkE57M1kS/+L1neOg=="
    },
    "lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true
    },
    "lmdb": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/lmdb/-/lmdb-2.5.2.tgz",
      "integrity": "sha512-V5V5Xa2Hp9i2XsbDALkBTeHXnBXh/lEmk9p22zdr7jtuOIY9TGhjK6vAvTpOOx9IKU4hJkRWZxn/HsvR1ELLtA==",
      "dev": true,
      "requires": {
        "@lmdb/lmdb-darwin-arm64": "2.5.2",
        "@lmdb/lmdb-darwin-x64": "2.5.2",
        "@lmdb/lmdb-linux-arm": "2.5.2",
        "@lmdb/lmdb-linux-arm64": "2.5.2",
        "@lmdb/lmdb-linux-x64": "2.5.2",
        "@lmdb/lmdb-win32-x64": "2.5.2",
        "msgpackr": "^1.5.4",
        "node-addon-api": "^4.3.0",
        "node-gyp-build-optional-packages": "5.0.3",
        "ordered-binary": "^1.2.4",
        "weak-lru-cache": "^1.2.2"
      },
      "dependencies": {
        "node-addon-api": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
          "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
          "dev": true
        }
      }
    },
    "load-json-file": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-7.0.1.tgz",
      "integrity": "sha512-Gnxj3ev3mB5TkVBGad0JM6dmLiQL+o0t23JPBZ9sd+yvSLk05mFoqKBw5N8gbbkU4TNXyqCgIrl/VM17OgUIgQ==",
      "dev": true
    },
    "locate-path": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-7.1.1.tgz",
      "integrity": "sha512-vJXaRMJgRVD3+cUZs3Mncj2mxpt5mP0EmNOsxRSZRMlbqjvxzDEOIUWXGmavo0ZC9+tNZCBLQ66reA11nbpHZg==",
      "dev": true,
      "requires": {
        "p-locate": "^6.0.0"
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "lodash.castarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
      "dev": true
    },
    "lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==",
      "dev": true
    },
    "lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "dev": true
    },
    "lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "devOptional": true
    },
    "map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "requires": {
        "p-defer": "^1.0.0"
      }
    },
    "matcher": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-5.0.0.tgz",
      "integrity": "sha512-s2EMBOWtXFc8dgqvoAzKJXxNHibcdJMV0gwqKUaw9E2JBJuGUK7DrNKrA6g/i+v72TT16+6sVm5mS3thaMLQUw==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^5.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
          "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
          "dev": true
        }
      }
    },
    "md5-hex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/md5-hex/-/md5-hex-3.0.1.tgz",
      "integrity": "sha512-BUiRtTtV39LIJwinWBjqVsU9xhdnz7/i889V859IBFpuqGAj6LuOvHv5XLbgZ2R7ptJoJaEcxkv88/h25T7Ciw==",
      "dev": true,
      "requires": {
        "blueimp-md5": "^2.10.0"
      }
    },
    "mdn-data": {
      "version": "2.0.14",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz",
      "integrity": "sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==",
      "dev": true
    },
    "mem": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/mem/-/mem-9.0.2.tgz",
      "integrity": "sha512-F2t4YIv9XQUBHt6AOJ0y7lSmP1+cY7Fm1DRh9GClTGzKST7UWLMx6ly9WZdLH/G/ppM5RL4MlQfRT71ri9t19A==",
      "dev": true,
      "requires": {
        "map-age-cleaner": "^0.1.3",
        "mimic-fn": "^4.0.0"
      }
    },
    "merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg=="
    },
    "micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "requires": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      }
    },
    "mimic-fn": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
      "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
      "dev": true
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q=="
    },
    "ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "msgpackr": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/msgpackr/-/msgpackr-1.6.2.tgz",
      "integrity": "sha512-bqSQ0DYJbXbrJcrZFmMygUZmqQiDfI2ewFVWcrZY12w5XHWtPuW4WppDT/e63Uu311ajwkRRXSoF0uILroBeTA==",
      "dev": true,
      "requires": {
        "msgpackr-extract": "^2.0.2"
      }
    },
    "msgpackr-extract": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-2.1.2.tgz",
      "integrity": "sha512-cmrmERQFb19NX2JABOGtrKdHMyI6RUyceaPBQ2iRz9GnDkjBWFjNJC0jyyoOfZl2U/LZE3tQCCQc4dlRyA8mcA==",
      "dev": true,
      "optional": true,
      "requires": {
        "@msgpackr-extract/msgpackr-extract-darwin-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-darwin-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-win32-x64": "2.1.2",
        "node-gyp-build-optional-packages": "5.0.3"
      }
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ=="
    },
    "nanoid": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.4.tgz",
      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw=="
    },
    "near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "requires": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A==",
      "dev": true
    },
    "node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "requires": {
        "whatwg-url": "^5.0.0"
      }
    },
    "node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg==",
      "dev": true
    },
    "node-gyp-build-optional-packages": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.3.tgz",
      "integrity": "sha512-k75jcVzk5wnnc/FMxsf4udAoTEUv2jY3ycfdSd3yWu6Cnd1oee6/CfZJApyscA4FJOmdoixWwiwOyf16RzD5JA==",
      "dev": true
    },
    "node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg==",
      "dev": true
    },
    "nodemon": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.19.tgz",
      "integrity": "sha512-4pv1f2bMDj0Eeg/MhGqxrtveeQ5/G/UVe9iO6uTZzjnRluSA4PVWf8CW99LUPwGB3eNIA7zUFoP77YuI7hOc0A==",
      "dev": true,
      "requires": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.0.4",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ignore-by-default": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
          "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "nofilter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/nofilter/-/nofilter-3.1.0.tgz",
      "integrity": "sha512-l2NNj07e9afPnhAhvgVrCD/oy2Ai1yfLpuo3EpiO1jFTsB4sFz6oIfAfSZyQzVpkZQ9xS8ZS5g1jCBgq4Hwo0g==",
      "dev": true
    },
    "nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "dev": true,
      "requires": {
        "abbrev": "1"
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
    },
    "nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "dev": true,
      "requires": {
        "boolbase": "^1.0.0"
      }
    },
    "nullthrows": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/nullthrows/-/nullthrows-1.1.1.tgz",
      "integrity": "sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==",
      "dev": true
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true
    },
    "object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw=="
    },
    "object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true
    },
    "object.assign": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.3.tgz",
      "integrity": "sha512-ZFJnX3zltyjcYJL0RoCJuzb+11zWGyaDbjgxZbdV7rFEcHQuYxrZqhow67aA7xpes6LhojyFDaBKAFfogQrikA==",
      "dev": true,
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "has-symbols": "^1.0.3",
        "object-keys": "^1.1.1"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "requires": {
        "wrappy": "1"
      }
    },
    "ordered-binary": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/ordered-binary/-/ordered-binary-1.3.0.tgz",
      "integrity": "sha512-knIeYepTI6BDAzGxqFEDGtI/iGqs57H32CInAIxEvAHG46vk1Di0CEpyc1A7iY39B1mfik3g3KLYwOTNnnMHLA==",
      "dev": true
    },
    "p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha512-wB3wfAxZpk2AzOfUMJNL+d36xothRSyj8EXOa4f6GMqYDN9BJaaSISbsk+wS9abmnebVw95C2Kb5t85UmpCxuw==",
      "dev": true
    },
    "p-event": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/p-event/-/p-event-5.0.1.tgz",
      "integrity": "sha512-dd589iCQ7m1L0bmC5NLlVYfy3TbBEsMUfWx9PyAgPeIcFZ/E2yaTZ4Rz4MiBmmJShviiftHVXOqfnfzJ6kyMrQ==",
      "dev": true,
      "requires": {
        "p-timeout": "^5.0.2"
      }
    },
    "p-limit": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz",
      "integrity": "sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==",
      "dev": true,
      "requires": {
        "yocto-queue": "^1.0.0"
      }
    },
    "p-locate": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz",
      "integrity": "sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==",
      "dev": true,
      "requires": {
        "p-limit": "^4.0.0"
      }
    },
    "p-map": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-5.5.0.tgz",
      "integrity": "sha512-VFqfGDHlx87K66yZrNdI4YGtD70IRyd+zSvgks6mzHPRNkoKy+9EKP4SFC77/vTTQYmRmti7dvqC+m5jBrBAcg==",
      "dev": true,
      "requires": {
        "aggregate-error": "^4.0.0"
      }
    },
    "p-timeout": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-5.1.0.tgz",
      "integrity": "sha512-auFDyzzzGZZZdHz3BtET9VEz0SE/uMEAx7uWfGPucfzEwwe/xH0iVeZibQmANYE/hp9T2+UUZT5m+BKyrDp3Ew==",
      "dev": true
    },
    "parcel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/parcel/-/parcel-2.7.0.tgz",
      "integrity": "sha512-pRYwnivwtNP0tip8xYSo4zCB0XhLt7/gJzP1p8OovCqkmFjG9VG+GW9TcAKqMIo0ovEa9tT+/s6gY1Qy+BONGQ==",
      "dev": true,
      "requires": {
        "@parcel/config-default": "2.7.0",
        "@parcel/core": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/reporter-cli": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "get-port": "^4.2.0",
        "v8-compile-cache": "^2.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "commander": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
          "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "requires": {
        "callsites": "^3.0.0"
      },
      "dependencies": {
        "callsites": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
          "dev": true
        }
      }
    },
    "parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      }
    },
    "parse-ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/parse-ms/-/parse-ms-2.1.0.tgz",
      "integrity": "sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==",
      "dev": true
    },
    "path-exists": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz",
      "integrity": "sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true
    },
    "path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true
    },
    "picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="
    },
    "pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog=="
    },
    "pkg-conf": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pkg-conf/-/pkg-conf-4.0.0.tgz",
      "integrity": "sha512-7dmgi4UY4qk+4mj5Cd8v/GExPo0K+SlY+hulOSdfZ/T6jVH6//y7NtzZo5WrfhDBxuQ0jCa7fLZmNaNh7EWL/w==",
      "dev": true,
      "requires": {
        "find-up": "^6.0.0",
        "load-json-file": "^7.0.0"
      }
    },
    "plur": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/plur/-/plur-5.1.0.tgz",
      "integrity": "sha512-VP/72JeXqak2KiOzjgKtQen5y3IZHn+9GOuLDafPv0eXa47xq0At93XahYBs26MsifCQ4enGKwbjBTKgb9QJXg==",
      "dev": true,
      "requires": {
        "irregular-plurals": "^3.3.0"
      }
    },
    "postcss": {
      "version": "8.4.14",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.14.tgz",
      "integrity": "sha512-E398TUmfAYFPBSdzgeieK2Y1+1cpdxJx8yXbK/m57nRhKSmk1GB2tO4lbLBtlkfPQTDKfe4Xqv1ASWPpayPEig==",
      "requires": {
        "nanoid": "^3.3.4",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      }
    },
    "postcss-import": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz",
      "integrity": "sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==",
      "requires": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      }
    },
    "postcss-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.0.tgz",
      "integrity": "sha512-77QESFBwgX4irogGVPgQ5s07vLvFqWr228qZY+w6lW599cRlK/HmnlivnnVUxkjHnCu4J16PDMHcH+e+2HbvTQ==",
      "requires": {
        "camelcase-css": "^2.0.1"
      }
    },
    "postcss-load-config": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
      "integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
      "requires": {
        "lilconfig": "^2.0.5",
        "yaml": "^1.10.2"
      }
    },
    "postcss-nested": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-5.0.6.tgz",
      "integrity": "sha512-rKqm2Fk0KbA8Vt3AdGN0FB9OBOMDVajMG6ZCf/GoHgdxUJ4sBFp0A/uMIRm+MJUdo33YXEtjqIz8u7DAp8B7DA==",
      "requires": {
        "postcss-selector-parser": "^6.0.6"
      }
    },
    "postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "requires": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      }
    },
    "postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "posthtml": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.16.6.tgz",
      "integrity": "sha512-JcEmHlyLK/o0uGAlj65vgg+7LIms0xKXe60lcDOTU7oVX/3LuEuLwrQpW3VJ7de5TaFKiW4kWkaIpJL42FEgxQ==",
      "dev": true,
      "requires": {
        "posthtml-parser": "^0.11.0",
        "posthtml-render": "^3.0.0"
      },
      "dependencies": {
        "posthtml-parser": {
          "version": "0.11.0",
          "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.11.0.tgz",
          "integrity": "sha512-QecJtfLekJbWVo/dMAA+OSwY79wpRmbqS5TeXvXSX+f0c6pW4/SE6inzZ2qkU7oAMCPqIDkZDvd/bQsSFUnKyw==",
          "dev": true,
          "requires": {
            "htmlparser2": "^7.1.1"
          }
        }
      }
    },
    "posthtml-parser": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.10.2.tgz",
      "integrity": "sha512-PId6zZ/2lyJi9LiKfe+i2xv57oEjJgWbsHGGANwos5AvdQp98i6AtamAl8gzSVFGfQ43Glb5D614cvZf012VKg==",
      "dev": true,
      "requires": {
        "htmlparser2": "^7.1.1"
      }
    },
    "posthtml-render": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-3.0.0.tgz",
      "integrity": "sha512-z+16RoxK3fUPgwaIgH9NGnK1HKY9XIDpydky5eQGgAFVXTCSezalv9U2jQuNV+Z9qV1fDWNzldcw4eK0SSbqKA==",
      "dev": true,
      "requires": {
        "is-json": "^2.0.1"
      }
    },
    "pretty-ms": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pretty-ms/-/pretty-ms-7.0.1.tgz",
      "integrity": "sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==",
      "dev": true,
      "requires": {
        "parse-ms": "^2.1.0"
      }
    },
    "process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==",
      "dev": true
    },
    "pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
      "dev": true
    },
    "queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A=="
    },
    "quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA=="
    },
    "react": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
      "requires": {
        "loose-envify": "^1.1.0"
      }
    },
    "react-dom": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
      "requires": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.0"
      }
    },
    "react-error-overlay": {
      "version": "6.0.9",
      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.9.tgz",
      "integrity": "sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew==",
      "dev": true
    },
    "react-ipfs-image": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/react-ipfs-image/-/react-ipfs-image-0.6.0.tgz",
      "integrity": "sha512-Ms17ZQFpzUGxz0QXB3wsSW4qTQkD6m0vxkwdXJ6nVsDKuta+QG9qRBITMhO5avYnOiLARJfLZOChVbYbdNJ/Rw==",
      "requires": {}
    },
    "react-is": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz",
      "integrity": "sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==",
      "dev": true
    },
    "react-refresh": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.9.0.tgz",
      "integrity": "sha512-Gvzk7OZpiqKSkxsQvO/mbTN1poglhmAV7gR/DdIrRrSMXraRQQlfikRJOr3Nb9GTMPC5kof948Zy6jJZIFtDvQ==",
      "dev": true
    },
    "react-router": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.3.0.tgz",
      "integrity": "sha512-7Wh1DzVQ+tlFjkeo+ujvjSqSJmkt1+8JO+T5xklPlgrh70y7ogx75ODRW0ThWhY7S+6yEDks8TYrtQe/aoboBQ==",
      "requires": {
        "history": "^5.2.0"
      }
    },
    "react-router-dom": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.3.0.tgz",
      "integrity": "sha512-uaJj7LKytRxZNQV8+RbzJWnJ8K2nPsOOEuX7aQstlMZKQT0164C+X2w6bnkqU3sjtLvpd5ojrezAyfZ1+0sStw==",
      "requires": {
        "history": "^5.2.0",
        "react-router": "6.3.0"
      }
    },
    "react-shallow-renderer": {
      "version": "16.15.0",
      "resolved": "https://registry.npmjs.org/react-shallow-renderer/-/react-shallow-renderer-16.15.0.tgz",
      "integrity": "sha512-oScf2FqQ9LFVQgA73vr86xl2NaOIX73rh+YFqcOp68CWj56tSfgtGKrEbyhCj0rSijyG9M1CYprTh39fBi5hzA==",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.1",
        "react-is": "^16.12.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "react-test-renderer": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-18.2.0.tgz",
      "integrity": "sha512-JWD+aQ0lh2gvh4NM3bBM42Kx+XybOxCpgYK7F8ugAlpaTSnWsX+39Z4XkOykGZAHrjwwTZT3x3KxswVWxHPUqA==",
      "dev": true,
      "requires": {
        "react-is": "^18.2.0",
        "react-shallow-renderer": "^16.15.0",
        "scheduler": "^0.23.0"
      }
    },
    "read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "requires": {
        "pify": "^2.3.0"
      }
    },
    "readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "dev": true
    },
    "regenerate-unicode-properties": {
      "version": "10.0.1",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.0.1.tgz",
      "integrity": "sha512-vn5DU6yg6h8hP/2OkQo3K7uVILvY4iu0oI4t3HFa81UPkhGJwkRwM10JEc3upjdhHjs/k8GJY1sRBhk5sr69Bw==",
      "dev": true,
      "requires": {
        "regenerate": "^1.4.2"
      }
    },
    "regenerator-runtime": {
      "version": "0.13.9",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
    },
    "regenerator-transform": {
      "version": "0.15.0",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.0.tgz",
      "integrity": "sha512-LsrGtPmbYg19bcPHwdtmXwbW+TqNvtY4riE3P83foeHRroMbH6/2ddFBfab3t7kbzc7v7p4wbkIecHImqt0QNg==",
      "dev": true,
      "requires": {
        "@babel/runtime": "^7.8.4"
      }
    },
    "regexpu-core": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.1.0.tgz",
      "integrity": "sha512-bb6hk+xWd2PEOkj5It46A16zFMs2mv86Iwpdu94la4S3sJ7C973h2dHpYKwIBGaWSO7cIRJ+UX0IeMaWcO4qwA==",
      "dev": true,
      "requires": {
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.0.1",
        "regjsgen": "^0.6.0",
        "regjsparser": "^0.8.2",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.0.0"
      }
    },
    "regjsgen": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.6.0.tgz",
      "integrity": "sha512-ozE883Uigtqj3bx7OhL1KNbCzGyW2NQZPl6Hs09WTvCuZD5sTI4JY58bkbQWa/Y9hxIsvJ3M8Nbf7j54IqeZbA==",
      "dev": true
    },
    "regjsparser": {
      "version": "0.8.4",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.8.4.tgz",
      "integrity": "sha512-J3LABycON/VNEu3abOviqGHuB/LOtOQj8SKmfP9anY5GfAVw/SPjwzSjxGjbZXIxbGfqTHtJw58C2Li/WkStmA==",
      "dev": true,
      "requires": {
        "jsesc": "~0.5.0"
      },
      "dependencies": {
        "jsesc": {
          "version": "0.5.0",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
          "integrity": "sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==",
          "dev": true
        }
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "dev": true
    },
    "resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "requires": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "resolve-cwd": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
      "dev": true,
      "requires": {
        "resolve-from": "^5.0.0"
      },
      "dependencies": {
        "resolve-from": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
          "dev": true
        }
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true
    },
    "reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw=="
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "requires": {
        "queue-microtask": "^1.2.2"
      }
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "scheduler": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz",
      "integrity": "sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==",
      "requires": {
        "loose-envify": "^1.1.0"
      }
    },
    "semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "dev": true
    },
    "serialize-error": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
      "dev": true,
      "requires": {
        "type-fest": "^0.13.1"
      }
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "requires": {
        "shebang-regex": "^3.0.0"
      }
    },
    "shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true
    },
    "signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "simple-update-notifier": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.0.7.tgz",
      "integrity": "sha512-BBKgR84BJQJm6WjWFMHgLVuo61FBDSj1z/xSFUIozqO6wO7ii0JxCqlIud7Enr/+LhlbNI0whErq96P2qHNWew==",
      "dev": true,
      "requires": {
        "semver": "~7.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
          "dev": true
        }
      }
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true
    },
    "slice-ansi": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-5.0.0.tgz",
      "integrity": "sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^6.0.0",
        "is-fullwidth-code-point": "^4.0.0"
      }
    },
    "source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true
    },
    "source-map-js": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz",
      "integrity": "sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw=="
    },
    "source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "dev": true
    },
    "stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "dev": true
    },
    "stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^2.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
          "dev": true
        }
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA=="
    },
    "string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "requires": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      }
    },
    "strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dev": true,
      "requires": {
        "ansi-regex": "^6.0.1"
      }
    },
    "supertap": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/supertap/-/supertap-3.0.1.tgz",
      "integrity": "sha512-u1ZpIBCawJnO+0QePsEiOknOfCRq0yERxiAchT0i4li0WHNUJbf0evXXSXOcCAR4M8iMDoajXYmstm/qO81Isw==",
      "dev": true,
      "requires": {
        "indent-string": "^5.0.0",
        "js-yaml": "^3.14.1",
        "serialize-error": "^7.0.1",
        "strip-ansi": "^7.0.1"
      }
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w=="
    },
    "svgo": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-2.8.0.tgz",
      "integrity": "sha512-+N/Q9kV1+F+UeWYoSiULYo4xYSDQlTgb+ayMobAXPwMnLvop7oxKMo9OzIrX5x3eS4L4f2UHhc9axXwY8DpChg==",
      "dev": true,
      "requires": {
        "@trysound/sax": "0.2.0",
        "commander": "^7.2.0",
        "css-select": "^4.1.3",
        "css-tree": "^1.1.3",
        "csso": "^4.2.0",
        "picocolors": "^1.0.0",
        "stable": "^0.1.8"
      },
      "dependencies": {
        "commander": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
          "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
          "dev": true
        }
      }
    },
    "tailwindcss": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.1.6.tgz",
      "integrity": "sha512-7skAOY56erZAFQssT1xkpk+kWt2NrO45kORlxFPXUt3CiGsVPhH1smuH5XoDH6sGPXLyBv+zgCKA2HWBsgCytg==",
      "requires": {
        "arg": "^5.0.2",
        "chokidar": "^3.5.3",
        "color-name": "^1.1.4",
        "detective": "^5.2.1",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.2.11",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "lilconfig": "^2.0.5",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.0.0",
        "postcss": "^8.4.14",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "5.0.6",
        "postcss-selector-parser": "^6.0.10",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        "resolve": "^1.22.1"
      },
      "dependencies": {
        "arg": {
          "version": "5.0.2",
          "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
          "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg=="
        },
        "glob-parent": {
          "version": "6.0.2",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
          "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
          "requires": {
            "is-glob": "^4.0.3"
          }
        }
      }
    },
    "temp-dir": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-2.0.0.tgz",
      "integrity": "sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==",
      "dev": true
    },
    "term-size": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
      "integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==",
      "dev": true
    },
    "terser": {
      "version": "5.14.2",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.14.2.tgz",
      "integrity": "sha512-oL0rGeM/WFQCUd0y2QrWxYnq7tfSuKBiqTjRPWrRgB46WD/kiwHwF8T23z78H6Q6kGCuuHcPB+KULHRdxvVGQA==",
      "dev": true,
      "requires": {
        "@jridgewell/source-map": "^0.3.2",
        "acorn": "^8.5.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "dependencies": {
        "commander": {
          "version": "2.20.3",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
          "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
          "dev": true
        }
      }
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "time-zone": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/time-zone/-/time-zone-1.0.0.tgz",
      "integrity": "sha512-TIsDdtKo6+XrPtiTm1ssmMngN1sAhyKnTO2kunQWqNPWIVvCm15Wmw4SWInwTVgJ5u/Tr04+8Ei9TNcw4x4ONA==",
      "dev": true
    },
    "timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha512-qsdtZH+vMoCARQtyod4imc2nIJwg9Cc7lPRrw9CzF8ZKR0khdr8+2nX80PBhET3tcyTtJDxAffGh2rXH4tyU8A==",
      "dev": true
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
      "dev": true
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA=="
    },
    "touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "dev": true,
      "requires": {
        "nopt": "~1.0.10"
      }
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "ts-node": {
      "version": "10.9.1",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.1.tgz",
      "integrity": "sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==",
      "devOptional": true,
      "requires": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      }
    },
    "tslib": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.0.tgz",
      "integrity": "sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==",
      "dev": true
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "type-fest": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
      "dev": true
    },
    "typescript": {
      "version": "4.7.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.7.4.tgz",
      "integrity": "sha512-C0WQT0gezHuw6AdY1M2jxUO83Rjf0HP7Sk1DtXj6j1EwkQNZrHAg2XPWlq62oqEhYvONq5pkC2Y9oPljWToLmQ==",
      "devOptional": true
    },
    "u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w=="
    },
    "undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
      "dev": true
    },
    "unicode-canonical-property-names-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz",
      "integrity": "sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==",
      "dev": true
    },
    "unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "dev": true,
      "requires": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      }
    },
    "unicode-match-property-value-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.0.0.tgz",
      "integrity": "sha512-7Yhkc0Ye+t4PNYzOGKedDhXbYIBe1XEQYQxOPyhcXNMJ0WCABqqj6ckydd6pWRZTHV4GuCPKdBAUiMc60tsKVw==",
      "dev": true
    },
    "unicode-property-aliases-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5Zfuy9q/DFr4tfO7ZPeVXb1aPoeQSdeFMLpYuFebehDAhbuevLs5yxSZmIFN1tP5F9Wl4IpJrYojg85/zgyZHQ==",
      "dev": true
    },
    "update-browserslist-db": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.5.tgz",
      "integrity": "sha512-dteFFpCyvuDdr9S/ff1ISkKt/9YZxKjI9WlRR99c180GaztJtRa/fn18FdxGVKVsnPY7/a/FDN68mcvUmP4U7Q==",
      "dev": true,
      "requires": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "utility-types": {
      "version": "3.10.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.10.0.tgz",
      "integrity": "sha512-O11mqxmi7wMKCo6HKFt5AhO4BwY3VV68YU07tgxfz8zJTIxr4BpsezN49Ffwy9j3ZpwwJp4fkRwjRzq3uWE6Rg==",
      "dev": true
    },
    "v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA==",
      "dev": true
    },
    "v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
      "devOptional": true
    },
    "weak-lru-cache": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/weak-lru-cache/-/weak-lru-cache-1.2.2.tgz",
      "integrity": "sha512-DEAoo25RfSYMuTGc9vPJzZcZullwIqRDSI9LOy+fkCJPi6hykCnfKaXTuPBDuXAUcqHXyOgFtHNp/kB2FjYHbw==",
      "dev": true
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "well-known-symbols": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/well-known-symbols/-/well-known-symbols-2.0.0.tgz",
      "integrity": "sha512-ZMjC3ho+KXo0BfJb7JgtQ5IBuvnShdlACNkKkdsqBmYw3bPAaJfPeYUo6tLUaT5tG/Gkh7xkpBhKRQ9e7pyg9Q==",
      "dev": true
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "dev": true,
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "write-file-atomic": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.1.tgz",
      "integrity": "sha512-nSKUxgAbyioruk6hU87QzVbY279oYT6uiwgDoujth2ju4mJ+TZau7SQBhtbTmUyuNYTuXnSyRn66FV0+eCgcrQ==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.7"
      }
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ=="
    },
    "xxhash-wasm": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/xxhash-wasm/-/xxhash-wasm-0.4.2.tgz",
      "integrity": "sha512-/eyHVRJQCirEkSZ1agRSCwriMhwlyUcFkXD5TPVSLP+IPzjsqMVzZwdoczLp1SoQU0R3dxz1RpIK+4YNQbCVOA==",
      "dev": true
    },
    "y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg=="
    },
    "yargs": {
      "version": "17.5.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.5.1.tgz",
      "integrity": "sha512-t6YAJcxDkNX7NFYiVtKvWUz8l+PaKTLiL63mJYWR2GnHq2gjEWISzsLp9wg3aY36dY1j+gfIEL3pIF+XlJJfbA==",
      "dev": true,
      "requires": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
          "dev": true
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "dev": true
    },
    "yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "devOptional": true
    },
    "yocto-queue": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz",
      "integrity": "sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==",
      "dev": true
    }
  }
}

'''
'''--- near-election-dapp/frontend/frontend/package.json ---
{
  "name": "my-near-app",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "echo The app is starting! && env-cmd -f ./neardev/dev-account.env parcel index.html --open",
    "dev": "nodemon --watch ../../backend -e ts --exec \"npm run start\"",
    "build": "parcel build index.html --public-url ./"
  },
  "devDependencies": {
    "@babel/core": "^7.18.2",
    "@babel/preset-env": "^7.18.2",
    "@babel/preset-react": "^7.17.12",
    "@tailwindcss/typography": "^0.5.4",
    "@types/node": "^18.6.2",
    "ava": "^4.2.0",
    "env-cmd": "^10.1.0",
    "nodemon": "^2.0.16",
    "parcel": "^2.6.0",
    "process": "^0.11.10",
    "react-test-renderer": "^18.1.0",
    "ts-node": "^10.8.0",
    "typescript": "^4.7.2"
  },
  "dependencies": {
    "near-api-js": "^0.44.2",
    "postcss": "^8.4.14",
    "react": "^18.1.0",
    "react-dom": "^18.1.0",
    "react-ipfs-image": "^0.6.0",
    "react-router-dom": "^6.3.0",
    "regenerator-runtime": "^0.13.9",
    "tailwindcss": "^3.1.6"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- near-election-dapp/frontend/frontend/tailwind.config.js ---
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./*.{html,js,ts,jsx,tsx}", 
    "./assets/**/*.{html,js,ts,jsx,tsx}"
  ],
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}

'''
'''--- near-election-dapp/frontend/integration-tests/Cargo.toml ---
[package]
name = "integration-tests"
version = "1.0.0"
publish = false
edition = "2018"

[dev-dependencies]
anyhow = "1.0"
borsh = "0.9"
maplit = "1.0"
near-units = "0.2.0"
# arbitrary_precision enabled for u128 types that workspaces requires for Balance types
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
tokio = { version = "1.18.1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
workspaces = "0.4.0"
pkg-config = "0.3.1"

[[example]]
name = "integration-tests"
path = "src/tests.rs"

'''
'''--- near-election-dapp/frontend/integration-tests/src/tests.rs ---
use std::{env, fs};
use near_units::parse_near;
use serde_json::json;
use workspaces::prelude::*;
use workspaces::{network::Sandbox, Account, Contract, Worker};

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let wasm_arg: &str = &(env::args().nth(1).unwrap());
    let wasm_filepath = fs::canonicalize(env::current_dir()?.join(wasm_arg))?;

    let worker = workspaces::sandbox().await?;
    let wasm = std::fs::read(wasm_filepath)?;
    let contract = worker.dev_deploy(&wasm).await?;

    // create accounts
    let account = worker.dev_create_account().await?;
    let alice = account
        .create_subaccount(&worker, "alice")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;

    // begin tests
    test_default_message(&alice, &contract, &worker).await?;
    test_changes_message(&alice, &contract, &worker).await?;
    Ok(())
}

async fn test_default_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Hello".to_string());
    println!("      Passed ✅ gets default message");
    Ok(())
}

async fn test_changes_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    user.call(&worker, contract.id(), "set_greeting")
        .args_json(json!({"message": "Howdy"}))?
        .transact()
        .await?;

    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Howdy".to_string());
    println!("      Passed ✅ changes message");
    Ok(())
}
'''
'''--- near-election-dapp/frontend/netlify.toml ---
[[redirects]]
   from = "/*"
   to = "/"
   status = 200
'''
'''--- near-election-dapp/frontend/package-lock.json ---
{
  "name": "frontend",
  "version": "1.0.0",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "frontend",
      "version": "1.0.0",
      "license": "(MIT AND Apache-2.0)",
      "dependencies": {
        "autoprefixer": "^10.4.8",
        "nodemon": "^2.0.19",
        "parcel": "^2.7.0",
        "react-ipfs-image": "^0.6.0",
        "react-router-dom": "^6.3.0"
      },
      "devDependencies": {
        "near-cli": "^3.3.0",
        "postcss": "^8.4.16",
        "tailwindcss": "^3.1.8"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dependencies": {
        "@babel/highlight": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/@babel/highlight/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/@babel/highlight/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.18.9.tgz",
      "integrity": "sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
      "dependencies": {
        "regenerator-runtime": "^0.13.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@jest/environment": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-27.5.1.tgz",
      "integrity": "sha512-/WQjhPJe3/ghaol/4Bq480JKXV/Rfw8nQdN7f41fM8VDHLcxKXou6QyXAh3EFr9/bVG3x74z1NWDkP87EiY8gA==",
      "dev": true,
      "dependencies": {
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jest/fake-timers": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-27.5.1.tgz",
      "integrity": "sha512-/aPowoolwa07k7/oM3aASneNeBGCmGQsc3ugN4u6s4C/+s5M64MFo/+djTdiwcbQlRfFElGuDXWzaWj6QgKObQ==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@sinonjs/fake-timers": "^8.0.1",
        "@types/node": "*",
        "jest-message-util": "^27.5.1",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jest/types": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-27.5.1.tgz",
      "integrity": "sha512-Cx46iJ9QpwQTjIdq5VJu2QTMMs3QlEjI0x1QbBP5W1+nMzyc2XmimiRR/CbX9TO0cPTeUlxWMOu8mslYsJ8DEw==",
      "dev": true,
      "dependencies": {
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^3.0.0",
        "@types/node": "*",
        "@types/yargs": "^16.0.0",
        "chalk": "^4.0.0"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.2.tgz",
      "integrity": "sha512-m7O9o2uR8k2ObDysZYzdfhb08VuEml5oWGiosa1VdaPZ/A6QyPkAJuwN0Q1lhULOf6B7MtQmHENS743hWtCrgw==",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@ledgerhq/devices": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-7.0.0.tgz",
      "integrity": "sha512-vq4B33WdU0dRAJIRFWZMj6w1W1yw1i4mekCmhk7N9wPaFrtGWZ2iI9WDihsNOBooCWKQe8Jsb9eD8RVThbSlFQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/logs": "^6.10.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/errors": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-6.10.1.tgz",
      "integrity": "sha512-92d1zRQleR1AQ4CAXgWgDtKUms+8EwShLVUcajI+BLWvgJ1Vclmq6PsBIDEQbsm+riVu/Ji3LcHdmgFgmi0VGw==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-6.27.2.tgz",
      "integrity": "sha512-GF4pmK78rEKhZfbmunwQ131c+0MGa6L5IoYlwgFcg6CaFpUjjPiTCKUFsm4flsE0Z0Ltn9QuKoe+xEHULo7rGA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-node-hid": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid/-/hw-transport-node-hid-6.27.2.tgz",
      "integrity": "sha512-N2tyGLLZqgNrWA1xc9fbdFc7c7pr3dpbsMwC6LW0ilHiGWXzC6XSPSJZARO1j0G4LQIqBq7rAuNzlr4u1p4jkw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/hw-transport": "^6.27.2",
        "@ledgerhq/hw-transport-node-hid-noevents": "^6.27.2",
        "@ledgerhq/logs": "^6.10.0",
        "lodash": "^4.17.21",
        "node-hid": "2.1.1",
        "usb": "^1.7.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-node-hid-noevents": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-6.27.2.tgz",
      "integrity": "sha512-/f0rAREa6CNq88y9NMTVVTHx3FHkmnbILhd4gDWcm7OC36mg7bLN9edbq8a4zNRdMvBKX+/Lg1hMgLdqEJagBw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/hw-transport": "^6.27.2",
        "@ledgerhq/logs": "^6.10.0",
        "node-hid": "2.1.1"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f": {
      "version": "5.36.0-deprecated",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-u2f/-/hw-transport-u2f-5.36.0-deprecated.tgz",
      "integrity": "sha512-T/+mGHIiUK/ZQATad6DMDmobCMZ1mVST952009jKzhaE1Et2Uy2secU+QhRkx3BfEAkvwa0zSRSYCL9d20Iqjg==",
      "deprecated": "@ledgerhq/hw-transport-u2f is deprecated. Please use @ledgerhq/hw-transport-webusb or @ledgerhq/hw-transport-webhid. https://github.com/LedgerHQ/ledgerjs/blob/master/docs/migrate_webusb.md",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.34.0",
        "@ledgerhq/hw-transport": "^5.34.0",
        "@ledgerhq/logs": "^5.30.0",
        "u2f-api": "0.2.7"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webhid": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webhid/-/hw-transport-webhid-5.51.1.tgz",
      "integrity": "sha512-w/2qSU0vwFY+D/4ucuYRViO7iS3Uuxmj9sI/Iiqkoiax9Xppb0/6H5m3ffKv6iPMmRYbgwCgXorqx4SLLSD8Kg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webusb": {
      "version": "5.53.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webusb/-/hw-transport-webusb-5.53.1.tgz",
      "integrity": "sha512-A/f+xcrkIAZiJrvPpDvsrjxQX4cI2kbdiunQkwsYmOG3Bp4z89ZnsBiC7YBst4n2/g+QgTg0/KPVtODU5djooQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/devices": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
      "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/logs": "^5.50.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/errors": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
      "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/hw-transport": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
      "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "events": "^3.3.0"
      }
    },
    "node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/logs": {
      "version": "5.50.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
      "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
      "dev": true,
      "optional": true
    },
    "node_modules/@ledgerhq/logs": {
      "version": "6.10.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-6.10.0.tgz",
      "integrity": "sha512-lLseUPEhSFUXYTKj6q7s2O3s2vW2ebgA11vMAlKodXGf5AFw4zUoEbTz9CoFOC9jS6xY4Qr8BmRnxP/odT4Uuw==",
      "dev": true,
      "optional": true
    },
    "node_modules/@lezer/common": {
      "version": "0.15.12",
      "resolved": "https://registry.npmjs.org/@lezer/common/-/common-0.15.12.tgz",
      "integrity": "sha512-edfwCxNLnzq5pBA/yaIhwJ3U3Kz8VAUOTRg0hhxaizaI1N+qxV7EXDv/kLCkLeq2RzSFvxexlaj5Mzfn2kY0Ig=="
    },
    "node_modules/@lezer/lr": {
      "version": "0.15.8",
      "resolved": "https://registry.npmjs.org/@lezer/lr/-/lr-0.15.8.tgz",
      "integrity": "sha512-bM6oE6VQZ6hIFxDNKk8bKPa14hqFrV07J/vHGOeiAbJReIaQXmkVb6xQu4MR+JBTLa5arGRyAAjJe1qaQt3Uvg==",
      "dependencies": {
        "@lezer/common": "^0.15.0"
      }
    },
    "node_modules/@lmdb/lmdb-darwin-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-arm64/-/lmdb-darwin-arm64-2.5.2.tgz",
      "integrity": "sha512-+F8ioQIUN68B4UFiIBYu0QQvgb9FmlKw2ctQMSBfW2QBrZIxz9vD9jCGqTCPqZBRbPHAS/vG1zSXnKqnS2ch/A==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@lmdb/lmdb-darwin-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-x64/-/lmdb-darwin-x64-2.5.2.tgz",
      "integrity": "sha512-KvPH56KRLLx4KSfKBx0m1r7GGGUMXm0jrKmNE7plbHlesZMuPJICtn07HYgQhj1LNsK7Yqwuvnqh1QxhJnF1EA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-arm": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm/-/lmdb-linux-arm-2.5.2.tgz",
      "integrity": "sha512-5kQAP21hAkfW5Bl+e0P57dV4dGYnkNIpR7f/GAh6QHlgXx+vp/teVj4PGRZaKAvt0GX6++N6hF8NnGElLDuIDw==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm64/-/lmdb-linux-arm64-2.5.2.tgz",
      "integrity": "sha512-aLl89VHL/wjhievEOlPocoefUyWdvzVrcQ/MHQYZm2JfV1jUsrbr/ZfkPPUFvZBf+VSE+Q0clWs9l29PCX1hTQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-linux-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-x64/-/lmdb-linux-x64-2.5.2.tgz",
      "integrity": "sha512-xUdUfwDJLGjOUPH3BuPBt0NlIrR7f/QHKgu3GZIXswMMIihAekj2i97oI0iWG5Bok/b+OBjHPfa8IU9velnP/Q==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@lmdb/lmdb-win32-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-win32-x64/-/lmdb-win32-x64-2.5.2.tgz",
      "integrity": "sha512-zrBczSbXKxEyK2ijtbRdICDygRqWSRPpZMN5dD1T8VMEW5RIhIbwFWw2phDRXuBQdVDpSjalCIUMWMV2h3JaZA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@mischnic/json-sourcemap": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@mischnic/json-sourcemap/-/json-sourcemap-0.1.0.tgz",
      "integrity": "sha512-dQb3QnfNqmQNYA4nFSN/uLaByIic58gOXq4Y4XqLOWmOrw73KmJPt/HLyG0wvn1bnR6mBKs/Uwvkh+Hns1T0XA==",
      "dependencies": {
        "@lezer/common": "^0.15.7",
        "@lezer/lr": "^0.15.4",
        "json5": "^2.2.1"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-darwin-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-2.1.2.tgz",
      "integrity": "sha512-TyVLn3S/+ikMDsh0gbKv2YydKClN8HaJDDpONlaZR+LVJmsxLFUgA+O7zu59h9+f9gX1aj/ahw9wqa6rosmrYQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-darwin-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-2.1.2.tgz",
      "integrity": "sha512-YPXtcVkhmVNoMGlqp81ZHW4dMxK09msWgnxtsDpSiZwTzUBG2N+No2bsr7WMtBKCVJMSD6mbAl7YhKUqkp/Few==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-arm": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-2.1.2.tgz",
      "integrity": "sha512-42R4MAFeIeNn+L98qwxAt360bwzX2Kf0ZQkBBucJ2Ircza3asoY4CDbgiu9VWklq8gWJVSJSJBwDI+c/THiWkA==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-2.1.2.tgz",
      "integrity": "sha512-vHZ2JiOWF2+DN9lzltGbhtQNzDo8fKFGrf37UJrgqxU0yvtERrzUugnfnX1wmVfFhSsF8OxrfqiNOUc5hko1Zg==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-linux-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-2.1.2.tgz",
      "integrity": "sha512-RjRoRxg7Q3kPAdUSC5EUUPlwfMkIVhmaRTIe+cqHbKrGZ4M6TyCA/b5qMaukQ/1CHWrqYY2FbKOAU8Hg0pQFzg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@msgpackr-extract/msgpackr-extract-win32-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-2.1.2.tgz",
      "integrity": "sha512-rIZVR48zA8hGkHIK7ED6+ZiXsjRCcAVBJbm8o89OKAMTmEAQ2QvoOxoiu3w2isAaWwzgtQIOFIqHwvZDyLKCvw==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@parcel/bundler-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/bundler-default/-/bundler-default-2.7.0.tgz",
      "integrity": "sha512-PU5MtWWhc+dYI9x8mguYnm9yiG6TkI7niRpxgJgtqAyGHuEyNXVBQQ0X+qyOF4D9LdankBf8uNN18g31IET2Zg==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/cache": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/cache/-/cache-2.7.0.tgz",
      "integrity": "sha512-JlXNoZXcWzLKdDlfeF3dIj5Vtel5T9vtdBN72PJ+cjC4qNHk4Uwvc5sfOBELuibGN0bVu2bwY9nUgSwCiB1iIA==",
      "dependencies": {
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/utils": "2.7.0",
        "lmdb": "2.5.2"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/codeframe": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/codeframe/-/codeframe-2.7.0.tgz",
      "integrity": "sha512-UTKx0jejJmmO1dwTHSJuRgrO8N6PMlkxRT6sew8N6NC3Bgv6pu0EbO+RtlWt/jCvzcdLOPdIoTzj4MMZvgcMYg==",
      "dependencies": {
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/compressor-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/compressor-raw/-/compressor-raw-2.7.0.tgz",
      "integrity": "sha512-SCXwnOOQT6EmpusBsYWNQ/RFri+2JnKuE0gMSf2dROl2xbererX45FYzeDplWALCKAdjMNDpFwU+FyMYoVZSCQ==",
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/config-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/config-default/-/config-default-2.7.0.tgz",
      "integrity": "sha512-ZzsLr97AYrz8c9k6qn3DlqPzifi3vbP7q3ynUrAFxmt0L4+K0H9N508ZkORYmCgaFjLIQ8Y3eWpwCJ0AewPNIg==",
      "dependencies": {
        "@parcel/bundler-default": "2.7.0",
        "@parcel/compressor-raw": "2.7.0",
        "@parcel/namer-default": "2.7.0",
        "@parcel/optimizer-css": "2.7.0",
        "@parcel/optimizer-htmlnano": "2.7.0",
        "@parcel/optimizer-image": "2.7.0",
        "@parcel/optimizer-svgo": "2.7.0",
        "@parcel/optimizer-terser": "2.7.0",
        "@parcel/packager-css": "2.7.0",
        "@parcel/packager-html": "2.7.0",
        "@parcel/packager-js": "2.7.0",
        "@parcel/packager-raw": "2.7.0",
        "@parcel/packager-svg": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/resolver-default": "2.7.0",
        "@parcel/runtime-browser-hmr": "2.7.0",
        "@parcel/runtime-js": "2.7.0",
        "@parcel/runtime-react-refresh": "2.7.0",
        "@parcel/runtime-service-worker": "2.7.0",
        "@parcel/transformer-babel": "2.7.0",
        "@parcel/transformer-css": "2.7.0",
        "@parcel/transformer-html": "2.7.0",
        "@parcel/transformer-image": "2.7.0",
        "@parcel/transformer-js": "2.7.0",
        "@parcel/transformer-json": "2.7.0",
        "@parcel/transformer-postcss": "2.7.0",
        "@parcel/transformer-posthtml": "2.7.0",
        "@parcel/transformer-raw": "2.7.0",
        "@parcel/transformer-react-refresh-wrap": "2.7.0",
        "@parcel/transformer-svg": "2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/core/-/core-2.7.0.tgz",
      "integrity": "sha512-7yKZUdh314Q/kU/9+27ZYTfcnXS6VYHuG+iiUlIohnvUUybxLqVJhdMU9Q+z2QcPka1IdJWz4K4Xx0y6/4goyg==",
      "dependencies": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/graph": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "abortcontroller-polyfill": "^1.1.9",
        "base-x": "^3.0.8",
        "browserslist": "^4.6.6",
        "clone": "^2.1.1",
        "dotenv": "^7.0.0",
        "dotenv-expand": "^5.1.0",
        "json5": "^2.2.0",
        "msgpackr": "^1.5.4",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/core/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/css": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css/-/css-1.12.2.tgz",
      "integrity": "sha512-Sa0PvZu5u877CupQA8IjEATqjJFynBfA7LxbcyutFe2LDCRSqB5Bm08jKFScyaz56qjZNIxZxXk2SApNkOvoAA==",
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "@parcel/css-darwin-arm64": "1.12.2",
        "@parcel/css-darwin-x64": "1.12.2",
        "@parcel/css-linux-arm-gnueabihf": "1.12.2",
        "@parcel/css-linux-arm64-gnu": "1.12.2",
        "@parcel/css-linux-arm64-musl": "1.12.2",
        "@parcel/css-linux-x64-gnu": "1.12.2",
        "@parcel/css-linux-x64-musl": "1.12.2",
        "@parcel/css-win32-x64-msvc": "1.12.2"
      }
    },
    "node_modules/@parcel/css-darwin-arm64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-arm64/-/css-darwin-arm64-1.12.2.tgz",
      "integrity": "sha512-6VvsoYSltBiUh/uyfPzQ+I3DiTFN7tmRv6zm1LH98J7GGCDDhbYEtbQjjCs15ex6fVn1ORZK0JO+mMlsg1JwTA==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-darwin-x64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-x64/-/css-darwin-x64-1.12.2.tgz",
      "integrity": "sha512-3J0/LrDvt5vevOisnrE0q5mEcuiAY+K7OZwIv84SAnrbjlL5sshmIaaNzL869kb4thza+RClEj0mS5XTm1IUEw==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm-gnueabihf": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm-gnueabihf/-/css-linux-arm-gnueabihf-1.12.2.tgz",
      "integrity": "sha512-OsX7I3dhBvnxEbAH++08RFe7yhjRp33ulzrCvJTMOP9YkxEEJ8qId3sNzJBHIVQzHyTlPTnBRHbSDhU3TFe/eQ==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-gnu/-/css-linux-arm64-gnu-1.12.2.tgz",
      "integrity": "sha512-R1Kqw+1Rsru9Q4+qvUEC6B8P21bpqhuF9rv8GmBmmnF1i2hMZ1JiY+uh/ej8IaRV0O3fAHeQGIyGBWx6qWDpcw==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-arm64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-musl/-/css-linux-arm64-musl-1.12.2.tgz",
      "integrity": "sha512-nwixgM4SEgPUQata9aAiJW0A5Q9ms+xim1tXT1i+91kOei4Fu2Wr2OuofMk+mlhbgmGKCTcu4gzMPReGxUhuRA==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-x64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-gnu/-/css-linux-x64-gnu-1.12.2.tgz",
      "integrity": "sha512-cJYVMHnQSGhDwQByyvjFZppjMBNlgxXl/R4cX5DwrQE0QZmK/42BYnMp92rvoprEG6LRyRoiGtCjyfYTPWajog==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-linux-x64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-musl/-/css-linux-x64-musl-1.12.2.tgz",
      "integrity": "sha512-u9zdO/d831/74Tf+TdPUfaIuB9v6FD4Xz8UdWUDOXgQqaOlnJ9fAsAM39EkoWlMxPPljY3f4ay6irSe1a4XgSA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/css-win32-x64-msvc": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-win32-x64-msvc/-/css-win32-x64-msvc-1.12.2.tgz",
      "integrity": "sha512-kCAKr3vKqvPUv9oXBG3pGZQz5il3sEk35dpmTXFa/7eDNKR5XyLpiJs8JwWJTFfuUqroymDSXA1bCcjvNEYcAg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/diagnostic": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/diagnostic/-/diagnostic-2.7.0.tgz",
      "integrity": "sha512-pdq/cTwVoL0n8yuDCRXFRSQHVWdmmIXPt3R3iT4KtYDYvOrMT2dLPT79IMqQkhYPANW8GuL15n/WxRngfRdkug==",
      "dependencies": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/events": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/events/-/events-2.7.0.tgz",
      "integrity": "sha512-kQDwMKgZ1U4M/G17qeDYF6bW5kybluN6ajYPc7mZcrWg+trEI/oXi81GMFaMX0BSUhwhbiN5+/Vb2wiG/Sn6ig==",
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/fs": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-2.7.0.tgz",
      "integrity": "sha512-PU5fo4Hh8y03LZgemgVREttc0wyHQUNmsJCybxTB7EjJie2CqJRumo+DFppArlvdchLwJdc9em03yQV/GNWrEg==",
      "dependencies": {
        "@parcel/fs-search": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/watcher": "^2.0.0",
        "@parcel/workers": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/fs-search": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs-search/-/fs-search-2.7.0.tgz",
      "integrity": "sha512-K1Hv25bnRpwQVA15RvcRuB8ZhfclnCHA8N8L6w7Ul1ncSJDxCIkIAc5hAubYNNYW3kWjCC2SOaEgFKnbvMllEQ==",
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/graph": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/graph/-/graph-2.7.0.tgz",
      "integrity": "sha512-Q6E94GS6q45PtsZh+m+gvFRp/N1Qopxhu2sxjcWsGs5iBd6IWn2oYLWOH5iVzEjWuYpW2HkB08lH6J50O63uOA==",
      "dependencies": {
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/hash": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/hash/-/hash-2.7.0.tgz",
      "integrity": "sha512-k6bSKnIlPJMPU3yjQzfgfvF9zuJZGOAlJgzpL4BbWvdbE8BTdjzLcFn0Ujrtud94EgIkiXd22sC2HpCUWoHGdA==",
      "dependencies": {
        "detect-libc": "^1.0.3",
        "xxhash-wasm": "^0.4.2"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/logger": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-2.7.0.tgz",
      "integrity": "sha512-qjMY/bYo38+o+OiIrTRldU9CwL1E7J72t+xkTP8QIcUxLWz5LYR0YbynZUVulmBSfqsykjjxCy4a+8siVr+lPw==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/markdown-ansi": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/markdown-ansi/-/markdown-ansi-2.7.0.tgz",
      "integrity": "sha512-ipOX0D6FVZFEXeb/z8MnTMq2RQEIuaILY90olVIuHEFLHHfOPEn+RK3u13HA1ChF5/9E3cMD79tu6x9JL9Kqag==",
      "dependencies": {
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/namer-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/namer-default/-/namer-default-2.7.0.tgz",
      "integrity": "sha512-lIKMdsmi//7fepecNDYmJYzBlL91HifPsX03lJCdu1dC6q5fBs+gG0XjKKG7yPnSCw1qH/4m7drzt9+dRZYAHQ==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/node-resolver-core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/node-resolver-core/-/node-resolver-core-2.7.0.tgz",
      "integrity": "sha512-5UJQHalqMxdhJIs2hhqQzFfQpF7+NAowsRq064lYtiRvcD8wMr3OOQ9wd1iazGpFSl4JKdT7BwDU9/miDJmanQ==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/node-resolver-core/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/optimizer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-css/-/optimizer-css-2.7.0.tgz",
      "integrity": "sha512-IfnOMACqhcAclKyOW9X9JpsknB6OShk9OVvb8EvbDTKHJhQHNNmzE88OkSI/pS3ZVZP9Zj+nWcVHguV+kvDeiQ==",
      "dependencies": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-htmlnano": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-htmlnano/-/optimizer-htmlnano-2.7.0.tgz",
      "integrity": "sha512-5QrGdWS5Hi4VXE3nQNrGqugmSXt68YIsWwKRAdarOxzyULSJS3gbCiQOXqIPRJobfZjnSIcdtkyxSiCUe1inIA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "htmlnano": "^2.0.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "svgo": "^2.4.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-image/-/optimizer-image-2.7.0.tgz",
      "integrity": "sha512-EnaXz5UjR67FUu0BEcqZTT9LsbB/iFAkkghCotbnbOuC5QQsloq6tw54TKU3y+R3qsjgUoMtGxPcGfVoXxZXYw==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-svgo": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-svgo/-/optimizer-svgo-2.7.0.tgz",
      "integrity": "sha512-IO1JV4NpfP3V7FrhsqCcV8pDQIHraFi1/ZvEJyssITxjH49Im/txKlwMiQuZZryAPn8Xb8g395Muawuk6AK6sg==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "svgo": "^2.4.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/optimizer-terser": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-terser/-/optimizer-terser-2.7.0.tgz",
      "integrity": "sha512-07VZjIO8xsl2/WmS/qHI8lI/cpu47iS9eRpqwfZEEsdk1cfz50jhWkmFudHBxiHGMfcZ//1+DdaPg9RDBWZtZA==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "terser": "^5.2.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/package-manager": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/package-manager/-/package-manager-2.7.0.tgz",
      "integrity": "sha512-wmfSX1mRrTi8MeA4KrnPk/x7zGUsILCQmTo6lA4gygzAxDbM1pGuyFN8/Kt0y0SFO2lbljARtD/4an5qdotH+Q==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/package-manager/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/packager-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-css/-/packager-css-2.7.0.tgz",
      "integrity": "sha512-44nzZwu+ssGuiFmYM6cf/Y4iChiUZ4DUzzpegnGlhXtKJKe4NHntxThJynuRZWKN2AAf48avApDpimg2jW0KDw==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-html/-/packager-html-2.7.0.tgz",
      "integrity": "sha512-Zgqd7sdcY/UnR370GR0q2ilmEohUDXsO8A1F28QCJzIsR1iCB6KRUT74+pawfQ1IhXZLaaFLLYe0UWcfm0JeXg==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-js/-/packager-js-2.7.0.tgz",
      "integrity": "sha512-wTRdM81PgRVDzWGXdWmqLwguWnTYWzhEDdjXpW2n8uMOu/CjHhMtogk65aaYk3GOnq6OBL/NsrmBiV/zKPj1vA==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "globals": "^13.2.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-raw/-/packager-raw-2.7.0.tgz",
      "integrity": "sha512-jg2Zp8dI5VpIQlaeahXDCfrPN9m/DKht1NkR9P2CylMAwqCcc1Xc1RRiF0wfwcPZpPMpq1265n+4qnB7rjGBlA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/packager-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-svg/-/packager-svg-2.7.0.tgz",
      "integrity": "sha512-EmJg3HpD6/xxKBjir/CdCKJZwI24iVfBuxRS9LUp3xHAIebOzVh1z6IN+i2Di5+NyRwfOFaLliL4uMa1zwbyCA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "posthtml": "^0.16.4"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/plugin": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/plugin/-/plugin-2.7.0.tgz",
      "integrity": "sha512-qqgx+nnMn6/0lRc4lKbLGmhNtBiT93S2gFNB4Eb4Pfz/SxVYoW+fmml+KdfOSiZffWOAH5L6NwhyD7N8aSikzw==",
      "dependencies": {
        "@parcel/types": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/reporter-cli": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-cli/-/reporter-cli-2.7.0.tgz",
      "integrity": "sha512-80gEODg8cnAmnxGVuaSVDo8JJ54P9AA2bHwSs1cIkHWlJ3BjDQb83H31bBHncJ5Kn5kQ/j+7WjlqHpTCiOR9PA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "term-size": "^2.2.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/reporter-dev-server": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-dev-server/-/reporter-dev-server-2.7.0.tgz",
      "integrity": "sha512-ySuou5addK8fGue8aXzo536BaEjMujDrEc1xkp4TasInXHVcA98b+SYX5NAZTGob5CxKvZQ5ylhg77zW30B+iA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/resolver-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/resolver-default/-/resolver-default-2.7.0.tgz",
      "integrity": "sha512-v8TvWsbLK7/q7n4gv6OrYNbW18xUx4zKbVMGZb1u4yMhzEH4HFr1D9OeoTq3jk+ximAigds8B6triQbL5exF7A==",
      "dependencies": {
        "@parcel/node-resolver-core": "2.7.0",
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-browser-hmr": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-browser-hmr/-/runtime-browser-hmr-2.7.0.tgz",
      "integrity": "sha512-PLbMLdclQeYsi2LkilZVGFV1n3y55G1jaBvby4ekedUZjMw3SWdMY2tDxgSDdFWfLCnYHJXdGUQSzGGi1kPzjA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-js/-/runtime-js-2.7.0.tgz",
      "integrity": "sha512-9/YUZTBNrSN2H6rbz/o1EOM0O7I3ZR/x9IDzxjJBD6Mi+0uCgCD02aedare/SNr1qgnbZZWmhpOzC+YgREcfLA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-react-refresh": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-react-refresh/-/runtime-react-refresh-2.7.0.tgz",
      "integrity": "sha512-vDKO0rWqRzEpmvoZ4kkYUiSsTxT5NnH904BFPFxKI0wJCl6yEmPuEifmATo73OuYhP6jIP3Qfl1R4TtiDFPJ1Q==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-error-overlay": "6.0.9",
        "react-refresh": "^0.9.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/runtime-service-worker": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-service-worker/-/runtime-service-worker-2.7.0.tgz",
      "integrity": "sha512-uD2pAV0yV6+e7JaWH4KVPbG+zRCrxr/OACyS9tIh+Q/R1vRmh8zGM3yhdrcoiZ7tFOnM72vd6xY11eTrUsSVig==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/source-map": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@parcel/source-map/-/source-map-2.1.0.tgz",
      "integrity": "sha512-E7UOEIof2o89LrKk1agSLmwakjigmEdDp1ZaEdsLVEvq63R/bul4Ij5CT+0ZDcijGpl5tnTbQADY9EyYGtjYgQ==",
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": "^12.18.3 || >=14"
      }
    },
    "node_modules/@parcel/transformer-babel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-babel/-/transformer-babel-2.7.0.tgz",
      "integrity": "sha512-7iklDXXnKH1530+QbI+e4kIJ+Q1puA1ulRS10db3aUJMj5GnvXGDFwhSZ7+T1ps66QHO7cVO29VlbqiRDarH1Q==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "json5": "^2.2.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-babel/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-css/-/transformer-css-2.7.0.tgz",
      "integrity": "sha512-J4EpWK9spQpXyNCmKK8Xnane0xW/1B/EAmfp7Fiv7g+5yUjY4ODf4KUugvE+Eb2gekPkhOKNHermO2KrX0/PFA==",
      "dependencies": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-html/-/transformer-html-2.7.0.tgz",
      "integrity": "sha512-wYJl5rn81W+Rlk9oQwDJcjoVsWVDKyeri84FzmlGXOsg0EYgnqOiG+3MDM8GeZjfuGe5fuoum4eqZeS0WdUHXw==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-html/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-image/-/transformer-image-2.7.0.tgz",
      "integrity": "sha512-mhi9/R5/ULhCkL2COVIKhNFoLDiZwQgprdaTJr5fnODggVxEX5o7ebFV6KNLMTEkwZUJWoB1hL0ziI0++DtoFA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/transformer-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-js/-/transformer-js-2.7.0.tgz",
      "integrity": "sha512-mzerR+D4rDomUSIk5RSTa2w+DXBdXUeQrpDO74WCDdpDi1lIl8ppFpqtmU7O6y6p8QsgkmS9b0g/vhcry6CJTA==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "@swc/helpers": "^0.4.2",
        "browserslist": "^4.6.6",
        "detect-libc": "^1.0.3",
        "nullthrows": "^1.1.1",
        "regenerator-runtime": "^0.13.7",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@parcel/transformer-js/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-json": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-json/-/transformer-json-2.7.0.tgz",
      "integrity": "sha512-RQjuxBpYOch+kr4a0zi77KJtOLTPYRM7iq4NN80zKnA0r0dwDUCxZBtaj2l0O0o3R4MMJnm+ncP+cB7XR7dZYA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "json5": "^2.2.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-postcss": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-postcss/-/transformer-postcss-2.7.0.tgz",
      "integrity": "sha512-b6RskXBWf0MjpC9qjR2dQ1ZdRnlOiKYseG5CEovWCqM218RtdydFKz7jS+5Gxkb6qBtOG7zGPONXdPe+gTILcA==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "clone": "^2.1.1",
        "nullthrows": "^1.1.1",
        "postcss-value-parser": "^4.2.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-postcss/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-posthtml": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-posthtml/-/transformer-posthtml-2.7.0.tgz",
      "integrity": "sha512-cP8YOiSynWJ1ycmBlhnnHeuQb2cwmklZ+BNyLUktj5p78kDy2de7VjX+dRNRHoW4H9OgEcSF4UEfDVVz5RYIhw==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-posthtml/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/transformer-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-raw/-/transformer-raw-2.7.0.tgz",
      "integrity": "sha512-sDnItWCFSDez0izK1i5cgv+kXzZTbcJh4rNpVIgmE1kBLvAz608sqgcCkavb2wVJIvLesxYM+5G4p1CwkDlZ1g==",
      "dependencies": {
        "@parcel/plugin": "2.7.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-react-refresh-wrap": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-react-refresh-wrap/-/transformer-react-refresh-wrap-2.7.0.tgz",
      "integrity": "sha512-1vRmIJzyBA1nIiXTAU6tZExq2FvJj/2F0ft6KDw8GYPv0KjmdiPo/PmaZ7JeSVOM6SdXQIQCbTmp1vkMP7DtkA==",
      "dependencies": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-refresh": "^0.9.0"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-svg/-/transformer-svg-2.7.0.tgz",
      "integrity": "sha512-ioER37zceuuE+K6ZrnjCyMUWEnv+63hIAFResc1OXxRhyt+7kzMz9ZqK0Mt6QMLwl1dxhkLmrU41n9IxzKZuSQ==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "engines": {
        "node": ">= 12.0.0",
        "parcel": "^2.7.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/transformer-svg/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/@parcel/types": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/types/-/types-2.7.0.tgz",
      "integrity": "sha512-+dhXVUnseTCpJvBTGMp0V6X13z6O/A/+CUtwEpMGZ8XSmZ4Gk44GvaTiBOp0bJpWG4fvCKp+UmC8PYbrDiiziw==",
      "dependencies": {
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/workers": "2.7.0",
        "utility-types": "^3.10.0"
      }
    },
    "node_modules/@parcel/utils": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-2.7.0.tgz",
      "integrity": "sha512-jNZ5bIGg1r1RDRKi562o4kuVwnz+XJ2Ie3b0Zwrqwvgfj6AbRFIKzDd+h85dWWmcDYzKUbHp11u6VJl1u8Vapg==",
      "dependencies": {
        "@parcel/codeframe": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/markdown-ansi": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "chalk": "^4.1.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.0.5.tgz",
      "integrity": "sha512-x0hUbjv891omnkcHD7ZOhiyyUqUUR6MNjq89JhEI3BxppeKWAm6NPQsqqRrAkCJBogdT/o/My21sXtTI9rJIsw==",
      "hasInstallScript": true,
      "dependencies": {
        "node-addon-api": "^3.2.1",
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/workers": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-2.7.0.tgz",
      "integrity": "sha512-99VfaOX+89+RaoTSyH9ZQtkMBFZBFMvJmVJ/GeJT6QCd2wtKBStTHlaSnQOkLD/iRjJCNwV2xpZmm8YkTwV+hg==",
      "dependencies": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chrome-trace-event": "^1.0.2",
        "nullthrows": "^1.1.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "peerDependencies": {
        "@parcel/core": "^2.7.0"
      }
    },
    "node_modules/@segment/loosely-validate-event": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@segment/loosely-validate-event/-/loosely-validate-event-2.0.0.tgz",
      "integrity": "sha512-ZMCSfztDBqwotkl848ODgVcAmN4OItEWDCkshcKz0/W6gGSQayuuCtWV/MlodFivAZD793d6UgANd6wCXUfrIw==",
      "dev": true,
      "dependencies": {
        "component-type": "^1.2.1",
        "join-component": "^1.1.0"
      }
    },
    "node_modules/@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sinonjs/commons": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
      "integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
      "dev": true,
      "dependencies": {
        "type-detect": "4.0.8"
      }
    },
    "node_modules/@sinonjs/fake-timers": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-8.1.0.tgz",
      "integrity": "sha512-OAPJUAtgeINhh/TAlUID4QTs53Njm7xzddaVlEs/SXwgtiD1tW22zAB/W1wdqfrpmikgaWQ9Fw6Ws+hsiRm5Vg==",
      "dev": true,
      "dependencies": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "node_modules/@swc/helpers": {
      "version": "0.4.7",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.4.7.tgz",
      "integrity": "sha512-jJKr/2JOivCQxb5Xpli3asedRLH34QgJ3G+7gm6CoCOwt/LDDX9g67OuxvjFOiYZfngWYB66ZbjU6cUNtQdavg==",
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@swc/helpers/node_modules/tslib": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.0.tgz",
      "integrity": "sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ=="
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "dev": true,
      "dependencies": {
        "defer-to-connect": "^1.0.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@trysound/sax": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@trysound/sax/-/sax-0.2.0.tgz",
      "integrity": "sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA==",
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/@types/istanbul-lib-coverage": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",
      "integrity": "sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g==",
      "dev": true
    },
    "node_modules/@types/istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
      "dev": true,
      "dependencies": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "node_modules/@types/istanbul-reports": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==",
      "dev": true,
      "dependencies": {
        "@types/istanbul-lib-report": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "18.7.4",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.4.tgz",
      "integrity": "sha512-RzRcw8c0B8LzryWOR4Wj7YOTFXvdYKwvrb6xQQyuDfnlTxwYXGCV5RZ/TEbq5L5kn+w3rliHAUyRcG1RtbmTFg==",
      "dev": true
    },
    "node_modules/@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA=="
    },
    "node_modules/@types/stack-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz",
      "integrity": "sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw==",
      "dev": true
    },
    "node_modules/@types/yargs": {
      "version": "16.0.4",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-16.0.4.tgz",
      "integrity": "sha512-T8Yc9wt/5LbJyCaLiHPReJa0kApcIgJ7Bn735GjItUfh08Z1pJvu8QZqb9s+mMvKV6WUQRV7K2R46YbjMXTTJw==",
      "dev": true,
      "dependencies": {
        "@types/yargs-parser": "*"
      }
    },
    "node_modules/@types/yargs-parser": {
      "version": "21.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz",
      "integrity": "sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA==",
      "dev": true
    },
    "node_modules/abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
    },
    "node_modules/abortcontroller-polyfill": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.3.tgz",
      "integrity": "sha512-zetDJxd89y3X99Kvo4qFx8GKlt6GsvN3UcRZHwU6iFA/0KiOmhkTVhe8oRoTBiTVPZu09x3vCra47+w8Yz1+2Q=="
    },
    "node_modules/acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "dev": true,
      "dependencies": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      }
    },
    "node_modules/acorn-walk": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
      "dev": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/analytics-node": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/analytics-node/-/analytics-node-6.2.0.tgz",
      "integrity": "sha512-NLU4tCHlWt0tzEaFQL7NIoWhq2KmQSmz0JvyS2lYn6fc4fEjTMSabhJUx8H1r5995FX8fE3rZ15uIHU6u+ovlQ==",
      "dev": true,
      "dependencies": {
        "@segment/loosely-validate-event": "^2.0.0",
        "axios": "^0.27.2",
        "axios-retry": "3.2.0",
        "lodash.isstring": "^4.0.1",
        "md5": "^2.2.1",
        "ms": "^2.0.0",
        "remove-trailing-slash": "^0.1.0",
        "uuid": "^8.3.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "dev": true,
      "dependencies": {
        "string-width": "^4.1.0"
      }
    },
    "node_modules/ansi-align/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "dev": true,
      "optional": true
    },
    "node_modules/are-we-there-yet": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.7.tgz",
      "integrity": "sha512-nxwy40TuMiUGqMyRHgCSWZ9FM4VAoRP4xUYSTv5ImRog+h9yISPbVH7H8fASCIzYn9wlEv4zvFL7uKDMCFQm3g==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      }
    },
    "node_modules/are-we-there-yet/node_modules/readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/are-we-there-yet/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "dev": true,
      "optional": true
    },
    "node_modules/are-we-there-yet/node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true
    },
    "node_modules/ascii-table": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/ascii-table/-/ascii-table-0.0.9.tgz",
      "integrity": "sha512-xpkr6sCDIYTPqzvjG8M3ncw1YOTaloWZOyrUmicoEifBEKzQzt+ooUpRpQ/AbOoJfO/p2ZKiyp79qHThzJDulQ==",
      "dev": true
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "dev": true
    },
    "node_modules/autoprefixer": {
      "version": "10.4.8",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.8.tgz",
      "integrity": "sha512-75Jr6Q/XpTqEf6D2ltS5uMewJIx5irCU1oBYJrWjFenq/m12WRRrz6g15L1EIoYvPLXTbEry7rDOwrcYNj77xw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        }
      ],
      "dependencies": {
        "browserslist": "^4.21.3",
        "caniuse-lite": "^1.0.30001373",
        "fraction.js": "^4.2.0",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.0.0",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/axios": {
      "version": "0.27.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.27.2.tgz",
      "integrity": "sha512-t+yRIyySRTp/wua5xEr+z1q60QmLq8ABsS5O9Me1AsE5dfKqgnCFzwiCZZ/cGNd1lq4/7akDWMxdhVlucjmnOQ==",
      "dev": true,
      "dependencies": {
        "follow-redirects": "^1.14.9",
        "form-data": "^4.0.0"
      }
    },
    "node_modules/axios-retry": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/axios-retry/-/axios-retry-3.2.0.tgz",
      "integrity": "sha512-RK2cLMgIsAQBDhlIsJR5dOhODPigvel18XUv1dDXW+4k1FzebyfRk+C+orot6WPZOYFKSfhLwHPwVmTVOODQ5w==",
      "dev": true,
      "dependencies": {
        "is-retry-allowed": "^1.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true
    },
    "node_modules/binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "node_modules/bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "dev": true,
      "dependencies": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      }
    },
    "node_modules/bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "dev": true,
      "dependencies": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "node_modules/bip39/node_modules/@types/node": {
      "version": "11.11.6",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
      "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ==",
      "dev": true
    },
    "node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==",
      "dev": true
    },
    "node_modules/boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww=="
    },
    "node_modules/borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dev": true,
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/boxen": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-5.1.2.tgz",
      "integrity": "sha512-9gYgQKXx+1nP8mP7CzFyaUARhg7D3n1dF/FnErWmu9l6JvGpNUN278h0aSb+QjoiKSWG+iZ3uHrcqk0qrY9RQQ==",
      "dev": true,
      "dependencies": {
        "ansi-align": "^3.0.0",
        "camelcase": "^6.2.0",
        "chalk": "^4.1.0",
        "cli-boxes": "^2.2.1",
        "string-width": "^4.2.2",
        "type-fest": "^0.20.2",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/boxen/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/boxen/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/boxen/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dependencies": {
        "fill-range": "^7.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.21.3",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.3.tgz",
      "integrity": "sha512-898rgRXLAyRkM1GryrrBHGkqA5hlpkV5MhtZwg9QXeiyLUYs2k00Un05aX5l2/yJIOObYKOpS2JNo8nJDE7fWQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001370",
        "electron-to-chromium": "^1.4.202",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.5"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dev": true,
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true,
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ=="
    },
    "node_modules/cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "dev": true,
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cacheable-request/node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dev": true,
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cacheable-request/node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001378",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001378.tgz",
      "integrity": "sha512-JVQnfoO7FK7WvU4ZkBRbPjaot4+YqxogSDosHv0Hv5mWpUESmN+UubMU6L/hGz8QlQ2aY5U0vR6MOs6j/CXpNA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        }
      ]
    },
    "node_modules/capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg==",
      "dev": true
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA==",
      "dev": true,
      "engines": {
        "node": "*"
      }
    },
    "node_modules/chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "dev": true,
      "optional": true
    },
    "node_modules/chrome-trace-event": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
      "integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==",
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/ci-info": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
      "dev": true
    },
    "node_modules/cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dev": true,
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/cli-boxes": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
      "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
      "dev": true,
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dev": true,
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/cliui/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dev": true,
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/clone-response/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha512-RpAVKQA5T63xEj6/giIbUEtZwJ4UFIc3ZtvEkiaUERylqe8xb5IvqcgOurZLahv93CLKfxcw5YI+DZcUBRyLXA==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dev": true,
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/component-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/component-type/-/component-type-1.2.1.tgz",
      "integrity": "sha512-Kgy+2+Uwr75vAi6ChWXgHuLvd+QLD7ssgpaRq2zCvt80ptvAfMc/hijcJxXkBa2wMlEZcJvC2H8Ubo+A9ATHIg==",
      "dev": true
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "dev": true,
      "dependencies": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/cosmiconfig": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.1.tgz",
      "integrity": "sha512-a1YWNUV2HwGimB7dU2s1wUMurNKjpx60HxBB6xUM8Re+2s1g1IIfJvFR0/iCF+XHdE0GMTKTuLR32UQff4TEyQ==",
      "dependencies": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.2.1",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.10.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dev": true,
      "dependencies": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "node_modules/create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dev": true,
      "dependencies": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "node_modules/crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow==",
      "dev": true,
      "engines": {
        "node": "*"
      }
    },
    "node_modules/crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/css-select": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-4.3.0.tgz",
      "integrity": "sha512-wPpOYtnsVontu2mODhA19JrqWxNsfdatRKd64kmpRbQgh1KtItko5sTnEpPdpSaJszTOhEMlF/RPz28qj4HqhQ==",
      "dependencies": {
        "boolbase": "^1.0.0",
        "css-what": "^6.0.1",
        "domhandler": "^4.3.1",
        "domutils": "^2.8.0",
        "nth-check": "^2.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/css-tree": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
      "integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
      "dependencies": {
        "mdn-data": "2.0.14",
        "source-map": "^0.6.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/css-what": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz",
      "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==",
      "engines": {
        "node": ">= 6"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csso": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.2.0.tgz",
      "integrity": "sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==",
      "dependencies": {
        "css-tree": "^1.1.2"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/debug": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
      "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
      "dev": true,
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/debug/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "dev": true
    },
    "node_modules/decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "mimic-response": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "dev": true,
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true
    },
    "node_modules/defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
      "dev": true
    },
    "node_modules/define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/defined": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
      "integrity": "sha512-Y2caI5+ZwS5c3RiNDJ6u53VhQHv+hHKwhkI1iHvceKUHw9Df6EK2zRLfjejRgMuCuxK7PfSWIMwWecceVvThjQ==",
      "dev": true
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "dev": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true,
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/detective": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/detective/-/detective-5.2.1.tgz",
      "integrity": "sha512-v9XE1zRnz1wRtgurGu0Bs8uHKFSTdteYZNbIPFVhUZ39L/S79ppMpdmVOZAnoz1jfEFodc48n6MX483Xo3t1yw==",
      "dev": true,
      "dependencies": {
        "acorn-node": "^1.8.2",
        "defined": "^1.0.0",
        "minimist": "^1.2.6"
      },
      "bin": {
        "detective": "bin/detective.js"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true
    },
    "node_modules/dom-serializer": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
      "integrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag==",
      "dependencies": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.0",
        "entities": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/dom-serializer?sponsor=1"
      }
    },
    "node_modules/dom-serializer/node_modules/entities": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
      "integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==",
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ]
    },
    "node_modules/domhandler": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-4.3.1.tgz",
      "integrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ==",
      "dependencies": {
        "domelementtype": "^2.2.0"
      },
      "engines": {
        "node": ">= 4"
      },
      "funding": {
        "url": "https://github.com/fb55/domhandler?sponsor=1"
      }
    },
    "node_modules/domutils": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-2.8.0.tgz",
      "integrity": "sha512-w96Cjofp72M5IIhpjgobBimYEfoPjx1Vx0BSX9P30WBdZW2WIKU0T1Bd0kz2eNZ9ikjKgHbEyKx8BB6H1L3h3A==",
      "dependencies": {
        "dom-serializer": "^1.0.1",
        "domelementtype": "^2.2.0",
        "domhandler": "^4.2.0"
      },
      "funding": {
        "url": "https://github.com/fb55/domutils?sponsor=1"
      }
    },
    "node_modules/dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "dev": true,
      "dependencies": {
        "is-obj": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dotenv": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-7.0.0.tgz",
      "integrity": "sha512-M3NhsLbV1i6HuGzBUH8vXrtxOk+tWmzWKDMbAVSUp3Zsjm7ywFeuwrUXhmhQyRK1q5B5GGy7hcXPbj3bnfZg2g==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA=="
    },
    "node_modules/duplexer3": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.5.tgz",
      "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA==",
      "dev": true
    },
    "node_modules/electron-to-chromium": {
      "version": "1.4.225",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.225.tgz",
      "integrity": "sha512-ICHvGaCIQR3P88uK8aRtx8gmejbVJyC6bB4LEC3anzBrIzdzC7aiZHY4iFfXhN4st6I7lMO0x4sgBHf/7kBvRw=="
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "node_modules/end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/entities": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-3.0.1.tgz",
      "integrity": "sha512-WiyBqoomrwMdFG1e0kqvASYfnlb0lp8M5o5Fw2OFq1hNZxxcNk8Ik0Xm7LxzBhuidnZB/UtBqVCgUz3kBOP51Q==",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dev": true,
      "dependencies": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-glob": {
      "version": "3.2.11",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.11.tgz",
      "integrity": "sha512-xrO3+1bxSo3ZVHAnqzyuewYT6aMFHRAd4Kcs92MAonjwQZLsK9d0SF1IyQ3k5PoirxTW0Oe/RqFgMQ6TcNE5Ew==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "dev": true,
      "optional": true
    },
    "node_modules/fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/flagged-respawn": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q==",
      "dev": true,
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.1.tgz",
      "integrity": "sha512-yLAMQs+k0b2m7cVxpS1VKJVvoz7SS9Td1zss3XRwXj+ZDH00RJgnuLx7E44wx02kQLrdM3aOOy+FpzS7+8OizA==",
      "dev": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "dev": true,
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.2.0.tgz",
      "integrity": "sha512-MhLuK+2gUcnZe8ZHlaaINnQLl0xRIGRfcGk2yl8xoQAfHrSsL3rYu6FCmBdkdbhc9EPlwyGHewaRsvwRMJtAlA==",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/infusion"
      }
    },
    "node_modules/fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "dev": true,
      "optional": true
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "node_modules/gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha512-14x4kjc6lkD3ltw589k0NrPD6cCNTD6CWoVUNpB85+DrtONoZn+Rug6xZU5RvSC4+TZPxA5AnBibQYAvZn41Hg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true,
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-port": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-4.2.0.tgz",
      "integrity": "sha512-/b3jarXkH8KJoOMQc3uVGHASwGLPq3gSFJ7tgJm2diza+bydJPTGOibin2steecKeOylE8oY2JERlVWkAJO6yw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "dev": true,
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
      "dev": true,
      "optional": true
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/global-dirs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz",
      "integrity": "sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==",
      "dev": true,
      "dependencies": {
        "ini": "2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/global-dirs/node_modules/ini": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
      "integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/globals": {
      "version": "13.17.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.17.0.tgz",
      "integrity": "sha512-1C+6nQRb1GwGMKm2dH/E7enFAMxGTmGI7/dEdhy/DNelv85w9B72t3uc5frtMNXIbzrarJJ/lTCjcaZwbLJmyw==",
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "dev": true,
      "dependencies": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/got/node_modules/decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
      "dev": true,
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/got/node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "dev": true,
      "dependencies": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/history": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/history/-/history-5.3.0.tgz",
      "integrity": "sha512-ZqaKwjjrAYUYfLG+htGaIIZ4nioX2L70ZUMIFysS3xvBsSG4x/n1V6TXV3N8ZYNuFGlDirFg32T7B6WOUPDYcQ==",
      "dependencies": {
        "@babel/runtime": "^7.7.6"
      }
    },
    "node_modules/homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "dev": true,
      "dependencies": {
        "parse-passwd": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/htmlnano": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-2.0.2.tgz",
      "integrity": "sha512-+ZrQFS4Ub+zd+/fWwfvoYCEGNEa0/zrpys6CyXxvZDwtL7Pl+pOtRkiujyvBQ7Lmfp7/iEPxtOFgxWA16Gkj3w==",
      "dependencies": {
        "cosmiconfig": "^7.0.1",
        "posthtml": "^0.16.5",
        "timsort": "^0.3.0"
      },
      "peerDependencies": {
        "cssnano": "^5.0.11",
        "postcss": "^8.3.11",
        "purgecss": "^4.0.3",
        "relateurl": "^0.2.7",
        "srcset": "^5.0.0",
        "svgo": "^2.8.0",
        "terser": "^5.10.0",
        "uncss": "^0.17.3"
      },
      "peerDependenciesMeta": {
        "cssnano": {
          "optional": true
        },
        "postcss": {
          "optional": true
        },
        "purgecss": {
          "optional": true
        },
        "relateurl": {
          "optional": true
        },
        "srcset": {
          "optional": true
        },
        "svgo": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "uncss": {
          "optional": true
        }
      }
    },
    "node_modules/htmlparser2": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-7.2.0.tgz",
      "integrity": "sha512-H7MImA4MS6cw7nbyURtLPO1Tms7C5H602LRETv95z1MxO/7CP7rDVROehUYeYBUYEON94NXXDEPmZuq+hX4sog==",
      "funding": [
        "https://github.com/fb55/htmlparser2?sponsor=1",
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "dependencies": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.2",
        "domutils": "^2.8.0",
        "entities": "^3.0.1"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dev": true,
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "dev": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true
    },
    "node_modules/ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA=="
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha512-m7ZEHgtw69qOGw+jwxXkHlrlIPdTGkyh66zXZ1ajZbxkDBNjSY/LGbmjc7h0s2ELsUDTAhFr55TrPSSqJGPG0A==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dev": true,
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true
    },
    "node_modules/ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==",
      "dev": true
    },
    "node_modules/ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
      "dev": true
    },
    "node_modules/is-ci": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
      "dev": true,
      "dependencies": {
        "ci-info": "^2.0.0"
      },
      "bin": {
        "is-ci": "bin.js"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "dev": true,
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==",
      "dev": true,
      "bin": {
        "is-docker": "cli.js"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "number-is-nan": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-installed-globally": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
      "integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
      "dev": true,
      "dependencies": {
        "global-dirs": "^3.0.0",
        "is-path-inside": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-json": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-json/-/is-json-2.0.1.tgz",
      "integrity": "sha512-6BEnpVn1rcf3ngfmViLM6vjUjGErbdrL4rwlv+u1NO1XO8kqT4YGL8+19Q+Z/bas8tY90BTWMk2+fW1g6hQjbA=="
    },
    "node_modules/is-npm": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
      "integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
      "dev": true
    },
    "node_modules/is-url": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==",
      "dev": true
    },
    "node_modules/is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "dev": true,
      "dependencies": {
        "is-docker": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
      "dev": true
    },
    "node_modules/is2": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/is2/-/is2-2.0.7.tgz",
      "integrity": "sha512-4vBQoURAXC6hnLFxD4VW7uc04XiwTTl/8ydYJxKvPwkWQrSjInkuM5VZVg6BGr1/natq69zDuvO9lGpLClJqvA==",
      "dev": true,
      "dependencies": {
        "deep-is": "^0.1.3",
        "ip-regex": "^4.1.0",
        "is-url": "^1.2.4"
      },
      "engines": {
        "node": ">=v0.10.0"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/jest-environment-node": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-27.5.1.tgz",
      "integrity": "sha512-Jt4ZUnxdOsTGwSRAfKEnE6BcwsSPNOijjwifq5sDFSA2kesnXTvNqKHYgM0hDq3549Uf/KzdXNYn4wMZJPlFLw==",
      "dev": true,
      "dependencies": {
        "@jest/environment": "^27.5.1",
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-message-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-27.5.1.tgz",
      "integrity": "sha512-rMyFe1+jnyAAf+NHwTclDz0eAaLkVDdKVHHBFWsBWHnnh5YeJMNWWsv7AbFYXfK3oTqvL7VTWkhNLu1jX24D+g==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.12.13",
        "@jest/types": "^27.5.1",
        "@types/stack-utils": "^2.0.0",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "micromatch": "^4.0.4",
        "pretty-format": "^27.5.1",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-mock": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-27.5.1.tgz",
      "integrity": "sha512-K4jKbY1d4ENhbrG2zuPWaQBvDly+iZ2yAW+T1fATN78hc0sInwn7wZB8XtlNnvHug5RMwV897Xm4LqmPM4e2Og==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@types/node": "*"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-27.5.1.tgz",
      "integrity": "sha512-Kv2o/8jNvX1MQ0KGtw480E/w4fBCDOnH6+6DmeKi6LZUIlKA5kwY0YNdlzaWTiVgxqAqik11QyxDOKk543aKXw==",
      "dev": true,
      "dependencies": {
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "graceful-fs": "^4.2.9",
        "picomatch": "^2.2.3"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/jest-util/node_modules/ci-info": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.3.2.tgz",
      "integrity": "sha512-xmDt/QIAdeZ9+nfdPsaBCpMvHNLFiLdjj59qjqn+6iPe6YmHGQ35sBnQ8uslRBXFmXkiZQOJRjvQeoGppoTjjg==",
      "dev": true
    },
    "node_modules/join-component": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/join-component/-/join-component-1.1.0.tgz",
      "integrity": "sha512-bF7vcQxbODoGK1imE2P9GS9aw4zD0Sd+Hni68IMZLj7zRnquH7dXUmMw9hDI5S/Jzt7q+IyTXN0rSg2GI0IKhQ==",
      "dev": true
    },
    "node_modules/js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
      "dev": true
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha512-CuUqjv0FUZIdXkHPI8MezCnFCdaTAacej1TZYulLoAg1h/PhwkdXFN4V/gzY4g+fMBCOV2xF+rp7t2XD2ns/NQ==",
      "dev": true
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "node_modules/json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "dev": true,
      "dependencies": {
        "json-buffer": "3.0.0"
      }
    },
    "node_modules/latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "dev": true,
      "dependencies": {
        "package-json": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lilconfig": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.0.6.tgz",
      "integrity": "sha512-9JROoBW7pobfsx+Sq2JsASvCo6Pfo6WWoUW79HuB1BCoBXD4PLWJPqDF6fNj67pqBYTbAHkE57M1kS/+L1neOg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "node_modules/lmdb": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/lmdb/-/lmdb-2.5.2.tgz",
      "integrity": "sha512-V5V5Xa2Hp9i2XsbDALkBTeHXnBXh/lEmk9p22zdr7jtuOIY9TGhjK6vAvTpOOx9IKU4hJkRWZxn/HsvR1ELLtA==",
      "hasInstallScript": true,
      "dependencies": {
        "msgpackr": "^1.5.4",
        "node-addon-api": "^4.3.0",
        "node-gyp-build-optional-packages": "5.0.3",
        "ordered-binary": "^1.2.4",
        "weak-lru-cache": "^1.2.2"
      },
      "optionalDependencies": {
        "@lmdb/lmdb-darwin-arm64": "2.5.2",
        "@lmdb/lmdb-darwin-x64": "2.5.2",
        "@lmdb/lmdb-linux-arm": "2.5.2",
        "@lmdb/lmdb-linux-arm64": "2.5.2",
        "@lmdb/lmdb-linux-x64": "2.5.2",
        "@lmdb/lmdb-win32-x64": "2.5.2"
      }
    },
    "node_modules/lmdb/node_modules/node-addon-api": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
      "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ=="
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true,
      "optional": true
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "dev": true
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "peer": true,
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dev": true,
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "dev": true,
      "dependencies": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "node_modules/md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dev": true,
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "node_modules/mdn-data": {
      "version": "2.0.14",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz",
      "integrity": "sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow=="
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "dev": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dev": true,
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q==",
      "dev": true
    },
    "node_modules/mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "dev": true,
      "optional": true
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/msgpackr": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/msgpackr/-/msgpackr-1.6.2.tgz",
      "integrity": "sha512-bqSQ0DYJbXbrJcrZFmMygUZmqQiDfI2ewFVWcrZY12w5XHWtPuW4WppDT/e63Uu311ajwkRRXSoF0uILroBeTA==",
      "optionalDependencies": {
        "msgpackr-extract": "^2.0.2"
      }
    },
    "node_modules/msgpackr-extract": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-2.1.2.tgz",
      "integrity": "sha512-cmrmERQFb19NX2JABOGtrKdHMyI6RUyceaPBQ2iRz9GnDkjBWFjNJC0jyyoOfZl2U/LZE3tQCCQc4dlRyA8mcA==",
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "node-gyp-build-optional-packages": "5.0.3"
      },
      "bin": {
        "download-msgpackr-prebuilds": "bin/download-prebuilds.js"
      },
      "optionalDependencies": {
        "@msgpackr-extract/msgpackr-extract-darwin-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-darwin-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-win32-x64": "2.1.2"
      }
    },
    "node_modules/mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "dev": true,
      "bin": {
        "mustache": "bin/mustache"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.4.tgz",
      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw==",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/napi-build-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
      "dev": true,
      "optional": true
    },
    "node_modules/ncp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
      "integrity": "sha512-zIdGUrPRFTUELUvr3Gmc7KZ2Sw/h1PiVM0Af/oHB6zgnV1ikqSfRk+TOufi79aHYCW3NiOXmr1BP5nWbzojLaA==",
      "dev": true,
      "bin": {
        "ncp": "bin/ncp"
      }
    },
    "node_modules/near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dev": true,
      "dependencies": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/near-api-js/node_modules/bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==",
      "dev": true
    },
    "node_modules/near-cli": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/near-cli/-/near-cli-3.4.2.tgz",
      "integrity": "sha512-0EaNAw5SKSIIJrJajG32CNMGfBtZTgIrOVKSXBTWpvo+F0OozsbvuO4UG3ZSRNThXHijxybp58SqPiU3JuzXGA==",
      "dev": true,
      "dependencies": {
        "analytics-node": "^6.1.0",
        "ascii-table": "0.0.9",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "chalk": "^4.0.0",
        "flagged-respawn": "^1.0.1",
        "is-ci": "^2.0.0",
        "jest-environment-node": "^27.0.6",
        "ncp": "^2.0.0",
        "near-api-js": "^0.44.2",
        "near-seed-phrase": "^0.2.0",
        "open": "^8.0.7",
        "rimraf": "^3.0.0",
        "stoppable": "^1.1.0",
        "tcp-port-used": "^1.0.1",
        "update-notifier": "^5.0.0",
        "uuid": "^8.0.0",
        "v8flags": "^3.1.3",
        "yargs": "^16.0.3"
      },
      "bin": {
        "near": "bin/near"
      },
      "engines": {
        "node": ">= 12"
      },
      "optionalDependencies": {
        "@ledgerhq/hw-transport-node-hid": "^6.1.0",
        "near-ledger-js": "^0.2.0"
      }
    },
    "node_modules/near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "dev": true,
      "dependencies": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      }
    },
    "node_modules/near-ledger-js": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/near-ledger-js/-/near-ledger-js-0.2.1.tgz",
      "integrity": "sha512-8anZb6e96gJNBOKUR/HReLN/x8BmBhCpyPq+XxFbx8jxmsRz+M1Hxq085+ROYaMI2EDJqatrjjLAdArk13BOhA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "@ledgerhq/hw-transport-u2f": "^5.36.0-deprecated",
        "@ledgerhq/hw-transport-webhid": "^5.51.1",
        "@ledgerhq/hw-transport-webusb": "^5.53.1",
        "bs58": "^4.0.1",
        "platform": "^1.3.6"
      }
    },
    "node_modules/near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "dev": true,
      "dependencies": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "node_modules/node-abi": {
      "version": "2.30.1",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.30.1.tgz",
      "integrity": "sha512-/2D0wOQPgaUWzVSVgRMx+trKJRC2UG4SUc4oCJoXx9Uxjtp0Vy3/kt7zcbxHF8+Z/pK3UloLWzBISg72brfy1w==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "semver": "^5.4.1"
      }
    },
    "node_modules/node-abi/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true,
      "optional": true,
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A=="
    },
    "node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dev": true,
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg==",
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-gyp-build-optional-packages": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.3.tgz",
      "integrity": "sha512-k75jcVzk5wnnc/FMxsf4udAoTEUv2jY3ycfdSd3yWu6Cnd1oee6/CfZJApyscA4FJOmdoixWwiwOyf16RzD5JA==",
      "bin": {
        "node-gyp-build-optional-packages": "bin.js",
        "node-gyp-build-optional-packages-optional": "optional.js",
        "node-gyp-build-optional-packages-test": "build-test.js"
      }
    },
    "node_modules/node-hid": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
      "integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "bindings": "^1.5.0",
        "node-addon-api": "^3.0.2",
        "prebuild-install": "^6.0.0"
      },
      "bin": {
        "hid-showdevices": "src/show-devices.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "node_modules/nodemon": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.19.tgz",
      "integrity": "sha512-4pv1f2bMDj0Eeg/MhGqxrtveeQ5/G/UVe9iO6uTZzjnRluSA4PVWf8CW99LUPwGB3eNIA7zUFoP77YuI7hOc0A==",
      "hasInstallScript": true,
      "dependencies": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.0.4",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "bin": {
        "nodemon": "bin/nodemon.js"
      },
      "engines": {
        "node": ">=8.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nodemon"
      }
    },
    "node_modules/nodemon/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/nodemon/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/nodemon/node_modules/semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/nodemon/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "dependencies": {
        "abbrev": "1"
      },
      "bin": {
        "nopt": "bin/nopt.js"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-url": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
      "integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "node_modules/nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "dependencies": {
        "boolbase": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/fb55/nth-check?sponsor=1"
      }
    },
    "node_modules/nullthrows": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/nullthrows/-/nullthrows-1.1.1.tgz",
      "integrity": "sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw=="
    },
    "node_modules/number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dev": true,
      "dependencies": {
        "capability": "^0.2.5"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/open": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.0.tgz",
      "integrity": "sha512-XgFPPM+B28FtCCgSb9I+s9szOC1vZRSwgWsRUA5ylIxRTgKozqjOCrVOqGsYABPYK5qnfqClxZTFBa8PKt2v6Q==",
      "dev": true,
      "dependencies": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ordered-binary": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/ordered-binary/-/ordered-binary-1.3.0.tgz",
      "integrity": "sha512-knIeYepTI6BDAzGxqFEDGtI/iGqs57H32CInAIxEvAHG46vk1Di0CEpyc1A7iY39B1mfik3g3KLYwOTNnnMHLA=="
    },
    "node_modules/p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "dev": true,
      "dependencies": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/package-json/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/parcel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/parcel/-/parcel-2.7.0.tgz",
      "integrity": "sha512-pRYwnivwtNP0tip8xYSo4zCB0XhLt7/gJzP1p8OovCqkmFjG9VG+GW9TcAKqMIo0ovEa9tT+/s6gY1Qy+BONGQ==",
      "dependencies": {
        "@parcel/config-default": "2.7.0",
        "@parcel/core": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/reporter-cli": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "get-port": "^4.2.0",
        "v8-compile-cache": "^2.0.0"
      },
      "bin": {
        "parcel": "lib/bin.js"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "dev": true,
      "dependencies": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      },
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/platform": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/platform/-/platform-1.3.6.tgz",
      "integrity": "sha512-fnWVljUchTro6RiCFvCXBbNhJc2NijN7oIQxbwsyL0buWJPG85v81ehlHI9fXrJsMNgTofEoWIQeClKpgxFLrg==",
      "dev": true,
      "optional": true
    },
    "node_modules/postcss": {
      "version": "8.4.16",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.16.tgz",
      "integrity": "sha512-ipHE1XBvKzm5xI7hiHCZJCSugxvsdq2mPnsq5+UF+VHCjiBvtDrlxJfMBToWaP9D5XlgNmcFGqoHmUn0EYEaRQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.4",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz",
      "integrity": "sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==",
      "dev": true,
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.0.tgz",
      "integrity": "sha512-77QESFBwgX4irogGVPgQ5s07vLvFqWr228qZY+w6lW599cRlK/HmnlivnnVUxkjHnCu4J16PDMHcH+e+2HbvTQ==",
      "dev": true,
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.3.3"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
      "integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
      "dev": true,
      "dependencies": {
        "lilconfig": "^2.0.5",
        "yaml": "^1.10.2"
      },
      "engines": {
        "node": ">= 10"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-5.0.6.tgz",
      "integrity": "sha512-rKqm2Fk0KbA8Vt3AdGN0FB9OBOMDVajMG6ZCf/GoHgdxUJ4sBFp0A/uMIRm+MJUdo33YXEtjqIz8u7DAp8B7DA==",
      "dev": true,
      "dependencies": {
        "postcss-selector-parser": "^6.0.6"
      },
      "engines": {
        "node": ">=12.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dev": true,
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "node_modules/posthtml": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.16.6.tgz",
      "integrity": "sha512-JcEmHlyLK/o0uGAlj65vgg+7LIms0xKXe60lcDOTU7oVX/3LuEuLwrQpW3VJ7de5TaFKiW4kWkaIpJL42FEgxQ==",
      "dependencies": {
        "posthtml-parser": "^0.11.0",
        "posthtml-render": "^3.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/posthtml-parser": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.10.2.tgz",
      "integrity": "sha512-PId6zZ/2lyJi9LiKfe+i2xv57oEjJgWbsHGGANwos5AvdQp98i6AtamAl8gzSVFGfQ43Glb5D614cvZf012VKg==",
      "dependencies": {
        "htmlparser2": "^7.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/posthtml-render": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-3.0.0.tgz",
      "integrity": "sha512-z+16RoxK3fUPgwaIgH9NGnK1HKY9XIDpydky5eQGgAFVXTCSezalv9U2jQuNV+Z9qV1fDWNzldcw4eK0SSbqKA==",
      "dependencies": {
        "is-json": "^2.0.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/posthtml/node_modules/posthtml-parser": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.11.0.tgz",
      "integrity": "sha512-QecJtfLekJbWVo/dMAA+OSwY79wpRmbqS5TeXvXSX+f0c6pW4/SE6inzZ2qkU7oAMCPqIDkZDvd/bQsSFUnKyw==",
      "dependencies": {
        "htmlparser2": "^7.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/prebuild-install": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.1.4.tgz",
      "integrity": "sha512-Z4vpywnK1lBg+zdPCVCsKq0xO66eEV9rWo2zrROGGiRS4JtueBOdlB1FnY8lcy7JsUud/Q3ijUxyWN26Ika0vQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "detect-libc": "^1.0.3",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^1.0.1",
        "node-abi": "^2.21.0",
        "npmlog": "^4.0.1",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^3.0.3",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      },
      "bin": {
        "prebuild-install": "bin.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/prepend-http": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
      "integrity": "sha512-ravE6m9Atw9Z/jjttRUZ+clIXogdghyZAuWJ3qEzjT+jI/dL1ifAqhZeC5VHzQp1MSt1+jxKkFNemj/iO7tVUA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pretty-format": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
      "integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1",
        "ansi-styles": "^5.0.0",
        "react-is": "^17.0.1"
      },
      "engines": {
        "node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
      }
    },
    "node_modules/pretty-format/node_modules/ansi-styles": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
      "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "dev": true,
      "optional": true
    },
    "node_modules/pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w=="
    },
    "node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "dev": true,
      "dependencies": {
        "escape-goat": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dev": true,
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "dev": true,
      "dependencies": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      },
      "bin": {
        "rc": "cli.js"
      }
    },
    "node_modules/react": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
      "peer": true,
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
      "peer": true,
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.0"
      },
      "peerDependencies": {
        "react": "^18.2.0"
      }
    },
    "node_modules/react-error-overlay": {
      "version": "6.0.9",
      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.9.tgz",
      "integrity": "sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew=="
    },
    "node_modules/react-ipfs-image": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/react-ipfs-image/-/react-ipfs-image-0.6.0.tgz",
      "integrity": "sha512-Ms17ZQFpzUGxz0QXB3wsSW4qTQkD6m0vxkwdXJ6nVsDKuta+QG9qRBITMhO5avYnOiLARJfLZOChVbYbdNJ/Rw==",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "react": ">=16"
      }
    },
    "node_modules/react-is": {
      "version": "17.0.2",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
      "dev": true
    },
    "node_modules/react-refresh": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.9.0.tgz",
      "integrity": "sha512-Gvzk7OZpiqKSkxsQvO/mbTN1poglhmAV7gR/DdIrRrSMXraRQQlfikRJOr3Nb9GTMPC5kof948Zy6jJZIFtDvQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.3.0.tgz",
      "integrity": "sha512-7Wh1DzVQ+tlFjkeo+ujvjSqSJmkt1+8JO+T5xklPlgrh70y7ogx75ODRW0ThWhY7S+6yEDks8TYrtQe/aoboBQ==",
      "dependencies": {
        "history": "^5.2.0"
      },
      "peerDependencies": {
        "react": ">=16.8"
      }
    },
    "node_modules/react-router-dom": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.3.0.tgz",
      "integrity": "sha512-uaJj7LKytRxZNQV8+RbzJWnJ8K2nPsOOEuX7aQstlMZKQT0164C+X2w6bnkqU3sjtLvpd5ojrezAyfZ1+0sStw==",
      "dependencies": {
        "history": "^5.2.0",
        "react-router": "6.3.0"
      },
      "peerDependencies": {
        "react": ">=16.8",
        "react-dom": ">=16.8"
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "dev": true,
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.9",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
    },
    "node_modules/registry-auth-token": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.2.tgz",
      "integrity": "sha512-PC5ZysNb42zpFME6D/XlIgtNGdTl8bBOCw90xQLVMpzuuubJKYDWFAEuUNc+Cn8Z8724tg2SDhDRrkVEsqfDMg==",
      "dev": true,
      "dependencies": {
        "rc": "1.2.8"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "dev": true,
      "dependencies": {
        "rc": "^1.2.8"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/remove-trailing-slash": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/remove-trailing-slash/-/remove-trailing-slash-0.1.1.tgz",
      "integrity": "sha512-o4S4Qh6L2jpnCy83ysZDau+VORNvnFw07CKSAymkd6ICNVEPisMyzlc00KlvvicsxKck94SEwhDnMNdICzO+tA==",
      "dev": true
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha512-/Fpe5guzJk1gPqdJLJR5u7eG/gNY4nImjbRDaVWVMRhne55TCmj2i9Q+54PBRfatRC8v/rIiv9BN0pMd9OV5EQ==",
      "dev": true,
      "dependencies": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "dev": true,
      "dependencies": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "tslib": "^1.9.0"
      },
      "engines": {
        "npm": ">=2.0.0"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/scheduler": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz",
      "integrity": "sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==",
      "peer": true,
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dev": true,
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "dev": true,
      "dependencies": {
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/semver-diff/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "dev": true,
      "optional": true
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true
    },
    "node_modules/sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dev": true,
      "dependencies": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      },
      "bin": {
        "sha.js": "bin.js"
      }
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "node_modules/simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "optional": true
    },
    "node_modules/simple-get": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.1.tgz",
      "integrity": "sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/simple-update-notifier": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.0.7.tgz",
      "integrity": "sha512-BBKgR84BJQJm6WjWFMHgLVuo61FBDSj1z/xSFUIozqO6wO7ii0JxCqlIud7Enr/+LhlbNI0whErq96P2qHNWew==",
      "dependencies": {
        "semver": "~7.0.0"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/simple-update-notifier/node_modules/semver": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
      "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz",
      "integrity": "sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "deprecated": "Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibility"
    },
    "node_modules/stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "dev": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/stoppable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz",
      "integrity": "sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==",
      "dev": true,
      "engines": {
        "node": ">=4",
        "npm": ">=6"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dev": true,
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "ansi-regex": "^2.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi/node_modules/ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==",
      "dev": true,
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/svgo": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-2.8.0.tgz",
      "integrity": "sha512-+N/Q9kV1+F+UeWYoSiULYo4xYSDQlTgb+ayMobAXPwMnLvop7oxKMo9OzIrX5x3eS4L4f2UHhc9axXwY8DpChg==",
      "dependencies": {
        "@trysound/sax": "0.2.0",
        "commander": "^7.2.0",
        "css-select": "^4.1.3",
        "css-tree": "^1.1.3",
        "csso": "^4.2.0",
        "picocolors": "^1.0.0",
        "stable": "^0.1.8"
      },
      "bin": {
        "svgo": "bin/svgo"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.1.8.tgz",
      "integrity": "sha512-YSneUCZSFDYMwk+TGq8qYFdCA3yfBRdBlS7txSq0LUmzyeqRe3a8fBQzbz9M3WS/iFT4BNf/nmw9mEzrnSaC0g==",
      "dev": true,
      "dependencies": {
        "arg": "^5.0.2",
        "chokidar": "^3.5.3",
        "color-name": "^1.1.4",
        "detective": "^5.2.1",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.2.11",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "lilconfig": "^2.0.6",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.0.0",
        "postcss": "^8.4.14",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "5.0.6",
        "postcss-selector-parser": "^6.0.10",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        "resolve": "^1.22.1"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.9"
      }
    },
    "node_modules/tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tcp-port-used": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
      "integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
      "dev": true,
      "dependencies": {
        "debug": "4.3.1",
        "is2": "^2.0.6"
      }
    },
    "node_modules/term-size": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
      "integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terser": {
      "version": "5.14.2",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.14.2.tgz",
      "integrity": "sha512-oL0rGeM/WFQCUd0y2QrWxYnq7tfSuKBiqTjRPWrRgB46WD/kiwHwF8T23z78H6Q6kGCuuHcPB+KULHRdxvVGQA==",
      "dependencies": {
        "@jridgewell/source-map": "^0.3.2",
        "acorn": "^8.5.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser/node_modules/acorn": {
      "version": "8.8.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/terser/node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==",
      "dev": true
    },
    "node_modules/timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha512-qsdtZH+vMoCARQtyod4imc2nIJwg9Cc7lPRrw9CzF8ZKR0khdr8+2nX80PBhET3tcyTtJDxAffGh2rXH4tyU8A=="
    },
    "node_modules/to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true,
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "dependencies": {
        "nopt": "~1.0.10"
      },
      "bin": {
        "nodetouch": "bin/nodetouch.js"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "dev": true
    },
    "node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "optional": true
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
      "dev": true
    },
    "node_modules/type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "dependencies": {
        "is-typedarray": "^1.0.0"
      }
    },
    "node_modules/u2f-api": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/u2f-api/-/u2f-api-0.2.7.tgz",
      "integrity": "sha512-fqLNg8vpvLOD5J/z4B6wpPg4Lvowz1nJ9xdHcCzdUPKcFE/qNCceV2gNZxSJd5vhAZemHr/K/hbzVA0zxB5mkg==",
      "dev": true,
      "optional": true
    },
    "node_modules/u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w==",
      "dev": true
    },
    "node_modules/undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA=="
    },
    "node_modules/unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "dev": true,
      "dependencies": {
        "crypto-random-string": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.5.tgz",
      "integrity": "sha512-dteFFpCyvuDdr9S/ff1ISkKt/9YZxKjI9WlRR99c180GaztJtRa/fn18FdxGVKVsnPY7/a/FDN68mcvUmP4U7Q==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      },
      "bin": {
        "browserslist-lint": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/update-notifier": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
      "integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
      "dev": true,
      "dependencies": {
        "boxen": "^5.0.0",
        "chalk": "^4.1.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.4.0",
        "is-npm": "^5.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.1.0",
        "pupa": "^2.1.1",
        "semver": "^7.3.4",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/yeoman/update-notifier?sponsor=1"
      }
    },
    "node_modules/url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha512-NjFKA0DidqPa5ciFcSrXnAltTtzz84ogy+NebPvfEgAck0+TNg4UJ4IN+fB7zRZfbgUf0syOo9MDxFkDSMuFaQ==",
      "dev": true,
      "dependencies": {
        "prepend-http": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/usb": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/usb/-/usb-1.9.2.tgz",
      "integrity": "sha512-dryNz030LWBPAf6gj8vyq0Iev3vPbCLHCT8dBw3gQRXRzVNsIdeuU+VjPp3ksmSPkeMAl1k+kQ14Ij0QHyeiAg==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "dependencies": {
        "node-addon-api": "^4.2.0",
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=10.16.0"
      }
    },
    "node_modules/usb/node_modules/node-addon-api": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
      "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
      "dev": true,
      "optional": true
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true
    },
    "node_modules/utility-types": {
      "version": "3.10.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.10.0.tgz",
      "integrity": "sha512-O11mqxmi7wMKCo6HKFt5AhO4BwY3VV68YU07tgxfz8zJTIxr4BpsezN49Ffwy9j3ZpwwJp4fkRwjRzq3uWE6Rg==",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "dev": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA=="
    },
    "node_modules/v8flags": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.2.0.tgz",
      "integrity": "sha512-mH8etigqMfiGWdeXpaaqGfs6BndypxusHHcv2qSHyZkGEznCd/qAXCWWRzeowtL54147cktFOC4P5y+kl8d8Jg==",
      "dev": true,
      "dependencies": {
        "homedir-polyfill": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/weak-lru-cache": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/weak-lru-cache/-/weak-lru-cache-1.2.2.tgz",
      "integrity": "sha512-DEAoo25RfSYMuTGc9vPJzZcZullwIqRDSI9LOy+fkCJPi6hykCnfKaXTuPBDuXAUcqHXyOgFtHNp/kB2FjYHbw=="
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "dev": true
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dev": true,
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/wide-align": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
      "integrity": "sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==",
      "dev": true,
      "optional": true,
      "dependencies": {
        "string-width": "^1.0.2 || 2 || 3 || 4"
      }
    },
    "node_modules/widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "dev": true,
      "dependencies": {
        "string-width": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/widest-line/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "node_modules/write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "dev": true,
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "node_modules/xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true,
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/xxhash-wasm": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/xxhash-wasm/-/xxhash-wasm-0.4.2.tgz",
      "integrity": "sha512-/eyHVRJQCirEkSZ1agRSCwriMhwlyUcFkXD5TPVSLP+IPzjsqMVzZwdoczLp1SoQU0R3dxz1RpIK+4YNQbCVOA=="
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "node_modules/yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "dev": true,
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    }
  },
  "dependencies": {
    "@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "requires": {
        "@babel/highlight": "^7.18.6"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.18.6.tgz",
      "integrity": "sha512-MmetCkz9ej86nJQV+sFCxoGGrUbU3q02kgLciwkrt9QqEB7cP39oKEY0PakknEO0Gu20SskMRi+AYZ3b1TpN9g=="
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@babel/runtime": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.18.9.tgz",
      "integrity": "sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
      "requires": {
        "regenerator-runtime": "^0.13.4"
      }
    },
    "@jest/environment": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-27.5.1.tgz",
      "integrity": "sha512-/WQjhPJe3/ghaol/4Bq480JKXV/Rfw8nQdN7f41fM8VDHLcxKXou6QyXAh3EFr9/bVG3x74z1NWDkP87EiY8gA==",
      "dev": true,
      "requires": {
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1"
      }
    },
    "@jest/fake-timers": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-27.5.1.tgz",
      "integrity": "sha512-/aPowoolwa07k7/oM3aASneNeBGCmGQsc3ugN4u6s4C/+s5M64MFo/+djTdiwcbQlRfFElGuDXWzaWj6QgKObQ==",
      "dev": true,
      "requires": {
        "@jest/types": "^27.5.1",
        "@sinonjs/fake-timers": "^8.0.1",
        "@types/node": "*",
        "jest-message-util": "^27.5.1",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      }
    },
    "@jest/types": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-27.5.1.tgz",
      "integrity": "sha512-Cx46iJ9QpwQTjIdq5VJu2QTMMs3QlEjI0x1QbBP5W1+nMzyc2XmimiRR/CbX9TO0cPTeUlxWMOu8mslYsJ8DEw==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^3.0.0",
        "@types/node": "*",
        "@types/yargs": "^16.0.0",
        "chalk": "^4.0.0"
      }
    },
    "@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "requires": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w=="
    },
    "@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw=="
    },
    "@jridgewell/source-map": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.2.tgz",
      "integrity": "sha512-m7O9o2uR8k2ObDysZYzdfhb08VuEml5oWGiosa1VdaPZ/A6QyPkAJuwN0Q1lhULOf6B7MtQmHENS743hWtCrgw==",
      "requires": {
        "@jridgewell/gen-mapping": "^0.3.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "requires": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@ledgerhq/devices": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-7.0.0.tgz",
      "integrity": "sha512-vq4B33WdU0dRAJIRFWZMj6w1W1yw1i4mekCmhk7N9wPaFrtGWZ2iI9WDihsNOBooCWKQe8Jsb9eD8RVThbSlFQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/logs": "^6.10.0",
        "rxjs": "6",
        "semver": "^7.3.5"
      }
    },
    "@ledgerhq/errors": {
      "version": "6.10.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-6.10.1.tgz",
      "integrity": "sha512-92d1zRQleR1AQ4CAXgWgDtKUms+8EwShLVUcajI+BLWvgJ1Vclmq6PsBIDEQbsm+riVu/Ji3LcHdmgFgmi0VGw==",
      "dev": true,
      "optional": true
    },
    "@ledgerhq/hw-transport": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-6.27.2.tgz",
      "integrity": "sha512-GF4pmK78rEKhZfbmunwQ131c+0MGa6L5IoYlwgFcg6CaFpUjjPiTCKUFsm4flsE0Z0Ltn9QuKoe+xEHULo7rGA==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "events": "^3.3.0"
      }
    },
    "@ledgerhq/hw-transport-node-hid": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid/-/hw-transport-node-hid-6.27.2.tgz",
      "integrity": "sha512-N2tyGLLZqgNrWA1xc9fbdFc7c7pr3dpbsMwC6LW0ilHiGWXzC6XSPSJZARO1j0G4LQIqBq7rAuNzlr4u1p4jkw==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/hw-transport": "^6.27.2",
        "@ledgerhq/hw-transport-node-hid-noevents": "^6.27.2",
        "@ledgerhq/logs": "^6.10.0",
        "lodash": "^4.17.21",
        "node-hid": "2.1.1",
        "usb": "^1.7.0"
      }
    },
    "@ledgerhq/hw-transport-node-hid-noevents": {
      "version": "6.27.2",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-6.27.2.tgz",
      "integrity": "sha512-/f0rAREa6CNq88y9NMTVVTHx3FHkmnbILhd4gDWcm7OC36mg7bLN9edbq8a4zNRdMvBKX+/Lg1hMgLdqEJagBw==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^7.0.0",
        "@ledgerhq/errors": "^6.10.1",
        "@ledgerhq/hw-transport": "^6.27.2",
        "@ledgerhq/logs": "^6.10.0",
        "node-hid": "2.1.1"
      }
    },
    "@ledgerhq/hw-transport-u2f": {
      "version": "5.36.0-deprecated",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-u2f/-/hw-transport-u2f-5.36.0-deprecated.tgz",
      "integrity": "sha512-T/+mGHIiUK/ZQATad6DMDmobCMZ1mVST952009jKzhaE1Et2Uy2secU+QhRkx3BfEAkvwa0zSRSYCL9d20Iqjg==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/errors": "^5.34.0",
        "@ledgerhq/hw-transport": "^5.34.0",
        "@ledgerhq/logs": "^5.30.0",
        "u2f-api": "0.2.7"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "dev": true,
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "@ledgerhq/hw-transport-webhid": {
      "version": "5.51.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webhid/-/hw-transport-webhid-5.51.1.tgz",
      "integrity": "sha512-w/2qSU0vwFY+D/4ucuYRViO7iS3Uuxmj9sI/Iiqkoiax9Xppb0/6H5m3ffKv6iPMmRYbgwCgXorqx4SLLSD8Kg==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "dev": true,
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "@ledgerhq/hw-transport-webusb": {
      "version": "5.53.1",
      "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-webusb/-/hw-transport-webusb-5.53.1.tgz",
      "integrity": "sha512-A/f+xcrkIAZiJrvPpDvsrjxQX4cI2kbdiunQkwsYmOG3Bp4z89ZnsBiC7YBst4n2/g+QgTg0/KPVtODU5djooQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/devices": "^5.51.1",
        "@ledgerhq/errors": "^5.50.0",
        "@ledgerhq/hw-transport": "^5.51.1",
        "@ledgerhq/logs": "^5.50.0"
      },
      "dependencies": {
        "@ledgerhq/devices": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
          "integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/errors": "^5.50.0",
            "@ledgerhq/logs": "^5.50.0",
            "rxjs": "6",
            "semver": "^7.3.5"
          }
        },
        "@ledgerhq/errors": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
          "integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
          "dev": true,
          "optional": true
        },
        "@ledgerhq/hw-transport": {
          "version": "5.51.1",
          "resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
          "integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
          "dev": true,
          "optional": true,
          "requires": {
            "@ledgerhq/devices": "^5.51.1",
            "@ledgerhq/errors": "^5.50.0",
            "events": "^3.3.0"
          }
        },
        "@ledgerhq/logs": {
          "version": "5.50.0",
          "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
          "integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "@ledgerhq/logs": {
      "version": "6.10.0",
      "resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-6.10.0.tgz",
      "integrity": "sha512-lLseUPEhSFUXYTKj6q7s2O3s2vW2ebgA11vMAlKodXGf5AFw4zUoEbTz9CoFOC9jS6xY4Qr8BmRnxP/odT4Uuw==",
      "dev": true,
      "optional": true
    },
    "@lezer/common": {
      "version": "0.15.12",
      "resolved": "https://registry.npmjs.org/@lezer/common/-/common-0.15.12.tgz",
      "integrity": "sha512-edfwCxNLnzq5pBA/yaIhwJ3U3Kz8VAUOTRg0hhxaizaI1N+qxV7EXDv/kLCkLeq2RzSFvxexlaj5Mzfn2kY0Ig=="
    },
    "@lezer/lr": {
      "version": "0.15.8",
      "resolved": "https://registry.npmjs.org/@lezer/lr/-/lr-0.15.8.tgz",
      "integrity": "sha512-bM6oE6VQZ6hIFxDNKk8bKPa14hqFrV07J/vHGOeiAbJReIaQXmkVb6xQu4MR+JBTLa5arGRyAAjJe1qaQt3Uvg==",
      "requires": {
        "@lezer/common": "^0.15.0"
      }
    },
    "@lmdb/lmdb-darwin-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-arm64/-/lmdb-darwin-arm64-2.5.2.tgz",
      "integrity": "sha512-+F8ioQIUN68B4UFiIBYu0QQvgb9FmlKw2ctQMSBfW2QBrZIxz9vD9jCGqTCPqZBRbPHAS/vG1zSXnKqnS2ch/A==",
      "optional": true
    },
    "@lmdb/lmdb-darwin-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-darwin-x64/-/lmdb-darwin-x64-2.5.2.tgz",
      "integrity": "sha512-KvPH56KRLLx4KSfKBx0m1r7GGGUMXm0jrKmNE7plbHlesZMuPJICtn07HYgQhj1LNsK7Yqwuvnqh1QxhJnF1EA==",
      "optional": true
    },
    "@lmdb/lmdb-linux-arm": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm/-/lmdb-linux-arm-2.5.2.tgz",
      "integrity": "sha512-5kQAP21hAkfW5Bl+e0P57dV4dGYnkNIpR7f/GAh6QHlgXx+vp/teVj4PGRZaKAvt0GX6++N6hF8NnGElLDuIDw==",
      "optional": true
    },
    "@lmdb/lmdb-linux-arm64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-arm64/-/lmdb-linux-arm64-2.5.2.tgz",
      "integrity": "sha512-aLl89VHL/wjhievEOlPocoefUyWdvzVrcQ/MHQYZm2JfV1jUsrbr/ZfkPPUFvZBf+VSE+Q0clWs9l29PCX1hTQ==",
      "optional": true
    },
    "@lmdb/lmdb-linux-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-linux-x64/-/lmdb-linux-x64-2.5.2.tgz",
      "integrity": "sha512-xUdUfwDJLGjOUPH3BuPBt0NlIrR7f/QHKgu3GZIXswMMIihAekj2i97oI0iWG5Bok/b+OBjHPfa8IU9velnP/Q==",
      "optional": true
    },
    "@lmdb/lmdb-win32-x64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/@lmdb/lmdb-win32-x64/-/lmdb-win32-x64-2.5.2.tgz",
      "integrity": "sha512-zrBczSbXKxEyK2ijtbRdICDygRqWSRPpZMN5dD1T8VMEW5RIhIbwFWw2phDRXuBQdVDpSjalCIUMWMV2h3JaZA==",
      "optional": true
    },
    "@mischnic/json-sourcemap": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@mischnic/json-sourcemap/-/json-sourcemap-0.1.0.tgz",
      "integrity": "sha512-dQb3QnfNqmQNYA4nFSN/uLaByIic58gOXq4Y4XqLOWmOrw73KmJPt/HLyG0wvn1bnR6mBKs/Uwvkh+Hns1T0XA==",
      "requires": {
        "@lezer/common": "^0.15.7",
        "@lezer/lr": "^0.15.4",
        "json5": "^2.2.1"
      }
    },
    "@msgpackr-extract/msgpackr-extract-darwin-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-arm64/-/msgpackr-extract-darwin-arm64-2.1.2.tgz",
      "integrity": "sha512-TyVLn3S/+ikMDsh0gbKv2YydKClN8HaJDDpONlaZR+LVJmsxLFUgA+O7zu59h9+f9gX1aj/ahw9wqa6rosmrYQ==",
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-darwin-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-darwin-x64/-/msgpackr-extract-darwin-x64-2.1.2.tgz",
      "integrity": "sha512-YPXtcVkhmVNoMGlqp81ZHW4dMxK09msWgnxtsDpSiZwTzUBG2N+No2bsr7WMtBKCVJMSD6mbAl7YhKUqkp/Few==",
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-arm": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm/-/msgpackr-extract-linux-arm-2.1.2.tgz",
      "integrity": "sha512-42R4MAFeIeNn+L98qwxAt360bwzX2Kf0ZQkBBucJ2Ircza3asoY4CDbgiu9VWklq8gWJVSJSJBwDI+c/THiWkA==",
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-arm64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-arm64/-/msgpackr-extract-linux-arm64-2.1.2.tgz",
      "integrity": "sha512-vHZ2JiOWF2+DN9lzltGbhtQNzDo8fKFGrf37UJrgqxU0yvtERrzUugnfnX1wmVfFhSsF8OxrfqiNOUc5hko1Zg==",
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-linux-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-linux-x64/-/msgpackr-extract-linux-x64-2.1.2.tgz",
      "integrity": "sha512-RjRoRxg7Q3kPAdUSC5EUUPlwfMkIVhmaRTIe+cqHbKrGZ4M6TyCA/b5qMaukQ/1CHWrqYY2FbKOAU8Hg0pQFzg==",
      "optional": true
    },
    "@msgpackr-extract/msgpackr-extract-win32-x64": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@msgpackr-extract/msgpackr-extract-win32-x64/-/msgpackr-extract-win32-x64-2.1.2.tgz",
      "integrity": "sha512-rIZVR48zA8hGkHIK7ED6+ZiXsjRCcAVBJbm8o89OKAMTmEAQ2QvoOxoiu3w2isAaWwzgtQIOFIqHwvZDyLKCvw==",
      "optional": true
    },
    "@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "requires": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      }
    },
    "@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true
    },
    "@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "requires": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      }
    },
    "@parcel/bundler-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/bundler-default/-/bundler-default-2.7.0.tgz",
      "integrity": "sha512-PU5MtWWhc+dYI9x8mguYnm9yiG6TkI7niRpxgJgtqAyGHuEyNXVBQQ0X+qyOF4D9LdankBf8uNN18g31IET2Zg==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/cache": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/cache/-/cache-2.7.0.tgz",
      "integrity": "sha512-JlXNoZXcWzLKdDlfeF3dIj5Vtel5T9vtdBN72PJ+cjC4qNHk4Uwvc5sfOBELuibGN0bVu2bwY9nUgSwCiB1iIA==",
      "requires": {
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/utils": "2.7.0",
        "lmdb": "2.5.2"
      }
    },
    "@parcel/codeframe": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/codeframe/-/codeframe-2.7.0.tgz",
      "integrity": "sha512-UTKx0jejJmmO1dwTHSJuRgrO8N6PMlkxRT6sew8N6NC3Bgv6pu0EbO+RtlWt/jCvzcdLOPdIoTzj4MMZvgcMYg==",
      "requires": {
        "chalk": "^4.1.0"
      }
    },
    "@parcel/compressor-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/compressor-raw/-/compressor-raw-2.7.0.tgz",
      "integrity": "sha512-SCXwnOOQT6EmpusBsYWNQ/RFri+2JnKuE0gMSf2dROl2xbererX45FYzeDplWALCKAdjMNDpFwU+FyMYoVZSCQ==",
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/config-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/config-default/-/config-default-2.7.0.tgz",
      "integrity": "sha512-ZzsLr97AYrz8c9k6qn3DlqPzifi3vbP7q3ynUrAFxmt0L4+K0H9N508ZkORYmCgaFjLIQ8Y3eWpwCJ0AewPNIg==",
      "requires": {
        "@parcel/bundler-default": "2.7.0",
        "@parcel/compressor-raw": "2.7.0",
        "@parcel/namer-default": "2.7.0",
        "@parcel/optimizer-css": "2.7.0",
        "@parcel/optimizer-htmlnano": "2.7.0",
        "@parcel/optimizer-image": "2.7.0",
        "@parcel/optimizer-svgo": "2.7.0",
        "@parcel/optimizer-terser": "2.7.0",
        "@parcel/packager-css": "2.7.0",
        "@parcel/packager-html": "2.7.0",
        "@parcel/packager-js": "2.7.0",
        "@parcel/packager-raw": "2.7.0",
        "@parcel/packager-svg": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/resolver-default": "2.7.0",
        "@parcel/runtime-browser-hmr": "2.7.0",
        "@parcel/runtime-js": "2.7.0",
        "@parcel/runtime-react-refresh": "2.7.0",
        "@parcel/runtime-service-worker": "2.7.0",
        "@parcel/transformer-babel": "2.7.0",
        "@parcel/transformer-css": "2.7.0",
        "@parcel/transformer-html": "2.7.0",
        "@parcel/transformer-image": "2.7.0",
        "@parcel/transformer-js": "2.7.0",
        "@parcel/transformer-json": "2.7.0",
        "@parcel/transformer-postcss": "2.7.0",
        "@parcel/transformer-posthtml": "2.7.0",
        "@parcel/transformer-raw": "2.7.0",
        "@parcel/transformer-react-refresh-wrap": "2.7.0",
        "@parcel/transformer-svg": "2.7.0"
      }
    },
    "@parcel/core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/core/-/core-2.7.0.tgz",
      "integrity": "sha512-7yKZUdh314Q/kU/9+27ZYTfcnXS6VYHuG+iiUlIohnvUUybxLqVJhdMU9Q+z2QcPka1IdJWz4K4Xx0y6/4goyg==",
      "requires": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/graph": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "abortcontroller-polyfill": "^1.1.9",
        "base-x": "^3.0.8",
        "browserslist": "^4.6.6",
        "clone": "^2.1.1",
        "dotenv": "^7.0.0",
        "dotenv-expand": "^5.1.0",
        "json5": "^2.2.0",
        "msgpackr": "^1.5.4",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/css": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css/-/css-1.12.2.tgz",
      "integrity": "sha512-Sa0PvZu5u877CupQA8IjEATqjJFynBfA7LxbcyutFe2LDCRSqB5Bm08jKFScyaz56qjZNIxZxXk2SApNkOvoAA==",
      "requires": {
        "@parcel/css-darwin-arm64": "1.12.2",
        "@parcel/css-darwin-x64": "1.12.2",
        "@parcel/css-linux-arm-gnueabihf": "1.12.2",
        "@parcel/css-linux-arm64-gnu": "1.12.2",
        "@parcel/css-linux-arm64-musl": "1.12.2",
        "@parcel/css-linux-x64-gnu": "1.12.2",
        "@parcel/css-linux-x64-musl": "1.12.2",
        "@parcel/css-win32-x64-msvc": "1.12.2",
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/css-darwin-arm64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-arm64/-/css-darwin-arm64-1.12.2.tgz",
      "integrity": "sha512-6VvsoYSltBiUh/uyfPzQ+I3DiTFN7tmRv6zm1LH98J7GGCDDhbYEtbQjjCs15ex6fVn1ORZK0JO+mMlsg1JwTA==",
      "optional": true
    },
    "@parcel/css-darwin-x64": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-darwin-x64/-/css-darwin-x64-1.12.2.tgz",
      "integrity": "sha512-3J0/LrDvt5vevOisnrE0q5mEcuiAY+K7OZwIv84SAnrbjlL5sshmIaaNzL869kb4thza+RClEj0mS5XTm1IUEw==",
      "optional": true
    },
    "@parcel/css-linux-arm-gnueabihf": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm-gnueabihf/-/css-linux-arm-gnueabihf-1.12.2.tgz",
      "integrity": "sha512-OsX7I3dhBvnxEbAH++08RFe7yhjRp33ulzrCvJTMOP9YkxEEJ8qId3sNzJBHIVQzHyTlPTnBRHbSDhU3TFe/eQ==",
      "optional": true
    },
    "@parcel/css-linux-arm64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-gnu/-/css-linux-arm64-gnu-1.12.2.tgz",
      "integrity": "sha512-R1Kqw+1Rsru9Q4+qvUEC6B8P21bpqhuF9rv8GmBmmnF1i2hMZ1JiY+uh/ej8IaRV0O3fAHeQGIyGBWx6qWDpcw==",
      "optional": true
    },
    "@parcel/css-linux-arm64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-arm64-musl/-/css-linux-arm64-musl-1.12.2.tgz",
      "integrity": "sha512-nwixgM4SEgPUQata9aAiJW0A5Q9ms+xim1tXT1i+91kOei4Fu2Wr2OuofMk+mlhbgmGKCTcu4gzMPReGxUhuRA==",
      "optional": true
    },
    "@parcel/css-linux-x64-gnu": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-gnu/-/css-linux-x64-gnu-1.12.2.tgz",
      "integrity": "sha512-cJYVMHnQSGhDwQByyvjFZppjMBNlgxXl/R4cX5DwrQE0QZmK/42BYnMp92rvoprEG6LRyRoiGtCjyfYTPWajog==",
      "optional": true
    },
    "@parcel/css-linux-x64-musl": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-linux-x64-musl/-/css-linux-x64-musl-1.12.2.tgz",
      "integrity": "sha512-u9zdO/d831/74Tf+TdPUfaIuB9v6FD4Xz8UdWUDOXgQqaOlnJ9fAsAM39EkoWlMxPPljY3f4ay6irSe1a4XgSA==",
      "optional": true
    },
    "@parcel/css-win32-x64-msvc": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/@parcel/css-win32-x64-msvc/-/css-win32-x64-msvc-1.12.2.tgz",
      "integrity": "sha512-kCAKr3vKqvPUv9oXBG3pGZQz5il3sEk35dpmTXFa/7eDNKR5XyLpiJs8JwWJTFfuUqroymDSXA1bCcjvNEYcAg==",
      "optional": true
    },
    "@parcel/diagnostic": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/diagnostic/-/diagnostic-2.7.0.tgz",
      "integrity": "sha512-pdq/cTwVoL0n8yuDCRXFRSQHVWdmmIXPt3R3iT4KtYDYvOrMT2dLPT79IMqQkhYPANW8GuL15n/WxRngfRdkug==",
      "requires": {
        "@mischnic/json-sourcemap": "^0.1.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/events": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/events/-/events-2.7.0.tgz",
      "integrity": "sha512-kQDwMKgZ1U4M/G17qeDYF6bW5kybluN6ajYPc7mZcrWg+trEI/oXi81GMFaMX0BSUhwhbiN5+/Vb2wiG/Sn6ig=="
    },
    "@parcel/fs": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-2.7.0.tgz",
      "integrity": "sha512-PU5fo4Hh8y03LZgemgVREttc0wyHQUNmsJCybxTB7EjJie2CqJRumo+DFppArlvdchLwJdc9em03yQV/GNWrEg==",
      "requires": {
        "@parcel/fs-search": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/watcher": "^2.0.0",
        "@parcel/workers": "2.7.0"
      }
    },
    "@parcel/fs-search": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/fs-search/-/fs-search-2.7.0.tgz",
      "integrity": "sha512-K1Hv25bnRpwQVA15RvcRuB8ZhfclnCHA8N8L6w7Ul1ncSJDxCIkIAc5hAubYNNYW3kWjCC2SOaEgFKnbvMllEQ==",
      "requires": {
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/graph": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/graph/-/graph-2.7.0.tgz",
      "integrity": "sha512-Q6E94GS6q45PtsZh+m+gvFRp/N1Qopxhu2sxjcWsGs5iBd6IWn2oYLWOH5iVzEjWuYpW2HkB08lH6J50O63uOA==",
      "requires": {
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/hash": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/hash/-/hash-2.7.0.tgz",
      "integrity": "sha512-k6bSKnIlPJMPU3yjQzfgfvF9zuJZGOAlJgzpL4BbWvdbE8BTdjzLcFn0Ujrtud94EgIkiXd22sC2HpCUWoHGdA==",
      "requires": {
        "detect-libc": "^1.0.3",
        "xxhash-wasm": "^0.4.2"
      }
    },
    "@parcel/logger": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-2.7.0.tgz",
      "integrity": "sha512-qjMY/bYo38+o+OiIrTRldU9CwL1E7J72t+xkTP8QIcUxLWz5LYR0YbynZUVulmBSfqsykjjxCy4a+8siVr+lPw==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0"
      }
    },
    "@parcel/markdown-ansi": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/markdown-ansi/-/markdown-ansi-2.7.0.tgz",
      "integrity": "sha512-ipOX0D6FVZFEXeb/z8MnTMq2RQEIuaILY90olVIuHEFLHHfOPEn+RK3u13HA1ChF5/9E3cMD79tu6x9JL9Kqag==",
      "requires": {
        "chalk": "^4.1.0"
      }
    },
    "@parcel/namer-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/namer-default/-/namer-default-2.7.0.tgz",
      "integrity": "sha512-lIKMdsmi//7fepecNDYmJYzBlL91HifPsX03lJCdu1dC6q5fBs+gG0XjKKG7yPnSCw1qH/4m7drzt9+dRZYAHQ==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/node-resolver-core": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/node-resolver-core/-/node-resolver-core-2.7.0.tgz",
      "integrity": "sha512-5UJQHalqMxdhJIs2hhqQzFfQpF7+NAowsRq064lYtiRvcD8wMr3OOQ9wd1iazGpFSl4JKdT7BwDU9/miDJmanQ==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/optimizer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-css/-/optimizer-css-2.7.0.tgz",
      "integrity": "sha512-IfnOMACqhcAclKyOW9X9JpsknB6OShk9OVvb8EvbDTKHJhQHNNmzE88OkSI/pS3ZVZP9Zj+nWcVHguV+kvDeiQ==",
      "requires": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/optimizer-htmlnano": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-htmlnano/-/optimizer-htmlnano-2.7.0.tgz",
      "integrity": "sha512-5QrGdWS5Hi4VXE3nQNrGqugmSXt68YIsWwKRAdarOxzyULSJS3gbCiQOXqIPRJobfZjnSIcdtkyxSiCUe1inIA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "htmlnano": "^2.0.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "svgo": "^2.4.0"
      }
    },
    "@parcel/optimizer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-image/-/optimizer-image-2.7.0.tgz",
      "integrity": "sha512-EnaXz5UjR67FUu0BEcqZTT9LsbB/iFAkkghCotbnbOuC5QQsloq6tw54TKU3y+R3qsjgUoMtGxPcGfVoXxZXYw==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/optimizer-svgo": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-svgo/-/optimizer-svgo-2.7.0.tgz",
      "integrity": "sha512-IO1JV4NpfP3V7FrhsqCcV8pDQIHraFi1/ZvEJyssITxjH49Im/txKlwMiQuZZryAPn8Xb8g395Muawuk6AK6sg==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "svgo": "^2.4.0"
      }
    },
    "@parcel/optimizer-terser": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/optimizer-terser/-/optimizer-terser-2.7.0.tgz",
      "integrity": "sha512-07VZjIO8xsl2/WmS/qHI8lI/cpu47iS9eRpqwfZEEsdk1cfz50jhWkmFudHBxiHGMfcZ//1+DdaPg9RDBWZtZA==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "terser": "^5.2.0"
      }
    },
    "@parcel/package-manager": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/package-manager/-/package-manager-2.7.0.tgz",
      "integrity": "sha512-wmfSX1mRrTi8MeA4KrnPk/x7zGUsILCQmTo6lA4gygzAxDbM1pGuyFN8/Kt0y0SFO2lbljARtD/4an5qdotH+Q==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/packager-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-css/-/packager-css-2.7.0.tgz",
      "integrity": "sha512-44nzZwu+ssGuiFmYM6cf/Y4iChiUZ4DUzzpegnGlhXtKJKe4NHntxThJynuRZWKN2AAf48avApDpimg2jW0KDw==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/packager-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-html/-/packager-html-2.7.0.tgz",
      "integrity": "sha512-Zgqd7sdcY/UnR370GR0q2ilmEohUDXsO8A1F28QCJzIsR1iCB6KRUT74+pawfQ1IhXZLaaFLLYe0UWcfm0JeXg==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5"
      }
    },
    "@parcel/packager-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-js/-/packager-js-2.7.0.tgz",
      "integrity": "sha512-wTRdM81PgRVDzWGXdWmqLwguWnTYWzhEDdjXpW2n8uMOu/CjHhMtogk65aaYk3GOnq6OBL/NsrmBiV/zKPj1vA==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "globals": "^13.2.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/packager-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-raw/-/packager-raw-2.7.0.tgz",
      "integrity": "sha512-jg2Zp8dI5VpIQlaeahXDCfrPN9m/DKht1NkR9P2CylMAwqCcc1Xc1RRiF0wfwcPZpPMpq1265n+4qnB7rjGBlA==",
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/packager-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/packager-svg/-/packager-svg-2.7.0.tgz",
      "integrity": "sha512-EmJg3HpD6/xxKBjir/CdCKJZwI24iVfBuxRS9LUp3xHAIebOzVh1z6IN+i2Di5+NyRwfOFaLliL4uMa1zwbyCA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "posthtml": "^0.16.4"
      }
    },
    "@parcel/plugin": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/plugin/-/plugin-2.7.0.tgz",
      "integrity": "sha512-qqgx+nnMn6/0lRc4lKbLGmhNtBiT93S2gFNB4Eb4Pfz/SxVYoW+fmml+KdfOSiZffWOAH5L6NwhyD7N8aSikzw==",
      "requires": {
        "@parcel/types": "2.7.0"
      }
    },
    "@parcel/reporter-cli": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-cli/-/reporter-cli-2.7.0.tgz",
      "integrity": "sha512-80gEODg8cnAmnxGVuaSVDo8JJ54P9AA2bHwSs1cIkHWlJ3BjDQb83H31bBHncJ5Kn5kQ/j+7WjlqHpTCiOR9PA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "term-size": "^2.2.1"
      }
    },
    "@parcel/reporter-dev-server": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/reporter-dev-server/-/reporter-dev-server-2.7.0.tgz",
      "integrity": "sha512-ySuou5addK8fGue8aXzo536BaEjMujDrEc1xkp4TasInXHVcA98b+SYX5NAZTGob5CxKvZQ5ylhg77zW30B+iA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      }
    },
    "@parcel/resolver-default": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/resolver-default/-/resolver-default-2.7.0.tgz",
      "integrity": "sha512-v8TvWsbLK7/q7n4gv6OrYNbW18xUx4zKbVMGZb1u4yMhzEH4HFr1D9OeoTq3jk+ximAigds8B6triQbL5exF7A==",
      "requires": {
        "@parcel/node-resolver-core": "2.7.0",
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/runtime-browser-hmr": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-browser-hmr/-/runtime-browser-hmr-2.7.0.tgz",
      "integrity": "sha512-PLbMLdclQeYsi2LkilZVGFV1n3y55G1jaBvby4ekedUZjMw3SWdMY2tDxgSDdFWfLCnYHJXdGUQSzGGi1kPzjA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0"
      }
    },
    "@parcel/runtime-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-js/-/runtime-js-2.7.0.tgz",
      "integrity": "sha512-9/YUZTBNrSN2H6rbz/o1EOM0O7I3ZR/x9IDzxjJBD6Mi+0uCgCD02aedare/SNr1qgnbZZWmhpOzC+YgREcfLA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/runtime-react-refresh": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-react-refresh/-/runtime-react-refresh-2.7.0.tgz",
      "integrity": "sha512-vDKO0rWqRzEpmvoZ4kkYUiSsTxT5NnH904BFPFxKI0wJCl6yEmPuEifmATo73OuYhP6jIP3Qfl1R4TtiDFPJ1Q==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-error-overlay": "6.0.9",
        "react-refresh": "^0.9.0"
      }
    },
    "@parcel/runtime-service-worker": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/runtime-service-worker/-/runtime-service-worker-2.7.0.tgz",
      "integrity": "sha512-uD2pAV0yV6+e7JaWH4KVPbG+zRCrxr/OACyS9tIh+Q/R1vRmh8zGM3yhdrcoiZ7tFOnM72vd6xY11eTrUsSVig==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/source-map": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@parcel/source-map/-/source-map-2.1.0.tgz",
      "integrity": "sha512-E7UOEIof2o89LrKk1agSLmwakjigmEdDp1ZaEdsLVEvq63R/bul4Ij5CT+0ZDcijGpl5tnTbQADY9EyYGtjYgQ==",
      "requires": {
        "detect-libc": "^1.0.3"
      }
    },
    "@parcel/transformer-babel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-babel/-/transformer-babel-2.7.0.tgz",
      "integrity": "sha512-7iklDXXnKH1530+QbI+e4kIJ+Q1puA1ulRS10db3aUJMj5GnvXGDFwhSZ7+T1ps66QHO7cVO29VlbqiRDarH1Q==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "json5": "^2.2.0",
        "nullthrows": "^1.1.1",
        "semver": "^5.7.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/transformer-css": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-css/-/transformer-css-2.7.0.tgz",
      "integrity": "sha512-J4EpWK9spQpXyNCmKK8Xnane0xW/1B/EAmfp7Fiv7g+5yUjY4ODf4KUugvE+Eb2gekPkhOKNHermO2KrX0/PFA==",
      "requires": {
        "@parcel/css": "^1.12.2",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "browserslist": "^4.6.6",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/transformer-html": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-html/-/transformer-html-2.7.0.tgz",
      "integrity": "sha512-wYJl5rn81W+Rlk9oQwDJcjoVsWVDKyeri84FzmlGXOsg0EYgnqOiG+3MDM8GeZjfuGe5fuoum4eqZeS0WdUHXw==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/transformer-image": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-image/-/transformer-image-2.7.0.tgz",
      "integrity": "sha512-mhi9/R5/ULhCkL2COVIKhNFoLDiZwQgprdaTJr5fnODggVxEX5o7ebFV6KNLMTEkwZUJWoB1hL0ziI0++DtoFA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "nullthrows": "^1.1.1"
      }
    },
    "@parcel/transformer-js": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-js/-/transformer-js-2.7.0.tgz",
      "integrity": "sha512-mzerR+D4rDomUSIk5RSTa2w+DXBdXUeQrpDO74WCDdpDi1lIl8ppFpqtmU7O6y6p8QsgkmS9b0g/vhcry6CJTA==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/utils": "2.7.0",
        "@parcel/workers": "2.7.0",
        "@swc/helpers": "^0.4.2",
        "browserslist": "^4.6.6",
        "detect-libc": "^1.0.3",
        "nullthrows": "^1.1.1",
        "regenerator-runtime": "^0.13.7",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/transformer-json": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-json/-/transformer-json-2.7.0.tgz",
      "integrity": "sha512-RQjuxBpYOch+kr4a0zi77KJtOLTPYRM7iq4NN80zKnA0r0dwDUCxZBtaj2l0O0o3R4MMJnm+ncP+cB7XR7dZYA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "json5": "^2.2.0"
      }
    },
    "@parcel/transformer-postcss": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-postcss/-/transformer-postcss-2.7.0.tgz",
      "integrity": "sha512-b6RskXBWf0MjpC9qjR2dQ1ZdRnlOiKYseG5CEovWCqM218RtdydFKz7jS+5Gxkb6qBtOG7zGPONXdPe+gTILcA==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "clone": "^2.1.1",
        "nullthrows": "^1.1.1",
        "postcss-value-parser": "^4.2.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/transformer-posthtml": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-posthtml/-/transformer-posthtml-2.7.0.tgz",
      "integrity": "sha512-cP8YOiSynWJ1ycmBlhnnHeuQb2cwmklZ+BNyLUktj5p78kDy2de7VjX+dRNRHoW4H9OgEcSF4UEfDVVz5RYIhw==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/transformer-raw": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-raw/-/transformer-raw-2.7.0.tgz",
      "integrity": "sha512-sDnItWCFSDez0izK1i5cgv+kXzZTbcJh4rNpVIgmE1kBLvAz608sqgcCkavb2wVJIvLesxYM+5G4p1CwkDlZ1g==",
      "requires": {
        "@parcel/plugin": "2.7.0"
      }
    },
    "@parcel/transformer-react-refresh-wrap": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-react-refresh-wrap/-/transformer-react-refresh-wrap-2.7.0.tgz",
      "integrity": "sha512-1vRmIJzyBA1nIiXTAU6tZExq2FvJj/2F0ft6KDw8GYPv0KjmdiPo/PmaZ7JeSVOM6SdXQIQCbTmp1vkMP7DtkA==",
      "requires": {
        "@parcel/plugin": "2.7.0",
        "@parcel/utils": "2.7.0",
        "react-refresh": "^0.9.0"
      }
    },
    "@parcel/transformer-svg": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/transformer-svg/-/transformer-svg-2.7.0.tgz",
      "integrity": "sha512-ioER37zceuuE+K6ZrnjCyMUWEnv+63hIAFResc1OXxRhyt+7kzMz9ZqK0Mt6QMLwl1dxhkLmrU41n9IxzKZuSQ==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/plugin": "2.7.0",
        "nullthrows": "^1.1.1",
        "posthtml": "^0.16.5",
        "posthtml-parser": "^0.10.1",
        "posthtml-render": "^3.0.0",
        "semver": "^5.7.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        }
      }
    },
    "@parcel/types": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/types/-/types-2.7.0.tgz",
      "integrity": "sha512-+dhXVUnseTCpJvBTGMp0V6X13z6O/A/+CUtwEpMGZ8XSmZ4Gk44GvaTiBOp0bJpWG4fvCKp+UmC8PYbrDiiziw==",
      "requires": {
        "@parcel/cache": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "@parcel/workers": "2.7.0",
        "utility-types": "^3.10.0"
      }
    },
    "@parcel/utils": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-2.7.0.tgz",
      "integrity": "sha512-jNZ5bIGg1r1RDRKi562o4kuVwnz+XJ2Ie3b0Zwrqwvgfj6AbRFIKzDd+h85dWWmcDYzKUbHp11u6VJl1u8Vapg==",
      "requires": {
        "@parcel/codeframe": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/hash": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/markdown-ansi": "2.7.0",
        "@parcel/source-map": "^2.0.0",
        "chalk": "^4.1.0"
      }
    },
    "@parcel/watcher": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.0.5.tgz",
      "integrity": "sha512-x0hUbjv891omnkcHD7ZOhiyyUqUUR6MNjq89JhEI3BxppeKWAm6NPQsqqRrAkCJBogdT/o/My21sXtTI9rJIsw==",
      "requires": {
        "node-addon-api": "^3.2.1",
        "node-gyp-build": "^4.3.0"
      }
    },
    "@parcel/workers": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-2.7.0.tgz",
      "integrity": "sha512-99VfaOX+89+RaoTSyH9ZQtkMBFZBFMvJmVJ/GeJT6QCd2wtKBStTHlaSnQOkLD/iRjJCNwV2xpZmm8YkTwV+hg==",
      "requires": {
        "@parcel/diagnostic": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/types": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chrome-trace-event": "^1.0.2",
        "nullthrows": "^1.1.1"
      }
    },
    "@segment/loosely-validate-event": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@segment/loosely-validate-event/-/loosely-validate-event-2.0.0.tgz",
      "integrity": "sha512-ZMCSfztDBqwotkl848ODgVcAmN4OItEWDCkshcKz0/W6gGSQayuuCtWV/MlodFivAZD793d6UgANd6wCXUfrIw==",
      "dev": true,
      "requires": {
        "component-type": "^1.2.1",
        "join-component": "^1.1.0"
      }
    },
    "@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "dev": true
    },
    "@sinonjs/commons": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
      "integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
      "dev": true,
      "requires": {
        "type-detect": "4.0.8"
      }
    },
    "@sinonjs/fake-timers": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-8.1.0.tgz",
      "integrity": "sha512-OAPJUAtgeINhh/TAlUID4QTs53Njm7xzddaVlEs/SXwgtiD1tW22zAB/W1wdqfrpmikgaWQ9Fw6Ws+hsiRm5Vg==",
      "dev": true,
      "requires": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "@swc/helpers": {
      "version": "0.4.7",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.4.7.tgz",
      "integrity": "sha512-jJKr/2JOivCQxb5Xpli3asedRLH34QgJ3G+7gm6CoCOwt/LDDX9g67OuxvjFOiYZfngWYB66ZbjU6cUNtQdavg==",
      "requires": {
        "tslib": "^2.4.0"
      },
      "dependencies": {
        "tslib": {
          "version": "2.4.0",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.4.0.tgz",
          "integrity": "sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ=="
        }
      }
    },
    "@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "dev": true,
      "requires": {
        "defer-to-connect": "^1.0.1"
      }
    },
    "@trysound/sax": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@trysound/sax/-/sax-0.2.0.tgz",
      "integrity": "sha512-L7z9BgrNEcYyUYtF+HaEfiS5ebkh9jXqbszz7pC0hRBPaatV0XjSD3+eHrpqFemQfgwiFF0QPIarnIihIDn7OA=="
    },
    "@types/istanbul-lib-coverage": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",
      "integrity": "sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g==",
      "dev": true
    },
    "@types/istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "@types/istanbul-reports": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-report": "*"
      }
    },
    "@types/node": {
      "version": "18.7.4",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.4.tgz",
      "integrity": "sha512-RzRcw8c0B8LzryWOR4Wj7YOTFXvdYKwvrb6xQQyuDfnlTxwYXGCV5RZ/TEbq5L5kn+w3rliHAUyRcG1RtbmTFg==",
      "dev": true
    },
    "@types/parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA=="
    },
    "@types/stack-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz",
      "integrity": "sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw==",
      "dev": true
    },
    "@types/yargs": {
      "version": "16.0.4",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-16.0.4.tgz",
      "integrity": "sha512-T8Yc9wt/5LbJyCaLiHPReJa0kApcIgJ7Bn735GjItUfh08Z1pJvu8QZqb9s+mMvKV6WUQRV7K2R46YbjMXTTJw==",
      "dev": true,
      "requires": {
        "@types/yargs-parser": "*"
      }
    },
    "@types/yargs-parser": {
      "version": "21.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz",
      "integrity": "sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA==",
      "dev": true
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
    },
    "abortcontroller-polyfill": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/abortcontroller-polyfill/-/abortcontroller-polyfill-1.7.3.tgz",
      "integrity": "sha512-zetDJxd89y3X99Kvo4qFx8GKlt6GsvN3UcRZHwU6iFA/0KiOmhkTVhe8oRoTBiTVPZu09x3vCra47+w8Yz1+2Q=="
    },
    "acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "dev": true
    },
    "acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "dev": true,
      "requires": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      }
    },
    "acorn-walk": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
      "dev": true
    },
    "analytics-node": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/analytics-node/-/analytics-node-6.2.0.tgz",
      "integrity": "sha512-NLU4tCHlWt0tzEaFQL7NIoWhq2KmQSmz0JvyS2lYn6fc4fEjTMSabhJUx8H1r5995FX8fE3rZ15uIHU6u+ovlQ==",
      "dev": true,
      "requires": {
        "@segment/loosely-validate-event": "^2.0.0",
        "axios": "^0.27.2",
        "axios-retry": "3.2.0",
        "lodash.isstring": "^4.0.1",
        "md5": "^2.2.1",
        "ms": "^2.0.0",
        "remove-trailing-slash": "^0.1.0",
        "uuid": "^8.3.2"
      }
    },
    "ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "dev": true,
      "requires": {
        "string-width": "^4.1.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "dev": true,
      "optional": true
    },
    "are-we-there-yet": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.7.tgz",
      "integrity": "sha512-nxwy40TuMiUGqMyRHgCSWZ9FM4VAoRP4xUYSTv5ImRog+h9yISPbVH7H8fASCIzYn9wlEv4zvFL7uKDMCFQm3g==",
      "dev": true,
      "optional": true,
      "requires": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      },
      "dependencies": {
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "optional": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true,
          "optional": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "optional": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true
    },
    "ascii-table": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/ascii-table/-/ascii-table-0.0.9.tgz",
      "integrity": "sha512-xpkr6sCDIYTPqzvjG8M3ncw1YOTaloWZOyrUmicoEifBEKzQzt+ooUpRpQ/AbOoJfO/p2ZKiyp79qHThzJDulQ==",
      "dev": true
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "dev": true
    },
    "autoprefixer": {
      "version": "10.4.8",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.8.tgz",
      "integrity": "sha512-75Jr6Q/XpTqEf6D2ltS5uMewJIx5irCU1oBYJrWjFenq/m12WRRrz6g15L1EIoYvPLXTbEry7rDOwrcYNj77xw==",
      "requires": {
        "browserslist": "^4.21.3",
        "caniuse-lite": "^1.0.30001373",
        "fraction.js": "^4.2.0",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.0.0",
        "postcss-value-parser": "^4.2.0"
      }
    },
    "axios": {
      "version": "0.27.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.27.2.tgz",
      "integrity": "sha512-t+yRIyySRTp/wua5xEr+z1q60QmLq8ABsS5O9Me1AsE5dfKqgnCFzwiCZZ/cGNd1lq4/7akDWMxdhVlucjmnOQ==",
      "dev": true,
      "requires": {
        "follow-redirects": "^1.14.9",
        "form-data": "^4.0.0"
      }
    },
    "axios-retry": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/axios-retry/-/axios-retry-3.2.0.tgz",
      "integrity": "sha512-RK2cLMgIsAQBDhlIsJR5dOhODPigvel18XUv1dDXW+4k1FzebyfRk+C+orot6WPZOYFKSfhLwHPwVmTVOODQ5w==",
      "dev": true,
      "requires": {
        "is-retry-allowed": "^1.1.0"
      }
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "dev": true,
      "optional": true
    },
    "binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA=="
    },
    "bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "dev": true,
      "requires": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      },
      "dependencies": {
        "@types/node": {
          "version": "11.11.6",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
          "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ==",
          "dev": true
        }
      }
    },
    "bip39-light": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
      "integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
      "dev": true,
      "requires": {
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9"
      }
    },
    "bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dev": true,
      "optional": true,
      "requires": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==",
      "dev": true
    },
    "boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww=="
    },
    "borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dev": true,
      "requires": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "boxen": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-5.1.2.tgz",
      "integrity": "sha512-9gYgQKXx+1nP8mP7CzFyaUARhg7D3n1dF/FnErWmu9l6JvGpNUN278h0aSb+QjoiKSWG+iZ3uHrcqk0qrY9RQQ==",
      "dev": true,
      "requires": {
        "ansi-align": "^3.0.0",
        "camelcase": "^6.2.0",
        "chalk": "^4.1.0",
        "cli-boxes": "^2.2.1",
        "string-width": "^4.2.2",
        "type-fest": "^0.20.2",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "browserslist": {
      "version": "4.21.3",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.3.tgz",
      "integrity": "sha512-898rgRXLAyRkM1GryrrBHGkqA5hlpkV5MhtZwg9QXeiyLUYs2k00Un05aX5l2/yJIOObYKOpS2JNo8nJDE7fWQ==",
      "requires": {
        "caniuse-lite": "^1.0.30001370",
        "electron-to-chromium": "^1.4.202",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.5"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dev": true,
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ=="
    },
    "cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "dev": true,
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "dependencies": {
        "get-stream": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
          "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
          "dev": true
        }
      }
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
    },
    "camelcase": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz",
      "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
      "dev": true
    },
    "camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true
    },
    "caniuse-lite": {
      "version": "1.0.30001378",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001378.tgz",
      "integrity": "sha512-JVQnfoO7FK7WvU4ZkBRbPjaot4+YqxogSDosHv0Hv5mWpUESmN+UubMU6L/hGz8QlQ2aY5U0vR6MOs6j/CXpNA=="
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg==",
      "dev": true
    },
    "chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "requires": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      }
    },
    "charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA==",
      "dev": true
    },
    "chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "requires": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "fsevents": "~2.3.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "dependencies": {
        "glob-parent": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
          "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
          "requires": {
            "is-glob": "^4.0.1"
          }
        }
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "dev": true,
      "optional": true
    },
    "chrome-trace-event": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
      "integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg=="
    },
    "ci-info": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
      "dev": true
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "cli-boxes": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
      "integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
      "dev": true
    },
    "cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dev": true,
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w=="
    },
    "clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dev": true,
      "requires": {
        "mimic-response": "^1.0.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        }
      }
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha512-RpAVKQA5T63xEj6/giIbUEtZwJ4UFIc3ZtvEkiaUERylqe8xb5IvqcgOurZLahv93CLKfxcw5YI+DZcUBRyLXA==",
      "dev": true,
      "optional": true
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dev": true,
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw=="
    },
    "component-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/component-type/-/component-type-1.2.1.tgz",
      "integrity": "sha512-Kgy+2+Uwr75vAi6ChWXgHuLvd+QLD7ssgpaRq2zCvt80ptvAfMc/hijcJxXkBa2wMlEZcJvC2H8Ubo+A9ATHIg==",
      "dev": true
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "dev": true,
      "requires": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      }
    },
    "console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==",
      "dev": true,
      "optional": true
    },
    "core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "dev": true,
      "optional": true
    },
    "cosmiconfig": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.1.tgz",
      "integrity": "sha512-a1YWNUV2HwGimB7dU2s1wUMurNKjpx60HxBB6xUM8Re+2s1g1IIfJvFR0/iCF+XHdE0GMTKTuLR32UQff4TEyQ==",
      "requires": {
        "@types/parse-json": "^4.0.0",
        "import-fresh": "^3.2.1",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0",
        "yaml": "^1.10.0"
      }
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow==",
      "dev": true
    },
    "crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "dev": true
    },
    "css-select": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-4.3.0.tgz",
      "integrity": "sha512-wPpOYtnsVontu2mODhA19JrqWxNsfdatRKd64kmpRbQgh1KtItko5sTnEpPdpSaJszTOhEMlF/RPz28qj4HqhQ==",
      "requires": {
        "boolbase": "^1.0.0",
        "css-what": "^6.0.1",
        "domhandler": "^4.3.1",
        "domutils": "^2.8.0",
        "nth-check": "^2.0.1"
      }
    },
    "css-tree": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
      "integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
      "requires": {
        "mdn-data": "2.0.14",
        "source-map": "^0.6.1"
      }
    },
    "css-what": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz",
      "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw=="
    },
    "cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true
    },
    "csso": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.2.0.tgz",
      "integrity": "sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==",
      "requires": {
        "css-tree": "^1.1.2"
      }
    },
    "debug": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
      "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
      "dev": true,
      "requires": {
        "ms": "2.1.2"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "dev": true,
      "optional": true,
      "requires": {
        "mimic-response": "^2.0.0"
      }
    },
    "deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "dev": true
    },
    "deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true
    },
    "defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
      "dev": true
    },
    "define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==",
      "dev": true
    },
    "defined": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
      "integrity": "sha512-Y2caI5+ZwS5c3RiNDJ6u53VhQHv+hHKwhkI1iHvceKUHw9Df6EK2zRLfjejRgMuCuxK7PfSWIMwWecceVvThjQ==",
      "dev": true
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "dev": true
    },
    "delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==",
      "dev": true,
      "optional": true
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg=="
    },
    "detective": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/detective/-/detective-5.2.1.tgz",
      "integrity": "sha512-v9XE1zRnz1wRtgurGu0Bs8uHKFSTdteYZNbIPFVhUZ39L/S79ppMpdmVOZAnoz1jfEFodc48n6MX483Xo3t1yw==",
      "dev": true,
      "requires": {
        "acorn-node": "^1.8.2",
        "defined": "^1.0.0",
        "minimist": "^1.2.6"
      }
    },
    "didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true
    },
    "dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true
    },
    "dom-serializer": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
      "integrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag==",
      "requires": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.0",
        "entities": "^2.0.0"
      },
      "dependencies": {
        "entities": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
          "integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A=="
        }
      }
    },
    "domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw=="
    },
    "domhandler": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-4.3.1.tgz",
      "integrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ==",
      "requires": {
        "domelementtype": "^2.2.0"
      }
    },
    "domutils": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-2.8.0.tgz",
      "integrity": "sha512-w96Cjofp72M5IIhpjgobBimYEfoPjx1Vx0BSX9P30WBdZW2WIKU0T1Bd0kz2eNZ9ikjKgHbEyKx8BB6H1L3h3A==",
      "requires": {
        "dom-serializer": "^1.0.1",
        "domelementtype": "^2.2.0",
        "domhandler": "^4.2.0"
      }
    },
    "dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "dev": true,
      "requires": {
        "is-obj": "^2.0.0"
      }
    },
    "dotenv": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-7.0.0.tgz",
      "integrity": "sha512-M3NhsLbV1i6HuGzBUH8vXrtxOk+tWmzWKDMbAVSUp3Zsjm7ywFeuwrUXhmhQyRK1q5B5GGy7hcXPbj3bnfZg2g=="
    },
    "dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA=="
    },
    "duplexer3": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.5.tgz",
      "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA==",
      "dev": true
    },
    "electron-to-chromium": {
      "version": "1.4.225",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.225.tgz",
      "integrity": "sha512-ICHvGaCIQR3P88uK8aRtx8gmejbVJyC6bB4LEC3anzBrIzdzC7aiZHY4iFfXhN4st6I7lMO0x4sgBHf/7kBvRw=="
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "requires": {
        "once": "^1.4.0"
      }
    },
    "entities": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-3.0.1.tgz",
      "integrity": "sha512-WiyBqoomrwMdFG1e0kqvASYfnlb0lp8M5o5Fw2OFq1hNZxxcNk8Ik0Xm7LxzBhuidnZB/UtBqVCgUz3kBOP51Q=="
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dev": true,
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
    },
    "escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "dev": true
    },
    "events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "dev": true,
      "optional": true
    },
    "expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "dev": true,
      "optional": true
    },
    "fast-glob": {
      "version": "3.2.11",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.11.tgz",
      "integrity": "sha512-xrO3+1bxSo3ZVHAnqzyuewYT6aMFHRAd4Kcs92MAonjwQZLsK9d0SF1IyQ3k5PoirxTW0Oe/RqFgMQ6TcNE5Ew==",
      "dev": true,
      "requires": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "dependencies": {
        "glob-parent": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
          "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
          "dev": true,
          "requires": {
            "is-glob": "^4.0.1"
          }
        }
      }
    },
    "fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "dev": true,
      "requires": {
        "reusify": "^1.0.4"
      }
    },
    "file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "dev": true,
      "optional": true
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "flagged-respawn": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q==",
      "dev": true
    },
    "follow-redirects": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.1.tgz",
      "integrity": "sha512-yLAMQs+k0b2m7cVxpS1VKJVvoz7SS9Td1zss3XRwXj+ZDH00RJgnuLx7E44wx02kQLrdM3aOOy+FpzS7+8OizA==",
      "dev": true
    },
    "form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "dev": true,
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      }
    },
    "fraction.js": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.2.0.tgz",
      "integrity": "sha512-MhLuK+2gUcnZe8ZHlaaINnQLl0xRIGRfcGk2yl8xoQAfHrSsL3rYu6FCmBdkdbhc9EPlwyGHewaRsvwRMJtAlA=="
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "dev": true,
      "optional": true
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha512-14x4kjc6lkD3ltw589k0NrPD6cCNTD6CWoVUNpB85+DrtONoZn+Rug6xZU5RvSC4+TZPxA5AnBibQYAvZn41Hg==",
      "dev": true,
      "optional": true,
      "requires": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true
    },
    "get-port": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/get-port/-/get-port-4.2.0.tgz",
      "integrity": "sha512-/b3jarXkH8KJoOMQc3uVGHASwGLPq3gSFJ7tgJm2diza+bydJPTGOibin2steecKeOylE8oY2JERlVWkAJO6yw=="
    },
    "get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "dev": true,
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
      "dev": true,
      "optional": true
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "requires": {
        "is-glob": "^4.0.3"
      }
    },
    "global-dirs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz",
      "integrity": "sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==",
      "dev": true,
      "requires": {
        "ini": "2.0.0"
      },
      "dependencies": {
        "ini": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
          "integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==",
          "dev": true
        }
      }
    },
    "globals": {
      "version": "13.17.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.17.0.tgz",
      "integrity": "sha512-1C+6nQRb1GwGMKm2dH/E7enFAMxGTmGI7/dEdhy/DNelv85w9B72t3uc5frtMNXIbzrarJJ/lTCjcaZwbLJmyw==",
      "requires": {
        "type-fest": "^0.20.2"
      }
    },
    "got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "dev": true,
      "requires": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "dependencies": {
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha512-BzRPQuY1ip+qDonAOz42gRm/pg9F768C+npV/4JOsxRC2sq+Rlk+Q4ZCAsOhnIaMrgarILY+RMUIvMmmX1qAEA==",
          "dev": true,
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        }
      }
    },
    "graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
    },
    "has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==",
      "dev": true,
      "optional": true
    },
    "has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "dev": true
    },
    "hash-base": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
      "integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.4",
        "readable-stream": "^3.6.0",
        "safe-buffer": "^5.2.0"
      }
    },
    "history": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/history/-/history-5.3.0.tgz",
      "integrity": "sha512-ZqaKwjjrAYUYfLG+htGaIIZ4nioX2L70ZUMIFysS3xvBsSG4x/n1V6TXV3N8ZYNuFGlDirFg32T7B6WOUPDYcQ==",
      "requires": {
        "@babel/runtime": "^7.7.6"
      }
    },
    "homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "dev": true,
      "requires": {
        "parse-passwd": "^1.0.0"
      }
    },
    "htmlnano": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-2.0.2.tgz",
      "integrity": "sha512-+ZrQFS4Ub+zd+/fWwfvoYCEGNEa0/zrpys6CyXxvZDwtL7Pl+pOtRkiujyvBQ7Lmfp7/iEPxtOFgxWA16Gkj3w==",
      "requires": {
        "cosmiconfig": "^7.0.1",
        "posthtml": "^0.16.5",
        "timsort": "^0.3.0"
      }
    },
    "htmlparser2": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-7.2.0.tgz",
      "integrity": "sha512-H7MImA4MS6cw7nbyURtLPO1Tms7C5H602LRETv95z1MxO/7CP7rDVROehUYeYBUYEON94NXXDEPmZuq+hX4sog==",
      "requires": {
        "domelementtype": "^2.0.1",
        "domhandler": "^4.2.2",
        "domutils": "^2.8.0",
        "entities": "^3.0.1"
      }
    },
    "http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dev": true,
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
          "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
          "dev": true
        }
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "dev": true,
      "optional": true
    },
    "ignore-by-default": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA=="
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha512-m7ZEHgtw69qOGw+jwxXkHlrlIPdTGkyh66zXZ1ajZbxkDBNjSY/LGbmjc7h0s2ELsUDTAhFr55TrPSSqJGPG0A==",
      "dev": true
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true
    },
    "ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==",
      "dev": true
    },
    "ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
      "dev": true
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
      "dev": true
    },
    "is-ci": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
      "dev": true,
      "requires": {
        "ci-info": "^2.0.0"
      }
    },
    "is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "dev": true,
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ=="
    },
    "is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==",
      "dev": true,
      "optional": true,
      "requires": {
        "number-is-nan": "^1.0.0"
      }
    },
    "is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-installed-globally": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
      "integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
      "dev": true,
      "requires": {
        "global-dirs": "^3.0.0",
        "is-path-inside": "^3.0.2"
      }
    },
    "is-json": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-json/-/is-json-2.0.1.tgz",
      "integrity": "sha512-6BEnpVn1rcf3ngfmViLM6vjUjGErbdrL4rwlv+u1NO1XO8kqT4YGL8+19Q+Z/bas8tY90BTWMk2+fW1g6hQjbA=="
    },
    "is-npm": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
      "integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA==",
      "dev": true
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
    },
    "is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "dev": true
    },
    "is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true
    },
    "is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "dev": true
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
      "dev": true
    },
    "is-url": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
      "integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==",
      "dev": true
    },
    "is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "dev": true,
      "requires": {
        "is-docker": "^2.0.0"
      }
    },
    "is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
      "dev": true
    },
    "is2": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/is2/-/is2-2.0.7.tgz",
      "integrity": "sha512-4vBQoURAXC6hnLFxD4VW7uc04XiwTTl/8ydYJxKvPwkWQrSjInkuM5VZVg6BGr1/natq69zDuvO9lGpLClJqvA==",
      "dev": true,
      "requires": {
        "deep-is": "^0.1.3",
        "ip-regex": "^4.1.0",
        "is-url": "^1.2.4"
      }
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "dev": true,
      "optional": true
    },
    "jest-environment-node": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-27.5.1.tgz",
      "integrity": "sha512-Jt4ZUnxdOsTGwSRAfKEnE6BcwsSPNOijjwifq5sDFSA2kesnXTvNqKHYgM0hDq3549Uf/KzdXNYn4wMZJPlFLw==",
      "dev": true,
      "requires": {
        "@jest/environment": "^27.5.1",
        "@jest/fake-timers": "^27.5.1",
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "jest-mock": "^27.5.1",
        "jest-util": "^27.5.1"
      }
    },
    "jest-message-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-27.5.1.tgz",
      "integrity": "sha512-rMyFe1+jnyAAf+NHwTclDz0eAaLkVDdKVHHBFWsBWHnnh5YeJMNWWsv7AbFYXfK3oTqvL7VTWkhNLu1jX24D+g==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.12.13",
        "@jest/types": "^27.5.1",
        "@types/stack-utils": "^2.0.0",
        "chalk": "^4.0.0",
        "graceful-fs": "^4.2.9",
        "micromatch": "^4.0.4",
        "pretty-format": "^27.5.1",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.3"
      }
    },
    "jest-mock": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-27.5.1.tgz",
      "integrity": "sha512-K4jKbY1d4ENhbrG2zuPWaQBvDly+iZ2yAW+T1fATN78hc0sInwn7wZB8XtlNnvHug5RMwV897Xm4LqmPM4e2Og==",
      "dev": true,
      "requires": {
        "@jest/types": "^27.5.1",
        "@types/node": "*"
      }
    },
    "jest-util": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-27.5.1.tgz",
      "integrity": "sha512-Kv2o/8jNvX1MQ0KGtw480E/w4fBCDOnH6+6DmeKi6LZUIlKA5kwY0YNdlzaWTiVgxqAqik11QyxDOKk543aKXw==",
      "dev": true,
      "requires": {
        "@jest/types": "^27.5.1",
        "@types/node": "*",
        "chalk": "^4.0.0",
        "ci-info": "^3.2.0",
        "graceful-fs": "^4.2.9",
        "picomatch": "^2.2.3"
      },
      "dependencies": {
        "ci-info": {
          "version": "3.3.2",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.3.2.tgz",
          "integrity": "sha512-xmDt/QIAdeZ9+nfdPsaBCpMvHNLFiLdjj59qjqn+6iPe6YmHGQ35sBnQ8uslRBXFmXkiZQOJRjvQeoGppoTjjg==",
          "dev": true
        }
      }
    },
    "join-component": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/join-component/-/join-component-1.1.0.tgz",
      "integrity": "sha512-bF7vcQxbODoGK1imE2P9GS9aw4zD0Sd+Hni68IMZLj7zRnquH7dXUmMw9hDI5S/Jzt7q+IyTXN0rSg2GI0IKhQ==",
      "dev": true
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
      "dev": true
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha512-CuUqjv0FUZIdXkHPI8MezCnFCdaTAacej1TZYulLoAg1h/PhwkdXFN4V/gzY4g+fMBCOV2xF+rp7t2XD2ns/NQ==",
      "dev": true
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA=="
    },
    "keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "dev": true,
      "requires": {
        "json-buffer": "3.0.0"
      }
    },
    "latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "dev": true,
      "requires": {
        "package-json": "^6.3.0"
      }
    },
    "lilconfig": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.0.6.tgz",
      "integrity": "sha512-9JROoBW7pobfsx+Sq2JsASvCo6Pfo6WWoUW79HuB1BCoBXD4PLWJPqDF6fNj67pqBYTbAHkE57M1kS/+L1neOg==",
      "dev": true
    },
    "lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "lmdb": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/lmdb/-/lmdb-2.5.2.tgz",
      "integrity": "sha512-V5V5Xa2Hp9i2XsbDALkBTeHXnBXh/lEmk9p22zdr7jtuOIY9TGhjK6vAvTpOOx9IKU4hJkRWZxn/HsvR1ELLtA==",
      "requires": {
        "@lmdb/lmdb-darwin-arm64": "2.5.2",
        "@lmdb/lmdb-darwin-x64": "2.5.2",
        "@lmdb/lmdb-linux-arm": "2.5.2",
        "@lmdb/lmdb-linux-arm64": "2.5.2",
        "@lmdb/lmdb-linux-x64": "2.5.2",
        "@lmdb/lmdb-win32-x64": "2.5.2",
        "msgpackr": "^1.5.4",
        "node-addon-api": "^4.3.0",
        "node-gyp-build-optional-packages": "5.0.3",
        "ordered-binary": "^1.2.4",
        "weak-lru-cache": "^1.2.2"
      },
      "dependencies": {
        "node-addon-api": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
          "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ=="
        }
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true,
      "optional": true
    },
    "lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "dev": true
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "peer": true,
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "dev": true
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dev": true,
      "requires": {
        "semver": "^6.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "dev": true,
      "requires": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dev": true,
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "mdn-data": {
      "version": "2.0.14",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz",
      "integrity": "sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow=="
    },
    "merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true
    },
    "micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dev": true,
      "requires": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      }
    },
    "mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "dev": true
    },
    "mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dev": true,
      "requires": {
        "mime-db": "1.52.0"
      }
    },
    "mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "dev": true,
      "optional": true
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.6.tgz",
      "integrity": "sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q==",
      "dev": true
    },
    "mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "dev": true,
      "optional": true
    },
    "ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "msgpackr": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/msgpackr/-/msgpackr-1.6.2.tgz",
      "integrity": "sha512-bqSQ0DYJbXbrJcrZFmMygUZmqQiDfI2ewFVWcrZY12w5XHWtPuW4WppDT/e63Uu311ajwkRRXSoF0uILroBeTA==",
      "requires": {
        "msgpackr-extract": "^2.0.2"
      }
    },
    "msgpackr-extract": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/msgpackr-extract/-/msgpackr-extract-2.1.2.tgz",
      "integrity": "sha512-cmrmERQFb19NX2JABOGtrKdHMyI6RUyceaPBQ2iRz9GnDkjBWFjNJC0jyyoOfZl2U/LZE3tQCCQc4dlRyA8mcA==",
      "optional": true,
      "requires": {
        "@msgpackr-extract/msgpackr-extract-darwin-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-darwin-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-arm64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-linux-x64": "2.1.2",
        "@msgpackr-extract/msgpackr-extract-win32-x64": "2.1.2",
        "node-gyp-build-optional-packages": "5.0.3"
      }
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "dev": true
    },
    "nanoid": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.4.tgz",
      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw=="
    },
    "napi-build-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
      "dev": true,
      "optional": true
    },
    "ncp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
      "integrity": "sha512-zIdGUrPRFTUELUvr3Gmc7KZ2Sw/h1PiVM0Af/oHB6zgnV1ikqSfRk+TOufi79aHYCW3NiOXmr1BP5nWbzojLaA==",
      "dev": true
    },
    "near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dev": true,
      "requires": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      },
      "dependencies": {
        "bn.js": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
          "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==",
          "dev": true
        }
      }
    },
    "near-cli": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/near-cli/-/near-cli-3.4.2.tgz",
      "integrity": "sha512-0EaNAw5SKSIIJrJajG32CNMGfBtZTgIrOVKSXBTWpvo+F0OozsbvuO4UG3ZSRNThXHijxybp58SqPiU3JuzXGA==",
      "dev": true,
      "requires": {
        "@ledgerhq/hw-transport-node-hid": "^6.1.0",
        "analytics-node": "^6.1.0",
        "ascii-table": "0.0.9",
        "bn.js": "^5.1.1",
        "bs58": "^4.0.1",
        "chalk": "^4.0.0",
        "flagged-respawn": "^1.0.1",
        "is-ci": "^2.0.0",
        "jest-environment-node": "^27.0.6",
        "ncp": "^2.0.0",
        "near-api-js": "^0.44.2",
        "near-ledger-js": "^0.2.0",
        "near-seed-phrase": "^0.2.0",
        "open": "^8.0.7",
        "rimraf": "^3.0.0",
        "stoppable": "^1.1.0",
        "tcp-port-used": "^1.0.1",
        "update-notifier": "^5.0.0",
        "uuid": "^8.0.0",
        "v8flags": "^3.1.3",
        "yargs": "^16.0.3"
      }
    },
    "near-hd-key": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
      "integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
      "dev": true,
      "requires": {
        "bip39": "3.0.2",
        "create-hmac": "1.1.7",
        "tweetnacl": "1.0.3"
      }
    },
    "near-ledger-js": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/near-ledger-js/-/near-ledger-js-0.2.1.tgz",
      "integrity": "sha512-8anZb6e96gJNBOKUR/HReLN/x8BmBhCpyPq+XxFbx8jxmsRz+M1Hxq085+ROYaMI2EDJqatrjjLAdArk13BOhA==",
      "dev": true,
      "optional": true,
      "requires": {
        "@ledgerhq/hw-transport-u2f": "^5.36.0-deprecated",
        "@ledgerhq/hw-transport-webhid": "^5.51.1",
        "@ledgerhq/hw-transport-webusb": "^5.53.1",
        "bs58": "^4.0.1",
        "platform": "^1.3.6"
      }
    },
    "near-seed-phrase": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.2.0.tgz",
      "integrity": "sha512-NpmrnejpY1AdlRpDZ0schJQJtfBaoUheRfiYtQpcq9TkwPgqKZCRULV5L3hHmLc0ep7KRtikbPQ9R2ztN/3cyQ==",
      "dev": true,
      "requires": {
        "bip39-light": "^1.0.7",
        "bs58": "^4.0.1",
        "near-hd-key": "^1.2.1",
        "tweetnacl": "^1.0.2"
      }
    },
    "node-abi": {
      "version": "2.30.1",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.30.1.tgz",
      "integrity": "sha512-/2D0wOQPgaUWzVSVgRMx+trKJRC2UG4SUc4oCJoXx9Uxjtp0Vy3/kt7zcbxHF8+Z/pK3UloLWzBISg72brfy1w==",
      "dev": true,
      "optional": true,
      "requires": {
        "semver": "^5.4.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true,
          "optional": true
        }
      }
    },
    "node-addon-api": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
      "integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A=="
    },
    "node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dev": true,
      "requires": {
        "whatwg-url": "^5.0.0"
      }
    },
    "node-gyp-build": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.5.0.tgz",
      "integrity": "sha512-2iGbaQBV+ITgCz76ZEjmhUKAKVf7xfY1sRl4UiKQspfZMH2h06SyhNsnSVy50cwkFQDGLyif6m/6uFXHkOZ6rg=="
    },
    "node-gyp-build-optional-packages": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/node-gyp-build-optional-packages/-/node-gyp-build-optional-packages-5.0.3.tgz",
      "integrity": "sha512-k75jcVzk5wnnc/FMxsf4udAoTEUv2jY3ycfdSd3yWu6Cnd1oee6/CfZJApyscA4FJOmdoixWwiwOyf16RzD5JA=="
    },
    "node-hid": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
      "integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
      "dev": true,
      "optional": true,
      "requires": {
        "bindings": "^1.5.0",
        "node-addon-api": "^3.0.2",
        "prebuild-install": "^6.0.0"
      }
    },
    "node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "nodemon": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.19.tgz",
      "integrity": "sha512-4pv1f2bMDj0Eeg/MhGqxrtveeQ5/G/UVe9iO6uTZzjnRluSA4PVWf8CW99LUPwGB3eNIA7zUFoP77YuI7hOc0A==",
      "requires": {
        "chokidar": "^3.5.2",
        "debug": "^3.2.7",
        "ignore-by-default": "^1.0.1",
        "minimatch": "^3.0.4",
        "pstree.remy": "^1.1.8",
        "semver": "^5.7.1",
        "simple-update-notifier": "^1.0.7",
        "supports-color": "^5.5.0",
        "touch": "^3.1.0",
        "undefsafe": "^2.0.5"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "nopt": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
      "requires": {
        "abbrev": "1"
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="
    },
    "normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA=="
    },
    "normalize-url": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
      "integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA==",
      "dev": true
    },
    "npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "dev": true,
      "optional": true,
      "requires": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "requires": {
        "boolbase": "^1.0.0"
      }
    },
    "nullthrows": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/nullthrows/-/nullthrows-1.1.1.tgz",
      "integrity": "sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw=="
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha512-4jbtZXNAsfZbAHiiqjLPBiCl16dES1zI4Hpzzxw61Tk+loF+sBDBKx1ICKKKwIqQ7M0mFn1TmkN7euSncWgHiQ==",
      "dev": true,
      "optional": true
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dev": true,
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "optional": true
    },
    "object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "requires": {
        "wrappy": "1"
      }
    },
    "open": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.0.tgz",
      "integrity": "sha512-XgFPPM+B28FtCCgSb9I+s9szOC1vZRSwgWsRUA5ylIxRTgKozqjOCrVOqGsYABPYK5qnfqClxZTFBa8PKt2v6Q==",
      "dev": true,
      "requires": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      }
    },
    "ordered-binary": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/ordered-binary/-/ordered-binary-1.3.0.tgz",
      "integrity": "sha512-knIeYepTI6BDAzGxqFEDGtI/iGqs57H32CInAIxEvAHG46vk1Di0CEpyc1A7iY39B1mfik3g3KLYwOTNnnMHLA=="
    },
    "p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "dev": true
    },
    "package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "dev": true,
      "requires": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "parcel": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/parcel/-/parcel-2.7.0.tgz",
      "integrity": "sha512-pRYwnivwtNP0tip8xYSo4zCB0XhLt7/gJzP1p8OovCqkmFjG9VG+GW9TcAKqMIo0ovEa9tT+/s6gY1Qy+BONGQ==",
      "requires": {
        "@parcel/config-default": "2.7.0",
        "@parcel/core": "2.7.0",
        "@parcel/diagnostic": "2.7.0",
        "@parcel/events": "2.7.0",
        "@parcel/fs": "2.7.0",
        "@parcel/logger": "2.7.0",
        "@parcel/package-manager": "2.7.0",
        "@parcel/reporter-cli": "2.7.0",
        "@parcel/reporter-dev-server": "2.7.0",
        "@parcel/utils": "2.7.0",
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "get-port": "^4.2.0",
        "v8-compile-cache": "^2.0.0"
      }
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      }
    },
    "parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
    },
    "pbkdf2": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
      "integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
      "dev": true,
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="
    },
    "pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true
    },
    "platform": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/platform/-/platform-1.3.6.tgz",
      "integrity": "sha512-fnWVljUchTro6RiCFvCXBbNhJc2NijN7oIQxbwsyL0buWJPG85v81ehlHI9fXrJsMNgTofEoWIQeClKpgxFLrg==",
      "dev": true,
      "optional": true
    },
    "postcss": {
      "version": "8.4.16",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.16.tgz",
      "integrity": "sha512-ipHE1XBvKzm5xI7hiHCZJCSugxvsdq2mPnsq5+UF+VHCjiBvtDrlxJfMBToWaP9D5XlgNmcFGqoHmUn0EYEaRQ==",
      "requires": {
        "nanoid": "^3.3.4",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      }
    },
    "postcss-import": {
      "version": "14.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-14.1.0.tgz",
      "integrity": "sha512-flwI+Vgm4SElObFVPpTIT7SU7R3qk2L7PyduMcokiaVKuWv9d/U+Gm/QAd8NDLuykTWTkcrjOeD2Pp1rMeBTGw==",
      "dev": true,
      "requires": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      }
    },
    "postcss-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.0.tgz",
      "integrity": "sha512-77QESFBwgX4irogGVPgQ5s07vLvFqWr228qZY+w6lW599cRlK/HmnlivnnVUxkjHnCu4J16PDMHcH+e+2HbvTQ==",
      "dev": true,
      "requires": {
        "camelcase-css": "^2.0.1"
      }
    },
    "postcss-load-config": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
      "integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
      "dev": true,
      "requires": {
        "lilconfig": "^2.0.5",
        "yaml": "^1.10.2"
      }
    },
    "postcss-nested": {
      "version": "5.0.6",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-5.0.6.tgz",
      "integrity": "sha512-rKqm2Fk0KbA8Vt3AdGN0FB9OBOMDVajMG6ZCf/GoHgdxUJ4sBFp0A/uMIRm+MJUdo33YXEtjqIz8u7DAp8B7DA==",
      "dev": true,
      "requires": {
        "postcss-selector-parser": "^6.0.6"
      }
    },
    "postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dev": true,
      "requires": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      }
    },
    "postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ=="
    },
    "posthtml": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.16.6.tgz",
      "integrity": "sha512-JcEmHlyLK/o0uGAlj65vgg+7LIms0xKXe60lcDOTU7oVX/3LuEuLwrQpW3VJ7de5TaFKiW4kWkaIpJL42FEgxQ==",
      "requires": {
        "posthtml-parser": "^0.11.0",
        "posthtml-render": "^3.0.0"
      },
      "dependencies": {
        "posthtml-parser": {
          "version": "0.11.0",
          "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.11.0.tgz",
          "integrity": "sha512-QecJtfLekJbWVo/dMAA+OSwY79wpRmbqS5TeXvXSX+f0c6pW4/SE6inzZ2qkU7oAMCPqIDkZDvd/bQsSFUnKyw==",
          "requires": {
            "htmlparser2": "^7.1.1"
          }
        }
      }
    },
    "posthtml-parser": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.10.2.tgz",
      "integrity": "sha512-PId6zZ/2lyJi9LiKfe+i2xv57oEjJgWbsHGGANwos5AvdQp98i6AtamAl8gzSVFGfQ43Glb5D614cvZf012VKg==",
      "requires": {
        "htmlparser2": "^7.1.1"
      }
    },
    "posthtml-render": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-3.0.0.tgz",
      "integrity": "sha512-z+16RoxK3fUPgwaIgH9NGnK1HKY9XIDpydky5eQGgAFVXTCSezalv9U2jQuNV+Z9qV1fDWNzldcw4eK0SSbqKA==",
      "requires": {
        "is-json": "^2.0.1"
      }
    },
    "prebuild-install": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.1.4.tgz",
      "integrity": "sha512-Z4vpywnK1lBg+zdPCVCsKq0xO66eEV9rWo2zrROGGiRS4JtueBOdlB1FnY8lcy7JsUud/Q3ijUxyWN26Ika0vQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "detect-libc": "^1.0.3",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^1.0.1",
        "node-abi": "^2.21.0",
        "npmlog": "^4.0.1",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^3.0.3",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      }
    },
    "prepend-http": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
      "integrity": "sha512-ravE6m9Atw9Z/jjttRUZ+clIXogdghyZAuWJ3qEzjT+jI/dL1ifAqhZeC5VHzQp1MSt1+jxKkFNemj/iO7tVUA==",
      "dev": true
    },
    "pretty-format": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
      "integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
      "dev": true,
      "requires": {
        "ansi-regex": "^5.0.1",
        "ansi-styles": "^5.0.0",
        "react-is": "^17.0.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
          "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
          "dev": true
        }
      }
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "dev": true,
      "optional": true
    },
    "pstree.remy": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w=="
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "pupa": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
      "integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
      "dev": true,
      "requires": {
        "escape-goat": "^2.0.0"
      }
    },
    "queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true
    },
    "quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "dev": true,
      "requires": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      }
    },
    "react": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react/-/react-18.2.0.tgz",
      "integrity": "sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==",
      "peer": true,
      "requires": {
        "loose-envify": "^1.1.0"
      }
    },
    "react-dom": {
      "version": "18.2.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
      "integrity": "sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==",
      "peer": true,
      "requires": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.0"
      }
    },
    "react-error-overlay": {
      "version": "6.0.9",
      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.9.tgz",
      "integrity": "sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew=="
    },
    "react-ipfs-image": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/react-ipfs-image/-/react-ipfs-image-0.6.0.tgz",
      "integrity": "sha512-Ms17ZQFpzUGxz0QXB3wsSW4qTQkD6m0vxkwdXJ6nVsDKuta+QG9qRBITMhO5avYnOiLARJfLZOChVbYbdNJ/Rw==",
      "requires": {}
    },
    "react-is": {
      "version": "17.0.2",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
      "dev": true
    },
    "react-refresh": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.9.0.tgz",
      "integrity": "sha512-Gvzk7OZpiqKSkxsQvO/mbTN1poglhmAV7gR/DdIrRrSMXraRQQlfikRJOr3Nb9GTMPC5kof948Zy6jJZIFtDvQ=="
    },
    "react-router": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.3.0.tgz",
      "integrity": "sha512-7Wh1DzVQ+tlFjkeo+ujvjSqSJmkt1+8JO+T5xklPlgrh70y7ogx75ODRW0ThWhY7S+6yEDks8TYrtQe/aoboBQ==",
      "requires": {
        "history": "^5.2.0"
      }
    },
    "react-router-dom": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.3.0.tgz",
      "integrity": "sha512-uaJj7LKytRxZNQV8+RbzJWnJ8K2nPsOOEuX7aQstlMZKQT0164C+X2w6bnkqU3sjtLvpd5ojrezAyfZ1+0sStw==",
      "requires": {
        "history": "^5.2.0",
        "react-router": "6.3.0"
      }
    },
    "read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "requires": {
        "pify": "^2.3.0"
      }
    },
    "readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "regenerator-runtime": {
      "version": "0.13.9",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
    },
    "registry-auth-token": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.2.tgz",
      "integrity": "sha512-PC5ZysNb42zpFME6D/XlIgtNGdTl8bBOCw90xQLVMpzuuubJKYDWFAEuUNc+Cn8Z8724tg2SDhDRrkVEsqfDMg==",
      "dev": true,
      "requires": {
        "rc": "1.2.8"
      }
    },
    "registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "dev": true,
      "requires": {
        "rc": "^1.2.8"
      }
    },
    "remove-trailing-slash": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/remove-trailing-slash/-/remove-trailing-slash-0.1.1.tgz",
      "integrity": "sha512-o4S4Qh6L2jpnCy83ysZDau+VORNvnFw07CKSAymkd6ICNVEPisMyzlc00KlvvicsxKck94SEwhDnMNdICzO+tA==",
      "dev": true
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "dev": true
    },
    "resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dev": true,
      "requires": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
    },
    "responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha512-/Fpe5guzJk1gPqdJLJR5u7eG/gNY4nImjbRDaVWVMRhne55TCmj2i9Q+54PBRfatRC8v/rIiv9BN0pMd9OV5EQ==",
      "dev": true,
      "requires": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "dev": true,
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "requires": {
        "queue-microtask": "^1.2.2"
      }
    },
    "rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "scheduler": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz",
      "integrity": "sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==",
      "peer": true,
      "requires": {
        "loose-envify": "^1.1.0"
      }
    },
    "semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dev": true,
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "dev": true,
      "requires": {
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "dev": true,
      "optional": true
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "dev": true,
      "optional": true
    },
    "simple-get": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.1.tgz",
      "integrity": "sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==",
      "dev": true,
      "optional": true,
      "requires": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "simple-update-notifier": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.0.7.tgz",
      "integrity": "sha512-BBKgR84BJQJm6WjWFMHgLVuo61FBDSj1z/xSFUIozqO6wO7ii0JxCqlIud7Enr/+LhlbNI0whErq96P2qHNWew==",
      "requires": {
        "semver": "~7.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A=="
        }
      }
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true
    },
    "source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
    },
    "source-map-js": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz",
      "integrity": "sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw=="
    },
    "source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w=="
    },
    "stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^2.0.0"
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "dev": true
    },
    "stoppable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz",
      "integrity": "sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==",
      "dev": true
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.2.0"
      }
    },
    "string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==",
      "dev": true,
      "optional": true,
      "requires": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      }
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha512-VhumSSbBqDTP8p2ZLKj40UjBCV4+v8bUSEpUb4KjRgWk9pbqGF4REFj6KEagidb2f/M6AzC0EmFyDNGaw9OCzg==",
      "dev": true,
      "optional": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
          "integrity": "sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "dev": true
    },
    "supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "requires": {
        "has-flag": "^4.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true
    },
    "svgo": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-2.8.0.tgz",
      "integrity": "sha512-+N/Q9kV1+F+UeWYoSiULYo4xYSDQlTgb+ayMobAXPwMnLvop7oxKMo9OzIrX5x3eS4L4f2UHhc9axXwY8DpChg==",
      "requires": {
        "@trysound/sax": "0.2.0",
        "commander": "^7.2.0",
        "css-select": "^4.1.3",
        "css-tree": "^1.1.3",
        "csso": "^4.2.0",
        "picocolors": "^1.0.0",
        "stable": "^0.1.8"
      }
    },
    "tailwindcss": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.1.8.tgz",
      "integrity": "sha512-YSneUCZSFDYMwk+TGq8qYFdCA3yfBRdBlS7txSq0LUmzyeqRe3a8fBQzbz9M3WS/iFT4BNf/nmw9mEzrnSaC0g==",
      "dev": true,
      "requires": {
        "arg": "^5.0.2",
        "chokidar": "^3.5.3",
        "color-name": "^1.1.4",
        "detective": "^5.2.1",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.2.11",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "lilconfig": "^2.0.6",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.0.0",
        "postcss": "^8.4.14",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "5.0.6",
        "postcss-selector-parser": "^6.0.10",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        "resolve": "^1.22.1"
      }
    },
    "tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "dev": true,
      "optional": true,
      "requires": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      }
    },
    "tcp-port-used": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
      "integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
      "dev": true,
      "requires": {
        "debug": "4.3.1",
        "is2": "^2.0.6"
      }
    },
    "term-size": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
      "integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg=="
    },
    "terser": {
      "version": "5.14.2",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.14.2.tgz",
      "integrity": "sha512-oL0rGeM/WFQCUd0y2QrWxYnq7tfSuKBiqTjRPWrRgB46WD/kiwHwF8T23z78H6Q6kGCuuHcPB+KULHRdxvVGQA==",
      "requires": {
        "@jridgewell/source-map": "^0.3.2",
        "acorn": "^8.5.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "dependencies": {
        "acorn": {
          "version": "8.8.0",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
          "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w=="
        },
        "commander": {
          "version": "2.20.3",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
          "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ=="
        }
      }
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==",
      "dev": true
    },
    "timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha512-qsdtZH+vMoCARQtyod4imc2nIJwg9Cc7lPRrw9CzF8ZKR0khdr8+2nX80PBhET3tcyTtJDxAffGh2rXH4tyU8A=="
    },
    "to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "dev": true
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true
    },
    "touch": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
      "requires": {
        "nopt": "~1.0.10"
      }
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "dev": true
    },
    "tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "optional": true
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "dev": true,
      "optional": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
      "dev": true
    },
    "type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "dev": true
    },
    "type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ=="
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "u2f-api": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/u2f-api/-/u2f-api-0.2.7.tgz",
      "integrity": "sha512-fqLNg8vpvLOD5J/z4B6wpPg4Lvowz1nJ9xdHcCzdUPKcFE/qNCceV2gNZxSJd5vhAZemHr/K/hbzVA0zxB5mkg==",
      "dev": true,
      "optional": true
    },
    "u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w==",
      "dev": true
    },
    "undefsafe": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA=="
    },
    "unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "dev": true,
      "requires": {
        "crypto-random-string": "^2.0.0"
      }
    },
    "update-browserslist-db": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.5.tgz",
      "integrity": "sha512-dteFFpCyvuDdr9S/ff1ISkKt/9YZxKjI9WlRR99c180GaztJtRa/fn18FdxGVKVsnPY7/a/FDN68mcvUmP4U7Q==",
      "requires": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      }
    },
    "update-notifier": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
      "integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
      "dev": true,
      "requires": {
        "boxen": "^5.0.0",
        "chalk": "^4.1.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.4.0",
        "is-npm": "^5.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.1.0",
        "pupa": "^2.1.1",
        "semver": "^7.3.4",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      }
    },
    "url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha512-NjFKA0DidqPa5ciFcSrXnAltTtzz84ogy+NebPvfEgAck0+TNg4UJ4IN+fB7zRZfbgUf0syOo9MDxFkDSMuFaQ==",
      "dev": true,
      "requires": {
        "prepend-http": "^2.0.0"
      }
    },
    "usb": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/usb/-/usb-1.9.2.tgz",
      "integrity": "sha512-dryNz030LWBPAf6gj8vyq0Iev3vPbCLHCT8dBw3gQRXRzVNsIdeuU+VjPp3ksmSPkeMAl1k+kQ14Ij0QHyeiAg==",
      "dev": true,
      "optional": true,
      "requires": {
        "node-addon-api": "^4.2.0",
        "node-gyp-build": "^4.3.0"
      },
      "dependencies": {
        "node-addon-api": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-4.3.0.tgz",
          "integrity": "sha512-73sE9+3UaLYYFmDsFZnqCInzPyh3MqIwZO9cw58yIqAZhONrrabrYyYe3TuIqtIiOuTXVhsGau8hcrhhwSsDIQ==",
          "dev": true,
          "optional": true
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true
    },
    "utility-types": {
      "version": "3.10.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.10.0.tgz",
      "integrity": "sha512-O11mqxmi7wMKCo6HKFt5AhO4BwY3VV68YU07tgxfz8zJTIxr4BpsezN49Ffwy9j3ZpwwJp4fkRwjRzq3uWE6Rg=="
    },
    "uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "dev": true
    },
    "v8-compile-cache": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA=="
    },
    "v8flags": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.2.0.tgz",
      "integrity": "sha512-mH8etigqMfiGWdeXpaaqGfs6BndypxusHHcv2qSHyZkGEznCd/qAXCWWRzeowtL54147cktFOC4P5y+kl8d8Jg==",
      "dev": true,
      "requires": {
        "homedir-polyfill": "^1.0.1"
      }
    },
    "weak-lru-cache": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/weak-lru-cache/-/weak-lru-cache-1.2.2.tgz",
      "integrity": "sha512-DEAoo25RfSYMuTGc9vPJzZcZullwIqRDSI9LOy+fkCJPi6hykCnfKaXTuPBDuXAUcqHXyOgFtHNp/kB2FjYHbw=="
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "dev": true
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dev": true,
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "wide-align": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
      "integrity": "sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==",
      "dev": true,
      "optional": true,
      "requires": {
        "string-width": "^1.0.2 || 2 || 3 || 4"
      }
    },
    "widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "dev": true,
      "requires": {
        "string-width": "^4.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "dev": true
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true
    },
    "xxhash-wasm": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/xxhash-wasm/-/xxhash-wasm-0.4.2.tgz",
      "integrity": "sha512-/eyHVRJQCirEkSZ1agRSCwriMhwlyUcFkXD5TPVSLP+IPzjsqMVzZwdoczLp1SoQU0R3dxz1RpIK+4YNQbCVOA=="
    },
    "y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "yaml": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
      "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg=="
    },
    "yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "dev": true,
      "requires": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "dev": true
    }
  }
}

'''
'''--- near-election-dapp/frontend/package.json ---
{
  "name": "frontend",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "start": "cd frontend && npm run start",
    "dev": "cd frontend && npm run dev",
    "deploy": "npm run build:contract && cd contract && near dev-deploy --wasmFile ./target/wasm32-unknown-unknown/release/hello_near.wasm",
    "build": "npm run build:contract && npm run build:web",
    "build:web": "cd frontend && npm run build",
    "build:contract": "cd contract && rustup target add wasm32-unknown-unknown && cargo build --all --target wasm32-unknown-unknown --release",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "cd contract && cargo test",
    "test:integration": "npm run build:contract && cd integration-tests && cargo run --example integration-tests \"../contract/target/wasm32-unknown-unknown/release/hello_near.wasm\"",
    "deps-install": "npm install && cd frontend && npm install && cd .."
  },
  "devDependencies": {
    "near-cli": "^3.3.0",
    "postcss": "^8.4.16",
    "tailwindcss": "^3.1.8"
  },
  "dependencies": {
    "autoprefixer": "^10.4.8",
    "nodemon": "^2.0.19",
    "parcel": "^2.7.0",
    "react-ipfs-image": "^0.6.0",
    "react-router-dom": "^6.3.0"
  }
}

'''