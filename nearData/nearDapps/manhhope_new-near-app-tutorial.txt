*GitHub Repository "manhhope/new-near-app-tutorial"*

'''--- .dependabot/config.yml ---
version: 1
update_configs:
  - package_manager: "javascript"
    directory: "/"
    update_schedule: "live"
    automerged_updates:
      - match:
          dependency_type: "development"
          update_type: "all"
      - match:
          dependency_type: "production"
          update_type: "all"

'''
'''--- .github/workflows/tests.yml ---
name: Tests
on: push
jobs:
  tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install modules
        run: yarn install --frozen-lockfile
      - name: Build and run tests
        env:
          IS_GITHUB_ACTION: true
        run: yarn test

'''
'''--- .gitpod.yml ---
image:
  file: .gitpod.Dockerfile
# Options to prebuild the image after github events and set notifications/badges
github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: true
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: false
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: false

# List the start up tasks. You can start them in parallel in multiple terminals. See https://www.gitpod.io/docs/config-start-tasks/
tasks:
  - before: nvm use default
    init: yarn
    command: gp open README-Gitpod.md && yarn dev

ports:
  - port: 1234
    onOpen: open-browser

'''
'''--- .travis.yml ---
language: node_js
os:
  - linux
  - osx
  - windows
node_js:
  - 12
env:
  - NODE_ENV=ci YARN_GPG=no
  - NODE_ENV=ci-betanet YARN_GPG=no
cache: yarn
script:
  - yarn build
  - yarn test

'''
'''--- README-Gitpod.md ---
Counter example in AssemblyScript - Gitpod version
==================================================

This README is specific to Gitpod and this example. For local development, please see [README.md](README.md).

## Description

In Gitpod, the counter will start automatically. Please look in the terminal for a link to follow.

This contract implements simple counter backed by storage on blockchain.
Contract in `assembly/main.ts` provides methods to increment / decrement counter and get it's current value or reset.

Plus and minus buttons increase and decrease value correspondingly. When button L is toggled, counter will add or minus 10 a time. RS button is for reset. LE and RE buttons to let the robot wink to you.

## To Test

```
yarn asp  # as-pect tests
NODE_ENV=ci yarn jest # jest tests
NODE_ENV=ci yarn test # both
```

## To Explore

- `assembly/main.ts` for the contract code
- `src/index.html` for the front-end HTML
- `src/main.js` for the JavaScript front-end code and how to integrate contracts
- `src/test.js` for the JS tests for the contract

## Data collection

By using Gitpod in this project, you agree to opt-in to basic, anonymous analytics. No personal information is transmitted. Instead, these usage statistics aid in discovering potential bugs and user flow information.

'''
'''--- README.md ---
Counter example in AssemblyScript
=================================

[![Open in Gitpod!](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/near-examples/counter)

<!-- MAGIC COMMENT: DO NOT DELETE! Everything above this line is hidden on NEAR Examples page -->

## Description

This contract implements simple counter backed by storage on blockchain.
Contract in `assembly/main.ts` provides methods to increment / decrement counter and get it's current value or reset.

Plus and minus buttons increase and decrease value correspondingly. When button L is toggled, counter will add or minus 10 a time. RS button is for reset. LE and RE buttons to let the robot wink to you.

## To Run
Open in the Gitpod link above or clone the repository.

```
git clone https://github.com/near-examples/counter
```

## Setup [Or skip to Login if in Gitpod](#login)
Install dependencies:

```
yarn --frozen-lockfile
```

Make sure you have `near-cli` by running:

```
near --version
```

If you need to install `near-cli`:

```
npm install near-cli -g
```

## Login
If you do not have a NEAR account, please create one with [NEAR Wallet](https://wallet.nearprotocol.com).

In the project root, login with `near-cli` by following the instructions after this command:

```
near login
```

Modify the top of `src/config.js`, changing the `CONTRACT_NAME` to be the NEAR account name in the file `neardev/dev-account`. It starts with `dev-`.

```javascript
…
const CONTRACT_NAME = 'neardev/dev-account ACCOUNT ID'; /* TODO: fill this in! */
…
```

Start the example!

```
yarn start
```

## To Test

```
yarn asp  # as-pect tests
NODE_ENV=ci yarn jest # jest tests
NODE_ENV=ci yarn test # both
```

## To Explore

- `assembly/main.ts` for the contract code
- `src/index.html` for the front-end HTML
- `src/main.js` for the JavaScript front-end code and how to integrate contracts
- `src/test.js` for the JS tests for the contract

'''
'''--- as-pect.config.js ---
module.exports = require('near-sdk-as/imports');
'''
'''--- asconfig.js ---
const compile = require("near-sdk-as/compiler").compile

compile("assembly/main.ts", // input file
        "out/main.wasm",    // output file
        [
        //   "-O1",          // Optional arguments
        "--debug",
        "--measure",         // Shows compiler runtime
        "--validate"         // Validate the generated wasm module
        ], {
          verbose: true     // Output the cli args passed to asc
        });

'''
'''--- assembly/__tests__/as-pect.d.ts ---
/// <reference types="@as-pect/assembly/types/as-pect" />
'''
'''--- assembly/__tests__/context.json ---
{
    "current_account_id": "eve",
    "signer_account_id": "bob",
    "signer_account_pk": "15T",
    "predecessor_account_id": "carol",
    "input": "{\"name\":\"Alice\"}",
    "block_index": 0,
    "epoch_height": 43,
    "account_balance": "0",
    "account_locked_balance": "0",
    "attached_deposit": "0",
    "prepaid_gas": 100000000000000,
    "random_seed": "15T",
    "free_of_charge": false,
    "storage_usage": 0,
    "output_data_receivers": [],
    "block_timestamp": 1,
    "is_view": false
}

'''
'''--- assembly/__tests__/main.spec.ts ---
import {
    getCounter,
    resetCounter,
    incrementCounter,
    decrementCounter
} from '../main';

import { context, storage, VM } from 'near-sdk-as';

describe("Counter ", () => {
    it("should increment by one", () => {
        incrementCounter(1);
        expect(getCounter()).toBe(1, "counter should be one after a single increment.");
    });

    it("getCounter is the same as reading from storage", () => {
        expect(storage.getPrimitive<i32>("counter", 0)).toBe(getCounter(), "storage.getPrimitive<i32>(\"counter\", 0) = getCounter()");
    });

    it("should decrement by one", () => {
        incrementCounter(1);
        decrementCounter(1);
        expect(getCounter()).toBe(0, "counter should be zero after a single decrement.");
    });

    it("should be resetable", () => {
        incrementCounter(1);
        incrementCounter(1);
        resetCounter(); // reset to zero
        expect(getCounter()).toBe(0, "counter should be zero after it is reset."); 
    });
    
    it("should increment multiple times and decrement back to zero", () => {
        incrementCounter(1);
        expect(getCounter()).toBe(1, "0 + 1 = 1");
        incrementCounter(3);
        expect(getCounter()).toBe(4, "1 + 3 = 4");
        decrementCounter(4);
        expect(getCounter()).toBe(0, "4 - 4 = 0");
    });

    it("should be eve's account", () => {
        expect(context.contractName).toBe("eve");
    });
});

'''
'''--- assembly/as_types.d.ts ---
/// <reference types="near-sdk-as/assembly/as_types" />
'''
'''--- assembly/main.ts ---
import { storage, logging } from "near-sdk-as";

// --- contract code goes below

export function incrementCounter(value: i32): void {
  const newCounter = storage.getPrimitive<i32>("counter", 0) + value;
  storage.set<i32>("counter", newCounter);
  logging.log("Counter is now: " + newCounter.toString());
}

export function decrementCounter(value: i32): void {
  const newCounter = storage.getPrimitive<i32>("counter", 0) - value;
  storage.set<i32>("counter", newCounter);
  logging.log("Counter is now: " + newCounter.toString());
}

export function getCounter(): i32 {
  return storage.getPrimitive<i32>("counter", 0);
}

export function resetCounter(): void {
  storage.set<i32>("counter", 0);
  logging.log("Counter is reset!");
}

'''
'''--- assembly/tsconfig.json ---
{
  "extends": "../node_modules/assemblyscript/std/assembly.json",
  "include": [
    "./**/*.ts",
    "../node_modules/**/*/as_types.d.ts"
  ]
}

'''
'''--- neardev/shared-test-staging/test.near.json ---
{"account_id":"test.near","private_key":"ed25519:2wyRcSwSuHtRVmkMCGjPwnzZmQLeXLzLLyED1NDMt4BjnKgQL6tF85yBx6Jr26D2dUNeC716RBoTxntVHsegogYw"}

'''
'''--- neardev/shared-test/test.near.json ---
{"account_id":"test.near","private_key":"ed25519:2wyRcSwSuHtRVmkMCGjPwnzZmQLeXLzLLyED1NDMt4BjnKgQL6tF85yBx6Jr26D2dUNeC716RBoTxntVHsegogYw"}

'''
'''--- package.json ---
{
  "name": "counter",
  "description": "Counter Smart Contract\n\nThis project contains implementation of counter backed by blockchain.\n\n[AssemblyScript](https://github.com/AssemblyScript/assemblyscript) compiles strictly typed TypeScript to WebAssembly using Binaryen. See the [AssemblyScript wiki](https://github.com/AssemblyScript/assemblyscript/wiki) for further instructions and documentation.",
  "version": "0.0.1",
  "scripts": {
    "build": "node asconfig.js",
    "deploy:contract": "near deploy",
    "deploy": "yarn build && yarn deploy:contract && yarn deploy:pages",
    "deploy:dev": "yarn build && near dev-deploy",
    "prestart": "yarn build && yarn deploy:contract",
    "dev": "yarn deploy:dev && yarn watch",
    "watch": "nodemon --watch assembly -e ts --exec \"env-cmd -f ./neardev/dev-account.env parcel src/index.html\"",
    "start": "env-cmd -f ./neardev/dev-account.env parcel src/index.html",
    "test": "asp && yarn jest",
    "test:ci": "env NODE_ENV=ci yarn test",
    "asp": "asp --verbose",
    "jest": "yarn build && jest test"
  },
  "devDependencies": {
    "env-cmd": "^10.1.0",
    "jest": "~27.0.6",
    "jest-environment-node": "~27.0.6",
    "near-sdk-as": "0.4.2",
    "near-cli": "^2.1.1",
    "nodemon": "~2.0.12",
    "parcel-bundler": "~1.12.5"
  },
  "jest": {
    "testEnvironment": "near-cli/test_environment",
    "testPathIgnorePatterns": [
      "<rootDir>/assembly/",
      "<rootDir>/node_modules/"
    ]
  },
  "dependencies": {
    "near-api-js": "^0.43.1",
    "regenerator-runtime": "^0.13.9"
  }
}

'''
'''--- src/config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME || 'counter'; /* TODO: fill this in! */

function getConfig (env) {
  switch (env) {
    case 'production':
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.near.org',
        helperUrl: 'https://helper.mainnet.near.org'
      }
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org'
      }
    case 'betanet':
      return {
        networkId: 'betanet',
        nodeUrl: 'https://rpc.betanet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.betanet.near.org',
        helperUrl: 'https://helper.betanet.near.org'
      }
    case 'local':
      return {
        networkId: 'local',
        nodeUrl: 'http://localhost:3030',
        keyPath: `${process.env.HOME}/.near/validator_key.json`,
        walletUrl: 'http://localhost:4000/wallet',
        contractName: CONTRACT_NAME
      }
    case 'test':
    case 'ci':
      return {
        networkId: 'shared-test',
        nodeUrl: 'https://rpc.ci-testnet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      }
    case 'ci-betanet':
      return {
        networkId: 'shared-test-staging',
        nodeUrl: 'https://rpc.ci-betanet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      }
    default:
      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)
  }
}

module.exports = getConfig

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css?family=Arvo&display=swap" rel="stylesheet">
  <style>
      h1 {
        margin-top: 3em;
        margin-bottom: 1em;
      }
      .scene {
        height: 350px;
      }
      .face {
        margin: auto;
        width: 66%;
        height: 72%;
        background-color: #fffaf2;
      }
      .number {
        text-align: center;
        margin:auto;
        width: 66%;
        height: 28%;
        background-color: #ffd9f8;
        border-top: 5px dotted #82174d;
        font-size:1.5rem;
      }
      .eyes-row {
        display: flex;
        justify-content: space-around;
        margin-top: 24%;
        padding: 0 8px;
      }
      .closed {
        width: 22px;
        height: 13px;
        border-top-left-radius: 100px;
        border-top-right-radius: 100px;
        border-left: 2px solid #ffa4b1;
        border-right: 2px solid #ffa4b1;
        border-top: 2px solid #ffa4b1;
        margin-bottom: 12px;
      }
      .eye {
        width: 26px;
        height: 26px;
        border-radius: 100px;
        background-color: #ffa4b1;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 1px;
      }
      .eye .pupil {
        position: relative;
        width: 18px;
        height: 18px;
        border-radius: 100px;
        background-color: #82174d;
      }
      .eye .pupil:before {
        content: "";
        width: 6px;
        height: 6px;
        position: absolute;
        background-color: #fff;
        top: 4px;
        left: 3px;
        border-radius: 100px;
      }
      .eye .pupil:after {
        content: "";
        width: 3px;
        height: 3px;
        position: absolute;
        background-color: #fff;
        top: 9px;
        left: 12px;
        border-radius: 100px;
      }
      .mouth-row {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
      }
      .mouth-row .mouth {
        margin-top: 3%;
      }
      .mouth-row .tongue {
        position:absolute;
        width: 10px;
        height: 10px;
        background-color: #FF585D;
        border-radius: 50% 50% 30%;
        margin: 5px 0;
      }
      .mouth-row .mouth.smile {
        height: 16px;
        width: 32px;
        border-bottom-left-radius: 32px;
        border-bottom-right-radius: 32px;
        background-color: #82174d;
        top: 120px;
      }
      .mouth-row .mouth.cry {
        height: 16px;
        width: 32px;
        border-top-left-radius: 32px;
        border-top-right-radius: 32px;
        background-color: #82174d;
        top: 120px;
      }
      .mouth-row .mouth:before {
        content: "";
        left: 43px;
        margin-top: 1%;
        border-radius: 100%;
        height: 5%;
        width: 11.5%;
        background-color: #f56f79;
        position: absolute;
      }
      .mouth-row .mouth:after {
        content: "";
        left: 106px;
        margin-top: 1%;
        border-radius: 100%;
        height: 5%;
        width: 11.5%;
        background-color: #f56f79;
        position: absolute;
      }
      .gameboy {
        position: relative;
        width: 400px;
        margin: auto;
      }
      .body-shape {
        position: absolute;
        height: 300px;
        width: 205px;
        border-radius: 15px;
      }
      .body-shape .shadow {
        height: 290px;
      }
      .body-shape .screen {
        margin: 20px;
        position: relative;
        width: 168px;
        height: 134px;
        background-color: #82174d;
        border-radius: 4px;
        display: flex;
        flex-direction: column;
        justify-items: center;
      }
      .body-shape .dot {
        content: "";
        width: 8px;
        height: 8px;
        position: absolute;
        background-color: #ffa4b1;
        top: 40px;
        left: 10px;
        border-radius: 100px;
      }
      .body-shape .on {
        background-color: #F0EC74;
      }
      .body-shape .buttons {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        width: 100%;
      }
      .body-shape .buttons .row {
        display: flex;
      }
      .body-shape .buttons .selects {
        margin-top: 10px;
        padding-left: 140px;
      }
      .body-shape .buttons .arrows {
        position: relative;
        height: 40px;
        width: 40px;
        border-radius: 100px;
        background-color: #ffa4b1;
        margin-left: 30px;
        padding: 0;
        cursor: grab;
      }
      .body-shape .buttons .arrows:disabled {
        opacity: 0.8;
        background-color: #d18892;
      }
      .body-shape .buttons .arrows .updown {
        position: relative;
        height: 35px;
        width: 10px;
        background-color: #82174d;
        border-radius: 2px;
        top: -8px;
        left: 14px;
      }
      .body-shape .buttons .arrows .left {
        position: relative;
        width: 35px;
        height: 10px;
        background-color: #82174d;
        border-radius: 2px;
        top: 14px;
        left: 2px;
      }
      .body-shape .buttons .arrows .right {
        position: relative;
        width: 35px;
        height: 10px;
        background-color: #82174d;
        border-radius: 2px;
        left: 2px;
      }
      .body-shape .buttons .ab {
        width: 64px;
        height: 64px;
        background-color: #ffa4b1;
        border-radius: 10px;
        transform: rotate(45deg);
        font-size: 0.6rem;
        text-align: center;
      }
      .body-shape .buttons .ab .r {
        width: 24px;
        height: 24px;
        border-radius: 100%;
        background-color: #82174d;
        position: absolute;
        transform: rotate(-45deg);
        padding: 5px;
        color: #ffa4b1;
        cursor:pointer;
        box-shadow:-1px 0 1px #4B4F54;
      }
      .body-shape .buttons .ab .r:hover {
        opacity: 0.8;
      }
      .body-shape .buttons .ab .r:active {
        background-color: #F0EC74;
        opacity: 1;
      }
      .body-shape .buttons .ab .a {
        top: 4px;
        left: 4px;
      }
      .body-shape .buttons .ab .b {
        top: 4px;
        left: 36px;
      }
      .body-shape .buttons .ab .c {
        top: 36px;
        left: 4px;
      }
      .body-shape .buttons .ab .d {
        top: 36px;
        left: 36px;
      }
      .shadow {
        background-color: #888ad0;
        z-index: 0;
        left: -17px;
        top: 26px;
      }
      .side {
        background-color: #82174d;
        z-index: 1;
      }
      .front {
        background-color: #f56f79;
        left: 26px;
        z-index: 2;
      }
      .loader,
      .loader:before,
      .loader:after {
        background: #f56f79;
        -webkit-animation: load1 1s infinite ease-in-out;
        animation: load1 1s infinite ease-in-out;
        width: 0.4rem;
        height: 4em;
      }
      .loader {
        color: #f56f79;
        margin: 2px auto;
        font-size: 0.2rem;
        -webkit-transform: translateZ(0);
        -ms-transform: translateZ(0);
        transform: translateZ(0);
        -webkit-animation-delay: -0.16s;
        animation-delay: -0.16s;
      }
      .loader:before,
      .loader:after {
        position: absolute;
        top: 0;
        content: '';
      }
      .loader:before {
        left: -1.5em;
        -webkit-animation-delay: -0.32s;
        animation-delay: -0.32s;
      }
      .loader:after {
        left: 1.5em;
      }
      @-webkit-keyframes load1 {
        0%,
        80%,
        100% {
          box-shadow: 0 0;
          height: 2em;
        }
        40% {
          box-shadow: 0 -2em;
          height: 3em;
        }
      }
      @keyframes load1 {
        0%,
        80%,
        100% {
          box-shadow: 0 0;
          height: 2em;
        }
        40% {
          box-shadow: 0 -2em;
          height: 3em;
        }
      }
    </style>
</head>
<body style="background: #eef2fe; font-family: 'Arvo', serif;">
  <div class="container">
    <h1>This is just a counter, but this time on blockchain!</h1>

    <div class="sign-in" style="display: none;">
      <p>You'll need to sign in to call contract methods:</p>
      <button class="btn btn-primary" style="background-color: #0072CE;">Sign In</button>
    </div>

    <div class="after-sign-in" style="display: none;">
        <div class="scene">
          <div class="gameboy">
            <div class="body-shape shadow"></div>
            <div class="body-shape side"></div>
            <div class="body-shape front">
              <div class="screen">
                <div class="dot"></div>
                <div class="face">
                  <div class="eyes-row">
                    <div id="left" class="closed">
                      <div class="pupil"></div>
                    </div>
                    <div id="right" class="closed">
                      <div class="pupil"></div>
                    </div>
                  </div>
                  <div class="mouth-row">
                    <div class="mouth smile"></div>
                    <div class="tongue"></div>
                  </div>
                </div>
                <div id="show" class="number"></div>
              </div>
              <div class="buttons">
                <div class="row">
                  <button id="plus" class="arrows">
                    <div class="left">
                    </div>
                    <div class="updown">
                    </div>
                  </button>
                  <button id="minus" class="arrows">
                    <div class="right">
                    </div>
                  </button>
                </div>
                <div class="selects row">
                  <div class="ab">
                    <div id="a" class="r a">RS</div>
                    <div id="b" class="r b">LE</div>
                    <div id="c" class="r c">RE</div>
                    <div id="d" class="r d">L</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="sign-out">
          <button class="btn btn-primary" style="background-color: #0072CE;">Sign Out</button>
        </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
  <script src="./main.js"></script>
</body>
</html>

'''
'''--- src/loader.html ---
<head>
    <script>
        window.paceOptions = {
            elements: {
                selectors: ['.never-appears']
            }
        };
    </script>
    <script src="https://cdn.jsdelivr.net/gh/HubSpot/pace@v0.5.3/pace.min.js"></script>
    <link href="https://cdn.jsdelivr.net/gh/HubSpot/pace@v0.5.3/themes/black/pace-theme-center-radar.css" rel="stylesheet" />
</head>
'''
'''--- src/main.js ---
import "regenerator-runtime/runtime";
import * as nearAPI from "near-api-js";
import getConfig from "./config";

let nearConfig = getConfig(process.env.NODE_ENV || "development");
window.nearConfig = nearConfig;

// Connects to NEAR and provides `near`, `walletAccount` and `contract` objects in `window` scope
async function connect() {
  // Initializing connection to the NEAR node.
  window.near = await nearAPI.connect(Object.assign(nearConfig, { deps: { keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore() }}));

  // Needed to access wallet login
  window.walletAccount = new nearAPI.WalletConnection(window.near);

  // Initializing our contract APIs by contract name and configuration.
  window.contract = await near.loadContract(nearConfig.contractName, {
    viewMethods: ['getCounter'],
    changeMethods: ['incrementCounter', 'decrementCounter', 'resetCounter'],
    sender: window.walletAccount.getAccountId()
  });
}

function updateUI() {
  if (!window.walletAccount.getAccountId()) {
    Array.from(document.querySelectorAll('.sign-in')).map(it => it.style = 'display: block;');
  } else {
    Array.from(document.querySelectorAll('.after-sign-in')).map(it => it.style = 'display: block;');
    contract.getCounter().then(count => {
      document.querySelector('#show').classList.replace('loader','number');
      document.querySelector('#show').innerText = count == undefined ? 'calculating...' : count;
      document.querySelector('#left').classList.toggle('eye');
      document.querySelectorAll('button').forEach(button => button.disabled = false);
      if (count >= 0) {
        document.querySelector('.mouth').classList.replace('cry','smile');
      }else {
        document.querySelector('.mouth').classList.replace('smile','cry');
      }
      if (count > 20 || count < -20) {
        document.querySelector('.tongue').style.display = 'block';
      }else {
        document.querySelector('.tongue').style.display = 'none';
      }
    });
  }
}

// counter method
let value = 1;

document.querySelector('#plus').addEventListener('click', ()=>{
  document.querySelectorAll('button').forEach(button => button.disabled = true);
  document.querySelector('#show').classList.replace('number','loader');
  document.querySelector('#show').innerText = '';
  contract.incrementCounter({value}).then(updateUI);
});
document.querySelector('#minus').addEventListener('click', ()=>{
  document.querySelectorAll('button').forEach(button => button.disabled = true);
  document.querySelector('#show').classList.replace('number','loader');
  document.querySelector('#show').innerText = '';
  contract.decrementCounter({value}).then(updateUI);
});
document.querySelector('#a').addEventListener('click', ()=>{
  document.querySelectorAll('button').forEach(button => button.disabled = true);
  document.querySelector('#show').classList.replace('number','loader');
  document.querySelector('#show').innerText = '';
  contract.resetCounter().then(updateUI);
});
document.querySelector('#c').addEventListener('click', ()=>{
  document.querySelector('#left').classList.toggle('eye');
});
document.querySelector('#b').addEventListener('click', ()=>{
  document.querySelector('#right').classList.toggle('eye');
});
document.querySelector('#d').addEventListener('click', ()=>{
  document.querySelector('.dot').classList.toggle('on');
  if (document.querySelector('.dot').classList.contains('on')) {
    value = 10;
  }else {
    value = 1;
  }
});
// Log in user using NEAR Wallet on "Sign In" button click
document.querySelector('.sign-in .btn').addEventListener('click', () => {
  walletAccount.requestSignIn(nearConfig.contractName, 'NEAR Counter Example');
});

document.querySelector('.sign-out .btn').addEventListener('click', () => {
  walletAccount.signOut();
  // TODO: Move redirect to .signOut() ^^^
  window.location.replace(window.location.origin + window.location.pathname);
});

window.nearInitPromise = connect()
  .then(updateUI)
  .catch(console.error);

'''
'''--- src/test-setup.js ---
(function () {
  let params = new URL(window.location).searchParams;
  let keyStore = new nearlib.keyStores.InMemoryKeyStore();
  nearConfig.contractName = params.get('contractName') || nearConfig.contractName;
  keyStore.setKey(nearConfig.networkId, nearConfig.contractName, nearlib.KeyPair.fromString(params.get('privateKey')));
  nearConfig.deps = { keyStore };
})();

'''
'''--- src/test.js ---
describe('Token', function () {
  let near;
  let contract;
  let accountId;

  beforeAll(async function () {
    console.log('nearConfig', nearConfig);
    near = await nearlib.connect(nearConfig);
    accountId = nearConfig.contractName;
    contract = await near.loadContract(nearConfig.contractName, {
      viewMethods: ['getCounter'],
      changeMethods: ['incrementCounter', 'decrementCounter'],
      sender: accountId
    });
  });

  describe('counter', function () {
    it('can be incremented', async function () {
      const startCounter = await contract.getCounter();
      await contract.incrementCounter({value: 1});
      const endCounter = await contract.getCounter();
      expect(endCounter).toEqual(startCounter + 1);
    });
    it('can be decremented', async function () {
      await contract.incrementCounter({value: 1});
      const startCounter = await contract.getCounter();
      await contract.decrementCounter({value: 1});
      const endCounter = await contract.getCounter();
      expect(endCounter).toEqual(startCounter - 1);
    });
  });
});

'''