*GitHub Repository "NEARBuilders/every"*

'''--- .env ---

'''
'''--- README.md ---
# everything browser

## Setup & Development

Initialize repo:
```
yarn
```

Start development version:
```
yarn dev
```

## Using Bos-Loader

Set up a workspace like here: [bos-workspace](https://github.com/sekaiking/bos-workspace)

Set the flag at localhost:3000/flags

## Breakdown

### App.js

- Configure custom elements in the VM
- Add a route to the gateway

### ViewPage.js

- Access query params and render widget

## Custom Elements

### Camera : react-webcam

[react-webcam](https://github.com/mozmorris/react-webcam)
components/custom/Camera
[https://everything.dev/efiz.near/widget/Camera](efiz.near/widget/Camera)

### MonacoEditor : monaco-editor/react

[monaco-editor/react]()
components/custom/MonacoEditor
[https://everything.dev/efiz.near/widget/MonacoEditor](efiz.near/widget/MonacoEditor)

TODO: Can switch to https://github.com/react-monaco-editor/react-monaco-editor

### KeypomScanner : keypom

[keypom]()
components/custom/KeypomScanner
[https://everything.dev/scanner](efiz.near/widget/KeypomScanner)

## Contributing

### Extending the gateway with a custom component:

- [ ] Install library
- [ ] Create component in /components/common
- [ ] Add component as custom element in App.js

'''
'''--- config/paths.js ---
const path = require("path");

const srcPath = path.resolve(__dirname, "../src");
const distPath = path.resolve(__dirname, "../dist");
const publicPath = path.resolve(__dirname, "../public");
const nodeModulesPath = path.resolve(__dirname, "../node_modules");

module.exports = {
  srcPath,
  distPath,
  publicPath,
  nodeModulesPath,
};

'''
'''--- config/presets/loadPreset.js ---
const { merge } = require("webpack-merge");

const loadPresets = (env = { presets: [] }) => {
  const presets = env.presets || [];
  /** @type {string[]} */
  const mergedPresets = [].concat(...[presets]);
  const mergedConfigs = mergedPresets.map((presetName) =>
    require(`./webpack.${presetName}.js`)(env)
  );

  return merge({}, ...mergedConfigs);
};
module.exports = loadPresets;

'''
'''--- config/presets/webpack.analyze.js ---
const WebpackBundleAnalyzer =
  require("webpack-bundle-analyzer").BundleAnalyzerPlugin;

module.exports = () => ({
  plugins: [new WebpackBundleAnalyzer()],
});

'''
'''--- config/webpack.development.js ---
const path = require("path");
const { HotModuleReplacementPlugin } = require("webpack");

module.exports = () => ({
  devtool: false,
  module: {
    rules: [
      {
        test: /\.(scss|css)$/,
        use: [
          {
            // inject CSS to page
            loader: "style-loader",
          },
          {
            // translates CSS into CommonJS modules
            loader: "css-loader",
          },
          {
            // Run postcss actions
            loader: "postcss-loader",
            options: {
              // `postcssOptions` is needed for postcss 8.x;
              // if you use postcss 7.x skip the key
              postcssOptions: {
                // postcss plugins, can be exported to postcss.config.js
                plugins: function () {
                  return [require("autoprefixer")];
                },
              },
            },
          },
          {
            // compiles Sass to CSS
            loader: "sass-loader",
          },
        ],
      },
    ],
  },
  devServer: {
    open: true,
    static: path.resolve(__dirname, "../dist"),
    port: 3000,
    compress: true,
    historyApiFallback: {
      disableDotRule: true,
    },
  },
  plugins: [new HotModuleReplacementPlugin()],
});

'''
'''--- config/webpack.production.js ---
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");
const path = require("path");

module.exports = () => {
  return {
    output: {
      path: path.resolve(__dirname, "../dist"),
      publicPath: "./",
      filename: "[name].[contenthash].bundle.js",
    },
    devtool: false,
    module: {
      rules: [
        // {
        //   test: /\.(css)$/,
        //   use: [MiniCssExtractPlugin.loader, "css-loader"],
        //   //   options: {
        //   //     sourceMap: false,
        //   //   },
        // },
        {
          test: /\.(scss|css)$/,
          use: [
            {
              // inject CSS to page
              loader: "style-loader",
            },
            {
              // translates CSS into CommonJS modules
              loader: "css-loader",
            },
            {
              // Run postcss actions
              loader: "postcss-loader",
              options: {
                // `postcssOptions` is needed for postcss 8.x;
                // if you use postcss 7.x skip the key
                postcssOptions: {
                  // postcss plugins, can be exported to postcss.config.js
                  plugins: function () {
                    return [require("autoprefixer")];
                  },
                },
              },
            },
            {
              // compiles Sass to CSS
              loader: "sass-loader",
            },
          ],
        },
      ],
    },
    plugins: [
      new MiniCssExtractPlugin({
        filename: "styles/[name].[contenthash].css",
        chunkFilename: "[id].css",
      }),
    ],
    optimization: {
      minimize: true,
      minimizer: [new CssMinimizerPlugin(), "..."],
      runtimeChunk: {
        name: "runtime",
      },
    },
    performance: {
      hints: false,
      maxEntrypointSize: 512000,
      maxAssetSize: 512000,
    },
  };
};

'''
'''--- package.json ---
{
  "name": "frontend",
  "version": "0.12.2",
  "homepage": "/",
  "private": true,
  "dependencies": {
    "@braintree/sanitize-url": "^6.0.2",
    "@keypom/core": "^1.0.2",
    "@monaco-editor/react": "^4.5.1",
    "@livepeer/react": "^2.6.0",
    "@near-wallet-selector/core": "^8.1.0",
    "@near-wallet-selector/here-wallet": "^8.1.0",
    "@near-wallet-selector/meteor-wallet": "^8.1.0",
    "@near-wallet-selector/modal-ui": "^8.1.0",
    "@near-wallet-selector/my-near-wallet": "^8.1.0",
    "@near-wallet-selector/near-wallet": "^8.1.0",
    "@near-wallet-selector/neth": "^8.1.0",
    "@near-wallet-selector/sender": "^8.1.0",
    "@web3-onboard/core": "^2.16.2",
    "@web3-onboard/injected-wallets": "^2.8.4",
    "@web3-onboard/ledger": "^2.4.4",
    "@web3-onboard/react": "^2.7.2",
    "@web3-onboard/walletconnect": "^2.3.5",
    "big.js": "^6.1.1",
    "bn.js": "^5.1.1",
    "bootstrap": "^5.2.1",
    "bootstrap-icons": "^1.9.0",
    "collections": "^5.1.12",
    "error-polyfill": "^0.1.2",
    "local-storage": "^2.0.0",
    "near-api-js": "^2.1.3",
    "near-social-vm": "./near-social-vm-v2.2.4.tgz",
    "normalize.css": "^8.0.1",
    "prettier": "^2.7.1",
    "react": "^18.2.0",
    "react-bootstrap": "^2.5.0",
    "react-bootstrap-typeahead": "^6.1.2",
    "react-dom": "^18.2.0",
    "react-router-dom": "^5.2.0",
    "react-webcam": "^7.1.1",
    "react-zxing": "^1.1.4",
    "styled-components": "^5.3.6",
    "zustand": "^4.4.0"
  },
  "scripts": {
    "serve": "webpack serve",
    "webpack": "webpack",
    "dev": "npm run serve -- --env mode=development",
    "prod": "npm run webpack -- --env mode=production",
    "prod:analyze": "npm run prod -- --env presets=analyze",
    "build": "npm run prod",
    "start": "npm run dev",
    "dev-widgets": "~/.cargo/bin/bos-loader every.near --path widgets"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/cli": "^7.15.4",
    "@babel/core": "^7.15.5",
    "@babel/preset-env": "^7.15.4",
    "@babel/preset-react": "^7.14.5",
    "assert": "^2.0.0",
    "babel-loader": "^8.2.2",
    "browserify-zlib": "^0.2.0",
    "buffer": "^6.0.3",
    "clean-webpack-plugin": "^4.0.0",
    "copy-webpack-plugin": "^9.0.1",
    "cross-env": "^7.0.3",
    "crypto-browserify": "^3.12.0",
    "css-loader": "^6.2.0",
    "css-minimizer-webpack-plugin": "^3.0.2",
    "html-webpack-plugin": "^5.3.2",
    "https-browserify": "^1.0.0",
    "mini-css-extract-plugin": "^2.2.2",
    "node-sass": "^7.0.3",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "postcss-loader": "^7.0.1",
    "process": "^0.11.10",
    "sass-loader": "^13.1.0",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "style-loader": "^3.2.1",
    "url": "^0.11.0",
    "webpack": "^5.52.0",
    "webpack-bundle-analyzer": "^4.4.2",
    "webpack-cli": "^4.8.0",
    "webpack-dev-server": "^4.1.0",
    "webpack-manifest-plugin": "^5.0.0",
    "webpack-merge": "^5.8.0"
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.png" />

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="everything"
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="https://everything.dev/assets/favicon.png">
    <meta property="og:image" content="https://everything.dev/assets/favicon.png">
    <meta property="og:type" content="website">
    <meta property="og:title" content="everything" />
    <meta property="og:description" content="" />
    <link rel="apple-touch-icon" href="/favicon.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="/manifest.json" />
    <title>everything | core</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

'''
'''--- public/manifest.json ---
{
  "short_name": "every",
  "name": "everything",
  "icons": [
    {
      "src": "favicon.png",
      "sizes": "1024x1024",
      "type": "image/png"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#333333",
  "background_color": "#ffffff"
}

'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- renovate.json ---
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ]
}

'''
'''--- src/App.js ---
import { sanitizeUrl } from "@braintree/sanitize-url";
import {
  LivepeerConfig,
  createReactClient,
  studioProvider,
} from "@livepeer/react";
import { setupWalletSelector } from "@near-wallet-selector/core";
import { setupHereWallet } from "@near-wallet-selector/here-wallet";
import { setupMeteorWallet } from "@near-wallet-selector/meteor-wallet";
import { setupModal } from "@near-wallet-selector/modal-ui";
import "@near-wallet-selector/modal-ui/styles.css";
import { setupMyNearWallet } from "@near-wallet-selector/my-near-wallet";
import { setupNearWallet } from "@near-wallet-selector/near-wallet";
import { setupNeth } from "@near-wallet-selector/neth";
import { setupSender } from "@near-wallet-selector/sender";
import "App.scss";
import Big from "big.js";
import "bootstrap-icons/font/bootstrap-icons.css";
import "bootstrap/dist/js/bootstrap.bundle";
import "error-polyfill";
import { useAccount, useInitNear, useNear, utils } from "near-social-vm";
import React, { useCallback, useEffect, useState } from "react";
import "react-bootstrap-typeahead/css/Typeahead.bs5.css";
import "react-bootstrap-typeahead/css/Typeahead.css";
import { Link, Route, BrowserRouter as Router, Switch } from "react-router-dom";
import { ActionButton } from "./components/common/buttons/ActionButton";
import { Camera } from "./components/custom/Camera";
import { LivepeerCreator } from "./components/custom/livepeer/LivepeerCreator";
import { LivepeerPlayer } from "./components/custom/livepeer/LivepeerPlayer";
import { NavigationWrapper } from "./components/navigation/NavigationWrapper";
import { NetworkId, Widgets } from "./data/widgets";
import { useBosLoaderInitializer } from "./hooks/useBosLoaderInitializer";
import Flags from "./pages/Flags";
import ViewPage from "./pages/ViewPage";
import { KeypomScanner } from "./components/custom/KeypomScanner";
import Footer from "./components/navigation/Footer";
import { BosLoaderBanner } from "./components/BosLoaderBanner";
import { MonacoEditor } from "./components/custom/MonacoEditor";

export const refreshAllowanceObj = {};
const documentationHref = "https://social.near-docs.io/";

function App(props) {
  const [connected, setConnected] = useState(false);
  const [signedIn, setSignedIn] = useState(false);
  const [signedAccountId, setSignedAccountId] = useState(null);
  const [availableStorage, setAvailableStorage] = useState(null);
  const [walletModal, setWalletModal] = useState(null);
  const [widgetSrc, setWidgetSrc] = useState(null);

  useBosLoaderInitializer();

  const { initNear } = useInitNear();
  const near = useNear();
  const account = useAccount();
  const accountId = account.accountId;

  const location = window.location;

  const livepeerClient = createReactClient({
    provider: studioProvider({
      apiKey: "c8323290-27a8-403b-858d-8baee19925c1",
    }),
  });

  useEffect(() => {
    initNear &&
      initNear({
        networkId: NetworkId,
        selector: setupWalletSelector({
          network: NetworkId,
          modules: [
            setupNearWallet(),
            setupMyNearWallet(),
            setupSender(),
            setupHereWallet(),
            setupMeteorWallet(),
            setupNeth({
              gas: "300000000000000",
              bundle: false,
            }),
          ],
        }),
        customElements: {
          Link: (props) => {
            if (!props.to && props.href) {
              props.to = props.href;
              delete props.href;
            }
            if (props.to) {
              props.to = sanitizeUrl(props.to);
            }
            return <Link {...props} />;
          },
          KeypomScanner: (props) => {
            return <KeypomScanner {...props} />;
          },
          Camera: (props) => {
            return <Camera {...props} />;
          },
          MonacoEditor: (props) => {
            return <MonacoEditor {...props} />;
          },
          LivepeerPlayer: (props) => {
            return (
              <LivepeerConfig client={livepeerClient}>
                <LivepeerPlayer {...props} />
              </LivepeerConfig>
            );
          },
          LivepeerCreator: (props) => {
            return (
              <LivepeerConfig client={livepeerClient}>
                <LivepeerCreator {...props} />
              </LivepeerConfig>
            );
          },
        },
      });
  }, [initNear]);

  // useEffect(() => {
  //   if (
  //     !location.search.includes("?account_id") &&
  //     !location.search.includes("&account_id") &&
  //     (location.search || location.href.includes("/?#"))
  //   ) {
  //     window.history.replaceState({}, "/", "/" + location.hash);
  //   }
  // }, [location]);

  useEffect(() => {
    if (!near) {
      return;
    }
    near.selector.then((selector) => {
      setWalletModal(
        setupModal(selector, { contractId: near.config.contractName })
      );
    });
  }, [near]);

  const requestSignIn = useCallback(
    (e) => {
      e && e.preventDefault();
      walletModal.show();
      return false;
    },
    [walletModal]
  );

  const logOut = useCallback(async () => {
    if (!near) {
      return;
    }
    const wallet = await (await near.selector).wallet();
    wallet.signOut();
    near.accountId = null;
    setSignedIn(false);
    setSignedAccountId(null);
  }, [near]);

  const refreshAllowance = useCallback(async () => {
    alert(
      "You're out of access key allowance. Need sign in again to refresh it"
    );
    await logOut();
    requestSignIn();
  }, [logOut, requestSignIn]);
  refreshAllowanceObj.refreshAllowance = refreshAllowance;

  useEffect(() => {
    if (!near) {
      return;
    }
    setSignedIn(!!accountId);
    setSignedAccountId(accountId);
    setConnected(true);
  }, [near, accountId]);

  useEffect(() => {
    setAvailableStorage(
      account.storageBalance
        ? Big(account.storageBalance.available).div(utils.StorageCostPerByte)
        : Big(0)
    );
  }, [account]);

  const passProps = {
    refreshAllowance: () => refreshAllowance(),
    setWidgetSrc,
    signedAccountId,
    signedIn,
    connected,
    availableStorage,
    widgetSrc,
    logOut,
    requestSignIn,
    widgets: Widgets,
    documentationHref,
  };

  return (
    <Router basename={process.env.PUBLIC_URL}>
      <Switch>
        <Route path={"/flags"}>
          <Flags {...passProps} />
        </Route>
        <Route path={"/scanner"}>
          <NavigationWrapper {...passProps} />
          <KeypomScanner />
        </Route>
        <Route path={"/create"}>
          <ViewPage overrideSrc={passProps.widgets.create} {...passProps} />
          <Footer {...passProps} />
        </Route>
        <Route path={"/:widgetSrc*"}>
          <BosLoaderBanner />
          {/* <NavigationWrapper {...passProps} /> */}
          <ViewPage {...passProps} />
          <Footer {...passProps} />
          <ActionButton {...passProps} />
        </Route>
      </Switch>
    </Router>
  );
}

export default App;

'''
'''--- src/components/BosLoaderBanner.js ---
import styled from 'styled-components';

import { useFlags } from '../hooks/useFlags';
import { useBosLoaderStore } from '../stores/bos-loader';
import React from 'react';

const Banner = styled.div`
  background: #fff2cd;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  min-height: 2rem;
  column-gap: 8px;

  p {
    margin: 0;
    color: #664d04;
  }
`;

const Button = styled.button`
  all: unset;
  display: block;
  height: 16px;
  line-height: 16px;
  color: #664d04;
`;

export function BosLoaderBanner() {
  const redirectMapStore = useBosLoaderStore();
  const [flags, setFlags] = useFlags();

  function closeBanner() {
    if (flags?.bosLoaderUrl) {
      setFlags({ bosLoaderUrl: undefined });
    }
  }

  if (!redirectMapStore.loaderUrl) return null;

  return (
    <Banner>
      <div>
        <p>Loading components from: {redirectMapStore.loaderUrl}</p>
        {redirectMapStore.failedToLoad && (
          <p style={{ color: 'red' }}>
            BOS Loader fetch error, see console logs. CORS errors may be misleading and mean your endpoint cannot be
            reached
          </p>
        )}
      </div>

      <Button type="button" onClick={closeBanner}>
        <i className="ph-fill ph-x-circle" />
      </Button>
    </Banner>
  );
}
'''
'''--- src/components/Core.js ---
// src/components/Core.js
import { Widget, useAccount, useNear } from "near-social-vm";
import { default as React, useCallback, useEffect, useState } from "react";
import { NavLink } from "react-router-dom/cjs/react-router-dom.min";
import styled from "styled-components";
import { LogOut } from "./icons/LogOut";
import { Pretend } from "./icons/Pretend";
import { StopPretending } from "./icons/StopPretending";
import { User } from "./icons/User";
import PretendModal from "./navigation/PretendModal";

const StyledDropdown = styled.div`
  .dropdown-toggle {
    display: flex;

    &:after {
      border-top-color: var(--slate-dark-11);
    }

    img {
      border-radius: 50% !important;
    }

    .profile-info {
      margin: 5px 10px;
      line-height: normal;
      max-width: 140px;

      .profile-name,
      .profile-username {
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .profile-name {
        color: black;
      }
      .profile-username {
        color: var(--slate-dark-11);
      }
    }
  }

  ul {
    width: 100%;

    li {
      padding: 0 6px;
    }

    button,
    a {
      font-weight: var(--font-weight-medium);
      text-transform: lowercase !important;
      display: inline-block;
      text-align: center;
      text-decoration: none;
      border: 2px outset #333;
      background-color: #f5f5f5;
      cursor: pointer;
      color: #333;
      padding: 12px;

      &:active {
        border-style: inset;
        background-color: #d5d5d5;
        color: #000;
      }

      &:hover {
        background-color: #e5e5e5;
        color: #111;
      }

      svg {
        margin-right: 7px;
        min-width: 24px;
        path {
          stroke: var(--slate-dark-9);
        }
      }
    }
`;

const ButtonRow = styled.div`
  display: flex;
  flex-direction: row;
  flex: 1;
  // justify-content: space-between;
`;

const ArrowButton = styled.button`
  flex-grow: 1;
`;

const Core = (props) => {
  const near = useNear();
  const account = useAccount();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  const withdrawStorage = useCallback(async () => {
    await near.contract.storage_withdraw({}, undefined, "1");
  }, [near]);

  const [showPretendModal, setShowPretendModal] = React.useState(false);

  const Button = styled.button`
    display: flex;
    justify-content: center;
    align-items: center;

    text-transform: lowercase !important;
    height: 48px;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;
    color: #333;
    padding: 20px 20px;
    margin: 4px;

    &:active {
      border-style: inset;
      background-color: #d5d5d5;
      color: #000;
    }

    &:hover {
      background-color: #e5e5e5;
      color: #111;
    }
  `;

  return (
    <>
      <StyledDropdown className="dropdown">
        {props.signedIn ? (
          <div
            type="button"
            id="dropdownMenu2222"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <Widget
              src={"mob.near/widget/ProfileImage"}
              props={{
                accountId: account.accountId,
                className: "d-inline-block m-2",
                imageClassName: "rounded-circle w-100 h-100",
                style: { width: "42px", height: "42px" },
              }}
            />
          </div>
        ) : (
          <Button onClick={props.requestSignIn}>sign in</Button>
        )}
        <ul
          className="dropdown-menu"
          aria-labelledby="dropdownMenu2222"
          style={{ minWidth: "fit-content" }}
        >
          <li>
            <NavLink
              className="dropdown-item"
              type="button"
              to={`/${account.accountId}`}
            >
              <User />
              my everything
            </NavLink>
          </li>
          {/* <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => withdrawStorage()}
            >
              <Withdraw />
              Withdraw {props.availableStorage.div(1000).toFixed(2)}kb
            </button>
          </li> */}
          {account.pretendAccountId ? (
            <li>
              <button
                className="dropdown-item"
                disabled={!account.startPretending}
                onClick={() => account.startPretending(undefined)}
              >
                <StopPretending />
                Stop pretending
              </button>
            </li>
          ) : (
            <li>
              <button
                className="dropdown-item"
                onClick={() => setShowPretendModal(true)}
              >
                <Pretend />
                Pretend to be another account
              </button>
            </li>
          )}
          <li>
            <button className="dropdown-item" onClick={() => props.logOut()}>
              <LogOut />
              Sign Out
            </button>
          </li>
          <li>
            <ButtonRow>
              <ArrowButton>
                <i className="bi bi-arrow-left"></i>
              </ArrowButton>
              <NavLink type="button" to={"/"}>
                <i className="bi bi-house"></i>
              </NavLink>
              <ArrowButton>
                <i className="bi bi-arrow-right"></i>
              </ArrowButton>
            </ButtonRow>
          </li>
        </ul>
      </StyledDropdown>
      <PretendModal
        show={showPretendModal}
        onHide={() => setShowPretendModal(false)}
        widgets={props.widgets}
      />
    </>
  );
};

export default Core;

'''
'''--- src/components/Editor/FileTab.js ---
import { Nav } from "react-bootstrap";
import React, { useEffect, useState } from "react";
import { useAccountId, useCache, useNear } from "near-social-vm";

export const Filetype = {
  Widget: "widget",
  Module: "module",
};

export const StorageDomain = {
  page: "editor",
};

export const StorageType = {
  Code: "code",
  Files: "files",
};

export function toPath(type, nameOrPath) {
  const name =
    nameOrPath.indexOf("/") >= 0
      ? nameOrPath.split("/").slice(2).join("/")
      : nameOrPath;
  return { type, name };
}

export function FileTab(props) {
  const {
    files,
    p,
    active,
    idx,
    removeFromFiles,
    openFile,
    createFile,
    code,
    updateSaved,
  } = props;
  const cache = useCache();
  const near = useNear();
  const accountId = useAccountId();
  const [localCode, setLocalCode] = useState(null);
  const [chainCode, setChainCode] = useState(null);
  const [saved, setSaved] = useState(false);

  const jp = JSON.stringify(p);

  useEffect(() => {
    if (code !== undefined) {
      setLocalCode(code);
      return;
    }
    cache
      .asyncLocalStorageGet(StorageDomain, {
        path: p,
        type: StorageType.Code,
      })
      .then(({ code }) => {
        setLocalCode(code);
      });
  }, [code, cache, p]);

  useEffect(() => {
    const widgetSrc = `${accountId}/${p?.type}/${p?.name}`;
    const c = () => {
      const code = cache.socialGet(
        near,
        widgetSrc,
        false,
        undefined,
        undefined,
        c
      );
      setChainCode(code);
    };
    c();
  }, [cache, near, p, accountId]);

  useEffect(() => {
    const unsaved = localCode !== chainCode;
    setSaved(unsaved);
  }, [localCode, chainCode]);

  useEffect(() => {
    updateSaved && updateSaved(jp, !saved);
  }, [saved, updateSaved]);

  return (
    <Nav.Item>
      <Nav.Link className="text-decoration-none" eventKey={jp}>
        {p.name}
        {saved && (
          <sup key="unsaved">
            <i className="bi bi-asterisk text-secondary" title="Unsaved"></i>
          </sup>
        )}
        <button
          className={`btn btn-sm border-0 py-0 px-1 ms-1 rounded-circle ${
            active ? "btn-outline-light" : "btn-outline-secondary"
          }`}
          onClick={(e) => {
            e.preventDefault();
            e.stopPropagation();
            removeFromFiles(p);
            if (active) {
              if (files.length > 1) {
                openFile(files[idx - 1] || files[idx + 1]);
              } else {
                createFile(Filetype.Widget);
              }
            }
          }}
        >
          <i className="bi bi-x"></i>
        </button>
      </Nav.Link>
    </Nav.Item>
  );
}

'''
'''--- src/components/Editor/OpenModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";

export default function OpenModal(props) {
  const onHide = props.onHide;
  const onOpen = props.onOpen;
  const onNew = props.onNew;
  const show = props.show;

  const [widgetSrc, setWidgetSrc] = useState("");

  return (
    <Modal centered scrollable show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Open widget</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <label htmlFor="widget-src-input" className="form-label">
          Widget name <span className="text-muted">(or path)</span>
        </label>
        <input
          className="form-control"
          id="widget-src-input"
          type="text"
          value={widgetSrc}
          onChange={(e) =>
            setWidgetSrc(e.target.value.replaceAll(/[^a-zA-Z0-9_.\-\/]/g, ""))
          }
        />
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!widgetSrc}
          onClick={(e) => {
            e.preventDefault();
            onOpen(widgetSrc);
            setWidgetSrc("");
            onHide();
          }}
        >
          Open
        </button>
        <button
          className="btn btn-outline-success"
          disabled={widgetSrc && widgetSrc.indexOf("/") !== -1}
          onClick={(e) => {
            e.preventDefault();
            onNew(widgetSrc);
            setWidgetSrc("");
            onHide();
          }}
        >
          Create New
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Close
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/Editor/RenameModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";

export default function RenameModal(props) {
  const onHide = props.onHide;
  const name = props.name;
  const onRename = props.onRename;
  const show = props.show;

  const [newName, setNewName] = useState(name);

  return (
    <Modal centered scrollable show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Rename</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <label htmlFor="rename-input" className="form-label">
          New name
        </label>
        <input
          className="form-control"
          id="rename-input"
          type="text"
          value={newName}
          onChange={(e) =>
            setNewName(e.target.value.replaceAll(/[^a-zA-Z0-9_.\-]/g, ""))
          }
        />
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!newName || newName === name}
          onClick={(e) => {
            e.preventDefault();
            onRename(newName);
            onHide();
          }}
        >
          Confirm
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Close
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/common/buttons/ActionButton.js ---
import React from "react";
import { Link } from "react-router-dom/cjs/react-router-dom.min";
import styled from "styled-components";

const StyledActionButton = styled.div`
  position: fixed;
  right: 20px;
  bottom: 84px;
  z-index: 1000;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  cursor: pointer;
  background: radial-gradient(circle at 30% 30%, #4a4949, #000000);
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.06),
    0px 10px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease; // smooth transition

  &:hover {
    background: radial-gradient(circle at 70% 30%, #4a4949, #000000);
    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);
    transform: scale(0.98) translateY(4px); // scale down slightly and move downward
  }

  &:active {
    box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.2);
    transform: scale(0.96) translateY(6px); // more scale down and more downward movement for click
  }
`;

export function ActionButton(props) {
  return <StyledActionButton />;
}

{
  /* <Link to="/create">
      <StyledActionButton />
    </Link> */
}

'''
'''--- src/components/common/buttons/BlueButton.js ---
import React from "react";
import { Button } from "./Button";
import styled from "styled-components";

const StyledButton = styled(Button)`
  background-color: var(--blue-light-9);
  border-color: var(--blue-light-9);
  color: white;
`;

export function BlueButton(props) {
  return <StyledButton {...props}>{props.children}</StyledButton>;
}

'''
'''--- src/components/common/buttons/Button.js ---
import React from "react";
import styled from "styled-components";

const StyledButton = styled.button`
  border-radius: 8px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  padding: 8px 16px;
  font-weight: var(--font-weight-bold);
  display: inline-block;
  height: 40px;
`;

export function Button(props) {
  return (
    <StyledButton
      className={props.className}
      onClick={props.onClick}
      title={props.title}
      disabled={props.disabled}
    >
      {props.children}
    </StyledButton>
  );
}

'''
'''--- src/components/common/buttons/GrayBorderButton.js ---
import React from "react";
import { Button } from "./Button";
import styled from "styled-components";

const StyledButton = styled(Button)`
  background-color: var(--slate-dark-6);
  border-color: var(--slate-dark-8);
  color: white;
`;

export function GrayBorderButton(props) {
  return <StyledButton {...props}>{props.children}</StyledButton>;
}

'''
'''--- src/components/custom/Camera.js ---
import React, { useCallback, useEffect, useRef, useState } from "react";
import Webcam from "react-webcam";
import styled from "styled-components";

const Container = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0 auto;
  height: 100%;
`;

const Button = styled.button`
  background-color: white;
  padding: 10px;
  border-radius: 5px;
  border: none;
  flex-shrink: 0;
  &:active {
    transform: scale(0.95);
    background-color: #ddd;
  }
`;

const ButtonContainer = styled.div`
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
  flex-wrap: nowrap; 
`;

export const Camera = (props) => {
  const webcamRef = useRef(null);
  const windowSize = useState([window.innerWidth, window.innerHeight]);

  const FACING_MODE_USER = "user";
  const FACING_MODE_ENVIRONMENT = "environment";

  const [facingMode, setFacingMode] = useState(props.facingMode || FACING_MODE_ENVIRONMENT);

  const switchCamera = useCallback(() => {
    setFacingMode(prevState =>
      prevState === FACING_MODE_USER
        ? FACING_MODE_ENVIRONMENT
        : FACING_MODE_USER
    );
  }, []);

  useEffect(() => {
    const handleResize = () => {
      setWindowSize([window.innerWidth, window.innerHeight]);
    };

    window.addEventListener("resize", handleResize);

    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  const videoConstraints = {
    facingMode: facingMode,
    width: windowSize[0],
    height: windowSize[1],
  };

  const capture = React.useCallback(() => {
    const imageSrc = webcamRef.current.getScreenshot();
    props.onCapture(imageSrc); // Here's the function you passed through the props
  }, [webcamRef, props.onCapture]);

  return (
    <Container>
      <div style={{position: 'relative', width: '100%', height: '100%'}}>
        <Webcam
          audio={props.audio || false}
          width={props.width || "100%"}
          height={props.height || "100%"}
          ref={webcamRef}
          screenshotFormat="image/jpeg"
          videoConstraints={videoConstraints}
          style={{
            position: 'absolute',
            right: '0',
            bottom: '0',
            height: '100%'
          }}
          mirrored={props.facingMode === FACING_MODE_USER ? true : false}
        />
      </div>
      <ButtonContainer>
        <Button onClick={capture}>
          Capture photo
        </Button>
        <Button onClick={switchCamera}>
          Switch Camera
        </Button>
      </ButtonContainer>
    </Container>
  );
};

'''
'''--- src/components/custom/KeypomScanner.js ---
import React from "react";
import { useZxing } from "react-zxing";
import { useState, useEffect } from "react";
import styled from "styled-components";
import logo from "../../static/img/green-check.png";
import xLogo from "../../static/img/red-x.png";
import { allowEntry } from "../../utils/allowEntry";

const Content = styled.div`
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  text-align: center;
`;

export const KeypomScanner = () => {
  // Stage enum
  const Stage = {
    preClaim: "Pre-claim",
    claiming: "Claiming",
    successClaim: "Success",
    failClaim: "Fail",
  };

  // Data enum
  const Data = {
    empty: "Empty",
    captured: "Captured",
  };

  // State Variables
  const [result, setResult] = useState("");
  const [splitRes, setSplitRes] = useState([]);
  const [resPrivKey, setResPrivkey] = useState("");
  const [password, setPassword] = useState("NULL");
  const [masterStatus, setMasterStatus] = useState({
    stage: Stage.preClaim,
    data: Data.empty,
  });

  // Scanner and getting results of scan
  const { ref } = useZxing({
    onResult(result) {
      setResult(result.getText());
      setSplitRes([...result.getText().split("/")]);
      setResPrivkey(result.getText().split("/")[1]);

      //indicate new data
      let tempMaster = {
        stage: Stage.claiming,
        data: Data.captured,
      };
      setMasterStatus(tempMaster);
    },
  });

  // Functions that only run when scanner is mounted
  // Get password
  useEffect(() => {
    let PASSWORD = "NULL";
    PASSWORD = prompt("Enter base password for drop");
    setPassword(PASSWORD);
  }, []);

  // Claiming the drop using password
  useEffect(() => {
    function timeout(delay) {
      return new Promise((res) => setTimeout(res, delay));
    }

    async function scannerClaim() {
      let isAllowedIn = await allowEntry({
        privKey: resPrivKey,
        basePassword: password,
      });

      // Successful Claim
      if (isAllowedIn) {
        setMasterStatus({
          stage: Stage.successClaim,
          data: Data.captured,
        });
      } else {
        // Failed Claim
        setMasterStatus({
          stage: Stage.failClaim,
          data: Data.captured,
        });
      }

      // Wait 3s, then flip go back to pre-claim
      await timeout(3000);
      setMasterStatus({
        stage: Stage.preClaim,
        data: Data.empty,
      });
    }
    // Only claim if there is data present
    if (masterStatus.data === Data.captured) {
      scannerClaim();
    }
  }, [masterStatus.data]);

  switch (masterStatus.stage) {
    case Stage.preClaim:
      return (
        <>
          <Content>
            <div style={{ border: "0.5rem solid white" }}>
              <video ref={ref} />
            </div>
            <h2>Scan a linkdrop QR code to claim</h2>
            <h4>To re-enter password, refresh the page</h4>
          </Content>
        </>
      );
    case Stage.claiming:
      return (
        <>
          <Content>
            <div style={{ border: "0.5rem solid yellow" }}>
              <video ref={ref} />
            </div>
            <h2>Claiming</h2>
            <h4>Note this should take a few seconds</h4>
          </Content>
        </>
      );
    case Stage.successClaim:
      return (
        <>
          <Content>
            <div style={{ border: "0.5rem solid green" }}>
              <video ref={ref} />
            </div>
            <h2>Claimed!</h2>
            <img
              src={logo}
              alt="green check"
              width="50"
              height="60"
              className="img_center"
            ></img>
          </Content>
        </>
      );
    case Stage.failClaim:
      return (
        <>
          <Content>
            <div style={{ border: "0.5rem solid red" }}>
              <video ref={ref} />
            </div>
            <h2>Could Not Be Claimed!</h2>
            <h3>Ensure Password is Correct</h3>
            <h4>To re-enter password, refresh the page</h4>
            <img
              src={xLogo}
              alt="red x"
              width="50"
              height="60"
              className="img_center"
            ></img>
          </Content>
        </>
      );
    default:
      let errorMsg = `Error: masterState.stage is ${masterStatus.stage}`;
      return (
        <>
          <Content>
            <h2>{errorMsg}</h2>
            <img
              src={xLogo}
              alt="red x"
              width="50"
              height="60"
              className="img_center"
            ></img>
          </Content>
        </>
      );
  }
};

'''
'''--- src/components/custom/MonacoEditor.js ---
import Editor from "@monaco-editor/react";
import prettier from "prettier";
import parserBabel from "prettier/parser-babel";
import React, { useCallback, useState } from "react";

export const MonacoEditor = (props) => {
  const { value, path, language, onChange } = props;
  const [code, setCode] = useState(value);

  const reformat = useCallback(
    (path, code) => {
      try {
        const formattedCode = prettier.format(code, {
          parser: language === "json" ? "json" : "babel",
          plugins: [parserBabel],
        });
        updateCode(path, formattedCode);
      } catch (e) {
        console.log(e);
      }
    },
    [updateCode]
  );

  const updateCode = useCallback(
    (path, code) => {
      // cache.localStorageSet(
      //   StorageDomain,
      //   {
      //     path,
      //     type: StorageType.Code,
      //   },
      //   {
      //     code,
      //     time: Date.now(),
      //   }
      // );
      setCode(code);
      onChange(code);
    },
    [setCode]
  );

  return (
    <Editor
      value={code}
      path={path}
      height={"100%"}
      defaultLanguage={language}
      onChange={(code) => updateCode(path, code)}
      wrapperProps={{
        onBlur: () => reformat(path, code),
      }}
    />
  );
};

'''
'''--- src/components/custom/livepeer/LivepeerCreator.js ---
import { useCreateAsset } from "@livepeer/react";
import React, { useEffect } from "react";

export const LivepeerCreator = ({
  name,
  video,
  metadata,
  Button,
  handleStatus,
  handleProgress,
  handleError,
  handleAssets,
  ipfs = true,
}) => {
  const {
    mutate: createAsset,
    data: assets,
    status,
    progress,
    error,
  } = useCreateAsset(
    video
      ? {
          sources: [
            {
              name: video.name,
              file: video,
              storage: {
                ipfs,
                metadata: metadata,
              },
            },
          ],
        }
      : null
  );

  useEffect(() => {
    handleStatus(status);
  }, [status]);

  useEffect(() => {
    handleProgress(progress);
  }, [progress]);

  useEffect(() => {
    handleError(error);
  }, [error]);

  useEffect(() => {
    handleAssets(assets);
  }, [assets]);

  return (
    <Button
      disabled={status === "loading" || !createAsset}
      onClick={() => {
        createAsset?.();
      }}
    />
  );
};

'''
'''--- src/components/custom/livepeer/LivepeerPlayer.js ---
import { Player } from "@livepeer/react";
import React from "react";

export const LivepeerPlayer = ({
  title,
  playbackId,
  PosterImage,
  showPipButton,
  objectFit,
  priority,
  ...props
}) => {
  if (!playbackId) {
    return <p>Please provide a playback Id.</p>;
  }

  return (
    <Player
      title={title}
      playbackId={playbackId}
      poster={PosterImage}
      showPipButton={showPipButton}
      objectFit={objectFit}
      priority={priority}
      {...props}
    />
  );
};

'''
'''--- src/components/icons/ArrowUpRight.js ---
import React from "react";

export function ArrowUpRight() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="arrow-up-right"
    >
      <path
        d="M17.25 15.25V6.75H8.75"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M17 7L6.75 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Book.js ---
import React from "react";

export function Book() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.25 5.75C19.25 5.19772 18.8023 4.75 18.25 4.75H14C12.8954 4.75 12 5.64543 12 6.75V19.25L12.8284 18.4216C13.5786 17.6714 14.596 17.25 15.6569 17.25H18.25C18.8023 17.25 19.25 16.8023 19.25 16.25V5.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M4.75 5.75C4.75 5.19772 5.19772 4.75 5.75 4.75H10C11.1046 4.75 12 5.64543 12 6.75V19.25L11.1716 18.4216C10.4214 17.6714 9.40401 17.25 8.34315 17.25H5.75C5.19772 17.25 4.75 16.8023 4.75 16.25V5.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Close.js ---
import React from "react";

export function Close() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.25 6.75L6.75 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.75 6.75L17.25 17.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Code.js ---
import React from "react";

export function Code() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.75 6.75C4.75 5.64543 5.64543 4.75 6.75 4.75H17.25C18.3546 4.75 19.25 5.64543 19.25 6.75V17.25C19.25 18.3546 18.3546 19.25 17.25 19.25H6.75C5.64543 19.25 4.75 18.3546 4.75 17.25V6.75Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.75 10.75L11.25 13L8.75 15.25"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Diff.js ---
import React from "react";

export function Diff() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="none"
      viewBox="-4 -4 24 24"
    >
      <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z" />
      <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z" />
      <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z" />
    </svg>
  );
}

'''
'''--- src/components/icons/Fork.js ---
import React from "react";

export function Fork() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9.25 7C9.25 8.24264 8.24264 9.25 7 9.25C5.75736 9.25 4.75 8.24264 4.75 7C4.75 5.75736 5.75736 4.75 7 4.75C8.24264 4.75 9.25 5.75736 9.25 7Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19.25 7C19.25 8.24264 18.2426 9.25 17 9.25C15.7574 9.25 14.75 8.24264 14.75 7C14.75 5.75736 15.7574 4.75 17 4.75C18.2426 4.75 19.25 5.75736 19.25 7Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.25 17C14.25 18.2426 13.2426 19.25 12 19.25C10.7574 19.25 9.75 18.2426 9.75 17C9.75 15.7574 10.7574 14.75 12 14.75C13.2426 14.75 14.25 15.7574 14.25 17Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.75 9.5V10.25C6.75 11.3546 7.64543 12.25 8.75 12.25H12M17.25 9.5V10.25C17.25 11.3546 16.3546 12.25 15.25 12.25H12M12 12.25V14.5"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Home.js ---
import React from "react";

export function Home() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.75024 19.2502H17.2502C18.3548 19.2502 19.2502 18.3548 19.2502 17.2502V9.75025L12.0002 4.75024L4.75024 9.75025V17.2502C4.75024 18.3548 5.64568 19.2502 6.75024 19.2502Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M9.74963 15.7493C9.74963 14.6447 10.6451 13.7493 11.7496 13.7493H12.2496C13.3542 13.7493 14.2496 14.6447 14.2496 15.7493V19.2493H9.74963V15.7493Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/LogOut.js ---
import React from "react";

export function LogOut() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.75 8.75L19.25 12L15.75 15.25"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19 12H10.75"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M15.25 4.75H6.75C5.64543 4.75 4.75 5.64543 4.75 6.75V17.25C4.75 18.3546 5.64543 19.25 6.75 19.25H15.25"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/NearSocialLogo.js ---
import React from "react";

export function NearSocialLogo() {
  return (
    <svg
      width="29"
      height="20"
      viewBox="0 0 29 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9.55396 17.509L2 9.99996L9.55396 2.49097"
        stroke="#3D7FFF"
        strokeWidth="3"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M19.536 2.49097L27 9.99996L19.536 17.509"
        stroke="#3D7FFF"
        strokeWidth="3"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Pretend.js ---
import React from "react";

export function Pretend() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="none"
      viewBox="0 0 16 16"
    >
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5z"
      />
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/StopPretending.js ---
import React from "react";

export function StopPretending() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="none"
      viewBox="0 0 16 16"
    >
      <path
        strokeWidth="0.3px"
        fill="#697177"
        d="M13.879 10.414a2.501 2.501 0 0 0-3.465 3.465l3.465-3.465Zm.707.707-3.465 3.465a2.501 2.501 0 0 0 3.465-3.465Zm-4.56-1.096a3.5 3.5 0 1 1 4.949 4.95 3.5 3.5 0 0 1-4.95-4.95ZM11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Z"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/User.js ---
import React from "react";

export function User() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.25 8C15.25 9.79493 13.7949 11.25 12 11.25C10.2051 11.25 8.75 9.79493 8.75 8C8.75 6.20507 10.2051 4.75 12 4.75C13.7949 4.75 15.25 6.20507 15.25 8Z"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6.84751 19.25H17.1525C18.2944 19.25 19.174 18.2681 18.6408 17.2584C17.8563 15.7731 16.068 14 12 14C7.93201 14 6.14367 15.7731 5.35924 17.2584C4.82597 18.2681 5.70559 19.25 6.84751 19.25Z"
        stroke="#697177"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/UserCircle.js ---
import React from "react";

export function UserCircle() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.25 12C19.25 16.0041 16.0041 19.25 12 19.25C7.99594 19.25 4.75 16.0041 4.75 12C4.75 7.99594 7.99594 4.75 12 4.75C16.0041 4.75 19.25 7.99594 19.25 12Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.25 10C14.25 11.2426 13.2426 12.25 12 12.25C10.7574 12.25 9.75 11.2426 9.75 10C9.75 8.75736 10.7574 7.75 12 7.75C13.2426 7.75 14.25 8.75736 14.25 10Z"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M7.19745 17C8.34392 15.625 10.0698 14.75 12 14.75C13.9302 14.75 15.6561 15.625 16.8025 17"
        stroke="#9BA1A6"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

'''
'''--- src/components/icons/Withdraw.js ---
import React from "react";

export function Withdraw() {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        strokeWidth="0.3px"
        d="M14.9634 10.8766C15.2234 11.1366 15.2234 11.5567 14.9634 11.8167L12.4701 14.3067C12.2101 14.5701 11.79 14.5701 11.5301 14.3067L9.03676 11.8167C8.77679 11.5567 8.77679 11.1366 9.03676 10.8766C9.30016 10.6133 9.72011 10.6133 9.98008 10.8766L11.3333 12.2267V6.66667C11.3333 5.1933 12.5266 4 14 4H17.3333C18.8067 4 20 5.1933 20 6.66667V17.3333C20 18.8067 18.8067 20 17.3333 20H6.66667C5.1933 20 4 18.8067 4 17.3333V6.66667C4 5.1933 5.1933 4 6.66667 4H9.33333C9.7 4 10 4.3 10 4.66667C10 5.03333 9.7 5.33333 9.33333 5.33333H6.66667C5.93006 5.33333 5.33333 5.93006 5.33333 6.66667V17.3333C5.33333 18.0699 5.93006 18.6667 6.66667 18.6667H17.3333C18.0699 18.6667 18.6667 18.0699 18.6667 17.3333V6.66667C18.6667 5.93006 18.0699 5.33333 17.3333 5.33333H14C13.2634 5.33333 12.6667 5.93006 12.6667 6.66667V12.2267L14.0199 10.8766C14.28 10.6134 14.7 10.6134 14.9634 10.8766Z"
        fill="#697177"
      />
    </svg>
  );
}

'''
'''--- src/components/navigation/CreateWidget.js ---
import React from "react";
import { Link } from "react-router-dom";
import styled from "styled-components";

const StyledCreateWidget = styled.div`
  // margin: 0 15px;
  // background-color: var(--slate-dark-5);
  height: 40px;
  width: 40px;
  border-radius: 50%;
  font-weight: var(--font-weight-medium);
  text-transform: lowercase !important;
  // display: inline-block;
  text-align: center;
  text-decoration: none;
  border: 2px outset #333;
  background-color: #f5f5f5;
  cursor: pointer;

  > div,
  a {
    width: 100%;
    height: 100%;
  }

  a {
    color: black !important;
    display: flex;
    align-items: center;
    justify-content: center;

    i {
      font-size: 18px !important;
    }
  }

  :hover {
    a,
    i {
      color: black;
      // background-color: var(--slate-dark-5);
    }
  }
`;

export function CreateWidget({ createButtonSrc }) {
  return (
    <StyledCreateWidget className="nav-create-btn">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="12" y1="8" x2="12" y2="16"></line>
          <line x1="8" y1="12" x2="16" y2="12"></line>
        </svg>
    </StyledCreateWidget>
  );
}

'''
'''--- src/components/navigation/Footer.js ---
// src/components/Footer.js
import React from "react";
import { useHistory } from "react-router-dom/cjs/react-router-dom.min";
import styled from "styled-components";
import Core from "../Core";

const FooterWrapper = styled.footer`
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 10000;
`;

const Form = styled.form`
  flex: 1;
  display: flex;
  margin: 0;
`;

const Input = styled.input`
  flex: 1;
  padding: 10px;
  height: 48px;
  background-color: #fff;
  border: 2px inset #333;

  background-color: #fff;
  border: 2px inset #333;

  &:focus {
    outline: none;
    border: 2px solid #333;
  }

  font-family: "Arial", sans-serif;
`;

const Button = styled.button`
  display: flex;
  justify-content: center;
  align-items: center;

  text-transform: lowercase !important;
  height: 48px;
  text-align: center;
  text-decoration: none;
  border: 2px outset #333;
  background-color: #f5f5f5;
  cursor: pointer;
  color: #333;
  padding: 20px 20px;
  margin-right: 10px;
  margin-left: 4px;

  &:active {
    border-style: inset;
    background-color: #d5d5d5;
    color: #000;
  }

  &:hover {
    background-color: #e5e5e5;
    color: #111;
  }
`;

const Footer = (props) => {
  const history = useHistory();
  return (
    <FooterWrapper className="classic">
      <Core {...props} />
      <Form
        onSubmit={(e) => {
          e.preventDefault();
          history.push(`/${e.target[0].value}`);
        }}
      >
        <Input
          type="text"
          className="classic"
          placeholder="browse everything..."
        />
        <Button type="submit">
          <i className="bi bi-search"></i>
        </Button>
      </Form>
    </FooterWrapper>
  );
};

export default Footer;

'''
'''--- src/components/navigation/Logotype.js ---
import React from "react";

export function Logotype() {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 26 26"
      fill="black"
      width="36px"
      height="36px"
    >
      <circle cx="13" cy="13" r="13" />
    </svg>
  );
}

'''
'''--- src/components/navigation/NavigationButton.js ---
import React from "react";
import styled from "styled-components";
import { NavLink } from "react-router-dom";

const StyledNavigationButton = styled.div`
  a {
    color: var(--slate-dark-11);
    font-size: 16px;
    padding: 10px;
    border-radius: 8px;
    font-weight: var(--font-weight-bold);
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover,
    &.active {
      color: white;
      text-decoration: none;
      background-color: var(--slate-dark-6);
    }
  }
  &.disabled {
    opacity: 0.5;
  }
`;

export function NavigationButton(props) {
  return (
    <StyledNavigationButton className={props.disabled ? "disabled" : ""}>
      {props.route ? (
        <NavLink
          onClick={(e) => {
            if (props.disabled) {
              e.preventDefault();
            }
          }}
          to={props.route}
          exact={true}
        >
          {props.children}
        </NavLink>
      ) : (
        <a href={props.href} target="_blank" rel="noopener noreferrer">
          {props.children}
        </a>
      )}
    </StyledNavigationButton>
  );
}

'''
'''--- src/components/navigation/NavigationWrapper.js ---
import React, { useState, useEffect } from "react";
import { DesktopNavigation } from "./desktop/DesktopNavigation";
import { MobileNavigation } from "./mobile/MobileNavigation";

export function NavigationWrapper(props) {
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);
  return (
    <>
      {matches && <DesktopNavigation {...props} />}
      {!matches && <MobileNavigation {...props} />}
      {/* <MobileNavigation {...props} /> */}
    </>
  );
}

'''
'''--- src/components/navigation/NotificationWidget.js ---
import React from "react";
import styled from "styled-components";
import { Widget } from "near-social-vm";

const StyledNotificationWidget = styled.div`
  margin: 0 15px;
  // background-color: var(--slate-dark-5);
  height: 40px;
  width: 40px;
  border-radius: 50%;
  font-weight: var(--font-weight-medium);
    text-transform: lowercase !important;
    // display: inline-block;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;

  > div,
  a {
    width: 100%;
    height: 100%;
  }

  a {
    color: black !important;
    display: flex;
    align-items: center;
    justify-content: center;

    i {
      font-size: 18px !important;
    }
  }

  :hover {
    a,
    i {
      color: black;
      // background-color: var(--slate-dark-5);
    }
  }
`;

export function NotificationWidget({ notificationButtonSrc }) {
  return (
    <StyledNotificationWidget className="nav-notification-btn">
      <Widget src={notificationButtonSrc} />
    </StyledNotificationWidget>
  );
}

'''
'''--- src/components/navigation/PretendModal.js ---
import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";
import { Widget, useAccount } from "near-social-vm";

export default function PretendModal(props) {
  const account = useAccount();
  const onHide = props.onHide;
  const show = props.show;

  const [accountId, setAccountId] = useState("");

  return (
    <Modal centered show={show} onHide={onHide}>
      <Modal.Header closeButton>
        <Modal.Title>Pretend to be another account</Modal.Title>
      </Modal.Header>
      <Modal.Body>
        <div>
          <label htmlFor="widget-src-input" className="form-label">
            Pretend to be account ID:
          </label>
          <input
            className="form-control"
            id="widget-src-input"
            type="text"
            value={accountId}
            onChange={(e) =>
              setAccountId(
                e.target.value.toLowerCase().replaceAll(/[^a-z0-9_.\-]/g, "")
              )
            }
          />
        </div>
        <div className="mt-2">
          <Widget
            src={props.widgets.profileInlineBlock}
            props={{ accountId }}
          />
        </div>
      </Modal.Body>
      <Modal.Footer>
        <button
          className="btn btn-success"
          disabled={!accountId || !account.startPretending}
          onClick={(e) => {
            e.preventDefault();
            account.startPretending(accountId);
            setAccountId("");
            onHide();
          }}
        >
          Pretend
        </button>
        <button className="btn btn-secondary" onClick={onHide}>
          Cancel
        </button>
      </Modal.Footer>
    </Modal>
  );
}

'''
'''--- src/components/navigation/SignInButton.js ---
import React from "react";
import { GrayBorderButton } from "../common/buttons/GrayBorderButton";

export function SignInButton(props) {
  return (
    <button onClick={props.onSignIn} style={{ padding: "12px", fontWeight: "var(--font-weight-medium)" }}>
      Sign In
    </button>
  );
}

'''
'''--- src/components/navigation/desktop/DesktopNavigation.js ---
import React, { useEffect, useState } from "react";
import { Link, useHistory } from "react-router-dom";
import styled from "styled-components";
import { CreateWidget } from "../CreateWidget";
import { NotificationWidget } from "../NotificationWidget";
import { SignInButton } from "../SignInButton";
import { UserDropdown } from "./UserDropdown";

const StyledNavigation = styled.div`
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  // background-color: var(--slate-dark-1);
  z-index: 1000;
  padding: 12px 0;

  .user-section {
    margin-left: auto;
    > button {
      font-size: 14px;
    }
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;

    .user-section {
      display: flex;
      align-items: center;

      .nav-create-btn {
        margin-left: 10px;
      }

      .nav-sign-in-btn {
        margin-left: 10px;
      }
    }

    .arrow-up-right {
      margin-left: 4px;
    }
  }

  .search {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
`;

const StyledInput = styled.input`
  border: none;
  outline: none;
  box-shadow: none !important;
  height: 3rem;
  font-size: 1.5em;
  font-family: Arial, Times, serif;
  line-height: 2em;
  font-weight: 400;
  cursor: pointer;
  text-align: left;
  width: 100%;

  &::placeholder {
    font-size: 1.5em;
  }

  &:focus {
    /* Add styles for focus state here if needed */
  }
`;

export function DesktopNavigation(props) {
  const history = useHistory();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  return (
    <StyledNavigation>
      <div className="container">
        <Link to="/" className="logo-link">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="black"
            width="64px"
            height="64px"
          >
            <circle cx="12" cy="12" r="8" />
          </svg>
        </Link>
        <div>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              history.push(`/${e.target[0].value}`);
            }}
            className="search"
            style={{ display: "flex", alignItems: "stretch" }}
          >
            <input
              placeholder="everything"
              style={{ fontSize: "2em", width: "100%" }}
              onFocus={() => {}}
            />
          </form>
        </div>
        <div className="user-section">
          {!props.signedIn && (
            <SignInButton onSignIn={() => props.requestSignIn()} />
          )}
          {props.signedIn && (
            <>
              {matches && (
                <>
                  <Link
                    to={`/${props.widgets?.create}`}
                    style={{ textDecoration: "none", color: "inherit" }}
                  >
                    <CreateWidget
                      createWidgetSrc={props.widgets.createButton}
                    />
                  </Link>
                  <NotificationWidget
                    notificationButtonSrc={props.widgets.notificationButton}
                  />
                </>
              )}
              <UserDropdown {...props} />
            </>
          )}
        </div>
      </div>
    </StyledNavigation>
  );
}

'''
'''--- src/components/navigation/desktop/UserDropdown.js ---
import React, { useCallback, useEffect, useState } from "react";
import { Widget, useNear, useAccount } from "near-social-vm";
import styled from "styled-components";
import { User } from "../../icons/User";
import { LogOut } from "../../icons/LogOut";
import { Withdraw } from "../../icons/Withdraw";
import { NavLink } from "react-router-dom";
import PretendModal from "../PretendModal";
import { Pretend } from "../../icons/Pretend";
import { StopPretending } from "../../icons/StopPretending";
import { Link } from "react-router-dom";
import { CreateWidget } from "../CreateWidget";
import { NotificationWidget } from "../NotificationWidget";

const StyledDropdown = styled.div`
  button,
  a {
    font-weight: var(--font-weight-medium);
  }
  .dropdown-toggle {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-weight: var(--font-weight-medium);
    text-transform: lowercase !important;
    // display: inline-block;
    text-align: center;
    text-decoration: none;
    border: 2px outset #333;
    background-color: #f5f5f5;
    cursor: pointer;
    color: #333;
    // display: flex;
    // align-items: center;
    // text-align: left;
    // // background-color: rgba(46, 51, 56, 0.8); /* Adjust the alpha value (0.8) to control transparency */
    // border-radius: 50px;
    // outline: none;
    // border: 0;
    height: 54px;

    &:after {
      margin: 0 15px;
      border-top-color: var(--slate-dark-11);
    }

    img {
      border-radius: 50% !important;
    }

    .profile-info {
      margin: 5px 10px;
      line-height: normal;
      max-width: 140px;

      .profile-name,
      .profile-username {
        text-overflow: ellipsis;
        overflow: hidden;
      }

      .profile-name {
        color: black;
      }
      .profile-username {
        color: var(--slate-dark-11);
      }
    }
  }

  ul {
    // background-color: rgba(46, 51, 56, 0.8); /* Adjust the alpha value (0.8) to control transparency */
    width: 100%;

    li {
      padding: 0 6px;
    }

    button,
    a {
      font-weight: var(--font-weight-medium);
      text-transform: lowercase !important;
      display: inline-block;
      text-align: center;
      text-decoration: none;
      border: 2px outset #333;
      background-color: #f5f5f5;
      cursor: pointer;
      color: #333;
      // color: var(--slate-dark-11);
      // display: flex;
      // align-items: center;
      // border-radius: 8px;
      padding: 12px;

      :hover,
      :focus {
        text-decoration: none;
        background-color: var(--slate-dark-1);
        color: white;

        svg {
          path {
            stroke: white;
          }
        }
      }

      svg {
        margin-right: 7px;
        min-width: 24px;
        path {
          stroke: var(--slate-dark-9);
        }
      }
    }
  }
`;

export function UserDropdown(props) {
  const near = useNear();
  const account = useAccount();
  const [matches, setMatches] = useState(
    window.matchMedia("(min-width: 992px)").matches
  );

  useEffect(() => {
    window
      .matchMedia("(min-width: 992px)")
      .addEventListener("change", (e) => setMatches(e.matches));
  }, []);

  const withdrawStorage = useCallback(async () => {
    await near.contract.storage_withdraw({}, undefined, "1");
  }, [near]);

  const [showPretendModal, setShowPretendModal] = React.useState(false);

  return (
    <>
      <StyledDropdown className="dropdown">
        <button
          className="dropdown-toggle"
          type="button"
          id="dropdownMenu2222"
          data-bs-toggle="dropdown"
          aria-expanded="false"
        >
          <Widget
            src={props.widgets.profileImage}
            props={{
              accountId: account.accountId,
              className: "d-inline-block",
              style: { width: "40px", height: "40px" },
            }}
          />
          {matches && (
            <>
              <div className="profile-info">
                {props.widgets.profileName && (
                  <div className="profile-name">
                    <Widget src={props.widgets.profileName} />
                  </div>
                )}
                <div className="profile-username">{account.accountId}</div>
              </div>
            </>
          )}
        </button>
        <ul
          className="dropdown-menu"
          aria-labelledby="dropdownMenu2222"
          style={{ minWidth: "fit-content" }}
        >
          <li>
            <NavLink
              className="dropdown-item"
              type="button"
              to={`/${account.accountId}`}
            >
              <User />
              my everything
            </NavLink>
          </li>
          <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => withdrawStorage()}
            >
              <Withdraw />
              Withdraw {props.availableStorage.div(1000).toFixed(2)}kb
            </button>
          </li>
          {account.pretendAccountId ? (
            <li>
              <button
                className="dropdown-item"
                type="button"
                disabled={!account.startPretending}
                onClick={() => account.startPretending(undefined)}
              >
                <StopPretending />
                Stop pretending
              </button>
            </li>
          ) : (
            <li>
              <button
                className="dropdown-item"
                type="button"
                onClick={() => setShowPretendModal(true)}
              >
                <Pretend />
                Pretend to be another account
              </button>
            </li>
          )}
          <li>
            <button
              className="dropdown-item"
              type="button"
              onClick={() => props.logOut()}
            >
              <LogOut />
              Sign Out
            </button>
          </li>
          <li className="icon-buttons">
            <button className="dropdown-item" type="button">
              <i className="bi bi-arrow-left"></i>
            </button>
            <button className="dropdown-item" type="button">
              <i className="bi bi-house"></i>
            </button>
            <button className="dropdown-item" type="button">
              <i className="bi bi-arrow-right"></i>
            </button>
          </li>
        </ul>
      </StyledDropdown>
      <PretendModal
        show={showPretendModal}
        onHide={() => setShowPretendModal(false)}
        widgets={props.widgets}
      />
    </>
  );
}

'''
'''--- src/components/navigation/mobile/Menu.js ---
import { Widget } from "near-social-vm";
import React from "react";
import styled from "styled-components";

const StyledMenu = styled.div`
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  display: flex;
  transition: 350ms;
  transform: translateX(-100%);

  &.show {
    transform: translateX(0);
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  .left-side {
    position: relative;
    display: flex;
    width: 100%;
    flex-direction: column;
    padding: 25px;
    overflow-x: auto;
  }

  .right-side {
    flex: 20;
    opacity: 0.8;
    background-color: var(--slate-dark-1);
  }
`;

export function Menu(props) {
  return (
    <StyledMenu className={props.showMenu ? "show" : ""}>
      <div className="left-side">
        <Widget
          src={props.widgets.left.menu}
          props={{
            requestSignIn: props.requestSignIn,
            logOut: props.logOut,
            handleCloseMenu: props.onCloseMenu,
          }}
        />
      </div>
      <div className="right-side" onClick={props.onCloseMenu} />
    </StyledMenu>
  );
}

'''
'''--- src/components/navigation/mobile/MobileNavigation.js ---
import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import styled from "styled-components";
import useScrollBlock from ".././../../hooks/useScrollBlock";
import { Menu } from "./Menu";
import { Widget } from "near-social-vm";

const Header = styled.div`
  position: sticky;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 50;
`;

export function MobileNavigation(props) {
  const [showMenu, setShowMenu] = useState(false);
  const location = useLocation();
  const [blockScroll, allowScroll] = useScrollBlock();

  useEffect(() => {
    setShowMenu(false);
    allowScroll();
  }, [location.pathname]);

  return (
    <>
      <Header>
        <Widget
          src={props.widgets.header.mobile}
          props={{
            ...props,
            onClickShowMenu: () => {
              setShowMenu(true);
              blockScroll();
            },
          }}
        />
      </Header>
      <Menu
        {...props}
        showMenu={showMenu}
        onCloseMenu={() => {
          setShowMenu(false);
          allowScroll();
        }}
      />
    </>
  );
}

'''
'''--- src/contexts/LivepeerContext.js ---
import { createReactClient } from "@livepeer/core-react/client";
import { studioProvider } from "@livepeer/core-react";
import React, { createContext, useContext, useMemo } from "react";

// Create context
export const LivepeerContext = createContext();

export function LivepeerProvider({ children }) {
  const livepeerClient = useMemo(
    () =>
      createReactClient({
        provider: studioProvider({
          apiKey: "c8323290-27a8-403b-858d-8baee19925c1", // Consider moving this to an environment variable for security
        }),
      }),
    []
  );

  return (
    <LivepeerContext.Provider value={livepeerClient}>
      {children}
    </LivepeerContext.Provider>
  );
}

// Custom hook for convenience
export function useLivepeer() {
  const context = useContext(LivepeerContext);
  if (!context) {
    throw new Error("useLivepeer must be used within a LivepeerProvider");
  }
  return context;
}

'''
'''--- src/data/web3.js ---
// import { singletonHook } from "react-singleton-hook";
// import { useEffect, useState } from "react";
// import { init, useConnectWallet } from "@web3-onboard/react";
// import injectedModule from "@web3-onboard/injected-wallets";
// import walletConnectModule from "@web3-onboard/walletconnect";
// import ledgerModule from "@web3-onboard/ledger";
// import { ethers } from "ethers";
// import ls from "local-storage";
// import icon from "../images/near_social_icon.svg";

// const web3onboardKey = "web3-onboard:connectedWallets";

// const wcV1InitOptions = {
//   qrcodeModalOptions: {
//     mobileLinks: ["metamask", "argent", "trust"],
//   },
//   connectFirstChainId: true,
// };

// const walletConnect = walletConnectModule(wcV1InitOptions);
// const ledger = ledgerModule();
// const injected = injectedModule();

// // initialize Onboard
// export const onboard = init({
//   wallets: [injected, walletConnect, ledger],
//   chains: [
//     {
//       id: 1,
//       token: "ETH",
//       label: "Ethereum Mainnet",
//       rpcUrl: "https://rpc.ankr.com/eth",
//     },
//     {
//       id: 3,
//       token: "ETH",
//       label: "Ropsten - Ethereum Testnet",
//       rpcUrl: "https://rpc.ankr.com/eth_ropsten",
//     },
//     {
//       id: 5,
//       token: "ETH",
//       label: "Goerli - Ethereum Testnet",
//       rpcUrl: "https://rpc.ankr.com/eth_goerli",
//     },
//     {
//       id: "0x4e454152",
//       token: "ETH",
//       label: "Aurora Mainnet",
//       rpcUrl: "https://mainnet.aurora.dev",
//     },
//     {
//       id: 137,
//       token: "MATIC",
//       label: "Matic Mainnet",
//       rpcUrl: "https://rpc.ankr.com/polygon",
//     },
//     {
//       id: 324,
//       token: "ETH",
//       label: "zkSync",
//       rpcUrl: "https://zksync2-mainnet.zksync.io",
//     },
//     {
//       id: 56,
//       token: "BNB",
//       label: "Binance Smart Chain Mainnet",
//       rpcUrl: "https://bsc.publicnode.com",
//     },
//     {
//       id: 42161,
//       token: "ETH",
//       label: "Arbitrum One Mainnet",
//       rpcUrl: "https://endpoints.omniatech.io/v1/arbitrum/one/public",
//     },
//   ],
//   appMetadata: {
//     name: "NEAR Social",
//     icon,
//     description: "NEAR Social",
//   },
//   theme: "dark",
//   containerElements: {
//     // connectModal: '#near-social-navigation-bar',
//     // accountCenter: "#near-social-web3-account",
//   },
// });

// const defaultEthersProviderContext = { useConnectWallet };

// export const useEthersProviderContext = singletonHook(
//   defaultEthersProviderContext,
//   () => {
//     const [{ wallet }] = useConnectWallet();
//     const [ethersProvider, setEthersProvider] = useState(
//       defaultEthersProviderContext
//     );

//     useEffect(() => {
//       (async () => {
//         const walletsSub = onboard.state.select("wallets");
//         const { unsubscribe } = walletsSub.subscribe((wallets) => {
//           const connectedWallets = wallets.map(({ label }) => label);
//           ls.set(web3onboardKey, connectedWallets);
//         });

//         const previouslyConnectedWallets = ls.get(web3onboardKey) || [];

//         if (previouslyConnectedWallets) {
//           // You can also auto connect "silently" and disable all onboard modals to avoid them flashing on page load
//           await onboard.connectWallet({
//             autoSelect: {
//               label: previouslyConnectedWallets[0],
//               disableModals: true,
//             },
//           });
//         }
//       })();
//     }, []);

//     useEffect(() => {
//       setEthersProvider({
//         provider: wallet?.provider,
//         useConnectWallet,
//       });
//     }, [wallet]);

//     return ethersProvider;
//   }
// );

'''
'''--- src/data/widgets.js ---
const TestnetDomains = {
  "test.near.social": true,
  "127.0.0.1": true,
};

export const NetworkId =
  window.location.hostname in TestnetDomains ? "testnet" : "mainnet";
const TestnetWidgets = {
  image: "eugenethedream/widget/Image",
  default: "efiz.testnet/widget/every.app.homepage",
  viewSource: "eugenethedream/widget/WidgetSource",
  widgetMetadataEditor: "eugenethedream/widget/WidgetMetadataEditor",
  widgetMetadata: "eugenethedream/widget/WidgetMetadata",
  profileImage: "eugenethedream/widget/ProfileImage",
  profilePage: "eugenethedream/widget/Profile",
  profileName: "eugenethedream/widget/ProfileName",
  notificationButton: "eugenethedream/widget/NotificationButton",
};

const MainnetWidgets = {
  image: "mob.near/widget/Image",
  default: "efiz.near/widget/Things.index",
  thing: "efiz.near/widget/every.thing.view",
  create: "efiz.near/widget/creator",
  header: {
    mobile: "efiz.near/widget/every.app.header.mobile"
  },
  left: {
    menu: "efiz.near/widget/every.app.left.menu"
  },
  action: {
    button: "efiz.near/widget/every.app.action.button"
  },
  viewSource: "mob.near/widget/WidgetSource",
  widgetMetadataEditor: "mob.near/widget/WidgetMetadataEditor",
  widgetMetadata: "mob.near/widget/WidgetMetadata",
  profileImage: "mob.near/widget/ProfileImage",
  notificationButton: "mob.near/widget/NotificationButton",
  createButton: "mob.near/widget/NotificationButton",
  profilePage: "mob.near/widget/ProfilePage",
  profileName: "patrick.near/widget/ProfileName",
  editorComponentSearch: "mob.near/widget/Editor.ComponentSearch",
  profileInlineBlock: "mob.near/widget/Profile.InlineBlock",
  viewHistory: "bozon.near/widget/WidgetHistory",
};

export const Widgets =
  NetworkId === "testnet" ? TestnetWidgets : MainnetWidgets;

'''
'''--- src/hooks/useBosLoaderInitializer.js ---
import { useCallback, useEffect } from 'react';

import { useBosLoaderStore } from '../stores/bos-loader';

import { useFlags } from './useFlags';

export function useBosLoaderInitializer() {
  const [flags] = useFlags();
  const loaderUrl = flags?.bosLoaderUrl;
  const setStore = useBosLoaderStore((store) => store.set);

  /**
   * Fetch local component versions if a local loader
   * is provided. must be provided as {components: { <path>: { code : <code>}}}
   */
  const fetchRedirectMap = useCallback(
    async (url) => {
      setStore({
        loaderUrl: url,
      });

      try {
        const res = await fetch(url, {
          method: 'GET',
          headers: {
            Accept: 'application/json',
          },
        });

        if (!res.ok) {
          throw new Error('Network response was not OK');
        }

        const data = await res.json();

        setStore({
          hasResolved: true,
          redirectMap: data.components,
        });
      } catch (e) {
        console.error(e);

        setStore({
          failedToLoad: true,
          hasResolved: true,
        });
      }
    },
    [setStore],
  );

  useEffect(() => {
    if (loaderUrl) {
      fetchRedirectMap(loaderUrl);
    } else {
      setStore({ hasResolved: true });
    }
  }, [fetchRedirectMap, loaderUrl, setStore]);
}
'''
'''--- src/hooks/useClearCurrentComponent.js ---
import { useEffect } from 'react';

import { useCurrentComponentStore } from '../stores/current-component';

export function useClearCurrentComponent() {
  const setComponentSrc = useCurrentComponentStore((store) => store.setSrc);

  useEffect(() => {
    setComponentSrc(null);
  }, [setComponentSrc]);
}
'''
'''--- src/hooks/useFlags.js ---
import { useCallback, useEffect, useState } from 'react';

export function useFlags() {
  const [rawFlags, setRawFlags] = useState();

  useEffect(() => {
    const flags = localStorage.getItem('flags') ? JSON.parse(localStorage.getItem('flags') || '') : {};
    setRawFlags(flags);
  }, []);

  const setFlags = useCallback((newFlags) => {
    setRawFlags((f) => {
      const updated = { ...f, ...newFlags };
      localStorage.setItem('flags', JSON.stringify(updated));

      alert('Flags have been saved.');

      // reload for changes to take effect
      location.reload();

      // may not be reachable
      return updated;
    });
  }, []);

  return [rawFlags, setFlags];
}
'''
'''--- src/hooks/useHashRouterLegacy.js ---
import { useHistory } from "react-router-dom";
import React, { useCallback, useEffect } from "react";

export function useHashRouterLegacy() {
  const history = useHistory();

  const onHashChange = useCallback(
    (event) => {
      let url = event.newURL.split("#").pop() ?? "/";

      if (url[0] === "/") {
        history && history.replace(url);
      }
    },
    [history]
  );

  useEffect(() => {
    window.addEventListener("hashchange", onHashChange);

    return () => {
      window.removeEventListener("hashchange", onHashChange);
    };
  }, [onHashChange]);

  useEffect(() => {
    if (!history) {
      return;
    }
    const currentUrl = window.location.href;

    if (currentUrl.includes("#")) {
      const path = currentUrl.split("#")[1];
      history.replace(path);
    }
  }, [history]);
}
'''
'''--- src/hooks/useQuery.js ---
import { useLocation } from "react-router-dom";
import React from "react";

export function useQuery() {
  const { search } = useLocation();

  return React.useMemo(() => new URLSearchParams(search), [search]);
}

'''
'''--- src/hooks/useScrollBlock.js ---
import { useRef } from "react";

const safeDocument = typeof document !== "undefined" ? document : {};

/**
 * Usage:
 * const [blockScroll, allowScroll] = useScrollBlock();
 */
export default () => {
  const scrollBlocked = useRef();
  const html = safeDocument.documentElement;
  const { body } = safeDocument;

  const blockScroll = () => {
    if (!body || !body.style || scrollBlocked.current) return;

    const scrollBarWidth = window.innerWidth - html.clientWidth;
    const bodyPaddingRight =
      parseInt(
        window.getComputedStyle(body).getPropertyValue("padding-right")
      ) || 0;

    /**
     * 1. Fixes a bug in iOS and desktop Safari whereby setting
     *    `overflow: hidden` on the html/body does not prevent scrolling.
     * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent
     *    scroll if an `overflow-x` style is also applied to the body.
     */
    html.style.position = "relative"; /* [1] */
    html.style.overflow = "hidden"; /* [2] */
    body.style.position = "relative"; /* [1] */
    body.style.overflow = "hidden"; /* [2] */
    body.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;

    scrollBlocked.current = true;
  };

  const allowScroll = () => {
    if (!body || !body.style || !scrollBlocked.current) return;

    html.style.position = "";
    html.style.overflow = "";
    body.style.position = "";
    body.style.overflow = "";
    body.style.paddingRight = "";

    scrollBlocked.current = false;
  };

  return [blockScroll, allowScroll];
};

'''
'''--- src/images/near_social_combo.svg ---
<svg width="1601" height="250" viewBox="0 0 1601 250" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M452.2 200V60H479L556.4 164.6H550.8C550.267 160.467 549.8 156.467 549.4 152.6C549 148.6 548.6 144.6 548.2 140.6C547.933 136.467 547.667 132.267 547.4 128C547.267 123.6 547.133 119 547 114.2C546.867 109.267 546.8 103.933 546.8 98.2V60H576.2V200H549L470 94.4L477.6 94.6C478.267 101.533 478.8 107.467 479.2 112.4C479.733 117.2 480.133 121.4 480.4 125C480.667 128.6 480.867 131.733 481 134.4C481.267 137.067 481.4 139.6 481.4 142C481.533 144.4 481.6 146.933 481.6 149.6V200H452.2ZM658.752 202C647.285 202 637.285 199.667 628.752 195C620.218 190.333 613.552 183.933 608.752 175.8C603.952 167.667 601.552 158.333 601.552 147.8C601.552 139.667 602.885 132.2 605.552 125.4C608.218 118.6 611.952 112.733 616.752 107.8C621.552 102.733 627.218 98.8667 633.752 96.2C640.418 93.4 647.618 92 655.352 92C662.552 92 669.218 93.3333 675.352 96C681.485 98.5333 686.752 102.2 691.152 107C695.685 111.667 699.152 117.2 701.552 123.6C703.952 130 705.018 137 704.752 144.6L704.552 153.4H619.552L614.952 136H681.152L677.952 139.6V135.2C677.685 131.6 676.485 128.333 674.352 125.4C672.352 122.467 669.752 120.2 666.552 118.6C663.352 117 659.752 116.2 655.752 116.2C649.885 116.2 644.885 117.333 640.752 119.6C636.752 121.867 633.685 125.2 631.552 129.6C629.418 134 628.352 139.333 628.352 145.6C628.352 152 629.685 157.533 632.352 162.2C635.152 166.867 639.018 170.533 643.952 173.2C649.018 175.733 654.952 177 661.752 177C666.418 177 670.685 176.267 674.552 174.8C678.418 173.333 682.552 170.8 686.952 167.2L700.552 186.2C696.685 189.667 692.418 192.6 687.752 195C683.085 197.267 678.285 199 673.352 200.2C668.418 201.4 663.552 202 658.752 202ZM765.339 202C756.539 202 748.606 199.6 741.539 194.8C734.472 190 728.872 183.467 724.739 175.2C720.606 166.933 718.539 157.467 718.539 146.8C718.539 136.133 720.606 126.733 724.739 118.6C729.006 110.333 734.739 103.867 741.939 99.2C749.139 94.4 757.339 92 766.539 92C771.739 92 776.472 92.8 780.739 94.4C785.139 95.8667 788.939 97.9333 792.139 100.6C795.472 103.267 798.272 106.333 800.539 109.8C802.806 113.267 804.406 117 805.339 121L799.339 120V94.2H827.539V200H798.939V174.6L805.339 174C804.272 177.733 802.539 181.267 800.139 184.6C797.739 187.933 794.739 190.933 791.139 193.6C787.672 196.133 783.739 198.2 779.339 199.8C774.939 201.267 770.272 202 765.339 202ZM773.139 177.4C778.472 177.4 783.139 176.133 787.139 173.6C791.139 171.067 794.206 167.533 796.339 163C798.606 158.333 799.739 152.933 799.739 146.8C799.739 140.8 798.606 135.533 796.339 131C794.206 126.467 791.139 122.933 787.139 120.4C783.139 117.733 778.472 116.4 773.139 116.4C767.939 116.4 763.339 117.733 759.339 120.4C755.472 122.933 752.406 126.467 750.139 131C747.872 135.533 746.739 140.8 746.739 146.8C746.739 152.933 747.872 158.333 750.139 163C752.406 167.533 755.472 171.067 759.339 173.6C763.339 176.133 767.939 177.4 773.139 177.4ZM856.013 200V94.2H883.413L884.413 128.2L879.613 121.2C881.213 115.733 883.813 110.8 887.413 106.4C891.013 101.867 895.213 98.3333 900.013 95.8C904.946 93.2667 910.079 92 915.413 92C917.679 92 919.879 92.2 922.013 92.6C924.146 93 925.946 93.4667 927.413 94L919.813 125.2C918.213 124.4 916.279 123.733 914.013 123.2C911.746 122.533 909.413 122.2 907.013 122.2C903.813 122.2 900.813 122.8 898.013 124C895.346 125.067 893.013 126.667 891.013 128.8C889.013 130.8 887.413 133.2 886.213 136C885.146 138.8 884.613 141.867 884.613 145.2V200H856.013ZM1054.44 202C1045.77 202 1037.84 200.933 1030.64 198.8C1023.57 196.667 1017.24 193.533 1011.64 189.4C1006.17 185.267 1001.24 180.267 996.836 174.4L1015.64 153C1022.17 162.067 1028.64 168.267 1035.04 171.6C1041.57 174.8 1048.64 176.4 1056.24 176.4C1060.37 176.4 1064.04 175.867 1067.24 174.8C1070.57 173.6 1073.17 171.933 1075.04 169.8C1076.9 167.667 1077.84 165.133 1077.84 162.2C1077.84 160.067 1077.37 158.133 1076.44 156.4C1075.5 154.533 1074.17 152.933 1072.44 151.6C1070.7 150.133 1068.64 148.867 1066.24 147.8C1063.84 146.6 1061.17 145.6 1058.24 144.8C1055.3 143.867 1052.1 143.133 1048.64 142.6C1041.17 140.867 1034.64 138.8 1029.04 136.4C1023.44 133.867 1018.77 130.8 1015.04 127.2C1011.3 123.467 1008.5 119.267 1006.64 114.6C1004.9 109.933 1004.04 104.667 1004.04 98.8C1004.04 92.8 1005.37 87.2667 1008.04 82.2C1010.7 77 1014.37 72.5333 1019.04 68.8C1023.84 65.0667 1029.3 62.2 1035.44 60.2C1041.7 58.2 1048.3 57.2 1055.24 57.2C1063.77 57.2 1071.24 58.2 1077.64 60.2C1084.04 62.0667 1089.57 64.8 1094.24 68.4C1099.04 72 1103.04 76.4 1106.24 81.6L1087.24 100C1084.44 96.2667 1081.37 93.1333 1078.04 90.6C1074.84 88.0667 1071.3 86.2 1067.44 85C1063.7 83.6667 1059.84 83 1055.84 83C1051.44 83 1047.64 83.6 1044.44 84.8C1041.24 85.8667 1038.7 87.4667 1036.84 89.6C1035.1 91.7333 1034.24 94.3333 1034.24 97.4C1034.24 99.8 1034.84 101.933 1036.04 103.8C1037.24 105.667 1038.97 107.333 1041.24 108.8C1043.5 110.133 1046.24 111.333 1049.44 112.4C1052.64 113.467 1056.17 114.4 1060.04 115.2C1067.37 116.667 1073.97 118.6 1079.84 121C1085.7 123.4 1090.7 126.333 1094.84 129.8C1099.1 133.133 1102.37 137.133 1104.64 141.8C1106.9 146.333 1108.04 151.467 1108.04 157.2C1108.04 166.667 1105.77 174.733 1101.24 181.4C1096.7 188.067 1090.44 193.2 1082.44 196.8C1074.44 200.267 1065.1 202 1054.44 202ZM1180.41 202C1169.61 202 1159.94 199.667 1151.41 195C1143.01 190.2 1136.34 183.667 1131.41 175.4C1126.61 167.133 1124.21 157.667 1124.21 147C1124.21 136.333 1126.61 126.933 1131.41 118.8C1136.34 110.533 1143.01 104 1151.41 99.2C1159.94 94.4 1169.61 92 1180.41 92C1191.07 92 1200.61 94.4 1209.01 99.2C1217.54 104 1224.21 110.533 1229.01 118.8C1233.81 126.933 1236.21 136.333 1236.21 147C1236.21 157.667 1233.81 167.133 1229.01 175.4C1224.21 183.667 1217.54 190.2 1209.01 195C1200.61 199.667 1191.07 202 1180.41 202ZM1180.41 177.2C1185.61 177.2 1190.27 175.933 1194.41 173.4C1198.54 170.733 1201.74 167.133 1204.01 162.6C1206.41 157.933 1207.61 152.733 1207.61 147C1207.61 141.133 1206.41 135.933 1204.01 131.4C1201.74 126.733 1198.54 123.133 1194.41 120.6C1190.27 117.933 1185.61 116.6 1180.41 116.6C1175.07 116.6 1170.34 117.933 1166.21 120.6C1162.07 123.267 1158.81 126.867 1156.41 131.4C1154.01 135.933 1152.87 141.133 1153.01 147C1152.87 152.733 1154.01 157.933 1156.41 162.6C1158.81 167.133 1162.07 170.733 1166.21 173.4C1170.34 175.933 1175.07 177.2 1180.41 177.2ZM1303.58 202C1293.44 202 1284.38 199.6 1276.38 194.8C1268.38 190 1262.04 183.467 1257.38 175.2C1252.84 166.933 1250.58 157.533 1250.58 147C1250.58 136.6 1252.84 127.267 1257.38 119C1262.04 110.6 1268.38 104 1276.38 99.2C1284.38 94.4 1293.44 92 1303.58 92C1313.04 92 1321.71 93.7333 1329.58 97.2C1337.44 100.667 1343.58 105.467 1347.98 111.6L1332.38 130.4C1330.51 127.867 1328.18 125.6 1325.38 123.6C1322.58 121.467 1319.51 119.8 1316.18 118.6C1312.98 117.4 1309.64 116.8 1306.18 116.8C1300.71 116.8 1295.84 118.133 1291.58 120.8C1287.44 123.333 1284.18 126.867 1281.78 131.4C1279.38 135.933 1278.18 141.133 1278.18 147C1278.18 152.733 1279.38 157.867 1281.78 162.4C1284.31 166.8 1287.71 170.4 1291.98 173.2C1296.24 175.867 1301.04 177.2 1306.38 177.2C1309.84 177.2 1313.11 176.733 1316.18 175.8C1319.24 174.733 1322.11 173.2 1324.78 171.2C1327.58 169.2 1330.11 166.8 1332.38 164L1347.78 182.8C1343.24 188.533 1336.98 193.2 1328.98 196.8C1320.98 200.267 1312.51 202 1303.58 202ZM1368.37 200V94.2H1396.77V200H1368.37ZM1382.37 72.4C1376.91 72.4 1372.64 71.0667 1369.57 68.4C1366.51 65.7333 1364.97 61.9333 1364.97 57C1364.97 52.4667 1366.51 48.8 1369.57 46C1372.77 43.0667 1377.04 41.6 1382.37 41.6C1387.84 41.6 1392.11 43 1395.17 45.8C1398.24 48.4667 1399.77 52.2 1399.77 57C1399.77 61.6667 1398.17 65.4 1394.97 68.2C1391.91 71 1387.71 72.4 1382.37 72.4ZM1466.71 202C1457.91 202 1449.97 199.6 1442.91 194.8C1435.84 190 1430.24 183.467 1426.11 175.2C1421.97 166.933 1419.91 157.467 1419.91 146.8C1419.91 136.133 1421.97 126.733 1426.11 118.6C1430.37 110.333 1436.11 103.867 1443.31 99.2C1450.51 94.4 1458.71 92 1467.91 92C1473.11 92 1477.84 92.8 1482.11 94.4C1486.51 95.8667 1490.31 97.9333 1493.51 100.6C1496.84 103.267 1499.64 106.333 1501.91 109.8C1504.17 113.267 1505.77 117 1506.71 121L1500.71 120V94.2H1528.91V200H1500.31V174.6L1506.71 174C1505.64 177.733 1503.91 181.267 1501.51 184.6C1499.11 187.933 1496.11 190.933 1492.51 193.6C1489.04 196.133 1485.11 198.2 1480.71 199.8C1476.31 201.267 1471.64 202 1466.71 202ZM1474.51 177.4C1479.84 177.4 1484.51 176.133 1488.51 173.6C1492.51 171.067 1495.57 167.533 1497.71 163C1499.97 158.333 1501.11 152.933 1501.11 146.8C1501.11 140.8 1499.97 135.533 1497.71 131C1495.57 126.467 1492.51 122.933 1488.51 120.4C1484.51 117.733 1479.84 116.4 1474.51 116.4C1469.31 116.4 1464.71 117.733 1460.71 120.4C1456.84 122.933 1453.77 126.467 1451.51 131C1449.24 135.533 1448.11 140.8 1448.11 146.8C1448.11 152.933 1449.24 158.333 1451.51 163C1453.77 167.533 1456.84 171.067 1460.71 173.6C1464.71 176.133 1469.31 177.4 1474.51 177.4ZM1557.58 200V52H1585.98V200H1557.58Z" fill="black"/>
<path d="M107.137 208L18 124.5L107.137 41" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M224.924 41L313 124.5L224.924 208" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

'''
'''--- src/images/near_social_icon.svg ---
<svg width="331" height="203" viewBox="0 0 331 203" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M107.137 185L18 101.5L107.137 18" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M224.924 18L313 101.5L224.924 185" stroke="#3D7FFF" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

'''
'''--- src/index.css ---
:root {
  --slate-dark-1: #151718;
  --slate-dark-5: #2B2F31;
  --slate-dark-6: #313538;
  --slate-dark-8: #4C5155;
  --slate-dark-9: #697177;
  --slate-dark-11: #9BA1A6;
  --slate-dark-12: #ECEDEE;
  --blue-light-9: #0091FF;

  --font-weight-medium: 500;
  --font-weight-bold: 600;

  /* For web3 onboard */
  --account-center-z-index: 999;
  --account-center-position-top: 64px;
  --account-center-position-right: -10px;
}

'''
'''--- src/index.js ---
import React from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import App from "./App";

const container = document.getElementById("root");
const root = createRoot(container);
root.render(<App />);

'''
'''--- src/pages/Flags.js ---
import styled from "styled-components";

import { useClearCurrentComponent } from "../hooks/useClearCurrentComponent";
import { useFlags } from "../hooks/useFlags";
import React, { useState } from "react";

const Container = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 2rem 1rem;
`;

const Form = styled.div`
  display: flex;
  flex-direction: column;
  gap: 1rem;
`;

const InputGrid = styled.div`
  display: grid;
  grid-template-columns: max-content 1fr;
  align-items: center;
  gap: 1rem;

  @media (max-width: 600px) {
    grid-template-columns: 1fr;
  }
`;

export default function Flags() {
  const [flags, setFlags] = useFlags();
  const [url, setUrl] = useState(flags?.bosLoaderUrl || "");

  useClearCurrentComponent();

  return (
    <Container className="container-xl">
      <h1>
        Flags
      </h1>

      <Form>
        <InputGrid>
          <p>
            BOS Loader Url
          </p>

          <input
            className="form-control"
            placeholder="e.g. http://127.0.0.1:3030/, https://my-loader.ngrok.io"
            id="bosLoaderUrl"
            onChange={(e) => setUrl(e.target.value)}
          />
        </InputGrid>

        <button
          onClick={() => setFlags({ bosLoaderUrl: url })}
          style={{ marginLeft: "auto" }}
        >Save</button>
      </Form>
    </Container>
  );
};

{/* <Widget
src="devs.near/widget/SetFlagButton"
props={{
  url: "https://everything.dev",
  setFlags: setFlags,
}}
/> */}
'''
'''--- src/pages/ViewPage.js ---
import { Widget } from "near-social-vm";
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { useHashRouterLegacy } from "../hooks/useHashRouterLegacy";
import { useQuery } from "../hooks/useQuery";
import { useBosLoaderStore } from "../stores/bos-loader";
import styled from "styled-components";

const Container = styled.div`
  display: flex;
  flex-direction: column;
  width: 100vw;
  min-height: 100vh;
  align-items: stretch;
  padding-bottom: 48px;
`;

export default function ViewPage(props) {
  useHashRouterLegacy();
  const { widgetSrc } = useParams();
  const query = useQuery();
  const [widgetProps, setWidgetProps] = useState({});
  const redirectMapStore = useBosLoaderStore();

  const src = widgetSrc || props.widgets.default;
  const setWidgetSrc = props.setWidgetSrc;
  const viewSourceWidget = props.widgets.viewSource;

  useEffect(() => {
    setWidgetProps(Object.fromEntries([...query.entries()]));
  }, [query]);

  useEffect(() => {
    setTimeout(() => {
      setWidgetSrc(
        src === viewSourceWidget && query.get("src")
          ? {
              edit: query.get("src"),
              view: null,
            }
          : {
              edit: src,
              view: src,
            }
      );
    }, 1);
  }, [src, query, setWidgetSrc, viewSourceWidget]);

  function Thing({ path }) {
    const jsonString = // this should happen in the Browser thing
      '{"devhub": "devgovgigs.near/widget/Ideas", "form builder": "devgovgigs.near/widget/gigs-board.pages.Post?id=1098"}';
    const jsonObject = JSON.parse(jsonString);

    const myMap = new Map(Object.entries(jsonObject));

    path = path.trim();
    if (myMap.has(path)) {
      path = myMap.get(path);
    }

    const parts = path.split("/");
    if (parts[1] === "widget") {
      return (
        <Widget
          key={path}
          config={{
            redirectMap: redirectMapStore.redirectMap,
          }}
          src={path}
          props={widgetProps}
        />
      );
    } else {
      // TODO: every.thing.view could be abstracted out
      return (
        <Widget
          key={path}
          config={{
            redirectMap: redirectMapStore.redirectMap,
          }}
          src={"every.near/widget/every.thing.view"}
          props={{ path, ...widgetProps }}
        />
      );
    }
  }

  return (
    <Container>
      <Thing path={src} />
    </Container>
  );
}

'''
'''--- src/stores/bos-loader.js ---
import { create } from 'zustand';

export const useBosLoaderStore = create((set) => ({
  failedToLoad: false,
  hasResolved: false,
  loaderUrl: '',
  redirectMap: {},
  set: (state) => set((previousState) => ({ ...previousState, ...state })),
}));
'''
'''--- src/stores/current-component.js ---
import { create } from 'zustand';

export const useCurrentComponentStore = create((set) => ({
  src: null,
  setSrc: (src) => set(() => ({ src })),
}));
'''
'''--- src/utils/allowEntry.js ---
const keypom = require("@keypom/core");
const {
	getPubFromSecret,
	getKeyInformation,
	hashPassword,
    claim
} = keypom

async function allowEntry({privKey, basePassword}) {
    try {
        // Check 1: Key existence
        var publicKey = getPubFromSecret(privKey)
        var keyInfo = await getKeyInformation({publicKey})
        // If key does not exist, the user should not be admitted
        if(keyInfo == null) {
            console.log(`Key does not exist. Admission denied`);
            return false;
        }

        var curUse = keyInfo.cur_key_use 

        // Ticket was already scanned
        if (curUse !== 1) {
            console.log(`Key has already been scanned. Admission denied`);
            return false;
        }

        // Create password using base + pubkey + key use as string
        let passwordForClaim = await hashPassword(basePassword + publicKey + curUse.toString())
        // Claim with created password
        await claim({
            secretKey: privKey,
            password: passwordForClaim
        })

        // Check 3: Check if claim was successful by validating that curUse incremented
        keyInfo = await getKeyInformation({publicKey})

        if (keyInfo.cur_key_use !== 2) {
            console.log(`Claim has failed, check password`)
            return false;
        }
    } catch(err) {
        console.log(`Unknown Error: ${err}. Admission denied`)
        return false;
    }

    return true
}

module.exports = {
    allowEntry
}
'''
'''--- webpack.config.js ---
const webpack = require("webpack");
const paths = require("./config/paths");
const path = require("path");
const ManifestPlugin = require("webpack-manifest-plugin");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const HTMLWebpackPlugin = require("html-webpack-plugin");
const CopyWebpackPlugin = require("copy-webpack-plugin");
const { merge } = require("webpack-merge");
const loadPreset = require("./config/presets/loadPreset");
const loadConfig = (mode) => require(`./config/webpack.${mode}.js`)(mode);

module.exports = function (env) {
  const { mode = "production" } = env || {};
  return merge(
    {
      mode,
      entry: `${paths.srcPath}/index.js`,
      output: {
        path: paths.distPath,
        filename: "[name].bundle.js",
        publicPath: "/",
      },
      module: {
        rules: [
          {
            test: /\.m?js/,
            resolve: {
              fullySpecified: false,
            },
          },
          {
            test: /\.js$/,
            use: ["babel-loader"],
            exclude: path.resolve(__dirname, "node_modules"),
          },
          // Images: Copy image files to build folder
          { test: /\.(?:ico|gif|png|jpg|jpeg)$/i, type: "asset/resource" },

          // Fonts and SVGs: Inline files
          { test: /\.(woff(2)?|eot|ttf|otf|svg|)$/, type: "asset/inline" },
        ],
      },
      resolve: {
        modules: [paths.srcPath, "node_modules"],
        extensions: [".js", ".jsx", ".json"],
        fallback: {
          crypto: require.resolve("crypto-browserify"),
          stream: require.resolve("stream-browserify"),
          http: require.resolve("stream-http"),
          https: require.resolve("https-browserify"),
          fs: false,
          path: require.resolve("path-browserify"),
          zlib: require.resolve("browserify-zlib"),
        },
        // Fix for using `yarn link "near-social-vm"`
        alias: {
          react: path.resolve(__dirname, "./node_modules/react"),
          "react-dom": path.resolve(__dirname, "./node_modules/react-dom"),
          "near-api-js": path.resolve(__dirname, "./node_modules/near-api-js"),
        },
      },
      plugins: [
        new webpack.EnvironmentPlugin({
          // Configure environment variables here.
          ENVIRONMENT: "browser",
        }),
        new CleanWebpackPlugin(),
        // Copies files from target to destination folder
        new CopyWebpackPlugin({
          patterns: [
            {
              from: paths.publicPath,
              to: "assets",
              globOptions: {
                ignore: ["*.DS_Store"],
              },
              noErrorOnMissing: true,
            },
          ],
        }),
        new HTMLWebpackPlugin({
          template: `${paths.publicPath}/index.html`,
          favicon: `${paths.publicPath}/favicon.png`,
          robots: `${paths.publicPath}/robots.txt`,
          publicPath: "/",
        }),
        new webpack.ProgressPlugin(),
        new webpack.ProvidePlugin({
          process: "process/browser",
          Buffer: [require.resolve("buffer/"), "Buffer"],
        }),
        new ManifestPlugin.WebpackManifestPlugin(),
      ],
    },
    loadConfig(mode),
    loadPreset(env)
  );
};

'''