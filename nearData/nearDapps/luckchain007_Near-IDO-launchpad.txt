*GitHub Repository "luckchain007/Near-IDO-launchpad"*

'''--- .env ---

GENERATE_SOURCEMAP=false
'''
'''--- .vscode/settings.json ---
{
  "reactSnippets.settings.prettierEnabled": true
}
'''
'''--- README.md ---
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

'''
'''--- config-overrides.js ---
const NodePolyfillPlugin = require('node-polyfill-webpack-plugin')

module.exports = function override(config, env) {
  config.resolve = {
    fallback: {
      "fs": false,
      "tls": false,
      "net": false,
      "path": false,
      "zlib": false,
      "http": false,
      "https": false,
      "stream": false,
      "crypto": false,
      "crypto-browserify": require.resolve('crypto-browserify'),
    },
    extensions: [".ts", ".tsx", ".js", ".jsx"]
  }
  config.plugins.push(new NodePolyfillPlugin())
  return config
}
'''
'''--- package.json ---
{
  "name": "defi",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@chakra-ui/icons": "^2.0.17",
    "@chakra-ui/react": "^2.4.9",
    "@near-wallet-selector/coin98-wallet": "^7.8.0",
    "@near-wallet-selector/core": "^7.8.0",
    "@near-wallet-selector/default-wallets": "^7.8.0",
    "@near-wallet-selector/finer-wallet": "^7.8.0",
    "@near-wallet-selector/here-wallet": "^7.8.0",
    "@near-wallet-selector/ledger": "^7.8.0",
    "@near-wallet-selector/math-wallet": "^7.8.0",
    "@near-wallet-selector/meteor-wallet": "^7.8.0",
    "@near-wallet-selector/modal-ui": "^7.8.0",
    "@near-wallet-selector/my-near-wallet": "^7.8.0",
    "@near-wallet-selector/narwallets": "^7.8.0",
    "@near-wallet-selector/near-wallet": "^7.8.0",
    "@near-wallet-selector/nearfi": "^7.8.0",
    "@near-wallet-selector/neth": "^7.8.0",
    "@near-wallet-selector/nightly": "^7.8.0",
    "@near-wallet-selector/nightly-connect": "^7.8.0",
    "@near-wallet-selector/opto-wallet": "^7.8.0",
    "@near-wallet-selector/sender": "^7.8.0",
    "@near-wallet-selector/wallet-connect": "^7.8.0",
    "@near-wallet-selector/welldone-wallet": "^7.8.0",
    "@near-wallet-selector/xdefi": "^7.8.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.12",
    "@types/react": "^18.0.27",
    "@types/react-dom": "^18.0.10",
    "big.js": "^6.2.1",
    "bn.js": "^5.2.1",
    "bootstrap": "^5.2.3",
    "bs58": "^5.0.0",
    "formik": "^2.2.9",
    "near-api-js": "^1.1.0",
    "node-polyfill-webpack-plugin": "^2.0.1",
    "react": "^18.2.0",
    "react-app-rewired": "^2.2.1",
    "react-bootstrap": "^2.7.2",
    "react-cropper": "^2.1.8",
    "react-dom": "^18.2.0",
    "react-icons": "^4.7.1",
    "react-query": "^3.39.3",
    "react-router-dom": "^6.8.0",
    "react-scripts": "5.0.1",
    "react-singleton-hook": "^4.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4",
    "yup": "^1.0.2"
  },
  "scripts": {
    "start": "react-app-rewired start",
    "build": "react-app-rewired build",
    "test": "react-app-rewired test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@types/big.js": "^6.1.6",
    "@types/bn.js": "^5.1.1",
    "@types/bs58": "^4.0.1"
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

'''
'''--- public/manifest.json ---
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- src/App.css ---
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

'''
'''--- src/assets/img/dot_arrow.svg ---
<svg width="304" height="15" viewBox="0 0 304 15" fill="none" xmlns="http://www.w3.org/2000/svg">
	<path d="M302.854 7.85355C303.049 7.65829 303.049 7.34171 302.854 7.14645L299.672 3.96447C299.476 3.7692 299.16 3.7692 298.964 3.96447C298.769 4.15973 298.769 4.47631 298.964 4.67157L301.793 7.5L298.964 10.3284C298.769 10.5237 298.769 10.8403 298.964 11.0355C299.16 11.2308 299.476 11.2308 299.672 11.0355L302.854 7.85355ZM0.5 8H1.49342V7H0.5V8ZM3.48026 8H5.46711V7H3.48026V8ZM7.45395 8H9.44079V7H7.45395V8ZM11.4276 8H13.4145V7H11.4276V8ZM15.4013 8H17.3882V7H15.4013V8ZM19.375 8H21.3618V7H19.375V8ZM23.3487 8H25.3355V7H23.3487V8ZM27.3224 8H29.3092V7H27.3224V8ZM31.2961 8H33.2829V7H31.2961V8ZM35.2697 8H37.2566V7H35.2697V8ZM39.2434 8H41.2303V7H39.2434V8ZM43.2171 8H45.204V7H43.2171V8ZM47.1908 8H49.1776V7H47.1908V8ZM51.1645 8H53.1513V7H51.1645V8ZM55.1382 8H57.125V7H55.1382V8ZM59.1119 8H61.0987V7H59.1119V8ZM63.0855 8H65.0724V7H63.0855V8ZM67.0592 8H69.0461V7H67.0592V8ZM71.0329 8H73.0197V7H71.0329V8ZM75.0066 8H76.9934V7H75.0066V8ZM78.9803 8H80.9671V7H78.9803V8ZM82.9539 8H84.9408V7H82.9539V8ZM86.9276 8H88.9145V7H86.9276V8ZM90.9013 8H92.8881V7H90.9013V8ZM94.875 8H96.8618V7H94.875V8ZM98.8487 8H100.835V7H98.8487V8ZM102.822 8H104.809V7H102.822V8ZM106.796 8H108.783V7H106.796V8ZM110.77 8H112.757V7H110.77V8ZM114.743 8H116.73V7H114.743V8ZM118.717 8H120.704V7H118.717V8ZM122.691 8H124.678V7H122.691V8ZM126.664 8H128.651V7H126.664V8ZM130.638 8H132.625V7H130.638V8ZM134.612 8H136.599V7H134.612V8ZM138.585 8H140.572V7H138.585V8ZM142.559 8H144.546V7H142.559V8ZM146.533 8H148.52V7H146.533V8ZM150.507 8H152.493V7H150.507V8ZM154.48 8H156.467V7H154.48V8ZM158.454 8H160.441V7H158.454V8ZM162.428 8H164.414V7H162.428V8ZM166.401 8H168.388V7H166.401V8ZM170.375 8H172.362V7H170.375V8ZM174.349 8H176.336V7H174.349V8ZM178.322 8H180.309V7H178.322V8ZM182.296 8H184.283V7H182.296V8ZM186.27 8H188.257V7H186.27V8ZM190.243 8H192.23V7H190.243V8ZM194.217 8H196.204V7H194.217V8ZM198.191 8H200.178V7H198.191V8ZM202.165 8H204.151V7H202.165V8ZM206.138 8H208.125V7H206.138V8ZM210.112 8H212.099V7H210.112V8ZM214.086 8H216.073V7H214.086V8ZM218.059 8H220.046V7H218.059V8ZM222.033 8H224.02V7H222.033V8ZM226.007 8H227.994V7H226.007V8ZM229.98 8H231.967V7H229.98V8ZM233.954 8H235.941V7H233.954V8ZM237.928 8H239.915V7H237.928V8ZM241.902 8H243.888V7H241.902V8ZM245.875 8H247.862V7H245.875V8ZM249.849 8H251.836V7H249.849V8ZM253.823 8H255.809V7H253.823V8ZM257.796 8H259.783V7H257.796V8ZM261.77 8H263.757V7H261.77V8ZM265.744 8H267.731V7H265.744V8ZM269.717 8H271.704V7H269.717V8ZM273.691 8H275.678V7H273.691V8ZM277.665 8H279.652V7H277.665V8ZM281.638 8H283.625V7H281.638V8ZM285.612 8H287.599V7H285.612V8ZM289.586 8H291.573V7H289.586V8ZM293.56 8H295.546V7H293.56V8ZM297.533 8H299.52V7H297.533V8ZM301.507 8H302.5V7H301.507V8ZM303.207 8.20711C303.598 7.81658 303.598 7.18342 303.207 6.79289L296.843 0.428932C296.453 0.0384078 295.819 0.0384078 295.429 0.428932C295.038 0.819457 295.038 1.45262 295.429 1.84315L301.086 7.5L295.429 13.1569C295.038 13.5474 295.038 14.1805 295.429 14.5711C295.819 14.9616 296.453 14.9616 296.843 14.5711L303.207 8.20711ZM0.5 8.5H1.49342V6.5H0.5V8.5ZM3.48026 8.5H5.46711V6.5H3.48026V8.5ZM7.45395 8.5H9.44079V6.5H7.45395V8.5ZM11.4276 8.5H13.4145V6.5H11.4276V8.5ZM15.4013 8.5H17.3882V6.5H15.4013V8.5ZM19.375 8.5H21.3618V6.5H19.375V8.5ZM23.3487 8.5H25.3355V6.5H23.3487V8.5ZM27.3224 8.5H29.3092V6.5H27.3224V8.5ZM31.2961 8.5H33.2829V6.5H31.2961V8.5ZM35.2697 8.5H37.2566V6.5H35.2697V8.5ZM39.2434 8.5H41.2303V6.5H39.2434V8.5ZM43.2171 8.5H45.204V6.5H43.2171V8.5ZM47.1908 8.5H49.1776V6.5H47.1908V8.5ZM51.1645 8.5H53.1513V6.5H51.1645V8.5ZM55.1382 8.5H57.125V6.5H55.1382V8.5ZM59.1119 8.5H61.0987V6.5H59.1119V8.5ZM63.0855 8.5H65.0724V6.5H63.0855V8.5ZM67.0592 8.5H69.0461V6.5H67.0592V8.5ZM71.0329 8.5H73.0197V6.5H71.0329V8.5ZM75.0066 8.5H76.9934V6.5H75.0066V8.5ZM78.9803 8.5H80.9671V6.5H78.9803V8.5ZM82.9539 8.5H84.9408V6.5H82.9539V8.5ZM86.9276 8.5H88.9145V6.5H86.9276V8.5ZM90.9013 8.5H92.8881V6.5H90.9013V8.5ZM94.875 8.5H96.8618V6.5H94.875V8.5ZM98.8487 8.5H100.835V6.5H98.8487V8.5ZM102.822 8.5H104.809V6.5H102.822V8.5ZM106.796 8.5H108.783V6.5H106.796V8.5ZM110.77 8.5H112.757V6.5H110.77V8.5ZM114.743 8.5H116.73V6.5H114.743V8.5ZM118.717 8.5H120.704V6.5H118.717V8.5ZM122.691 8.5H124.678V6.5H122.691V8.5ZM126.664 8.5H128.651V6.5H126.664V8.5ZM130.638 8.5H132.625V6.5H130.638V8.5ZM134.612 8.5H136.599V6.5H134.612V8.5ZM138.585 8.5H140.572V6.5H138.585V8.5ZM142.559 8.5H144.546V6.5H142.559V8.5ZM146.533 8.5H148.52V6.5H146.533V8.5ZM150.507 8.5H152.493V6.5H150.507V8.5ZM154.48 8.5H156.467V6.5H154.48V8.5ZM158.454 8.5H160.441V6.5H158.454V8.5ZM162.428 8.5H164.414V6.5H162.428V8.5ZM166.401 8.5H168.388V6.5H166.401V8.5ZM170.375 8.5H172.362V6.5H170.375V8.5ZM174.349 8.5H176.336V6.5H174.349V8.5ZM178.322 8.5H180.309V6.5H178.322V8.5ZM182.296 8.5H184.283V6.5H182.296V8.5ZM186.27 8.5H188.257V6.5H186.27V8.5ZM190.243 8.5H192.23V6.5H190.243V8.5ZM194.217 8.5H196.204V6.5H194.217V8.5ZM198.191 8.5H200.178V6.5H198.191V8.5ZM202.165 8.5H204.151V6.5H202.165V8.5ZM206.138 8.5H208.125V6.5H206.138V8.5ZM210.112 8.5H212.099V6.5H210.112V8.5ZM214.086 8.5H216.073V6.5H214.086V8.5ZM218.059 8.5H220.046V6.5H218.059V8.5ZM222.033 8.5H224.02V6.5H222.033V8.5ZM226.007 8.5H227.994V6.5H226.007V8.5ZM229.98 8.5H231.967V6.5H229.98V8.5ZM233.954 8.5H235.941V6.5H233.954V8.5ZM237.928 8.5H239.915V6.5H237.928V8.5ZM241.902 8.5H243.888V6.5H241.902V8.5ZM245.875 8.5H247.862V6.5H245.875V8.5ZM249.849 8.5H251.836V6.5H249.849V8.5ZM253.823 8.5H255.809V6.5H253.823V8.5ZM257.796 8.5H259.783V6.5H257.796V8.5ZM261.77 8.5H263.757V6.5H261.77V8.5ZM265.744 8.5H267.731V6.5H265.744V8.5ZM269.717 8.5H271.704V6.5H269.717V8.5ZM273.691 8.5H275.678V6.5H273.691V8.5ZM277.665 8.5H279.652V6.5H277.665V8.5ZM281.638 8.5H283.625V6.5H281.638V8.5ZM285.612 8.5H287.599V6.5H285.612V8.5ZM289.586 8.5H291.573V6.5H289.586V8.5ZM293.56 8.5H295.546V6.5H293.56V8.5ZM297.533 8.5H299.52V6.5H297.533V8.5ZM301.507 8.5H302.5V6.5H301.507V8.5Z" fill="#26A17B" />
</svg>

'''
'''--- src/assets/img/icons/arrow-down.svg ---
<svg width="16" height="16" viewBox="0 0 16 16" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <path d="M7.99941 14.1667C7.87274 14.1667 7.74608 14.1201 7.64608 14.0201L3.59944 9.9734C3.4061 9.78007 3.4061 9.46007 3.59944 9.26673C3.79277 9.0734 4.11277 9.0734 4.3061 9.26673L7.99941 12.9601L11.6927 9.26673C11.8861 9.0734 12.2061 9.0734 12.3994 9.26673C12.5927 9.46007 12.5927 9.78007 12.3994 9.9734L8.35274 14.0201C8.25274 14.1201 8.12608 14.1667 7.99941 14.1667Z" fill="#292D32"/>
  <path d="M8 14.0533C7.72667 14.0533 7.5 13.8267 7.5 13.5533V2.33333C7.5 2.06 7.72667 1.83333 8 1.83333C8.27333 1.83333 8.5 2.06 8.5 2.33333V13.5533C8.5 13.8267 8.27333 14.0533 8 14.0533Z" fill="#292D32"/>
</svg>

'''
'''--- src/assets/img/icons/arrow-green-short.svg ---
<svg width="161" height="15" viewBox="0 0 161 15" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M159.854 7.85355C160.049 7.65829 160.049 7.34171 159.854 7.14645L156.672 3.96447C156.476 3.7692 156.16 3.7692 155.964 3.96447C155.769 4.15973 155.769 4.47631 155.964 4.67157L158.793 7.5L155.964 10.3284C155.769 10.5237 155.769 10.8403 155.964 11.0355C156.16 11.2308 156.476 11.2308 156.672 11.0355L159.854 7.85355ZM0.5 8H1.49375V7H0.5V8ZM3.48125 8H5.46875V7H3.48125V8ZM7.45625 8H9.44375V7H7.45625V8ZM11.4313 8H13.4188V7H11.4313V8ZM15.4063 8H17.3938V7H15.4063V8ZM19.3813 8H21.3687V7H19.3813V8ZM23.3562 8H25.3437V7H23.3562V8ZM27.3312 8H29.3187V7H27.3312V8ZM31.3062 8H33.2937V7H31.3062V8ZM35.2812 8H37.2687V7H35.2812V8ZM39.2562 8H41.2437V7H39.2562V8ZM43.2312 8H45.2187V7H43.2312V8ZM47.2062 8H49.1937V7H47.2062V8ZM51.1812 8H53.1687V7H51.1812V8ZM55.1562 8H57.1437V7H55.1562V8ZM59.1312 8H61.1187V7H59.1312V8ZM63.1062 8H65.0937V7H63.1062V8ZM67.0812 8H69.0687V7H67.0812V8ZM71.0562 8H73.0437V7H71.0562V8ZM75.0312 8H77.0188V7H75.0312V8ZM79.0063 8H80.9938V7H79.0063V8ZM82.9813 8H84.9688V7H82.9813V8ZM86.9563 8H88.9438V7H86.9563V8ZM90.9313 8H92.9188V7H90.9313V8ZM94.9063 8H96.8938V7H94.9063V8ZM98.8813 8H100.869V7H98.8813V8ZM102.856 8H104.844V7H102.856V8ZM106.831 8H108.819V7H106.831V8ZM110.806 8H112.794V7H110.806V8ZM114.781 8H116.769V7H114.781V8ZM118.756 8H120.744V7H118.756V8ZM122.731 8H124.719V7H122.731V8ZM126.706 8H128.694V7H126.706V8ZM130.681 8H132.669V7H130.681V8ZM134.656 8H136.644V7H134.656V8ZM138.631 8H140.619V7H138.631V8ZM142.606 8H144.594V7H142.606V8ZM146.581 8H148.569V7H146.581V8ZM150.556 8H152.544V7H150.556V8ZM154.531 8H156.519V7H154.531V8ZM158.506 8H159.5V7H158.506V8ZM160.207 8.20711C160.598 7.81658 160.598 7.18342 160.207 6.79289L153.843 0.428932C153.453 0.0384078 152.819 0.0384078 152.429 0.428932C152.038 0.819457 152.038 1.45262 152.429 1.84315L158.086 7.5L152.429 13.1569C152.038 13.5474 152.038 14.1805 152.429 14.5711C152.819 14.9616 153.453 14.9616 153.843 14.5711L160.207 8.20711ZM0.5 8.5H1.49375V6.5H0.5V8.5ZM3.48125 8.5H5.46875V6.5H3.48125V8.5ZM7.45625 8.5H9.44375V6.5H7.45625V8.5ZM11.4313 8.5H13.4188V6.5H11.4313V8.5ZM15.4063 8.5H17.3938V6.5H15.4063V8.5ZM19.3813 8.5H21.3687V6.5H19.3813V8.5ZM23.3562 8.5H25.3437V6.5H23.3562V8.5ZM27.3312 8.5H29.3187V6.5H27.3312V8.5ZM31.3062 8.5H33.2937V6.5H31.3062V8.5ZM35.2812 8.5H37.2687V6.5H35.2812V8.5ZM39.2562 8.5H41.2437V6.5H39.2562V8.5ZM43.2312 8.5H45.2187V6.5H43.2312V8.5ZM47.2062 8.5H49.1937V6.5H47.2062V8.5ZM51.1812 8.5H53.1687V6.5H51.1812V8.5ZM55.1562 8.5H57.1437V6.5H55.1562V8.5ZM59.1312 8.5H61.1187V6.5H59.1312V8.5ZM63.1062 8.5H65.0937V6.5H63.1062V8.5ZM67.0812 8.5H69.0687V6.5H67.0812V8.5ZM71.0562 8.5H73.0437V6.5H71.0562V8.5ZM75.0312 8.5H77.0188V6.5H75.0312V8.5ZM79.0063 8.5H80.9938V6.5H79.0063V8.5ZM82.9813 8.5H84.9688V6.5H82.9813V8.5ZM86.9563 8.5H88.9438V6.5H86.9563V8.5ZM90.9313 8.5H92.9188V6.5H90.9313V8.5ZM94.9063 8.5H96.8938V6.5H94.9063V8.5ZM98.8813 8.5H100.869V6.5H98.8813V8.5ZM102.856 8.5H104.844V6.5H102.856V8.5ZM106.831 8.5H108.819V6.5H106.831V8.5ZM110.806 8.5H112.794V6.5H110.806V8.5ZM114.781 8.5H116.769V6.5H114.781V8.5ZM118.756 8.5H120.744V6.5H118.756V8.5ZM122.731 8.5H124.719V6.5H122.731V8.5ZM126.706 8.5H128.694V6.5H126.706V8.5ZM130.681 8.5H132.669V6.5H130.681V8.5ZM134.656 8.5H136.644V6.5H134.656V8.5ZM138.631 8.5H140.619V6.5H138.631V8.5ZM142.606 8.5H144.594V6.5H142.606V8.5ZM146.581 8.5H148.569V6.5H146.581V8.5ZM150.556 8.5H152.544V6.5H150.556V8.5ZM154.531 8.5H156.519V6.5H154.531V8.5ZM158.506 8.5H159.5V6.5H158.506V8.5Z" fill="#26A17B"/>
</svg>

'''
'''--- src/assets/img/icons/arrow-green.svg ---
<svg width="249" height="16" viewBox="0 0 249 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.646454 7.64645C0.451187 7.84171 0.451187 8.15829 0.646454 8.35355L3.82843 11.5355C4.0237 11.7308 4.34027 11.7308 4.53554 11.5355C4.73079 11.3403 4.73079 11.0237 4.53554 10.8284L1.70711 8L4.53554 5.17157C4.73079 4.97631 4.73079 4.65973 4.53554 4.46447C4.34027 4.2692 4.0237 4.2692 3.82843 4.46447L0.646454 7.64645ZM249 7.5H248V8.5H249V7.5ZM246 7.5L244 7.5V8.5H246V7.5ZM242 7.5H240V8.5L242 8.5V7.5ZM238 7.5H236V8.5H238V7.5ZM234 7.5H232V8.5H234V7.5ZM230 7.5H228V8.5H230V7.5ZM226 7.5H224V8.5H226V7.5ZM222 7.5H220V8.5H222V7.5ZM218 7.5L216 7.5V8.5H218V7.5ZM214 7.5H212V8.5L214 8.5V7.5ZM210 7.5L208 7.5V8.5H210V7.5ZM206 7.5H204V8.5H206V7.5ZM202 7.5L200 7.5V8.5H202V7.5ZM198 7.5H196V8.5H198V7.5ZM194 7.5H192V8.5H194V7.5ZM190 7.5H188V8.5H190V7.5ZM186 7.5H184V8.5H186V7.5ZM182 7.5L180 7.5V8.5H182V7.5ZM178 7.5H176V8.5H178V7.5ZM174 7.5L172 7.5V8.5H174V7.5ZM170 7.5H168V8.5L170 8.5V7.5ZM166 7.5L164 7.5V8.5H166V7.5ZM162 7.5H160V8.5H162V7.5ZM158 7.5H156V8.5H158V7.5ZM154 7.5H152V8.5H154V7.5ZM150 7.5H148V8.5H150V7.5ZM146 7.5H144V8.5H146V7.5ZM142 7.5H140V8.5L142 8.5V7.5ZM138 7.5L136 7.5V8.5H138V7.5ZM134 7.5H132V8.5H134V7.5ZM130 7.5L128 7.5V8.5H130V7.5ZM126 7.5H124V8.5L126 8.5V7.5ZM122 7.5H120V8.5H122V7.5ZM118 7.5H116V8.5H118V7.5ZM114 7.5H112V8.5H114V7.5ZM110 7.5H108V8.5H110V7.5ZM106 7.5H104V8.5H106V7.5ZM102 7.5L100 7.5V8.5H102V7.5ZM98 7.5H96V8.5L98 8.5V7.5ZM94 7.5L92 7.5V8.5H94V7.5ZM90 7.5H88V8.5H90V7.5ZM86 7.5L84 7.5V8.5H86V7.5ZM82 7.5H80V8.5H82V7.5ZM78 7.5H76V8.5H78V7.5ZM74 7.5H72V8.5H74V7.5ZM70 7.5H68V8.5H70V7.5ZM66 7.5L64 7.5V8.5H66V7.5ZM62 7.5H60V8.5H62V7.5ZM58 7.5L56 7.5V8.5H58V7.5ZM54 7.5H52V8.5L54 8.5V7.5ZM50 7.5L48 7.5V8.5H50V7.5ZM46 7.5H44V8.5H46V7.5ZM42 7.5H40V8.5H42V7.5ZM38 7.5H36V8.5H38V7.5ZM34 7.5H32V8.5H34V7.5ZM30 7.5H28V8.5H30V7.5ZM26 7.5H24V8.5L26 8.5V7.5ZM22 7.5L20 7.5V8.5H22V7.5ZM18 7.5H16V8.5H18V7.5ZM14 7.5L12 7.5V8.5H14V7.5ZM10 7.5H8V8.5L10 8.5V7.5ZM6 7.5H4V8.5H6V7.5ZM2 7.5H1V8.5H2V7.5ZM0.292892 7.29289C-0.0976257 7.68342 -0.0976257 8.31658 0.292892 8.70711L6.65686 15.0711C7.04738 15.4616 7.68054 15.4616 8.07108 15.0711C8.46159 14.6805 8.46159 14.0474 8.07108 13.6569L2.41422 8L8.07108 2.34315C8.46159 1.95262 8.46159 1.31946 8.07108 0.928932C7.68054 0.538408 7.04738 0.538408 6.65686 0.928932L0.292892 7.29289ZM249 7H248V9H249V7ZM246 7L244 7V9H246V7ZM242 7H240V9L242 9V7ZM238 7H236V9H238V7ZM234 7H232V9H234V7ZM230 7H228V9L230 9V7ZM226 7L224 7V9H226V7ZM222 7H220V9H222V7ZM218 7H216V9H218V7ZM214 7H212V9H214V7ZM210 7L208 7V9H210V7ZM206 7H204V9H206V7ZM202 7L200 7V9H202V7ZM198 7H196V9H198V7ZM194 7H192V9H194V7ZM190 7H188V9H190V7ZM186 7H184V9H186V7ZM182 7L180 7V9H182V7ZM178 7H176V9H178V7ZM174 7L172 7V9H174V7ZM170 7H168V9H170V7ZM166 7H164V9H166V7ZM162 7H160V9H162V7ZM158 7L156 7V9H158V7ZM154 7H152V9L154 9V7ZM150 7H148V9H150V7ZM146 7H144V9H146V7ZM142 7H140V9L142 9V7ZM138 7L136 7V9H138V7ZM134 7H132V9H134V7ZM130 7L128 7V9H130V7ZM126 7H124V9L126 9V7ZM122 7H120V9H122V7ZM118 7H116V9H118V7ZM114 7H112V9L114 9V7ZM110 7L108 7V9H110V7ZM106 7H104V9H106V7ZM102 7H100V9H102V7ZM98 7H96V9H98V7ZM94 7L92 7V9H94V7ZM90 7H88V9H90V7ZM86 7L84 7V9H86V7ZM82 7H80V9H82V7ZM78 7H76V9H78V7ZM74 7H72V9H74V7ZM70 7H68V9H70V7ZM66 7L64 7V9H66V7ZM62 7H60V9H62V7ZM58 7L56 7V9H58V7ZM54 7H52V9H54V7ZM50 7H48V9H50V7ZM46 7H44V9H46V7ZM42 7L40 7V9H42V7ZM38 7H36V9L38 9V7ZM34 7H32V9H34V7ZM30 7H28V9H30V7ZM26 7H24V9L26 9V7ZM22 7L20 7V9H22V7ZM18 7H16V9H18V7ZM14 7L12 7V9H14V7ZM10 7H8V9L10 9V7ZM6 7H4V9H6V7ZM2 7H1V9H2V7Z" fill="#26A17B"/>
</svg>

'''
'''--- src/assets/img/icons/chop.svg ---
<svg width="31" height="27" viewBox="0 0 31 27" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M25.905 7.72857L18.6443 8.96242L19.2249 7.64062L25.905 7.72857Z" fill="#E30613"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M19.2249 7.64025L15.5743 6.61426L18.6444 8.96205L19.2249 7.64025Z" fill="#D20A11"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M18.6444 8.96205L16.4924 12.1226L15.5743 6.61426L18.6444 8.96205Z" fill="#AE0F0A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M15.5743 6.61426L13.2846 7.46703L16.4923 12.1226L15.5743 6.61426Z" fill="#9C1006"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M13.2846 7.4668L10.8464 12.3196L16.4924 12.1224L13.2846 7.4668Z" fill="#C00D0D"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.8464 12.3202L21.3742 11.9258L10.1498 17.5088L10.8464 12.3202Z" fill="#AE0F0A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M21.3742 11.9258L31.0001 16.4295L10.1498 17.5088L21.3742 11.9258Z" fill="#D20A11"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.8465 12.3203L5.27612 16.4163L10.1498 17.5089L10.8465 12.3203Z" fill="#D20A11"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M14.7291 17.2715L8.77539 20.7146L10.1497 17.5087L14.7291 17.2715Z" fill="#9C1006"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.1498 17.5086L8.77547 20.7145L5.27612 16.416L10.1498 17.5086Z" fill="#AE0F0A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M8.77542 20.7145L3.76941 19.0383L5.27607 16.416L8.77542 20.7145Z" fill="#D20A11"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M3.76936 19.0381L0 24.6291L2.96742 26.0681L3.76936 19.0381Z" fill="#E30613"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.96741 26.0681L5.78633 19.7123L3.76934 19.0381L2.96741 26.0681Z" fill="#C00D0D"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.96741 26.0687L4.47407 26.2313L6.27235 19.8781L5.78633 19.7129L2.96741 26.0687Z" fill="#9C1006"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M8.56201 4.73289L2.65686 0L5.27597 16.4159L8.56201 4.73289Z" fill="#E30613"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.27612 16.4164L10.8465 12.3204L8.56216 4.7334L5.27612 16.4164Z" fill="#C00D0D"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M8.56213 4.7334L11.5971 10.8307L10.8464 12.3204L8.56213 4.7334Z" fill="#AE0F0A"/>
</svg>

'''
'''--- src/assets/img/icons/chr.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M-6.62737e-06 9.73757C-7.0272e-06 5.20523 2.96483 1.35912 7.07737 1.644e-05C6.91632 1.09533 6.82791 2.28766 6.82791 3.535C6.82791 8.89137 8.4583 13.2336 10.4695 13.2336C12.4807 13.2336 14.1111 8.89136 14.1111 3.53499C14.1111 2.31888 14.027 1.15503 13.8736 0.0824209C17.8612 1.50951 20.7115 5.29368 20.7115 9.73757C20.7115 10.0379 20.6984 10.3353 20.6729 10.6291C20.259 10.563 19.8121 10.527 19.3458 10.527C17.209 10.527 15.4767 11.2843 15.4767 12.2186C15.4767 13.1528 17.209 13.9102 19.3458 13.9102C19.5082 13.9102 19.6683 13.9058 19.8254 13.8973C18.2149 17.4925 14.5808 20 10.3557 20C6.1354 20 2.50472 17.4982 0.891475 13.9095C0.935546 13.91 0.979783 13.9102 1.02417 13.9102C3.4753 13.9102 5.46234 13.1528 5.46234 12.2186C5.46234 11.2843 3.4753 10.527 1.02417 10.527C0.683631 10.527 0.352048 10.5416 0.0335113 10.5693C0.0113097 10.2949 -6.60267e-06 10.0176 -6.62737e-06 9.73757ZM10.3557 15.0379C9.41295 15.0379 8.64871 15.7953 8.64871 16.7296C8.64871 17.6638 9.41295 18.4212 10.3557 18.4212C11.2984 18.4212 12.0627 17.6638 12.0627 16.7296C12.0627 15.7953 11.2984 15.0379 10.3557 15.0379Z" fill="url(#paint0_linear_203_45)"/>
  <defs>
    <linearGradient id="paint0_linear_203_45" x1="20.4467" y1="19.7376" x2="0.391035" y2="5.06506" gradientUnits="userSpaceOnUse">
      <stop stop-color="#993FF4"/>
      <stop offset="0.5" stop-color="#D5B5FF"/>
      <stop offset="1" stop-color="#993FF4"/>
    </linearGradient>
  </defs>
</svg>

'''
'''--- src/assets/img/icons/disc.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_203_116)">
    <path d="M6.66937 2.63938V17.5441C6.66937 17.5441 9.75088 16.7678 11.458 13.451C11.458 13.451 13.2953 10.3176 11.3278 6.43613C11.3278 6.43613 9.86662 3.48624 6.66937 2.63938Z" fill="#EA7D18"/>
    <path d="M15.2918 1.32675C19.7911 3.90967 20.283 8.15808 20.283 8.15808C21.2089 13.5074 17.8236 16.669 17.8236 16.669C13.2809 21.5385 7.20467 19.5342 7.20467 19.5342C11.6316 18.2216 13.2664 14.5801 13.2664 14.5801C15.668 9.56951 13.2664 5.65985 13.2664 5.65985C11.1397 1.36909 6.84299 0.55046 6.84299 0.55046C11.5304 -1.04446 15.2918 1.32675 15.2918 1.32675ZM16.3045 2.9499C16.3045 2.9499 16.073 5.36345 13.7004 5.36345C13.7004 5.36345 16.0152 5.75865 16.2322 8.01694C16.2322 8.01694 16.4347 5.54693 18.8652 5.43402C18.8507 5.43402 16.1888 5.2223 16.3045 2.9499ZM3.70361 2.24418H4.55717V17.8829H3.90615C3.90615 17.8829 1.15738 15.808 0.318286 12.59C0.318286 12.59 -0.795687 8.89203 1.04165 5.47636C1.05611 5.49047 2.41603 3.07692 3.70361 2.24418Z" fill="#EA7D18"/>
  </g>
  <defs>
    <clipPath id="clip0_203_116">
      <rect width="20.5" height="20" fill="white"/>
    </clipPath>
  </defs>
</svg>

'''
'''--- src/assets/img/icons/divis.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_238_5427)">
<path d="M20.5259 16.8865C19.5272 18.5899 18.326 19.9684 16.6358 19.9684H4.92629C3.23609 19.9684 1.69955 18.588 1.49156 16.8865L0.0543312 5.08595C-0.15179 3.38261 1.04933 2.00219 2.58962 0.78418H14.2992C16.1374 2.00219 17.6739 3.38261 19.0887 5.08595L20.5259 16.8865Z" fill="url(#paint0_linear_238_5427)"/>
<path d="M16.6359 20.0004H4.9263C3.22486 20.0004 1.66958 18.6048 1.45971 16.8902L0.0243611 5.0896C-0.204246 3.21631 1.26484 1.79246 2.57089 0.759507C2.57652 0.75573 2.58401 0.751953 2.58963 0.751953H14.2992C14.3048 0.751953 14.3123 0.753842 14.3161 0.757618C16.1674 1.98508 17.6908 3.35416 19.1112 5.06505C19.1149 5.07071 19.1168 5.07638 19.1187 5.08204L20.5559 16.8826C20.5559 16.8902 20.5559 16.8958 20.5522 16.9034C19.7071 18.3442 18.4966 20.0004 16.6359 20.0004ZM2.60088 0.816159C0.687696 2.33065 -0.0880686 3.64686 0.0861974 5.08204L1.52342 16.8826C1.72767 18.5671 3.25484 19.9381 4.9263 19.9381H16.6359C18.06 19.9381 19.2498 18.9957 20.4922 16.8807L19.0587 5.09904C17.6458 3.3976 16.1299 2.03606 14.2898 0.816159H2.60088Z" fill="black"/>
<path d="M20.8839 15.0671C21.0919 16.7686 19.8908 18.1282 18.2006 18.1282H6.49101C4.80081 18.1282 3.26427 16.7686 3.05628 15.0671L1.61905 3.26845C1.41106 1.56701 2.61218 0.188477 4.30237 0.188477H16.0119C17.7021 0.188477 19.2387 1.56701 19.4467 3.26845L20.8839 15.0671Z" fill="url(#paint1_linear_238_5427)"/>
<path d="M18.2005 18.1286H6.49099C4.72397 18.1286 3.17431 16.769 2.96257 15.0316L1.52535 3.21027C1.42041 2.34916 1.65839 1.53904 2.1943 0.929091C2.71897 0.330469 3.46851 0 4.30236 0H16.0119C17.7433 0 19.3248 1.42952 19.5403 3.18761L20.9776 15.009C21.0787 15.8436 20.8539 16.6254 20.3442 17.2071C19.8214 17.8019 19.0606 18.1286 18.2005 18.1286ZM4.30236 0.18884C3.52285 0.18884 2.82391 0.49476 2.33484 1.05372C1.83453 1.62402 1.61342 2.38127 1.71273 3.18761L3.14995 15.009C3.35045 16.6519 4.81766 17.9398 6.49099 17.9398H18.2005C19.0063 17.9398 19.7165 17.6357 20.2018 17.0824C20.6759 16.5405 20.8857 15.8134 20.7902 15.0316L19.353 3.21027C19.1506 1.54471 17.6515 0.18884 16.0119 0.18884H4.30236Z" fill="black"/>
<path opacity="0.3" d="M3.79827 15.067L2.35917 3.26646C2.26547 2.49033 2.47534 1.76329 2.95317 1.21944C3.42537 0.681244 4.1037 0.384766 4.86447 0.384766H4.30045C3.53968 0.384766 2.85948 0.681244 2.38727 1.21944C1.91132 1.76329 1.70145 2.49033 1.79514 3.26646L3.23237 15.067C3.42912 16.6797 4.89071 17.9922 6.49096 17.9922H7.05498C5.4566 17.9922 3.99502 16.6797 3.79827 15.067Z" fill="white"/>
<path opacity="0.1" d="M2.00126 8.07007L0.92006 10.7573L0.558411 7.73016L1.63961 5.04297L2.00126 8.07007Z" fill="white"/>
<path d="M16.456 3.77721C14.8426 4.49291 7.92445 7.55966 6.01127 8.39433C4.72395 8.92875 5.59154 9.43106 5.59154 9.43106C5.59154 9.43106 6.80952 9.83329 7.84763 10.1335C8.88573 10.4357 9.37105 10.0996 9.37105 10.0996L13.6096 6.92139C15.1106 5.78457 14.8445 6.72122 14.5016 7.12156C13.7596 7.99211 12.5228 9.36308 11.4829 10.4678C11.0163 10.9361 11.3386 11.3383 11.599 11.5385C12.5641 12.275 15.1331 13.78 15.2792 13.8801C16.0512 14.3805 17.5297 15.1 17.5278 13.5799L17.6253 8.32635C17.644 6.55315 17.6796 4.91402 17.6478 4.4457C17.584 3.30888 16.456 3.77721 16.456 3.77721Z" fill="white"/>
</g>
<defs>
<linearGradient id="paint0_linear_238_5427" x1="1.16062" y1="17.3069" x2="17.9029" y2="3.63435" gradientUnits="userSpaceOnUse">
<stop stop-color="#006EAC"/>
<stop offset="1" stop-color="#41B4F2"/>
</linearGradient>
<linearGradient id="paint1_linear_238_5427" x1="2.00287" y1="11.4364" x2="20.3353" y2="6.31145" gradientUnits="userSpaceOnUse">
<stop stop-color="#006EAC"/>
<stop offset="1" stop-color="#41B4F2"/>
</linearGradient>
<clipPath id="clip0_238_5427">
<rect width="21" height="20" fill="white"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/assets/img/icons/info.svg ---
<svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
	<g clip-path="url(#clip0_639_13)">
		<path d="M17.5 35C27.165 35 35 27.165 35 17.5C35 7.83502 27.165 0 17.5 0C7.83502 0 0 7.83502 0 17.5C0 27.165 7.83502 35 17.5 35Z" fill="#ACACAC" />
		<path d="M17.4998 32.6359C13.4541 32.6359 9.65825 31.0621 6.79449 28.2051C3.93749 25.3414 2.36377 21.5456 2.36377 17.4998C2.36377 13.4541 3.93749 9.65825 6.79449 6.79449C9.65825 3.93749 13.4541 2.36377 17.4998 2.36377C21.5456 2.36377 25.3414 3.93749 28.2051 6.79449C31.0621 9.6515 32.6359 13.4541 32.6359 17.4998C32.6359 21.5456 31.0621 25.3414 28.2051 28.2051C25.3414 31.0621 21.5456 32.6359 17.4998 32.6359ZM17.4998 3.7146C9.9014 3.7146 3.7146 9.9014 3.7146 17.4998C3.7146 25.0982 9.9014 31.285 17.4998 31.285C25.0982 31.285 31.285 25.0982 31.285 17.4998C31.285 9.9014 25.0982 3.7146 17.4998 3.7146Z" fill="white" />
		<path d="M16.9865 12.7921C17.5876 12.7921 18.1145 12.576 18.5535 12.1437C18.9857 11.7115 19.2019 11.1914 19.2019 10.5903C19.2019 9.94863 18.9857 9.41506 18.5535 8.9963C18.1077 8.57754 17.5876 8.36816 16.9865 8.36816C16.3719 8.36816 15.8586 8.5843 15.4331 9.01656C15.0008 9.44883 14.7847 9.97565 14.7847 10.5835C14.7847 11.1982 15.0008 11.7115 15.4331 12.137C15.8653 12.5692 16.3854 12.7921 16.9865 12.7921Z" fill="white" />
		<path d="M21.7214 23.3892H20.2625C20.2625 23.3892 19.5533 23.4027 19.5263 22.7408C19.4588 21.8695 19.398 21.1603 19.3912 20.9509L19.3034 18.8301C19.2967 18.7018 19.2899 18.5329 19.2899 18.3235C19.2899 17.8575 19.2832 17.4928 19.2764 17.2226C19.2697 17.1281 19.2629 17.02 19.2629 16.8984L19.2967 15.9934V13.8726C17.2029 14.8654 15.3523 15.4868 13.7313 15.757L13.4071 17.2631C13.6975 17.3172 13.9879 17.3509 14.2783 17.3509C14.6633 17.3509 15.0281 17.2834 15.3658 17.1483L15.413 20.1742C15.413 20.9171 15.4333 21.856 15.4536 22.7948C15.4671 23.4027 14.8592 23.3959 14.8592 23.3959H13.272V26.6447H15.4468C15.4536 26.6447 15.4603 26.6447 15.4603 26.6447H21.7147V23.3892H21.7214Z" fill="white" />
	</g>
	<defs>
		<clipPath id="clip0_639_13">
			<rect width="35" height="35" fill="white" />
		</clipPath>
	</defs>
</svg>

'''
'''--- src/assets/img/icons/kung.svg ---
<svg width="19" height="24" viewBox="0 0 19 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g opacity="0.2">
<path d="M9.21142 23.9996C13.0524 23.9996 16.1661 23.529 16.1661 22.9485C16.1661 22.368 13.0524 21.8975 9.21142 21.8975C5.37047 21.8975 2.25677 22.368 2.25677 22.9485C2.25677 23.529 5.37047 23.9996 9.21142 23.9996Z" fill="#3D1D55"/>
</g>
<path d="M12.6904 21.5449C12.7929 21.5449 14.0055 21.9646 13.9383 22.909C13.9383 22.909 13.6696 23.0204 13.375 22.7277C13.375 22.7277 13.3758 22.743 13.3758 22.7689C13.3747 22.8673 13.3573 23.1191 13.2153 23.2302C13.0359 23.3698 11.7113 22.5052 11.7113 22.5052C11.7113 22.5052 11.1419 23.1981 10.9177 23.0902C10.6938 22.9822 10.7257 22.2763 10.8025 22.1427C10.8025 22.1427 10.073 21.5956 10.5402 21.1126C11.0075 20.6292 11.3404 20.2701 11.3404 20.2701L14.3215 17.1338C14.3215 17.1338 14.3296 17.164 14.3422 17.2192C14.4324 17.6103 14.7665 19.2507 14.2389 20.1206C13.6376 21.1126 12.5879 21.5449 12.6904 21.5449Z" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M10.8616 21.1508C10.3943 21.6338 11.1238 22.181 11.1238 22.181C11.0594 22.2932 11.0263 22.8094 11.1508 23.0356C11.0601 23.0914 10.9768 23.1188 10.9177 23.0902C10.6939 22.9822 10.7257 22.2763 10.8026 22.1427C10.8026 22.1427 10.073 21.5956 10.5403 21.1126C11.0076 20.6292 11.3405 20.2701 11.3405 20.2701L14.3215 17.1338C14.3215 17.1338 14.3296 17.164 14.3423 17.2192C14.3546 17.2716 14.3711 17.3463 14.3892 17.439L11.6619 20.3083C11.6617 20.3083 11.3288 20.6673 10.8616 21.1508Z" fill="white"/>
</g>
<path d="M13.1619 23.3607C13.04 23.3607 12.815 23.2872 12.3394 23.02C12.0938 22.882 11.8568 22.7342 11.7343 22.6564C11.5181 22.9068 11.1156 23.3131 10.8674 23.1934C10.7838 23.153 10.7212 23.0679 10.6816 22.9403C10.6121 22.7172 10.6177 22.3699 10.6674 22.1798C10.5452 22.072 10.2951 21.8164 10.2708 21.5146C10.2566 21.338 10.3193 21.1761 10.4572 21.0335C10.918 20.5567 11.2523 20.1963 11.2556 20.1927L11.425 20.3478C11.4217 20.3514 11.086 20.7135 10.6233 21.1921C10.5319 21.2867 10.4917 21.3861 10.5003 21.4959C10.5232 21.7854 10.8686 22.0491 10.8722 22.0518C10.9182 22.0865 10.9314 22.1499 10.9027 22.1998C10.8692 22.2593 10.8273 22.6371 10.9024 22.875C10.9246 22.9453 10.951 22.9792 10.9682 22.9876C11.0505 23.0091 11.3695 22.7403 11.6221 22.4331C11.6595 22.3876 11.7252 22.3776 11.7746 22.4098C12.3253 22.7693 13.0028 23.1391 13.1542 23.1319C13.2527 23.0408 13.2642 22.8102 13.2602 22.7341C13.2578 22.6868 13.2848 22.6427 13.3284 22.6235C13.372 22.6043 13.4229 22.6137 13.4567 22.6471C13.6084 22.7979 13.7462 22.8194 13.8256 22.8154C13.8097 22.0368 12.8076 21.6765 12.6861 21.6597C12.6238 21.6579 12.5843 21.6156 12.5726 21.5738C12.5471 21.483 12.6088 21.446 12.7317 21.3723C12.9956 21.2141 13.6967 20.7937 14.1405 20.0618C14.7099 19.1227 14.2152 17.1823 14.2101 17.1628L14.4331 17.1055C14.4549 17.1888 14.9572 19.1585 14.3378 20.18C13.9134 20.8799 13.2772 21.3074 12.9504 21.508C13.1691 21.5966 13.4766 21.7626 13.7096 22.0111C13.9614 22.2796 14.077 22.5846 14.0533 22.9175C14.0502 22.9607 14.0228 22.9984 13.9826 23.0151C13.9713 23.0198 13.7466 23.109 13.4757 22.9511C13.4539 23.0789 13.403 23.2296 13.2864 23.3206C13.2584 23.3421 13.2231 23.3607 13.1619 23.3607ZM12.6879 21.6596C12.6888 21.6596 12.6896 21.6596 12.6904 21.6596C12.6895 21.6596 12.6887 21.6596 12.6879 21.6596ZM12.6905 21.4307C12.6927 21.4307 12.6951 21.4308 12.6978 21.431C12.6953 21.4308 12.6929 21.4307 12.6905 21.4307Z" fill="#2D0106"/>
<path d="M18.3845 15.9208C18.1799 16.2588 17.7108 16.5033 17.7108 16.5033L17.7463 15.9678L17.54 15.6526C17.1933 15.4426 16.9717 15.6526 16.9717 15.6526C16.9717 15.6526 16.6645 15.5827 16.7125 15.1917C16.7605 14.8006 16.4629 14.4858 16.9717 14.3618C17.4804 14.2378 18.2676 14.1138 18.4691 14.419C18.6708 14.7243 18.4691 15.764 18.4691 15.764" fill="#8DC63F"/>
<g opacity="0.3">
<path d="M18.3845 15.9208C18.1799 16.2588 17.7108 16.5033 17.7108 16.5033L17.7463 15.9678L17.54 15.6526C17.1933 15.4426 16.9717 15.6526 16.9717 15.6526C16.9717 15.6526 16.6645 15.5827 16.7125 15.1917C16.7605 14.8006 16.4629 14.4858 16.9717 14.3618C17.4804 14.2378 18.2676 14.1138 18.4691 14.419C18.6708 14.7243 18.4691 15.764 18.4691 15.764" fill="#3D1D55"/>
</g>
<path d="M17.7107 16.6183C17.6889 16.6183 17.667 16.6121 17.6479 16.5997C17.613 16.5772 17.5931 16.5376 17.5958 16.4962L17.6288 15.9988L17.4583 15.7381C17.2033 15.5963 17.0527 15.7344 17.0512 15.7359L16.8922 15.5702C16.9039 15.5592 17.1825 15.3025 17.5999 15.5553C17.6146 15.5642 17.6272 15.5763 17.6366 15.5907L17.8429 15.9059C17.8564 15.9266 17.8629 15.9512 17.8612 15.9758L17.8404 16.2905C17.9843 16.1932 18.1781 16.0403 18.2858 15.8623L18.4832 15.9803C18.2645 16.3416 17.7847 16.5945 17.7644 16.6051C17.7474 16.6139 17.7291 16.6183 17.7107 16.6183Z" fill="#2D0106"/>
<path d="M18.4691 16.1749L18.2195 15.4278C18.2195 15.4278 17.8229 16.0253 17.4197 16.1749C17.4197 16.1749 17.5042 15.9165 17.5448 15.619C17.5917 15.2779 17.5805 14.8849 17.3171 14.7727C16.8245 14.5628 16.8437 15.3896 16.9205 15.5548C16.9435 15.6044 16.9835 15.6731 17.0226 15.7471C17.0226 15.7471 17.0226 15.7471 17.0226 15.7475C17.114 15.9196 17.2015 16.1195 17.0675 16.1749C16.7669 16.2988 16.338 15.7075 16.338 15.7075C16.338 15.7075 15.3854 17.7545 14.5191 16.5263C14.5184 16.5252 14.5176 16.524 14.5168 16.5229C13.6502 15.2878 13.8295 14.728 13.8295 14.728L14.7372 13.1289C14.7372 13.1289 15.3081 14.1305 15.4517 14.6391C15.4517 14.6391 16.5299 13.3036 17.8738 13.7359C18.4209 13.9122 18.7104 14.2464 18.8248 14.623C18.9917 15.1706 18.7878 15.8075 18.4691 16.1749Z" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M18.883 14.9717C18.7916 14.5551 18.5014 14.1758 17.9058 13.9839C16.5619 13.5516 15.4838 14.887 15.4838 14.887C15.3402 14.3784 14.7696 13.3769 14.7696 13.3769L13.8616 14.976C13.8616 14.976 13.8431 15.0339 13.8469 15.1542C13.7855 14.8653 13.8297 14.728 13.8297 14.728L14.7374 13.1289C14.7374 13.1289 15.3083 14.1305 15.4519 14.6391C15.4519 14.6391 16.5301 13.3036 17.874 13.7359C18.5862 13.9652 18.8619 14.4628 18.883 14.9717Z" fill="white"/>
</g>
<path d="M15.1189 17.0329C14.8638 17.0329 14.6298 16.8835 14.4225 16.5881C13.5336 15.321 13.7118 14.718 13.7197 14.693L13.9393 14.7624C13.9384 14.7659 13.8004 15.3011 14.6114 16.4571C14.7837 16.7027 14.9675 16.8187 15.1567 16.8023C15.6216 16.7618 16.0916 15.9632 16.2336 15.659C16.2507 15.6221 16.2863 15.597 16.3271 15.5932C16.3678 15.5891 16.4075 15.6072 16.4315 15.6401C16.5824 15.8478 16.8733 16.1269 17.0213 16.0696C17.0339 16.0065 16.9228 15.8033 16.8802 15.7255C16.8556 15.6805 16.8323 15.638 16.8158 15.6025C16.7466 15.4534 16.716 14.9424 16.9276 14.7263C16.9907 14.6618 17.1311 14.5686 17.3626 14.6671C17.7883 14.8484 17.6972 15.5392 17.6046 15.9363C17.8833 15.7224 18.1204 15.3688 18.1234 15.3643C18.1477 15.3278 18.1909 15.3081 18.2347 15.3139C18.2784 15.3197 18.315 15.3497 18.3289 15.3913L18.5082 15.9282C18.7132 15.6026 18.8476 15.1254 18.7217 14.6789C18.6101 14.2832 18.3047 13.9948 17.8385 13.8447C16.5872 13.4421 15.552 14.6978 15.5418 14.7106C15.5148 14.744 15.4714 14.7596 15.429 14.751C15.3868 14.7424 15.3528 14.7111 15.3412 14.6698C15.2028 14.1801 14.643 13.195 14.6374 13.1851L14.8379 13.0723C14.8588 13.1089 15.2976 13.8814 15.4986 14.4159C15.8391 14.0653 16.7742 13.2617 17.9095 13.627C18.5956 13.8477 18.8505 14.2873 18.9435 14.6171C19.1169 15.2318 18.8644 15.8942 18.5564 16.2493C18.5294 16.2806 18.4876 16.2949 18.4468 16.2869C18.4062 16.2789 18.373 16.2498 18.3598 16.2107L18.1806 15.6739C18.023 15.8728 17.7476 16.1752 17.46 16.2819C17.4186 16.2973 17.3719 16.2877 17.34 16.2573C17.3081 16.2269 17.2964 16.1811 17.3102 16.1393C17.4028 15.8557 17.5946 15.0151 17.2719 14.8777C17.1514 14.8264 17.1103 14.8682 17.0928 14.8861C16.9655 15.0161 16.985 15.4204 17.0251 15.5067C17.0384 15.5354 17.0599 15.5748 17.0827 15.6163C17.1806 15.7954 17.2916 15.9983 17.2373 16.1511C17.2161 16.2106 17.1727 16.2554 17.1119 16.2805C16.8379 16.3934 16.5265 16.1059 16.3602 15.9172C16.1792 16.2508 15.7224 16.9829 15.1772 17.0306C15.1576 17.032 15.1381 17.0329 15.1189 17.0329Z" fill="#2D0106"/>
<path d="M9.04272 10.292C9.04272 10.292 8.33876 10.4479 8.29399 10.5878C8.24923 10.7277 8.38359 11.4908 8.49238 11.6307" fill="#FBB040"/>
<path d="M6.81817 12.9622C6.8094 12.909 6.73262 12.4321 6.88618 12.1968C7.03973 11.9615 7.71805 12.4511 7.71805 12.4511" fill="#FBB040"/>
<path d="M5.51666 13.7102C5.51666 13.7102 5.50384 12.9281 5.74062 12.7182C5.9774 12.5083 6.52165 13.1285 6.52165 13.1285" fill="#FBB040"/>
<path d="M3.78247 13.6954C3.78247 13.6954 4.23353 13.3368 4.49753 13.3224C4.76152 13.3081 4.77592 14.2716 4.77592 14.2716" fill="#FBB040"/>
<path d="M2.72455 12.4626C2.72455 12.4626 3.25928 12.3182 3.45602 12.4626C3.45602 12.4626 3.45123 12.9627 3.29767 13.1926" fill="#FBB040"/>
<path d="M2.25677 10.748C2.30416 10.7664 2.86731 10.989 2.96328 11.1288C3.05925 11.2688 2.43215 11.9492 2.43215 11.9492" fill="#FBB040"/>
<path d="M8.40122 11.701C8.27735 11.5418 8.1253 10.7374 8.18423 10.5534C8.22727 10.419 8.50768 10.2935 9.01768 10.1807L9.06776 10.4041C8.76523 10.4712 8.46127 10.5753 8.40197 10.6313C8.3788 10.7678 8.49951 11.453 8.58348 11.561L8.40122 11.701Z" fill="#2D0106"/>
<path d="M6.70442 12.9807C6.6823 12.8465 6.62307 12.3893 6.78944 12.1343C6.82776 12.0756 6.88691 12.0375 6.96054 12.0239C7.23496 11.9735 7.69599 12.2937 7.78566 12.3585L7.65025 12.5437C7.46026 12.4067 7.13366 12.2246 7.00253 12.2491C6.98738 12.2519 6.98461 12.2562 6.98273 12.259C6.88616 12.407 6.89493 12.7203 6.93175 12.9437L6.70442 12.9807Z" fill="#2D0106"/>
<path d="M5.40144 13.7122C5.40002 13.6268 5.39552 12.8707 5.66394 12.6329C5.7228 12.5808 5.79837 12.556 5.88235 12.5612C6.1848 12.5801 6.56599 13.005 6.60842 13.0534L6.43485 13.2039C6.29862 13.0489 6.02413 12.7994 5.86788 12.7897C5.83939 12.7878 5.82626 12.7958 5.81734 12.8038C5.67384 12.931 5.62743 13.4263 5.63185 13.7086L5.40144 13.7122Z" fill="#2D0106"/>
<path d="M4.66077 14.2736C4.6547 13.8783 4.57867 13.4827 4.50054 13.4373C4.33454 13.4487 4.01679 13.6562 3.85439 13.7851L3.71051 13.6062C3.75962 13.5672 4.19891 13.2242 4.49132 13.2084C4.55295 13.2048 4.61181 13.2272 4.66077 13.2727C4.86868 13.4654 4.88915 14.1373 4.8911 14.2701L4.66077 14.2736Z" fill="#2D0106"/>
<path d="M3.39365 13.2556L3.20171 13.129C3.29603 12.9878 3.32984 12.694 3.33846 12.531C3.20276 12.4884 2.92961 12.5258 2.75469 12.5729L2.69434 12.3519C2.79263 12.3253 3.29453 12.2015 3.52441 12.3703C3.5541 12.3921 3.57157 12.4267 3.57119 12.4635C3.57067 12.5181 3.56122 13.0046 3.39365 13.2556Z" fill="#2D0106"/>
<path d="M2.51712 12.0258L2.34723 11.8712C2.60919 11.5869 2.83413 11.2798 2.85632 11.1789C2.78044 11.1034 2.47491 10.9547 2.21497 10.8539L2.29864 10.6406C2.44867 10.6987 2.94697 10.9011 3.05846 11.0636C3.0949 11.1167 3.20586 11.2785 2.51712 12.0258Z" fill="#2D0106"/>
<path d="M1.95147 8.31357L1.58191 8.0008C1.44035 7.88099 1.47274 7.65546 1.64234 7.57984L2.88538 7.02544C3.05408 6.95019 3.24482 7.07282 3.24482 7.25663V8.32989C3.24482 8.48307 3.10821 8.60072 2.95564 8.57881L2.17932 8.46765" fill="#FBB040"/>
<g opacity="0.7">
<path d="M3.24483 7.25661V8.32994C3.24483 8.4753 3.1212 8.589 2.97799 8.58065C2.99524 8.54705 3.00483 8.5089 3.00483 8.46808V7.39474C3.00483 7.21086 2.81402 7.08837 2.64547 7.16355L1.54773 7.65305C1.5715 7.62251 1.60299 7.59732 1.6422 7.57982L2.88547 7.02542C3.05402 6.95024 3.24483 7.07273 3.24483 7.25661Z" fill="white"/>
</g>
<path d="M2.99188 8.69506C2.97441 8.69506 2.95679 8.69379 2.93925 8.69126L2.16293 8.5801L2.19577 8.35353L2.97209 8.46469C3.0122 8.47035 3.05134 8.4591 3.08208 8.43265C3.11274 8.4062 3.12969 8.3694 3.12969 8.32901V7.25583C3.12969 7.20777 3.10645 7.16531 3.06581 7.13923C3.02525 7.11308 2.97674 7.10943 2.93257 7.1291L1.68953 7.68349C1.64544 7.70316 1.61628 7.74168 1.60945 7.78914C1.60263 7.83668 1.6198 7.88175 1.65654 7.91282L2.0261 8.2256L1.87675 8.39987L1.50719 8.08709C1.41047 8.00521 1.36346 7.88175 1.38137 7.75673C1.39929 7.63171 1.47922 7.52629 1.59513 7.47451L2.83818 6.92011C2.95319 6.86885 3.08508 6.87883 3.19094 6.94693C3.29681 7.01503 3.36002 7.13044 3.36002 7.25576V8.32901C3.36002 8.43526 3.31368 8.53614 3.23286 8.60565C3.16545 8.66377 3.07983 8.69506 2.99188 8.69506Z" fill="#2D0106"/>
<path d="M1.95148 9.98729C1.95148 9.98729 3.11789 10.2575 3.38616 11.6977L3.75535 11.8097C3.75535 11.8097 5.13163 11.5328 5.636 12.4511L6.01576 12.5173C6.01576 12.5173 6.71874 12.1341 7.64441 12.6927C8.57007 13.2513 8.40917 11.8421 8.40917 11.8421C8.40917 11.8421 7.82833 11.6106 7.78281 11.5889C7.73723 11.5671 6.94847 10.1817 6.9205 9.98729C6.89254 9.79291 6.70067 8.68023 6.49906 8.51163C6.29744 8.34302 5.91349 7.98055 5.75986 7.98055C5.60631 7.98055 4.74235 7.86611 4.70396 7.98055C4.66557 8.09499 2.15062 9.74202 2.15062 9.74202" fill="#D7DF23"/>
<path d="M8.02142 12.9384C7.8938 12.9384 7.74782 12.8891 7.5846 12.7906C6.73181 12.276 6.09736 12.6038 6.07074 12.618C6.04802 12.6302 6.0214 12.6346 5.99584 12.6302L5.61608 12.5639C5.58159 12.5579 5.55167 12.5366 5.53488 12.506C5.07774 11.6737 3.79106 11.9195 3.77817 11.9221C3.7595 11.9259 3.74008 11.925 3.72178 11.9194L3.3526 11.8073C3.31151 11.7949 3.28077 11.7607 3.27297 11.7187C3.02247 10.3738 1.9698 10.1095 1.92511 10.0989L1.97767 9.87598C2.02753 9.88752 3.18412 10.1712 3.48591 11.6084L3.76212 11.6922C3.97333 11.6557 5.18931 11.4875 5.70912 12.3477L5.99891 12.3982C6.16603 12.3227 6.84525 12.0765 7.70426 12.5949C7.8345 12.6735 8.01317 12.7523 8.12548 12.681C8.304 12.5677 8.3241 12.1142 8.29486 11.855L8.52376 11.8293C8.53321 11.9124 8.60609 12.6474 8.24972 12.8739C8.18187 12.9169 8.10569 12.9384 8.02142 12.9384Z" fill="#2D0106"/>
<path d="M9.45429 5.53847C9.45429 5.53847 7.94801 8.11973 7.65582 7.02695C7.36371 5.93418 6.21424 5.0743 6.56491 4.52959C6.91565 3.98495 6.56491 2.71343 6.56491 2.71343C7.21001 2.13318 7.25087 0.710938 7.25087 0.710938L9.00428 3.33742" fill="#D7DF23"/>
<path d="M7.91004 7.4119C7.89272 7.4119 7.8766 7.41064 7.86153 7.40862C7.75603 7.39462 7.61545 7.3222 7.54445 7.05673C7.42059 6.59345 7.13118 6.16579 6.8758 5.78849C6.52986 5.27738 6.23108 4.83601 6.46785 4.46825C6.7326 4.0572 6.54748 3.08423 6.45376 2.74403C6.44229 2.70238 6.45533 2.6579 6.48757 2.62892C7.08836 2.0886 7.1353 0.721717 7.13575 0.708008L7.366 0.714564C7.36435 0.773052 7.31839 2.12019 6.69323 2.75007C6.76206 3.02738 6.99194 4.0791 6.66197 4.59163C6.50662 4.83288 6.76634 5.21651 7.06699 5.66072C7.33249 6.05291 7.63337 6.49749 7.7672 6.99795C7.78835 7.077 7.82719 7.17311 7.89219 7.18168C7.9515 7.1895 8.18955 7.15471 8.765 6.37485C9.08785 5.93728 9.35207 5.48592 9.35469 5.48138L9.55398 5.59619C9.55128 5.60081 9.28092 6.06275 8.95079 6.51016C8.37924 7.28472 8.08413 7.4119 7.91004 7.4119Z" fill="#2D0106"/>
<path d="M8.29537 1.89425L7.33034 0.326795C7.26166 0.215185 7.10901 0.190598 7.00839 0.274939C6.92989 0.340653 6.90919 0.452412 6.95883 0.54167L7.99561 2.40521L7.78283 3.33803C7.78283 3.33803 7.43006 2.74451 6.54818 2.33458C6.44576 2.28697 6.32407 2.33793 6.28629 2.44388L6.28426 2.44962C6.25397 2.53448 6.28793 2.62828 6.36486 2.67589C6.57997 2.80896 7.00329 3.12889 7.26279 3.70758C7.62208 4.50889 8.71637 3.79534 8.74516 3.60208" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M7.71578 3.24122L7.65475 3.50944C7.65475 3.50944 7.30228 2.91615 6.42033 2.50592C6.37234 2.48379 6.32008 2.48304 6.27405 2.49981C6.27517 2.48304 6.27862 2.4662 6.28439 2.44944L6.28634 2.4437C6.32436 2.33761 6.44567 2.28687 6.54824 2.33418C7.21276 2.64331 7.57715 3.05652 7.71578 3.24122Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M8.74511 3.60193C8.73934 3.64045 8.69098 3.69998 8.61458 3.76368L8.16727 2.06577L7.20239 0.498387C7.1448 0.405254 7.02881 0.372844 6.93359 0.414046C6.93974 0.36137 6.96508 0.311004 7.0085 0.275167C7.10911 0.190454 7.26154 0.215264 7.33022 0.326651L8.29548 1.89411L8.74511 3.60193Z" fill="white"/>
</g>
<path d="M7.82142 4.19417C7.51919 4.19417 7.28624 4.04129 7.15758 3.75429C6.91293 3.20868 6.5178 2.90537 6.30404 2.77319C6.17988 2.69638 6.12709 2.54767 6.17568 2.41154L6.1777 2.40581C6.20657 2.32482 6.26895 2.25933 6.3488 2.2261C6.4285 2.19294 6.51892 2.19481 6.59697 2.23109C7.18104 2.50259 7.54056 2.85061 7.7259 3.06973L7.87353 2.42264L6.85797 0.597249C6.78194 0.460605 6.81396 0.288347 6.93407 0.187615C7.00777 0.125925 7.10457 0.0992514 7.19971 0.1146C7.29486 0.129948 7.37831 0.185529 7.42854 0.267262L8.39365 1.83472L8.19713 1.95423L7.23203 0.38677C7.21118 0.352944 7.17977 0.343333 7.16282 0.340651C7.14588 0.337894 7.11304 0.337149 7.08252 0.362704C7.04624 0.393103 7.03656 0.445182 7.05951 0.486533L8.09629 2.35C8.10993 2.37459 8.11406 2.40327 8.10783 2.43069L7.89505 3.36351C7.88463 3.40925 7.84714 3.44405 7.8005 3.45127C7.75394 3.45858 7.70753 3.43674 7.68354 3.39636C7.68024 3.39092 7.33452 2.82662 6.49928 2.43844C6.47289 2.42615 6.44934 2.4324 6.43765 2.43732C6.42588 2.44224 6.40466 2.45453 6.39476 2.48232L6.39274 2.48806C6.38059 2.52204 6.39416 2.55944 6.42565 2.57888C6.66183 2.72491 7.09827 3.05974 7.36789 3.66116C7.46123 3.86933 7.61261 3.96767 7.83192 3.96522C8.20291 3.95918 8.59668 3.66615 8.6329 3.57786C8.6329 3.57793 8.63177 3.58054 8.6311 3.58546L8.85903 3.61899C8.83084 3.80801 8.36943 4.12838 7.95376 4.18493C7.9084 4.19112 7.86416 4.19417 7.82142 4.19417Z" fill="#2D0106"/>
<path d="M15.1055 7.98047C15.6039 7.19809 16.2335 7.17283 16.2335 7.17283L16.6783 7.00161C16.8137 5.48229 17.6532 5.06155 17.6532 5.06155L17.7971 4.72829C16.7603 3.77499 17.5077 2.53223 17.5077 2.53223L16.2997 2.89939L14.9174 4.12457" fill="#D7DF23"/>
<path d="M15.2028 8.04183L15.0081 7.91935C15.4874 7.16706 16.0861 7.07184 16.2077 7.06014L16.5704 6.92052C16.7117 5.57859 17.3899 5.08603 17.5625 4.98135L17.6598 4.75605C16.6547 3.75901 17.401 2.4866 17.4088 2.47363L17.6067 2.59091C17.5783 2.63851 16.9211 3.76706 17.8753 4.64436C17.9111 4.67729 17.9222 4.729 17.9029 4.77348L17.759 5.10675C17.7484 5.13148 17.7293 5.15167 17.705 5.16382C17.6977 5.16762 16.9203 5.58284 16.7929 7.01179C16.789 7.05523 16.7607 7.0927 16.7198 7.10842L16.275 7.27964C16.2632 7.28418 16.2507 7.28679 16.238 7.28731C16.2154 7.28858 15.6593 7.32538 15.2028 8.04183Z" fill="#2D0106"/>
<path d="M14.8278 3.77506C14.8278 3.77506 16.3089 2.454 17.5413 1.9288C17.7888 1.8233 17.9948 2.14867 17.7905 2.32309C17.7719 2.33903 17.7517 2.35528 17.73 2.37197C17.2308 2.75351 15.1766 4.05081 14.9174 4.4705C14.6582 4.89019 15.0806 4.96649 15.0806 4.96649C15.0806 4.96649 16.6068 4.42274 18.1811 4.80436C18.1811 4.80436 18.3859 5.03645 17.8996 5.11282C17.4133 5.18918 16.3285 5.03332 15.1478 5.54845L15.2566 5.92679C15.2566 5.92679 15.8357 6.17505 16.6783 7.00199C16.7491 7.07158 16.7523 7.18684 16.6816 7.25657C16.6029 7.33421 16.4885 7.39441 16.3636 7.28764C16.1332 7.0905 15.6917 6.64533 14.9686 6.42278" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M14.8698 4.56055L14.8855 4.85812C14.8337 4.79673 14.8072 4.70248 14.8698 4.56055Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M14.9174 4.47031C14.8978 4.50235 14.8821 4.53215 14.8698 4.56039L14.8279 3.7748C14.8279 3.7748 16.3089 2.45388 17.5414 1.92884C17.7304 1.8483 17.8951 2.01847 17.8716 2.18141C17.8102 2.13216 17.7246 2.11235 17.6336 2.15124C16.4014 2.67665 14.9201 3.99757 14.9201 3.99757L14.9431 4.43328C14.9331 4.44632 14.9247 4.45891 14.9174 4.47031Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M18.1815 5.00623C16.6407 4.667 15.1732 5.18974 15.1732 5.18974C15.1732 5.18974 15.0503 5.16761 14.9777 5.08103L15.0507 6.45008C15.0238 6.44092 14.9962 6.43175 14.9685 6.42333L14.8856 4.85856C14.8986 4.87421 14.9132 4.88754 14.9286 4.89939C14.942 4.9093 14.9559 4.91809 14.9697 4.92569C15.0269 4.95735 15.0806 4.96689 15.0806 4.96689C15.0806 4.96689 16.6069 4.42315 18.1812 4.80477C18.1811 4.80477 18.2768 4.91317 18.1815 5.00623Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M14.9697 4.92484L14.9778 5.08011C14.9417 5.03734 14.9183 4.97826 14.9286 4.89846C14.9328 4.86412 14.9436 4.82597 14.962 4.7832L14.9697 4.92484Z" fill="white"/>
</g>
<path d="M16.5018 7.45977C16.428 7.45977 16.355 7.43146 16.2885 7.37446C16.2617 7.35151 16.2321 7.32536 16.1996 7.29652C15.957 7.08165 15.551 6.72201 14.9345 6.53224L15.0027 6.31357C15.667 6.51801 16.0963 6.89837 16.3529 7.12568C16.3843 7.15355 16.413 7.17888 16.4388 7.20101C16.4696 7.22731 16.5115 7.2633 16.6005 7.17545C16.6149 7.1613 16.6179 7.14423 16.6179 7.13246C16.6179 7.11413 16.6104 7.09633 16.5973 7.08351C15.7838 6.28518 15.2164 6.03432 15.2108 6.03186C15.1793 6.01823 15.1553 5.99118 15.1459 5.95825L15.0371 5.57983C15.0212 5.52477 15.0488 5.46658 15.1015 5.44356C15.9864 5.05747 16.8289 5.03922 17.3862 5.02707C17.5861 5.02275 17.7588 5.01895 17.8815 4.99973C18.0826 4.96821 18.1082 4.91539 18.1084 4.91487C18.1092 4.91286 18.1086 4.90906 18.1072 4.90451C16.6027 4.55761 15.1342 5.06902 15.1193 5.07424C15.1003 5.08102 15.0797 5.08273 15.0599 5.07908C15.0365 5.07483 14.828 5.03244 14.7474 4.85303C14.691 4.72778 14.7152 4.57892 14.8192 4.41054C15.0005 4.11691 15.8732 3.50909 16.9097 2.80359C17.2349 2.58224 17.5159 2.39098 17.6597 2.28108C17.6797 2.26574 17.6983 2.25076 17.7154 2.23616C17.7893 2.17305 17.7473 2.09691 17.738 2.08223C17.7287 2.0674 17.6776 1.99528 17.5867 2.03387C16.3862 2.54551 14.9194 3.84705 14.9047 3.86009L14.7507 3.68969C14.8118 3.63523 16.2602 2.35 17.4958 1.82347C17.659 1.75381 17.839 1.8105 17.9334 1.96108C18.0274 2.11084 17.9994 2.29531 17.8654 2.40976C17.8453 2.42689 17.8236 2.44455 17.8 2.46251C17.6512 2.57628 17.3679 2.7691 17.0398 2.99247C16.3015 3.49493 15.1858 4.2543 15.0154 4.53019C14.9729 4.59904 14.9284 4.69463 14.9576 4.75952C14.9797 4.80885 15.0413 4.8353 15.0762 4.84677C15.3191 4.76593 16.7308 4.33491 18.2082 4.69299C18.2312 4.69858 18.2519 4.71102 18.2675 4.72875C18.2786 4.74134 18.3747 4.85579 18.3249 4.9925C18.2809 5.11328 18.1476 5.18957 17.9173 5.22571C17.7792 5.24739 17.5993 5.25126 17.3911 5.25581C16.8406 5.2678 16.0941 5.28397 15.2863 5.61403L15.3528 5.84545C15.5143 5.92547 16.0424 6.21723 16.7589 6.92042C16.8154 6.97585 16.8478 7.05296 16.848 7.13194C16.8481 7.21017 16.8178 7.28326 16.7625 7.33765C16.6807 7.41886 16.5906 7.45969 16.5018 7.45977Z" fill="#2D0106"/>
<path d="M11.1991 1.22037C11.1933 1.24973 11.1868 1.27916 11.1795 1.30814C10.7249 1.54969 10.2837 1.66756 9.9093 1.17194C9.9093 1.17194 10.6488 0.36877 11.2313 0.114258C11.2313 0.114258 11.2378 0.161197 11.2447 0.24129C11.2613 0.438135 11.2785 0.834581 11.1991 1.22037Z" fill="#FBB040"/>
<path d="M14.3603 2.55737C14.3588 2.61042 14.3595 2.66309 14.3622 2.71495L13.1827 1.7916C13.1827 1.7916 13.5286 0.953705 14.828 0.896484C14.828 0.896484 14.8173 0.91824 14.7984 0.957505C14.6989 1.17044 14.3783 1.90261 14.3603 2.55737Z" fill="#FBB040"/>
<path d="M14.6997 12.7816C15.5306 19.5912 10.683 21.3807 7.68077 20.4497C7.53719 20.4055 7.39818 20.3547 7.26375 20.2982L6.96272 20.6416L7.44039 21.3158C7.51102 21.4155 7.55518 21.5326 7.55983 21.6542C7.58015 22.2197 6.99503 22.3013 6.99503 22.3013L6.75585 22.7943L6.64946 23.0138C6.32923 22.8039 6.13729 22.1934 6.13107 22.2125C6.12455 22.2316 5.39502 23.0901 5.39502 23.0901C5.06212 22.8738 5.05597 22.435 5.05597 22.435C4.7296 22.696 4.25582 22.6578 4.25582 22.6578C4.19824 22.0534 5.23187 21.5543 5.23187 21.5543C4.80488 21.3807 4.48278 21.1682 4.24045 20.9427C3.40378 20.1651 3.51362 19.2364 3.51362 19.2364C3.4933 19.2265 3.47291 19.2169 3.45259 19.2066C3.44262 19.2017 3.43227 19.1971 3.42223 19.1917C3.41683 19.1894 3.41188 19.1868 3.40648 19.1841C1.26356 18.1147 0.411524 16.1977 0.181944 14.3629C0.181944 14.3625 0.181944 14.3625 0.181944 14.3621C0.181944 14.3618 0.181944 14.3618 0.181944 14.3614C0.070603 13.4704 0.105917 12.5994 0.211485 11.8534C0.286387 11.3231 0.455685 10.8087 0.672219 10.3311V10.3307C0.672593 10.3303 0.672593 10.3303 0.672593 10.3303C1.39717 8.7297 2.64966 7.54193 2.64966 7.54193C1.65134 11.1701 2.49071 13.3369 4.85744 14.289C4.85744 14.289 5.62535 13.5896 7.4077 12.6357C8.99504 11.7863 9.05188 10.4379 9.04535 10.1525C9.04498 10.1304 9.04385 10.1144 9.0434 10.106C9.04303 10.101 9.04265 10.0984 9.04265 10.0984C6.85407 9.76757 6.96924 8.77552 7.36587 8.03799C7.76287 7.30045 7.71796 5.95853 7.71796 5.95853L7.30521 5.64374C6.2685 5.92038 5.45913 5.69791 5.72784 4.42579C5.99664 3.15405 7.62191 3.26856 7.62191 3.26856C7.62191 3.26856 7.82353 2.53409 8.53386 1.54204C9.24419 0.549992 10.2425 1.37038 10.2425 1.37038C11.9032 1.0842 12.4887 1.79961 12.4887 1.79961C13.9957 1.58019 14.2772 2.64547 14.2772 2.64547C14.6857 2.96905 14.9629 3.34903 15.1349 3.77409C15.3277 4.24757 15.3903 4.77761 15.3588 5.34803C15.8195 7.80903 14.4181 8.95367 14.4181 8.95367C14.4139 8.98645 14.4096 9.02005 14.4065 9.05477C14.2677 10.3939 14.6997 12.7816 14.6997 12.7816Z" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M4.13291 20.678C4.17243 20.7726 4.20819 20.8604 4.24043 20.9424C3.40376 20.1648 3.5136 19.2361 3.5136 19.2361C3.49328 19.2262 3.47289 19.2167 3.45257 19.2064L3.47252 19.0835C3.47252 19.0835 3.29475 17.9797 3.60575 17.4249C3.60575 17.4249 3.79694 16.6156 3.96242 16.3974C4.12789 16.1792 4.32103 15.7144 4.49348 15.5507L4.66278 15.3508L4.95998 15.0898C4.95998 15.0898 2.98644 17.9419 4.13291 20.678Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M2.53568 7.98307C2.21043 8.31618 1.26512 9.34906 0.672654 10.6578C0.672654 10.6578 0.672654 10.6578 0.672279 10.6581V10.6585C0.455745 11.1362 0.286372 11.6505 0.211545 12.1809C0.157787 12.5628 0.122098 12.9772 0.1152 13.4106C0.105228 12.8589 0.143991 12.3304 0.211545 11.8535C0.286447 11.3232 0.455745 10.8088 0.672279 10.3311V10.3307C0.672654 10.3304 0.672654 10.3304 0.672654 10.3304C1.39723 8.72977 2.64972 7.54199 2.64972 7.54199C2.60864 7.6916 2.57062 7.83845 2.53568 7.98307Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M9.04544 10.4798C9.05197 10.7652 8.99513 12.1136 7.40779 12.9629C5.62544 13.9168 4.85753 14.6162 4.85753 14.6162C3.10239 13.9103 2.18707 12.5363 2.2385 10.3936C2.28462 12.3498 3.19379 13.6196 4.85753 14.2888C4.85753 14.2888 5.62544 13.5894 7.40779 12.6355C8.68983 11.9495 8.97361 10.9376 9.03157 10.4237C9.03502 10.4244 9.03884 10.4252 9.04274 10.4256C9.04274 10.4256 9.04312 10.4283 9.04349 10.4332C9.04387 10.4416 9.04507 10.4576 9.04544 10.4798Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M15.4488 6.47438C15.4404 6.2256 15.4119 5.95969 15.359 5.67583C15.3644 5.57927 15.3671 5.48353 15.3667 5.38965C15.4377 5.78527 15.4607 6.14663 15.4488 6.47438Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M15.3667 5.38949C15.364 5.37578 15.3616 5.36199 15.359 5.34828C15.361 5.31282 15.3625 5.27728 15.3636 5.24219C15.3655 5.29106 15.3667 5.33986 15.3667 5.38949Z" fill="white"/>
</g>
<g opacity="0.7">
<path d="M15.2956 7.46429C15.3931 6.97054 15.4147 6.37271 15.2822 5.66602C15.3417 4.58352 15.0637 3.6472 14.2006 2.96346C14.2006 2.96346 13.9191 1.89818 12.4121 2.11752C12.4121 2.11752 11.8265 1.40212 10.1659 1.68829C10.1659 1.68829 9.16758 0.867983 8.45725 1.85996C7.97305 2.5361 7.72502 3.09273 7.61638 3.37854C7.77263 3.37049 7.97387 3.36788 8.23187 3.37354C9.58805 3.40372 10.8528 4.36671 10.8528 4.36671C9.03434 3.49067 7.54538 3.58641 7.54538 3.58641L7.5408 3.58603L7.5354 3.58566C7.40637 3.57918 6.06556 3.5353 5.70349 4.55707C5.71039 4.51475 5.71849 4.47087 5.72808 4.42579C5.99688 3.15405 7.62215 3.26856 7.62215 3.26856C7.62215 3.26856 7.82377 2.53409 8.5341 1.54204C9.24443 0.549992 10.2427 1.37038 10.2427 1.37038C11.9034 1.0842 12.4889 1.79961 12.4889 1.79961C13.9959 1.58019 14.2774 2.64547 14.2774 2.64547C15.1405 3.32921 15.4186 4.26553 15.359 5.34803C15.521 6.21401 15.4527 6.91682 15.2956 7.46429Z" fill="white"/>
</g>
<path d="M7.68082 20.4498C7.58522 20.399 7.4942 20.3483 7.40782 20.2983C5.52373 19.2048 6.94364 16.788 8.87647 14.7597C10.809 12.731 10.5832 9.74223 10.5832 9.74223L11.3849 9.77121C13.0648 10.1117 14.171 9.22061 14.4067 9.05469C14.2677 10.3939 14.6996 12.7817 14.6996 12.7817C15.5305 19.5913 10.683 21.3808 7.68082 20.4498Z" fill="#D7DF23"/>
<path d="M3.53284 19.1365C3.53284 19.1365 3.48756 19.1541 3.40651 19.1842C0.223059 17.5951 -0.111414 14.1363 0.211512 11.8534C0.286414 11.3231 0.455712 10.8087 0.672246 10.3311C0.650353 10.4035 -0.973049 15.8163 3.47249 17.8439L3.53284 19.1365Z" fill="#D7DF23"/>
<path d="M8.17772 6.30664C8.17772 6.30664 8.31957 7.22999 8.05078 7.98042C8.05078 7.98042 8.41944 7.18186 8.87553 7.20094C9.33154 7.22001 9.57019 7.30003 9.57019 7.30003C9.57019 7.30003 9.83306 7.17396 10.1322 7.1829C10.4314 7.19185 10.8376 7.50626 10.8376 7.50626L11.3401 6.56868C10.0692 6.89665 9.01409 6.81127 8.17772 6.30664Z" fill="#2D0106"/>
<path d="M8.90252 6.62207C8.90252 6.62207 8.87471 7.02254 9.05233 7.31818C9.05233 7.31818 9.25626 6.9788 9.45428 6.73592" fill="#FDFDFD"/>
<path d="M6.20935 5.69629C6.20935 5.69629 6.32939 6.12395 6.73254 6.49916C6.73254 6.49916 6.94405 6.23459 6.91833 5.7246" fill="#FDFDFD"/>
<path d="M5.395 23.2047C5.37325 23.2047 5.35136 23.1986 5.33202 23.1861C5.09974 23.0351 5.00534 22.7962 4.96703 22.6287C4.63593 22.8008 4.26472 22.7736 4.24657 22.7721C4.19087 22.7676 4.14648 22.7241 4.14116 22.6688C4.0937 22.1711 4.65625 21.758 4.97385 21.5662C4.10689 21.154 3.72286 20.5755 3.55281 20.148C3.40331 19.7719 3.39026 19.4515 3.39409 19.3062C3.38096 19.2998 3.36792 19.2934 3.35487 19.2869C1.89987 18.5605 0.900574 17.3923 0.384433 15.8146C-0.131559 14.2366 -0.0168444 12.6456 0.0974206 11.8375C0.167599 11.3404 0.325126 10.8189 0.565577 10.2877C0.566777 10.2847 0.568201 10.2817 0.569626 10.2788C1.29533 8.67849 2.55749 7.47112 2.57016 7.45913C2.60765 7.42359 2.66426 7.41726 2.70872 7.44363C2.75318 7.47001 2.77448 7.52253 2.76083 7.57215C2.27745 9.32878 2.22362 10.779 2.60075 11.8822C2.95569 12.9206 3.70734 13.6852 4.83529 14.1561C5.0417 13.9806 5.82282 13.354 7.35317 12.535C8.81252 11.7542 8.92754 10.532 8.93024 10.1966C7.96588 10.0373 7.36022 9.72493 7.12952 9.26746C6.95122 8.91378 6.99658 8.48202 7.26432 7.9841C7.59835 7.36361 7.60667 6.26949 7.60389 6.01587L7.27984 5.76874C6.619 5.93518 6.11927 5.88124 5.83249 5.61168C5.57074 5.36566 5.49764 4.95878 5.6152 4.40245C5.8618 3.23568 7.16738 3.15224 7.53432 3.15224C7.53552 3.15224 7.53664 3.15224 7.53784 3.15224C7.61304 2.92738 7.85799 2.28879 8.44011 1.47585C8.66212 1.16576 8.93451 0.987692 9.24964 0.946564C9.72162 0.885097 10.1399 1.15287 10.2729 1.24943C11.708 1.016 12.3604 1.51423 12.5315 1.67851C13.9056 1.50476 14.304 2.37969 14.3758 2.57765C15.1786 3.22689 15.5381 4.13125 15.4747 5.34085C15.714 6.63591 15.4386 7.56902 15.1648 8.12439C14.9158 8.62932 14.6272 8.91952 14.5272 9.01101C14.5251 9.02874 14.5231 9.04677 14.5215 9.0651C14.3856 10.3745 14.8088 12.7381 14.8131 12.7618C14.8135 12.764 14.8138 12.7661 14.8141 12.7683C15.2803 16.5901 13.9625 18.5642 12.7748 19.5472C11.3853 20.6973 9.37238 21.0946 7.64648 20.5594C7.52877 20.5231 7.41128 20.4816 7.29634 20.4358L7.10897 20.6496L7.53462 21.2504C7.62114 21.3724 7.66965 21.5107 7.6749 21.6504C7.69237 22.1359 7.31906 22.3465 7.07358 22.4035L6.75321 23.0639C6.73873 23.0936 6.71212 23.1157 6.6801 23.1245C6.64809 23.1332 6.61375 23.1279 6.58601 23.1098C6.3538 22.9576 6.1908 22.6381 6.10068 22.4327C5.99661 22.5584 5.81224 22.7769 5.48302 23.1644C5.46045 23.1907 5.42791 23.2047 5.395 23.2047ZM5.05603 22.3206C5.07267 22.3206 5.08939 22.3242 5.10506 22.3315C5.14495 22.3501 5.17059 22.3897 5.17119 22.4335C5.17127 22.4365 5.17996 22.7393 5.3791 22.9315C5.63905 22.6252 5.99451 22.2041 6.0332 22.1523C6.05322 22.1203 6.08831 22.0993 6.12715 22.0978C6.20917 22.0937 6.23541 22.1571 6.26241 22.2232C6.30889 22.3371 6.43538 22.6471 6.61037 22.8309L6.89124 22.2518C6.90796 22.2174 6.94087 22.1935 6.97896 22.1882C7.02792 22.181 7.46069 22.1042 7.44464 21.6585C7.44104 21.5634 7.407 21.4677 7.3462 21.382L6.86852 20.7077C6.838 20.6646 6.841 20.6064 6.87587 20.5666L7.1769 20.2232C7.20959 20.1859 7.26282 20.1736 7.30863 20.1929C7.44097 20.2486 7.57765 20.2982 7.71486 20.3405C9.3681 20.8532 11.2962 20.4726 12.6272 19.371C13.7706 18.4246 15.0383 16.5161 14.5857 12.7987C14.5609 12.6612 14.1543 10.3706 14.2921 9.04305C14.2951 9.00855 14.2995 8.97346 14.3039 8.93919C14.3076 8.91021 14.3224 8.88376 14.345 8.86528C14.3482 8.86267 14.6855 8.58096 14.9634 8.01211C15.2197 7.48744 15.4767 6.60298 15.2457 5.36894C15.2441 5.36 15.2435 5.35083 15.2439 5.34174C15.3072 4.1913 14.9675 3.33858 14.2055 2.73493C14.1861 2.71951 14.1722 2.69835 14.1659 2.67451C14.1552 2.63554 13.8867 1.71181 12.5054 1.91276C12.4653 1.91864 12.4249 1.903 12.3994 1.8717C12.3943 1.86567 11.8248 1.21367 10.2622 1.48301C10.2291 1.48874 10.195 1.47973 10.1691 1.45842C10.165 1.45507 9.73887 1.11234 9.27813 1.17336C9.02958 1.20622 8.81072 1.35255 8.62763 1.60825C7.93957 2.56923 7.73496 3.29149 7.73301 3.29864C7.71846 3.35124 7.66837 3.38678 7.61372 3.38261C7.55164 3.37836 6.08523 3.29142 5.84051 4.44924C5.74057 4.92242 5.79103 5.25748 5.99069 5.44516C6.22079 5.66152 6.67703 5.69274 7.27527 5.53308C7.30983 5.52391 7.34687 5.53114 7.37529 5.55282L7.78804 5.86761C7.81541 5.88847 7.8319 5.92036 7.83302 5.95463C7.8349 6.01066 7.87434 7.33597 7.46736 8.09191C7.23688 8.52046 7.1925 8.88145 7.33533 9.16479C7.53806 9.56683 8.11831 9.84287 9.05987 9.98518C9.11221 9.99307 9.1524 10.0354 9.15727 10.0878C9.15884 10.105 9.19438 10.5151 9.00207 11.0479C8.82565 11.5368 8.41537 12.2265 7.46226 12.7365C5.71665 13.6707 4.94274 14.3664 4.93516 14.3734C4.9024 14.4032 4.85531 14.4116 4.81415 14.395C3.5849 13.9006 2.76675 13.0799 2.3825 11.9559C2.02163 10.9002 2.03723 9.55006 2.42816 7.93775C2.01533 8.38993 1.26909 9.2916 0.777612 10.3773C0.777237 10.3781 0.776787 10.379 0.776412 10.3799C0.544434 10.8919 0.392755 11.3931 0.325501 11.8694C0.150504 13.1071 -0.141007 17.2853 3.45819 19.082C3.49275 19.0991 3.52784 19.1164 3.56338 19.1333C3.60784 19.1545 3.63379 19.2013 3.62809 19.2499C3.62134 19.3094 3.48361 20.7201 5.27556 21.4486C5.31762 21.4656 5.34559 21.5057 5.34701 21.5508C5.34851 21.5959 5.32309 21.6377 5.28231 21.6574C5.03623 21.7766 4.43649 22.1503 4.37403 22.5441C4.52091 22.538 4.78663 22.5036 4.98382 22.3459C5.00467 22.3292 5.03023 22.3206 5.05603 22.3206ZM6.02218 22.1754C6.02218 22.1755 6.0221 22.1757 6.02203 22.1758C6.02203 22.1757 6.0221 22.1755 6.02218 22.1754ZM6.02233 22.1749C6.02233 22.175 6.02225 22.1751 6.02225 22.1752C6.02225 22.1752 6.02225 22.175 6.02233 22.1749Z" fill="#2D0106"/>
<path d="M4.93018 14.3779L4.34558 14.7024L4.78487 14.2002L4.93018 14.3779Z" fill="#2D0106"/>
<path d="M3.40012 19.2556C3.25017 17.7953 3.72425 16.2438 4.79357 15.2109C4.5472 15.48 4.33164 15.7756 4.15762 16.0931C3.80995 16.725 3.62228 17.4387 3.57939 18.1551C3.5596 18.5078 3.56822 18.8699 3.6273 19.217C3.62723 19.217 3.40012 19.2556 3.40012 19.2556Z" fill="#2D0106"/>
<path d="M9.06149 9.98571C9.34393 10.018 9.63956 9.98355 9.90723 9.88743C10.0857 9.81621 10.2537 9.72814 10.4176 9.62771C10.6708 9.46677 10.8753 9.25682 11.0649 9.01758C10.9646 9.31031 10.7832 9.58718 10.5455 9.7943C10.1816 10.1264 9.59293 10.2517 9.10955 10.221C9.08151 10.2188 9.05654 10.2165 9.02393 10.2116L9.06149 9.98571Z" fill="#2D0106"/>
<path d="M14.5386 9.00031C14.1148 9.33708 13.6005 9.55635 13.0648 9.63123C13.442 9.52312 13.794 9.33745 14.0988 9.0933C14.1951 9.01603 14.2956 8.92715 14.3763 8.83789L14.5386 9.00031Z" fill="#2D0106"/>
<path d="M10.3758 9.67773C10.8405 9.73995 11.3184 9.74911 11.7881 9.74226C11.4355 9.80581 11.0807 9.85655 10.7231 9.88628C10.6025 9.89581 10.4847 9.90416 10.3587 9.90602L10.3758 9.67773Z" fill="#2D0106"/>
<path d="M11.2914 1.3355L11.0677 1.28096C11.1591 0.910961 11.1488 0.5093 11.133 0.292041C10.6065 0.588425 10.0008 1.24221 9.99419 1.24944L9.82422 1.09484C9.85511 1.06131 10.5873 0.270732 11.185 0.0096631C11.218 -0.00471654 11.2559 -0.00300291 11.2874 0.014506C11.3189 0.0319404 11.3404 0.0630838 11.3454 0.0985487C11.3492 0.124998 11.4352 0.753009 11.2914 1.3355Z" fill="#2D0106"/>
<path d="M14.247 2.72104C14.2131 2.09079 14.4947 1.35907 14.641 1.02596C13.5943 1.14382 13.3014 1.80581 13.2888 1.83554L13.076 1.74807C13.0913 1.71111 13.4658 0.84215 14.8228 0.782322C14.8635 0.780682 14.9024 0.800352 14.9245 0.834401C14.9467 0.86845 14.9491 0.911664 14.9308 0.947948C14.9259 0.957783 14.4358 1.94096 14.4771 2.70882L14.247 2.72104Z" fill="#2D0106"/>
<path d="M8.54468 4.63467L8.74629 4.60859C8.92256 4.72117 9.07566 4.72616 9.19983 4.59697C9.21857 4.57745 9.22719 4.55271 9.22367 4.52813C9.2146 4.46517 9.17523 4.34939 9.00789 4.3695C8.77988 4.39692 8.65032 4.52463 8.54468 4.63467Z" fill="#2D0106"/>
<path d="M8.00125 8.19578C7.77564 7.84799 7.52132 7.81543 7.52132 7.81543C7.43975 8.18423 7.54501 8.75108 7.55476 8.77037L8.05088 9.20832" fill="#FDFDFD"/>
<path d="M7.33683 4.26522L7.14864 4.18885C6.94928 4.25293 6.8 4.21888 6.71318 4.06249C6.70005 4.03887 6.6981 4.0128 6.70785 3.98992C6.73282 3.93136 6.8006 3.82944 6.95723 3.89135C7.17061 3.97562 7.26306 4.132 7.33683 4.26522Z" fill="#2D0106"/>
<path d="M10.9155 7.59036C10.9155 7.59036 10.3802 6.91273 9.72747 7.37698C9.72747 7.37698 8.95955 6.92539 8.52439 7.40238C8.08922 7.87937 7.72858 8.60468 8.11689 9.20863C8.11689 9.20863 9.50044 9.51522 9.8667 9.2283C10.233 8.94138 10.6401 8.22411 10.6891 8.11816" fill="#FF67A0"/>
<path d="M9.48425 9.38047C9.48425 9.38047 9.36909 8.8441 9.58982 8.36719C9.58982 8.36719 10.0362 8.63757 10.1322 8.96815" fill="#FDFDFD"/>
<path d="M9.39521 9.49507C9.35637 9.49507 9.31709 9.49246 9.2769 9.4871C9.16091 9.4716 9.03975 9.46117 8.91154 9.45014C8.42096 9.40804 7.86501 9.36029 7.5543 8.978C7.34377 8.71894 7.27299 8.34604 7.33769 7.83791L7.56622 7.86667C7.50977 8.30968 7.5645 8.62611 7.7335 8.83413C7.9825 9.14057 8.46482 9.18199 8.93133 9.222C9.05662 9.23273 9.18618 9.24391 9.30764 9.26015C10.1027 9.36617 10.6423 7.97656 10.8454 7.45323C10.9742 7.12131 11.1395 6.85339 11.2774 6.66369C10.11 7.01655 9.22502 6.86776 8.66876 6.66548C7.99434 6.42028 7.64772 6.0517 7.63333 6.03613L7.80263 5.88086C7.80585 5.88436 8.13365 6.22999 8.76008 6.45485C9.33816 6.66228 10.2979 6.8066 11.5869 6.3159C11.6379 6.29645 11.6957 6.3153 11.725 6.36105C11.7545 6.4068 11.7476 6.46677 11.7086 6.5047C11.7047 6.5085 11.3066 6.90122 11.0604 7.53549C10.8486 8.08169 10.2999 9.49492 9.39521 9.49507Z" fill="#2D0106"/>
<path d="M8.036 9.25926C7.52353 8.46219 8.22584 7.5869 8.45324 7.3376C8.86966 6.8811 9.52819 7.16572 9.72208 7.26473C10.2783 6.91172 10.7922 7.27911 10.991 7.53072L10.8401 7.64866C10.8205 7.624 10.3523 7.04926 9.78341 7.45383C9.75244 7.47588 9.71136 7.4776 9.67867 7.45837C9.67169 7.45435 8.97246 7.05262 8.59555 7.46575C8.39124 7.68972 7.75866 8.47352 8.19787 9.15659L8.036 9.25926Z" fill="#2D0106"/>
<path d="M9.77947 7.45631C9.55642 7.58349 9.36635 7.78116 9.24346 8.00668C9.19923 8.0841 9.16774 8.16799 9.13879 8.25367C9.16234 8.07285 9.22052 7.89373 9.31177 7.73437C9.40616 7.56762 9.52478 7.41883 9.67555 7.2959C9.67555 7.29597 9.77947 7.45631 9.77947 7.45631Z" fill="#2D0106"/>
<path d="M9.37168 9.40453C9.36665 9.38114 9.25119 8.82517 9.48527 8.3195C9.49899 8.28985 9.52485 8.26742 9.55634 8.25789C9.58776 8.24842 9.62187 8.2526 9.64992 8.26966C9.66971 8.28165 10.1358 8.56746 10.243 8.93656L10.0217 9.00004C9.97029 8.82324 9.78233 8.64889 9.64392 8.54384C9.51136 8.94483 9.59601 9.35223 9.59698 9.35677L9.37168 9.40453Z" fill="#2D0106"/>
<path d="M7.45189 8.82208C7.42842 8.77574 7.3221 8.18305 7.40877 7.79107C7.4216 7.7331 7.47678 7.69458 7.53601 7.70211C7.54853 7.70367 7.84642 7.74592 8.09804 8.13395L7.90437 8.258C7.79948 8.09632 7.69099 8.01325 7.61354 7.971C7.5816 8.29391 7.65343 8.69609 7.66422 8.73558C7.664 8.73484 7.66205 8.72791 7.65755 8.71904L7.45189 8.82208Z" fill="#2D0106"/>
<path d="M6.73254 6.61342C6.70338 6.61342 6.67526 6.60247 6.65382 6.58251C6.232 6.18986 6.10371 5.74558 6.09839 5.7268L6.32025 5.66504C6.3213 5.66862 6.41637 5.99272 6.70713 6.31033C6.75759 6.19656 6.81697 6.00136 6.80325 5.73008L7.03335 5.71861C7.06102 6.26548 6.83249 6.55792 6.82274 6.57014C6.80272 6.59517 6.77311 6.61074 6.74102 6.61305C6.73817 6.61328 6.73532 6.61342 6.73254 6.61342Z" fill="#2D0106"/>
<path d="M9.05234 7.3939C9.02527 7.3939 9.00023 7.37975 8.98636 7.35673C8.79862 7.0441 8.82471 6.63357 8.82591 6.61621L8.97916 6.62664C8.97894 6.62985 8.96162 6.90924 9.06029 7.15981C9.13811 7.03777 9.26662 6.84427 9.39461 6.68736L9.51397 6.78348C9.32181 7.01914 9.12034 7.35345 9.11832 7.3568C9.10445 7.37975 9.07941 7.3939 9.05234 7.3939Z" fill="#2D0106"/>
<path d="M7.20183 20.395C6.83871 20.1117 6.47815 19.8187 6.17584 19.4717C6.43961 19.6907 6.73232 19.8672 7.02811 20.0381C7.12655 20.0943 7.22672 20.1499 7.32569 20.2018L7.20183 20.395Z" fill="#2D0106"/>
<path d="M6.99854 20.7509L6.4126 20.8201L6.92724 20.5332L6.99854 20.7509Z" fill="#2D0106"/>
<path d="M5.20111 21.4443C5.56992 21.395 5.96168 21.3938 6.30215 21.5546C5.95673 21.4716 5.58904 21.5483 5.26259 21.6649L5.20111 21.4443Z" fill="#2D0106"/>
<path d="M6.88 22.2936L7.02209 21.8975L7.10981 22.3089L6.88 22.2936Z" fill="#2D0106"/>
<path d="M6.02722 22.1626L6.30216 21.8594L6.23476 22.262L6.02722 22.1626Z" fill="#2D0106"/>
<path d="M4.94336 22.4112C4.94636 22.4109 4.95318 22.3874 4.95483 22.3838C5.01669 22.2005 5.16072 22.0527 5.33271 21.9697C5.27348 22.04 5.22355 22.1186 5.19521 22.2043C5.16732 22.2832 5.16214 22.3627 5.16949 22.4443L5.16852 22.4598L4.94336 22.4112Z" fill="#2D0106"/>
<path d="M14.5249 11.1902C13.2895 11.8215 11.7612 11.7788 10.5281 11.1672C10.8418 11.298 11.1679 11.3968 11.4999 11.46C12.1597 11.5836 12.8498 11.555 13.4949 11.3736C13.8109 11.2839 14.1235 11.1643 14.4043 10.9951L14.5249 11.1902Z" fill="#2D0106"/>
<path d="M14.8302 13.8887C13.4313 14.458 11.2495 13.9959 10.0539 13.1289C11.0425 13.7734 12.4087 14.0461 13.578 13.9657C13.9805 13.9326 14.3795 13.8462 14.7367 13.6794L14.8302 13.8887Z" fill="#2D0106"/>
<path d="M14.4908 16.7975C12.6965 17.0811 10.9574 16.3985 9.60425 15.249C10.6308 16.0346 11.8646 16.61 13.1719 16.6647C13.6011 16.685 14.0313 16.6517 14.4518 16.5719L14.4908 16.7975Z" fill="#2D0106"/>
<path d="M12.8063 19.5047C11.1171 19.9126 9.36688 19.4635 8.16222 18.2028C7.77542 17.805 7.45219 17.346 7.22449 16.8438C7.46951 17.3378 7.80698 17.7823 8.20286 18.1624C8.98742 18.9233 10.0417 19.408 11.1372 19.4594C11.6805 19.4912 12.2251 19.4201 12.7502 19.2826C12.7503 19.2826 12.8063 19.5047 12.8063 19.5047Z" fill="#2D0106"/>
<path d="M2.3121 18.5924C2.29088 18.1642 2.41939 17.7411 2.6183 17.3662C2.51139 17.7032 2.46483 18.0635 2.51199 18.4141C2.51829 18.4582 2.52706 18.5111 2.53868 18.5512L2.3121 18.5924Z" fill="#2D0106"/>
<path d="M0.952576 17.03C1.03955 16.7085 1.18148 16.4131 1.35558 16.1318C1.268 16.3957 1.20825 16.6689 1.18628 16.9454C1.18358 16.9834 1.18103 17.0241 1.18126 17.0577L0.952576 17.03Z" fill="#2D0106"/>
<path d="M0.296894 15.5255C0.289471 15.4915 0.295244 15.4578 0.303117 15.4269C0.380718 15.155 0.503305 14.8956 0.644112 14.6523C0.573034 14.921 0.517251 15.1975 0.518826 15.4744C0.521 15.4905 0.5216 15.4709 0.518826 15.4642L0.296894 15.5255Z" fill="#2D0106"/>
<path d="M8.14338 12.1203C6.77362 12.292 6.73898 10.5464 6.73898 10.5464C6.73898 10.5464 6.14382 12.0821 6.03825 12.451C5.93268 12.8198 5.6255 12.8548 5.6255 12.5496C5.6255 12.2443 6.23986 10.3271 6.32624 9.87644C6.41261 9.4259 6.32624 8.5337 6.00946 8.81034C5.69268 9.08698 3.89765 11.7388 3.63524 11.9359C3.37289 12.133 3.28329 11.8786 3.28329 11.8786C3.91932 10.7274 5.24822 9.0004 5.5395 8.62601C5.57429 8.58123 5.57939 8.52051 5.55262 8.47059C5.52855 8.42574 5.48267 8.39683 5.43161 8.39444C4.85189 8.36658 3.22286 9.3961 2.49618 9.8003C2.18308 9.97442 1.9541 10.0066 1.7926 9.98358C1.63297 9.96086 1.60268 9.74524 1.74836 9.67662C3.26372 8.96293 4.46096 7.61675 5.66389 7.75161C6.9406 7.89466 7.27657 10.4511 7.59335 11.092C7.91012 11.7329 8.66717 11.4843 8.66717 11.4843C8.50852 11.725 8.34132 11.9503 8.14338 12.1203Z" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M8.66724 11.4843C8.60695 11.5759 8.54555 11.6652 8.48137 11.7499C8.23642 11.78 7.811 11.7594 7.59327 11.3191C7.27649 10.6781 6.94052 8.12166 5.66381 7.97861C4.46088 7.8439 3.26364 9.19007 1.74813 9.90391C1.72894 9.91308 1.71282 9.92455 1.69977 9.93789C1.62877 9.86465 1.63799 9.72845 1.74813 9.67652C3.26364 8.96305 4.46088 7.61688 5.66381 7.75159C6.94052 7.89464 7.27649 10.4511 7.59327 11.0921C7.91004 11.7327 8.66724 11.4843 8.66724 11.4843Z" fill="white"/>
</g>
<path d="M5.76441 12.87C5.75346 12.87 5.74282 12.8693 5.73239 12.8679C5.6299 12.8536 5.51024 12.7618 5.51024 12.5497C5.51024 12.368 5.67204 11.7929 5.91894 10.9362C6.05232 10.4733 6.17836 10.036 6.213 9.85522C6.28872 9.46034 6.20842 8.93157 6.11928 8.87376C6.11425 8.87562 6.10308 8.88113 6.08539 8.89655C5.93791 9.02538 5.3893 9.78556 4.90525 10.4563C4.24905 11.3657 3.84072 11.9251 3.70464 12.0274C3.58745 12.1154 3.47619 12.1446 3.37414 12.1139C3.23266 12.0714 3.18003 11.9324 3.17448 11.9167C3.16368 11.886 3.16646 11.8522 3.1822 11.8237C3.82565 10.6591 5.18266 8.89752 5.44823 8.55621C5.45528 8.5472 5.45625 8.53483 5.45086 8.52462C5.44583 8.51531 5.43654 8.50942 5.42596 8.5089C4.98652 8.48878 3.76417 9.1989 3.0336 9.62381C2.84743 9.73206 2.68668 9.82557 2.55239 9.9003C2.26058 10.0626 1.99944 10.1288 1.77616 10.097C1.65275 10.0794 1.5609 9.98881 1.54223 9.8661C1.52364 9.74384 1.58662 9.62619 1.69901 9.57329C2.24139 9.31789 2.74119 8.98104 3.22449 8.6553C4.06993 8.08556 4.86836 7.54748 5.67676 7.63793C6.71594 7.75438 7.15951 9.28883 7.45297 10.3041C7.54429 10.6201 7.62324 10.893 7.69664 11.0416C7.96454 11.5835 8.60416 11.3843 8.63123 11.3756C8.67787 11.3606 8.72885 11.3763 8.75847 11.4149C8.78816 11.4535 8.79026 11.5065 8.76349 11.5471C8.61938 11.7658 8.44199 12.0152 8.21871 12.2071C8.20154 12.2218 8.18032 12.2312 8.15783 12.234C7.77559 12.282 7.45289 12.1955 7.19849 11.9769C6.89506 11.7163 6.75171 11.3199 6.68415 11.0106C6.50031 11.4923 6.2175 12.2435 6.14912 12.4825C6.07129 12.7537 5.90177 12.87 5.76441 12.87ZM6.12078 8.64353C6.16734 8.64353 6.20497 8.65858 6.23024 8.67296C6.51156 8.8327 6.49379 9.61405 6.43935 9.89806C6.40269 10.0891 6.2753 10.5312 6.14042 10.9993C5.96235 11.6174 5.74064 12.3866 5.74064 12.5497C5.74064 12.6148 5.75946 12.6405 5.76426 12.6411C5.79185 12.6449 5.87957 12.587 5.92741 12.4199C6.0332 12.0503 6.60708 10.5684 6.63144 10.5055C6.65124 10.4544 6.70462 10.4244 6.75883 10.4339C6.81304 10.4434 6.853 10.4897 6.85405 10.5444C6.8542 10.5528 6.87782 11.3998 7.34957 11.8043C7.54481 11.9717 7.79509 12.0412 8.0941 12.0109C8.21398 11.9032 8.32075 11.775 8.41582 11.6457C8.10204 11.6646 7.70092 11.5698 7.48978 11.1426C7.40738 10.9759 7.32581 10.6939 7.23148 10.3675C6.95489 9.41065 6.5369 7.96478 5.65082 7.86547C4.92692 7.78426 4.19799 8.27577 3.35367 8.84477C2.86317 9.17536 2.35596 9.51719 1.79753 9.7802C1.76761 9.79428 1.76821 9.82102 1.76993 9.8319C1.77226 9.84725 1.78088 9.86647 1.80877 9.87042C1.98085 9.89494 2.19303 9.83779 2.43978 9.70055C2.57219 9.62686 2.73204 9.53388 2.91716 9.42629C3.76642 8.93239 4.92879 8.25528 5.43698 8.28032C5.52801 8.28471 5.61116 8.33702 5.65404 8.41696C5.7021 8.50644 5.69281 8.61611 5.63043 8.69628C5.37108 9.0297 4.06273 10.728 3.41553 11.8776C3.42288 11.8854 3.43158 11.8922 3.44125 11.8949C3.46749 11.9023 3.51398 11.8836 3.56563 11.8448C3.68372 11.7562 4.25715 10.9615 4.71796 10.3229C5.25689 9.57605 5.76598 8.8707 5.93326 8.7246C6.00389 8.6629 6.06807 8.64353 6.12078 8.64353Z" fill="#2D0106"/>
<path d="M15.5561 14.6874L15.1414 15.2936L15.3478 14.5898L15.5561 14.6874Z" fill="#2D0106"/>
<path d="M16.2376 15.7631C16.1281 15.4707 16.0714 15.1282 16.2037 14.8359C16.1517 15.126 16.2756 15.4177 16.4386 15.6513L16.2376 15.7631Z" fill="#2D0106"/>
<path d="M17.3698 14.9533C17.3413 14.7808 17.2638 14.6126 17.1444 14.4821C17.1034 14.4358 17.0536 14.3981 17.0004 14.3623C17.0612 14.3806 17.1235 14.403 17.1801 14.4372C17.3574 14.5409 17.4986 14.703 17.5902 14.8865L17.3698 14.9533Z" fill="#2D0106"/>
<path d="M18.11 15.3914C18.1916 15.2218 18.2491 15.0286 18.2622 14.8384C18.2656 14.7732 18.2625 14.7072 18.2515 14.6406C18.3425 14.8274 18.3601 15.0429 18.3515 15.2487C18.3477 15.3197 18.3424 15.3869 18.3289 15.4626L18.11 15.3914Z" fill="#2D0106"/>
<path d="M12.6904 21.6596L11.9705 21.5452L12.6904 21.4307V21.6596Z" fill="#2D0106"/>
<path d="M10.7244 22.0587L11.1833 21.793L10.8808 22.2267L10.7244 22.0587Z" fill="#2D0106"/>
<path d="M13.2984 22.8133C13.0707 22.5635 12.8294 22.3233 12.5848 22.0889C12.8793 22.2653 13.1694 22.4465 13.4519 22.6426C13.4519 22.6426 13.2984 22.8133 13.2984 22.8133Z" fill="#2D0106"/>
<g opacity="0.3">
<path d="M17.0676 16.1742C16.767 16.2982 16.3381 15.7069 16.3381 15.7069C16.3381 15.7069 15.3855 17.7539 14.5192 16.5257C14.5853 16.2715 14.6966 15.8691 14.6966 15.8691L14.7834 14.7393C14.7834 14.7393 15.0073 16.2792 15.4519 15.8786C15.8965 15.478 16.166 15.0964 16.166 15.0964C16.166 15.0964 16.3445 14.6958 16.3956 14.966C16.4467 15.2365 16.9074 15.6306 16.9074 15.6306C16.9074 15.6306 16.9604 15.6749 17.0226 15.7467C17.0226 15.7467 17.0226 15.7467 17.0226 15.747C17.1141 15.919 17.2017 16.119 17.0676 16.1742Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M18.4691 16.1746L18.2195 15.4275C18.2195 15.4275 17.8228 16.0251 17.4197 16.1746C17.4197 16.1746 17.5042 15.9163 17.5448 15.6187L17.6139 15.5165C17.6139 15.5165 18.1362 14.8106 17.9956 14.3623C17.9956 14.3623 18.2271 14.7561 18.2575 14.9198C18.2882 15.0838 18.7858 15.7157 18.8161 14.7576C18.8177 14.7035 18.8207 14.6588 18.825 14.6229C18.9916 15.1703 18.7878 15.8072 18.4691 16.1746Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M11.1991 1.22029C10.9594 1.24622 10.7065 1.24622 10.6811 1.24622C10.6362 1.24622 11.1737 0.247693 11.1737 0.247693L11.2447 0.241211C11.2613 0.438056 11.2785 0.834502 11.1991 1.22029Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M14.7984 0.957031C14.699 1.16997 14.3783 1.90214 14.3603 2.5569C14.2617 2.51838 14.1937 2.45162 14.1937 2.45162L13.868 1.98991C14.0085 1.41107 14.7984 0.957031 14.7984 0.957031Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M5.77358 4.39453C5.77358 4.39453 6.01335 5.31028 7.01924 5.03364C8.02521 4.757 7.5548 5.41519 8.74514 5.84442C9.93547 6.27365 11.3375 5.69816 11.2588 4.94774C11.2588 4.94774 12.3192 5.53276 11.7177 6.4231H11.5385C11.5385 6.4231 9.89446 7.08762 8.66709 6.4994L8.33134 6.39285L8.294 7.09075L7.74585 6.65832V6.09789L7.37403 5.69645C7.37403 5.69645 6.72938 5.93829 6.30914 5.722C5.88881 5.50579 5.66321 5.33696 5.6794 4.97329" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M14.6997 12.7823C15.5306 19.5918 10.683 21.3813 7.68077 20.4503C7.53718 20.4061 7.39818 20.3553 7.26374 20.2989L6.96271 20.6423L7.44039 21.3165C7.51102 21.4161 7.55518 21.5332 7.55983 21.6549C7.58015 22.2203 6.99503 22.302 6.99503 22.302L6.75585 22.795L6.57268 22.8682L6.58535 22.1433C6.58535 22.1433 6.81576 21.6408 6.57575 21.2306C6.33575 20.8204 5.99018 20.7441 6.21676 20.5342C6.44289 20.3243 6.23978 20.2957 5.76713 19.7425C5.29447 19.1892 5.67843 18.7219 5.67843 18.7219C14.3327 20.248 13.471 11.9939 13.2279 11.0927C12.9849 10.1915 12.1145 9.97472 10.8473 10.3773C9.77457 10.718 9.19748 10.2918 9.04542 10.1529C9.01776 10.1278 9.00433 10.1121 9.00433 10.1121C9.00433 10.1121 9.00853 10.1106 9.04347 10.1064C9.11185 10.0983 9.29652 10.0801 9.79339 10.0438C10.5437 9.98888 10.8228 9.38061 10.8228 9.38061L11.34 8.51217C13.347 8.16989 15.1179 7.43884 15.1056 3.77516L15.1351 3.77441C15.3279 4.2479 15.3905 4.77793 15.359 5.34835C15.8197 7.80936 14.4183 8.95399 14.4183 8.95399C14.4141 8.98677 14.4098 9.02038 14.4067 9.0551C14.2677 10.3945 14.6997 12.7823 14.6997 12.7823Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M12.6904 21.5446C12.7929 21.5446 14.0055 21.9643 13.9384 22.9086C13.9384 22.9086 13.6696 23.02 13.3751 22.7273C13.3751 22.7273 13.3758 22.7426 13.3758 22.7685L13.1704 22.4793C13.0264 21.7544 11.9033 21.5445 11.9033 21.5445C11.9033 21.5445 12.7545 20.5524 13.3174 19.9164C13.8807 19.2807 12.9074 19.278 12.887 19.2967L13.5831 18.6446C13.8695 18.3074 14.2094 17.5347 14.3422 17.2188C14.4324 17.6098 14.7665 19.2502 14.2389 20.1201C13.6376 21.1123 12.5879 21.5446 12.6904 21.5446Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M3.49518 19.0911C3.49518 19.0911 3.46564 19.1323 3.42223 19.1922C3.41683 19.1898 3.41188 19.1872 3.40648 19.1846C1.26356 18.1151 0.411525 16.1981 0.181946 14.3633C1.43294 19.5925 4.27921 15.8586 4.27921 15.8586C3.56971 17.0471 3.33278 18.1185 3.49518 19.0911Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M9.60425 13.1289C12.6791 15.2371 9.14509 20.7313 7.87476 15.6199Z" fill="#3D1D55"/>
</g>
<path d="M9.80606 15.4199V15.4203C9.52497 16.7332 8.61617 17.1041 8.09741 16.671C7.84706 16.4623 7.68773 16.0663 7.73302 15.4989L7.97954 15.4894L8.2122 15.4806L8.33351 15.476L9.80606 15.4199Z" fill="#8DC63F"/>
<path d="M10.7832 15.008L10.4945 14.5818C10.4945 14.5818 10.1028 15.2411 9.80605 15.4204V15.4208C9.78341 15.4345 9.76151 15.4452 9.74037 15.4528C9.43934 15.5612 9.17707 15.4528 9.17707 15.4528C9.17707 15.4528 8.8315 15.6135 8.46869 15.5601C8.38269 15.5475 8.29594 15.523 8.21219 15.4811C8.14726 15.449 8.08435 15.4066 8.0252 15.3514L7.97954 15.4899L7.90351 15.7199C7.8421 15.6448 7.7849 15.5712 7.73301 15.4994C7.39741 15.0346 7.27573 14.6409 7.59018 14.391C7.59018 14.391 7.62857 13.5707 8.28132 13.6153C8.59045 12.8766 9.13373 13.0044 9.86521 13.8282C9.86521 13.8282 10.6666 13.4425 10.9906 13.8527C11.0109 13.8782 11.0298 13.9072 11.0459 13.9397C11.3208 14.4863 10.7832 15.008 10.7832 15.008Z" fill="#8DC63F"/>
<g opacity="0.7">
<path d="M11.1737 14.3086C11.1626 14.2727 11.1477 14.2365 11.1296 14.2002C10.8543 13.6534 9.94892 14.0889 9.94892 14.0889C9.21745 13.2651 8.67416 13.1373 8.36503 13.8759C7.71228 13.8313 7.6739 14.6516 7.6739 14.6516C7.56293 14.7401 7.5061 14.8462 7.49418 14.9675C7.42235 14.7351 7.45616 14.5383 7.64121 14.391C7.64121 14.391 7.67959 13.5707 8.33234 13.6153C8.64147 12.8766 9.18476 13.0044 9.91623 13.8282C9.91623 13.8282 10.8217 13.3925 11.0969 13.9396C11.1607 14.0659 11.1806 14.1911 11.1737 14.3086Z" fill="white"/>
</g>
<path d="M7.95481 15.8339C7.92047 15.8339 7.88756 15.8186 7.86544 15.7917C7.48156 15.3225 7.31698 14.9722 7.34742 14.6896C7.36234 14.5514 7.42383 14.4321 7.53052 14.3341C7.54491 14.2055 7.60385 13.8666 7.83545 13.6615C7.95234 13.558 8.0942 13.5034 8.25802 13.4987C8.39125 13.2177 8.56895 13.0573 8.78698 13.0214C9.10676 12.9685 9.48659 13.1873 9.94635 13.6896C10.1926 13.5893 10.9276 13.3465 11.1999 13.8877C11.5091 14.5023 10.9393 15.0655 10.915 15.0891C10.8905 15.1128 10.8566 15.1245 10.8228 15.1211C10.7887 15.1176 10.7581 15.0994 10.7389 15.0712L10.5496 14.7918C10.393 15.0326 10.0814 15.4699 9.83059 15.56C9.56802 15.6543 9.33177 15.6044 9.23287 15.5748C9.07857 15.6361 8.5592 15.8081 8.13498 15.5405L8.06428 15.7551C8.05116 15.7949 8.01719 15.8244 7.97581 15.832C7.96883 15.8332 7.96179 15.8339 7.95481 15.8339ZM8.28134 13.7273C8.16445 13.7273 8.06848 13.7618 7.98878 13.8324C7.81236 13.9885 7.76115 14.292 7.75627 14.3957C7.7547 14.4286 7.73903 14.4593 7.71316 14.4798C7.63121 14.545 7.58645 14.6216 7.57648 14.714C7.55654 14.8989 7.66675 15.1503 7.91268 15.4796L7.96688 15.3151C7.97918 15.2778 8.00977 15.2494 8.04801 15.2397C8.08625 15.2301 8.12674 15.2405 8.15545 15.2674C8.54631 15.634 9.17334 15.3516 9.17964 15.3487C9.20888 15.3352 9.24262 15.3344 9.27238 15.3467C9.27411 15.3474 9.49994 15.4355 9.75224 15.3448C9.94275 15.2763 10.2792 14.8044 10.4465 14.523C10.4666 14.4892 10.5028 14.4679 10.5423 14.4668C10.5816 14.4653 10.6191 14.4847 10.6412 14.5172L10.8452 14.8182C10.9699 14.6531 11.1603 14.3211 10.9938 13.9901C10.7727 13.5508 9.97424 13.9269 9.96615 13.9307C9.91966 13.953 9.8638 13.9418 9.82969 13.9034C9.30357 13.3108 8.99272 13.2194 8.82455 13.2472C8.67212 13.2723 8.54226 13.4108 8.43856 13.6586C8.4196 13.7039 8.37386 13.7323 8.3243 13.7288C8.30983 13.7277 8.29543 13.7273 8.28134 13.7273Z" fill="#2D0106"/>
<path d="M10.4332 14.6756C10.3434 14.47 10.306 14.2496 10.2906 14.0283C10.3757 14.214 10.4809 14.3988 10.623 14.5459C10.7602 14.6861 10.5178 14.8531 10.4332 14.6756Z" fill="#2D0106"/>
<path d="M7.75284 14.3146C7.86808 14.5896 8.09698 14.8202 8.37882 14.9252L8.22415 15.0219L8.29455 14.2778C8.30017 14.2148 8.3564 14.1683 8.41976 14.1743C8.44555 14.1767 8.4685 14.1874 8.48627 14.2035C8.52923 14.2422 8.56964 14.2801 8.61043 14.319C8.73294 14.4364 8.85073 14.556 8.96327 14.6841L8.76668 14.724C8.90164 14.4023 9.02453 14.0635 9.0363 13.71C9.08811 13.9754 9.06569 14.2543 9.0315 14.5223C9.01898 14.6131 9.00518 14.7016 8.98591 14.7945C8.97384 14.8529 8.91633 14.8904 8.85763 14.8784C8.82861 14.8729 8.80664 14.8558 8.7894 14.8343C8.64754 14.6733 8.49121 14.5186 8.33219 14.3738L8.5239 14.2995L8.4535 15.0435C8.44983 15.1184 8.36818 15.1692 8.29882 15.1401C7.97612 15.0204 7.7125 14.7671 7.56517 14.4593C7.5549 14.4379 7.54635 14.4189 7.53601 14.3919C7.51329 14.3329 7.54305 14.2667 7.60244 14.2442C7.66354 14.2206 7.73192 14.2533 7.75284 14.3146Z" fill="#2D0106"/>
<path d="M9.96182 13.9329C9.85325 13.9611 9.75023 14.0176 9.66131 14.087C9.56534 14.1613 9.49051 14.2591 9.4411 14.3715C9.45452 14.2439 9.50146 14.1177 9.57576 14.0103C9.65366 13.8966 9.75226 13.7968 9.87072 13.7227C9.87072 13.7226 9.96182 13.9329 9.96182 13.9329Z" fill="#2D0106"/>
<path d="M8.40901 14.403C8.35121 14.403 8.30135 14.3599 8.29467 14.3014L8.2179 13.6273C8.21078 13.5645 8.25621 13.5078 8.31942 13.5007C8.38232 13.4936 8.43968 13.5387 8.4468 13.6016L8.52358 14.2757C8.5307 14.3385 8.48527 14.3952 8.42206 14.4023C8.41779 14.4028 8.41336 14.403 8.40901 14.403Z" fill="#2D0106"/>
<path d="M8.07655 15.4656C8.07191 15.4656 8.06726 15.4653 8.06253 15.4647C7.9994 15.4571 7.95442 15.4002 7.96199 15.3375C7.97886 15.1968 7.97009 14.9702 7.90981 14.9104C7.86474 14.8658 7.86459 14.7933 7.90951 14.7485C7.95442 14.7037 8.02737 14.7036 8.07243 14.7482C8.23663 14.9109 8.19974 15.2904 8.19067 15.3648C8.1837 15.4229 8.13399 15.4656 8.07655 15.4656Z" fill="#2D0106"/>
<path d="M8.61996 16.9579C8.57857 16.9579 8.53779 16.955 8.4979 16.9491C8.03267 16.8819 7.59615 16.4047 7.66955 15.49C7.67465 15.427 7.73013 15.3803 7.79356 15.385C7.85699 15.39 7.90431 15.4452 7.89921 15.5083C7.83765 16.2752 8.1722 16.6709 8.53104 16.7227C8.97933 16.7874 9.54023 16.3528 9.74469 15.3964C9.75796 15.3345 9.81899 15.295 9.8813 15.3082C9.94353 15.3213 9.98327 15.3821 9.97007 15.444C9.74342 16.5038 9.13535 16.9579 8.61996 16.9579Z" fill="#2D0106"/>
<path d="M9.60153 13.6297C9.56794 13.2087 9.45232 12.761 9.14514 12.4512C9.33063 12.5791 9.47324 12.763 9.58271 12.9592C9.69232 13.1623 9.77622 13.3744 9.82991 13.6001C9.82998 13.6001 9.60153 13.6297 9.60153 13.6297Z" fill="#2D0106"/>
<path d="M7.76166 13.7621C7.879 13.4087 8.04695 13.0762 8.2748 12.7822C8.12035 13.102 8.0261 13.4555 7.98779 13.806L7.76166 13.7621Z" fill="#2D0106"/>
<g opacity="0.3">
<path d="M10.7832 15.0079L10.4945 14.5817C10.4945 14.5817 10.1028 15.241 9.80606 15.4204V15.4207C9.52497 16.7337 8.61618 17.1045 8.09741 16.6715C8.97824 16.7715 9.12527 15.5375 8.74514 15.5974C8.64182 15.6138 8.5493 15.5963 8.4687 15.56C8.41914 15.5379 8.37385 15.5089 8.33351 15.4764C8.17149 15.3467 8.08429 15.1635 8.08429 15.1635L8.40909 14.9674C8.63297 15.1941 9.43927 15.2177 9.75298 14.9377C10.0667 14.658 10.3577 14.254 10.3577 14.254L10.5977 14.6111C10.8588 14.6088 10.9645 14.027 10.9905 13.8525C11.0109 13.8781 11.0297 13.9071 11.0458 13.9396C11.3208 14.4863 10.7832 15.0079 10.7832 15.0079Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M15.2629 4.3946C15.2629 4.3946 16.8756 3.34533 17.2276 3.85406C17.2276 3.85406 17.3619 2.75391 17.3427 2.75391C17.3235 2.75391 15.8229 3.69879 15.8229 3.69879L15.2629 4.20379" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M15.4519 5.59639C15.4519 5.59639 16.8244 5.31297 16.7668 6.02882L17.2979 5.21484L16.9076 5.24234C16.9076 5.24234 16.2548 5.2594 16.1717 5.2848C16.0885 5.31021 15.4519 5.48828 15.4519 5.48828" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M6.99487 1.93363L7.83941 2.58154C7.83941 2.58154 7.87645 2.32397 7.86686 2.29059C7.85726 2.25721 7.25249 1.24609 7.25249 1.24609" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M2.79371 10.3935C2.79371 10.3935 4.71537 9.71113 5.13472 9.15531C5.16583 9.11411 5.53135 8.51165 5.53135 8.51165C5.53135 8.51165 5.47751 8.39446 5.43155 8.39453C5.38559 8.39461 4.81479 8.55204 4.81479 8.55204L2.43855 9.80038L2.16016 9.98739L2.79371 10.3935Z" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M4.91315 10.2493C5.96155 9.33254 6.13092 10.0201 5.6411 11.9109C5.6411 11.9109 6.34536 10.3707 6.32616 9.87688C6.30697 9.38313 6.25898 8.87902 6.25898 8.87902C6.25898 8.87902 6.16301 8.82031 6.14382 8.82031C6.12463 8.82031 5.93966 8.88141 5.91357 8.91218C5.88747 8.94295 5.75986 9.12556 5.68946 9.17645" fill="#3D1D55"/>
</g>
<g opacity="0.3">
<path d="M6.32654 11.9393C6.32654 11.9393 6.66881 11.5695 7.33408 12.071L6.70052 10.8662L6.55177 11.1667" fill="#3D1D55"/>
</g>
<path d="M11.4074 3.62854C11.4491 4.03847 11.7136 4.34633 11.9976 4.31585C12.2817 4.28538 12.4781 3.9282 12.436 3.51827C12.415 3.31479 12.3396 3.13643 12.2342 3.0123C12.1829 2.95187 12.1247 2.90434 12.0623 2.87305C11.9381 2.90121 11.8203 2.93377 11.7287 2.96081C11.6607 2.98086 11.6073 2.99203 11.5655 2.99583C11.5249 3.04598 11.4909 3.10528 11.4646 3.17219C11.4126 3.30302 11.3903 3.46142 11.4074 3.62854Z" fill="#2D0106"/>
<path d="M11.742 3.19597C11.8373 3.21944 11.8972 3.35161 11.8758 3.49116C11.8544 3.63071 11.7598 3.72474 11.6645 3.70127C11.5692 3.6778 11.5094 3.54563 11.5308 3.40608C11.5521 3.2666 11.6467 3.1725 11.742 3.19597Z" fill="white"/>
<path d="M12.1768 3.88332C12.2199 3.91461 12.2256 3.99158 12.1895 4.05521C12.1534 4.11884 12.0893 4.14506 12.0462 4.11377C12.0032 4.08248 11.9975 4.00551 12.0336 3.94188C12.0695 3.87826 12.1337 3.85203 12.1768 3.88332Z" fill="#B199C5"/>
<path d="M11.3414 3.13145C11.3737 3.15269 11.4136 3.16722 11.4646 3.17213C11.5107 3.17675 11.5663 3.17325 11.6335 3.16006C11.6673 3.15328 11.7046 3.14434 11.7447 3.1322C11.8137 3.11179 11.8799 3.09346 11.9434 3.07699C12.0487 3.04995 12.1463 3.02797 12.2343 3.01225C12.4214 2.97834 12.5655 2.97075 12.6501 2.99228C12.6501 2.99228 12.5067 2.79409 12.2498 2.83455C12.1873 2.84543 12.124 2.85861 12.0623 2.87299C11.9381 2.90116 11.8204 2.93372 11.7288 2.96076C11.6608 2.9808 11.6074 2.99198 11.5655 2.99578C11.4348 3.00725 11.4087 2.94757 11.3715 2.86212L11.3644 2.8461C11.3643 2.8461 11.2201 3.04942 11.3414 3.13145Z" fill="#2D0106"/>
<path d="M9.37741 3.04694C9.23713 3.37141 8.94112 3.55544 8.71679 3.45784C8.49246 3.36023 8.42438 3.01803 8.56488 2.69363C8.63484 2.53262 8.74258 2.40611 8.86097 2.33161C8.91855 2.2954 8.97846 2.2714 9.03761 2.26172C9.13186 2.31656 9.21966 2.37325 9.28759 2.41878C9.33805 2.4526 9.37876 2.47533 9.41197 2.48919C9.43214 2.54052 9.44459 2.59774 9.44871 2.65913C9.45749 2.77946 9.43462 2.91469 9.37741 3.04694Z" fill="#2D0106"/>
<path d="M9.2159 2.60763C9.13193 2.60242 9.0487 2.69518 9.03011 2.81476C9.01144 2.93434 9.06445 3.03544 9.14842 3.04059C9.2324 3.0458 9.31562 2.95304 9.33422 2.83346C9.35288 2.71395 9.29995 2.61277 9.2159 2.60763Z" fill="white"/>
<path d="M8.68246 3.05782C8.63913 3.07235 8.61454 3.13389 8.62758 3.19513C8.64055 3.25638 8.68621 3.29423 8.72955 3.2797C8.77289 3.26517 8.79748 3.20363 8.78443 3.14238C8.77139 3.08107 8.72573 3.04322 8.68246 3.05782Z" fill="#B199C5"/>
<path d="M9.56012 2.65746C9.52818 2.66655 9.49174 2.66819 9.44878 2.65917C9.40994 2.6512 9.3654 2.63406 9.31382 2.60612C9.28795 2.59197 9.25983 2.57513 9.23014 2.55494C9.17908 2.52059 9.12967 2.4887 9.08206 2.45905C9.00296 2.40995 8.92881 2.36703 8.86096 2.33172C8.7167 2.25617 8.60094 2.21303 8.52618 2.20901C8.52618 2.20901 8.69481 2.08369 8.89432 2.18248C8.94261 2.20737 8.99097 2.23434 9.0376 2.2619C9.13185 2.31674 9.21965 2.37344 9.28758 2.41896C9.33803 2.45279 9.37875 2.47551 9.41196 2.48937C9.51588 2.53221 9.55269 2.49004 9.60525 2.42969L9.61523 2.41844C9.6153 2.41829 9.68045 2.6214 9.56012 2.65746Z" fill="#2D0106"/>
<path d="M11.0778 4.56568C10.2342 3.87464 9.1705 3.48661 8.08596 3.40212C7.93698 3.38983 7.77803 3.38134 7.63115 3.38253L7.61285 3.15432C8.89294 3.06759 10.2192 3.62721 11.0778 4.56568Z" fill="#2D0106"/>
</svg>

'''
'''--- src/assets/img/icons/live-listing-small.svg ---
<svg width="78" height="76" viewBox="0 0 78 76" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M25.376 10.0298V66.6678C25.376 66.6678 37.1007 63.7179 43.5962 51.1138C43.5962 51.1138 50.587 39.2069 43.1007 24.4574C43.1007 24.4574 37.5411 13.2479 25.376 10.0298Z" fill="#EA7D18"/>
<path d="M58.183 5.04151C75.3023 14.8566 77.1738 31.0006 77.1738 31.0006C80.6968 51.328 67.816 63.3421 67.816 63.3421C50.5316 81.846 27.4124 74.2299 27.4124 74.2299C44.2564 69.2419 50.4766 55.4042 50.4766 55.4042C59.6142 36.364 50.4766 21.5073 50.4766 21.5073C42.3849 5.20241 26.0362 2.09161 26.0362 2.09161C43.8711 -3.96908 58.183 5.04151 58.183 5.04151ZM62.0362 11.2095C62.0362 11.2095 61.1555 20.381 52.128 20.381C52.128 20.381 60.9353 21.8827 61.761 30.4642C61.761 30.4642 62.5316 21.0782 71.7793 20.6491C71.7243 20.6491 61.5959 19.8446 62.0362 11.2095ZM14.0913 8.52775H17.339V67.9547H14.8619C14.8619 67.9547 4.40321 60.0704 1.21055 47.8418C1.21055 47.8418 -3.02799 33.7896 3.96284 20.81C4.01789 20.8637 9.1922 11.6922 14.0913 8.52775Z" fill="#EA7D18"/>
</svg>

'''
'''--- src/assets/img/icons/live-listing-star.svg ---
<svg width="352" height="342" viewBox="0 0 352 342" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M114.518 45.1333V300.004C114.518 300.004 167.429 286.73 196.742 230.011C196.742 230.011 228.29 176.43 194.506 110.058C194.506 110.058 169.417 59.6146 114.518 45.1333Z" fill="#EA7D18"/>
<path d="M262.571 22.6875C339.828 66.8555 348.274 139.503 348.274 139.503C364.172 230.977 306.043 285.04 306.043 285.04C228.042 368.308 123.709 334.035 123.709 334.035C199.723 311.589 227.794 249.32 227.794 249.32C269.03 163.639 227.794 96.7835 227.794 96.7835C191.277 23.4116 117.499 9.413 117.499 9.413C197.984 -17.8601 262.571 22.6875 262.571 22.6875ZM279.96 50.4433C279.96 50.4433 275.986 91.715 235.246 91.715C235.246 91.715 274.992 98.473 278.718 137.09C278.718 137.09 282.196 94.8527 323.929 92.9218C323.681 92.9218 277.973 89.3015 279.96 50.4433ZM63.5932 38.3756H78.2495V305.797H67.071C67.071 305.797 19.8727 270.318 5.46476 215.289C5.46476 215.289 -13.663 152.054 17.8854 93.6459C18.1338 93.8872 41.4845 52.6155 63.5932 38.3756Z" fill="#EA7D18"/>
</svg>

'''
'''--- src/assets/img/icons/message.svg ---
<svg width="80" height="75" viewBox="0 0 80 75" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_d_87_177)">
<ellipse cx="40" cy="33.952" rx="32" ry="29.0482" fill="white"/>
</g>
<path opacity="0.4" d="M50.7833 41.2594L51.4333 46.0403C51.6 47.296 50.1167 48.1735 48.9333 47.523L41.95 43.7558C41.1833 43.7558 40.4335 43.7104 39.7002 43.6196C40.9335 42.3034 41.6667 40.6391 41.6667 38.8388C41.6667 34.5421 37.5667 31.0623 32.5001 31.0623C30.5667 31.0623 28.7834 31.5616 27.3001 32.4391C27.2501 32.0609 27.2334 31.6826 27.2334 31.2893C27.2334 24.4054 33.8167 18.8228 41.95 18.8228C50.0833 18.8228 56.6667 24.4054 56.6667 31.2893C56.6667 35.3742 54.35 38.9901 50.7833 41.2594Z" fill="#D5B5FF"/>
<path d="M41.6663 38.8385C41.6663 40.6388 40.933 42.3031 39.6997 43.6193C38.0497 45.4348 35.433 46.5998 32.4997 46.5998L28.1497 48.9448C27.4163 49.3533 26.483 48.7935 26.583 48.0219L26.9997 45.0415C24.7663 43.6344 23.333 41.3802 23.333 38.8385C23.333 36.1757 24.8997 33.8307 27.2997 32.4388C28.783 31.5613 30.5663 31.062 32.4997 31.062C37.5663 31.062 41.6663 34.5417 41.6663 38.8385Z" fill="#993FF4"/>
<defs>
<filter id="filter0_d_87_177" x="0" y="0.903809" width="80" height="74.0964" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="4"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.419608 0 0 0 0 0.447059 0 0 0 0 0.501961 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_87_177"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_87_177" result="shape"/>
</filter>
</defs>
</svg>

'''
'''--- src/assets/img/icons/near.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_206_400)">
    <path d="M10.25 20C15.9109 20 20.5 15.5228 20.5 10C20.5 4.47715 15.9109 0 10.25 0C4.58908 0 0 4.47715 0 10C0 15.5228 4.58908 20 10.25 20Z" fill="#111618"/>
    <path d="M13.352 5.52794L11.2095 8.61C11.179 8.65438 11.1661 8.708 11.1732 8.76087C11.1803 8.81375 11.207 8.86238 11.2482 8.89769C11.2894 8.933 11.3425 8.95269 11.3976 8.95306C11.4526 8.95337 11.5059 8.93444 11.5477 8.89969L13.6567 7.12725C13.6691 7.11656 13.6844 7.10956 13.7008 7.10712C13.7172 7.10469 13.7339 7.10694 13.749 7.11362C13.7641 7.12025 13.7769 7.131 13.7858 7.14463C13.7946 7.15819 13.7993 7.17394 13.7991 7.19V12.739C13.7991 12.7559 13.7937 12.7726 13.7836 12.7864C13.7735 12.8004 13.7593 12.8109 13.7428 12.8168C13.7264 12.8225 13.7084 12.8233 13.6915 12.8189C13.6745 12.8144 13.6594 12.8051 13.6481 12.7921L7.27321 5.39829C7.17071 5.28098 7.04303 5.18671 6.89908 5.12203C6.75513 5.05736 6.59837 5.02384 6.43969 5.02381H6.21691C5.92732 5.02381 5.64959 5.13526 5.44481 5.33366C5.24004 5.53206 5.125 5.80116 5.125 6.08174V13.8969C5.125 14.1775 5.24004 14.4466 5.44481 14.645C5.64959 14.8434 5.92732 14.9548 6.21691 14.9548C6.40363 14.9549 6.58723 14.9086 6.75027 14.8203C6.91324 14.7321 7.05014 14.6048 7.14797 14.4507L9.29047 11.3686C9.32103 11.3243 9.33391 11.2706 9.3268 11.2178C9.31968 11.1649 9.29303 11.1163 9.25178 11.0809C9.21059 11.0456 9.15754 11.0259 9.10245 11.0256C9.04742 11.0253 8.99412 11.0442 8.95235 11.079L6.84328 12.8514C6.83092 12.8621 6.81561 12.8691 6.79921 12.8715C6.78281 12.8739 6.76609 12.8717 6.75097 12.8651C6.73585 12.8584 6.7231 12.8476 6.7142 12.8341C6.70536 12.8205 6.70075 12.8047 6.70094 12.7886V7.23831C6.70094 7.22131 6.70632 7.20475 6.71644 7.19081C6.7265 7.17687 6.74072 7.16631 6.75718 7.1605C6.77365 7.15475 6.79159 7.154 6.8085 7.15837C6.82548 7.16281 6.84059 7.17219 6.85187 7.18519L13.2261 14.5804C13.3286 14.6977 13.4563 14.7919 13.6002 14.8566C13.7442 14.9212 13.9009 14.9548 14.0596 14.9548H14.2823C14.4258 14.9549 14.5679 14.9276 14.7004 14.8745C14.833 14.8214 14.9535 14.7434 15.0549 14.6452C15.1564 14.547 15.2369 14.4303 15.2918 14.3019C15.3467 14.1735 15.375 14.0359 15.375 13.8969V6.08174C15.375 5.80116 15.2599 5.53206 15.0552 5.33366C14.8504 5.13526 14.5727 5.02381 14.2831 5.02381C14.0964 5.02376 13.9128 5.07007 13.7498 5.15832C13.5868 5.24658 13.4499 5.37384 13.352 5.52794Z" fill="white"/>
  </g>
  <defs>
    <clipPath id="clip0_206_400">
      <rect width="20.5" height="20" fill="white"/>
    </clipPath>
  </defs>
</svg>

'''
'''--- src/assets/img/icons/people.svg ---
<svg width="62" height="62" viewBox="0 0 62 62" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_186_28516)">
<path d="M38.9898 61.2506V52.6632C38.7328 48.9944 36.0173 46.0065 32.4826 45.3432C32.564 45.32 32.6453 45.2959 32.7258 45.269C34.5925 44.6437 36.008 43.0335 36.3585 41.0536C36.4139 40.7423 36.4435 40.4227 36.4435 40.0957C36.4435 37.0828 34.0063 34.6406 30.9996 34.6406C27.9928 34.6406 25.5556 37.0828 25.5556 40.0957C25.5556 40.4227 25.5861 40.7423 25.6407 41.0536C25.9911 43.0335 27.4066 44.6437 29.2733 45.269C29.3538 45.2959 29.4342 45.32 29.5165 45.3432C25.9818 46.0056 23.2663 48.9944 23.0093 52.6632V61.0505C23.3098 61.0949 23.5714 61.1524 23.8248 61.2191C23.8608 61.2191 23.8978 61.2228 23.9366 61.2311C28.04 62.1316 32.2764 62.1539 36.4583 61.7472C37.3108 61.6267 38.1559 61.4609 38.9898 61.2506Z" fill="#EEEEEE"/>
<path d="M30.9995 0C13.9067 0 0 13.935 0 31.0625C0 44.9123 9.09238 56.6728 21.6094 60.6687V56.7015C21.6002 56.6978 21.5909 56.6951 21.5817 56.6923V42.7295C21.5817 38.8032 18.7691 35.5355 15.0523 34.8388C15.1336 34.8157 15.215 34.7916 15.2954 34.7647C17.1622 34.1393 18.5777 32.5291 18.9281 30.5493C18.9836 30.238 19.0132 29.9184 19.0132 29.5913C19.0132 26.5784 16.576 24.1363 13.5692 24.1363C10.5625 24.1363 8.12527 26.5784 8.12527 29.5913C8.12527 29.9184 8.15578 30.238 8.21033 30.5493C8.56075 32.5291 9.97629 34.1393 11.843 34.7647C11.9235 34.7916 12.0048 34.8166 12.0871 34.8397C8.85939 35.4447 6.31308 37.9888 5.69915 41.2194C4.44264 38.0796 3.75012 34.6526 3.75012 31.0635C3.75012 15.9834 15.95 3.75867 30.9995 3.75867C46.049 3.75867 58.2489 15.9834 58.2489 31.0625C58.2489 34.6517 57.5564 38.0787 56.2999 41.2185C55.686 37.9879 53.1397 35.4438 49.9119 34.8388C49.9942 34.8157 50.0756 34.7906 50.156 34.7638C52.0228 34.1384 53.4383 32.5282 53.7887 30.5483C53.8442 30.2371 53.8738 29.9174 53.8738 29.5904C53.8738 26.5775 51.4366 24.1354 48.4298 24.1354C45.4231 24.1354 42.9859 26.5775 42.9859 29.5904C42.9859 29.9174 43.0164 30.2371 43.0709 30.5483C43.4214 32.5282 44.8369 34.1384 46.7036 34.7638C46.7841 34.7906 46.8645 34.8147 46.9468 34.8379C43.2309 35.5346 40.4174 38.8022 40.4174 42.7286V56.6913C40.4081 56.6951 40.3989 56.6978 40.3896 56.7006V60.6677C52.9067 56.6719 61.9991 44.9113 61.9991 31.0616C62 13.935 48.0933 0 30.9995 0Z" fill="#EEEEEE"/>
</g>
<defs>
<clipPath id="clip0_186_28516">
<rect width="62" height="62" fill="white"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/assets/img/icons/phone.svg ---
<svg width="13" height="16" viewBox="0 0 13 16" fill="none" xmlns="http://www.w3.org/2000/svg">
  <ellipse cx="8.5" cy="6.01409" rx="4.5" ry="5.77239" fill="#34D399"/>
  <path d="M7.5 14.9932C3.91015 14.9932 1 11.2602 1 6.65527" stroke="#34D399" stroke-width="1.5" stroke-linecap="round"/>
</svg>

'''
'''--- src/assets/img/icons/seat.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_19_155)">
    <path d="M10.25 20C15.9109 20 20.5 15.5228 20.5 10C20.5 4.47715 15.9109 0 10.25 0C4.58908 0 0 4.47715 0 10C0 15.5228 4.58908 20 10.25 20Z" fill="#050035"/>
    <path d="M8.9687 3.8125C8.77651 3.8125 8.64839 3.875 8.4562 3.9375L5.18901 5.875L4.99683 6L4.61245 6.25C4.29214 6.4375 4.03589 6.625 4.03589 7.3125V9.875C4.03589 10.4375 4.22808 10.875 4.61245 11.0625L8.58433 13.4375C9.22495 13.8125 10.0578 13.375 10.0578 12.625V10.8125C10.0578 10.375 9.80151 9.9375 9.41714 9.6875L7.55933 8.5625L9.4812 7.375C9.80151 7.1875 9.9937 6.8125 9.9937 6.4375V4.75C9.9937 4.1875 9.4812 3.8125 8.9687 3.8125ZM9.41714 6.5C9.41714 6.6875 9.28901 6.875 9.16089 7L6.98276 8.3125L5.82964 7.625C5.50933 7.4375 5.31714 7.3125 5.12495 7.125C4.93276 6.9375 4.99683 6.625 5.25308 6.5L8.77651 4.375C8.84058 4.375 8.90464 4.3125 8.9687 4.3125C9.16089 4.3125 9.41714 4.5 9.41714 4.75V6.5ZM15.9515 8.9375L11.9796 6.5625C11.339 6.1875 10.5062 6.625 10.5062 7.375V9.1875C10.5062 9.625 10.7625 10.0625 11.1468 10.3125L13.0046 11.4375L11.0828 12.625C10.7625 12.8125 10.5703 13.1875 10.5703 13.5625V15.3125C10.5703 15.875 11.0828 16.3125 11.5953 16.3125C11.7875 16.3125 11.9156 16.25 12.1078 16.1875L15.375 14.25L15.6312 14.125L16.0156 13.875C16.3359 13.6875 16.5921 13.5 16.5921 12.8125V10.25C16.5281 9.5625 16.2718 9.125 15.9515 8.9375ZM15.2468 13.5L11.7234 15.625C11.6593 15.6875 11.5953 15.6875 11.4671 15.6875C11.275 15.6875 11.0187 15.5 11.0187 15.25V13.5C11.0187 13.3125 11.1468 13.125 11.275 13L13.4531 11.6875L14.6062 12.375C14.9265 12.5625 15.1187 12.6875 15.3109 12.875C15.5671 13.0625 15.5031 13.375 15.2468 13.5Z" fill="url(#paint0_linear_19_155)"/>
  </g>
  <defs>
    <linearGradient id="paint0_linear_19_155" x1="3.99585" y1="10" x2="16.5041" y2="10" gradientUnits="userSpaceOnUse">
      <stop stop-color="#00C2FF"/>
      <stop offset="1" stop-color="#0067FF"/>
    </linearGradient>
    <clipPath id="clip0_19_155">
      <rect width="20.5" height="20" fill="white"/>
    </clipPath>
  </defs>
</svg>

'''
'''--- src/assets/img/icons/setting.svg ---
<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.7464 27.9996C12.9099 27.9996 11.9572 27.8865 10.9791 27.5472C10.8484 27.5018 10.7494 27.3932 10.7167 27.2587L9.95864 24.1534C9.73613 24.0648 9.51611 23.9686 9.30056 23.8659L6.66129 25.4194C6.5462 25.4871 6.40531 25.4943 6.28401 25.4385C6.17561 25.3887 3.61423 24.1851 2.28468 21.4432C2.2244 21.3186 2.2311 21.1718 2.30304 21.0535L3.9625 18.3219C3.86824 18.1029 3.78043 17.8792 3.70031 17.6529L0.7356 16.8855C0.606366 16.852 0.501688 16.7575 0.455303 16.6322C0.413878 16.5203 -0.546328 13.858 0.452574 10.9791C0.497968 10.8484 0.606614 10.7494 0.741058 10.7167L3.84616 9.95864C3.93472 9.73614 4.03096 9.51612 4.13365 9.30031L2.58011 6.66105C2.51239 6.54595 2.5052 6.40506 2.56101 6.28376C2.61087 6.17536 3.81441 3.61399 6.55637 2.28443C6.68089 2.22391 6.82774 2.23085 6.94581 2.30279L9.67735 3.96225C9.89638 3.86799 10.1201 3.78018 10.3463 3.70006L11.1138 0.735601C11.1473 0.606366 11.2421 0.501688 11.3671 0.455303C11.4789 0.413878 14.1413 -0.546328 17.0202 0.452574C17.1509 0.497968 17.2499 0.606614 17.2826 0.741058L18.0406 3.84641C18.2631 3.93496 18.4832 4.03121 18.6987 4.1339L21.338 2.58036C21.4531 2.51264 21.594 2.50545 21.7153 2.56126C21.8237 2.61112 24.385 3.81466 25.7146 6.55662C25.7749 6.68114 25.7682 6.82774 25.6962 6.94606L24.0368 9.6776C24.131 9.89663 24.2188 10.1204 24.299 10.3466L27.2634 11.1143C27.3927 11.1478 27.4973 11.2423 27.5437 11.3676C27.5852 11.4794 28.5454 14.1418 27.5465 17.0207C27.5011 17.1514 27.3924 17.2503 27.258 17.2831L24.1529 18.0414C24.0643 18.2639 23.9681 18.4839 23.8654 18.6995L25.4189 21.3387C25.4866 21.4538 25.4938 21.5947 25.438 21.716C25.3882 21.8244 24.1846 24.3858 21.4427 25.7153C21.3181 25.7759 21.1715 25.7687 21.0532 25.697L18.3217 24.0375C18.1027 24.132 17.8789 24.2196 17.6527 24.2997L16.885 27.2642C16.8515 27.3934 16.7567 27.4981 16.6317 27.5445C16.5583 27.5718 15.3721 27.9996 13.7464 27.9996ZM11.4551 26.8455C13.5517 27.4986 15.5338 27.0243 16.1525 26.8422L16.8381 24.1943C16.8292 24.1752 16.8215 24.1554 16.8155 24.1345C16.7533 23.9222 16.8718 23.6989 17.0827 23.6315C17.458 23.5114 17.8283 23.3688 18.1833 23.2073C18.3061 23.1515 18.4487 23.1599 18.5638 23.2299L21.2839 24.8824C23.2281 23.8619 24.2945 22.1248 24.6031 21.5585L23.2212 19.2109C23.1981 19.2033 23.1753 19.1936 23.1532 19.1814C22.959 19.075 22.8853 18.8332 22.987 18.6367C23.1676 18.2875 23.3296 17.9228 23.4685 17.5525C23.5159 17.4262 23.6225 17.3317 23.7535 17.2997L26.8457 16.5446C27.4988 14.4481 27.0246 12.4659 26.8425 11.8473L24.1945 11.1617C24.1754 11.1706 24.1556 11.1783 24.1348 11.1843C23.9224 11.2463 23.6992 11.128 23.6317 10.9171C23.5117 10.5416 23.369 10.1715 23.2075 9.81651C23.1517 9.69372 23.1602 9.55134 23.2301 9.436L24.8826 6.71587C23.8587 4.76395 22.1248 3.70328 21.5592 3.39645L19.2112 4.77859C19.2035 4.80165 19.1936 4.82448 19.1817 4.84655C19.0753 5.04078 18.8334 5.1147 18.637 5.01275C18.2879 4.83241 17.9231 4.67019 17.5527 4.53128C17.4265 4.4839 17.332 4.37724 17.3 4.24627L16.5449 1.15406C14.4484 0.500696 12.4662 0.975218 11.8475 1.15729L11.1619 3.80523C11.1709 3.82433 11.1786 3.84418 11.1845 3.86501C11.2468 4.07735 11.1282 4.30059 10.9174 4.36806C10.5421 4.48812 10.1717 4.63075 9.81675 4.79223C9.69397 4.84804 9.55159 4.83961 9.43624 4.76966L6.71611 3.11714C4.7642 4.14109 3.70353 5.87497 3.39669 6.44053L4.77883 8.78858C4.8019 8.79627 4.82448 8.80595 4.84655 8.8181C5.04078 8.92451 5.11469 9.16636 5.01299 9.36307C4.83241 9.71232 4.67044 10.0772 4.53153 10.4475C4.48415 10.5738 4.37749 10.6683 4.24652 10.7003L1.15431 11.4549C0.501192 13.5514 0.975466 15.5336 1.15754 16.1522L3.80548 16.8378C3.82458 16.8289 3.84443 16.8212 3.86526 16.8153C4.07759 16.753 4.30084 16.8716 4.36831 17.0824C4.48837 17.458 4.631 17.8281 4.79248 18.183C4.84829 18.3058 4.83985 18.4482 4.7699 18.5635L3.11739 21.2839C4.14134 23.2358 5.87522 24.2967 6.44078 24.6033L8.78883 23.2212C8.79652 23.1981 8.80644 23.1753 8.81835 23.1532C8.92476 22.959 9.16661 22.8853 9.36307 22.987C9.71232 23.1676 10.077 23.3296 10.4473 23.4685C10.5736 23.5159 10.6681 23.6225 10.7001 23.7535L11.4551 26.8455ZM13.9999 19.3345C11.0582 19.3345 8.6653 16.9413 8.6653 13.9999C8.6653 11.0582 11.0585 8.6653 13.9999 8.6653C16.9413 8.6653 19.3345 11.0585 19.3345 13.9999C19.3347 16.9413 16.9415 19.3345 13.9999 19.3345ZM13.9999 9.48064C11.508 9.48064 9.48064 11.508 9.48064 13.9999C9.48064 16.4918 11.508 18.5191 13.9999 18.5191C16.4918 18.5191 18.5191 16.4918 18.5191 13.9999C18.5191 11.508 16.4918 9.48064 13.9999 9.48064Z" fill="#333333"/>
</svg>

'''
'''--- src/assets/img/icons/settingOff.svg ---
<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M27.5593 16.9745C28.5508 14.1169 27.5593 11.4343 27.5593 11.4343L24.2933 10.5887C24.3033 10.625 24.3127 10.6608 24.3225 10.6968C24.1932 10.2928 24.0414 9.89901 23.8676 9.51698L25.6911 6.51547C24.3715 3.79376 21.7735 2.59786 21.7735 2.59786L18.8663 4.30943C18.9013 4.32911 18.9353 4.3493 18.9698 4.36923C18.5946 4.17528 18.2065 4.00279 17.8073 3.85305L16.9743 0.441144C14.1166 -0.550332 11.434 0.441144 11.434 0.441144L10.5885 3.70714C10.6248 3.69717 10.6605 3.68772 10.6966 3.67801C10.2926 3.80731 9.89852 3.9591 9.51675 4.13286L6.51524 2.30936C3.79353 3.62894 2.59763 6.22697 2.59763 6.22697L4.30895 9.13419C4.32862 9.09944 4.34881 9.0652 4.36874 9.0307C4.17479 9.40583 4.0023 9.79398 3.85256 10.1931L0.440656 11.0262C-0.55082 13.8838 0.440656 16.5664 0.440656 16.5664L3.70665 17.412C3.69668 17.3757 3.68723 17.3399 3.67752 17.3039C3.80682 17.7079 3.95861 18.1019 4.13237 18.4837L2.30913 21.485C3.62871 24.2067 6.22674 25.4026 6.22674 25.4026L9.13396 23.6913C9.09895 23.6716 9.06497 23.6514 9.03047 23.6315C9.40559 23.8254 9.79375 23.9979 10.1929 24.1476L11.0259 27.5595C13.8836 28.551 16.5662 27.5595 16.5662 27.5595L17.4118 24.2936C17.3755 24.3035 17.3397 24.313 17.3037 24.3227C17.7077 24.1934 18.1017 24.0416 18.4835 23.8678L21.485 25.6913C24.2067 24.3718 25.4026 21.7737 25.4026 21.7737L23.691 18.8665C23.6714 18.9015 23.6512 18.9358 23.6312 18.97C23.8252 18.5949 23.9977 18.2067 24.1474 17.8076L27.5593 16.9745ZM14.0001 19.0758C11.1969 19.0758 8.92442 16.8033 8.92442 14.0001C8.92442 11.1969 11.1969 8.9244 14.0001 8.9244C16.8033 8.9244 19.0758 11.1969 19.0758 14.0001C19.0758 16.8033 16.8033 19.0758 14.0001 19.0758Z" fill="#333333"/>
</svg>

'''
'''--- src/assets/img/icons/usdc.svg ---
<svg width="21" height="20" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
	<g clip-path="url(#clip0_736_13)">
		<path d="M13 25C20.2042 25 26 19.4271 26 12.5C26 5.57288 20.2042 0 13 0C5.79579 0 0 5.57288 0 12.5C0 19.4271 5.79579 25 13 25Z" fill="#2775CA" />
		<path d="M16.5752 14.479C16.5752 12.6561 15.4377 12.0311 13.1627 11.7708C11.5377 11.5624 11.2127 11.1458 11.2127 10.4165C11.2127 9.68725 11.7544 9.21863 12.8377 9.21863C13.8127 9.21863 14.3544 9.53113 14.6252 10.3124C14.6794 10.4686 14.8419 10.5728 15.0044 10.5728H15.871C16.0877 10.5728 16.2502 10.4165 16.2502 10.2083V10.1561C16.0335 9.01025 15.0585 8.12488 13.8127 8.02075V6.77075C13.8127 6.56238 13.6502 6.40613 13.3794 6.354H12.5669C12.3502 6.354 12.1877 6.51025 12.1335 6.77075V7.96863C10.5085 8.177 9.47939 9.21863 9.47939 10.5208C9.47939 12.2395 10.5627 12.9165 12.8377 13.177C14.3544 13.4374 14.8419 13.7499 14.8419 14.5833C14.8419 15.4166 14.0835 15.9895 13.0544 15.9895C11.646 15.9895 11.1585 15.4165 10.996 14.6353C10.9419 14.427 10.7794 14.3228 10.6169 14.3228H9.69597C9.47939 14.3228 9.31689 14.479 9.31689 14.6874V14.7395C9.53347 16.0415 10.4002 16.979 12.1877 17.2395V18.4895C12.1877 18.6978 12.3502 18.854 12.621 18.9061H13.4335C13.6502 18.9061 13.8127 18.7499 13.8669 18.4895V17.2395C15.4919 16.979 16.5752 15.8853 16.5752 14.479Z" fill="white" />
		<path d="M10.2376 19.948C6.01258 18.4897 3.84587 13.9585 5.41679 9.948C6.22929 7.7605 8.01679 6.09387 10.2376 5.31262C10.4543 5.2085 10.5626 5.05225 10.5626 4.79175V4.06262C10.5626 3.85425 10.4543 3.698 10.2376 3.646C10.1834 3.646 10.0751 3.646 10.0209 3.698C4.87508 5.2605 2.05837 10.521 3.68337 15.4689C4.65837 18.3855 6.98758 20.6251 10.0209 21.5626C10.2376 21.6667 10.4543 21.5626 10.5084 21.3542C10.5626 21.3022 10.5626 21.2501 10.5626 21.146V20.4167C10.5626 20.2605 10.4001 20.0522 10.2376 19.948ZM15.9793 3.698C15.7626 3.59387 15.5459 3.698 15.4918 3.90637C15.4376 3.9585 15.4376 4.0105 15.4376 4.11475V4.84387C15.4376 5.05225 15.6001 5.2605 15.7626 5.36475C19.9876 6.823 22.1543 11.3542 20.5834 15.3647C19.7709 17.5522 17.9834 19.2189 15.7626 20.0001C15.5459 20.1042 15.4376 20.2605 15.4376 20.521V21.2501C15.4376 21.4585 15.5459 21.6147 15.7626 21.6667C15.8168 21.6667 15.9251 21.6667 15.9793 21.6147C21.1251 20.0522 23.9418 14.7917 22.3168 9.84387C21.3418 6.87512 18.9584 4.6355 15.9793 3.698Z" fill="white" />
	</g>
	<defs>
		<clipPath id="clip0_736_13">
			<rect width="26" height="25" fill="white" />
		</clipPath>
	</defs>
</svg>

'''
'''--- src/assets/img/icons/usdt.svg ---
<svg width="21" height="20" viewBox="0 0 21 20" fill="none"
  xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_206_405)">
    <path d="M10.25 20C15.9109 20 20.5 15.5228 20.5 10C20.5 4.47715 15.9109 0 10.25 0C4.58908 0 0 4.47715 0 10C0 15.5228 4.58908 20 10.25 20Z" fill="#26A17B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.4813 10.8644V10.8631C11.4108 10.8681 11.0476 10.8894 10.2372 10.8894C9.59017 10.8894 9.13468 10.8706 8.97453 10.8631V10.865C6.48378 10.7581 4.62468 10.335 4.62468 9.82875C4.62468 9.32312 6.48378 8.9 8.97453 8.79125V10.4437C9.13725 10.455 9.60362 10.4819 10.2481 10.4819C11.0213 10.4819 11.4089 10.4506 11.4813 10.4444V8.7925C13.9669 8.90062 15.8215 9.32375 15.8215 9.82875C15.8215 10.335 13.9669 10.7569 11.4813 10.8644ZM11.4813 8.62063V7.14187H14.9496V4.88687H5.50618V7.14187H8.97453V8.62C6.15578 8.74625 4.03595 9.29125 4.03595 9.94375C4.03595 10.5962 6.15578 11.1406 8.97453 11.2675V16.0062H11.4813V11.2662C14.2956 11.14 16.4103 10.5956 16.4103 9.94375C16.4103 9.29187 14.2956 8.7475 11.4813 8.62063Z" fill="white" />
  </g>
  <defs>
    <clipPath id="clip0_206_405">
      <rect width="20.5" height="20" fill="white" />
    </clipPath>
  </defs>
</svg>
'''
'''--- src/assets/img/icons/wallet.svg ---
<svg width="32" height="24" viewBox="0 0 32 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19.9681 9.8833V14.5028C19.9681 15.7819 20.999 16.8221 22.266 16.8221H30.19V20.8959C30.19 22.5111 28.8873 23.8256 27.2862 23.8256H2.90383C1.30266 23.8256 0 22.5111 0 20.8959V3.49017C0 1.87503 1.30266 0.560547 2.90383 0.560547H27.2862C28.8873 0.560547 30.19 1.87503 30.19 3.49017V7.56456H22.266C20.999 7.56456 19.9681 8.60479 19.9681 9.8833Z" fill="#FFDDBE"/>
<path d="M30.8155 8.68945H22.2661C21.6133 8.68945 21.082 9.22502 21.082 9.88423V14.5037C21.082 15.1629 21.6133 15.6991 22.2661 15.6991H30.8155C31.4687 15.6991 32.0001 15.1629 32.0001 14.5037V9.88423C32.0001 9.22502 31.4687 8.68945 30.8155 8.68945ZM24.0922 13.4377C23.4122 13.4377 22.8592 12.8796 22.8592 12.194C22.8592 11.5084 23.4122 10.9503 24.0922 10.9503C24.7717 10.9503 25.3247 11.5084 25.3247 12.194C25.3247 12.8796 24.7717 13.4377 24.0922 13.4377Z" fill="#FFC999"/>
</svg>

'''
'''--- src/hooks/Near/classWrappers/contractFactory.ts ---
import { Contract } from "near-api-js";

export class ContractFactory<T> {
  private values: Map<string, Contract>;
  private action: (contract: Contract) => T;

  constructor(values: Map<string, Contract>, action: (contract: Contract) => T) {
    this.values = values;
    this.action = action;
  }

  get = (contractId: string) => this.values.has(contractId) ? this.action(this.values.get(contractId)!) : null;

  contracts = () => Array.from(this.values.keys());

  getAll = () => this.contracts().map(contractId => this.action(this.values.get(contractId)!));
}
'''
'''--- src/hooks/Near/classWrappers/ftContract.ts ---
import { formatNearAmount } from "near-api-js/lib/utils/format";
import { unifySymbol } from "../utils";
import { GAS_FOR_NFT_TRANSFER, STORAGE_AMOUNT } from "../constants";
import { FtToken } from "../types";
import { ContractFactory } from "./contractFactory"

export class FtContract {
  private contract: any;
  contractId: string;
  constructor(ftContract: any) {
    this.contract = ftContract;
    this.contractId = ftContract.contractId;
  }

  getFtBalanceOfOwner = async (accountId?: string): Promise<string> => {
    if (!accountId) {
      return "0";
    }
    return await this.contract.ft_balance_of({ account_id: accountId });
  };

  getFtMetadata = async (): Promise<FtToken> => {
    const metadata = await this.contract.ft_metadata();
    return { ...metadata, contractId: this.contract.contractId, symbol: unifySymbol(metadata.symbol) };
  };

  getFtBalanceOfOwnerFormatted = async (accountId: string): Promise<string> => {
    const [balanceForOwner, metadata] = await Promise.all([
      this.getFtBalanceOfOwner(accountId),
      this.getFtMetadata(),
    ]);

    const balance24Decimals = balanceForOwner + "0".repeat(24 - metadata.decimals);

    return formatNearAmount(balance24Decimals);
  };

  ftTransferCall = (receiverId: string, amount: string, msg: string, callbackUrl: string) =>
    this.contract.ft_transfer_call({
      args: {
        receiver_id: receiverId,
        amount: amount,
        msg: msg
      },
      gas: GAS_FOR_NFT_TRANSFER,
      amount: "1",
      callbackUrl,
    });

  storageDeposit = (accountId: string) =>
    this.contract.storage_deposit({
      args: {
        account_id: accountId,
      },
      amount: STORAGE_AMOUNT,
    });
}

export type FtContractFactory = ContractFactory<FtContract>;
'''
'''--- src/hooks/Near/classWrappers/index.ts ---
export * from './pegasusContract'
export * from './contractFactory'
export * from './ftContract'
'''
'''--- src/hooks/Near/classWrappers/pegasusContract.ts ---
import BigNumber from "big.js";
import { parseNearAmount } from "near-api-js/lib/utils/format";
import { unifySymbol, convertToFloat } from "../utils";
import { GAS_FOR_NFT_TRANSFER } from "../constants";
import { Project } from "../types";

import { Contract, Near } from "near-api-js";
import { FtContractFactory, FtContract } from "./ftContract";

const FETCH_COUNT = 50;

export class PegasusContract {
  pegasusContract: any;
  near: Near;

  constructor(
    pegasusContract: any,
    near: Near,
  ) {
    this.pegasusContract = pegasusContract;
    this.near = near;
  }

  getProject = async (project_id: number): Promise<Project> => {
    const res = await this.pegasusContract.get_project({ project_id: project_id });
    return res;
  };

  getProjects = async (from_index: number | null, limit: number | null): Promise<Array<Project>> => {
    const res = await this.pegasusContract.get_projects({ from_index, limit });
    return res;
  };

  getProjectsById = async (project_ids: Array<number>): Promise<Array<Project>> => {
    return await this.pegasusContract.get_projects_by_id({ project_ids });
  };

  getNumBalances = async (project_id: number, account_id: string): Promise<number> => {
    return await this.pegasusContract.get_num_balances({ project_id, account_id });
  };

  getListingFee = async (): Promise<number> => {
    return await this.pegasusContract.get_listing_fee();
  };

  getListingFeeDenominator = async (): Promise<number> => {
    return await this.pegasusContract.get_listing_fee_denominator();
  };

  getAstroDaoAccount = async (): Promise<string> => {
    return await this.pegasusContract.get_astrodao_account();
  };

  registerProject = async (
    accoun_id: string,
    inTokenContract: FtContract,
    outTokenContract: FtContract,
    title: string,
    sub_title: string,
    logo: string,
    starting_price: number,
    email: string,
    telegram: string,
    in_token_account_id: string,
    out_token_account_id: string,
    total_tokens: number,
    coingecko: string,
    facebook: string,
    instagram: string,
    twitter: string,
    description: string,
    start_time: number,
    end_time: number,
    cliff_period: number,
  ) => {
    console.log('here')
    const projectRegisterFee = BigInt(await this.getListingFee());
    const callbackUrl = `${window.location.origin}/project/`;
    const balance = await inTokenContract!.getFtBalanceOfOwner(this.pegasusContract.contractId);
    const inTokenMetadata = await inTokenContract!.getFtMetadata();
    const outTokenMetadata = await outTokenContract!.getFtMetadata();
    const projectRegisterValue = (projectRegisterFee * BigInt(10 ** inTokenMetadata.decimals))
    const attachDeposit = (projectRegisterValue);
    const totalTokens = parseNearAmount(total_tokens.toString())

    const msg = JSON.stringify({
      msg_type: true,
      msg_data: JSON.stringify({
        title,
        sub_title,
        logo,
        starting_price: starting_price * (10 ** inTokenMetadata.decimals),
        email,
        telegram,
        in_token_account_id,
        out_token_account_id,
        total_tokens: totalTokens?.substring(0, totalTokens.length - (24 - outTokenMetadata.decimals)),
        coingecko,
        facebook,
        instagram,
        twitter,
        description,
        start_time: (start_time * (10 ** 6)).toString(),
        end_time: (end_time * (10 ** 6)).toString(),
        cliff_period: cliff_period.toString(),
      })
    });
    console.log(BigNumber(balance))
    if (BigNumber(balance) > BigNumber(0)) {
      console.log('here')
      return await inTokenContract.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl);
    } else {
      console.log('2 functions hree')
      const account: any = await this.near.account(accoun_id);
      await account.signAndSendTransaction(
        this.pegasusContract.contractId,
        [
          inTokenContract.storageDeposit(this.pegasusContract.contractId),
          inTokenContract.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl),
        ],
      );
    }
  };

  activeProject = async (
    accoun_id: string,
    project_id: number,
    ftContract: FtContract,
    amount: number
  ) => {

    const callbackUrl = `${window.location.origin}/projects/`;
    const balance = await ftContract!.getFtBalanceOfOwner(this.pegasusContract.contractId);
    const metadata = await ftContract!.getFtMetadata();
    const projectRegisterValue = BigInt(amount * (10 ** metadata.decimals))
    const attachDeposit = (projectRegisterValue)

    const msg = JSON.stringify({
      msg_type: false,
      msg_data: JSON.stringify({
        project_id,
      })
    });

    if (BigNumber(balance) > BigNumber(0)) {
      return await ftContract!.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl);
    } else {
      const account: any = await this.near.account(accoun_id);
      return await account.signAndSendTransaction({
        receiverId: ftContract.contractId,
        actions: [
          ftContract!.storageDeposit(this.pegasusContract.contractId),
          ftContract!.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl),
        ],
      });
    }
  };

  projectDepositInToken = async (
    accoun_id: string,
    project_id: number,
    ftContract: FtContract,
    amount: number
  ) => {

    const callbackUrl = `${window.location.origin}/project/${project_id}`;

    const balance = await ftContract!.getFtBalanceOfOwner(this.pegasusContract.contractId);
    const metadata = await ftContract!.getFtMetadata();
    const attachDeposit = BigInt(amount * (10 ** metadata.decimals))
    console.log(attachDeposit)

    const msg = JSON.stringify({
      msg_type: false,
      msg_data: JSON.stringify({
        project_id,
      })
    });

    if (BigNumber(balance) > BigNumber(0)) {
      return await ftContract!.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl);
    } else {
      const account: any = await this.near.account(accoun_id);
      await account.signAndSendTransaction({
        receiverId: this.pegasusContract.contractId,
        actions: [
          ftContract!.storageDeposit(this.pegasusContract.contractId),
          ftContract!.ftTransferCall(this.pegasusContract.contractId, attachDeposit.toString(), msg, callbackUrl),
        ],
      });
    }
  };

  projectWithdrawInToken = async (
    project_id: number,
    amount: number | null
  ) => {
    const callbackUrl = `${window.location.origin}`;
    const amountBalance = parseNearAmount(amount?.toString())

    return await this.pegasusContract.project_withdraw_in_token({
      args: {
        project_id,
        amount: amountBalance?.substring(0, amountBalance.length - (24 - 6))
      },
      amount: 1,
      // attachDeposit: parseNearAmount('1'),
      callbackUrl,
    });
  };

  projectWithdrawOutToken = async (
    project_id: number,
    amount: number | null
  ) => {

    const raffleCreationFee = BigInt(await this.getListingFee());

    const attachDeposit = (raffleCreationFee);
    const callbackUrl = `${window.location.origin}/projects/`;

    return await this.pegasusContract.project_withdraw_out_token({
      args: {
        project_id,
        amount
      },
      amount: attachDeposit.toString(),
      callbackUrl,
    });
  };

}

'''
'''--- src/hooks/Near/constants.ts ---
export const GAS_FOR_NFT_TRANSFER = "120000000000000";
export const MAX_GAS = "300000000000000";
export const STORAGE_AMOUNT = "1250000000000000000000";
'''
'''--- src/hooks/Near/environment.ts ---
import { getConfig } from "./config";

export const nearConfig = getConfig(process.env.REACT_APP_ENVIRONMENT || "development");

'''
'''--- src/hooks/Near/hooks.ts ---
import { SelectorAccount } from "./walletSelector";
import { WalletSelectorModal } from "@near-wallet-selector/modal-ui";
import { useContext, createContext, useState, useEffect } from "react";
import { Contract, Near } from "near-api-js";
import { Buffer } from "buffer";
import { NearAppConfig } from "./config";
import { WalletSelector } from "@near-wallet-selector/core";
import { MultiWalletConnection } from "./types";
import { useSearchParams } from "react-router-dom";
import { nearConfig } from "./environment";
import { refreshWalletConnection } from "./walletSelector";
import { PegasusContract, FtContract } from "./classWrappers";
import { INearContext } from "./near";

export const NearContext = createContext<INearContext | null>(null);

export const useNearContext = (onSignOut?: () => Promise<void>): INearContext => {
    const [walletConnection, setWalletConnection] = useState<MultiWalletConnection | null>(null);
    const [role, setRole] = useState<string>('user');
    const context = useContext(NearContext);
    if (context === null) {
        throw new Error("useNear must be used within a NearProvider.");
    }

    const getRole = async () => {
        const astroAccountId = await context.pegasusContract.getAstroDaoAccount();
        setRole(astroAccountId)
    }

    useEffect(() => {
        getRole()
    }, [])

    useEffect(() => {
        const interval = setInterval(() => {
            refreshWalletConnection(context.selector, context.keyStore, context.config).then(
                (_walletConnection) => {
                    if (
                        walletConnection == null ||
                        _walletConnection.isLoggedIn !== walletConnection.isLoggedIn ||
                        _walletConnection.accountId !== walletConnection.accountId
                    ) {
                        if (!_walletConnection.isLoggedIn) {
                            if (onSignOut) {
                                onSignOut();
                            }
                        }

                        setWalletConnection({
                            ..._walletConnection,
                            signOut: async () => {
                                return await _walletConnection.signOut();
                            },
                        });
                    }
                }
            );
            context.wallet.refresh(context.selector);
        }, 200);
        return () => clearInterval(interval);
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [walletConnection]);

    return {
        ...context,
        walletConnection: walletConnection || context.walletConnection,
        role: role
    };
};

export function useNearLogin() {
    const context = useNearContext();

    const accountId = context.walletConnection.accountId;

    const signInNear = () => {
        context.modal.show();
    };

    const signOutNear = () => {
        context.walletConnection.signOut();
    };

    return {
        isLoggedInNear: context.walletConnection.isLoggedIn,
        accountIdNear: accountId || "",
        signInNear,
        signOutNear,
    };
}

export const useNearLinks = () => {
    const getAccountExplorer = (accountId: string) => {
        return `${nearConfig.explorerUrl}/accounts/${accountId}`;
    };

    return {
        getAccountExplorer,
    };
};

interface RawFunctionCall {
    argsB64: string;
    gas: number;
    deposit: string;
    methodName: string;
}

type TxOutcomeSuccess = {
    success: true;
    successValue: any;
    originalFunctionCall?: RawFunctionCall;
    txHash: string;
};

type TxOutcomeFailed = {
    success: false;
    errorCode: string;
    errorMessage: string;
    originalFunctionCall?: RawFunctionCall;
    txHash?: string;
};

type TxOutcome = TxOutcomeSuccess | TxOutcomeFailed;

export const useTxOutcome = (onTxOutcome: (outcome: TxOutcome) => void) => {
    const [searchParams, setSearchParams] = useSearchParams();
    const context = useNearContext();

    const { near, walletConnection } = context;

    const getTxOutcome = async (txHash: string): Promise<TxOutcome> => {
        const result = await near.connection.provider.txStatus(
            txHash,
            walletConnection.accountId || ""
        );
        if (result.transaction.actions.length > 0) {
            console.warn("Handling multiple TXs are not supported in TX Outcome");
        }
        const action = result.transaction.actions[0];
        const originalCall: RawFunctionCall | undefined = action.FunctionCall
            ? {
                argsB64: action.FunctionCall.args,
                deposit: action.FunctionCall.deposit,
                gas: action.FunctionCall.gas,
                methodName: action.FunctionCall.method_name,
            }
            : undefined;

        if ("SuccessValue" in (result.status as any)) {
            try {
                const successValue = JSON.parse(
                    Buffer.from((result.status as any).SuccessValue, "base64").toString()
                );
                return {
                    success: true,
                    successValue,
                    originalFunctionCall: originalCall,
                    txHash,
                };
            } catch { }
            return {
                success: true,
                successValue: null,
                originalFunctionCall: originalCall,
                txHash,
            };
        }
        return {
            success: false,
            errorCode: "txFailed",
            errorMessage: "Transaction failed",
            originalFunctionCall: originalCall,
            txHash,
        };
    };

    const parseTxFailed = (errorCode: string, errorMessage: string): TxOutcome => {
        const decodedError = decodeURIComponent(errorMessage);
        if (decodedError.startsWith(`{"index"`)) {
            try {
                const parsed = decodedError.endsWith("}")
                    ? JSON.parse(decodedError)
                    : JSON.parse(`${decodedError}"}}`);
                if ("kind" in parsed && "ExecutionError" in parsed.kind) {
                    return {
                        success: false,
                        errorCode,
                        errorMessage: parsed.kind.ExecutionError,
                    };
                }
            } catch { }
        }

        return {
            success: false,
            errorCode,
            errorMessage: decodedError,
        };
    };

    useEffect(() => {
        const txHashes = searchParams.get("transactionHashes") || "";
        searchParams.delete("transactionHashes");
        const errorCode = searchParams.get("errorCode");
        searchParams.delete("errorCode");
        const errorMessage = searchParams.get("errorMessage") || "";
        searchParams.delete("errorMessage");
        if (txHashes || errorCode || errorMessage) {
            setSearchParams(searchParams);
        }

        if (txHashes) {
            const [txHash] = txHashes.split(",");
            getTxOutcome(txHash).then(onTxOutcome);
        }
        if (errorCode) {
            const txOutcome = parseTxFailed(errorCode, errorMessage);
            onTxOutcome(txOutcome);
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [searchParams]);
};

'''
'''--- src/hooks/Near/types.ts ---
import { FtContract } from "./classWrappers";

export type RaffleId = number;

export interface MultiWalletConnection {
  isLoggedIn: boolean;
  accountId: string | null;
  signOut: () => Promise<void>;
  sign: (message: string) => Promise<SignOutcome>;
}

export interface SignOutcome {
  accountId: string;
  message: string;
  publicKey: string;
  signature: string;
}

export interface FtToken {
  contractId: string;
  symbol: string;
  decimals: number;
  name: string;
  icon?: string;
}

export const nearFtMetadata: FtToken = {
  contractId: "near",
  name: "near",
  symbol: "near",
  decimals: 24,
};

export interface Investors {
  accountId: string,
  balance: number
}

export interface Project {
  project_id: number,
  owner_id: string,
  title: string,
  sub_title: string,
  logo: string,
  starting_price: number,
  email: string,
  telegram: string,
  in_token_account_id: string,
  out_token_account_id: string,
  total_tokens: number,
  coingecko: string | null,
  facebook: string | null,
  instagram: string | null,
  twitter: string | null,
  description: string,
  start_time: number,
  end_time: number,
  cliff_period: number,
  total_deposits: number,
  current_block_height: string,
  start_block_height: string,
  end_block_height: string | null,
  is_activated: boolean,
  investors: number
}

export interface ProjectInput {
  title: string,
  subTitle: string,
  outTokenId: string,
  inTokenId: string,
  logo: string,
  startingPrice: number,
  email: string,
  telegram: string,
  totalTokens: number,
  coingecko: string,
  facebook: string,
  instagram: string,
  twitter: string,
  description: string,
  startTime: number,
  endTime: number,
  cliffPeriod: number,
}

export interface RegisterProjectParameters extends ProjectInput {
  accountId: string,
  inTokenContract: FtContract,
  outTokenContract: FtContract,
}

export interface DepositProjectParameters {
  accountId: string,
  projectId: number,
  ftContract: FtContract,
  amount: number
}
'''
'''--- src/hooks/Near/utils.ts ---
import { formatNearAmount } from "near-api-js/lib/utils/format";

export const cutDecimal = (value: number, fix = 3) => {
    return Math.trunc(value * Math.pow(10, fix)) / Math.pow(10, fix);
};

export const convertToFloat = (value: string, fix = 3, decimal = 24) => {
    return cutDecimal(
        parseFloat(formatNearAmount(value + "0".repeat(24 - decimal)).replaceAll(",", "")),
        fix
    );
};

export const bytesToHex = (bytes: any) => {
    for (var hex = [], i = 0; i < bytes.length; i++) {
        var current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];
        hex.push((current >>> 4).toString(16));
        hex.push((current & 0xf).toString(16));
    }
    return hex.join("");
};

export const unifySymbol = (symbol: string) => {
    if (!symbol || symbol === "near" || symbol.startsWith("$")) {
        return symbol;
    }
    const res = `$${symbol}`;
    return res;
};
'''
'''--- src/hooks/color.ts ---
import { MoonIcon, SunIcon } from '@chakra-ui/icons';
import { ComponentWithAs, IconProps, useColorModeValue } from '@chakra-ui/react';
import BlackLogo from "../assets/img/pegasus_black.png"
import WhiteLogo from "../assets/img/pegasus_white.png"

interface ColorHookResult {
  changeMode: ComponentWithAs<"svg", IconProps>
  logoMode: string
  background: string
  required: string
  input: string
  inputbg: string
  placeholder: string
  border: string
  currencySymbol: string
  currencyValue: string
  contact: string
  cardBorder: string
  fadeText: string
  black: string
  main: string
  panelbg: string
  progressStatus: string
  yellow: string
  green: string
  blue: string
  lightBlue: string
  lightGreen: string
}

export const useColor = (): ColorHookResult => {
  const changeMode = useColorModeValue(MoonIcon, SunIcon);
  const logoMode = useColorModeValue(BlackLogo, WhiteLogo);
  const background = useColorModeValue("white", "brand.900");
  const required = useColorModeValue('#F43F5E', 'black')
  const input = useColorModeValue('rock.800', 'white')
  const inputbg = useColorModeValue('rock.50', 'white')
  const placeholder = useColorModeValue('rock.300', 'gray.500')
  const border = useColorModeValue('rock.100', 'white')
  const currencySymbol = useColorModeValue('#F43F5E', 'white')
  const currencyValue = useColorModeValue('#FDA4AF', 'gray.50')
  const contact = useColorModeValue('#10B981', '#90B989')
  const cardBorder = useColorModeValue('brand.500', 'white')
  const fadeText = useColorModeValue('rock.400', 'white')
  const black = useColorModeValue('black', 'rock.900')
  const main = useColorModeValue('brand.500', 'white')
  const panelbg = useColorModeValue('brand.100', 'black')
  const progressStatus = useColorModeValue('rock.500', 'gray.100')
  const yellow = useColorModeValue('#cda900', '#3286ff')
  const green = useColorModeValue('#26a17b', '#d94e82')
  const blue = useColorModeValue('#2079FF', '#df8600')
  const lightBlue = useColorModeValue('#76deff', '#892100')
  const lightGreen = useColorModeValue('#34d399', '#cb2c00');

  return {
    changeMode,
    logoMode,
    background,
    required,
    input,
    inputbg,
    placeholder,
    border,
    currencySymbol,
    currencyValue,
    contact,
    cardBorder,
    fadeText,
    black,
    main,
    panelbg,
    progressStatus,
    yellow,
    green,
    blue,
    lightBlue,
    lightGreen
  };
};
'''
'''--- src/hooks/index.ts ---
export * from './color'
export * from './Near'
export * from './project'
'''
'''--- src/hooks/project.ts ---
import { useMemo } from "react";
import { useQuery } from "react-query";
import { useNearLogin, useNearContext, useTxOutcome, RegisterProjectParameters, DepositProjectParameters } from "./Near";
import { LoadableResult, } from "../types";
import { Project } from "./Near";

interface ProjectResult {
  project: LoadableResult<Project>;
  reload: () => void;
}

interface ProjectsResult {
  projects: LoadableResult<Project[]>;
  reload: () => void;
}

export const useProject = (projectId: number): ProjectResult => {
  const { pegasusContract } = useNearContext();
  const { accountIdNear } = useNearLogin();

  const projectInfo = useQuery(
    ["fetchProjectInfoRaw", projectId, accountIdNear],
    async (): Promise<Project> => {
      const project: Project = await pegasusContract.getProject(projectId);
      return project
    },
    {
      enabled: Number(projectId) >= 0,
      cacheTime: 0,
    }
  );
  const project = useMemo((): LoadableResult<Project> => {
    if (projectInfo.isLoading) {
      return { isLoading: true, isError: false };
    }
    if (projectInfo.isError) {
      return { isLoading: false, isError: true, error: `${projectInfo.error}` };
    }

    const result = projectInfo.data!;

    return { isLoading: false, isError: false, value: result };

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [projectInfo.isLoading, projectInfo.isError, projectInfo.data, projectInfo.isRefetching]);

  return {
    project,
    reload: () => projectInfo.refetch(),
  };
}

interface GetBalance {
  getBalance: (projectId: number) => Promise<number>;
}

export const useBalance = (): GetBalance => {
  const { pegasusContract } = useNearContext();
  const { accountIdNear } = useNearLogin();

  const getBalance = async (projectId: number) => {
    const balance: number = await pegasusContract.getNumBalances(projectId, accountIdNear);
    return balance
  }

  return {
    getBalance
  }
}

export const useProjects = (startNum: number | null, limit: number | null): ProjectsResult => {
  const { pegasusContract } = useNearContext();
  const { accountIdNear } = useNearLogin();

  const projectInfo = useQuery(
    ["fetchProjectsInfoRaw", "allProjects", accountIdNear],
    async (): Promise<Project[] | null> => {
      const projects: Project[] = await pegasusContract.getProjects(startNum, limit);
      return projects
    }
  );
  const projects = useMemo((): LoadableResult<Project[]> => {
    if (projectInfo.isLoading) {
      return { isLoading: true, isError: false };
    }
    if (projectInfo.isError) {
      return { isLoading: false, isError: true, error: `${projectInfo.error}` };
    }

    const result = projectInfo.data!;

    return { isLoading: false, isError: false, value: result };

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [projectInfo.isLoading, projectInfo.isError, projectInfo.data, projectInfo.isRefetching]);

  return {
    projects,
    reload: () => projectInfo.refetch(),
  };
}

interface RegisterProject {
  registerProject: (params: RegisterProjectParameters) => Promise<number>;
  useProjectRegistered: (action: (projectId: number) => void) => void;
}

export const useRegisterProject = (): RegisterProject => {
  const { pegasusContract } = useNearContext();

  const registerProject = async (params: RegisterProjectParameters): Promise<number> => {
    const projectId = await pegasusContract
      .registerProject(
        params.accountId,
        params.inTokenContract,
        params.outTokenContract,
        params.title,
        params.subTitle,
        params.logo,
        params.startingPrice,
        params.email,
        params.telegram,
        params.inTokenId,
        params.outTokenId,
        params.totalTokens,
        params.coingecko,
        params.facebook,
        params.instagram,
        params.twitter,
        params.description,
        params.startTime,
        params.endTime,
        params.cliffPeriod,
      );
    return projectId;
  }

  const useProjectRegistered = (action: (projectId: number) => void) => {
    useTxOutcome((outcome) => {
      if (outcome.success && outcome.originalFunctionCall?.methodName === "register_project") {
        action(outcome.successValue as number);
      }
    });
  }

  return {
    registerProject,
    useProjectRegistered,
  }
}

interface ActiveProject {
  activeProject: (
    params: DepositProjectParameters
  ) => Promise<number>;
}

export const useActiveProject = (): ActiveProject => {
  const { pegasusContract } = useNearContext();

  const activeProject = async (params: DepositProjectParameters): Promise<number> => {
    const projectId = await pegasusContract
      .activeProject(
        params.accountId,
        params.projectId,
        params.ftContract,
        params.amount
      );
    return projectId;
  }

  return {
    activeProject,
  }
}

interface ProjectDepositInToken {
  projectDepositInToken: (params: DepositProjectParameters) => Promise<number>;
}

export const useDepositInToken = (): ProjectDepositInToken => {
  const { pegasusContract } = useNearContext();

  const projectDepositInToken = async (params: DepositProjectParameters): Promise<number> => {
    const projectId = await pegasusContract
      .projectDepositInToken(
        params.accountId,
        params.projectId,
        params.ftContract,
        params.amount
      );
    return projectId;
  }

  return {
    projectDepositInToken,
  }
}

interface projectWithdrawInToken {
  projectWithdrawInToken: (params: { projectId: number, amount: number | null }) => Promise<number>;
}

export const useWithdrawInToken = (): projectWithdrawInToken => {
  const { pegasusContract } = useNearContext();

  const projectWithdrawInToken = async (params: { projectId: number, amount: number | null }): Promise<number> => {
    const projectId = await pegasusContract
      .projectWithdrawInToken(
        params.projectId,
        params.amount,
      );
    return projectId;
  }

  return {
    projectWithdrawInToken,
  }
}

interface ProjectWithdrawOutToken {
  projectWithdrawOutToken: (params: { projectId: number, amount: number | null }) => Promise<number>;
}

export const useWithdrawOutToken = (): ProjectWithdrawOutToken => {
  const { pegasusContract } = useNearContext();

  const projectWithdrawOutToken = async (params: { projectId: number, amount: number | null }): Promise<number> => {
    const projectId = await pegasusContract
      .projectWithdrawOutToken(
        params.projectId,
        params.amount,
      );
    return projectId;
  }

  return {
    projectWithdrawOutToken,
  }
}

'''
'''--- src/index.css ---
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

@import '@near-wallet-selector/modal-ui/styles.css';
@import 'bootstrap/dist/css/bootstrap.min.css';

@import url("https://fonts.googleapis.com/css?family=DM+Sans");

::-webkit-scrollbar {
  width: 5px;
}

::-webkit-scrollbar-thumb {
  background: #391b56;
  border-radius: 8px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px #391b56;
  border-radius: 10px;
}
'''
'''--- src/logo.svg ---
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
'''
'''--- src/react-app-env.d.ts ---
/// <reference types="react-scripts" />

interface Window {
  ethereum: any
  web3: any
}

declare module "*.png";
declare module "*.svg";
declare module "*.jpeg";
declare module "*.jpg";
declare module "*.mp4";

'''
'''--- src/reportWebVitals.ts ---
import { ReportHandler } from 'web-vitals';

const reportWebVitals = (onPerfEntry?: ReportHandler) => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

'''
'''--- src/setupTests.ts ---
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

'''
'''--- src/theme/index.ts ---
import { Theme as ThemeBase, extendTheme, theme as themeBase, ColorHues } from '@chakra-ui/react';
import { mode } from '@chakra-ui/theme-tools';

const theme = extendTheme({
  fonts: {
    heading: '"DM Sans", cursive',
    body: '"Nunito Sans", sans-serif',
  },
  config: {
    initialColorMode: 'light'
  },
  colors: {
    brand: {
      50: '#F9FAFB',
      100: '#E5E7EB',
      200: '#f8c676',
      300: '#f7bd5f',
      400: '#f3a01b',
      500: '#D5B5FF',
      600: '#c28016',
      700: '#aa7013',
      800: '#926010',
      900: '#391b56'
    },
    rock: {
      50: '#F9FAFB',
      100: '#E5E7EB',
      200: '#9CA3AF',
      300: '#D1D5DB',
      400: '#9CA3AF',
      500: '#993FF4',
      600: '#c28016',
      700: '#aa7013',
      800: '#4B5563',
      900: '#374151'
    }
  },
  styles: {
    global: (props: any) => ({
      body: {
        backgroundColor: mode('white', 'brand.900')(props),
        color: mode('brand.500', 'white')(props)
      },
      heading: {
        color: mode('brand.500', 'white')(props)
      },
      h1: {
        color: mode('rock.900', 'gray.500')(props)
      },
      h2: {
        color: mode('rock.300', 'black')(props)
      },
      h3: {
        color: mode('rock.800', 'white')(props)
      },
      h5: {
        color: mode('rock.900', 'white')(props)
      },
      menu1: {
        color: mode('rock.300', 'white')(props)
      }
    })
  }
}) as (ThemeBase & {
  colors: (typeof themeBase.colors) & {
    brand: ColorHues,
    rock: ColorHues
  }
});

export default theme;

'''
'''--- src/types/index.ts ---
export * from './listing'
export * from './nft'
export * from './project'
'''
'''--- src/types/listing.ts ---
export interface FtTokenDetail {
  name: string
  symbol: string
  icon: string
  supply: number
  price: number
}

export interface ListingDetail {
  fromToken: FtTokenDetail
  toToken: FtTokenDetail
  startTime: number
  endTime: number
  progress: number
}
'''
'''--- src/types/nft.ts ---
export const NftImageType = 'image/jpeg,image/png,image/gif,image/svg,image/webp';
'''
'''--- src/types/project.ts ---
type LoadingResult = {
  isLoading: true;
  isError: false;
};

type ErrorLoadingResult = {
  isLoading: false;
  isError: true;
  error: string;
};

type LoadedResult<T> = {
  isLoading: false;
  isError: false;
  value: T;
};

export type LoadableResult<T> = LoadingResult | ErrorLoadingResult | LoadedResult<T>;

'''
'''--- src/utils/const.ts ---
export const FullMonthNames = [
  "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
];

export const ShortMonthNames = [
  "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
];

export const Payment = ['$', 'USDT', 'USDC', 'NEAR'];

export const TimeDivision = 1000000;

export const TokenDecimals = {
  usdt: 10 ** 6,
  usdc: 10 ** 6,
  near: 10 ** 24
}
'''
'''--- src/utils/string.ts ---
const toCamel = (str: string) => {
  return str.replace(/([-_][a-z])/gi, ($1) => {
    return $1.toUpperCase().replace("-", "").replace("_", "");
  });
};

const isArray = function (a: any) {
  return Array.isArray(a);
};

const isObject = function (o: any) {
  return o === Object(o) && !isArray(o) && typeof o !== "function";
};

export const keysToCamel = function (o: any) {
  if (isObject(o)) {
    const n = {};

    Object.keys(o).forEach((k: string) => {
      // n.toCamel(k) = keysToCamel(o[k]);
    });

    return n;
  } else if (isArray(o)) {
    return o.map((i: any) => {
      return keysToCamel(i);
    });
  }

  return o;
};

'''
'''--- src/utils/style.ts ---
export enum directionProp {
    column = 'column',
    row = 'row'
}
'''
'''--- src/utils/tokens.ts ---
import { FtTokenDetail } from "../types/listing";
import USDT from "../assets/img/icons/usdt.svg"
import DISC from "../assets/img/icons/disc.svg"
import NEAR from "../assets/img/icons/near.svg"
import CHR from "../assets/img/icons/chr.svg"
import SEAT from "../assets/img/icons/seat.svg"

export const token1: FtTokenDetail = {
  name: 'Tether USD',
  symbol: 'USDT.e',
  icon: USDT,
  supply: 541025,
  price: 0
};
export const token2: FtTokenDetail = {
  name: 'Discovol Token',
  symbol: 'DISC',
  icon: DISC,
  supply: 13892458,
  price: 0
};
export const token3: FtTokenDetail = {
  name: 'Wrapped NEAR',
  symbol: 'NEAR',
  icon: NEAR,
  supply: 0.0,
  price: 0
};
export const token4: FtTokenDetail = {
  name: 'CHROMIA TOKEN',
  symbol: 'CHR',
  icon: CHR,
  supply: 0.0,
  price: 0
};
export const token5: FtTokenDetail = {
  name: 'SeatlabNFT',
  symbol: 'SEAT',
  icon: SEAT,
  supply: 0.0,
  price: 0
};
'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": [
    "src"
  ]
}

'''