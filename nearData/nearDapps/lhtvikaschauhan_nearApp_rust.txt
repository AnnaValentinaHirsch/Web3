*GitHub Repository "lhtvikaschauhan/nearApp_rust"*

'''--- .gitpod.yml ---
tasks:
  - init: yarn
    command: yarn dev
ports:
  - port: 1234
    onOpen: open-browser

'''
'''--- README.md ---
near-blank-project
==================

This [React] app was initialized with [create-near-app]

Quick Start
===========

To run this project locally:

1. Prerequisites: Make sure you've installed [Node.js] â‰¥ 12
2. Install dependencies: `yarn install`
3. Run the local development server: `yarn dev` (see `package.json` for a
   full list of `scripts` you can run with `yarn`)

Now you'll have a local development environment backed by the NEAR TestNet!

Go ahead and play with the app and the code. As you make code changes, the app will automatically reload.

Exploring The Code
==================

1. The "backend" code lives in the `/contract` folder. See the README there for
   more info.
2. The frontend code lives in the `/frontend` folder. `/frontend/index.html` is a great
   place to start exploring. Note that it loads in `/frontend/assets/js/index.js`, where you
   can learn how the frontend connects to the NEAR blockchain.
3. Tests: there are different kinds of tests for the frontend and the smart
   contract. See `contract/README` for info about how it's tested. The frontend
   code gets tested with [jest]. You can run both of these at once with `yarn
   run test`.

Deploy
======

Every smart contract in NEAR has its [own associated account][NEAR accounts]. When you run `yarn dev`, your smart contract gets deployed to the live NEAR TestNet with a throwaway account. When you're ready to make it permanent, here's how.

Step 0: Install near-cli (optional)
-------------------------------------

[near-cli] is a command line interface (CLI) for interacting with the NEAR blockchain. It was installed to the local `node_modules` folder when you ran `yarn install`, but for best ergonomics you may want to install it globally:

    yarn install --global near-cli

Or, if you'd rather use the locally-installed version, you can prefix all `near` commands with `npx`

Ensure that it's installed with `near --version` (or `npx near --version`)

Step 1: Create an account for the contract
------------------------------------------

Each account on NEAR can have at most one contract deployed to it. If you've already created an account such as `your-name.testnet`, you can deploy your contract to `near-blank-project.your-name.testnet`. Assuming you've already created an account on [NEAR Wallet], here's how to create `near-blank-project.your-name.testnet`:

1. Authorize NEAR CLI, following the commands it gives you:

      near login

2. Create a subaccount (replace `YOUR-NAME` below with your actual account name):

      near create-account near-blank-project.YOUR-NAME.testnet --masterAccount YOUR-NAME.testnet

Step 2: set contract name in code
---------------------------------

Modify the line in `src/config.js` that sets the account name of the contract. Set it to the account id you used above.

    const CONTRACT_NAME = process.env.CONTRACT_NAME || 'near-blank-project.YOUR-NAME.testnet'

Step 3: deploy!
---------------

One command:

    yarn deploy

As you can see in `package.json`, this does two things:

1. builds & deploys smart contract to NEAR TestNet
2. builds & deploys frontend code to GitHub using [gh-pages]. This will only work if the project already has a repository set up on GitHub. Feel free to modify the `deploy` script in `package.json` to deploy elsewhere.

Troubleshooting
===============

On Windows, if you're seeing an error containing `EPERM` it may be related to spaces in your path. Please see [this issue](https://github.com/zkat/npx/issues/209) for more details.

  [React]: https://reactjs.org/
  [create-near-app]: https://github.com/near/create-near-app
  [Node.js]: https://nodejs.org/en/download/package-manager/
  [jest]: https://jestjs.io/
  [NEAR accounts]: https://docs.near.org/docs/concepts/account
  [NEAR Wallet]: https://wallet.testnet.near.org/
  [near-cli]: https://github.com/near/near-cli
  [gh-pages]: https://github.com/tschaub/gh-pages

'''
'''--- contract/Cargo.toml ---
[package]
name = "greeter"
version = "1.0.0"
authors = ["Near Inc <hello@near.org>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-sdk = "4.0.0"
uint = { version = "0.9.3", default-features = false }

[profile.release]
codegen-units = 1
opt-level = "z"
lto = true
debug = false
panic = "abort"
overflow-checks = true

[workspace]
members = []

'''
'''--- contract/README.md ---
near-blank-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- contract/src/lib.rs ---
#![allow(non_snake_case)]
#![allow(unused_variables)]
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::LookupMap;
use near_sdk::{log, env, near_bindgen, AccountId, Promise};
#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize)]
pub struct TaskCreator {
    memo: LookupMap<AccountId, Vec<String>>,
}
impl Default for TaskCreator {
    fn default() -> Self {
        Self {
            memo: LookupMap::new(b"memo".to_vec()),
        }
    }
}
#[near_bindgen]
impl TaskCreator {
    // Change Method
    pub fn addTasks(&mut self, assigne: String, taskNumber: String, Description: String, Task_heading: String) {
  log!("Adding New Task");
        let account_id = env::signer_account_id();
        let contains_user = self.memo.contains_key(&account_id);
        if contains_user {
            let mut temp_list = match self.memo.get(&account_id) {
                Some(x) => x,
                None => vec![],
            };
            temp_list.push( taskNumber + "___" + &Task_heading + "___" + &Description + "___" +&assigne);
            self.memo.insert(&account_id, &temp_list);
        } else {
            let fresh_vec = vec![taskNumber + "___" + &Task_heading + "___" + &Description + "___" +&assigne];
            self.memo.insert(&account_id, &fresh_vec);
        }
    }
    // send Task
    pub fn Task_Allocated(&mut self,
        account_id: AccountId,
        taskNumber: f64,
        Taskheading: String,
        Description: String,) 
        {
        Promise::new(account_id).transfer(taskNumber as u128);
        }
    // View Methods
    pub fn getTasks(self, user: AccountId) -> Vec<String> {
        match self.memo.get(&user) {
            Some(x) => x,
            None => vec![],
        }
    }
}
'''
'''--- contract/target/.rustc_info.json ---
{"rustc_fingerprint":13850779235621484949,"outputs":{"10376369925670944939":{"success":true,"status":"","code":0,"stdout":"___\nlib___.rlib\nlib___.so\nlib___.so\nlib___.a\nlib___.so\n/home/vikas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu\ndebug_assertions\npanic=\"unwind\"\nproc_macro\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"gnu\"\ntarget_family=\"unix\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"sse\"\ntarget_feature=\"sse2\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_os=\"linux\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nunix\n","stderr":""},"15697416045686424142":{"success":false,"status":"exit status: 1","code":1,"stdout":"","stderr":"error: `-Csplit-debuginfo` is unstable on this platform\n\n"},"16190320590097772098":{"success":true,"status":"","code":0,"stdout":"___.wasm\nlib___.rlib\n___.wasm\nlib___.a\n/home/vikas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu\ndebug_assertions\npanic=\"abort\"\nproc_macro\ntarget_arch=\"wasm32\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_family=\"wasm\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_os=\"unknown\"\ntarget_pointer_width=\"32\"\ntarget_vendor=\"unknown\"\n","stderr":"warning: dropping unsupported crate type `dylib` for target `wasm32-unknown-unknown`\n\nwarning: dropping unsupported crate type `proc-macro` for target `wasm32-unknown-unknown`\n\nwarning: 2 warnings emitted\n\n"},"4614504638168534921":{"success":true,"status":"","code":0,"stdout":"rustc 1.62.0 (a8314ef7d 2022-06-27)\nbinary: rustc\ncommit-hash: a8314ef7d0ec7b75c336af2c9857bfaf43002bfc\ncommit-date: 2022-06-27\nhost: x86_64-unknown-linux-gnu\nrelease: 1.62.0\nLLVM version: 14.0.5\n","stderr":""},"865783370946673908":{"success":false,"status":"exit status: 1","code":1,"stdout":"","stderr":"error: `-Csplit-debuginfo` is unstable on this platform\n\n"}},"successes":{}}
'''
'''--- contract/target/release/.fingerprint/Inflector-2de20e4408f9ec62/lib-inflector.json ---
{"rustc":12645123470573756683,"features":"[]","target":15157828903313475237,"profile":89792565241913630,"path":11439790613207455027,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/Inflector-2de20e4408f9ec62/dep-lib-inflector"}}],"rustflags":[],"metadata":6849597462678386541,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/ahash-a7a678e2090df5d3/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[]","target":13294766831966498538,"profile":89792565241913630,"path":12129881866222000906,"deps":[[16079472387499994964,"version_check",false,1638394845375367371]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/ahash-a7a678e2090df5d3/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/borsh-derive-5d1e3cff7bdd0524/lib-borsh-derive.json ---
{"rustc":12645123470573756683,"features":"[]","target":4089840889381527766,"profile":89792565241913630,"path":15236262336906006179,"deps":[[2345288959107110519,"borsh_schema_derive_internal",false,11013716809121729986],[2404243893358302026,"syn",false,13135455508987098680],[3810671027919804530,"proc_macro2",false,11156431575103427187],[3971538142687143787,"proc_macro_crate",false,2044237446571838562],[8324001644593655249,"borsh_derive_internal",false,10261201974566072594]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-derive-5d1e3cff7bdd0524/dep-lib-borsh-derive"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/borsh-derive-internal-16a4179a0a1b1d9f/lib-borsh-derive-internal.json ---
{"rustc":12645123470573756683,"features":"[]","target":1036412639898795334,"profile":89792565241913630,"path":1881760961346579910,"deps":[[1968780565650827610,"quote",false,6758588060944213828],[2404243893358302026,"syn",false,13135455508987098680],[3810671027919804530,"proc_macro2",false,11156431575103427187]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-derive-internal-16a4179a0a1b1d9f/dep-lib-borsh-derive-internal"}}],"rustflags":[],"metadata":6341613096556135379,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/borsh-schema-derive-internal-6f30330159e3917f/lib-borsh-schema-derive-internal.json ---
{"rustc":12645123470573756683,"features":"[]","target":5421563452239655410,"profile":89792565241913630,"path":11347088768253682346,"deps":[[1968780565650827610,"quote",false,6758588060944213828],[2404243893358302026,"syn",false,13135455508987098680],[3810671027919804530,"proc_macro2",false,11156431575103427187]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/borsh-schema-derive-internal-6f30330159e3917f/dep-lib-borsh-schema-derive-internal"}}],"rustflags":[],"metadata":7685215035480038221,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/crunchy-1b657baab0a0a6f9/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[]","target":2709041430195671023,"profile":89792565241913630,"path":3365904331806681529,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/crunchy-1b657baab0a0a6f9/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":5553159513701433177,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/near-sdk-macros-b84c07b2c879f8e7/lib-near-sdk-macros.json ---
{"rustc":12645123470573756683,"features":"[]","target":2024342235666230958,"profile":89792565241913630,"path":10946069719939180909,"deps":[[1968780565650827610,"quote",false,6758588060944213828],[2404243893358302026,"syn",false,13135455508987098680],[3810671027919804530,"proc_macro2",false,11156431575103427187],[7454270075138479745,"inflector",false,150613452236099435]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/near-sdk-macros-b84c07b2c879f8e7/dep-lib-near-sdk-macros"}}],"rustflags":[],"metadata":9520434766592551999,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/proc-macro-crate-18c7cf53a6a22672/lib-proc-macro-crate.json ---
{"rustc":12645123470573756683,"features":"[]","target":10488202467561598967,"profile":89792565241913630,"path":3178877684691829368,"deps":[[12643607882224615841,"toml",false,14060641076672384882]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro-crate-18c7cf53a6a22672/dep-lib-proc-macro-crate"}}],"rustflags":[],"metadata":4875023412952309093,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/proc-macro2-2fd7d6238bde459f/lib-proc-macro2.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"proc-macro\"]","target":14344298002436322672,"profile":89792565241913630,"path":15928189444318827458,"deps":[[3810671027919804530,"build_script_build",false,10278317518283320931],[16040210524263995429,"unicode_ident",false,1986750688652309399]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro2-2fd7d6238bde459f/dep-lib-proc-macro2"}}],"rustflags":[],"metadata":2248056778617045775,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/proc-macro2-88d9a54ef620574d/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[3810671027919804530,"build_script_build",false,7290889891045435]],"local":[{"RerunIfChanged":{"output":"release/build/proc-macro2-88d9a54ef620574d/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/proc-macro2-931342365319bc27/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":89792565241913630,"path":1668453613714445891,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/proc-macro2-931342365319bc27/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":2248056778617045775,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/quote-22eb0137471669ad/lib-quote.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"proc-macro\"]","target":4606197195311606630,"profile":89792565241913630,"path":6542123402831764681,"deps":[[1968780565650827610,"build_script_build",false,10765577610838683874],[3810671027919804530,"proc_macro2",false,11156431575103427187]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/quote-22eb0137471669ad/dep-lib-quote"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/quote-35545bccc97a17bf/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"proc-macro\"]","target":13294766831966498538,"profile":89792565241913630,"path":1324535861508989643,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/quote-35545bccc97a17bf/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":2717943770976187624,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/quote-fae12c0365513ec1/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[1968780565650827610,"build_script_build",false,9604576934527876738]],"local":[{"RerunIfChanged":{"output":"release/build/quote-fae12c0365513ec1/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde-311dbb5b91f97dff/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[8651905923492668576,"build_script_build",false,17244102390248644797]],"local":[{"Precalculated":"1.0.139"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde-64918d6a24e144ea/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":2709041430195671023,"profile":89792565241913630,"path":2686285161363279166,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-64918d6a24e144ea/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde-6533c11da63d10bd/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":2709041430195671023,"profile":89792565241913630,"path":2686285161363279166,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-6533c11da63d10bd/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde-f4957e850cad3372/lib-serde.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":15771919462364234457,"profile":89792565241913630,"path":8671364417475280478,"deps":[[8651905923492668576,"build_script_build",false,8227252341150635197]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde-f4957e850cad3372/dep-lib-serde"}}],"rustflags":[],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde_derive-90bd4af36b8692d6/lib-serde_derive.json ---
{"rustc":12645123470573756683,"features":"[\"default\"]","target":17963269895377715704,"profile":89792565241913630,"path":4230295564652854964,"deps":[[1968780565650827610,"quote",false,6758588060944213828],[2404243893358302026,"syn",false,13135455508987098680],[3810671027919804530,"proc_macro2",false,11156431575103427187],[7516537749833126906,"build_script_build",false,9730635001411472674]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_derive-90bd4af36b8692d6/dep-lib-serde_derive"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde_derive-927542cfa901ba53/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[7516537749833126906,"build_script_build",false,10104844598134825634]],"local":[{"Precalculated":"1.0.139"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde_derive-f881e75d6f74c1f7/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\"]","target":2709041430195671023,"profile":89792565241913630,"path":674934915137455247,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_derive-f881e75d6f74c1f7/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":14452199383429553764,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/serde_json-026ee6d93974efb0/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":13294766831966498538,"profile":89792565241913630,"path":14425733106522496800,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/serde_json-026ee6d93974efb0/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/syn-f25c83535e918c9a/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":13294766831966498538,"profile":89792565241913630,"path":17087605576609415745,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/syn-f25c83535e918c9a/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/syn-fd320c61b69bdf7b/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[2404243893358302026,"build_script_build",false,4432152308886431629]],"local":[{"Precalculated":"1.0.98"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/syn-fda6ff71b1af41c4/lib-syn.json ---
{"rustc":12645123470573756683,"features":"[\"clone-impls\", \"default\", \"derive\", \"extra-traits\", \"fold\", \"full\", \"parsing\", \"printing\", \"proc-macro\", \"quote\", \"visit\"]","target":12020202395954228905,"profile":89792565241913630,"path":8611494288149568580,"deps":[[1968780565650827610,"quote",false,6758588060944213828],[2404243893358302026,"build_script_build",false,8627818352380768181],[3810671027919804530,"proc_macro2",false,11156431575103427187],[16040210524263995429,"unicode_ident",false,1986750688652309399]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/syn-fda6ff71b1af41c4/dep-lib-syn"}}],"rustflags":[],"metadata":6886477143387768027,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/toml-b20040af9634fb51/lib-toml.json ---
{"rustc":12645123470573756683,"features":"[\"default\"]","target":13462643144348829615,"profile":89792565241913630,"path":12314640679489688046,"deps":[[8651905923492668576,"serde",false,9786303554877886440]],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/toml-b20040af9634fb51/dep-lib-toml"}}],"rustflags":[],"metadata":15823223228428447826,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/unicode-ident-05f531c8b33b9fd1/lib-unicode-ident.json ---
{"rustc":12645123470573756683,"features":"[]","target":796776536126189422,"profile":89792565241913630,"path":14985244229363048778,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/unicode-ident-05f531c8b33b9fd1/dep-lib-unicode-ident"}}],"rustflags":[],"metadata":1159190378059262574,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/version_check-e7f1d4eb24724224/lib-version_check.json ---
{"rustc":12645123470573756683,"features":"[]","target":2726911228026723764,"profile":89792565241913630,"path":6459701260070751015,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/version_check-e7f1d4eb24724224/dep-lib-version_check"}}],"rustflags":[],"metadata":14847206692933921638,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/release/.fingerprint/wee_alloc-33686de3553432a2/build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"[]","target":2709041430195671023,"profile":89792565241913630,"path":444012286412872763,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"release/.fingerprint/wee_alloc-33686de3553432a2/dep-build-script-build-script-build"}}],"rustflags":[],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/ahash-38ace0fc8cb3dc75/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[6564554279330852038,"build_script_build",false,16662529888121452766]],"local":[{"RerunIfChanged":{"output":"wasm32-unknown-unknown/release/build/ahash-38ace0fc8cb3dc75/output","paths":["build.rs"]}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/ahash-4af0b0abae5c4e53/lib-ahash.json ---
{"rustc":12645123470573756683,"features":"[]","target":17564961922320999190,"profile":4881301595602780980,"path":4562295713934053545,"deps":[[6564554279330852038,"build_script_build",false,6096251460093934610],[13220248725062288935,"once_cell",false,16432518033743423815]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/ahash-4af0b0abae5c4e53/dep-lib-ahash"}}],"rustflags":["-C","link-args=-s"],"metadata":6548036084630991988,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/base64-016418c0fb9ccae1/lib-base64.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":9667411782827515189,"profile":4881301595602780980,"path":6084996840120835726,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/base64-016418c0fb9ccae1/dep-lib-base64"}}],"rustflags":["-C","link-args=-s"],"metadata":13936919950537592407,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/borsh-544baa818a46d9b9/lib-borsh.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":3730488758921852561,"profile":4881301595602780980,"path":6385022163868545244,"deps":[[1759060122986695407,"borsh_derive",false,13318596306128416800],[16284710795702459458,"hashbrown",false,16963342808855822905]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/borsh-544baa818a46d9b9/dep-lib-borsh"}}],"rustflags":["-C","link-args=-s"],"metadata":7032358266178414993,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/bs58-fb7de98099cc2e31/lib-bs58.json ---
{"rustc":12645123470573756683,"features":"[\"alloc\", \"default\", \"std\"]","target":4860711247261189145,"profile":4881301595602780980,"path":8816360589451735971,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/bs58-fb7de98099cc2e31/dep-lib-bs58"}}],"rustflags":["-C","link-args=-s"],"metadata":13637435404263704389,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/byteorder-05d500e949d7d921/lib-byteorder.json ---
{"rustc":12645123470573756683,"features":"[]","target":6049797839447724599,"profile":4881301595602780980,"path":3832884682194388807,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/byteorder-05d500e949d7d921/dep-lib-byteorder"}}],"rustflags":["-C","link-args=-s"],"metadata":5398730104718078656,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/cfg-if-f113922fb0311090/lib-cfg-if.json ---
{"rustc":12645123470573756683,"features":"[]","target":10094334937643343087,"profile":4881301595602780980,"path":16837506272941625803,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/cfg-if-f113922fb0311090/dep-lib-cfg-if"}}],"rustflags":["-C","link-args=-s"],"metadata":8462187951337715540,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/crunchy-1999501e2054f958/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[15144909498828475009,"build_script_build",false,2790281391346599186]],"local":[{"Precalculated":"0.2.2"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/crunchy-ca6daba642e652f2/lib-crunchy.json ---
{"rustc":12645123470573756683,"features":"[]","target":163992892306163484,"profile":4881301595602780980,"path":14716806897516678518,"deps":[[15144909498828475009,"build_script_build",false,2354105053254797183]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/crunchy-ca6daba642e652f2/dep-lib-crunchy"}}],"rustflags":["-C","link-args=-s"],"metadata":5553159513701433177,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/greeter-d5cbb7d1e1b2873c/lib-greeter.json ---
{"rustc":12645123470573756683,"features":"[]","target":12740755305791397572,"profile":4881301595602780980,"path":17523903030608720598,"deps":[[9294366231115296361,"near_sdk",false,11377032161226902867],[16627482305268480055,"uint",false,18413712674428636421]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/greeter-d5cbb7d1e1b2873c/dep-lib-greeter"}}],"rustflags":["-C","link-args=-s"],"metadata":14894896775255343796,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/hashbrown-a6ae97a270c5b170/lib-hashbrown.json ---
{"rustc":12645123470573756683,"features":"[\"ahash\", \"default\", \"inline-more\"]","target":7861740280460442625,"profile":4881301595602780980,"path":15668632852021774522,"deps":[[6564554279330852038,"ahash",false,12579948482986396886]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/hashbrown-a6ae97a270c5b170/dep-lib-hashbrown"}}],"rustflags":["-C","link-args=-s"],"metadata":6228333144549390726,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/hex-ca8aca0a4f36b776/lib-hex.json ---
{"rustc":12645123470573756683,"features":"[]","target":6463897372179782136,"profile":4881301595602780980,"path":18282626047755485781,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/hex-ca8aca0a4f36b776/dep-lib-hex"}}],"rustflags":["-C","link-args=-s"],"metadata":14751499657425910276,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/itoa-9daa780db014c853/lib-itoa.json ---
{"rustc":12645123470573756683,"features":"[]","target":16990797089513230490,"profile":4881301595602780980,"path":5567879181741500261,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/itoa-9daa780db014c853/dep-lib-itoa"}}],"rustflags":["-C","link-args=-s"],"metadata":851671291587502216,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/memory_units-c0b3dac29f03fb64/lib-memory_units.json ---
{"rustc":12645123470573756683,"features":"[]","target":12813906616754239599,"profile":4881301595602780980,"path":10906026626374637968,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/memory_units-c0b3dac29f03fb64/dep-lib-memory_units"}}],"rustflags":["-C","link-args=-s"],"metadata":16366510313631463741,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/near-sdk-ec08da7c08b38ebb/lib-near-sdk.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"wee_alloc\"]","target":1044266279087180184,"profile":4881301595602780980,"path":12089359903525877881,"deps":[[2711478123133662383,"bs58",false,7732715727995775805],[3178493835647231921,"wee_alloc",false,11204180338705061321],[7977718895369901279,"serde_json",false,8254132310339956318],[8651905923492668576,"serde",false,12398834993548645892],[9180754061452322375,"base64",false,2631872822198811497],[9608617076544306583,"near_sys",false,13455321079946951194],[13434381959712907675,"borsh",false,14003891539516441007],[15959244235299360742,"near_sdk_macros",false,7811981410642302930]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/near-sdk-ec08da7c08b38ebb/dep-lib-near-sdk"}}],"rustflags":["-C","link-args=-s"],"metadata":9215943102709044213,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/near-sys-81e79067b0c553e5/lib-near-sys.json ---
{"rustc":12645123470573756683,"features":"[]","target":11005017848159897718,"profile":4881301595602780980,"path":11597459731114170778,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/near-sys-81e79067b0c553e5/dep-lib-near-sys"}}],"rustflags":["-C","link-args=-s"],"metadata":14904885344401450229,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/once_cell-b0acf62d564527c5/lib-once_cell.json ---
{"rustc":12645123470573756683,"features":"[\"alloc\", \"race\"]","target":15818772897122422038,"profile":4881301595602780980,"path":12269786642671355344,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/once_cell-b0acf62d564527c5/dep-lib-once_cell"}}],"rustflags":["-C","link-args=-s"],"metadata":14177539708254521827,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/ryu-821f4d09d26a7a9d/lib-ryu.json ---
{"rustc":12645123470573756683,"features":"[]","target":8261881835615490997,"profile":4881301595602780980,"path":9698936859088607230,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/ryu-821f4d09d26a7a9d/dep-lib-ryu"}}],"rustflags":["-C","link-args=-s"],"metadata":10387617312689919117,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/serde-301103a3ca2eef5f/lib-serde.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"derive\", \"serde_derive\", \"std\"]","target":15771919462364234457,"profile":4881301595602780980,"path":8671364417475280478,"deps":[[7516537749833126906,"serde_derive",false,13179878147601838711],[8651905923492668576,"build_script_build",false,16333569684084104189]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/serde-301103a3ca2eef5f/dep-lib-serde"}}],"rustflags":["-C","link-args=-s"],"metadata":3767376778934503013,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/serde-d14ea55327f47d14/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[8651905923492668576,"build_script_build",false,6710544009637925800]],"local":[{"Precalculated":"1.0.139"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/serde_json-754ab86cd1eed88d/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[7977718895369901279,"build_script_build",false,4565160027697824261]],"local":[{"Precalculated":"1.0.82"}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/serde_json-f4818af06fdf55dc/lib-serde_json.json ---
{"rustc":12645123470573756683,"features":"[\"default\", \"std\"]","target":2475719121998694108,"profile":4881301595602780980,"path":3416206093702347847,"deps":[[5357092931389077452,"ryu",false,8814336899669102919],[7977718895369901279,"build_script_build",false,964997764042382485],[8651905923492668576,"serde",false,12398834993548645892],[17824117949403888186,"itoa",false,7366208704836292757]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/serde_json-f4818af06fdf55dc/dep-lib-serde_json"}}],"rustflags":["-C","link-args=-s"],"metadata":16261601059619201932,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/static_assertions-985213d97469494c/lib-static_assertions.json ---
{"rustc":12645123470573756683,"features":"[]","target":6569194319579281671,"profile":4881301595602780980,"path":182611668185612405,"deps":[],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/static_assertions-985213d97469494c/dep-lib-static_assertions"}}],"rustflags":["-C","link-args=-s"],"metadata":16420956093413671072,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/uint-3f5d9b901b09c435/lib-uint.json ---
{"rustc":12645123470573756683,"features":"[]","target":15739060535622530060,"profile":4881301595602780980,"path":11846552088152318607,"deps":[[486069622437963759,"byteorder",false,9190935764154715368],[4485243235582659819,"hex",false,5934758390555755120],[6476817338883840430,"static_assertions",false,17050951067317806893],[15144909498828475009,"crunchy",false,426246917447070948]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/uint-3f5d9b901b09c435/dep-lib-uint"}}],"rustflags":["-C","link-args=-s"],"metadata":7122085937130173941,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/wee_alloc-84ea9c5b41640daa/lib-wee_alloc.json ---
{"rustc":12645123470573756683,"features":"[]","target":7410670272435617587,"profile":4881301595602780980,"path":14243675876403063879,"deps":[[1429323848562539564,"memory_units",false,11872927179752601515],[3178493835647231921,"build_script_build",false,17679130802967729585],[11311719388751911026,"cfg_if",false,9295717577138855389]],"local":[{"CheckDepInfo":{"dep_info":"wasm32-unknown-unknown/release/.fingerprint/wee_alloc-84ea9c5b41640daa/dep-lib-wee_alloc"}}],"rustflags":["-C","link-args=-s"],"metadata":11837593470300214873,"config":2202906307356721367,"compile_kind":8104632896995515128}
'''
'''--- contract/target/wasm32-unknown-unknown/release/.fingerprint/wee_alloc-f701981229377fdf/run-build-script-build-script-build.json ---
{"rustc":12645123470573756683,"features":"","target":0,"profile":0,"path":0,"deps":[[3178493835647231921,"build_script_build",false,4064564487815864061]],"local":[{"RerunIfChanged":{"output":"wasm32-unknown-unknown/release/build/wee_alloc-f701981229377fdf/output","paths":["./Cargo.toml","./build.rs","./src/lib.rs","./src/imp_static_array.rs"]}},{"RerunIfEnvChanged":{"var":"WEE_ALLOC_STATIC_ARRAY_BACKEND_BYTES","val":null}}],"rustflags":[],"metadata":0,"config":0,"compile_kind":0}
'''
'''--- contract/target/wasm32-unknown-unknown/release/build/crunchy-1999501e2054f958/out/lib.rs ---

/// Unroll the given for loop
///
/// Example:
///
/// ```ignore
/// unroll! {
///   for i in 0..5 {
///     println!("Iteration {}", i);
///   }
/// }
/// ```
///
/// will expand into:
///
/// ```ignore
/// { println!("Iteration {}", 0); }
/// { println!("Iteration {}", 1); }
/// { println!("Iteration {}", 2); }
/// { println!("Iteration {}", 3); }
/// { println!("Iteration {}", 4); }
/// ```
#[macro_export]
macro_rules! unroll {
    (for $v:ident in 0..0 $c:block) => {};

    (for $v:ident < $max:tt in ($start:tt..$end:tt).step_by($val:expr) {$($c:tt)*}) => {
        {
            let step = $val;
            let start = $start;
            let end = start + ($end - start) / step;
            unroll! {
                for val < $max in start..end {
                    let $v: usize = ((val - start) * step) + start;

                    $($c)*
                }
            }
        }
    };

    (for $v:ident in ($start:tt..$end:tt).step_by($val:expr) {$($c:tt)*}) => {
        unroll! {
            for $v < $end in ($start..$end).step_by($val) {$($c)*}
        }
    };

    (for $v:ident in ($start:tt..$end:tt) {$($c:tt)*}) => {
        unroll!{
            for $v in $start..$end {$($c)*}
        }
    };

    (for $v:ident in $start:tt..$end:tt {$($c:tt)*}) => {
        #[allow(non_upper_case_globals)]
        #[allow(unused_comparisons)]
        {
            unroll!(@$v, 0, $end, {
                    if $v >= $start {$($c)*}
                }
            );
        }
    };

    (for $v:ident < $max:tt in $start:tt..$end:tt $c:block) => {
        #[allow(non_upper_case_globals)]
        {
            let range = $start..$end;
            assert!(
                $max >= range.end,
                "`{}` out of range `{:?}`",
                stringify!($max),
                range,
            );
            unroll!(
                @$v,
                0,
                $max,
                {
                    if $v >= range.start && $v < range.end {
                        $c
                    }
                }
            );
        }
    };

    (for $v:ident in 0..$end:tt {$($statement:tt)*}) => {
        #[allow(non_upper_case_globals)]
        { unroll!(@$v, 0, $end, {$($statement)*}); }
    };

    (@$v:ident, $a:expr, 0, $c:block) => {
        { const $v: usize = $a; $c }
    };

    (@$v:ident, $a:expr, 1, $c:block) => {
        { const $v: usize = $a; $c }
    };

    (@$v:ident, $a:expr, 2, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
    };

    (@$v:ident, $a:expr, 3, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
    };

    (@$v:ident, $a:expr, 4, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
    };

    (@$v:ident, $a:expr, 5, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
    };

    (@$v:ident, $a:expr, 6, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
    };

    (@$v:ident, $a:expr, 7, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
    };

    (@$v:ident, $a:expr, 8, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
    };

    (@$v:ident, $a:expr, 9, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
    };

    (@$v:ident, $a:expr, 10, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
    };

    (@$v:ident, $a:expr, 11, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
    };

    (@$v:ident, $a:expr, 12, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
    };

    (@$v:ident, $a:expr, 13, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
    };

    (@$v:ident, $a:expr, 14, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
    };

    (@$v:ident, $a:expr, 15, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
        { const $v: usize = $a + 14; $c }
    };

    (@$v:ident, $a:expr, 16, $c:block) => {
        { const $v: usize = $a; $c }
        { const $v: usize = $a + 1; $c }
        { const $v: usize = $a + 2; $c }
        { const $v: usize = $a + 3; $c }
        { const $v: usize = $a + 4; $c }
        { const $v: usize = $a + 5; $c }
        { const $v: usize = $a + 6; $c }
        { const $v: usize = $a + 7; $c }
        { const $v: usize = $a + 8; $c }
        { const $v: usize = $a + 9; $c }
        { const $v: usize = $a + 10; $c }
        { const $v: usize = $a + 11; $c }
        { const $v: usize = $a + 12; $c }
        { const $v: usize = $a + 13; $c }
        { const $v: usize = $a + 14; $c }
        { const $v: usize = $a + 15; $c }
    };

    (@$v:ident, $a:expr, 17, $c:block) => {
        unroll!(@$v, $a, 16, $c);
        { const $v: usize = $a + 16; $c }
    };

    (@$v:ident, $a:expr, 18, $c:block) => {
        unroll!(@$v, $a, 9, $c);
        unroll!(@$v, $a + 9, 9, $c);
    };

    (@$v:ident, $a:expr, 19, $c:block) => {
        unroll!(@$v, $a, 18, $c);
        { const $v: usize = $a + 18; $c }
    };

    (@$v:ident, $a:expr, 20, $c:block) => {
        unroll!(@$v, $a, 10, $c);
        unroll!(@$v, $a + 10, 10, $c);
    };

    (@$v:ident, $a:expr, 21, $c:block) => {
        unroll!(@$v, $a, 20, $c);
        { const $v: usize = $a + 20; $c }
    };

    (@$v:ident, $a:expr, 22, $c:block) => {
        unroll!(@$v, $a, 11, $c);
        unroll!(@$v, $a + 11, 11, $c);
    };

    (@$v:ident, $a:expr, 23, $c:block) => {
        unroll!(@$v, $a, 22, $c);
        { const $v: usize = $a + 22; $c }
    };

    (@$v:ident, $a:expr, 24, $c:block) => {
        unroll!(@$v, $a, 12, $c);
        unroll!(@$v, $a + 12, 12, $c);
    };

    (@$v:ident, $a:expr, 25, $c:block) => {
        unroll!(@$v, $a, 24, $c);
        { const $v: usize = $a + 24; $c }
    };

    (@$v:ident, $a:expr, 26, $c:block) => {
        unroll!(@$v, $a, 13, $c);
        unroll!(@$v, $a + 13, 13, $c);
    };

    (@$v:ident, $a:expr, 27, $c:block) => {
        unroll!(@$v, $a, 26, $c);
        { const $v: usize = $a + 26; $c }
    };

    (@$v:ident, $a:expr, 28, $c:block) => {
        unroll!(@$v, $a, 14, $c);
        unroll!(@$v, $a + 14, 14, $c);
    };

    (@$v:ident, $a:expr, 29, $c:block) => {
        unroll!(@$v, $a, 28, $c);
        { const $v: usize = $a + 28; $c }
    };

    (@$v:ident, $a:expr, 30, $c:block) => {
        unroll!(@$v, $a, 15, $c);
        unroll!(@$v, $a + 15, 15, $c);
    };

    (@$v:ident, $a:expr, 31, $c:block) => {
        unroll!(@$v, $a, 30, $c);
        { const $v: usize = $a + 30; $c }
    };

    (@$v:ident, $a:expr, 32, $c:block) => {
        unroll!(@$v, $a, 16, $c);
        unroll!(@$v, $a + 16, 16, $c);
    };

    (@$v:ident, $a:expr, 33, $c:block) => {
        unroll!(@$v, $a, 32, $c);
        { const $v: usize = $a + 32; $c }
    };

    (@$v:ident, $a:expr, 34, $c:block) => {
        unroll!(@$v, $a, 17, $c);
        unroll!(@$v, $a + 17, 17, $c);
    };

    (@$v:ident, $a:expr, 35, $c:block) => {
        unroll!(@$v, $a, 34, $c);
        { const $v: usize = $a + 34; $c }
    };

    (@$v:ident, $a:expr, 36, $c:block) => {
        unroll!(@$v, $a, 18, $c);
        unroll!(@$v, $a + 18, 18, $c);
    };

    (@$v:ident, $a:expr, 37, $c:block) => {
        unroll!(@$v, $a, 36, $c);
        { const $v: usize = $a + 36; $c }
    };

    (@$v:ident, $a:expr, 38, $c:block) => {
        unroll!(@$v, $a, 19, $c);
        unroll!(@$v, $a + 19, 19, $c);
    };

    (@$v:ident, $a:expr, 39, $c:block) => {
        unroll!(@$v, $a, 38, $c);
        { const $v: usize = $a + 38; $c }
    };

    (@$v:ident, $a:expr, 40, $c:block) => {
        unroll!(@$v, $a, 20, $c);
        unroll!(@$v, $a + 20, 20, $c);
    };

    (@$v:ident, $a:expr, 41, $c:block) => {
        unroll!(@$v, $a, 40, $c);
        { const $v: usize = $a + 40; $c }
    };

    (@$v:ident, $a:expr, 42, $c:block) => {
        unroll!(@$v, $a, 21, $c);
        unroll!(@$v, $a + 21, 21, $c);
    };

    (@$v:ident, $a:expr, 43, $c:block) => {
        unroll!(@$v, $a, 42, $c);
        { const $v: usize = $a + 42; $c }
    };

    (@$v:ident, $a:expr, 44, $c:block) => {
        unroll!(@$v, $a, 22, $c);
        unroll!(@$v, $a + 22, 22, $c);
    };

    (@$v:ident, $a:expr, 45, $c:block) => {
        unroll!(@$v, $a, 44, $c);
        { const $v: usize = $a + 44; $c }
    };

    (@$v:ident, $a:expr, 46, $c:block) => {
        unroll!(@$v, $a, 23, $c);
        unroll!(@$v, $a + 23, 23, $c);
    };

    (@$v:ident, $a:expr, 47, $c:block) => {
        unroll!(@$v, $a, 46, $c);
        { const $v: usize = $a + 46; $c }
    };

    (@$v:ident, $a:expr, 48, $c:block) => {
        unroll!(@$v, $a, 24, $c);
        unroll!(@$v, $a + 24, 24, $c);
    };

    (@$v:ident, $a:expr, 49, $c:block) => {
        unroll!(@$v, $a, 48, $c);
        { const $v: usize = $a + 48; $c }
    };

    (@$v:ident, $a:expr, 50, $c:block) => {
        unroll!(@$v, $a, 25, $c);
        unroll!(@$v, $a + 25, 25, $c);
    };

    (@$v:ident, $a:expr, 51, $c:block) => {
        unroll!(@$v, $a, 50, $c);
        { const $v: usize = $a + 50; $c }
    };

    (@$v:ident, $a:expr, 52, $c:block) => {
        unroll!(@$v, $a, 26, $c);
        unroll!(@$v, $a + 26, 26, $c);
    };

    (@$v:ident, $a:expr, 53, $c:block) => {
        unroll!(@$v, $a, 52, $c);
        { const $v: usize = $a + 52; $c }
    };

    (@$v:ident, $a:expr, 54, $c:block) => {
        unroll!(@$v, $a, 27, $c);
        unroll!(@$v, $a + 27, 27, $c);
    };

    (@$v:ident, $a:expr, 55, $c:block) => {
        unroll!(@$v, $a, 54, $c);
        { const $v: usize = $a + 54; $c }
    };

    (@$v:ident, $a:expr, 56, $c:block) => {
        unroll!(@$v, $a, 28, $c);
        unroll!(@$v, $a + 28, 28, $c);
    };

    (@$v:ident, $a:expr, 57, $c:block) => {
        unroll!(@$v, $a, 56, $c);
        { const $v: usize = $a + 56; $c }
    };

    (@$v:ident, $a:expr, 58, $c:block) => {
        unroll!(@$v, $a, 29, $c);
        unroll!(@$v, $a + 29, 29, $c);
    };

    (@$v:ident, $a:expr, 59, $c:block) => {
        unroll!(@$v, $a, 58, $c);
        { const $v: usize = $a + 58; $c }
    };

    (@$v:ident, $a:expr, 60, $c:block) => {
        unroll!(@$v, $a, 30, $c);
        unroll!(@$v, $a + 30, 30, $c);
    };

    (@$v:ident, $a:expr, 61, $c:block) => {
        unroll!(@$v, $a, 60, $c);
        { const $v: usize = $a + 60; $c }
    };

    (@$v:ident, $a:expr, 62, $c:block) => {
        unroll!(@$v, $a, 31, $c);
        unroll!(@$v, $a + 31, 31, $c);
    };

    (@$v:ident, $a:expr, 63, $c:block) => {
        unroll!(@$v, $a, 62, $c);
        { const $v: usize = $a + 62; $c }
    };

    (@$v:ident, $a:expr, 64, $c:block) => {
        unroll!(@$v, $a, 32, $c);
        unroll!(@$v, $a + 32, 32, $c);
    };

}

#[cfg(all(test, feature = "std"))]
mod tests {
    #[test]
    fn invalid_range() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in (5..4) {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![]);
    }

    #[test]
    fn start_at_one_with_step() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in (2..4).step_by(1) {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![2, 3]);
    }

    #[test]
    fn start_at_one() {
        let mut a: Vec<usize> = vec![];
        unroll! {
                for i in 1..4 {
                    a.push(i);
                }
            }
        assert_eq!(a, vec![1, 2, 3]);
    }

    #[test]
    fn test_all() {
        {
            let a: Vec<usize> = vec![];
            unroll! {
                for i in 0..0 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..0).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in 0..1 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..1).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in 0..64 {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..64).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            let start = 64 / 4;
            let end = start * 3;
            unroll! {
                for i < 64 in start..end {
                    a.push(i);
                }
            }
            assert_eq!(a, (start..end).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            unroll! {
                for i in (0..64).step_by(2) {
                    a.push(i);
                }
            }
            assert_eq!(a, (0..64 / 2).map(|x| x * 2).collect::<Vec<usize>>());
        }
        {
            let mut a: Vec<usize> = vec![];
            let start = 64 / 4;
            let end = start * 3;
            unroll! {
                for i < 64 in (start..end).step_by(2) {
                    a.push(i);
                }
            }
            assert_eq!(a, (start..end).filter(|x| x % 2 == 0).collect::<Vec<usize>>());
        }
    }
}

'''
'''--- contract/target/wasm32-unknown-unknown/release/build/wee_alloc-f701981229377fdf/out/wee_alloc_static_array_backend_size_bytes.txt ---
33554432
'''
'''--- frontend/App.js ---
import "regenerator-runtime/runtime";
import React from "react";

import "./assets/css/global.css";
import "bootstrap/dist/css/bootstrap.min.css";

// Boostrap Components
import {
  Container,
  Row,
  Nav,
  Navbar,
  Card,
  NavDropdown,
} from "react-bootstrap";

// React Router Tools
import { BrowserRouter as Router, Switch, Route, Link } from "react-router-dom";

// Components
import Task from "./Components/Task";
import Transactions from "./Components/Transaction";

import { login, logout } from "./assets/js/near/utils";

export default function App() {
  return (
    <div>
      <Router>
        <Navbar bg="dark" expand="lg">
          <Container>
            <Navbar.Brand href="/">
              <img
                className="logo"
                src="https://cryptologotypes.com/img/logos/basic-attention-token/basic-attention-token-bat-logo.svg"
                alt="logo"
              />
            </Navbar.Brand>
            <Navbar.Toggle aria-controls="basic-navbar-nav" />
            <Navbar.Collapse id="basic-navbar-nav">
              <Nav className="me-auto"></Nav>
              <Nav.Link className="textWhite mediumText signin" href="/">
                Home
              </Nav.Link>
              <Nav.Link
                className="textWhite mediumText signin"
                href="/transactions"
              >
                Dashboard
              </Nav.Link>
              {window.walletConnection.isSignedIn() ? (
                <Nav.Link
                  className="textWhite mediumText userId signin"
                  onClick={
                    window.walletConnection.isSignedIn() ? logout : login
                  }
                >
                  {window.walletConnection.isSignedIn() ? window.accountId : ""}
                </Nav.Link>
              ) : (
                ""
              )}
            </Navbar.Collapse>
          </Container>
        </Navbar>

        {/* Manager Login */}

        <Container>

          <div className="heading">Task Creator</div>

          {window.walletConnection.isSignedIn() ? (
            <Row>
              <div>
                {window.location.pathname === "/transactions" ? (
                  <Transactions />
                ) : (
                  <Task />
                )}
              </div>
            </Row>
          ) : (
            <Row>
              <Card style={{ marginTop: "100px", borderRadius: "30px" }}>
                <Card.Body>
                  <Card.Title className="signin">
                    Sign-in to Manager Dashboard to Create Task
                  </Card.Title>
                </Card.Body>
                <div
                  style={{
                    display: "flex",
                    justifyContent: "space-around",
                    paddingBottom: "10px",
                  }}
                >
                  <button
                    className="mediumText userId signin"
                    style={{ width: "180px", height: "55px", color: "#000" }}
                    onClick={
                      window.walletConnection.isSignedIn() ? logout : login
                    }
                  >
                    {window.walletConnection.isSignedIn()
                      ? window.accountId
                      : "Manager Login"}
                  </button>
                </div>
              </Card>

              {/* Explorer */}

              <Card style={{ marginTop: "70px", borderRadius: "30px" }}>
                <Card.Body>
                  <Card.Title className="signin">
                    View Task on Near Explorer
                  </Card.Title>
                </Card.Body>
                <div
                  style={{
                    display: "flex",
                    justifyContent: "space-around",
                    paddingBottom: "10px",
                  }}
                >
                  <button
                    className=" mediumText userId signin"
                    style={{ width: "190px", height: "55px" }}
                    onClick={() =>
                      window.open(
                        "https://explorer.testnet.near.org/",
                        "_blank"
                      )
                    }
                  >
                    Near Explorer
                  </button>
                </div>
              </Card>
            </Row>
          )}
        </Container>
      </Router>
    </div>
  );
}

'''
'''--- frontend/Components/Task.js ---
import React, { useRef } from "react";
import PropTypes from "prop-types";
import { test } from "../assets/js/near/utils";
import { utils } from 'near-api-js';
// React Bootstrap
import { Card, Button, Form } from "react-bootstrap";
function Task(props) {
  const memoField = useRef("");
  const nearField = useRef("");
  const recipientField = useRef("");
  const taskNumberField = useRef("");
  // Submit Button
  const submit = async () => {
    // Checking text was written in field, and not just whitespaces
    let isThereText = memoField.current.value.match("[A-Za-z0-9]");
    if (!isThereText) {
      alert("You are missing the points of the Task....!");
    } else {
      // Save Task to blockchain
 console.log("taskNumber {}", taskNumberField.current.value)
 console.log("assigne {}", recipientField.current.value)
 console.log("Task_heading {}", nearField.current.value)
 console.log("Description {}", memoField.current.value)
      await window.contract.addTasks({
        taskNumber:taskNumberField.current.value,
        assigne: recipientField.current.value,
        Task_heading: nearField.current.value,
        Description: memoField.current.value,
      });
      let a = taskNumberField.current.value + "f"
      await window.contract.Task_Allocated({
        account_id: recipientField.current.value,
        Taskheading: nearField.current.value,
        Description: memoField.current.value,
        taskNumber:parseInt(
          utils.format.parseNearAmount(a)
        ),
      });
    alert("Task allocated")
    }
  };
  return (
    <Card className="bg-light mt-5">
      <Card.Body>
        <Card.Title>Create Task</Card.Title>
        <Form>
          <Form.Group className="mb-3">
            <Form.Label>Assignee :</Form.Label>
            <Form.Control
              ref={recipientField}
              placeholder="user.testnet"
            ></Form.Control>
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Task Number:</Form.Label>
            <Form.Control
              ref={taskNumberField}
              placeholder="user.testnet"
            ></Form.Control>
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Task Heading :</Form.Label>
            <Form.Control
              ref={nearField}
              placeholder="Enter Task Heading"
            ></Form.Control>
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Description :</Form.Label>
            <Form.Control
              ref={memoField}
              placeholder="Task Description, Reference Links."
              as="textarea"
              rows={3}
            ></Form.Control>
          </Form.Group>
        </Form>
        <Button
          className="btn btn-outline-success my-2 my-sm-0"
          variant="light"
          onClick={submit}
        >
          Assign Task
        </Button>
      </Card.Body>
    </Card>
  );
}
Task.propTypes = {};
export default Task;
'''
'''--- frontend/Components/Transaction.js ---
import React, { useState, useEffect } from "react";
import PropTypes from "prop-types";
import { Container, Row, Col, Card } from "react-bootstrap";
import { async } from "regenerator-runtime";
import Task from "./Task";

const Transactions = (props) => {
  const [memos, changeMemos] = useState([]);

  useEffect(() => {
    const getInfo = async () => {
      let userMemos = await window.contract.getTasks({
        user: window.accountId,
      });
      changeMemos(userMemos);
    };

    getInfo();
  }, []);

  return (
    <Container>
      {memos.map((x, i) => {
        return (
          <Row
            style={{ margin: "3vh" }}
            key={i}
            className="d-flex justify-content-center"
          >
            <Card>
              <Card.Title>Task #{i}</Card.Title>
              <Card.Body>{x}</Card.Body>
            </Card>
          </Row>
        );
      })}
    </Container>
  );
};

Transactions.propTypes = {};

export default Transactions;

'''
'''--- frontend/__mocks__/fileMock.js ---
// NOTE: This is used to mock resource imports in JSX for tests
module.exports = '' 

'''
'''--- frontend/assets/css/global.css ---
.textWhite {
  color: #fff !important;
}
.mediumText {
  font-size: 21px;
  font-weight: 600;
}
.userId {
  border: 1px solid #ffa500;
  border-radius: 35px;
}
.userId:hover {
  background-color: #2597f5;
  border: 1px solid #ebe9e9;
}

.signin {
  text-align-last: center;
  font-family: cursive;
}

.logo {
  height: 2%;
  width: 5%;
}

.bg-img {
  background-image: url("https://static.vecteezy.com/system/resources/previews/001/409/192/original/abstract-geometric-banner-free-vector.jpg");
  width: 100%;
  height: 100%;
}

.heading {
  padding-top: 60px;
  text-align: center;
  font-weight: 600;
  margin: 1em 0 0.5em 0;
  color: #343434;
  font-weight: 900;
  font-family: "Ultra", sans-serif;
  font-size: 50px;
  line-height: 42px;
  text-transform: uppercase;
  text-shadow: 0 3px white, 0 5px #777;
}

'''
'''--- frontend/assets/img/decash.svg ---
[Content not decodable]
'''
'''--- frontend/assets/img/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- frontend/assets/img/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- frontend/assets/js/near/config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME

function getConfig(env) {
  switch (env) {

  case 'production':
  case 'mainnet':
    return {
      networkId: 'mainnet',
      nodeUrl: 'https://rpc.mainnet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.near.org',
      helperUrl: 'https://helper.mainnet.near.org',
      explorerUrl: 'https://explorer.mainnet.near.org',
    }
  case 'development':
  case 'testnet':
    return {
      networkId: 'testnet',
      nodeUrl: 'https://rpc.testnet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.testnet.near.org',
      helperUrl: 'https://helper.testnet.near.org',
      explorerUrl: 'https://explorer.testnet.near.org',
    }
  case 'betanet':
    return {
      networkId: 'betanet',
      nodeUrl: 'https://rpc.betanet.near.org',
      contractName: CONTRACT_NAME,
      walletUrl: 'https://wallet.betanet.near.org',
      helperUrl: 'https://helper.betanet.near.org',
      explorerUrl: 'https://explorer.betanet.near.org',
    }
  case 'local':
    return {
      networkId: 'local',
      nodeUrl: 'http://localhost:3030',
      keyPath: `${process.env.HOME}/.near/validator_key.json`,
      walletUrl: 'http://localhost:4000/wallet',
      contractName: CONTRACT_NAME,
    }
  case 'test':
  case 'ci':
    return {
      networkId: 'shared-test',
      nodeUrl: 'https://rpc.ci-testnet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  case 'ci-betanet':
    return {
      networkId: 'shared-test-staging',
      nodeUrl: 'https://rpc.ci-betanet.near.org',
      contractName: CONTRACT_NAME,
      masterAccount: 'test.near',
    }
  default:
    throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)
  }
}

module.exports = getConfig

'''
'''--- frontend/assets/js/near/utils.js ---
import { connect, Contract, keyStores, WalletConnection } from "near-api-js";
import getConfig from "./config";

const nearConfig = getConfig(process.env.NODE_ENV || "development");

// Initialize connection to the NEAR testnet
export async function initContract() {
  const near = await connect(
    Object.assign(
      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },
      nearConfig
    )
  );
  window.walletConnection = new WalletConnection(near);

  // Getting the Account ID. If still unauthorized, it's just empty string
  window.accountId = window.walletConnection.getAccountId();

  // Initializing our contract APIs by contract name and configuration
  window.contract = await new Contract(
    window.walletConnection.account(),
    nearConfig.contractName,

    {
      // View methods 
      viewMethods: ["getTasks"],
      // Change methods 
      changeMethods: ["addTasks", "Task_Allocated"],
    }
  );
}
export function logout() {
  window.walletConnection.signOut();
  // reload page
  window.location.replace(window.location.origin + window.location.pathname);
}
export function login() {
  window.walletConnection.requestSignIn(nearConfig.contractName);
}

'''
'''--- frontend/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Welcome to NEAR with React</title>
  </head>
  <body class='bg-img'>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  
    <script src="./index.js" type="module"></script>
  </body>
</html>

'''
'''--- frontend/index.js ---
import React from 'react'
import { createRoot } from 'react-dom/client'
import App from './App'
import { initContract } from './assets/js/near/utils'

const container = document.querySelector('#root')
const root = createRoot(container) // createRoot(container!) if you use TypeScript

window.nearInitPromise = initContract()
  .then(() => {
    <App />
    root.render(<App tab="home" />)
  })
  .catch(console.error)

'''
'''--- integration-tests/rs/Cargo.toml ---
[package]
name = "integration-tests"
version = "1.0.0"
publish = false
edition = "2018"

[dev-dependencies]
anyhow = "1.0"
borsh = "0.9"
maplit = "1.0"
near-units = "0.2.0"
# arbitrary_precision enabled for u128 types that workspaces requires for Balance types
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
tokio = { version = "1.18.1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
workspaces = "0.2.1"
pkg-config = "0.3.1"

[[example]]
name = "integration-tests"
path = "src/tests.rs"

'''
'''--- integration-tests/rs/src/tests.rs ---
use near_units::parse_near;
use serde_json::json;
use workspaces::prelude::*;
use workspaces::{network::Sandbox, Account, Contract, Worker};

const WASM_FILEPATH: &str = "../../out/main.wasm";

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let worker = workspaces::sandbox().await?;
    let wasm = std::fs::read(WASM_FILEPATH)?;
    let contract = worker.dev_deploy(&wasm).await?;

    // create accounts
    let owner = worker.root_account();
    let alice = owner
        .create_subaccount(&worker, "alice")
        .initial_balance(parse_near!("30 N"))
        .transact()
        .await?
        .into_result()?;

    // begin tests
    test_default_message(&alice, &contract, &worker).await?;
    test_changes_message(&alice, &contract, &worker).await?;
    Ok(())
}

async fn test_default_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Hello".to_string());
    println!("      Passed âœ… gets default message");
    Ok(())
}

async fn test_changes_message(
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    user.call(&worker, contract.id(), "set_greeting")
        .args_json(json!({"message": "Howdy"}))?
        .transact()
        .await?;

    let message: String = user
        .call(&worker, contract.id(), "get_greeting")
        .args_json(json!({}))?
        .transact()
        .await?
        .json()?;

    assert_eq!(message, "Howdy".to_string());
    println!("      Passed âœ… changes message");
    Ok(())
}
'''
'''--- integration-tests/ts/package.json ---
{
  "name": "ava-testing",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "test": "ava --verbose"
  },
  "devDependencies": {
    "ava": "^4.2.0",
    "near-workspaces": "^2.0.0",
    "typescript": "^4.7.2",
    "ts-node": "^10.8.0",
    "@types/bn.js": "^5.1.0"
  },
  "dependencies": {}
}

'''
'''--- integration-tests/ts/src/main.ava.ts ---
import { Worker, NEAR, NearAccount } from 'near-workspaces'
import anyTest, { TestFn } from 'ava'

const test = anyTest as TestFn<{
  worker: Worker;
  accounts: Record<string, NearAccount>;
}>

test.beforeEach(async (t) => {
  // Init the worker and start a Sandbox server
  const worker = await Worker.init()

  // deploy contract
  const root = worker.rootAccount
  const contract = await root.createAndDeploy(
    root.getSubAccount('greeter').accountId,
    './out/main.wasm',
    { initialBalance: NEAR.parse('30 N').toJSON() }
  )

  // Save state for test runs, it is unique for each test
  t.context.worker = worker
  t.context.accounts = { root, contract }
})

test.afterEach(async (t) => {
  // Stop Sandbox server
  await t.context.worker.tearDown().catch((error) => {
    console.log('Failed to stop the Sandbox:', error)
  })
})

test('returns the default greeting', async (t) => {
  const { contract } = t.context.accounts
  const message: string = await contract.view('get_greeting', {})
  t.is(message, 'Hello')
})

test('changes the message', async (t) => {
  const { root, contract } = t.context.accounts
  await root.call(contract, 'set_greeting', { message: 'Howdy' })
  const message: string = await contract.view('get_greeting', {})
  t.is(message, 'Howdy')
})
'''
'''--- package.json ---
{
  "name": "greeter",
  "version": "1.0.0",
  "license": "(MIT AND Apache-2.0)",
  "scripts": {
    "build": "npm run build:contract && npm run build:web",
    "build:contract": "cd contract && rustup target add wasm32-unknown-unknown && cargo build --all --target wasm32-unknown-unknown --release && cp ./target/wasm32-unknown-unknown/release/greeter.wasm ../out/main.wasm",
    "build:web": "parcel build frontend/index.html --public-url ./",
    "deploy": "npm run build:contract && near dev-deploy",
    "start": "npm run deploy && echo The app is starting! It will automatically open in your browser when ready && env-cmd -f ./neardev/dev-account.env parcel frontend/index.html --open",
    "dev": "nodemon --watch contract -e ts --exec \"npm run start\"",
    "test": "npm run build:contract && npm run test:unit && npm run test:integration",
    "test:unit": "cd contract && cargo test",
    "test:integration": "npm run test:integration:ts && npm run test:integration:rs",
    "test:integration:ts": "cd integration-tests/ts && npm run test",
    "test:integration:rs": "cd integration-tests/rs && cargo run --example integration-tests"
  },
  "devDependencies": {
    "@babel/core": "~7.18.2",
    "@babel/preset-env": "~7.18.2",
    "@babel/preset-react": "~7.17.12",
    "ava": "^4.2.0",
    "env-cmd": "~10.1.0",
    "near-cli": "~3.3.0",
    "near-workspaces": "^2.0.0",
    "nodemon": "~2.0.16",
    "parcel": "^2.6.0",
    "process": "^0.11.10",
    "react-test-renderer": "~18.1.0",
    "ts-node": "^10.8.0",
    "typescript": "^4.7.2"
  },
  "dependencies": {
    "near-api-js": "~0.44.2",
    "react": "~18.1.0",
    "react-dom": "~18.1.0",
    "regenerator-runtime": "~0.13.9",
    "bootstrap": "^5.1.3",
    "react-bootstrap": "^2.4.0",
    "react-router-dom": "^6.3.0"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
'''