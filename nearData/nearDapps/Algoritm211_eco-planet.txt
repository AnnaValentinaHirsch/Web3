*GitHub Repository "Algoritm211/eco-planet"*

'''--- apps/frontend/src/app/app.component.html ---
<maorix-header (sideNavToggleEvent)="sideNavToggle()"></maorix-header>
<mat-sidenav-container>
  <mat-sidenav [(opened)]="isSideNavOpened" class="sidenav" [autoFocus]="false">
    <mat-nav-list *ngFor="let tab of navigationTabs">
      <a [routerLink]="tab.routerLink" mat-list-item routerLinkActive="active-list-item" (click)="sideNavToggle()">
        {{ tab.title }}
      </a>
    </mat-nav-list>
  </mat-sidenav>
  <mat-sidenav-content class="main-content">
    <main>
      <router-outlet></router-outlet>
    </main>
  </mat-sidenav-content>
</mat-sidenav-container>
<maorix-footer></maorix-footer>

'''
'''--- apps/frontend/src/app/auth/near-login/near-login.component.html ---
<div class="login">
  <h1>Please, log into your account</h1>
  <div>
    <button
      mat-raised-button
      color="gradient"
      (click)="handleLogin()"
    >
      Sign in with Near account
    </button>
  </div>
</div>

'''
'''--- apps/frontend/src/app/system/footer/footer.component.html ---
<mat-toolbar color="primary">
  <mat-toolbar-row>
    Super-powered by Maorix and Near
  </mat-toolbar-row>
</mat-toolbar>

'''
'''--- apps/frontend/src/app/system/header/header.component.html ---
<mat-toolbar color="primary">
  <button
    mat-icon-button
    aria-label="Menu icon"
    (click)="onSideNavToggle()"
  >
    <mat-icon>menu</mat-icon>
  </button>
  <span>EcoPlanet</span>
  <span class="spacer"></span>
  <ng-container *ngIf="nearAuthService.isSignedIn$ | async" >
    <button mat-raised-button color="warn" (click)="onLogout()">
      Logout
    </button>
  </ng-container>
</mat-toolbar>

'''
'''--- apps/frontend/src/app/system/pages/cabinet/cabinet.component.html ---
<ng-container *ngIf="(status$ | async) !== 'loading' else loading">
  <ng-container *ngIf="user$ | async else noUser">
    <div>
      <h1>New day, nice to see you!</h1>
      <maorix-new-season-timer></maorix-new-season-timer>
      <mat-divider></mat-divider>

      <maorix-user-card></maorix-user-card>

      <maorix-session-info></maorix-session-info>
      <div class="button__group">
        <button
          mat-raised-button
          color="warn"
          *ngIf="user$ | async as u"
          (click)="openChangeNameDialog(u.name)"
        >
          Change username
        </button>
        <a mat-raised-button color="success" routerLink="/qr-contribute">
          Make contribution
        </a>
      </div>
    </div>
  </ng-container>
</ng-container>

<ng-template #loading>
  <div class="loading-spinner">
    <mat-spinner></mat-spinner>
  </div>
</ng-template>

<ng-template #noUser>
  <div class="create-profile">
    <h1>Please, create profile for future contributions</h1>
    <form (ngSubmit)="onCreateUser()">
      <div mat-dialog-content>
        <p>Change your name</p>
        <mat-form-field appearance="fill">
          <mat-label>Please enter new name</mat-label>
          <input matInput [(ngModel)]="name" name="name">
        </mat-form-field>
      </div>
      <div>
        <button mat-raised-button color="primary" type="submit">Create account</button>
      </div>
    </form>
  </div>
</ng-template>

'''
'''--- apps/frontend/src/app/system/pages/cabinet/change-name-dialog/change-name-dialog.component.html ---
<form (ngSubmit)="onSubmit()">
  <div mat-dialog-content>
    <p>Change your name</p>
    <mat-form-field appearance="fill">
      <mat-label>Please enter new name</mat-label>
      <input matInput [(ngModel)]="name" name="name">
    </mat-form-field>
  </div>
  <div mat-dialog-actions class="button__group">
    <button mat-raised-button color="warn" (click)="onCancel()" type="button">Cancel</button>
    <button mat-raised-button color="primary" type="submit">Change</button>
  </div>
</form>

'''
'''--- apps/frontend/src/app/system/pages/cabinet/new-season-timer/new-season-timer.component.html ---
<div class="timer">
  <h3>‚ÑπÔ∏è New season will start in: ‚ÑπÔ∏è</h3>
  <span id="days"> {{daysToDday}} </span>Day(s)
  <span id="hours"> {{hoursToDday}} </span>Hrs
  <span id="minutes"> {{minutesToDday}} </span>Min
  <span id="seconds"> {{secondsToDday}} </span>S
</div>

'''
'''--- apps/frontend/src/app/system/pages/cabinet/session-info/session-info.component.html ---
<ng-container *ngIf="(user$ | async)!.contribution else noInfo">
  <div class="progress-wrapper">
    <h2>Check your progress info üî•</h2>
    <mat-accordion>
      <mat-expansion-panel>
        <mat-expansion-panel-header>
          <mat-panel-title>
            <mat-icon>bar_chart</mat-icon> Your current rank -&nbsp;<span class="metrics">{{(user$ | async)!.rank}}</span>
          </mat-panel-title>
        </mat-expansion-panel-header>
        <p>This is your rank in all leadership table. The higher you are in the rating table, the more you will receive a multiplier for coins for your contribution. Enjoy</p>
        <button mat-raised-button color="primary">
          Go to leadership table
        </button>
      </mat-expansion-panel>
      <mat-expansion-panel>
        <mat-expansion-panel-header>
          <mat-panel-title>
            <mat-icon>show_chart</mat-icon> Your current multiplier -&nbsp;<span class="metrics">{{multiplier}}x</span>
          </mat-panel-title>
        </mat-expansion-panel-header>
        <p>Your environmental multiplier increases every time you turn in bottles. Do this more often to increase your multiplier</p>
      </mat-expansion-panel>

      <mat-expansion-panel>
        <mat-expansion-panel-header>
          <mat-panel-title>
            <mat-icon>monetization_on</mat-icon>
            Possible earnings -&nbsp;<span class="metrics">{{ possibleEarnings | number:'1.2-2' }} NEAR</span>
          </mat-panel-title>
        </mat-expansion-panel-header>
        <p>If you keep your position in the ranking until the end of the month, taking into account the multiplier, you will receive exactly this amount in NEAR to your wallet. A worthy reward for a worthy person</p>
      </mat-expansion-panel>
    </mat-accordion>
  </div>
</ng-container>

<ng-template #noInfo>
  <mat-card class="no-info-card">
    <mat-icon>info</mat-icon>
    <p>Now no additional stats for your account. Make contribution and see it</p>
  </mat-card>
</ng-template>

'''
'''--- apps/frontend/src/app/system/pages/cabinet/user-card/user-card.component.html ---
<mat-card *ngIf="user$ | async as user">
  <mat-card-header>
    <mat-card-title>Address - {{ user.accountId }}</mat-card-title>
    <mat-card-subtitle>Here you can see your stats</mat-card-subtitle>
  </mat-card-header>
  <mat-card-content>
    <mat-list>
      <mat-list-item>
        <mat-icon mat-list-icon>person_outline</mat-icon>
        <div class="list__item-info">
          <div class="list__item-info-title">
            Name
          </div>
          <div class="list__item-info-value">
            {{user.name}}
          </div>
        </div>
      </mat-list-item>
      <mat-divider></mat-divider>
      <mat-list-item>
        <mat-icon mat-list-icon>local_florist</mat-icon>
        <div class="list__item-info">
          <div class="list__item-info-title">
            Contributed
          </div>
          <div class="list__item-info-value">
            {{ user.contribution }}
          </div>
        </div>
      </mat-list-item>
      <mat-divider></mat-divider>
      <mat-list-item>
        <mat-icon mat-list-icon>money_bag</mat-icon>
        <div class="list__item-info">
          <div class="list__item-info-title">
            Your award
          </div>
          <div class="list__item-info-value">
            {{ user.award | number: '1.2-2' }} NEAR
          </div>
        </div>
      </mat-list-item>
      <mat-divider></mat-divider>
    </mat-list>
  </mat-card-content>
</mat-card>

'''
'''--- apps/frontend/src/app/system/pages/contribution-scanner/barcode-scanner/barcode-scanner.component.html ---
<div>
  <button mat-raised-button color="warn" (click)="handleMockData()">
    Make test contribution
  </button>
  <pre>
    {{MOCK_CONTRIBUTION | json}}
  </pre>
  <zxing-scanner
    (permissionResponse)="checkPermissions($event)"
    (scanComplete)="handleData($event)"
  ></zxing-scanner>
</div>

'''
'''--- apps/frontend/src/app/system/pages/contribution-scanner/contribution-scanner.component.html ---
<h1>

</h1>
<maorix-barcode-scanner></maorix-barcode-scanner>

'''
'''--- apps/frontend/src/app/system/pages/dashboard/dashboard-header/dashboard-header.component.html ---
<h1 class="mat-typography">
  üë• Leadership table
</h1>
<mat-divider></mat-divider>
<h3 class="mat-typography">
  Want to be the first? - clean up the planet:
</h3>

<a
  mat-raised-button
  color="success"
  routerLink="/qr-contribute"
>Make contribution</a>

'''
'''--- apps/frontend/src/app/system/pages/dashboard/dashboard.component.html ---
<maorix-dashboard-header></maorix-dashboard-header>
<maorix-users-table></maorix-users-table>

'''
'''--- apps/frontend/src/app/system/pages/dashboard/users-table/users-table.component.html ---
<ng-container *ngIf="(loading$ | async) === false else loading">
  <mat-form-field appearance="standard">
    <mat-label>Filter</mat-label>
    <input matInput (keyup)="applyFilter($event)" placeholder="Ex. Alex" #input>
  </mat-form-field>

  <div class="mat-elevation-z8">
    <table mat-table [dataSource]="dataSource" matSort>

      <!-- Account Id Column -->
      <ng-container matColumnDef="accountId">
        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>
        <td mat-cell *matCellDef="let row"> {{(row.accountId | slice:0:6)+'...'}} </td>
      </ng-container>

      <!-- Name Column -->
      <ng-container matColumnDef="name">
        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>
        <td mat-cell *matCellDef="let row"> {{row.name}} </td>
      </ng-container>

      <!-- Award Column -->
      <ng-container matColumnDef="award">
        <th mat-header-cell *matHeaderCellDef mat-sort-header> Award </th>
        <td mat-cell *matCellDef="let row"> {{row.award | number: '1.2-2'}} </td>
      </ng-container>

      <!-- Social Rating Column -->
      <ng-container matColumnDef="socialRating">
        <th mat-header-cell *matHeaderCellDef mat-sort-header> Social Rating </th>
        <td mat-cell *matCellDef="let row"> {{row.socialRating | number: '1.2-2'}} </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>

      <!-- Row shown when there is no matching data. -->
      <tr class="mat-row" *matNoDataRow>
        <td class="mat-cell" colspan="4">No data matching the filter "{{input.value}}"</td>
      </tr>
    </table>

    <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]" aria-label="Select page of users"></mat-paginator>
  </div>
</ng-container>

<ng-template #loading>
  <div class="loader">
    <mat-spinner></mat-spinner>
  </div>
</ng-template>

'''
'''--- apps/frontend/src/app/system/pages/news/news-card/news-card.component.html ---
<mat-card class="news-card">
  <mat-card-header>
    <div
      mat-card-avatar class="author-avatar"
      [ngStyle]="{'background-image': 'url(' + news.author.avatarUrl + ')'}"
    ></div>
    <mat-card-title>{{news.author.name}}</mat-card-title>
    <mat-card-subtitle>{{news.author.jobTitle}}</mat-card-subtitle>
  </mat-card-header>
  <div class="news-thumbnail-wrapper">
    <img mat-card-image class="news-thumbnail" [src]="news.thumbnailUrl" alt="Photo of a news">
  </div>
  <mat-card-content>
    <h2>{{news.title}}</h2>
    <p>
      {{news.description}}
    </p>
  </mat-card-content>
  <mat-card-actions>
    <button mat-button>
      LIKE
    </button>
    <button mat-button>READ</button>
  </mat-card-actions>
</mat-card>

'''
'''--- apps/frontend/src/app/system/pages/news/news.component.html ---
<h1>Check our latest news:</h1>
<section class="news-wrapper">
  <ng-container *ngFor="let newsItem of MOCK_NEWS">
    <maorix-news-card [news]="newsItem"></maorix-news-card>
  </ng-container>
</section>

'''
'''--- apps/frontend/src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Frontend</title>
    <base href="/" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/x-icon" href="favicon.ico" />
      <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
  <body class="mat-typography">
    <maorix-eco-contract-root></maorix-eco-contract-root>
  </body>
</html>

'''
'''--- decorate-angular-cli.js ---
/**
 * This file decorates the Angular CLI with the Nx CLI to enable features such as computation caching
 * and faster execution of tasks.
 *
 * It does this by:
 *
 * - Patching the Angular CLI to warn you in case you accidentally use the undecorated ng command.
 * - Symlinking the ng to nx command, so all commands run through the Nx CLI
 * - Updating the package.json postinstall script to give you control over this script
 *
 * The Nx CLI decorates the Angular CLI, so the Nx CLI is fully compatible with it.
 * Every command you run should work the same when using the Nx CLI, except faster.
 *
 * Because of symlinking you can still type `ng build/test/lint` in the terminal. The ng command, in this case,
 * will point to nx, which will perform optimizations before invoking ng. So the Angular CLI is always invoked.
 * The Nx CLI simply does some optimizations before invoking the Angular CLI.
 *
 * To opt out of this patch:
 * - Replace occurrences of nx with ng in your package.json
 * - Remove the script from your postinstall script in your package.json
 * - Delete and reinstall your node_modules
 */

const fs = require('fs');
const os = require('os');
const cp = require('child_process');
const isWindows = os.platform() === 'win32';
let output;
try {
  output = require('@nrwl/workspace').output;
} catch (e) {
  console.warn('Angular CLI could not be decorated to enable computation caching. Please ensure @nrwl/workspace is installed.');
  process.exit(0);
}

/**
 * Symlink of ng to nx, so you can keep using `ng build/test/lint` and still
 * invoke the Nx CLI and get the benefits of computation caching.
 */
function symlinkNgCLItoNxCLI() {
  try {
    const ngPath = './node_modules/.bin/ng';
    const nxPath = './node_modules/.bin/nx';
    if (isWindows) {
      /**
       * This is the most reliable way to create symlink-like behavior on Windows.
       * Such that it works in all shells and works with npx.
       */
      ['', '.cmd', '.ps1'].forEach(ext => {
        if (fs.existsSync(nxPath + ext)) fs.writeFileSync(ngPath + ext, fs.readFileSync(nxPath + ext));
      });
    } else {
      // If unix-based, symlink
      cp.execSync(`ln -sf ./nx ${ngPath}`);
    }
  }
  catch(e) {
    output.error({ title: 'Unable to create a symlink from the Angular CLI to the Nx CLI:' + e.message });
    throw e;
  }
}

try {
  symlinkNgCLItoNxCLI();
  require('nx/src/adapter/decorate-cli').decorateCli();
  output.log({ title: 'Angular CLI has been decorated to enable computation caching.' });
} catch(e) {
  output.error({ title: 'Decoration of the Angular CLI did not complete successfully' });
}

'''
'''--- jest.preset.js ---
const nxPreset = require('@nrwl/jest/preset').default;

module.exports = { ...nxPreset };

'''