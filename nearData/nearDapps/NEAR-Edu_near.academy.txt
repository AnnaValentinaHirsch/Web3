*GitHub Repository "NEAR-Edu/near.academy"*

'''--- .eslintrc.json ---
{
  "root": true,
  // "parser": "babel-eslint",
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": ["./frontend/tsconfig.json", "./api/tsconfig.json"],
    "tsconfigRootDir": "src"
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    //"plugin:@typescript-eslint/recommended-requiring-type-checking"
    "standard",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:security/recommended"
  ],
  "settings": {
    "react": {
      "version": "latest"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    }
  },
  "plugins": ["@typescript-eslint/eslint-plugin", "import", "prettier", "standard", "react", "jsx-a11y", "security"],
  "rules": {
    //"no-unused-variable": "warn",
    "import/no-unresolved": "error",
    "import/named": "error",
    "import/namespace": "error",
    "import/default": "error",
    "import/export": "error",
    "import/no-absolute-path": "error",
    "import/no-self-import": "error",
    "import/no-cycle": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-mutable-exports": "error",
    "import/no-unused-modules": "warn",
    "import/first": "error",
    "import/exports-last": "error",
    "import/no-duplicates": "error",
    "import/order": "error",
    "import/newline-after-import": "error",
    "import/no-named-default": "error",
    "import/no-default-export": "error",
    "import/no-anonymous-default-export": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "no-console": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    ],
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/prop-types": 0,
    "prettier/prettier": 1
  }
}

'''
'''--- .github/ISSUE_TEMPLATE/bug_report.md ---
---
name: Bug report
about: Create a report to help us improve
title: ''
labels: ''
assignees: ''

---

**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: [e.g. iOS]
 - Browser [e.g. chrome, safari]
 - Version [e.g. 22]

**Smartphone (please complete the following information):**
 - Device: [e.g. iPhone6]
 - OS: [e.g. iOS8.1]
 - Browser [e.g. stock browser, safari]
 - Version [e.g. 22]

**Additional context**
Add any other context about the problem here.

'''
'''--- .github/ISSUE_TEMPLATE/content-request.md ---
---
name: Content request
about: Suggest content improvements, new courses and fix content errors.
title: ''
labels: content
assignees: ''

---

Refer to an existing chapter to update, improve or fix it. Or suggest completely new content (coureses). Provide as much information as possible. 

'''
'''--- .github/ISSUE_TEMPLATE/feature_request.md ---
---
name: Feature request
about: Suggest an idea for this project
title: ''
labels: ''
assignees: ''

---

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.

'''
'''--- .vscode/extensions.json ---
{
  "recommendations": [
    "dbaeumer.vscode-eslint",
    "msjsdiag.debugger-for-chrome",
    "esbenp.prettier-vscode",
    "bungcip.better-toml",
    "Shan.code-settings-sync",
    "raymondcamden.csslint",
    "mikestead.dotenv",
    "donjayamanne.githistory",
    "eamodio.gitlens",
    "christian-kohler.npm-intellisense",
    "christian-kohler.path-intellisense",
    "Gruntfuggly.todo-tree",
    "alfnielsen.vsc-organize-imports",
    "anseki.vscode-color",
    "pranaygp.vscode-css-peek",
    "emmanuelbeziat.vscode-great-icons",
    "ecmel.vscode-html-css",
    "wix.vscode-import-cost",
    "eg2.vscode-npm-script",
    "jaspernorth.vscode-pigments",
    "GitHub.vscode-pull-request-github",
    "mrmlnc.vscode-scss",
    "jpoissonnier.vscode-styled-components",
    "cssho.vscode-svgviewer",
    "akamud.vscode-theme-onedark",
    "VisualStudioExptTeam.vscodeintellicode"
  ]
}

'''
'''--- .vscode/launch.json ---
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against localhost",
            "url": "http://localhost:3000",
            "webRoot": "${workspaceFolder}"
        }
    ]
}
'''
'''--- .vscode/my_command.js ---
exports.execute = async (args) => {
    // args => https://egodigital.github.io/vscode-powertools/api/interfaces/_contracts_.workspacecommandscriptarguments.html

    // s. https://code.visualstudio.com/api/references/vscode-api
    const vscode = args.require('vscode');

    vscode.window.showInformationMessage(
        `Hello, from '${ args.command }'!`
    );
};
'''
'''--- .vscode/settings.json ---
({
  // Hide files that are rarely edited for better folder arrangement
  "files.exclude": {
    "LICENSE": true,
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.webpack": true,
    "**/build": true,
    "**/dist": true,
    "**/coverage": true,
    "**/node_modules": true,
    // "**.prettier*": true,
    // "**.travis*": true,
    // "**/lerna.json": true,
    // "**/.eslint*": true,
    // "**/.gitignore*": true,
    // "**/package-lock.json": true,
    // "**/yarn.lock": true
    // "**/source-map-install.js": true,
    // "**/tsconfig.json": true,
    // "**/webpack.config.js": true
  },
  "javascript.validate.enable": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.author.enabled": false,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    { "language": "typescript", "autoFix": true },
    { "language": "typescriptreact", "autoFix": true }
  ],
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "editor.formatOnSave": true,
  "[javascript]": {
    "editor.formatOnSave": false
  },
  "[javascriptreact]": {
    "editor.formatOnSave": false
  },
  "[typescript]": {
    "editor.formatOnSave": false
  },
  "[typescriptreact]": {
    "editor.formatOnSave": true
  }
},
{
  "ego.power-tools": {
    "commands": {
      "myCommand": {
        "script": "my_command.js",
        "button": {
          "text": "Click here to start the command."
        }
      }
    }
  }
})

'''
'''--- README.md ---
# near.academy

These instructions are for people on the NEAR Foundation Education team (and aren't necessarily relevant for the general public).

## How to get started

```bash
# 1. Download project
git clone git@github.com:NEAR-Edu/near.academy.git
cd near.academy

# 2. Create .env files
cp src/frontend/.env.example src/frontend/.env
cp src/api/.env.example src/api/.env

# 3. Edit the values in those .env files as appropriate. For example, you'll need to specify the location of your database, etc. If you're on the team responsible for maintaining the official near.academy production site, ask Ryan Walsh or Albert Peci (oceanByte) for the secrets. Do NOT set your local machine to connect to the remote production database!

# 4. Install dependencies for frontend and backend
yarn
# or if your computer uses ARM architecture:
npm i --target_arch=x64

# 5. Install Mongodb:
brew tap mongodb/brew
brew install mongodb-community@5.0
brew services start mongodb/brew/mongodb-community

# 6. Use mongodump to download a "dump" (copy) of the production (remote) database to your local machine:
mongodump --uri "mongodb://usersname:password@127.0.0.1:27100/dbname" --out "/Users/some_username/code/mongodb_dumps_for_near.academy/dump/"

# 7. Rename the local "dump" of the database [so that when you "restore" (create) the database locally, there won't be as much confusion as if it had the same name as the remote production one]:
cd /Users/some_username/code/mongodb_dumps_for_near.academy/dump/
mv nearacademy NearAcademyLocal

# 8. Run mongorestore to convert the local "dump" files into a real, running local database:
cd ..
mongorestore --nsInclude "*.*"

# 8. Start development
yarn start
```

## Deployments

https://dashboard.render.com/ hosts 2 projects, both of which are connected to and depend on this repo.

Pushing commits to `main` will automatically redeploy both the API and frontend projects.

### Frontend 

- "static site" on Render
- Build Command: `cd src/frontend && yarn && yarn build`
- Publish directory: `src/frontend/build`
- Branch: main
- Environment > Environment Variables: manually added one at a time, no Secret Files

### API

- "web service" on Render
- Environment > Secret Files > Filename > `.env`: [paste the .env contents]
- Dockerfile Path: `/src/api/Dockerfile`
- Docker Build Context Directory: `/src/api/`
- Docker Command: (blank)
- Health Check Path: (blank)
- Branch: main

## See also

- https://github.com/NEAR-Edu/near-academy-contracts
- To use `react-google-recaptcha-v3`, you need to generate keys at https://www.google.com/recaptcha/intro/v3.html.

'''
'''--- lerna.json ---
{
  "packages": ["src/*"],
  "npmClient": "yarn",
  "version": "independent"
}

'''
'''--- package.json ---
{
  "name": "nearacademy",
  "version": "2.0.0",
  "scripts": {
    "start": "lerna exec -- yarn run --parallel start",
    "start-windows": "lerna exec -- yarn run --parallel start-windows",
    "build": "lerna exec -- yarn run --parallel build",
    "lint": "eslint '**/*.{js,jsx}'",
    "lint:fix": "npm run lint -- --fix",
    "prettier": "prettier -l '**/*.{js,jsx,ts,tsx,json,md}'",
    "test": "lerna run --parallel test",
    "postinstall": "lerna bootstrap"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^3.1.0",
    "@typescript-eslint/parser": "^3.1.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.6.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-sinon": "^4.0.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-import-resolver-webpack": "^0.12.1",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-jest": "^23.13.2",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.20.0",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-standard": "^4.0.1",
    "husky": "^4.2.5",
    "lerna": "^3.22.0",
    "lint-staged": "^10.2.9",
    "prettier": "^2.0.5"
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "eslint"
    ],
    "*.{js,jsx,ts,tsx,json,md}": [
      "prettier --check"
    ],
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  }
}

'''
'''--- src/api/jest-mongodb-config.js ---
module.exports = {
  mongodbMemoryServerOptions: {
    instance: {
      dbName: 'jest'
    },
    binary: {
      version: '4.0.3',
      skipMD5: true
    },
    autoStart: false
  }
}

'''
'''--- src/api/jest.config.js ---
module.exports = {
  roots: ['<rootDir>'],
  transform: {
    '^.+\\.tsx?$': 'ts-jest'
  },
  testRegex: '(/__tests__/.*|(\\.|/)(test|spec))\\.tsx?$',
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
  preset: '@shelf/jest-mongodb'
}

'''
'''--- src/api/kubernetesDeployment.json ---
{
  "apiVersion": "apps/v1",
  "kind": "Deployment",
  "metadata": { "name": "nearacademy-api" },
  "spec": {
    "replicas": 3,
    "selector": { "matchLabels": { "app": "nearacademy-api" } },
    "template": {
      "metadata": { "labels": { "app": "nearacademy-api" } },
      "spec": {
        "terminationGracePeriodSeconds": 30,
        "containers": [
          {
            "name": "nearacademy-api",
            "image": "registry.digitalocean.com/labs101/nearacademy-api",
            "imagePullPolicy": "Always"
          }
        ]
      }
    }
  }
}

'''
'''--- src/api/kubernetesService.json ---
{
  "apiVersion": "v1",
  "kind": "Service",
  "metadata": {
    "name": "nearacademy-api-service"
  },
  "spec": {
    "type": "LoadBalancer",
    "selector": { "app": "nearacademy-api" },
    "ports": [
      {
        "protocol": "TCP",
        "port": 80,
        "targetPort": 3000,
        "name": "http"
      }
    ]
  }
}

'''
'''--- src/api/package.json ---
{
  "name": "nearacademy-api",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "PORT=8080 NODE_ENV=development nodemon --watch src -e ts,tsx --exec ts-node src/index.ts",
    "build": "PORT=3000 NODE_ENV=production tsc",
    "test": "jest --runInBand --verbose",
    "coverage": "jest --runInBand --collectCoverage"
  },
  "dependencies": {
    "@koa/cors": "^3.1.0",
    "@koa/router": "^9.0.1",
    "@sendgrid/mail": "^7.1.1",
    "@typegoose/typegoose": "^7.2.0",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "chalk": "^4.0.0",
    "class-transformer": "^0.2.3",
    "class-validator": "^0.12.2",
    "dayjs": "^1.8.28",
    "dotenv": "^8.2.0",
    "jsonwebtoken": "^8.5.1",
    "koa": "^2.12.0",
    "koa-bodyparser": "^4.3.0",
    "koa-helmet": "^5.2.0",
    "mongoose": "^5.9.18",
    "near-api-js": "^0.44.2",
    "rate-limiter-flexible": "^2.1.6",
    "reflect-metadata": "^0.1.13",
    "speakingurl": "^14.0.1",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "@shelf/jest-mongodb": "^1.1.5",
    "@types/axios": "^0.14.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/jest": "^25.2.3",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/koa": "^2.11.3",
    "@types/koa-bodyparser": "^4.3.0",
    "@types/koa-helmet": "^5.2.0",
    "@types/koa__cors": "^3.0.1",
    "@types/koa__router": "^8.0.2",
    "@types/mongodb": "^3.5.20",
    "@types/mongoose": "^5.7.22",
    "@types/node": "^14.0.11",
    "@types/speakingurl": "^13.0.2",
    "@types/winston": "^2.4.4",
    "axios-mock-adapter": "^1.18.1",
    "jest": "^26.0.1",
    "jest-extended": "^0.11.5",
    "nodemon": "^2.0.4",
    "prettier": "^2.0.5",
    "supertest": "^4.0.2",
    "ts-jest": "^26.1.0",
    "ts-node": "^8.10.2",
    "typescript": "^3.9.5"
  },
  "engines": {
    "node": "^16.14.0"
  },
  "jest": {
    "testEnvironment": "node"
  }
}
'''
'''--- src/api/src/constants.ts ---
export const TEST = 'test'
export const DEVELOPMENT = 'development'
export const PRODUCTION = 'production'

'''
'''--- src/api/src/error.ts ---
import { Context, Next } from 'koa'

export const error = () => async (ctx: Context, next: Next): Promise<void> => {
  try {
    await next()
  } catch (err) {
    console.error(err)
    ctx.status = err.statusCode || err.status || 500
    ctx.body = {
      error: err.message,
    }
    // ctx.app.emit('error', err, ctx);
  }
}

'''
'''--- src/api/src/global.d.ts ---
import 'jest-extended'

'''
'''--- src/api/src/helpers/clone.ts ---
import { Context } from 'koa'

export const clone = (ctx: Context): Context => {
  return JSON.parse(JSON.stringify(ctx))
}

'''
'''--- src/api/src/helpers/dayjs.ts ---
import * as dayjs from 'dayjs'

export const DayJs = dayjs

'''
'''--- src/api/src/helpers/firstError.spec.ts ---
import { ValidationError } from 'class-validator'
import { firstError } from './firstError'

const mockErrors = [
  {
    target: {
      usernameOrEmail: undefined,
      password: undefined,
    },
    value: undefined,
    property: 'usernameOrEmail',
    children: [],
    constraints: {
      length: 'usernameOrEmail must be longer than or equal to 2 characters',
    },
  },
  {
    target: {
      usernameOrEmail: undefined,
      password: undefined,
    },
    value: undefined,
    property: 'password',
    children: [],
    constraints: {
      matches: 'Password must have at least one letter and one digit',
      length: 'password must be longer than or equal to 8 characters',
    },
  },
]

describe('Helper', () => {
  it('bypass if no validation error', () => {
    firstError([] as ValidationError[])
  })

  it('throws error the first validation error', () => {
    try {
      firstError(mockErrors as ValidationError[])
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('usernameOrEmail must be longer than or equal to 2 characters')
    }
  })
})

'''
'''--- src/api/src/helpers/firstError.ts ---
import { ValidationError } from 'class-validator'
import { ResponseError } from '../shared/mongo/ResponseError'

export const firstError = (errors: ValidationError[]): void => {
  const firstConstraint = errors[0] && errors[0].constraints
  if (firstConstraint) throw new ResponseError(400, firstConstraint[Object.keys(firstConstraint)[0]])
}

'''
'''--- src/api/src/helpers/toPublicUser.ts ---
import { PublicUser } from '../shared/user/PublicUser'
import { User } from '../shared/user/User'

export const toPublicUser = (user: User): PublicUser => {
  return {
    _id: user._id,
    username: user.username,
    name: user.name,
    accountName: user.accountName,
    emailVerified: user.emailVerified,
    progress: user.progress,
    createdAt: user.createdAt,
    certifiedAt: user.certifiedAt,
    referral: user.referral
  }
}

'''
'''--- src/api/src/helpers/typegoose.ts ---
import { prop, index, getModelForClass, modelOptions } from '@typegoose/typegoose'

export const Property = prop
export const Index = index
export const getModel = getModelForClass
export const ModelOptions = modelOptions

'''
'''--- src/api/src/index.ts ---
import * as cors from '@koa/cors'
import * as dotenv from 'dotenv'
import * as Koa from 'koa'
import * as bodyParser from 'koa-bodyparser'
import * as helmet from 'koa-helmet'
import * as mongoose from 'mongoose'

// import { DEVELOPMENT } from './constants'
import { error } from './error'
import { logger } from './logger'
import { router } from './router'
import { sanitize } from './sanitize'

import 'reflect-metadata'

const start = async (): Promise<void> => {
  try {
    // if (process.env.NODE_ENV === DEVELOPMENT)
    dotenv.config()
    if (!process.env.JWT_PRIVATE_KEY) throw new Error('Env variables not set')

    await mongoose.connect(process.env.MONGO_URL as string, {
      useCreateIndex: true,
      useNewUrlParser: true,
      useUnifiedTopology: true,
      useFindAndModify: false,
      bufferCommands: false,
      bufferMaxEntries: 0,
    })

    const app = new Koa()

    app.use(logger())
    app.use(error())
    app.use(helmet())
    app.use(cors())
    app.use(bodyParser({ enableTypes: ['json'] }))
    app.use(sanitize())

    app.use(router.routes())
    app.use(router.allowedMethods())

    app.listen(process.env.PORT, () => {
      console.info(`Server running on port ${process.env.PORT}`)
    })
  } catch (error) {
    console.error(error)
  }
}

/* eslint-disable @typescript-eslint/no-floating-promises */
start()
/* eslint-enable @typescript-eslint/no-floating-promises */

'''
'''--- src/api/src/logger.ts ---
import { Context } from 'koa'
import { format, transports } from 'winston'
import * as winston from 'winston'

import { DEVELOPMENT } from './constants'

export const logger = (): any => {
  winston.configure({
    level: process.env.NODE_ENV === DEVELOPMENT ? 'debug' : 'info',
    transports: [
      //
      // - Write all logs error (and below) to `error.log`.
      new transports.File({ filename: 'error.log', level: 'error' }),
      //
      // - Write to all logs with specified level to console.
      new transports.Console({
        format: format.combine(format.colorize(), format.simple()),
      }),
    ],
  })

  return async (ctx: Context, next: () => Promise<any>): Promise<void> => {
    const start = new Date().getTime()

    await next()

    const ms = new Date().getTime() - start

    let logLevel: string
    if (ctx.status >= 500) {
      logLevel = 'error'
    } else if (ctx.status >= 400) {
      logLevel = 'warn'
    } else {
      logLevel = 'info'
    }

    const msg = `${ctx.method} ${ctx.originalUrl} ${ctx.status} ${ms}ms`

    winston.log(logLevel, msg)
  }
}

'''
'''--- src/api/src/resolvers/captcha/helpers/captchaSolutions.ts ---
import { CaptchaSolution } from '../../../shared/captcha/CaptchaSolution'

export const captchaSolutions: CaptchaSolution[] = [
  '0021',
  '0031',
  '0054',
  '0160',
  '0175',
  '0259',
  '0376',
  '0379',
  '0391',
  '0511',
  '0595',
  '0655',
  '1027',
  '1070',
  '1284',
  '1564',
  '1802',
  '1924',
  '2112',
  '2285',
  '2327',
  '2541',
  '2576',
  '2705',
  '2893',
  '3032',
  '3202',
  '3214',
  '3353',
  '3355',
  '3552',
  '3637',
  '3641',
  '3784',
  '3895',
  '3986',
  '4010',
  '4066',
  '4068',
  '4263',
  '4521',
  '4589',
  '4650',
  '4679',
  '4967',
  '5005',
  '5210',
  '5286',
  '5318',
  '5325',
  '5415',
  '5573',
  '5677',
  '5738',
  '5790',
  '5799',
  '5851',
  '5910',
  '6030',
  '6057',
  '6185',
  '6684',
  '6747',
  '6800',
  '6803',
  '7002',
  '7088',
  '7172',
  '7457',
  '7484',
  '7533',
  '7555',
  '7563',
  '7784',
  '7946',
  '8173',
  '8211',
  '8300',
  '8319',
  '8408',
  '8468',
  '8706',
  '8713',
  '8730',
  '8848',
  '9083',
  '9173',
  '9223',
  '9226',
  '9301',
  '9326',
  '9367',
  '9377',
  '9402',
  '9585',
  '9644',
  '9662',
  '9683',
  '9784',
  '9824',
]

'''
'''--- src/api/src/resolvers/captcha/helpers/createCaptcha.ts ---
import { ObjectId } from 'mongodb'

import { Captcha, CaptchaModel } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { CaptchaPair } from '../../../shared/captcha/CaptchaPair'
import { getRandomCaptchaPair } from './getRandomCaptchaPair'

interface CreateCaptcha {
  (userId: ObjectId, captchaFor: CaptchaFor): Promise<Captcha>
}

export const createCaptcha: CreateCaptcha = async (userId, captchaFor) => {
  await CaptchaModel.deleteOne({ userId, captchaFor })

  const captchaPair: CaptchaPair = getRandomCaptchaPair()

  const captcha: Captcha = await CaptchaModel.create({
    userId,
    index: captchaPair.captchaIndex,
    solution: captchaPair.captchaSolution,
    captchaFor,
  } as Captcha)

  return captcha
}

'''
'''--- src/api/src/resolvers/captcha/helpers/getRandomCaptchaPair.ts ---
/* eslint-disable security/detect-object-injection */

import { CaptchaPair } from '../../../shared/captcha/CaptchaPair'
import { CaptchaSolution } from '../../../shared/captcha/CaptchaSolution'
import { captchaSolutions } from './captchaSolutions'

interface GetRandomCaptcha {
  (): CaptchaPair
}

export const getRandomCaptchaPair: GetRandomCaptcha = () => {
  const captchaIndex: number = Math.floor(Math.random() * 100)
  const captchaSolution: CaptchaSolution = captchaSolutions[captchaIndex]
  const captchaPair: CaptchaPair = {
    captchaIndex,
    captchaSolution,
  }

  return captchaPair
}

'''
'''--- src/api/src/resolvers/near/config.ts ---
/* @ts-ignore */
const contractName = 'meme-museum.testnet';

/* @ts-ignore */
module.exports = function getConfig(isServer = false) {
  let config = {
    networkId: "testnet",
    nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
    helperUrl: "https://helper.testnet.near.org",
    contractName,
  };

  if (process.env.REACT_APP_ENV === undefined) {
    config = {
      ...config,
      /* @ts-ignore */
      GAS: "200000000000000",
      DEFAULT_NEW_ACCOUNT_AMOUNT: "5",
      contractMethods: {
        changeMethods: ["create_meme", "add_meme"],
        viewMethods: ["get_meme_count", "get_meme_list"],
      },
    };
  }

  if (process.env.REACT_APP_ENV === "prod") {
    config = {
      ...config,
      networkId: "mainnet",
      nodeUrl: "https://rpc.mainnet.near.org",
      walletUrl: "https://wallet.near.org",
      helperUrl: "https://helper.mainnet.near.org",
      /* @ts-ignore */
      CONTRACT_NAME: "near",
    };
  }

  return config;
};
'''
'''--- src/api/src/resolvers/near/getReward.ts ---
// const fs = require('fs');
import * as dotenv from 'dotenv'
import { Account, KeyPair, keyStores, Near, utils } from 'near-api-js'

import { Context, Next } from 'koa'

// eslint-disable-next-line @typescript-eslint/no-var-requires
const getConfig = require('./config')

dotenv.config()

const { nodeUrl, networkId, contractName, contractMethods } = getConfig(true)

// const credentials = JSON.parse(fs.readFileSync(`${process.env.HOME}/.near-credentials/${networkId}/${contractName}.json`));
const credentials = {
  account_id: process.env.account_id,
  public_key: process.env.public_key,
  private_key: process.env.private_key,
}

const keyStore = new keyStores.InMemoryKeyStore()

/* @ts-ignore */
keyStore.setKey(networkId, contractName, KeyPair.fromString(credentials.private_key))

const near = new Near({
  headers: {},
  networkId,
  nodeUrl,
  deps: { keyStore },
})

const { connection } = near
const contractAccount = new Account(connection, contractName)
/* @ts-ignore */
contractAccount.addAccessKey = (publicKey) =>
  contractAccount.addKey(publicKey, contractName, contractMethods.changeMethods, utils.format.parseNearAmount('0.1'))

export async function sendReward(receiver: string, amount: string) {
  const amountInYocto = utils.format.parseNearAmount(amount)
  const result = await contractAccount.sendMoney(receiver, amountInYocto)

  return result
}

export const getReward = async (ctx: Context, next: Next): Promise<void> => {
  const transaction = '' // await sendReward('bob3.testnet', "1")

  const response: any = { transaction }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/near/issueNft.ts ---
// const fs = require('fs');
import * as dotenv from 'dotenv'
import { Account, Contract, KeyPair, keyStores, Near, utils } from 'near-api-js'

// eslint-disable-next-line @typescript-eslint/no-var-requires
const getConfig = require('./nftConfig')

dotenv.config()

const { nodeUrl, networkId, contractMethods } = getConfig(true)
const contractName = 'test.museum-nft.testnet'

const credentials = {
  account_id: process.env.account_id,
  public_key: process.env.public_key,
  private_key: process.env.private_key,
}

const keyStore = new keyStores.InMemoryKeyStore()

/* @ts-ignore */
keyStore.setKey(networkId, contractName, KeyPair.fromString(credentials.private_key))

const near = new Near({
  headers: {},
  networkId,
  nodeUrl,
  deps: { keyStore },
})

const { connection } = near
const contractAccount = new Account(connection, contractName)

contractMethods.sender = contractAccount
/* @ts-ignore */
const contract = new Contract(contractAccount, contractName, contractMethods)

const tokenType = 'test'

export async function issueNftCertificate(username: string, tokenId: number, accountName: string) {
  /* @ts-ignore */
  // const r = await contract.nft_tokens({ "from_index": "0", "limit": "10000" })
  const now: string = Date.now().toString()

  const amountInYocto = utils.format.parseNearAmount('1')

  /* @ts-ignore */
  const receipt = await contract.nft_mint(
    {
      token_id: tokenId.toString(),
      receiver_id: accountName,
      owner_id: accountName,
      metadata: { media: 'https://near.academy/certificate/' + username, issued_at: now },
      token_type: tokenType,
    },
    300000000000000, // attached GAS (optional)
    amountInYocto, // attached deposit in yoctoNEAR
  )

  return receipt
}

'''
'''--- src/api/src/resolvers/near/nftConfig.ts ---
/* @ts-ignore */
const contractName = 'museum-nft.testnet';

/* @ts-ignore */
module.exports = function getConfig(isServer = false) {
  let config = {
    networkId: "testnet",
    nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
    helperUrl: "https://helper.testnet.near.org",
    contractName,
  };

  if (process.env.REACT_APP_ENV === undefined) {
    config = {
      ...config,
      /* @ts-ignore */
      GAS: "200000000000000",
      DEFAULT_NEW_ACCOUNT_AMOUNT: "1",
      contractMethods: {
        changeMethods: [	
        "new",
        "nft_mint",
        "nft_transfer",
        "nft_approve_account_id"
        ],
        viewMethods: ["get_token_ids", "nft_tokens"],
      },
    };
  }

  if (process.env.REACT_APP_ENV === "prod") {
    config = {
      ...config,
      networkId: "mainnet",
      nodeUrl: "https://rpc.mainnet.near.org",
      walletUrl: "https://wallet.near.org",
      helperUrl: "https://helper.mainnet.near.org",
      /* @ts-ignore */
      nftConfig: "near",
    };
  }

  return config;
};
'''
'''--- src/api/src/resolvers/near/sendMoney.ts ---
// const fs = require('fs');
import * as dotenv from 'dotenv'
import { Account, KeyPair, keyStores, Near, utils } from "near-api-js";

const getConfig = require('./config');

dotenv.config()

const { nodeUrl, networkId, contractName, contractMethods } = getConfig(true);

const credentials = {
  account_id: process.env.account_id,
  public_key: process.env.public_key,
  private_key: process.env.private_key
};

const keyStore = new keyStores.InMemoryKeyStore();

/* @ts-ignore */
keyStore.setKey(networkId, contractName, KeyPair.fromString(credentials.private_key));

const near = new Near({
  networkId, nodeUrl,
  headers: {},
  deps: { keyStore },
});

const { connection } = near;
const contractAccount = new Account(connection, contractName);
/* @ts-ignore */
contractAccount.addAccessKey = (publicKey) => contractAccount.addKey(publicKey, contractName, contractMethods.changeMethods, parseNearAmount('0.1'));
// const contract = new Contract(contractAccount, contractName, contractMethods);

// console.log(contract)

export async function sendMoney(receiver: string, amount: string) {
  const amountInYocto = utils.format.parseNearAmount(amount);
  const result = await contractAccount.sendMoney(receiver, amountInYocto)
  // console.log(result);
  return result;
}

// sendMoney('bob3.testnet', "1")

'''
'''--- src/api/src/resolvers/page/getPublicUser/getPublicUser.spec.ts ---
import { Context, Next } from 'koa'

import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { getPublicUser } from './getPublicUser'

let user: User
let next: Next

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    next = created.next
  })

  it('can get public user', async (done) => {
    const ctx: Context = {
      request: {
        headers: {},
        body: {
          username: user.username,
        },
      },
    } as Context

    await getPublicUser(ctx, next)

    expect(ctx.body.user).toBeDefined()
    done()
  })

  it('cannot get undefined public user', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {},
          body: {
            username: 'unexisting',
          },
        },
      } as Context

      await getPublicUser(ctx, next)

      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toEqual('User not found')
    }
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/page/getPublicUser/getPublicUser.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { GetPublicUserInputs, GetPublicUserOutputs } from '../../../shared/page/GetPublicUser'
import { PublicUser } from '../../../shared/user/PublicUser'
import { UserModel } from '../../../shared/user/User'

export const PUBLIC_USER_MONGO_SELECTOR = '_id username name emailVerified progress createdAt referral accountName'

export const getPublicUser = async (ctx: Context, next: Next): Promise<void> => {
  const getPublicUserArgs = plainToClass(GetPublicUserInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(getPublicUserArgs, { forbidUnknownValues: true }).catch(firstError)
  const { username } = getPublicUserArgs

  const user: PublicUser = (await UserModel.findOne({ username }, PUBLIC_USER_MONGO_SELECTOR).lean()) as PublicUser
  if (!user) throw new ResponseError(404, 'User not found')

  let pending = 0
  let completed = 0
  let rewarded = 0

  if (user && user.referral) {
      user.referral.forEach(item => {
          switch (item.status) {
              case 'PENDING':
                  pending++;
                  break;
              case 'COMPLETED':
                  completed++;
                  break;
              case 'REWARDED':
                  rewarded++;
                  break;
          }
      })
  }

  user.stats = {
    pending,
    completed,
    rewarded
  }

  const response: GetPublicUserOutputs = { user }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/page/setAccountName/setAccountName.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { toPublicUser } from '../../../helpers/toPublicUser'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { SetAccountNameInputs, SetAccountNameOutputs } from '../../../shared/page/SetAccountName'
import { PublicUser } from '../../../shared/user/PublicUser'
import { User, UserModel } from '../../../shared/user/User'
import { issueNftCertificate } from '../../near/issueNft'
import { rateLimit } from '../../quota/rateLimit/rateLimit'
import { authenticate } from '../../user/helpers/authenticate'

// export const PUBLIC_USER_MONGO_SELECTOR = '_id username emailVerified progress createdAt'

export const setAccountName = async (ctx: Context, next: Next): Promise<void> => {
  console.log(ctx.request.body)
  const setAccountNameArgs = plainToClass(SetAccountNameInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(setAccountNameArgs, { forbidUnknownValues: true }).catch(firstError)
  const { accountName } = setAccountNameArgs

  const user: User = await authenticate(ctx)

  await rateLimit(user._id)

  const accountNameRegEx = /^[a-zA-Z0-9_]*.(testnet|near)$/
  console.log(accountName, accountNameRegEx.test(accountName), accountNameRegEx.test('foxtnettestnet'))
  if (!accountNameRegEx.test(accountName)) throw new ResponseError(404, 'Invalid account name')

  const count = await UserModel.countDocuments({ tokenId: { $exists: true } }).exec()
  const offset = 400
  const tokenId = count + offset

  await issueNftCertificate(user.username, tokenId, accountName)

  const updatedUser: User = (await UserModel.updateOne(
    { _id: user._id },
    { $set: { tokenId: count + offset, accountName } },
  ).exec()) as User

  const publicUser: PublicUser = toPublicUser(updatedUser)

  const response: SetAccountNameOutputs = { user: publicUser }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/page/setName/setName.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { toPublicUser } from '../../../helpers/toPublicUser'
import { SetNameInputs, SetNameOutputs } from '../../../shared/page/SetName'
import { PublicUser } from '../../../shared/user/PublicUser'
import { User, UserModel } from '../../../shared/user/User'
import { rateLimit } from '../../quota/rateLimit/rateLimit'
import { authenticate } from '../../user/helpers/authenticate'

export const PUBLIC_USER_MONGO_SELECTOR = '_id username emailVerified progress createdAt certifiedAt'

export const setName = async (ctx: Context, next: Next): Promise<void> => {
  const setNameArgs = plainToClass(SetNameInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(setNameArgs, { forbidUnknownValues: true }).catch(firstError)
  const { name } = setNameArgs

  const user: User = await authenticate(ctx)

  await rateLimit(user._id)

  const now: Date = new Date();

  await UserModel.updateOne(
    { _id: user._id },
    { $set: { name: name, certifiedAt: now } },
  ).exec()

  const updatedUser: User = await UserModel.findOne(
    { _id: user._id },
  ).lean() as User

  console.log(updatedUser)

  const publicUser: PublicUser = toPublicUser(updatedUser)
  
  const response: SetNameOutputs = { user: publicUser }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/quota/rateLimit/rateLimit.spec.ts ---
import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { PRODUCTION, TEST } from '../../../constants'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { Quota, QuotaModel } from '../../../shared/quota/Quota'
import { QuotaType } from '../../../shared/quota/QuotaType'
import { rateLimit } from './rateLimit'

let user: User

describe('User', () => {
  beforeAll(async () => {
    process.env.NODE_ENV = TEST
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    process.env.NODE_ENV = PRODUCTION
  })

  it('rate limit is created', async (done) => {
    const limitBefore: Quota | null = await QuotaModel.findOne({ userId: user._id }).lean()
    expect(limitBefore).toBeNull()

    await rateLimit(user._id)

    const limitAfter: Quota | null = await QuotaModel.findOne({ userId: user._id }).lean()
    expect(limitAfter && limitAfter.count).toEqual(1)

    done()
  })

  it('rate limiter is throwing at fast action', async (done) => {
    try {
      for (let i = 0; i < 4; i++) await rateLimit(user._id, QuotaType.NEW_CAPTCHA)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error.message).toEqual('Quota limit reached. Please wait 24h and retry.')
    }
    done()
  })

  //   it('rate limiter is resetting', async (done) => {
  //     await sleep(60000)
  //     const limitBefore: Quota | null = await QuotaModel.findOne({ _id: user._id }).lean()
  //     expect(limitBefore).toBeNull()
  //     done()
  //   })

  afterAll(async () => {
    await deleteTestUser(user._id)
    process.env.NODE_ENV = TEST
  })
})

'''
'''--- src/api/src/resolvers/quota/rateLimit/rateLimit.ts ---
import { ObjectId } from 'mongodb'

import { DayJs } from '../../../helpers/dayjs';

import { ResponseError } from '../../../shared/mongo/ResponseError'
import { QuotaModel, Quota } from '../../../shared/quota/Quota'
import { TEST } from '../../../constants'
import { QuotaType } from '../../../shared/quota/QuotaType'
import { QuotaRates } from '../../../shared/quota/QuotaRates'

interface RateLimit {
  (userId: ObjectId, quotaType?: QuotaType): Promise<void>
}

interface IUpdateFields {
  count?: number,
  expiresAt?: Date,
  $inc?: {
    count: number,
  }
}

export const rateLimit: RateLimit = async (userId, quotaType = QuotaType.DEFAULT_LIMIT) => {
  if (process.env.NODE_ENV === TEST) return

  let fields;
  let limitBefore: Quota | null = null;

  const quota = await QuotaModel.findOne({ userId, quotaType });

  const updateQuota = async (updateFields: IUpdateFields) => {
    const newQuota = await QuotaModel.findOneAndUpdate(
      { userId, quotaType },
      updateFields,
      { upsert: true, setDefaultsOnInsert: true, new: true },
    ).exec()

    return newQuota;
  }

  if (quota && DayJs().isAfter(quota.expiresAt)) {
    fields = {
      count: 1,
      expiresAt: DayJs(quota.expiresAt).add(1, 'day').toDate(),
    }

    limitBefore = await updateQuota(fields)

  } else {

    fields = {
      $inc: { count: 1 },
    }
    limitBefore = await updateQuota(fields)
  }

  if (limitBefore && limitBefore.count && limitBefore.count > QuotaRates[quotaType])
    throw new ResponseError(429, 'Quota limit reached. Please wait 24h and retry.')
}

'''
'''--- src/api/src/resolvers/user/addProgress/addProgress.spec.ts ---
import { Context, Next } from 'koa'

import { Jwt } from '../../../shared/user/Jwt'
import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { addProgress } from './addProgress'

let user: User
let next: Next
let jwt: Jwt

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    jwt = created.jwt
    next = created.next
  })

  it('can add progress', async (done) => {
    const ctx: Context = {
      request: {
        headers: {
          authorization: 'Bearer ' + jwt,
        },
        body: {
          chapterDone: '/chapter-1',
        },
      },
    } as Context

    await addProgress(ctx, next)

    expect(ctx.body.user).toBeDefined()
    expect(ctx.body.user.progress).toContain('/chapter-1')

    done()
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/addProgress/addProgress.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { toPublicUser } from '../../../helpers/toPublicUser'
import { AddProgressInputs, AddProgressOutputs } from '../../../shared/user/AddProgress'
import { PublicUser } from '../../../shared/user/PublicUser'
import { User, UserModel } from '../../../shared/user/User'
import { rateLimit } from '../../quota/rateLimit/rateLimit'
import { authenticate } from '../helpers/authenticate'

export const PUBLIC_USER_MONGO_SELECTOR = '_id username emailVerified createdAt'

export const addProgress = async (ctx: Context, next: Next): Promise<void> => {
  const addProgressArgs = plainToClass(AddProgressInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(addProgressArgs, { forbidUnknownValues: true }).catch(firstError)
  const { chapterDone } = addProgressArgs

  const user: User = await authenticate(ctx)

  await rateLimit(user._id)

  await UserModel.updateOne(
    { _id: user._id },
    { $addToSet: { progress: chapterDone } },
  ).exec()

  const updatedUser: User = await UserModel.findOne(
    { _id: user._id },
  ).lean() as User

  const publicUser: PublicUser = toPublicUser(updatedUser)

  // set referral to completed 
  if (publicUser.progress && publicUser.progress.length >= 8) {
    // update referral status
    await UserModel.updateOne(
      { "referral": { $elemMatch: { username: publicUser.username, status: 'PENDING' } } },
      { $set: { "referral.$.status": 'COMPLETED' } }) // TODO: use const enum here
      .exec();
  }

  const response: AddProgressOutputs = { user: publicUser }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/user/changePassword/changePassword.spec.ts ---
import { Context, Next } from 'koa'

import { Jwt } from '../../../shared/user/Jwt'
import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { changePassword } from './changePassword'

let user: User
let jwt: Jwt
let next: Next

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    jwt = created.jwt
    next = created.next
  })

  it('can change their password', async (done) => {
    const ctx: Context = {
      request: {
        headers: {
          authorization: 'Bearer ' + jwt,
        },
        body: {
          password: 'Bob1234#',
          newPassword: 'New1234#',
        },
      },
    } as Context

    await changePassword(ctx, next)

    expect(ctx.status).toEqual(200)
    done()
  })

  it('cannot change with a wrong password', async (done) => {
    try {
      const ctx: Context = {
        request: {
          headers: {
            authorization: 'Bearer ' + jwt,
          },
          body: {
            password: 'Wrong1234#',
            newPassword: 'New1234#',
          },
        },
      } as Context

      await changePassword(ctx, next)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error.message).toEqual('Wrong username or password')
    }

    done()
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/changePassword/changePassword.ts ---
import { hash } from 'bcryptjs'
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { ChangePasswordInputs } from '../../../shared/user/ChangePassword'
import { User, UserModel } from '../../../shared/user/User'
import { authenticate } from '../helpers/authenticate'
import { matchPassword } from '../helpers/matchPassword'
import { rateLimit } from '../../quota/rateLimit/rateLimit'

export const changePassword = async (ctx: Context, next: Next): Promise<void> => {
  const changePasswordArgs = plainToClass(ChangePasswordInputs, ctx.request.body, {
    excludeExtraneousValues: true,
  })
  await validateOrReject(changePasswordArgs, { forbidUnknownValues: true }).catch(firstError)
  const { password, newPassword } = changePasswordArgs

  const user: User = await authenticate(ctx)

  await rateLimit(user._id)

  await matchPassword(password, user.hashedPassword)

  const hashedPassword = await hash(newPassword, 12)
  await UserModel.updateOne({ _id: user._id }, { hashedPassword }).exec()

  ctx.status = 200
  ctx.body = {}

  await next()
}

'''
'''--- src/api/src/resolvers/user/forgotPassword/forgotPassword.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { Captcha } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { ForgotPasswordInputs, ForgotPasswordOutputs } from '../../../shared/user/ForgotPassword'
import { User, UserModel } from '../../../shared/user/User'
import { createCaptcha } from '../../captcha/helpers/createCaptcha'
import { sendEmailForgotPassword } from '../helpers/sendEmailForgotPassword'
import { verifyRecaptchaToken } from '../helpers/verifyRecaptchaToken'
import { rateLimit } from '../../quota/rateLimit/rateLimit'
import { QuotaType } from '../../../shared/quota/QuotaType'

export const forgotPassword = async (ctx: Context, next: Next): Promise<void> => {
  const forgotPasswordArgs = plainToClass(ForgotPasswordInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(forgotPasswordArgs, { forbidUnknownValues: true }).catch(firstError)
  const { usernameOrEmail, recaptchaToken } = forgotPasswordArgs

  await verifyRecaptchaToken(recaptchaToken)

  let user: User | null = await UserModel.findOne({ email: usernameOrEmail }).lean()
  if (!user) {
    user = await UserModel.findOne({ username: usernameOrEmail }).lean()
  }
  if (!user) throw new ResponseError(401, 'Wrong username or password')

  await rateLimit(user._id, QuotaType.NEW_CAPTCHA)

  const captcha: Captcha = await createCaptcha(user._id, CaptchaFor.CAPTCHA_FOR_RESET_PASSWORD)

  await sendEmailForgotPassword(user.email, user.username, captcha.solution, captcha.token)

  const response: ForgotPasswordOutputs = { token: captcha.token }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/user/helpers/authenticate.spec.ts ---
import { Context } from 'koa'

import { Jwt } from '../../../shared/user/Jwt'
import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { authenticate } from './authenticate'

let user: User
let jwt: Jwt

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    jwt = created.jwt
  })

  it('can authenticate', async (done) => {
    const ctx: Context = {
      request: {
        headers: {
          authorization: 'Bearer ' + jwt,
        },
        body: {},
      },
    } as Context

    const user: User = await authenticate(ctx)
    expect(user).toBeDefined()
    done()
  })

  it('throws at invalid jwt', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {
            authorization:
              'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTVkMDZlNTUzZDM1ZWM4YjYwYTdkYTkiLCJ1c2VybmFtZSI6InRlc3QiLCJleHBpcmVzQXQiOiIyMDIwLTA0LTAxVDEyOjE1OjE4LjI3OVoiLCJpYXQiOjE1ODMxNTQ5MTgsImV4cCI6MTU4NTc0NjkxOCwiYXVkIjoiaHR0cHM6Ly9zZXJ2ZXJsZXNzc3RhY2suY29tIiwiaXNzIjoiU2VydmVybGVzcyBTdGFjayIsInN1YiI6InRlc3QifQ.WfFHjO3duzcFn1NzNzXm5DBhOvC4Ox48jhiE1KhGG5cn0N9wTYQerJtoTFENgRkFleWigOOm-CVBXgAtYa1Oyg',
          },
          body: {},
        },
      } as Context

      await authenticate(ctx)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('invalid signature')
    }
  })

  it('throws if no token sent', async () => {
    try {
      const ctx: Context = {
        request: {
          body: {},
        },
      } as Context

      await authenticate(ctx)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('No bearer token present in request')
    }
  })

  it('throws if jwt has expired', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {
            authorization:
              'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWE2ZDJiNTMxNWM5YmY2NTJiMmY5Y2YiLCJ1c2VybmFtZSI6ImR3ZHcxMjM0NSIsImV4cGlyZXNBdCI6IjIwMjAtMDUtMjdUMTU6MzI6NTMuNDg0WiIsImlhdCI6MTU4ODAwMTU3MywiZXhwIjoxNTkwNTkzNTczLCJhdWQiOiJodHRwczovL2VudGlyZXN0YWNrLmNvbSIsImlzcyI6IkVudGlyZSBTdGFjayIsInN1YiI6ImR3ZHcxMjM0NSJ9.PaNHCES1qlIhMgHfXoUT6eSAFJWqi2Kj5U6OLIfMSKim3601ijInfHUe5ZBAXTAxd14Rbgy6g871oZwHnKHi4A',
          },
          body: {},
        },
      } as Context

      await authenticate(ctx)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('jwt expired')
    }
  })

  it('throws if no user corresponds to jwt', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {
            authorization:
              'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWQxMDIwYjk3Y2ViNzI0MmM0OTU5MTgiLCJ1c2VybmFtZSI6ImJvYjIiLCJleHBpcmVzQXQiOiIyMDIwLTA2LTI4VDEyOjM3OjMxLjM4N1oiLCJpYXQiOjE1OTA3NTU4NTEsImV4cCI6MTU5MzM0Nzg1MSwiYXVkIjoiaHR0cHM6Ly9jcmFja3dhdGNoLmNvbSIsImlzcyI6IkNyYWNrd2F0Y2giLCJzdWIiOiJib2IyIn0.GpB9OWlbN8jbcIGahCSqGisqjpyo8vzYvdCYN5KACBp9dZ0IzCeupKy2o7t0k06Fg94WByhVgTuvGH-tnj8TqQ',
          },
          body: {},
        },
      } as Context

      await authenticate(ctx)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('User not found')
    }
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/authenticate.ts ---
import { Context } from 'koa'

import { ResponseError } from '../../../shared/mongo/ResponseError'
import { Jwt } from '../../../shared/user/Jwt'
import { JwtPayload } from '../../../shared/user/JwtPayload'
import { User, UserModel } from '../../../shared/user/User'
import { verifySignedJwt } from './verifySignedJwt'

interface Authenticate {
  (ctx: Context): Promise<User>
}

export const authenticate: Authenticate = async (ctx) => {
  const bearerToken = ctx.request.headers ? ctx.request.headers.authorization : undefined
  if (!bearerToken) throw new ResponseError(401, 'No bearer token present in request')

  const jwt: Jwt = bearerToken.replace('Bearer ', '')

  const jwtPayload: JwtPayload = verifySignedJwt(jwt)

  const user: User = (await UserModel.findOne({ _id: jwtPayload._id }).lean()) as User
  if (!user) throw new ResponseError(404, 'User not found')

  return user
}

'''
'''--- src/api/src/resolvers/user/helpers/getSignedJwt.spec.ts ---
import * as jsonwebtoken from 'jsonwebtoken'

import { Jwt } from '../../../shared/user/Jwt'
import { JwtDecoded } from '../../../shared/user/JwtDecoded'
import { UserRole } from '../../../shared/user/UserRole'
import { getSignedJwt } from './getSignedJwt'

describe('User', () => {
  beforeAll(() => {
    process.env.JWT_PRIVATE_KEY =
      '-----BEGIN RSA PRIVATE KEY-----\nMIIBOAIBAAJAdbl2XgrYP6biZBeaWDm0ejnmDipjNXG5qLXNQe5uxqXZDr3zvJP6\n9t9F0DttXWKqerb05LmwWYgnOOVPrmBN0wIDAQABAkAMyMg27DyRpQDe18VWIWYd\nA96c2TOO4TvFO4D/0PHMtp0AxQLC7gS6gMYXSG25gyBGl8ywhjYYKp4zdecxW5UB\nAiEA4RgFBMtaL2p6uNnJqa/kc5k4pGPUMii81Gig03S54IECIQCF43EeIykLl7SQ\nIEJRwx3SY+H6TqZOlqLhN3+PkVqEUwIga6lDbUGeRyOUwylX7VN131yf3PDqo3sc\npjPNCJbB+QECICNydvVaq7hE/uoVkFljRhb4mNCTWBaAbTkhX2VcP1G/AiBeEpLY\nsU90PIZjVhgSVgi+eA6gPAyZJzRoPB+3XyZ3ZQ==\n-----END RSA PRIVATE KEY-----'
  })

  it('can get a signed JWT for users', () => {
    const _id = 'testId'
    const username = 'testUsername'

    const jwt: Jwt = getSignedJwt(_id, username)
    expect(jwt).toBeDefined()

    const jwtDecoded: JwtDecoded = jsonwebtoken.decode(jwt) as JwtDecoded

    expect(jwtDecoded._id).toEqual(_id)
    expect(jwtDecoded.username).toEqual(username)
    expect(jwtDecoded.expiresAt).toBeDefined()
    expect(jwtDecoded.exp).toEqual(jwtDecoded.iat + 2592000)
    expect(jwtDecoded.sub).toEqual(username)
  })

  it('can get a signed JWT for admins', () => {
    const _id = 'testId'
    const username = 'testUsername'

    const jwt: Jwt = getSignedJwt(_id, username, UserRole.ADMIN)
    expect(jwt).toBeDefined()

    const jwtDecoded: JwtDecoded = jsonwebtoken.decode(jwt) as JwtDecoded

    expect(jwtDecoded.userRole).toEqual(UserRole.ADMIN)
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/getSignedJwt.ts ---
import * as dayjs from 'dayjs'
import * as jsonwebtoken from 'jsonwebtoken'
import { Secret, SignOptions } from 'jsonwebtoken'

import { Jwt } from '../../../shared/user/Jwt'
import { JwtPayload } from '../../../shared/user/JwtPayload'
import { UserRole } from '../../../shared/user/UserRole'

interface GetSignedJwt {
  (_id: string, username: string, userRole?: UserRole): Jwt
}

export const getSignedJwt: GetSignedJwt = (_id, username, userRole) => {
  const expiresAt: Date = dayjs().add(30, 'day').toDate()

  const payload: JwtPayload = {
    _id,
    username,
    userRole,
    expiresAt,
  }

  const signOptions: SignOptions = {
    issuer: 'NearAcademy',
    subject: username + '',
    audience: 'https://near.academy',
    expiresIn: '30d',
    algorithm: 'RS256',
  }

  const jwt: Jwt = jsonwebtoken.sign(payload, process.env.JWT_PRIVATE_KEY as Secret, signOptions)

  return jwt
}

'''
'''--- src/api/src/resolvers/user/helpers/matchPassword.spec.ts ---
import { hash } from 'bcryptjs'

import { matchPassword } from './matchPassword'

describe('User', () => {
  it('can match correct passwords', async (done) => {
    const password = 'Test#123'
    const hashedPassword = await hash(password, 12)
    await matchPassword(password, hashedPassword)
    done()
  })

  it('cannot match incorrect passwords', async (done) => {
    try {
      const password = 'Test#123'
      const hashedPassword = await hash(password, 12)
      await matchPassword(password + 'x', hashedPassword)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Wrong username or password')
      done()
    }
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/matchPassword.ts ---
import { compare } from 'bcryptjs'

import { ResponseError } from '../../../shared/mongo/ResponseError'

interface MatchPassword {
  (proposedPassword: string, hashedPassword: string): Promise<void>
}

export const matchPassword: MatchPassword = async (proposedPassword, hashedPassword) => {
  const isMatch: boolean = await compare(proposedPassword, hashedPassword)
  if (!isMatch) throw new ResponseError(401, 'Wrong username or password')
}

'''
'''--- src/api/src/resolvers/user/helpers/sendEmailForgotPassword.ts ---
import { MailDataRequired } from '@sendgrid/helpers/classes/mail'
import * as sendgrid from '@sendgrid/mail'

interface SendEmailForgotPassword {
  (email: string, username: string, captchaIndex: string, token: string): Promise<void>
}

export const sendEmailForgotPassword: SendEmailForgotPassword = async (email, username, captchaSolution, token) => {
  sendgrid.setApiKey(process.env.SENDGRID_API_KEY as string)

  const link = `${process.env.FRONTEND_URL}/reset-password?key=${token}`;
  console.log(link);
  const message: MailDataRequired = {
    to: email,
    from: { name: 'NearAcademy', email: process.env.FROM_EMAIL as string },
    subject: 'Password reset',
    text: `
      Dear ${username},
      <br/>
      <br/>
      Please enter the following: ${captchaSolution} <br />on <a href="https://near.academy/reset-password?key=${token}">https://near.academy/reset-password?key=${token}</a>
      <br/>
      <br/>
      NEAR Academy.
    `,
    html: `
      Dear ${username},
      <br/>
      <br/>
      Please enter the following: ${captchaSolution} <br />on <a href="https://near.academy/reset-password?key=${token}">https://near.academy/reset-password?key=${token}</a>
      <br/>
      <br/>
      NEAR Academy.
    `,
  }

  await sendgrid.send(message)
}

'''
'''--- src/api/src/resolvers/user/helpers/verifyCaptcha.spec.ts ---
import { CaptchaModel } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { verifyCaptcha } from './verifyCaptcha'

let user: User

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
  })

  it('can verify captcha', async (done) => {
    const proposedSolution = '0000'
    await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
    done()
  })

  it('throws at invalid captcha', async (done) => {
    try {
      const proposedSolution = '1111'
      await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Wrong captcha entered')
      done()
    }
  })

  it('allows next 2nd attempt', async (done) => {
    try {
      const proposedSolution = '22222'
      await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Wrong captcha entered')
      done()
    }
  })

  it('allows next 3rd attempt', async (done) => {
    try {
      const proposedSolution = '3333'
      await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Wrong captcha entered')
      done()
    }
  })

  it('blocks account at 4th attempt', async (done) => {
    try {
      const proposedSolution = '4444'
      await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Maximum attempts reached - Please click "Send another email"')
      done()
    }

    done()
  })

  it('expires the captcha', async (done) => {
    try {
      await CaptchaModel.deleteOne({ userId: user._id, captchaFor: CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL })
      const proposedSolution = '0000'
      await verifyCaptcha(user._id, proposedSolution, CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL)
      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toBe('Captcha expired - Please click "Send another email"')
      done()
    }

    done()
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/verifyCaptcha.ts ---
import { ObjectId } from 'mongodb'

import { Captcha, CaptchaModel } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { ResponseError } from '../../../shared/mongo/ResponseError'

interface VerifyCaptcha {
  (userId: ObjectId, proposedSolution: string, captchaFor: CaptchaFor): Promise<void>
}

export const verifyCaptcha: VerifyCaptcha = async (userId, proposedSolution, captchaFor) => {
  const captcha: Captcha = (await CaptchaModel.findOne({ userId, captchaFor }).lean()) as Captcha

  if (!captcha) throw new ResponseError(400, 'Captcha expired - Please click "Send another email"')

  if (captcha.attempts && captcha.attempts >= 3)
    throw new ResponseError(401, 'Maximum attempts reached - Please click "Send another email"')

  if (captcha.solution === proposedSolution) return

  await CaptchaModel.updateOne({ _id: captcha._id }, { $inc: { attempts: 1 } }).exec()

  throw new ResponseError(400, 'Wrong captcha entered')
}

'''
'''--- src/api/src/resolvers/user/helpers/verifyRecaptchaToken.spec.ts ---
import axios, { AxiosResponse } from 'axios'
import { mocked } from 'ts-jest/utils'

import { DEVELOPMENT, PRODUCTION } from '../../../constants'
import { verifyRecaptchaToken } from './verifyRecaptchaToken'

jest.mock('axios')
const mockedAxios = mocked(axios, true)

describe('Users', () => {
  it('can verify re-captcha in development', async () => {
    process.env.NODE_ENV = DEVELOPMENT

    await verifyRecaptchaToken('mockToken')

    expect(axios).not.toHaveBeenCalled()
  })

  it('can verify re-captcha in production', async () => {
    process.env.NODE_ENV = PRODUCTION

    const expectedResult = { success: true }
    const feedResponsePromise = Promise.resolve({ data: expectedResult } as AxiosResponse)
    mockedAxios.mockReturnValueOnce(feedResponsePromise)
    const recaptchaToken = 'testRecaptchaToken'

    await verifyRecaptchaToken(recaptchaToken)

    expect(axios).toHaveBeenCalled()
  })

  it('throws at wrong re-captcha in production', async () => {
    process.env.NODE_ENV = PRODUCTION

    try {
      const expectedResult = { success: false }
      const feedResponsePromise = Promise.resolve({ data: expectedResult } as AxiosResponse)
      mockedAxios.mockReturnValueOnce(feedResponsePromise)
      const recaptchaToken = 'testRecaptchaToken'

      await verifyRecaptchaToken(recaptchaToken)
      throw new Error('Should not reach this point')
    } catch (e) {
      expect(axios).toHaveBeenCalled()
      expect(e.message).toEqual('Wrong re-captcha token')
    }
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/verifyRecaptchaToken.ts ---
import axios from 'axios'

import { DEVELOPMENT, TEST } from '../../../constants'
import { ResponseError } from '../../../shared/mongo/ResponseError'

interface VerifyRecaptchaToken {
  (recaptchaToken: string): Promise<void>
}

export const verifyRecaptchaToken: VerifyRecaptchaToken = async (recaptchaToken) => {
  if (process.env.NODE_ENV === DEVELOPMENT || process.env.NODE_ENV === TEST) return

  const response = await axios({
    method: 'post',
    url: 'https://www.google.com/recaptcha/api/siteverify',
    params: {
      secret: process.env.RECAPTCHA_SECRET_KEY,
      response: recaptchaToken,
      // TODO: Add remoteip
    },
  })

  if (!(response && response.data && response.data.success)) throw new ResponseError(401, 'Wrong re-captcha token')
}

'''
'''--- src/api/src/resolvers/user/helpers/verifySignedJwt.spec.ts ---
import { Jwt } from '../../../shared/user/Jwt'
import { JwtPayload } from '../../../shared/user/JwtPayload'
import { getSignedJwt } from './getSignedJwt'
import { verifySignedJwt } from './verifySignedJwt'

describe('User', () => {
  beforeAll(() => {
    process.env.JWT_PRIVATE_KEY =
      '-----BEGIN RSA PRIVATE KEY-----\nMIIBOAIBAAJAdbl2XgrYP6biZBeaWDm0ejnmDipjNXG5qLXNQe5uxqXZDr3zvJP6\n9t9F0DttXWKqerb05LmwWYgnOOVPrmBN0wIDAQABAkAMyMg27DyRpQDe18VWIWYd\nA96c2TOO4TvFO4D/0PHMtp0AxQLC7gS6gMYXSG25gyBGl8ywhjYYKp4zdecxW5UB\nAiEA4RgFBMtaL2p6uNnJqa/kc5k4pGPUMii81Gig03S54IECIQCF43EeIykLl7SQ\nIEJRwx3SY+H6TqZOlqLhN3+PkVqEUwIga6lDbUGeRyOUwylX7VN131yf3PDqo3sc\npjPNCJbB+QECICNydvVaq7hE/uoVkFljRhb4mNCTWBaAbTkhX2VcP1G/AiBeEpLY\nsU90PIZjVhgSVgi+eA6gPAyZJzRoPB+3XyZ3ZQ==\n-----END RSA PRIVATE KEY-----'
    process.env.JWT_PUBLIC_KEY =
      '-----BEGIN PUBLIC KEY-----\nMFswDQYJKoZIhvcNAQEBBQADSgAwRwJAdbl2XgrYP6biZBeaWDm0ejnmDipjNXG5\nqLXNQe5uxqXZDr3zvJP69t9F0DttXWKqerb05LmwWYgnOOVPrmBN0wIDAQAB\n-----END PUBLIC KEY-----'
  })

  it('can verify a signed JWT', () => {
    const _id = 'testId'
    const username = 'testUsername'

    const jwt: Jwt = getSignedJwt(_id, username)
    expect(jwt).toBeDefined()

    const jwtPayload: JwtPayload = verifySignedJwt(jwt)

    expect(jwtPayload._id).toEqual(_id)
    expect(jwtPayload.username).toEqual(username)
  })

  it('jwt verification throws error if not correct', () => {
    try {
      const jwt: Jwt =
        'QyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJ0ZXN0SWQiLCJ1c2VybmFtZSI6InRlc3RVc2VybmFtZSIsImV4cGlyZXNBdCI6IjIwMjAtMDMtMjlUMTU6MDY6NTUuODgyWiIsImlhdCI6MTU4MjkwNjAxNSwiZXhwIjoxNTg1NDk4MDE1LCJhdWQiOiJodHRwczovL3NlcnZlcmxlc3NzdGFjay5jb20iLCJpc3MiOiJTZXJ2ZXJsZXNzIFN0YWNrIiwic3ViIjoidGVzdFVzZXJuYW1lIn0.CTPWh2tdNNwQyWPZQT3iYn7iwN3dL2ziLRMBXTDNFgpiEHmAO1t5f8ioEclMNLfUXEA0buWh_ntInPOIIOAhsw'

      verifySignedJwt(jwt)

      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('invalid token')
    }
  })
})

'''
'''--- src/api/src/resolvers/user/helpers/verifySignedJwt.ts ---
import * as jsonwebtoken from 'jsonwebtoken'
import { Secret } from 'jsonwebtoken'

import { Jwt } from '../../../shared/user/Jwt'
import { JwtDecoded } from '../../../shared/user/JwtDecoded'
import { JwtPayload } from '../../../shared/user/JwtPayload'

interface VerifySignedJwt {
  (jwt: Jwt): JwtPayload
}

export const verifySignedJwt: VerifySignedJwt = (jwt) => {
  const jwtDecoded: JwtDecoded = jsonwebtoken.decode(jwt) as JwtDecoded

  const verifyOptions = {
    issuer: 'NearAcademy',
    subject: jwtDecoded ? jwtDecoded.username : undefined,
    audience: 'https://near.academy',
    expiresIn: '30d',
    algorithm: ['RS256'],
  }

  const jwtPayload: JwtPayload = jsonwebtoken.verify(
    jwt,
    process.env.JWT_PUBLIC_KEY as Secret,
    verifyOptions,
  ) as JwtPayload

  return jwtPayload
}

'''
'''--- src/api/src/resolvers/user/isCertified/isCertified.ts ---
import { Context, Next } from 'koa'

import { IsCertifiedOutputs } from '../../../shared/user/IsCertified'
import { UserModel } from '../../../shared/user/User'

export const PUBLIC_USER_MONGO_SELECTOR = '_id username emailVerified createdAt'

export const isCertified = async (ctx: Context, next: Next): Promise<void> => {
  const name = ctx.request.query.name

  let userFound = false
  let isCertified = false

  const user = await UserModel.findOne({ name: { $regex: new RegExp("^" + name.toLowerCase(), "i") } }).lean()

  if (user) userFound = true
  if (user && user.progress && user.progress.length && user.progress.length >= 20) isCertified = true

  const response: IsCertifiedOutputs = { userFound, isCertified }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/user/login/login.spec.ts ---
import { Context, Next } from 'koa'

import { User } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { login } from './login'

let user: User
let next: Next

describe('User', () => {
  beforeAll(async () => {
    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    next = created.next
  })

  it('can login with email', async (done) => {
    const ctx: Context = {
      request: {
        headers: {},
        body: {
          usernameOrEmail: 'bob@test.com',
          password: 'Bob1234#',
          recaptchaToken:
            'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
        },
      },
    } as Context
    await login(ctx, next)

    expect(ctx.body.jwt).toBeDefined()
    done()
  })

  it('can login with username', async (done) => {
    const ctx: Context = {
      request: {
        headers: {},
        body: {
          usernameOrEmail: 'bob',
          password: 'Bob1234#',
          recaptchaToken:
            'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
        },
      },
    } as Context

    await login(ctx, next)

    expect(ctx.body.jwt).toBeDefined()
    done()
  })

  it('cannot login with wrong password', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {},
          body: {
            usernameOrEmail: 'bob@test.com',
            password: 'Wrong1234#',
            recaptchaToken:
              'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
          },
        },
      } as Context

      await login(ctx, next)

      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toEqual('Wrong username or password')
    }
  })

  it('cannot find user', async () => {
    try {
      const ctx: Context = {
        request: {
          headers: {},
          body: {
            usernameOrEmail: 'wrong',
            password: 'Bob1234#',
            recaptchaToken:
              'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
          },
        },
      } as Context

      await login(ctx, next)

      throw new Error('Should not reach this point')
    } catch (error) {
      expect(error).toBeDefined()
      expect(error.message).toEqual('Wrong username or password')
    }
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/login/login.ts ---
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { toPublicUser } from '../../../helpers/toPublicUser'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { QuotaType } from '../../../shared/quota/QuotaType'
import { Jwt } from '../../../shared/user/Jwt'
import { LoginInputs, LoginOutputs } from '../../../shared/user/Login'
import { PublicUser } from '../../../shared/user/PublicUser'
import { User, UserModel } from '../../../shared/user/User'
import { rateLimit } from '../../quota/rateLimit/rateLimit'
import { getSignedJwt } from '../helpers/getSignedJwt'
import { matchPassword } from '../helpers/matchPassword'
import { verifyRecaptchaToken } from '../helpers/verifyRecaptchaToken'

export const login = async (ctx: Context, next: Next): Promise<void> => {
  const loginArgs = plainToClass(LoginInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(loginArgs, { forbidUnknownValues: true }).catch(firstError)
  let { usernameOrEmail, password, recaptchaToken } = loginArgs

  usernameOrEmail = usernameOrEmail.toLowerCase()

  await verifyRecaptchaToken(recaptchaToken)

  let user: User | null = await UserModel.findOne({ email: usernameOrEmail }).lean()
  if (!user) {
    user = await UserModel.findOne({ username: usernameOrEmail }).lean()
  }
  if (!user) throw new ResponseError(401, 'Wrong username or password')

  const publicUser: PublicUser = toPublicUser(user)

  await rateLimit(user._id, QuotaType.LOGIN)

  await matchPassword(password, user.hashedPassword)

  const jwt: Jwt = getSignedJwt(user._id.toHexString(), user.username)

  let pending = 0
  let completed = 0
  let rewarded = 0

  if (user && user.referral) {
      user.referral.forEach(item => {
          switch (item.status) {
              case 'PENDING':
                  pending++;
                  break;
              case 'COMPLETED':
                  completed++;
                  break;
              case 'REWARDED':
                  rewarded++;
                  break;
          }
      })
  }

  publicUser.stats = {
    pending,
    completed,
    rewarded
  }

  const response: LoginOutputs = { jwt, user: publicUser }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/resolvers/user/referral/getReferralStats.ts ---
import { Context, Next } from 'koa'

// import { IsCertifiedOutputs } from '../../../shared/user/IsCertified'
import { User } from '../../../shared/user/User'
import { authenticate } from '../helpers/authenticate'

export const PUBLIC_USER_MONGO_SELECTOR = '_id username emailVerified createdAt'

export const getReferralStats = async (ctx: Context, next: Next): Promise<void> => {
    // const username = ctx.request.query.username

    const user: User = await authenticate(ctx)

    // await rateLimit(user._id)
    //   const response: IsCertifiedOutputs = { userFound, isCertified }

    let pending = 0
    let completed = 0
    let rewarded = 0

    if (user && user.referral) {
        user.referral.forEach(item => {
            switch (item.status) {
                case 'PENDING':
                    pending++;
                    break;
                case 'COMPLETED':
                    completed++;
                    break;
                case 'REWARDED':
                    rewarded++;
                    break;
            }
        })
    }

    ctx.status = 200
    ctx.body = {
        stats: {
            pending,
            completed,
            rewarded
        }
    }

    await next()
}

'''
'''--- src/api/src/resolvers/user/resetPassword/resetPassword.spec.ts ---
import { Context, Next } from 'koa'

import { Captcha, CaptchaModel } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { User, UserModel } from '../../../shared/user/User'
import { createTestUser } from '../../../test/createTestUser'
import { deleteTestUser } from '../../../test/deleteTestUser'
import { mockConnect } from '../../../test/mockConnect'
import { resetPassword } from './resetPassword'

let user: User
let next: Next

describe('User', () => {
  beforeAll(async () => {
    process.env.FROM_EMAIL = 'test@test.com'
    process.env.SENDGRID_API_KEY = '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'

    await mockConnect()
    const created = await createTestUser('bob@test.com', 'bob', 'Bob1234#')
    user = created.user
    next = created.next
  })

  it('can reset his password', async (done) => {
    let captcha: Captcha = await CaptchaModel.create({
      userId: user._id,
      index: 0,
      solution: '0000',
      captchaFor: CaptchaFor.CAPTCHA_FOR_RESET_PASSWORD,
    } as Captcha)

    captcha = (await CaptchaModel.findOne({ _id: captcha._id }).lean()) as Captcha

    const ctx: Context = {
      request: {
        headers: {},
        body: {
          solution: captcha.solution,
          token: captcha.token,
          newPassword: 'New1234#s',
        },
      },
    } as Context

    await resetPassword(ctx, next)

    expect(ctx.status).toEqual(200)
    done()
  })

  it('throws if user not found', async () => {
    try {
      let captcha: Captcha = await CaptchaModel.create({
        userId: user._id,
        index: 0,
        solution: '0000',
        captchaFor: CaptchaFor.CAPTCHA_FOR_RESET_PASSWORD,
      } as Captcha)

      captcha = (await CaptchaModel.findOne({ _id: captcha._id }).lean()) as Captcha

      await UserModel.deleteOne({ _id: user._id })

      const ctx: Context = {
        request: {
          headers: {},
          body: {
            solution: captcha.solution,
            token: captcha.token,
            newPassword: 'New1234#s',
          },
        },
      } as Context

      await resetPassword(ctx, next)

      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('User not found')
    }
  })

  it('throws if wrong token', async () => {
    try {
      //   await CaptchaModel.deleteOne({ userId, captchaFor: CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL })

      const ctx: Context = {
        request: {
          headers: {},
          body: {
            solution: '0000',
            token: 'wrongwrongwrongwrong',
            newPassword: 'New1234#s',
          },
        },
      } as Context

      await resetPassword(ctx, next)

      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('Wrong token key')
    }
  })

  afterAll(async () => {
    await deleteTestUser(user._id)
  })
})

'''
'''--- src/api/src/resolvers/user/resetPassword/resetPassword.ts ---
import { hash } from 'bcryptjs'
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { Captcha, CaptchaModel } from '../../../shared/captcha/Captcha'
import { CaptchaFor } from '../../../shared/captcha/CaptchaFor'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { ResetPasswordInputs } from '../../../shared/user/ResetPassword'
import { User, UserModel } from '../../../shared/user/User'
import { verifyCaptcha } from '../helpers/verifyCaptcha'
import { rateLimit } from '../../quota/rateLimit/rateLimit'

export const resetPassword = async (ctx: Context, next: Next): Promise<void> => {
  const resetPasswordArgs = plainToClass(ResetPasswordInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(resetPasswordArgs, { forbidUnknownValues: true }).catch(firstError)
  const { solution, token, newPassword } = resetPasswordArgs

  const captcha: Captcha = (await CaptchaModel.findOne({
    token,
    captchaFor: CaptchaFor.CAPTCHA_FOR_RESET_PASSWORD,
  }).lean()) as Captcha
  if (!captcha) throw new ResponseError(401, 'Wrong token key')

  const user: User = (await UserModel.findOne({ _id: captcha.userId }).lean()) as User
  if (!user) throw new ResponseError(404, 'User not found')

  await rateLimit(user._id)

  await verifyCaptcha(user._id, solution, CaptchaFor.CAPTCHA_FOR_RESET_PASSWORD)

  const hashedPassword: string = await hash(newPassword, 12)

  await UserModel.updateOne({ _id: user._id }, { hashedPassword }).exec()

  await CaptchaModel.deleteOne({ _id: captcha._id }).exec()

  ctx.status = 200
  ctx.body = {}

  await next()
}

'''
'''--- src/api/src/resolvers/user/signUp/signUp.spec.ts ---
import { Context, Next } from 'koa'

import { clone } from '../../../helpers/clone'
import { User, UserModel } from '../../../shared/user/User'
import { mockConnect } from '../../../test/mockConnect'
import * as createCaptchaObject from '../../captcha/helpers/createCaptcha'
import * as getSignedJwtObject from '../helpers/getSignedJwt'
// import * as sendEmailVerifyEmailObject from '../helpers/sendEmailVerifyEmail'
import * as verifyRecaptchaTokenObject from '../helpers/verifyRecaptchaToken'
import { signUp } from './signUp'

const ctx: Context = {
  request: {
    headers: {},
    body: {
      email: 'test@test.com',
      username: 'test',
      password: 'Test1234#',
      confirmPassword: 'Test1234#',
      recaptchaToken:
        'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
    },
  },
} as Context

const next: Next = (async () => Promise.resolve()) as Next

describe('Users', () => {
  beforeAll(async () => {
    await mockConnect()
  })

  it('can sign up', async (done) => {
    jest.spyOn(verifyRecaptchaTokenObject, 'verifyRecaptchaToken').mockImplementation(async () => Promise.resolve())
    jest.spyOn(getSignedJwtObject, 'getSignedJwt').mockImplementation(() => 'testJwt')
    jest.spyOn(createCaptchaObject, 'createCaptcha')
    // jest.spyOn(sendEmailVerifyEmailObject, 'sendEmailVerifyEmail').mockImplementation(async () => Promise.resolve())

    const ctx1 = clone(ctx)
    await signUp(ctx1, next)

    expect(ctx1.body.jwt).toBeDefined()
    expect(verifyRecaptchaTokenObject.verifyRecaptchaToken).toHaveBeenCalled()
    expect(getSignedJwtObject.getSignedJwt).toHaveBeenCalled()
    expect(createCaptchaObject.createCaptcha).toHaveBeenCalled()
    // expect(sendEmailVerifyEmailObject.sendEmailVerifyEmail).toHaveBeenCalled()

    const user: User | null = await UserModel.findOne({ username: ctx1.request.body.username }).lean()

    expect(user).toBeDefined()
    if (user) {
      expect(user.username).toBe(ctx1.request.body.username)
    }

    done()
  })

  it('cannot sign up with a wrong password', async () => {
    try {
      const ctx2 = clone(ctx)
      ctx2.request.body.password = 'test'
      ctx2.request.body.confirmPassword = 'test'
      await signUp(ctx2, next)
      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('Password must have at least one letter and one digit')
    }
  })

  it('cannot sign up with an existing email', async () => {
    try {
      const ctx3 = clone(ctx)
      await signUp(ctx3, next)
      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('Email is already taken')
    }
  })

  it('cannot sign up with an existing username', async () => {
    try {
      const ctx4 = clone(ctx)
      ctx4.request.body.email = 'otherTest@test.com'
      await signUp(ctx4, next)
      throw new Error('Should not reach this point')
    } catch (e) {
      expect(e.message).toEqual('Username is already taken')
    }
  })

  afterAll(async () => {
    jest.clearAllMocks()
    await UserModel.deleteOne({ username: ctx.request.body.username })
  })
})

'''
'''--- src/api/src/resolvers/user/signUp/signUp.ts ---
import { hash } from 'bcryptjs'
import { plainToClass } from 'class-transformer'
import { validateOrReject } from 'class-validator'
import { Context, Next } from 'koa'

import { firstError } from '../../../helpers/firstError'
import { toPublicUser } from '../../../helpers/toPublicUser'
import { ResponseError } from '../../../shared/mongo/ResponseError'
import { Referral } from '../../../shared/referral/Referral'
import { ReferralStatus } from '../../../shared/referral/ReferralStatus'
import { Jwt } from '../../../shared/user/Jwt'
import { PublicUser } from '../../../shared/user/PublicUser'
import { SignUpInputs, SignUpOutputs } from '../../../shared/user/SignUp'
import { User, UserModel } from '../../../shared/user/User'
import { getSignedJwt } from '../helpers/getSignedJwt'
import { verifyRecaptchaToken } from '../helpers/verifyRecaptchaToken'

export const signUp = async (ctx: Context, next: Next): Promise<void> => {
  const signUpArgs = plainToClass(SignUpInputs, ctx.request.body, { excludeExtraneousValues: true })
  await validateOrReject(signUpArgs, { forbidUnknownValues: true }).catch(firstError)
  let { username, email, password, referral, recaptchaToken } = signUpArgs

  username = username.toLowerCase()
  email = email.toLowerCase()

  await verifyRecaptchaToken(recaptchaToken)

  const emailAlreadyTaken: User | null = await UserModel.findOne({ email }).lean()
  if (emailAlreadyTaken) throw new ResponseError(400, 'Email is already taken')

  const usernameAlreadyTaken: User | null = await UserModel.findOne({ username }).lean()
  if (usernameAlreadyTaken) throw new ResponseError(400, 'Username is already taken')

  if (referral) {
    referral = referral.toLowerCase()
    const referralDoesNotExist: User | null = await UserModel.findOne({ username: referral }).lean()
    if (!referralDoesNotExist) throw new ResponseError(400, 'Referral does not exist')
    const newReferral: Referral = { username, status: ReferralStatus.PENDING };
    await UserModel.updateOne({ username: referral }, { $addToSet : {referral: newReferral} }).exec()
  }
  
  const hashedPassword = await hash(password, 12)
  const user: User = await UserModel.create({ email, username, hashedPassword } as User)
  const publicUser: PublicUser = toPublicUser(user)

  const jwt: Jwt = getSignedJwt(user._id.toHexString(), user.username)

  let pending = 0
  let completed = 0
  let rewarded = 0

  if (user && user.referral) {
      user.referral.forEach(item => {
          switch (item.status) {
              case 'PENDING':
                  pending++;
                  break;
              case 'COMPLETED':
                  completed++;
                  break;
              case 'REWARDED':
                  rewarded++;
                  break;
          }
      })
  }

  publicUser.stats = {
    pending,
    completed,
    rewarded
  }
  
  const response: SignUpOutputs = { jwt, user: publicUser }

  ctx.status = 200
  ctx.body = response

  await next()
}

'''
'''--- src/api/src/router.ts ---
import * as Router from '@koa/router'
import { Context } from 'koa'

import { getReward } from './resolvers/near/getReward'
import { getPublicUser } from './resolvers/page/getPublicUser/getPublicUser'
import { setAccountName } from './resolvers/page/setAccountName/setAccountName'
import { setName } from './resolvers/page/setName/setName'
import { addProgress } from './resolvers/user/addProgress/addProgress'
import { changePassword } from './resolvers/user/changePassword/changePassword'
import { forgotPassword } from './resolvers/user/forgotPassword/forgotPassword'
import { isCertified } from './resolvers/user/isCertified/isCertified'
import { login } from './resolvers/user/login/login'
import { getReferralStats } from './resolvers/user/referral/getReferralStats'
import { resetPassword } from './resolvers/user/resetPassword/resetPassword'
import { signUp } from './resolvers/user/signUp/signUp'

// import { issueNftCertificate } from './resolvers/near/issueNft'

const router = new Router()

router.get('/', async (ctx: Context) => {
  ctx.body = 'You are not supposed to be here ;)'
})

router.post('/user/sign-up', signUp)
router.post('/user/login', login)
router.post('/user/add-progress', addProgress)
router.post('/user/reset-password', resetPassword)
router.post('/user/forgot-password', forgotPassword)
router.post('/user/change-password', changePassword)
router.get('/user/is-certified', isCertified)
router.get('/user/referral', getReferralStats)

router.post('/page/get-user', getPublicUser)
router.post('/page/set-name', setName)
router.post('/page/set-account-name', setAccountName)

router.get('/near/getReward', getReward)
// router.get('/near/issueNft', issueNftCertificate)

export { router }

'''
'''--- src/api/src/sanitize.ts ---
import { Context, Next } from 'koa'

import { ResponseError } from './shared/mongo/ResponseError'

export const sanitize = () => async (ctx: Context, next: Next): Promise<void> => {
  const body = JSON.stringify(ctx.request.body)
  const forbidden = new RegExp('<|>', 'i')
  if (forbidden.test(body)) throw new ResponseError(400, 'Forbidden characters')
  else await next()
}

'''
'''--- src/api/src/shared/captcha/Captcha.ts ---
import * as crypto from 'crypto'
import { IsDate, IsEnum, IsMongoId, Length, IsInt, IsOptional } from 'class-validator'

import { ObjectId } from 'mongodb'
import { DayJs } from '../../helpers/dayjs'
import { Property, Index, getModel } from '../../helpers/typegoose'
import { CaptchaFor } from './CaptchaFor'

@Index({ userId: 1, captchaFor: 1 }, { unique: true })
@Index({ expireAt: 1 }, { expireAfterSeconds: 0 })
export class Captcha {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, ref: 'User' })
  @IsMongoId()
  userId!: ObjectId

  @Property({ required: true })
  @IsInt()
  index!: number

  @Property({ required: true })
  @Length(4, 4)
  solution!: string

  @Property({ required: true })
  @IsEnum(CaptchaFor)
  captchaFor!: CaptchaFor

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsInt()
  attempts?: number

  @Property({
    required: true,
    default: crypto.randomBytes(16).toString('hex'),
  })
  @Length(16, 16)
  token!: string

  @Property({
    required: true,
    default: DayJs().add(1, 'hour').toDate(),
  })
  @IsDate()
  expiresAt!: Date

  @IsDate()
  createdAt!: Date

  @IsDate()
  updatedAt!: Date
}

export const CaptchaModel = getModel(Captcha, { schemaOptions: { timestamps: true } })

'''
'''--- src/api/src/shared/captcha/CaptchaFor.ts ---
export enum CaptchaFor {
  CAPTCHA_FOR_RESET_PASSWORD = 'CAPTCHA_FOR_RESET_PASSWORD',
  CAPTCHA_FOR_VERIFY_EMAIL = 'CAPTCHA_FOR_VERIFY_EMAIL'
}

'''
'''--- src/api/src/shared/captcha/CaptchaPair.ts ---
import { CaptchaSolution } from './CaptchaSolution'

export interface CaptchaPair {
  captchaIndex: number
  captchaSolution: CaptchaSolution
}

'''
'''--- src/api/src/shared/captcha/CaptchaSolution.ts ---
export type CaptchaSolution = string

'''
'''--- src/api/src/shared/mongo/DeleteRes.ts ---
export interface DeleteRes {
  ok: number
  n: number
  deletedCount: number
}

'''
'''--- src/api/src/shared/mongo/ResponseError.ts ---
export class ResponseError extends Error {
  status: number
  expose: boolean

  constructor(status: number, m: string) {
    super(m)
    this.status = status
    this.expose = status < 500

    Object.setPrototypeOf(this, ResponseError.prototype)
  }
}

'''
'''--- src/api/src/shared/mongo/UpdateRes.ts ---
import { ObjectId } from 'mongodb'

type upsertedObject = {
  index: number
  _id: ObjectId
}

export interface UpdateRes {
  ok: number
  n: number
  upserted?: upsertedObject[]
  nModified: number
}

'''
'''--- src/api/src/shared/page/GetPublicUser.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'
import { PublicUser } from '../user/PublicUser'

export class GetPublicUserInputs {
  @Expose()
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string
}

export class GetPublicUserOutputs {
  user!: PublicUser
}

'''
'''--- src/api/src/shared/page/SetAccountName.ts ---
import { Expose } from 'class-transformer'
import { Length, Matches } from 'class-validator'

import { PublicUser } from '../user/PublicUser'

export class SetAccountNameInputs {
  @Expose()
  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.testnet$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName!: string
}

export class SetAccountNameOutputs {
  user!: PublicUser
}

'''
'''--- src/api/src/shared/page/SetName.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'
import { PublicUser } from '../user/PublicUser'

export class SetNameInputs {
  @Expose()
  @Length(2, 40)
  name!: string
}

export class SetNameOutputs {
  user!: PublicUser
}

'''
'''--- src/api/src/shared/quota/Quota.ts ---
import { IsDate, IsMongoId, IsInt, IsOptional, IsEnum } from 'class-validator'

import { ObjectId } from 'mongodb'
import { DayJs } from '../../helpers/dayjs'
import { Property, Index, getModel } from '../../helpers/typegoose'
import { QuotaType } from './QuotaType'

@Index({ userId: 1, quotaType: 1 }, { unique: true })
@Index({ expireAt: 1 }, { expireAfterSeconds: 0 })
export class Quota {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, ref: 'User' })
  @IsMongoId()
  userId!: ObjectId

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsEnum(QuotaType)
  quotaType?: QuotaType

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsInt()
  count?: number

  @Property({
    required: true,
    default: DayJs().add(24, 'hour').toDate(),
  })
  @IsDate()
  expiresAt!: Date
}

export const QuotaModel = getModel(Quota, { schemaOptions: { timestamps: false } })

'''
'''--- src/api/src/shared/quota/QuotaRates.ts ---
// Per hour
export const QuotaRates = {
  DEFAULT_LIMIT: 200,
  COMMENTS: 3,
  UPVOTES: 3,
  DOWNVOTES: 3,
  NEW_CAPTCHA: 3,
  LOGIN: 15,
}

'''
'''--- src/api/src/shared/quota/QuotaType.ts ---
export enum QuotaType {
  DEFAULT_LIMIT = 'DEFAULT_LIMIT',
  NEW_CAPTCHA = 'NEW_CAPTCHA',
  LOGIN = 'LOGIN',
}

'''
'''--- src/api/src/shared/referral/Referral.ts ---

import { IsEnum, Length, Matches } from 'class-validator'
import { ReferralStatus } from './ReferralStatus'

export class Referral {
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @IsEnum(ReferralStatus)
  status!: ReferralStatus
}

'''
'''--- src/api/src/shared/referral/ReferralStatus.ts ---
export enum ReferralStatus {
    PENDING = 'PENDING',
    COMPLETED = 'COMPLETED',
    REWARDED = 'REWARDED'
  }
  
'''
'''--- src/api/src/shared/user/AddProgress.ts ---
import { Expose } from 'class-transformer'
import { Length, Matches } from 'class-validator'

import { PublicUser } from '../user/PublicUser'

export class AddProgressInputs {
  @Expose()
  @Length(2, 100)
  @Matches(/^[a-zA-Z0-9-\/]*$/, { message: 'Chapter slug can only contain letters, numbers, dashes and slashes' })
  chapterDone!: string
}

export class AddProgressOutputs {
  @Expose()
  user!: PublicUser
}

'''
'''--- src/api/src/shared/user/ChangePassword.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'

export class ChangePasswordInputs {
  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  password!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  newPassword!: string
}

export class ChangePasswordOutputs {}

'''
'''--- src/api/src/shared/user/ForgotPassword.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'

export class ForgotPasswordInputs {
  @Expose()
  @Length(2, 50)
  usernameOrEmail!: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class ForgotPasswordOutputs {
  @Expose()
  @Length(16, 16)
  token!: string
}

'''
'''--- src/api/src/shared/user/IsCertified.ts ---
import { Expose } from 'class-transformer'
import { IsBoolean, Length } from 'class-validator'

export class IsCertifiedInputs {
  @Expose()
  @Length(2, 100)
  name!: string
}

export class IsCertifiedOutputs {
  @Expose()
  @IsBoolean()
  userFound!: boolean

  @Expose()
  @IsBoolean()
  isCertified!: boolean
}

'''
'''--- src/api/src/shared/user/IsEqualTo.ts ---
import { registerDecorator, ValidationArguments, ValidationOptions } from 'class-validator'

export function IsEqualTo(property: string, validationOptions?: ValidationOptions) {
  return (object: any, propertyName: string): any => {
    registerDecorator({
      name: 'isEqualTo',
      target: object.constructor,
      propertyName,
      constraints: [property],
      options: validationOptions,
      validator: {
        validate(value: any, args: ValidationArguments): boolean {
          const [relatedPropertyName] = args.constraints
          const relatedValue = (args.object as any)[relatedPropertyName]
          return value === relatedValue
        },

        defaultMessage(args: ValidationArguments): string {
          const [relatedPropertyName] = args.constraints
          return `$property must match ${relatedPropertyName} exactly`
        },
      },
    })
  }
}

'''
'''--- src/api/src/shared/user/Jwt.ts ---
export type Jwt = string

'''
'''--- src/api/src/shared/user/JwtDecoded.ts ---
import { JwtPayload } from './JwtPayload'

export class JwtDecoded extends JwtPayload {
  iat!: number
  exp!: number
  aud!: string
  iss!: string
  sub!: string
}

'''
'''--- src/api/src/shared/user/JwtPayload.ts ---
import { UserRole } from './UserRole'

export class JwtPayload {
  _id!: string
  username!: string
  userRole?: UserRole
  expiresAt!: Date
}

'''
'''--- src/api/src/shared/user/Login.ts ---
import { Expose } from 'class-transformer'
import { IsJWT, Length, Matches } from 'class-validator'

import { Jwt } from './Jwt'
import { PublicUser } from './PublicUser'

export class LoginInputs {
  @Expose()
  @Length(2, 50)
  usernameOrEmail!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  password!: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class LoginOutputs {
  @Expose()
  @IsJWT()
  jwt!: Jwt

  @Expose()
  user!: PublicUser
}

'''
'''--- src/api/src/shared/user/PublicUser.ts ---
import { IsArray, IsDate, IsEmail, IsMongoId, Length, Matches } from 'class-validator'
import { ObjectId } from 'mongodb'

import { Referral } from '../../shared/referral/Referral'

export class PublicUser {
  @IsMongoId()
  readonly _id!: ObjectId

  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.(testnet|near)$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName?: string

  @Length(2, 40)
  name!: string

  @IsEmail()
  emailVerified?: boolean

  @IsArray()
  progress?: string[]

  @IsDate()
  createdAt!: Date

  @IsArray()
  referral?: Referral[]

  @IsDate()
  certifiedAt?: Date

  stats?: Object
}

'''
'''--- src/api/src/shared/user/ResetPassword.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'

export class ResetPasswordInputs {
  @Expose()
  @Length(4, 4)
  solution!: string

  @Expose()
  @Length(16, 32)
  token!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  newPassword!: string
}

export class ResetPasswordOutputs {}

'''
'''--- src/api/src/shared/user/SignUp.ts ---
import { Expose } from 'class-transformer'
import { IsEmail, IsJWT, Length, Matches } from 'class-validator'

import { IsEqualTo } from './IsEqualTo'
import { Jwt } from './Jwt'
import { PublicUser } from './PublicUser'

export class SignUpInputs {
  @Expose()
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Expose()
  @IsEmail()
  email!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  password!: string

  @Expose()
  @Length(8, 50)
  @IsEqualTo('password')
  confirmPassword!: string

  @Expose()
  @Length(0, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Referral can only contain letters, numbers and underscores' })
  referral?: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class SignUpOutputs {
  @Expose()
  @IsJWT()
  jwt!: Jwt

  @Expose()
  user!: PublicUser
}

'''
'''--- src/api/src/shared/user/User.ts ---
// prettier-ignore
import { IsBoolean, IsDate, IsEmail, IsMongoId, IsNumber, IsOptional, Length, Matches, Min } from 'class-validator'
import { ObjectId } from 'mongodb'

import { getModel, Property } from '../../helpers/typegoose'
import { Referral } from '../../shared/referral/Referral'

export class User {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, unique: true, index: true })
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Property()
  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.(testnet|near)$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName?: string
  
  @Property()
  @Length(2, 40)
  name!: string

  @Property({ required: true, unique: true, index: true })
  @IsEmail()
  email!: string

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsBoolean()
  emailVerified?: boolean

  @Property({ required: true })
  hashedPassword!: string

  @Property({ nullable: true, optional: true })
  progress?: string[]

  @Property({ nullable: true, optional: true })
  @IsOptional()
  // provide a match decorator
  referral?: Referral[]

  @IsDate()
  createdAt!: Date

  @IsDate()
  updatedAt!: Date

  @IsDate()
  @IsOptional()
  certifiedAt?: Date

  @Property()
  @IsNumber()
  @Min(6)
  tokenId?: number
}

export const UserModel = getModel(User, { schemaOptions: { timestamps: true } })

'''
'''--- src/api/src/shared/user/UserRole.ts ---
export enum UserRole {
  MODERATOR = 'MODERATOR',
  ADMIN = 'ADMIN',
}

'''
'''--- src/api/src/shared/user/VerifyEmail.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'

export class VerifyEmailInputs {
  @Expose()
  @Length(4, 4)
  solution!: string
}

export class VerifyEmailOutputs {}

'''
'''--- src/api/src/test/createTestUser.ts ---
import { Context, Next } from 'koa'

import * as getRandomCaptchaPairObject from '../resolvers/captcha/helpers/getRandomCaptchaPair'
// import * as sendEmailVerifyEmailObject from '../resolvers/user/helpers/sendEmailVerifyEmail'
import { signUp } from '../resolvers/user/signUp/signUp'
import { CaptchaSolution } from '../shared/captcha/CaptchaSolution'
import { Jwt } from '../shared/user/Jwt'
import { User, UserModel } from '../shared/user/User'
import { mockConnect } from './mockConnect'

interface UserContextNext {
  user: User
  jwt: Jwt
  next: Next
}

interface CreateTestUser {
  (email: string, username: string, password: string): Promise<UserContextNext>
}

export const createTestUser: CreateTestUser = async (email, username, password) => {
  process.env.JWT_PRIVATE_KEY =
    '-----BEGIN RSA PRIVATE KEY-----\nMIIBOAIBAAJAdbl2XgrYP6biZBeaWDm0ejnmDipjNXG5qLXNQe5uxqXZDr3zvJP6\n9t9F0DttXWKqerb05LmwWYgnOOVPrmBN0wIDAQABAkAMyMg27DyRpQDe18VWIWYd\nA96c2TOO4TvFO4D/0PHMtp0AxQLC7gS6gMYXSG25gyBGl8ywhjYYKp4zdecxW5UB\nAiEA4RgFBMtaL2p6uNnJqa/kc5k4pGPUMii81Gig03S54IECIQCF43EeIykLl7SQ\nIEJRwx3SY+H6TqZOlqLhN3+PkVqEUwIga6lDbUGeRyOUwylX7VN131yf3PDqo3sc\npjPNCJbB+QECICNydvVaq7hE/uoVkFljRhb4mNCTWBaAbTkhX2VcP1G/AiBeEpLY\nsU90PIZjVhgSVgi+eA6gPAyZJzRoPB+3XyZ3ZQ==\n-----END RSA PRIVATE KEY-----'
  process.env.JWT_PUBLIC_KEY =
    '-----BEGIN PUBLIC KEY-----\nMFswDQYJKoZIhvcNAQEBBQADSgAwRwJAdbl2XgrYP6biZBeaWDm0ejnmDipjNXG5\nqLXNQe5uxqXZDr3zvJP69t9F0DttXWKqerb05LmwWYgnOOVPrmBN0wIDAQAB\n-----END PUBLIC KEY-----'
  await mockConnect()

  const captchaIndex = 0
  const captchaSolution: CaptchaSolution = '0000'

  jest.spyOn(getRandomCaptchaPairObject, 'getRandomCaptchaPair').mockReturnValue({ captchaIndex, captchaSolution })
  // jest.spyOn(sendEmailVerifyEmailObject, 'sendEmailVerifyEmail').mockImplementation(async () => Promise.resolve())

  const signUpContext: Context = {
    request: {
      headers: {},
      body: {
        email,
        username,
        password,
        confirmPassword: password,
        recaptchaToken:
          'mockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockTokenmockToken',
      },
    },
  } as Context

  const next: Next = (async () => Promise.resolve()) as Next

  await signUp(signUpContext, next)

  const user: User = (await UserModel.findOne({ username: username }).lean()) as User

  const jwt: Jwt = signUpContext.body.jwt

  return { user, jwt, next }
}

'''
'''--- src/api/src/test/deleteTestUser.ts ---
import { ObjectId } from 'mongodb'

import { CaptchaModel } from '../shared/captcha/Captcha'
import { CaptchaFor } from '../shared/captcha/CaptchaFor'
import { UserModel } from '../shared/user/User'

interface DeleteTestUser {
  (userId: ObjectId): Promise<void>
}

export const deleteTestUser: DeleteTestUser = async (userId) => {
  await CaptchaModel.deleteOne({ userId, captchaFor: CaptchaFor.CAPTCHA_FOR_VERIFY_EMAIL })
  await UserModel.deleteOne({ _id: userId })
}

'''
'''--- src/api/src/test/mockConnect.ts ---
import * as mongoose from 'mongoose'

export const mockConnect = async (): Promise<void> => {
  await mongoose.connect(process.env.MONGO_URL as string, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    bufferCommands: false,
    bufferMaxEntries: 0,
  })
}

'''
'''--- src/api/src/test/sleep.ts ---
export const sleep = async (ms: number): Promise<void> => {
  return new Promise((resolve) => setTimeout(resolve, ms))
}

'''
'''--- src/api/tsconfig.json ---
{
  "compilerOptions": {
    "target": "ESNext",
    "lib": ["ESNext"],
    "module": "commonjs",
    "moduleResolution": "node",
    "types": ["node"],
    "skipLibCheck": true,
    //"jsx": "react",
    "isolatedModules": true,
    "sourceMap": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "strict": true,
    "alwaysStrict": true,
    "removeComments": true,
    "noImplicitAny": true,
    "noImplicitThis": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "forceConsistentCasingInFileNames": true,
    "downlevelIteration": true,
    //"allowSyntheticDefaultImports": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "rootDir": "src",
    "outDir": "dist"
  },
  "include": ["src/**/*", "**/*.ts", "**/*.spec.ts", "src/shared/comment"],
  "exclude": ["node_modules", "./node_modules", "./node_modules/*", "./node_modules/@types/node/index.d.ts"]
}

'''
'''--- src/frontend/kubernetesDeployment.json ---
{
  "apiVersion": "apps/v1",
  "kind": "Deployment",
  "metadata": { "name": "nearacademy-frontend" },
  "spec": {
    "replicas": 3,
    "selector": { "matchLabels": { "app": "nearacademy-frontend" } },
    "template": {
      "metadata": { "labels": { "app": "nearacademy-frontend" } },
      "spec": {
        "terminationGracePeriodSeconds": 30,
        "containers": [
          {
            "name": "nearacademy-frontend",
            "image": "registry.digitalocean.com/labs101/nearacademy-frontend",
            "imagePullPolicy": "Always"
          }
        ]
      }
    }
  }
}

'''
'''--- src/frontend/kubernetesService.json ---
{
  "apiVersion": "v1",
  "kind": "Service",
  "metadata": {
    "name": "nearacademy-frontend-service"
  },
  "spec": {
    "type": "LoadBalancer",
    "selector": { "app": "nearacademy-frontend" },
    "ports": [
      {
        "protocol": "TCP",
        "port": 80,
        "targetPort": 80,
        "name": "http"
      }
    ]
  }
}

'''
'''--- src/frontend/package.json ---
{
  "name": "nearacademy-frontend",
  "version": "1.0.0",
  "scripts": {
    "start": "PORT=3000 NODE_ENV=development REACT_APP_BACKEND_URL=http://localhost:8080 react-scripts -r @cypress/instrument-cra start && \"open http://localhost:3000/\"",
    "start-windows": "set PORT=3000 && set NODE_ENV=development && set REACT_APP_BACKEND_URL=http://localhost:8080 && react-scripts -r @cypress/instrument-cra start && \"open http://localhost:3000/\"",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "analyze": "react-scripts build && source-map-explorer 'build/static/js/*.js'",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:test": "cypress run -s 'cypress/integration/**/*-spec.js'",
    "import-shared": "rm -Rf src/shared && cp -R ../api/src/shared src/shared"
  },
  "dependencies": {
    "@cypress/code-coverage": "^3.9.11",
    "@cypress/instrument-cra": "^1.4.0",
    "@monaco-editor/react": "^4.3.1",
    "@ramonak/react-progress-bar": "^4.1.0",
    "@react-hook/media-query": "^1.1.1",
    "@redux-offline/redux-offline": "^2.6.0",
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.3.2",
    "@testing-library/user-event": "^7.1.2",
    "@types/history": "^4.7.9",
    "@types/jspdf": "^1.3.3",
    "@types/jwt-decode": "^2.2.1",
    "@types/markdown-to-jsx": "^6.11.3",
    "@types/mongodb": "^3.6.20",
    "@types/node": "^14.17.32",
    "@types/rc-slider": "^8.6.6",
    "@types/react": "^16.14.20",
    "@types/react-dom": "^16.9.14",
    "@types/react-helmet": "^6.1.4",
    "@types/react-motion": "^0.0.29",
    "@types/react-redux": "^7.1.20",
    "@types/react-router-dom": "^5.3.2",
    "@types/react-transition-group": "^4.4.4",
    "@types/react-twitter-conversion-tracker": "^1.0.0",
    "@types/styled-components": "^5.1.15",
    "axios": "^0.21.4",
    "babel-loader": "8.1.0",
    "babel-plugin-styled-components": "^1.13.3",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "classnames": "^2.3.1",
    "connected-react-router": "^6.9.1",
    "cra-append-sw": "^2.7.0",
    "cypress": "^4.12.1",
    "dayjs": "^1.10.7",
    "eslint-config-react-app": "^5.2.1",
    "formik": "^2.2.9",
    "history": "^4.10.1",
    "ismounted": "^0.1.8",
    "jest": "^24.9.0",
    "jspdf": "^2.4.0",
    "jwt-decode": "^2.2.0",
    "logrocket": "^2.1.1",
    "markdown-to-jsx": "^6.11.4",
    "mockdate": "^3.0.5",
    "near-api-js": "^0.44.2",
    "raw-loader": "^4.0.2",
    "rc-slider": "9.2.4",
    "react": "^16.14.0",
    "react-copy-to-clipboard": "^5.0.4",
    "react-dom": "^16.14.0",
    "react-ga": "3.1.2",
    "react-google-recaptcha-v3": "^1.9.7",
    "react-gtm-module": "^2.0.11",
    "react-helmet": "^6.1.0",
    "react-highlight": "^0.14.0",
    "react-hotjar": "^2.2.1",
    "react-icons": "^4.3.1",
    "react-motion": "^0.5.2",
    "react-redux": "^7.2.6",
    "react-router": "^5.2.1",
    "react-router-dom": "^5.3.0",
    "react-router-transition": "^2.1.0",
    "react-scripts": "^3.4.4",
    "react-test-renderer": "^16.14.0",
    "react-transition-group": "^4.4.2",
    "react-twitter-conversion-tracker": "^1.0.0",
    "redux": "^4.1.2",
    "redux-persist": "^6.0.0",
    "redux-thunk": "^2.4.0",
    "reflect-metadata": "^0.1.13",
    "source-map-explorer": "^2.5.2",
    "styled-components": "^5.3.3",
    "ts-jest": "^26.5.6",
    "typescript": "^3.9.10",
    "webpack": "4.42.0",
    "yup": "^0.32.11"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "engines": {
    "node": "^16.14.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
'''
'''--- src/frontend/public/dialog/happy2029.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 1366 501" style="enable-background:new 0 0 1366 501;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#0072CE;}
	.st1{opacity:0.15;fill:#FFFFFF;enable-background:new    ;}
	.st2{opacity:0.8;}
	.st3{fill:#FFFFFF;}
	.st4{fill:#FFB359;}
	.st5{fill:#00C1DE;}
</style>
<rect class="st0" width="1366" height="501"/>
<path class="st1" d="M-433-159.6c2.7,2.1,5.3,4.2,8,6.4c8.2,6.5,16.3,13,24.3,19.5c5.4,4.4,11.1,8.8,16.5,13.1
	c9.4,7.6,19,15.1,28.5,22.6c164.9,131,315.1,246.8,448.6,350.6c42.6,33.2,157.5,122.6,364.1,170.8c107.6,25,192.8,27.9,224.4,28.5
	c105,1.8,183.8-12.2,235.5-21.8c120.8-22.3,196.1-53.7,272.1-85.4c51.2-21.4,172.2-75.1,239.1-113.9c26.6-15.7,57.5-29.7,92-41.9
	c16.5-5.8,33.8-11.2,51.9-16l0,0l-15.4-0.2c-38.3-0.6-73.5-0.7-106.5-0.6l0,0c-75.5,0.4-139,2.8-198.6,5.7
	c-71.8,3.6-138.1,8-213,11.1c-53.1,2.2-104.9,4.5-155.5,6l0,0c-194.1,6.3-371.4,4.2-550.7-34.5c-48-10.5-94-22.8-137.5-36.7
	c-44.8-14.3-87.4-30-127.4-47.1c-117.7-50-148.9-85-279.6-147.3c-62.3-29.5-126-55.8-191-78.8C-402.9-150.6-427.2-158.7-433-159.6z"
	/>
<path class="st1" d="M-449-202c2.7,2.1,5.3,4.2,8,6.4c8.2,6.5,16.3,13,24.3,19.5c5.4,4.4,11.1,8.8,16.5,13.1
	c9.4,7.6,19,15.1,28.5,22.6C-206.8-9.4-56.6,106.4,76.9,210.2c42.6,33.2,157.5,122.6,364.1,170.8c107.6,25,192.8,27.9,224.4,28.5
	c105,1.8,183.8-12.2,235.5-21.8c120.8-22.3,196.1-53.7,272.1-85.4c51.2-21.4,172.2-75.1,239.1-113.9c26.6-15.7,57.5-29.7,92-41.9
	c16.5-5.8,33.8-11.2,51.9-16l0,0l-15.4-0.2c-38.3-0.6-73.5-0.7-106.5-0.6l0,0c-75.5,0.4-139,2.8-198.6,5.7
	c-71.8,3.6-138.1,8-213,11.1c-53.1,2.2-104.9,4.5-155.5,6l0,0c-194.1,6.3-371.4,4.2-550.7-34.5c-48-10.5-94-22.8-137.5-36.7
	c-44.9-14.3-87.4-30-127.4-47.1c-117.7-50-148.9-85-279.6-147.3c-62.3-29.5-126-55.8-191-78.8C-418.9-193-443.2-201-449-202z"/>
<g class="st2">
	<path class="st3" d="M1336,102.4c6.6,2.8,13.1,5.8,19.7,8.6l19.5,8.9c6.6,2.9,12.9,6.1,19.8,8.3c3.5,0.9,7.5,0.9,10.6,2.8
		c1.6,0.9,3.1,2,4.4,3.3c1.5,1.4,2.7,3.2,3.5,5c0.1,0.2,0,0.4-0.2,0.4c0,0,0,0-0.1,0c-2,0.5-4.1,0.7-6.1,0.4
		c-1.8-0.2-3.6-0.7-5.3-1.4c-3.4-1.2-5.9-4.4-8.8-6.5c-6-4-12.5-7-18.9-10.3l-19.2-9.7C1348.6,109.1,1342.3,105.8,1336,102.4z"/>
	<path class="st3" d="M1253.3,62.7c-6.6-2.8-13.1-5.8-19.7-8.6l-19.5-8.9c-6.6-2.9-12.9-6.1-19.8-8.3c-3.5-0.9-7.5-0.9-10.6-2.8
		c-1.6-0.9-3.1-2-4.4-3.3c-1.5-1.4-2.7-3.2-3.5-5c-0.1-0.2,0-0.4,0.2-0.4c0,0,0,0,0,0c0,0,0,0,0.1,0c2-0.5,4.1-0.6,6.2-0.4
		c1.8,0.2,3.6,0.7,5.3,1.4c3.4,1.2,5.8,4.3,8.8,6.5c6,4,12.5,7,18.9,10.3l19.2,9.7C1240.7,56,1247,59.2,1253.3,62.7z"/>
	<path class="st3" d="M1326.6,115.4c5.2,4.9,10.3,9.9,15.5,14.9l15.3,15.1c5.1,5,10,10.2,15.7,14.7c3,2.1,6.7,3.4,9,6.3
		c1.2,1.4,2.2,2.9,3,4.6c0.9,1.9,1.4,3.9,1.6,6c0,0.2-0.1,0.3-0.3,0.4c0,0,0,0,0,0c0,0,0,0-0.1,0c-2.1-0.2-4.1-0.8-5.9-1.8
		c-1.6-0.8-3.2-1.9-4.5-3.1c-2.8-2.3-4-6.1-6-9.2c-4.3-5.8-9.4-10.9-14.2-16.2l-14.7-15.7C1336.2,126.1,1331.3,120.8,1326.6,115.4z"
		/>
	<path class="st3" d="M1262.7,49.6c-5.2-4.9-10.3-9.9-15.5-14.9l-15.3-15.1c-5.2-5-10-10.2-15.8-14.7c-3-2.1-6.8-3.4-9-6.3
		c-1.2-1.4-2.2-2.9-3-4.6c-0.9-1.9-1.4-3.9-1.6-5.9c0-0.2,0.1-0.3,0.3-0.4c0,0,0,0,0,0c0,0,0,0,0.1,0c2.1,0.2,4.1,0.8,5.9,1.8
		c1.6,0.8,3.2,1.9,4.5,3.1c2.8,2.3,4,6.1,6,9.1c4.3,5.8,9.4,10.9,14.2,16.2l14.7,15.7C1253.1,39,1258,44.3,1262.7,49.6z"/>
	<path class="st3" d="M1340.3,87c7.2,0.4,14.3,0.9,21.5,1.3l21.4,1.7c7.1,0.5,14.3,1.3,21.5,1c3.6-0.3,7.3-1.7,10.9-1
		c1.8,0.3,3.6,0.8,5.2,1.6c1.9,0.8,3.6,2,5.1,3.5c0.1,0.1,0.1,0.3,0,0.5c0,0,0,0,0,0c-1.7,1.2-3.6,2-5.6,2.5
		c-1.8,0.4-3.6,0.6-5.4,0.6c-3.6,0-7-2.1-10.5-3.1c-7-1.7-14.2-2.2-21.3-3.2l-21.3-2.5C1354.5,88.9,1347.4,88,1340.3,87z"/>
	<path class="st3" d="M1249,78.1c-7.2-0.4-14.3-0.9-21.5-1.3l-21.4-1.7c-7.2-0.5-14.3-1.3-21.5-1c-3.6,0.3-7.4,1.7-10.9,1
		c-1.8-0.3-3.6-0.8-5.2-1.6c-1.9-0.8-3.6-2-5.1-3.5c-0.1-0.1-0.1-0.3,0-0.5c0,0,0,0,0,0c0,0,0,0,0,0c1.7-1.2,3.6-2,5.6-2.5
		c1.8-0.4,3.6-0.6,5.5-0.6c3.6,0,7,2.1,10.5,3.1c7,1.7,14.2,2.2,21.3,3.2l21.3,2.5C1234.8,76.2,1241.9,77.1,1249,78.1z"/>
	<path class="st3" d="M1298.4,128.2c0.9,7.1,1.7,14.2,2.5,21.4l2.2,21.4c0.8,7.1,1.3,14.3,2.9,21.3c1,3.5,3,6.9,3,10.5
		c0,1.8-0.2,3.7-0.6,5.4c-0.5,2-1.4,3.9-2.6,5.6c-0.1,0.2-0.3,0.2-0.5,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.5-1.5-2.6-3.2-3.4-5.1
		c-0.7-1.7-1.3-3.4-1.5-5.3c-0.7-3.5,0.8-7.3,1.2-10.9c0.4-7.2-0.3-14.3-0.7-21.5l-1.3-21.4C1299.1,142.5,1298.7,135.4,1298.4,128.2
		z"/>
	<path class="st3" d="M1290.9,36.8c-0.9-7.1-1.7-14.2-2.5-21.4l-2.2-21.4c-0.8-7.1-1.3-14.3-2.9-21.3c-1-3.5-3-6.9-3-10.5
		c0-1.8,0.2-3.7,0.6-5.4c0.5-2,1.4-3.9,2.6-5.6c0.1-0.2,0.3-0.2,0.5-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.5,1.5,2.6,3.2,3.4,5.1
		c0.7,1.7,1.3,3.4,1.5,5.3c0.7,3.5-0.8,7.3-1.2,10.9c-0.4,7.2,0.3,14.3,0.7,21.5l1.3,21.4C1290.2,22.5,1290.6,29.7,1290.9,36.8z"/>
	<path class="st3" d="M1282.5,126.7c-2,6.9-3.8,13.8-5.5,20.8c-1.8,6.9-3.4,13.9-5.1,20.9c-1.6,7-3.4,13.9-4.3,21.1
		c-0.1,1.8,0,3.7,0,5.6c0,1.8-0.2,3.6-0.8,5.4c-1.2,3.8-3.7,7-6.9,9.2c-0.2,0.1-0.4,0.1-0.5-0.1c0,0,0,0,0,0c0,0,0,0,0-0.1
		c-0.8-1.9-1.3-3.9-1.4-6c-0.1-1.8,0-3.6,0.4-5.4c0.6-3.5,3.2-6.5,4.8-9.8c2.8-6.7,4.4-13.6,6.4-20.5c1.9-6.9,3.8-13.8,5.9-20.7
		C1277.7,140.3,1279.9,133.4,1282.5,126.7z"/>
	<path class="st3" d="M1306.8,38.3c2-6.9,3.9-13.8,5.5-20.8c1.7-7,3.2-13.9,4.7-20.9c1.4-7,3.2-14,4.1-21.2c0.1-1.8,0-3.7,0-5.6
		c0-1.8,0.3-3.7,0.9-5.4c1.3-3.7,3.9-6.9,7.3-9c0.2-0.1,0.4,0,0.5,0.1c0,0,0,0,0,0.1v0c0.7,1.9,1.1,4,1.1,6c0.1,1.8-0.1,3.6-0.6,5.4
		c-0.7,3.5-3.3,6.4-4.9,9.7c-2.8,6.6-4.3,13.6-6.2,20.6c-1.8,6.9-3.6,13.9-5.6,20.8C1311.7,24.8,1309.5,31.7,1306.8,38.3z"/>
	<path class="st3" d="M1314.2,124.6c3.3,6.3,6.4,12.7,9.7,19.1l9.4,19.2c3.2,6.4,6.1,12.9,10,18.9c2.1,2.9,5.2,5.4,6.4,8.8
		c0.7,1.7,1.1,3.5,1.3,5.3c0.2,2,0.1,4.1-0.5,6.1c-0.1,0.2-0.2,0.3-0.4,0.2c0,0,0,0,0,0c-1.9-0.9-3.6-2.1-5-3.6
		c-1.3-1.3-2.4-2.8-3.2-4.4c-1.8-3.1-1.7-7-2.6-10.6c-2.1-6.9-5.2-13.3-8-19.8l-8.6-19.6C1319.7,137.7,1316.8,131.2,1314.2,124.6z"
		/>
	<path class="st3" d="M1275.4,40.9c-3.3-6.4-6.5-12.8-9.7-19.2l-9.4-19.3c-3.2-6.4-6.1-13-10-19c-2.1-3-5.2-5.5-6.4-8.9
		c-0.7-1.7-1.1-3.5-1.3-5.3c-0.2-2.1-0.1-4.1,0.5-6.1c0-0.2,0.2-0.3,0.4-0.2c0,0,0,0,0,0c0,0,0,0,0.1,0c1.9,0.9,3.6,2.1,5,3.6
		c1.3,1.3,2.4,2.8,3.2,4.4c1.8,3.1,1.8,7.1,2.6,10.6c2.1,6.9,5.2,13.4,8.1,19.9l8.6,19.7C1269.8,27.7,1272.7,34.3,1275.4,40.9z"/>
	<path class="st3" d="M1256.4,108.7c-5.7,4.3-11.5,8.4-17.2,12.7l-17.4,12.4c-5.8,4.2-11.7,8.1-17,12.9c-2.5,2.6-4.5,6-7.6,7.7
		c-1.6,0.9-3.3,1.6-5,2.1c-2,0.6-4.1,0.7-6.1,0.5c-0.2,0-0.3-0.2-0.3-0.4c0,0,0,0,0,0c0,0,0,0,0-0.1c0.5-2,1.5-3.9,2.7-5.5
		c1.1-1.5,2.4-2.8,3.8-3.9c2.7-2.3,6.7-2.9,10-4.3c6.4-3.2,12.2-7.3,18.3-11.1l17.9-11.7C1244.3,116.3,1250.3,112.4,1256.4,108.7z"
		/>
	<path class="st3" d="M1332.9,56.4c5.7-4.3,11.5-8.4,17.2-12.7l17.4-12.4c5.8-4.2,11.7-8.1,17-12.9c2.5-2.6,4.5-6,7.7-7.7
		c1.6-0.9,3.3-1.6,5-2.1c2-0.6,4.1-0.7,6.1-0.5c0.2,0,0.3,0.2,0.3,0.4c0,0,0,0,0,0.1c-0.6,2-1.5,3.9-2.7,5.5
		c-1.1,1.5-2.4,2.8-3.8,3.9c-2.7,2.3-6.7,2.9-10,4.3c-6.4,3.2-12.2,7.3-18.2,11.1L1351,45C1345,48.8,1339,52.7,1332.9,56.4z"/>
	<path class="st3" d="M1250.2,93.8c-6.9,2.1-13.8,4-20.6,6l-20.7,5.7c-6.9,2-13.9,3.6-20.6,6.3c-3.3,1.6-6.3,4.1-9.9,4.6
		c-1.8,0.3-3.6,0.4-5.5,0.3c-2.1-0.2-4.1-0.7-5.9-1.6c-0.2-0.1-0.2-0.3-0.2-0.5c0,0,0,0,0,0c1.2-1.7,2.7-3.1,4.5-4.2
		c1.5-1,3.2-1.8,4.9-2.4c3.4-1.2,7.3-0.4,10.9-0.6c7.2-0.8,14.1-2.7,21.1-4.2l20.9-4.8C1236.2,96.8,1243.2,95.2,1250.2,93.8z"/>
	<path class="st3" d="M1339.1,71.3c6.9-2.1,13.8-4,20.6-6l20.7-5.7c6.9-2,13.9-3.6,20.6-6.3c3.3-1.6,6.3-4.1,9.9-4.6
		c1.8-0.3,3.6-0.4,5.5-0.3c2.1,0.2,4.1,0.7,5.9,1.6c0.2,0.1,0.2,0.3,0.2,0.5c0,0,0,0,0,0c-1.2,1.7-2.7,3.1-4.5,4.2
		c-1.5,1-3.2,1.8-4.9,2.4c-3.4,1.2-7.3,0.4-10.9,0.6c-7.2,0.8-14.1,2.7-21.1,4.2l-20.9,4.8C1353.1,68.3,1346.1,69.9,1339.1,71.3z"/>
	<path class="st3" d="M1267.7,120.3c-4,5.9-8.1,11.7-12.1,17.6l-12.3,17.4c-4,5.9-8.3,11.6-11.5,18c-1.5,3.3-2,7.2-4.3,9.9
		c-1.1,1.4-2.4,2.7-3.8,3.8c-1.6,1.3-3.5,2.2-5.4,2.8c-0.2,0.1-0.4,0-0.4-0.2c0,0,0,0,0,0c0,0,0,0,0-0.1c-0.4-3.9,0.4-7.8,2.5-11.2
		c0.9-1.6,2.1-3,3.5-4.1c1.4-1.2,2.9-2.3,4.2-3.6c4.9-5.3,8.9-11.2,13.3-16.8l13-17L1267.7,120.3z"/>
	<path class="st3" d="M1321.3,45.2l24.1-35.6c3.9-6,8.2-11.8,11.5-18.2c1.5-3.3,2.1-7.3,4.5-10c1.2-1.4,2.5-2.7,4-3.8
		c1.7-1.2,3.6-2.1,5.6-2.6c0.2,0,0.4,0.1,0.4,0.2c0,0,0,0,0,0.1c0.2,2.1-0.1,4.1-0.7,6.1c-0.5,1.8-1.3,3.4-2.2,5
		c-1.8,3.1-5.3,5-7.9,7.6c-4.9,5.3-8.9,11.2-13.3,16.9l-12.8,17.3C1330.2,34,1325.8,39.7,1321.3,45.2z"/>
	<path class="st3" d="M1331.9,109.1c1.8,1,3.5,2,5.3,3.1s3.4,2.2,5.1,3.3s3.3,2.3,5.4,2.9c1.1,0.2,2.7-0.3,3.4,0.5
		c0.4,0.4,0.7,1,0.8,1.5c0.2,0.9,0.1,1.8-0.1,2.7c0,0.1-0.1,0.2-0.2,0.3c-0.8,0.5-1.6,0.8-2.5,1c-0.6,0.1-1.2,0-1.7-0.2
		c-1-0.4-1.1-2-1.6-3c-1.2-1.8-2.9-2.9-4.5-4.2s-3.2-2.5-4.8-3.8S1333.4,110.4,1331.9,109.1z"/>
	<path class="st3" d="M1257.4,56c-1.8-1-3.5-2-5.3-3.1s-3.4-2.2-5.1-3.3s-3.3-2.3-5.4-2.9c-1.1-0.2-2.7,0.3-3.4-0.5
		c-0.4-0.4-0.7-1-0.8-1.5c-0.2-0.9-0.1-1.8,0.1-2.7c0-0.1,0.1-0.2,0.2-0.3c0.8-0.5,1.6-0.8,2.5-1c0.6-0.1,1.2,0,1.7,0.2
		c1,0.4,1.1,2,1.6,3c1.2,1.8,2.9,2.9,4.5,4.2s3.2,2.5,4.8,3.8S1255.9,54.6,1257.4,56z"/>
	<path class="st3" d="M1320.8,120.6c1.3,1.5,2.6,3.1,3.8,4.6s2.4,3.2,3.6,4.7s2.3,3.2,4,4.5c1,0.5,2.6,0.6,3,1.6
		c0.2,0.5,0.3,1.1,0.2,1.7c-0.2,0.9-0.5,1.7-1,2.5c-0.1,0.1-0.2,0.2-0.3,0.2c-0.9,0.2-1.8,0.2-2.7,0c-0.6-0.1-1.1-0.4-1.5-0.8
		c-0.8-0.7-0.3-2.2-0.4-3.3c-0.5-2.1-1.7-3.6-2.7-5.4s-2.1-3.4-3.1-5.1S1321.7,122.4,1320.8,120.6z"/>
	<path class="st3" d="M1268.8,44.8c-1.4-1.5-2.6-3.1-3.9-4.7s-2.4-3.2-3.7-4.8s-2.3-3.3-4.1-4.5c-1-0.5-2.7-0.6-3-1.6
		c-0.2-0.5-0.3-1.1-0.2-1.7c0.2-0.9,0.5-1.8,1-2.5c0.1-0.1,0.2-0.2,0.3-0.2c0.9-0.2,1.8-0.2,2.7,0c0.6,0.1,1.1,0.4,1.5,0.8
		c0.8,0.7,0.3,2.2,0.4,3.4c0.5,2.1,1.8,3.7,2.8,5.5s2.2,3.4,3.2,5.2S1267.9,43,1268.8,44.8z"/>
	<path class="st3" d="M1338.8,94.6c2,0.3,4,0.7,6,1.1c2,0.4,3.9,0.9,5.9,1.3s3.9,1,6.1,0.8c1.1-0.2,2.4-1.2,3.3-0.7
		c0.5,0.3,1,0.7,1.2,1.2c0.5,0.8,0.8,1.7,0.9,2.6c0,0.1,0,0.3-0.1,0.4c-0.6,0.7-1.3,1.3-2.1,1.8c-0.5,0.3-1.1,0.4-1.7,0.4
		c-1,0-1.7-1.5-2.5-2.3c-1.8-1.3-3.7-1.7-5.6-2.4s-3.9-1.2-5.8-1.9C1342.6,96,1340.6,95.4,1338.8,94.6z"/>
	<path class="st3" d="M1250.6,70.5c-2-0.3-4-0.7-6-1.1c-2-0.4-3.9-0.9-5.9-1.3s-3.9-1-6.1-0.8c-1.1,0.2-2.4,1.2-3.3,0.7
		c-0.5-0.3-1-0.7-1.2-1.2c-0.5-0.8-0.8-1.7-0.9-2.6c0-0.1,0-0.3,0.1-0.4c0.6-0.7,1.3-1.3,2.1-1.8c0.5-0.3,1.1-0.4,1.7-0.4
		c1,0,1.7,1.5,2.5,2.3c1.8,1.3,3.7,1.7,5.6,2.4s3.9,1.2,5.8,1.9C1246.7,69,1248.7,69.7,1250.6,70.5z"/>
	<path class="st3" d="M1290.7,128.1c0.1,2,0,4.1,0,6.1c0,2-0.2,4-0.2,6.1s-0.3,4,0.3,6.1c0.4,1.1,1.6,2.2,1.3,3.2
		c-0.2,0.6-0.5,1.1-0.9,1.4c-0.7,0.6-1.5,1-2.4,1.3c-0.1,0-0.3,0-0.4,0c-0.8-0.4-1.5-1-2.1-1.7c-0.4-0.4-0.6-1-0.7-1.6
		c-0.2-1,1.2-1.9,1.8-2.9c0.9-2,1-4,1.3-6s0.5-4,0.8-6S1290.2,130.1,1290.7,128.1z"/>
	<path class="st3" d="M1298.6,37.4c-0.1-2.1,0-4.1,0-6.2c0-2.1,0.2-4.1,0.2-6.2s0.3-4.1-0.3-6.2c-0.4-1.1-1.6-2.2-1.3-3.2
		c0.2-0.6,0.5-1.1,1-1.5c0.7-0.6,1.5-1.1,2.4-1.3c0.1,0,0.3,0,0.4,0c0.8,0.4,1.5,1,2.1,1.7c0.4,0.5,0.6,1,0.7,1.6
		c0.2,1.1-1.2,2-1.8,2.9c-0.9,2-1,4.1-1.4,6.1s-0.5,4.1-0.9,6.1C1299.3,33.4,1299,35.4,1298.6,37.4z"/>
	<path class="st3" d="M1275,124.3c-0.6,1.9-1.3,3.8-2,5.6s-1.5,3.7-2.2,5.5s-1.6,3.6-1.8,5.7c0.1,1.1,0.8,2.6,0.1,3.4
		c-0.3,0.5-0.8,0.8-1.4,1c-0.9,0.3-1.8,0.4-2.7,0.4c-0.1,0-0.3-0.1-0.4-0.2c-0.6-0.7-1.1-1.4-1.4-2.3c-0.2-0.5-0.3-1.1-0.1-1.7
		c0.2-1,1.8-1.4,2.7-2c1.5-1.5,2.3-3.3,3.3-5s1.8-3.5,2.8-5.3S1274,126,1275,124.3z"/>
	<path class="st3" d="M1314.1,41.1c0.6-1.9,1.4-3.8,2.1-5.7c0.7-1.9,1.6-3.7,2.3-5.6s1.7-3.7,1.8-5.8c-0.1-1.1-0.8-2.6-0.1-3.4
		c0.3-0.5,0.8-0.8,1.4-1c0.9-0.3,1.8-0.5,2.7-0.4c0.1,0,0.3,0.1,0.4,0.2c0.6,0.7,1.1,1.5,1.4,2.3c0.2,0.6,0.2,1.2,0.1,1.7
		c-0.2,1-1.8,1.4-2.7,2.1c-1.5,1.5-2.3,3.4-3.3,5.1s-1.9,3.6-2.9,5.4S1315.2,39.4,1314.1,41.1z"/>
	<path class="st3" d="M1306.6,126.7c0.8,1.9,1.4,3.8,2.1,5.7s1.2,3.9,1.9,5.8s1.1,3.9,2.4,5.6c0.8,0.8,2.3,1.5,2.3,2.5
		c0,0.6-0.1,1.2-0.4,1.7c-0.4,0.8-1,1.5-1.8,2.1c-0.1,0.1-0.2,0.1-0.4,0.1c-0.9-0.1-1.8-0.4-2.6-0.9c-0.5-0.3-0.9-0.7-1.2-1.3
		c-0.5-0.9,0.5-2.2,0.7-3.3c0.2-2.1-0.4-4.1-0.8-6.1s-0.9-3.9-1.3-5.9S1306.9,128.7,1306.6,126.7z"/>
	<path class="st3" d="M1282.7,38.4c-0.8-1.9-1.4-3.8-2.1-5.7c-0.7-1.9-1.2-3.9-1.9-5.8s-1.1-3.9-2.4-5.6c-0.8-0.8-2.3-1.5-2.3-2.5
		c0-0.6,0.1-1.2,0.4-1.7c0.4-0.8,1-1.5,1.8-2.1c0.1-0.1,0.2-0.1,0.4-0.1c0.9,0.1,1.8,0.4,2.6,0.9c0.5,0.3,0.9,0.7,1.2,1.2
		c0.5,0.9-0.5,2.2-0.7,3.3c-0.2,2.1,0.4,4.1,0.8,6.1s0.9,3.9,1.3,5.9C1282,34.4,1282.4,36.4,1282.7,38.4z"/>
	<path class="st3" d="M1253.1,101.6c-1.7,1.1-3.5,2-5.3,3c-1.8,1-3.6,1.8-5.4,2.8s-3.7,1.7-5.2,3.3c-0.7,0.9-1.1,2.5-2.1,2.7
		c-0.6,0.1-1.2,0.1-1.7-0.1c-0.9-0.3-1.7-0.8-2.3-1.4c-0.1-0.1-0.2-0.2-0.2-0.4c0-0.9,0.1-1.8,0.4-2.7c0.2-0.6,0.6-1,1-1.4
		c0.8-0.7,2.3,0.1,3.4,0.2c2.2-0.2,3.9-1.1,5.9-1.8s3.7-1.6,5.7-2.2C1249.2,102.9,1251.1,102.2,1253.1,101.6z"/>
	<path class="st3" d="M1336.2,63.5c1.7-1.1,3.5-2,5.3-3s3.6-1.8,5.4-2.8s3.7-1.7,5.2-3.3c0.7-0.9,1.1-2.5,2.1-2.7
		c0.6-0.1,1.2-0.1,1.7,0.1c0.9,0.3,1.6,0.8,2.3,1.4c0.1,0.1,0.2,0.2,0.2,0.4c0,0.9-0.1,1.8-0.4,2.7c-0.2,0.6-0.6,1-1,1.4
		c-0.8,0.7-2.3-0.1-3.4-0.2c-2.2,0.2-3.9,1.1-5.9,1.8s-3.7,1.6-5.7,2.2S1338.2,62.9,1336.2,63.5z"/>
	<path class="st3" d="M1249.1,86.1c-2,0.4-4,0.7-6,1s-4,0.5-6,0.8s-4,0.4-6,1.3c-1,0.6-1.9,2-2.9,1.8c-0.6-0.1-1.1-0.3-1.6-0.7
		c-0.7-0.6-1.3-1.3-1.7-2.1c-0.1-0.1-0.1-0.3,0-0.4c0.3-0.9,0.7-1.7,1.3-2.4c0.4-0.5,0.9-0.8,1.4-0.9c1-0.3,2.1,0.9,3.1,1.3
		c2.1,0.6,4.1,0.3,6.1,0.3s4-0.2,6.1-0.2S1247,86,1249.1,86.1z"/>
	<path class="st3" d="M1340.2,79c2-0.4,4-0.7,6-1c2-0.3,4-0.5,6-0.8s4-0.4,6-1.3c1-0.6,1.9-2,2.9-1.8c0.6,0.1,1.1,0.3,1.6,0.7
		c0.7,0.6,1.3,1.3,1.7,2.1c0.1,0.1,0.1,0.3,0,0.4c-0.3,0.9-0.7,1.7-1.3,2.4c-0.4,0.5-0.9,0.8-1.4,0.9c-1,0.3-2.1-0.9-3.1-1.3
		c-2.1-0.6-4.1-0.3-6.1-0.3s-4,0.2-6.1,0.2C1344.3,79.1,1342.3,79.1,1340.2,79z"/>
	<path class="st3" d="M1261.8,115c-1.2,1.6-2.6,3.1-3.8,4.6s-2.7,2.9-4,4.4s-2.8,2.8-3.7,4.8c-0.3,1.1-0.1,2.7-1,3.2
		c-0.5,0.3-1.1,0.5-1.6,0.5c-0.9,0-1.8-0.2-2.6-0.5c-0.1,0-0.2-0.1-0.3-0.3c-0.4-0.8-0.5-1.7-0.5-2.6c0-0.6,0.2-1.2,0.5-1.6
		c0.5-0.9,2.1-0.7,3.2-1c1.9-0.9,3.3-2.3,4.8-3.6s2.9-2.7,4.5-4S1260.3,116.2,1261.8,115z"/>
	<path class="st3" d="M1327.5,50c1.2-1.6,2.6-3.1,3.8-4.6s2.7-2.9,4-4.4s2.8-2.8,3.7-4.8c0.3-1.1,0.1-2.7,1-3.2
		c0.5-0.3,1.1-0.5,1.6-0.5c0.9,0,1.8,0.2,2.6,0.5c0.1,0,0.2,0.1,0.3,0.3c0.4,0.8,0.5,1.7,0.5,2.6c0,0.6-0.2,1.2-0.5,1.6
		c-0.5,0.9-2.1,0.7-3.2,1c-1.9,0.9-3.3,2.3-4.8,3.6s-2.9,2.7-4.5,4S1329,48.8,1327.5,50z"/>
	<path class="st3" d="M1308.1,89.4c4.4,2.1,8.9,4.2,13.3,6.3c2.2,1,4.4,2.2,6.7,3c1.2,0.3,2.4,0.7,3.5,1.2c1.1,0.6,2.1,1.5,2.8,2.6
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.3,0.1-2.6-0.2-3.7-0.7c-1.1-0.6-2.1-1.3-3.1-2.1c-2.1-1.3-4.3-2.4-6.4-3.5
		C1316.7,94,1312.4,91.7,1308.1,89.4z"/>
	<path class="st3" d="M1306.4,91c4.2,2.8,8.3,5.6,12.4,8.4c2.1,1.4,4.1,2.9,6.3,4.1c1.2,0.5,2.3,1,3.4,1.7c1.1,0.8,1.9,1.8,2.5,3
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.3-0.1-2.6-0.6-3.7-1.3c-1-0.8-1.9-1.6-2.8-2.6c-1.9-1.6-4-3.1-6-4.5
		C1314.4,96.9,1310.4,94,1306.4,91z"/>
	<path class="st3" d="M1304.8,92.8c3.6,3.4,7.3,6.9,10.8,10.4c1.8,1.7,3.6,3.5,5.5,5.1c1.1,0.7,2.1,1.4,3,2.3
		c0.9,0.9,1.6,2.1,1.9,3.4c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.3-0.4-2.4-1-3.4-1.9c-0.9-0.9-1.6-1.9-2.3-3
		c-1.6-1.9-3.4-3.7-5.1-5.5C1311.7,100.1,1308.2,96.5,1304.8,92.8z"/>
	<path class="st3" d="M1309.7,83c4.9,0,9.8,0,14.7,0c2.4,0,4.9,0.1,7.3-0.1c1.2-0.3,2.4-0.4,3.7-0.4c1.3,0.1,2.5,0.4,3.6,1.1
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.1,0.6-2.4,0.9-3.7,0.9c-1.2-0.1-2.5-0.3-3.7-0.6c-2.4-0.3-4.9-0.3-7.3-0.4
		C1319.5,83.5,1314.6,83.3,1309.7,83z"/>
	<path class="st3" d="M1309.5,85.3c4.8,0.7,9.7,1.4,14.5,2.2c2.4,0.4,4.8,0.8,7.3,1c1.2-0.1,2.5-0.1,3.7,0.1
		c1.3,0.3,2.4,0.8,3.4,1.6c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.2,0.4-2.5,0.6-3.8,0.4c-1.2-0.3-2.4-0.6-3.5-1.1
		c-2.4-0.7-4.8-1.1-7.2-1.5C1319.1,87.2,1314.3,86.2,1309.5,85.3z"/>
	<path class="st3" d="M1309,87.4c4.7,1.4,9.4,2.8,14.1,4.3c2.3,0.7,4.7,1.5,7.1,2c1.2,0.1,2.5,0.3,3.6,0.6c1.2,0.4,2.3,1.2,3.2,2.1
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.3,0.3-2.6,0.2-3.8-0.2c-1.2-0.4-2.3-1-3.3-1.6c-2.3-1-4.6-1.7-6.9-2.5
		C1318.2,90.6,1313.6,89,1309,87.4z"/>
	<path class="st3" d="M1303.5,95.2c2.9,3.9,5.8,7.7,8.7,11.6c1.4,1.9,2.8,3.9,4.4,5.7c0.9,0.8,1.8,1.7,2.5,2.7
		c0.7,1.1,1.2,2.3,1.3,3.5c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.2-0.5-2.2-1.3-2.9-2.4c-0.7-1-1.2-2.1-1.7-3.3c-1.2-2.1-2.6-4.1-4-6.1
		C1308.9,103.2,1306.2,99.2,1303.5,95.2z"/>
	<path class="st3" d="M1300.8,95.6c2.3,4.4,4.6,8.9,6.8,13.4c1.1,2.2,2.2,4.5,3.5,6.6c0.8,1,1.5,2,2.1,3.1c0.5,1.2,0.8,2.5,0.7,3.8
		c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.1-0.8-2-1.8-2.6-2.9c-0.5-1.2-0.9-2.4-1.2-3.6c-0.9-2.4-2-4.6-3-6.9
		C1305,104.7,1302.9,100.2,1300.8,95.6z"/>
	<path class="st3" d="M1298.5,96.5c1.5,4.8,3,9.5,4.5,14.3c0.7,2.4,1.4,4.8,2.4,7.1c0.6,1.1,1.2,2.3,1.5,3.5
		c0.3,1.3,0.4,2.6,0.1,3.9c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-0.9-0.9-1.6-2.1-2-3.3c-0.3-1.2-0.5-2.5-0.6-3.7
		c-0.5-2.5-1.2-4.9-1.8-7.3C1301.1,106.1,1299.8,101.3,1298.5,96.5z"/>
	<path class="st3" d="M1296.1,96.9c0.7,5,1.4,9.9,2,14.9c0.3,2.5,0.6,5,1.1,7.4c0.4,1.2,0.8,2.4,0.9,3.7c0.1,1.3-0.1,2.6-0.6,3.8
		c0,0-0.1,0.1-0.1,0c0,0,0,0,0,0c-0.8-1.1-1.3-2.3-1.4-3.6c-0.1-1.3-0.1-2.5,0.1-3.8c0-2.5-0.3-5-0.6-7.5
		C1297,106.9,1296.5,101.9,1296.1,96.9z"/>
	<path class="st3" d="M1293.7,96.6c-0.1,5.1-0.3,10.1-0.5,15.2c-0.1,2.5-0.2,5.1-0.1,7.6c0.2,1.3,0.3,2.5,0.3,3.8
		c-0.1,1.3-0.5,2.6-1.2,3.7c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.6-1.2-0.9-2.5-0.8-3.8c0.1-1.3,0.4-2.5,0.7-3.8c0.4-2.5,0.5-5,0.7-7.6
		C1292.9,106.7,1293.3,101.6,1293.7,96.6z"/>
	<path class="st3" d="M1291,96.1c-1.1,4.9-2.3,9.9-3.5,14.8c-0.6,2.5-1.2,4.9-1.6,7.4c0,1.3-0.2,2.6-0.4,3.8c-0.4,1.3-1,2.5-1.9,3.4
		c0,0-0.1,0-0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.3-1.3-0.3-2.6,0-3.9c0.4-1.2,0.8-2.4,1.4-3.5c0.9-2.4,1.5-4.8,2.1-7.3
		C1288.3,105.9,1289.6,101,1291,96.1z"/>
	<path class="st3" d="M1309.9,80.4c4.8-0.8,9.6-1.5,14.4-2.2c2.4-0.4,4.8-0.7,7.2-1.2c1.1-0.5,2.3-0.8,3.5-1c1.3-0.1,2.6,0,3.7,0.5
		c0,0,0.1,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1,0.8-2.2,1.3-3.5,1.5c-1.2,0.1-2.5,0.1-3.7,0c-2.4,0.1-4.8,0.4-7.2,0.7
		C1319.5,79.3,1314.7,79.9,1309.9,80.4z"/>
	<path class="st3" d="M1280.9,75.7c-4.4-2.1-8.8-4.2-13.1-6.3c-2.2-1.1-4.3-2.2-6.6-3.1c-1.2-0.3-2.4-0.7-3.5-1.2
		c-1.1-0.6-2.1-1.5-2.8-2.6c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.3-0.1,2.6,0.2,3.7,0.7c1.1,0.6,2.1,1.3,3,2.1c2.1,1.3,4.2,2.4,6.4,3.5
		C1272.4,71.1,1276.6,73.4,1280.9,75.7z"/>
	<path class="st3" d="M1282.1,73.7c-4-2.7-8-5.4-12-8.2c-2-1.4-4-2.8-6.1-4c-1.1-0.4-2.2-1-3.3-1.7c-1-0.8-1.8-1.8-2.4-2.9
		c0,0,0-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.3,0.1,2.5,0.6,3.6,1.3c1,0.7,1.9,1.6,2.7,2.5c1.8,1.6,3.8,3,5.8,4.5
		C1274.3,67.9,1278.2,70.8,1282.1,73.7z"/>
	<path class="st3" d="M1283.7,71.7c-3.5-3.3-7-6.7-10.4-10.1c-1.7-1.7-3.4-3.4-5.3-5c-1.1-0.6-2-1.4-2.9-2.2
		c-0.9-0.9-1.5-2.1-1.8-3.3c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.2,0.3,2.4,1,3.3,1.9c0.8,0.9,1.6,1.9,2.2,2.9
		c1.5,1.9,3.3,3.6,4.9,5.4C1277.1,64.7,1280.4,68.2,1283.7,71.7z"/>
	<path class="st3" d="M1279.3,82.2c-4.9,0-9.7,0-14.5-0.1c-2.4,0-4.8-0.1-7.3,0.1c-1.2,0.3-2.4,0.4-3.7,0.4
		c-1.3-0.1-2.5-0.5-3.6-1.1c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.1-0.6,2.4-0.9,3.7-0.9c1.2,0.1,2.4,0.3,3.6,0.6c2.4,0.3,4.8,0.4,7.3,0.5
		C1269.6,81.7,1274.5,82,1279.3,82.2z"/>
	<path class="st3" d="M1279.5,79.9c-4.8-0.7-9.6-1.5-14.4-2.3c-2.4-0.4-4.8-0.8-7.2-1c-1.2,0.1-2.5,0-3.7-0.1
		c-1.3-0.3-2.4-0.8-3.4-1.7c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.2-0.4,2.5-0.6,3.8-0.4c1.2,0.3,2.4,0.6,3.5,1.2c2.3,0.7,4.7,1.1,7.1,1.6
		C1270,78,1274.8,78.9,1279.5,79.9z"/>
	<path class="st3" d="M1280.1,77.8c-4.6-1.4-9.3-2.8-13.9-4.3c-2.3-0.7-4.6-1.5-7-2c-1.2-0.1-2.4-0.3-3.6-0.7
		c-1.2-0.4-2.3-1.2-3.1-2.1c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.3-0.3,2.6-0.2,3.8,0.2c1.2,0.4,2.3,1,3.3,1.6c2.2,1,4.5,1.7,6.8,2.6
		C1270.9,74.5,1275.5,76.1,1280.1,77.8z"/>
	<path class="st3" d="M1285.7,70.1c-2.9-3.9-5.8-7.8-8.6-11.7c-1.4-2-2.8-4-4.4-5.8c-0.9-0.8-1.8-1.7-2.5-2.7
		c-0.7-1.1-1.1-2.3-1.3-3.6c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.2,0.5,2.2,1.4,2.9,2.4c0.7,1,1.2,2.1,1.7,3.3
		c1.2,2.1,2.6,4.1,4,6.1C1280.3,62,1283,66,1285.7,70.1z"/>
	<path class="st3" d="M1287.9,68.7c-2.2-4.3-4.4-8.7-6.5-13c-1.1-2.2-2.1-4.4-3.4-6.5c-0.8-0.9-1.5-2-2-3.1
		c-0.5-1.2-0.7-2.4-0.6-3.7c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c1.1,0.7,1.9,1.7,2.5,2.8c0.5,1.1,0.9,2.3,1.1,3.5
		c0.8,2.3,1.9,4.5,2.9,6.7C1284,59.9,1286,64.3,1287.9,68.7z"/>
	<path class="st3" d="M1290.3,67.8c-1.5-4.6-2.9-9.3-4.2-13.9c-0.7-2.3-1.3-4.7-2.2-6.9c-0.6-1.1-1.1-2.2-1.5-3.4
		c-0.3-1.2-0.3-2.5,0-3.8c0,0,0.1-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.9,0.9,1.6,2,2,3.2c0.3,1.2,0.5,2.4,0.5,3.6
		c0.4,2.4,1.1,4.7,1.7,7.1C1287.9,58.4,1289.1,63.1,1290.3,67.8z"/>
	<path class="st3" d="M1293,68.3c-0.7-5-1.3-9.9-1.9-14.9c-0.3-2.5-0.6-5-1.1-7.5c-0.4-1.2-0.7-2.4-0.9-3.7
		c-0.1-1.3,0.1-2.6,0.6-3.8c0,0,0.1-0.1,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c0.8,1.1,1.2,2.3,1.4,3.6c0.1,1.3,0.1,2.5-0.1,3.8
		c0,2.5,0.3,5,0.5,7.5C1292.2,58.3,1292.6,63.3,1293,68.3z"/>
	<path class="st3" d="M1295.4,68.2c0.2-5,0.4-10,0.6-15c0.1-2.5,0.3-5,0.2-7.5c-0.2-1.2-0.3-2.5-0.3-3.8c0.1-1.3,0.5-2.6,1.3-3.7
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.6,1.2,0.8,2.5,0.8,3.8c-0.1,1.3-0.4,2.5-0.8,3.7c-0.4,2.5-0.5,5-0.7,7.5
		C1296.3,58.2,1295.9,63.2,1295.4,68.2z"/>
	<path class="st3" d="M1298.2,68.6c1.1-4.9,2.3-9.8,3.6-14.6c0.6-2.4,1.3-4.9,1.7-7.3c0-1.3,0.2-2.5,0.5-3.8c0.4-1.3,1-2.4,1.9-3.4
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.3,1.3,0.3,2.6,0,3.9c-0.4,1.2-0.9,2.4-1.5,3.5c-0.9,2.4-1.5,4.8-2.2,7.2
		C1301,59,1299.6,63.8,1298.2,68.6z"/>
	<path class="st3" d="M1288.8,95.3c-1.9,4.7-3.9,9.3-5.9,14c-1,2.3-2,4.6-2.8,7c-0.2,1.3-0.6,2.5-1.1,3.7c-0.6,1.2-1.4,2.2-2.5,3.1
		c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.1-1.3,0.1-2.7,0.6-3.9c0.6-1.2,1.2-2.2,2-3.3c1.3-2.2,2.3-4.5,3.3-6.8
		C1284.4,104.5,1286.6,99.9,1288.8,95.3z"/>
	<path class="st3" d="M1300.5,69.4c1.9-4.6,3.9-9.2,6-13.8c1-2.3,2-4.6,2.9-7c0.2-1.2,0.6-2.5,1.1-3.6c0.6-1.2,1.4-2.2,2.5-3
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.1,1.3-0.1,2.6-0.6,3.8c-0.6,1.1-1.2,2.2-2,3.2c-1.3,2.2-2.3,4.5-3.4,6.7
		C1304.8,60.4,1302.7,64.9,1300.5,69.4z"/>
	<path class="st3" d="M1286.5,94.5c-2.7,4.2-5.4,8.4-8.1,12.6c-1.3,2.1-2.8,4.2-3.9,6.4c-0.4,1.2-1,2.3-1.7,3.4
		c-0.8,1.1-1.8,2-2.9,2.6c0,0-0.1,0-0.1,0c0,0,0,0,0,0c0.1-1.3,0.5-2.6,1.2-3.7c0.7-1,1.6-2,2.5-2.8c1.6-1.9,3-4,4.4-6.1
		C1280.7,102.6,1283.6,98.5,1286.5,94.5z"/>
	<path class="st3" d="M1302.6,70.6c2.7-4.2,5.4-8.4,8.2-12.6c1.4-2.1,2.8-4.2,4-6.4c0.4-1.2,1-2.3,1.7-3.4c0.8-1.1,1.8-1.9,3-2.5
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.1,1.3-0.6,2.6-1.3,3.7c-0.7,1-1.6,2-2.5,2.8c-1.6,1.9-3,4-4.4,6.1
		C1308.4,62.4,1305.5,66.5,1302.6,70.6z"/>
	<path class="st3" d="M1284.6,92.9c-3.3,3.7-6.7,7.4-10.1,11.1c-1.7,1.8-3.4,3.7-5,5.6c-0.6,1.1-1.4,2.1-2.2,3.1
		c-0.9,0.9-2.1,1.6-3.3,2c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.3-1.3,1-2.4,1.8-3.4c0.9-0.9,1.9-1.7,3-2.4
		c1.9-1.7,3.6-3.5,5.3-5.3C1277.6,100,1281.1,96.5,1284.6,92.9z"/>
	<path class="st3" d="M1304.5,72.1c3.4-3.7,6.8-7.4,10.2-11.1c1.7-1.8,3.5-3.6,5-5.6c0.6-1.1,1.4-2.1,2.2-3.1c0.9-0.9,2.1-1.6,3.3-2
		c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c-0.3,1.3-1,2.4-1.9,3.4c-0.9,0.9-1.9,1.7-3,2.4c-1.9,1.6-3.6,3.5-5.4,5.2
		C1311.6,65,1308.1,68.5,1304.5,72.1z"/>
	<path class="st3" d="M1283,91.1c-3.9,3.1-7.8,6.2-11.8,9.3c-2,1.5-4,3-5.8,4.7c-0.8,1-1.7,1.9-2.7,2.7c-1.1,0.8-2.3,1.3-3.6,1.4
		c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.5-1.2,1.4-2.3,2.4-3.1c1-0.7,2.1-1.3,3.3-1.8c2.1-1.3,4.1-2.8,6.2-4.3
		C1274.9,96.9,1278.9,94,1283,91.1z"/>
	<path class="st3" d="M1306.1,73.9c3.9-3.1,7.9-6.2,11.9-9.2c2-1.5,4-3,5.9-4.7c0.8-1,1.7-1.9,2.7-2.7c1.1-0.8,2.3-1.2,3.6-1.4
		c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.5,1.2-1.4,2.3-2.4,3.1c-1,0.7-2.2,1.3-3.3,1.8c-2.2,1.3-4.2,2.8-6.2,4.3
		C1314.3,68.1,1310.2,71,1306.1,73.9z"/>
	<path class="st3" d="M1281.7,89c-4.4,2.4-8.8,4.8-13.2,7.1c-2.2,1.2-4.4,2.3-6.5,3.7c-1,0.8-2,1.6-3.1,2.2
		c-1.2,0.6-2.5,0.9-3.8,0.8c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0.7-1.1,1.7-2,2.9-2.6c1.1-0.5,2.3-1,3.6-1.3c2.3-0.9,4.5-2.1,6.8-3.2
		C1272.7,93.4,1277.2,91.2,1281.7,89z"/>
	<path class="st3" d="M1308.3,75.4c4.3-2.3,8.5-4.6,12.8-6.8c2.1-1.1,4.3-2.2,6.4-3.5c0.9-0.8,1.9-1.5,3-2.1
		c1.2-0.5,2.4-0.8,3.7-0.7c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c-0.7,1.1-1.7,1.9-2.8,2.6c-1.1,0.5-2.3,0.9-3.5,1.2c-2.3,0.9-4.4,2-6.6,3
		C1317,71.3,1312.7,73.4,1308.3,75.4z"/>
	<path class="st3" d="M1280.8,86.7c-4.7,1.6-9.5,3.3-14.2,4.8c-2.4,0.8-4.8,1.5-7.1,2.5c-1.1,0.7-2.2,1.2-3.4,1.6
		c-1.3,0.4-2.6,0.4-3.9,0.2c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.9-1,2-1.7,3.3-2.1c1.2-0.3,2.5-0.6,3.7-0.6
		c2.5-0.5,4.8-1.3,7.2-2C1271.2,89.5,1276,88.1,1280.8,86.7z"/>
	<path class="st3" d="M1279.3,84.5c-4.8,0.8-9.5,1.6-14.3,2.3c-2.4,0.4-4.8,0.7-7.1,1.3c-1.1,0.5-2.3,0.8-3.5,1
		c-1.3,0.1-2.6,0-3.7-0.5c0,0-0.1-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1-0.8,2.2-1.3,3.4-1.5c1.2-0.1,2.4-0.1,3.7,0
		c2.4-0.1,4.8-0.4,7.2-0.7C1269.7,85.6,1274.5,85,1279.3,84.5z"/>
	<path class="st3" d="M1309.3,77.8c4.6-1.6,9.2-3.1,13.8-4.6c2.3-0.8,4.6-1.5,6.9-2.4c1-0.6,2.2-1.2,3.3-1.6
		c1.2-0.3,2.5-0.4,3.8-0.1c0,0,0.1,0.1,0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.9,0.9-2,1.6-3.2,2c-1.2,0.3-2.4,0.5-3.6,0.6
		c-2.4,0.5-4.7,1.2-7,1.9C1318.6,75.2,1314,76.5,1309.3,77.8z"/>
	<path class="st3" d="M1357.4,129.6l20.2,11.9c1.6,0.9,2.1,2.9,1.2,4.5c-0.9,1.6-2.9,2.1-4.5,1.2l0,0c-0.3-0.2-0.5-0.3-0.7-0.6
		L1357.4,129.6z"/>
	<path class="st3" d="M1231.9,35.5l-20.2-11.9c-1.6-0.9-2-3-1.1-4.5c0.9-1.5,2.9-2,4.4-1.1c0.3,0.2,0.5,0.3,0.7,0.6L1231.9,35.5z"/>
	<path class="st3" d="M1370.6,101.8l23.3,3.2c1.8,0.2,3.1,1.9,2.8,3.7s-1.9,3.1-3.7,2.8c-0.3,0-0.6-0.1-0.9-0.2L1370.6,101.8z"/>
	<path class="st3" d="M1218.7,63.3l-23.3-3.2c-1.8-0.2-3.1-1.9-2.8-3.7c0.2-1.8,1.9-3.1,3.7-2.8c0.3,0,0.6,0.1,0.9,0.2L1218.7,63.3z
		"/>
	<path class="st3" d="M1311.8,159l7.7,22.2c0.6,1.7-0.4,3.6-2.1,4.2c-1.7,0.6-3.5-0.3-4.1-2c-0.1-0.3-0.2-0.6-0.2-0.9L1311.8,159z"
		/>
	<path class="st3" d="M1277.5,6.1l-7.7-22.2c-0.6-1.7,0.3-3.6,2-4.2c0,0,0,0,0,0c1.7-0.6,3.6,0.3,4.2,2c0,0,0,0,0,0
		c0.1,0.3,0.2,0.6,0.2,0.9L1277.5,6.1z"/>
	<path class="st3" d="M1339.9,146.5l15.6,17.5c1.2,1.4,1.1,3.4-0.3,4.6c-1.4,1.2-3.4,1.1-4.6-0.3c-0.2-0.2-0.4-0.5-0.5-0.8
		L1339.9,146.5z"/>
	<path class="st3" d="M1249.4,18.5L1233.8,1c-1.2-1.4-1.1-3.4,0.3-4.6c1.4-1.2,3.4-1.1,4.6,0.3c0.2,0.2,0.4,0.5,0.5,0.8L1249.4,18.5
		z"/>
	<path class="st3" d="M1365.2,48.3l19.1-13.6c1.5-1,3.5-0.6,4.6,0.8c1,1.5,0.7,3.5-0.8,4.5c-0.2,0.2-0.5,0.3-0.8,0.4L1365.2,48.3z"
		/>
	<path class="st3" d="M1224.2,116.8l-19.1,13.6c-1.5,1-3.5,0.6-4.6-0.8c-1-1.5-0.7-3.5,0.8-4.5c0.2-0.2,0.5-0.3,0.8-0.4
		L1224.2,116.8z"/>
	<path class="st3" d="M1372.9,78l22.9-5.2c1.8-0.4,3.5,0.7,3.9,2.5s-0.7,3.5-2.5,3.9c-0.3,0.1-0.6,0.1-0.9,0.1L1372.9,78z"/>
	<path class="st3" d="M1216.4,87l-22.9,5.2c-1.8,0.4-3.5-0.7-3.9-2.5s0.7-3.5,2.5-3.9c0.3-0.1,0.6-0.1,0.9-0.1L1216.4,87z"/>
	<path class="st3" d="M1327.6,11.4l6.2-22.6c0.5-1.8,2.3-2.8,4-2.3c0,0,0,0,0,0c1.8,0.5,2.8,2.3,2.3,4c0,0,0,0,0,0
		c-0.1,0.3-0.2,0.6-0.4,0.8L1327.6,11.4z"/>
	<path class="st3" d="M1261.7,153.6l-6.2,22.6c-0.5,1.7-2.3,2.7-4.1,2.2c-1.7-0.5-2.7-2.3-2.3-4c0.1-0.3,0.2-0.6,0.4-0.8
		L1261.7,153.6z"/>
	<path class="st3" d="M1352.5,29.6l14.5-18.5c1.1-1.4,3.2-1.7,4.6-0.6s1.7,3.2,0.6,4.6c0,0,0,0-0.1,0.1c-0.2,0.2-0.4,0.5-0.7,0.6
		L1352.5,29.6z"/>
	<path class="st3" d="M1236.8,135.5l-14.5,18.5c-1.1,1.4-3.2,1.7-4.6,0.6c-1.4-1.1-1.7-3.2-0.6-4.6l0,0c0.2-0.2,0.4-0.5,0.7-0.6
		L1236.8,135.5z"/>
	<path class="st3" d="M1301.4,4.4l-1.9-23.4c-0.1-1.8,1.2-3.4,3-3.5c0,0,0,0,0,0c1.8-0.1,3.4,1.2,3.5,3c0,0.3,0,0.6-0.1,0.9
		L1301.4,4.4z"/>
	<path class="st3" d="M1287.9,160.6l1.9,23.4c0.1,1.8-1.2,3.4-3,3.5s-3.4-1.2-3.5-3l0,0c0-0.3,0-0.6,0.1-0.9L1287.9,160.6z"/>
</g>
<g class="st2">
	<path class="st3" d="M377,485.4c6.6,2.8,13.1,5.8,19.7,8.6l19.5,8.9c6.5,2.9,12.9,6.1,19.8,8.3c3.5,0.9,7.5,0.9,10.6,2.8
		c1.6,0.9,3.1,2,4.4,3.3c1.5,1.4,2.7,3.2,3.5,5c0.1,0.2,0,0.4-0.2,0.4c0,0,0,0-0.1,0c-2,0.5-4.1,0.7-6.1,0.4
		c-1.8-0.2-3.6-0.7-5.3-1.4c-3.4-1.2-5.9-4.4-8.8-6.5c-6-4-12.5-7-18.9-10.3l-19.2-9.7C389.6,492.1,383.3,488.8,377,485.4z"/>
	<path class="st3" d="M294.3,445.6c-6.6-2.8-13.1-5.8-19.7-8.6l-19.5-8.9c-6.6-2.9-12.9-6.1-19.8-8.3c-3.5-0.9-7.5-0.9-10.6-2.8
		c-1.6-0.9-3.1-2-4.4-3.3c-1.5-1.4-2.7-3.2-3.5-5c-0.1-0.2,0-0.4,0.2-0.4c0,0,0,0,0,0c0,0,0,0,0.1,0c2-0.5,4.1-0.6,6.2-0.4
		c1.8,0.2,3.6,0.7,5.3,1.4c3.4,1.2,5.8,4.3,8.8,6.5c6,4,12.5,7,18.9,10.3l19.2,9.7C281.7,439,288,442.2,294.3,445.6z"/>
	<path class="st3" d="M367.6,498.4c5.2,4.9,10.3,9.9,15.5,14.9l15.3,15.1c5.1,5,10,10.2,15.7,14.7c3,2.1,6.7,3.4,9,6.3
		c1.2,1.4,2.2,2.9,3,4.6c0.9,1.9,1.4,3.9,1.6,6c0,0.2-0.1,0.3-0.3,0.4c0,0,0,0,0,0c0,0,0,0-0.1,0c-2.1-0.2-4.1-0.8-5.9-1.8
		c-1.6-0.8-3.2-1.9-4.5-3.1c-2.8-2.3-4-6.1-6-9.2c-4.3-5.8-9.4-10.9-14.2-16.2L382,514.4C377.2,509.1,372.3,503.8,367.6,498.4z"/>
	<path class="st3" d="M303.7,432.6c-5.2-4.9-10.3-9.9-15.5-14.9l-15.3-15.1c-5.2-5-10-10.2-15.8-14.7c-3-2.1-6.8-3.4-9-6.3
		c-1.2-1.4-2.2-2.9-3-4.6c-0.9-1.9-1.4-3.9-1.6-5.9c0-0.2,0.1-0.3,0.3-0.4c0,0,0,0,0,0c0,0,0,0,0.1,0c2.1,0.2,4.1,0.8,5.9,1.8
		c1.6,0.8,3.2,1.9,4.5,3.1c2.8,2.3,4,6.1,6,9.1c4.3,5.8,9.4,10.9,14.2,16.2l14.7,15.7C294.1,422,299,427.3,303.7,432.6z"/>
	<path class="st3" d="M381.3,470c7.2,0.4,14.3,0.9,21.5,1.3l21.4,1.7c7.1,0.5,14.3,1.3,21.5,1c3.6-0.3,7.3-1.7,10.9-1
		c1.8,0.3,3.6,0.8,5.2,1.6c1.9,0.8,3.6,2,5.1,3.5c0.1,0.1,0.1,0.3,0,0.5c0,0,0,0,0,0c-1.7,1.2-3.6,2-5.6,2.5
		c-1.8,0.4-3.6,0.6-5.4,0.6c-3.6,0-7-2.1-10.5-3.1c-7-1.7-14.2-2.2-21.3-3.2l-21.3-2.5C395.5,471.9,388.4,471,381.3,470z"/>
	<path class="st3" d="M290,461.1c-7.2-0.4-14.3-0.9-21.5-1.3l-21.4-1.7c-7.1-0.5-14.3-1.3-21.5-1c-3.6,0.3-7.4,1.7-10.9,1
		c-1.8-0.3-3.6-0.8-5.2-1.6c-1.9-0.8-3.6-2-5.1-3.5c-0.1-0.1-0.1-0.3,0-0.5c0,0,0,0,0,0c0,0,0,0,0,0c1.7-1.2,3.6-2,5.6-2.5
		c1.8-0.4,3.6-0.6,5.5-0.6c3.6,0,7,2.1,10.5,3.1c7,1.7,14.2,2.2,21.3,3.2l21.3,2.5C275.8,459.2,282.9,460.1,290,461.1z"/>
	<path class="st3" d="M339.4,511.2c0.9,7.1,1.7,14.2,2.5,21.4l2.2,21.4c0.8,7.1,1.3,14.3,2.9,21.3c1,3.5,3,6.9,3,10.5
		c0,1.8-0.2,3.7-0.6,5.4c-0.5,2-1.4,3.9-2.6,5.6c-0.1,0.2-0.3,0.2-0.5,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.5-1.5-2.6-3.2-3.4-5.1
		c-0.7-1.7-1.3-3.4-1.5-5.3c-0.7-3.5,0.8-7.3,1.2-10.9c0.4-7.2-0.3-14.3-0.7-21.5l-1.3-21.5C340.1,525.5,339.7,518.4,339.4,511.2z"
		/>
	<path class="st3" d="M331.9,419.9c-0.9-7.1-1.7-14.2-2.5-21.4l-2.2-21.4c-0.8-7.1-1.3-14.3-2.9-21.3c-1-3.5-3-6.9-3-10.5
		c0-1.8,0.2-3.7,0.6-5.4c0.5-2,1.4-3.9,2.6-5.6c0.1-0.2,0.3-0.2,0.5-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.5,1.5,2.6,3.2,3.4,5.1
		c0.7,1.7,1.3,3.4,1.5,5.3c0.7,3.5-0.8,7.3-1.2,10.9c-0.4,7.2,0.3,14.3,0.7,21.5l1.3,21.4C331.2,405.5,331.6,412.7,331.9,419.9z"/>
	<path class="st3" d="M323.5,509.7c-2,6.9-3.8,13.8-5.5,20.8c-1.8,6.9-3.4,13.9-5.1,20.9c-1.5,7-3.4,13.9-4.3,21.1
		c-0.1,1.8,0,3.7,0,5.6c0,1.8-0.2,3.6-0.8,5.4c-1.2,3.8-3.7,7-6.9,9.2c-0.2,0.1-0.4,0.1-0.5-0.1c0,0,0,0,0,0c0,0,0,0,0-0.1
		c-0.8-1.9-1.3-3.9-1.4-6c-0.1-1.8,0-3.6,0.4-5.4c0.6-3.5,3.2-6.5,4.8-9.8c2.8-6.7,4.4-13.6,6.4-20.5c1.9-6.9,3.8-13.8,5.9-20.7
		C318.7,523.3,320.9,516.4,323.5,509.7z"/>
	<path class="st3" d="M347.8,421.3c2-6.9,3.9-13.8,5.5-20.8c1.7-7,3.2-13.9,4.7-20.9c1.4-7,3.2-14,4.1-21.2c0.1-1.8,0-3.7,0-5.6
		c0-1.8,0.3-3.7,0.9-5.4c1.3-3.7,3.9-6.9,7.3-9c0.2-0.1,0.4,0,0.5,0.1c0,0,0,0,0,0.1v0c0.7,1.9,1.1,4,1.1,6c0.1,1.8-0.1,3.6-0.6,5.4
		c-0.7,3.5-3.3,6.4-4.9,9.7c-2.8,6.6-4.3,13.6-6.2,20.6c-1.8,6.9-3.6,13.9-5.6,20.8C352.7,407.8,350.5,414.7,347.8,421.3z"/>
	<path class="st3" d="M355.2,507.6c3.3,6.3,6.4,12.7,9.7,19.1l9.4,19.2c3.2,6.4,6.1,12.9,10,18.9c2.1,2.9,5.2,5.4,6.4,8.8
		c0.7,1.7,1.1,3.5,1.3,5.3c0.2,2,0.1,4.1-0.5,6.1c-0.1,0.2-0.2,0.3-0.4,0.2c0,0,0,0,0,0c-1.9-0.9-3.6-2.1-5-3.6
		c-1.3-1.3-2.4-2.8-3.2-4.4c-1.8-3.1-1.7-7-2.6-10.6c-2.1-6.9-5.2-13.3-8-19.8l-8.6-19.6C360.7,520.7,357.8,514.2,355.2,507.6z"/>
	<path class="st3" d="M316.4,423.9c-3.3-6.4-6.5-12.8-9.7-19.2l-9.4-19.3c-3.2-6.4-6.1-13-10-19c-2.1-3-5.2-5.5-6.4-8.9
		c-0.7-1.7-1.1-3.5-1.3-5.3c-0.2-2.1-0.1-4.1,0.5-6.1c0-0.2,0.2-0.3,0.4-0.2c0,0,0,0,0,0c0,0,0,0,0.1,0c1.9,0.9,3.6,2.1,5,3.6
		c1.3,1.3,2.4,2.8,3.2,4.4c1.8,3.1,1.8,7.1,2.6,10.6c2.1,6.9,5.2,13.4,8.1,19.9l8.6,19.7C310.8,410.7,313.7,417.3,316.4,423.9z"/>
	<path class="st3" d="M297.4,491.7c-5.7,4.3-11.5,8.4-17.2,12.7l-17.4,12.4c-5.8,4.2-11.7,8.1-17,12.9c-2.5,2.6-4.5,6-7.6,7.7
		c-1.6,0.9-3.3,1.6-5,2.1c-2,0.6-4.1,0.7-6.1,0.5c-0.2,0-0.3-0.2-0.3-0.4c0,0,0,0,0,0c0,0,0,0,0-0.1c0.5-2,1.5-3.9,2.7-5.5
		c1.1-1.5,2.4-2.8,3.8-3.9c2.7-2.3,6.7-2.9,10-4.3c6.4-3.2,12.2-7.3,18.3-11.1l17.9-11.7C285.3,499.3,291.3,495.4,297.4,491.7z"/>
	<path class="st3" d="M373.9,439.4c5.7-4.3,11.5-8.4,17.2-12.7l17.4-12.4c5.8-4.2,11.7-8.1,17-12.9c2.5-2.6,4.5-6,7.7-7.7
		c1.6-0.9,3.3-1.6,5-2.1c2-0.6,4.1-0.7,6.1-0.5c0.2,0,0.3,0.2,0.3,0.4c0,0,0,0,0,0.1c-0.6,2-1.5,3.9-2.7,5.5
		c-1.1,1.5-2.4,2.8-3.8,3.9c-2.7,2.3-6.7,2.9-10,4.3c-6.4,3.2-12.2,7.3-18.2,11.1L392,428C386,431.8,380,435.7,373.9,439.4z"/>
	<path class="st3" d="M291.2,476.8c-6.9,2.1-13.8,4-20.6,6l-20.7,5.7c-6.9,2-13.9,3.6-20.6,6.3c-3.3,1.6-6.3,4.1-9.9,4.6
		c-1.8,0.3-3.6,0.4-5.5,0.3c-2.1-0.2-4.1-0.7-5.9-1.6c-0.2-0.1-0.2-0.3-0.2-0.5c0,0,0,0,0,0c1.2-1.7,2.7-3.1,4.5-4.2
		c1.5-1,3.2-1.8,4.9-2.4c3.4-1.2,7.3-0.4,10.9-0.6c7.2-0.8,14.1-2.7,21.1-4.2l20.9-4.8C277.2,479.8,284.2,478.2,291.2,476.8z"/>
	<path class="st3" d="M380.1,454.3c6.9-2.1,13.8-4,20.6-6l20.7-5.7c6.9-2,13.9-3.6,20.6-6.3c3.3-1.6,6.3-4.1,9.9-4.6
		c1.8-0.3,3.6-0.4,5.5-0.3c2.1,0.2,4.1,0.7,5.9,1.6c0.2,0.1,0.2,0.3,0.2,0.5c0,0,0,0,0,0c-1.2,1.7-2.7,3.1-4.5,4.2
		c-1.5,1-3.2,1.8-4.9,2.4c-3.4,1.2-7.3,0.4-10.9,0.6c-7.2,0.8-14.1,2.7-21.1,4.2l-20.9,4.8C394.1,451.3,387.1,452.9,380.1,454.3z"/>
	<path class="st3" d="M308.7,503.3c-4,5.9-8.1,11.7-12.1,17.6l-12.3,17.4c-4,5.9-8.3,11.6-11.5,18c-1.5,3.3-2,7.2-4.3,10
		c-1.1,1.4-2.4,2.7-3.8,3.8c-1.6,1.3-3.5,2.2-5.4,2.8c-0.2,0.1-0.4,0-0.4-0.2c0,0,0,0,0,0c0,0,0,0,0-0.1c-0.4-3.9,0.4-7.8,2.5-11.2
		c0.9-1.6,2.1-3,3.5-4.1c1.4-1.2,2.9-2.3,4.2-3.6c4.9-5.3,8.9-11.2,13.3-16.8l13-17L308.7,503.3z"/>
	<path class="st3" d="M362.3,428.2l24.2-35.6c3.9-6,8.2-11.8,11.5-18.2c1.5-3.3,2.1-7.3,4.5-10c1.2-1.4,2.5-2.7,4-3.8
		c1.7-1.2,3.6-2.1,5.6-2.6c0.2,0,0.4,0.1,0.4,0.2c0,0,0,0,0,0.1c0.2,2.1-0.1,4.1-0.7,6.1c-0.5,1.8-1.3,3.4-2.2,5
		c-1.8,3.1-5.3,5-7.9,7.6c-4.9,5.3-8.9,11.2-13.3,16.9l-12.8,17.3C371.2,417,366.8,422.7,362.3,428.2z"/>
	<path class="st3" d="M372.9,492.1c1.8,1,3.5,2,5.3,3.1s3.4,2.2,5.1,3.3s3.3,2.3,5.4,2.9c1.1,0.2,2.7-0.3,3.4,0.5
		c0.4,0.4,0.7,1,0.8,1.5c0.2,0.9,0.1,1.8-0.1,2.7c0,0.1-0.1,0.2-0.2,0.3c-0.8,0.5-1.6,0.8-2.5,1c-0.6,0.1-1.2,0-1.7-0.2
		c-1-0.4-1.1-2-1.6-3c-1.2-1.8-2.9-2.9-4.5-4.2s-3.2-2.5-4.8-3.8S374.4,493.4,372.9,492.1z"/>
	<path class="st3" d="M298.4,439c-1.8-1-3.5-2-5.3-3.1s-3.4-2.2-5.1-3.3s-3.3-2.3-5.4-2.9c-1.1-0.2-2.7,0.3-3.4-0.5
		c-0.4-0.4-0.7-1-0.8-1.5c-0.2-0.9-0.1-1.8,0.1-2.7c0-0.1,0.1-0.2,0.2-0.3c0.8-0.5,1.6-0.8,2.5-1c0.6-0.1,1.2,0,1.7,0.2
		c1,0.4,1.1,2,1.6,3c1.2,1.8,2.9,2.9,4.5,4.2s3.2,2.5,4.8,3.8S296.9,437.6,298.4,439z"/>
	<path class="st3" d="M361.8,503.6c1.3,1.5,2.6,3.1,3.8,4.6s2.4,3.2,3.6,4.7s2.3,3.2,4,4.5c1,0.5,2.6,0.6,3,1.6
		c0.2,0.5,0.3,1.1,0.2,1.7c-0.2,0.9-0.5,1.7-1,2.5c-0.1,0.1-0.2,0.2-0.3,0.2c-0.9,0.2-1.8,0.2-2.7,0c-0.6-0.1-1.1-0.4-1.5-0.8
		c-0.8-0.7-0.3-2.2-0.4-3.3c-0.5-2.1-1.7-3.6-2.7-5.4s-2.1-3.4-3.1-5.1S362.7,505.4,361.8,503.6z"/>
	<path class="st3" d="M309.8,427.8c-1.4-1.5-2.6-3.1-3.9-4.7s-2.4-3.2-3.7-4.8s-2.3-3.3-4.1-4.5c-1-0.5-2.7-0.6-3-1.6
		c-0.2-0.5-0.3-1.1-0.2-1.7c0.2-0.9,0.5-1.8,1-2.5c0.1-0.1,0.2-0.2,0.3-0.2c0.9-0.2,1.8-0.2,2.7,0c0.6,0.1,1.1,0.4,1.5,0.8
		c0.8,0.7,0.3,2.2,0.4,3.4c0.5,2.1,1.8,3.7,2.8,5.5s2.2,3.4,3.2,5.2S308.9,426,309.8,427.8z"/>
	<path class="st3" d="M379.8,477.6c2,0.3,4,0.7,6,1.1s3.9,0.9,5.9,1.3s3.9,1,6.1,0.8c1.1-0.2,2.4-1.2,3.3-0.7c0.5,0.3,1,0.7,1.2,1.2
		c0.5,0.8,0.8,1.7,0.9,2.6c0,0.1,0,0.3-0.1,0.4c-0.6,0.7-1.3,1.3-2.1,1.8c-0.5,0.3-1.1,0.4-1.7,0.4c-1,0-1.7-1.5-2.5-2.3
		c-1.8-1.3-3.7-1.7-5.6-2.4s-3.9-1.2-5.8-1.9S381.6,478.4,379.8,477.6z"/>
	<path class="st3" d="M291.6,453.5c-2-0.3-4-0.7-6-1.1c-2-0.4-3.9-0.9-5.9-1.3s-3.9-1-6.1-0.8c-1.1,0.2-2.4,1.2-3.3,0.7
		c-0.5-0.3-1-0.7-1.2-1.2c-0.5-0.8-0.8-1.7-0.9-2.6c0-0.1,0-0.3,0.1-0.4c0.6-0.7,1.3-1.3,2.1-1.8c0.5-0.3,1.1-0.4,1.7-0.4
		c1,0,1.7,1.5,2.5,2.3c1.8,1.3,3.7,1.7,5.6,2.4s3.9,1.2,5.8,1.9C287.7,452,289.7,452.7,291.6,453.5z"/>
	<path class="st3" d="M331.7,511.1c0.1,2,0,4.1,0,6.1c0,2-0.2,4-0.2,6.1s-0.3,4,0.3,6.1c0.4,1.1,1.6,2.2,1.3,3.2
		c-0.2,0.6-0.5,1.1-1,1.4c-0.7,0.6-1.5,1-2.4,1.3c-0.1,0-0.3,0-0.4,0c-0.8-0.4-1.5-1-2.1-1.7c-0.4-0.4-0.6-1-0.7-1.6
		c-0.2-1,1.2-1.9,1.8-2.9c0.9-2,1-4,1.3-6s0.5-4,0.8-6S331.2,513.1,331.7,511.1z"/>
	<path class="st3" d="M339.6,420.4c-0.1-2.1,0-4.1,0-6.2c0-2.1,0.2-4.1,0.2-6.2s0.3-4.1-0.3-6.2c-0.4-1.1-1.6-2.2-1.3-3.2
		c0.2-0.6,0.5-1.1,1-1.5c0.7-0.6,1.5-1.1,2.4-1.3c0.1,0,0.3,0,0.4,0c0.8,0.4,1.5,1,2.1,1.7c0.4,0.5,0.6,1,0.7,1.6
		c0.2,1.1-1.2,2-1.8,2.9c-0.9,2-1,4.1-1.4,6.1s-0.5,4.1-0.9,6.1S340,418.4,339.6,420.4z"/>
	<path class="st3" d="M316,507.3c-0.6,1.9-1.3,3.8-2,5.6s-1.5,3.7-2.2,5.5s-1.6,3.6-1.8,5.7c0.1,1.1,0.8,2.6,0.1,3.4
		c-0.3,0.5-0.8,0.8-1.4,1c-0.9,0.3-1.8,0.4-2.7,0.4c-0.1,0-0.3-0.1-0.4-0.2c-0.6-0.7-1.1-1.4-1.4-2.3c-0.2-0.5-0.3-1.1-0.1-1.7
		c0.2-1,1.8-1.4,2.7-2c1.5-1.5,2.3-3.3,3.3-5s1.8-3.5,2.8-5.3S315,509,316,507.3z"/>
	<path class="st3" d="M355.1,424.1c0.6-1.9,1.4-3.8,2.1-5.7s1.6-3.7,2.3-5.6s1.7-3.7,1.8-5.8c-0.1-1.1-0.8-2.6-0.1-3.4
		c0.3-0.5,0.8-0.8,1.4-1c0.9-0.3,1.8-0.5,2.7-0.4c0.1,0,0.3,0.1,0.4,0.2c0.6,0.7,1.1,1.5,1.4,2.3c0.2,0.6,0.2,1.2,0.1,1.7
		c-0.2,1-1.8,1.4-2.7,2.1c-1.5,1.5-2.3,3.4-3.3,5.1s-1.9,3.6-2.9,5.4S356.2,422.4,355.1,424.1z"/>
	<path class="st3" d="M347.6,509.7c0.8,1.9,1.4,3.8,2.1,5.7s1.2,3.9,1.9,5.8s1.1,3.9,2.4,5.6c0.8,0.8,2.3,1.5,2.3,2.5
		c0,0.6-0.1,1.2-0.4,1.7c-0.4,0.8-1,1.5-1.8,2.1c-0.1,0.1-0.2,0.1-0.4,0.1c-0.9-0.1-1.8-0.4-2.6-0.9c-0.5-0.3-0.9-0.7-1.2-1.2
		c-0.5-0.9,0.5-2.2,0.7-3.3c0.2-2.2-0.4-4.1-0.8-6.1s-0.9-3.9-1.3-5.9S347.9,511.7,347.6,509.7z"/>
	<path class="st3" d="M323.7,421.4c-0.8-1.9-1.4-3.8-2.1-5.7c-0.7-1.9-1.2-3.9-1.9-5.8s-1.1-3.9-2.4-5.6c-0.8-0.8-2.3-1.5-2.3-2.5
		c0-0.6,0.1-1.2,0.4-1.7c0.4-0.8,1-1.5,1.8-2.1c0.1-0.1,0.2-0.1,0.4-0.1c0.9,0.1,1.8,0.4,2.6,0.9c0.5,0.3,0.9,0.7,1.2,1.2
		c0.5,0.9-0.5,2.2-0.7,3.3c-0.2,2.1,0.4,4.1,0.8,6.1s0.9,3.9,1.3,5.9S323.4,419.4,323.7,421.4z"/>
	<path class="st3" d="M294.1,484.6c-1.7,1.1-3.5,2-5.3,3s-3.6,1.8-5.4,2.8s-3.7,1.7-5.2,3.3c-0.7,0.9-1.1,2.5-2.1,2.7
		c-0.6,0.1-1.2,0.1-1.7-0.1c-0.9-0.3-1.7-0.8-2.3-1.4c-0.1-0.1-0.2-0.2-0.2-0.4c0-0.9,0.1-1.8,0.4-2.7c0.2-0.6,0.6-1,1-1.4
		c0.8-0.7,2.3,0.1,3.4,0.2c2.2-0.2,3.9-1.1,5.9-1.8s3.7-1.5,5.7-2.2S292.1,485.2,294.1,484.6z"/>
	<path class="st3" d="M377.2,446.5c1.7-1.1,3.5-2,5.3-3s3.6-1.8,5.4-2.8s3.7-1.7,5.2-3.3c0.7-0.9,1.1-2.5,2.1-2.7
		c0.6-0.1,1.2-0.1,1.7,0.1c0.9,0.3,1.6,0.8,2.3,1.4c0.1,0.1,0.2,0.2,0.2,0.4c0,0.9-0.1,1.8-0.4,2.7c-0.2,0.6-0.6,1-1,1.4
		c-0.8,0.7-2.3-0.1-3.4-0.2c-2.2,0.2-3.9,1.1-5.9,1.8s-3.7,1.6-5.7,2.2S379.2,445.9,377.2,446.5z"/>
	<path class="st3" d="M290.1,469.1c-2,0.4-4,0.7-6,1s-4,0.5-6,0.8c-2,0.3-4,0.4-6,1.3c-1,0.6-1.9,2-2.9,1.8
		c-0.6-0.1-1.1-0.3-1.6-0.7c-0.7-0.6-1.3-1.3-1.7-2.1c-0.1-0.1-0.1-0.3,0-0.4c0.3-0.9,0.7-1.7,1.3-2.4c0.4-0.5,0.9-0.8,1.5-0.9
		c1-0.4,2.1,0.9,3.1,1.3c2.1,0.6,4.1,0.3,6.1,0.3s4-0.2,6.1-0.2S288,469,290.1,469.1z"/>
	<path class="st3" d="M381.2,462c2-0.4,4-0.7,6-1c2-0.3,4-0.5,6-0.8s4-0.4,6-1.3c1-0.6,1.9-2,2.9-1.8c0.6,0.1,1.1,0.3,1.6,0.7
		c0.7,0.6,1.3,1.3,1.7,2.1c0.1,0.1,0.1,0.3,0,0.4c-0.3,0.9-0.7,1.7-1.3,2.4c-0.4,0.5-0.9,0.8-1.4,0.9c-1,0.3-2.1-0.9-3.1-1.3
		c-2.1-0.6-4.1-0.3-6.1-0.3s-4,0.2-6.1,0.2C385.3,462.1,383.3,462.1,381.2,462z"/>
	<path class="st3" d="M302.8,498c-1.2,1.6-2.6,3.1-3.8,4.6s-2.7,2.9-4,4.4s-2.8,2.8-3.7,4.8c-0.3,1.1-0.1,2.7-1,3.2
		c-0.5,0.3-1.1,0.5-1.6,0.5c-0.9,0-1.8-0.2-2.6-0.5c-0.1,0-0.2-0.1-0.3-0.3c-0.4-0.8-0.5-1.7-0.5-2.6c0-0.6,0.2-1.2,0.5-1.6
		c0.5-0.9,2.1-0.7,3.2-1c1.9-0.9,3.3-2.3,4.8-3.6s2.9-2.7,4.5-4S301.3,499.2,302.8,498z"/>
	<path class="st3" d="M368.5,433c1.2-1.6,2.6-3.1,3.8-4.6s2.7-2.9,4-4.4s2.8-2.8,3.7-4.8c0.3-1.1,0.1-2.7,1-3.2
		c0.5-0.3,1.1-0.5,1.6-0.5c0.9,0,1.8,0.2,2.6,0.5c0.1,0,0.2,0.1,0.3,0.3c0.4,0.8,0.5,1.7,0.5,2.6c0,0.6-0.2,1.2-0.5,1.6
		c-0.5,0.9-2.1,0.7-3.2,1c-1.9,0.9-3.3,2.3-4.8,3.6s-2.9,2.7-4.5,4S370,431.8,368.5,433z"/>
	<path class="st3" d="M349.1,472.4c4.4,2.1,8.9,4.2,13.3,6.3c2.2,1,4.4,2.2,6.7,3c1.2,0.3,2.4,0.7,3.5,1.2c1.1,0.6,2.1,1.5,2.8,2.6
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.3,0.1-2.6-0.2-3.7-0.7c-1.1-0.6-2.1-1.3-3.1-2.1c-2.1-1.3-4.3-2.4-6.4-3.5
		C357.7,477,353.4,474.7,349.1,472.4z"/>
	<path class="st3" d="M347.4,474c4.2,2.8,8.3,5.6,12.4,8.4c2.1,1.4,4.1,2.9,6.3,4.1c1.2,0.5,2.3,1,3.4,1.7c1.1,0.8,1.9,1.8,2.5,3
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.3-0.1-2.6-0.6-3.7-1.3c-1-0.8-1.9-1.6-2.8-2.6c-1.9-1.6-4-3.1-6-4.5
		C355.4,479.9,351.4,477,347.4,474z"/>
	<path class="st3" d="M345.8,475.8c3.6,3.4,7.3,6.9,10.8,10.4c1.8,1.7,3.6,3.5,5.5,5.1c1.1,0.7,2.1,1.4,3,2.3
		c0.9,0.9,1.6,2.1,1.9,3.4c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.3-0.4-2.4-1-3.4-1.9c-0.9-0.9-1.6-1.9-2.3-3
		c-1.6-1.9-3.4-3.7-5.1-5.5C352.7,483.1,349.2,479.5,345.8,475.8z"/>
	<path class="st3" d="M350.7,466c4.9,0,9.8,0,14.7,0c2.4,0,4.9,0.1,7.3-0.1c1.2-0.3,2.4-0.4,3.7-0.4c1.3,0.1,2.5,0.4,3.6,1.1
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.1,0.6-2.4,0.9-3.7,0.9c-1.2-0.1-2.5-0.3-3.7-0.6c-2.4-0.3-4.9-0.3-7.3-0.4
		C360.5,466.5,355.6,466.3,350.7,466z"/>
	<path class="st3" d="M350.5,468.3c4.8,0.7,9.7,1.4,14.5,2.2c2.4,0.4,4.8,0.8,7.3,1c1.2-0.1,2.5-0.1,3.7,0.1
		c1.3,0.3,2.4,0.8,3.4,1.6c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.2,0.4-2.5,0.6-3.8,0.4c-1.2-0.3-2.4-0.6-3.5-1.1
		c-2.4-0.7-4.8-1.1-7.2-1.5C360.1,470.2,355.3,469.2,350.5,468.3z"/>
	<path class="st3" d="M350,470.4c4.7,1.4,9.4,2.8,14.1,4.3c2.3,0.7,4.7,1.5,7.1,2c1.2,0.1,2.5,0.3,3.6,0.6c1.2,0.4,2.3,1.2,3.2,2.1
		c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.3,0.3-2.6,0.2-3.8-0.2c-1.2-0.4-2.3-1-3.3-1.6c-2.3-1-4.6-1.7-6.9-2.5
		C359.2,473.6,354.6,472,350,470.4z"/>
	<path class="st3" d="M344.5,478.2c2.9,3.9,5.8,7.7,8.7,11.6c1.4,1.9,2.8,3.9,4.4,5.7c0.9,0.8,1.8,1.7,2.5,2.7
		c0.7,1.1,1.2,2.3,1.3,3.5c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.2-0.5-2.2-1.3-2.9-2.4c-0.7-1-1.2-2.1-1.7-3.3c-1.2-2.1-2.6-4.1-4-6.1
		C349.9,486.2,347.2,482.2,344.5,478.2z"/>
	<path class="st3" d="M341.8,478.6c2.3,4.4,4.6,8.9,6.8,13.4c1.1,2.2,2.2,4.5,3.5,6.6c0.8,1,1.5,2,2.1,3.1c0.5,1.2,0.8,2.5,0.7,3.8
		c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.1-0.8-2-1.8-2.6-2.9c-0.5-1.2-0.9-2.4-1.2-3.6c-0.9-2.4-2-4.6-3-6.9
		C346,487.7,343.9,483.2,341.8,478.6z"/>
	<path class="st3" d="M339.5,479.5c1.5,4.8,3,9.5,4.5,14.3c0.7,2.4,1.4,4.8,2.4,7.1c0.6,1.1,1.2,2.3,1.5,3.5
		c0.3,1.3,0.4,2.6,0.1,3.9c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-0.9-0.9-1.6-2.1-2-3.3c-0.3-1.2-0.5-2.5-0.6-3.7
		c-0.5-2.5-1.2-4.9-1.8-7.3C342.1,489.1,340.8,484.3,339.5,479.5z"/>
	<path class="st3" d="M337.1,479.9c0.7,5,1.4,9.9,2,14.9c0.3,2.5,0.6,5,1.1,7.4c0.4,1.2,0.8,2.4,0.9,3.7c0.1,1.3-0.1,2.6-0.6,3.8
		c0,0-0.1,0.1-0.1,0c0,0,0,0,0,0c-0.8-1.1-1.3-2.3-1.4-3.6c-0.1-1.3-0.1-2.5,0.1-3.8c0-2.5-0.3-5-0.6-7.5
		C338,489.9,337.5,484.9,337.1,479.9z"/>
	<path class="st3" d="M334.7,479.6c-0.1,5.1-0.3,10.1-0.5,15.2c-0.1,2.5-0.2,5.1-0.1,7.6c0.2,1.3,0.3,2.5,0.3,3.8
		c-0.1,1.3-0.5,2.6-1.2,3.7c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.6-1.2-0.9-2.5-0.8-3.8c0.1-1.3,0.4-2.5,0.7-3.8c0.4-2.5,0.5-5,0.7-7.6
		C333.9,489.7,334.3,484.6,334.7,479.6z"/>
	<path class="st3" d="M332,479.1c-1.1,4.9-2.3,9.9-3.5,14.8c-0.6,2.5-1.2,4.9-1.6,7.4c0,1.3-0.2,2.6-0.4,3.8c-0.4,1.3-1,2.5-1.9,3.4
		c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.3-1.3-0.3-2.6,0-3.9c0.4-1.2,0.8-2.4,1.4-3.5c0.9-2.4,1.5-4.8,2.1-7.3
		C329.3,488.9,330.6,484,332,479.1z"/>
	<path class="st3" d="M350.9,463.4c4.8-0.8,9.6-1.5,14.4-2.2c2.4-0.4,4.8-0.7,7.2-1.2c1.1-0.5,2.3-0.8,3.5-1c1.3-0.1,2.6,0,3.7,0.5
		c0,0,0.1,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1,0.8-2.2,1.3-3.5,1.5c-1.2,0.1-2.5,0.1-3.7,0c-2.4,0.1-4.8,0.4-7.2,0.7
		C360.5,462.3,355.7,462.9,350.9,463.4z"/>
	<path class="st3" d="M321.9,458.7c-4.4-2.1-8.8-4.2-13.1-6.3c-2.2-1.1-4.3-2.2-6.6-3.1c-1.2-0.3-2.4-0.7-3.5-1.2
		c-1.1-0.6-2.1-1.5-2.8-2.6c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.3-0.1,2.6,0.2,3.7,0.7c1.1,0.6,2.1,1.3,3,2.1c2.1,1.3,4.2,2.4,6.4,3.5
		C313.4,454.1,317.6,456.4,321.9,458.7z"/>
	<path class="st3" d="M323.1,456.7c-4-2.7-8-5.4-12-8.2c-2-1.4-4-2.8-6.1-4c-1.1-0.4-2.2-1-3.3-1.7c-1-0.8-1.8-1.8-2.4-2.9
		c0,0,0-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.3,0.1,2.5,0.6,3.6,1.3c1,0.7,1.9,1.6,2.7,2.5c1.8,1.6,3.8,3,5.8,4.5
		C315.3,450.9,319.2,453.8,323.1,456.7z"/>
	<path class="st3" d="M324.7,454.7c-3.5-3.3-7-6.7-10.4-10.1c-1.7-1.7-3.4-3.4-5.3-5c-1.1-0.6-2-1.4-2.9-2.2
		c-0.9-0.9-1.5-2.1-1.8-3.3c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.2,0.3,2.4,1,3.3,1.9c0.8,0.9,1.6,1.9,2.2,2.9
		c1.5,1.9,3.3,3.6,4.9,5.4C318.1,447.7,321.4,451.2,324.7,454.7z"/>
	<path class="st3" d="M320.3,465.2c-4.9,0-9.7,0-14.5-0.1c-2.4,0-4.8-0.1-7.3,0.1c-1.2,0.3-2.4,0.4-3.7,0.4
		c-1.3-0.1-2.5-0.5-3.6-1.1c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.1-0.6,2.4-0.9,3.7-0.9c1.2,0.1,2.4,0.3,3.6,0.6c2.4,0.3,4.8,0.4,7.3,0.5
		C310.6,464.7,315.5,465,320.3,465.2z"/>
	<path class="st3" d="M320.5,463c-4.8-0.7-9.6-1.5-14.4-2.3c-2.4-0.4-4.8-0.8-7.2-1c-1.2,0.1-2.5,0-3.7-0.1
		c-1.3-0.3-2.4-0.8-3.4-1.7c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.2-0.4,2.5-0.6,3.8-0.4c1.2,0.3,2.4,0.6,3.5,1.2c2.3,0.7,4.7,1.1,7.1,1.6
		C311,461,315.8,461.9,320.5,463z"/>
	<path class="st3" d="M321.1,460.8c-4.6-1.4-9.3-2.8-13.9-4.3c-2.3-0.7-4.6-1.5-7-2c-1.2-0.1-2.4-0.3-3.6-0.7
		c-1.2-0.4-2.3-1.2-3.1-2.1c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.3-0.3,2.6-0.2,3.8,0.2c1.2,0.4,2.3,1,3.3,1.6c2.2,1,4.5,1.7,6.8,2.6
		C311.9,457.5,316.5,459.1,321.1,460.8z"/>
	<path class="st3" d="M326.7,453.1c-2.9-3.9-5.8-7.8-8.6-11.7c-1.4-2-2.8-4-4.4-5.8c-0.9-0.8-1.8-1.7-2.5-2.7
		c-0.7-1.1-1.1-2.3-1.3-3.6c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.2,0.5,2.2,1.4,2.9,2.4c0.7,1,1.2,2.1,1.7,3.3
		c1.2,2.1,2.6,4.1,4,6.1C321.3,445,324,449,326.7,453.1z"/>
	<path class="st3" d="M328.9,451.7c-2.2-4.3-4.4-8.7-6.5-13c-1.1-2.2-2.1-4.4-3.4-6.5c-0.8-0.9-1.5-2-2-3.1
		c-0.5-1.2-0.7-2.4-0.6-3.7c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c1.1,0.7,1.9,1.7,2.5,2.8c0.5,1.1,0.9,2.3,1.1,3.5
		c0.8,2.3,1.9,4.5,2.9,6.7C325,442.9,327,447.3,328.9,451.7z"/>
	<path class="st3" d="M331.3,450.8c-1.5-4.6-2.9-9.3-4.2-13.9c-0.7-2.3-1.3-4.7-2.2-6.9c-0.6-1.1-1.1-2.2-1.5-3.4
		c-0.3-1.2-0.3-2.5,0-3.8c0,0,0.1-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.9,0.9,1.6,2,2,3.2c0.3,1.2,0.5,2.4,0.5,3.6
		c0.4,2.4,1.1,4.7,1.7,7.1C328.9,441.4,330.1,446.1,331.3,450.8z"/>
	<path class="st3" d="M334,451.3c-0.7-5-1.3-9.9-1.9-14.9c-0.3-2.5-0.6-5-1.1-7.5c-0.4-1.2-0.7-2.4-0.9-3.7
		c-0.1-1.3,0.1-2.6,0.6-3.8c0,0,0.1-0.1,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c0.8,1.1,1.2,2.3,1.4,3.6c0.1,1.3,0.1,2.5-0.1,3.8
		c0,2.5,0.3,5,0.5,7.5C333.2,441.3,333.6,446.3,334,451.3z"/>
	<path class="st3" d="M336.4,451.2c0.2-5,0.4-10,0.6-15c0.1-2.5,0.3-5,0.2-7.5c-0.2-1.2-0.3-2.5-0.3-3.8c0.1-1.3,0.5-2.6,1.3-3.7
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.6,1.2,0.8,2.5,0.8,3.8c-0.1,1.3-0.4,2.5-0.8,3.7c-0.4,2.5-0.5,5-0.7,7.5
		C337.3,441.2,336.9,446.2,336.4,451.2z"/>
	<path class="st3" d="M339.2,451.6c1.1-4.9,2.3-9.8,3.6-14.6c0.6-2.4,1.3-4.9,1.7-7.3c0-1.3,0.2-2.5,0.5-3.8c0.4-1.3,1-2.4,1.9-3.4
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.3,1.3,0.3,2.6,0,3.9c-0.4,1.2-0.9,2.4-1.5,3.5c-0.9,2.4-1.5,4.8-2.2,7.2
		C342,442,340.6,446.8,339.2,451.6z"/>
	<path class="st3" d="M329.8,478.3c-1.9,4.7-3.9,9.3-5.9,14c-1,2.3-2,4.6-2.8,7c-0.2,1.3-0.6,2.5-1.1,3.7c-0.6,1.2-1.4,2.2-2.5,3.1
		c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.1-1.3,0.1-2.7,0.6-3.9c0.6-1.2,1.2-2.2,2-3.3c1.3-2.2,2.3-4.5,3.3-6.8
		C325.4,487.5,327.6,482.9,329.8,478.3z"/>
	<path class="st3" d="M341.5,452.4c1.9-4.6,3.9-9.2,6-13.8c1-2.3,2-4.6,2.9-7c0.2-1.2,0.6-2.5,1.1-3.6c0.6-1.2,1.4-2.2,2.5-3
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.1,1.3-0.1,2.6-0.6,3.8c-0.6,1.1-1.2,2.2-2,3.2c-1.3,2.2-2.3,4.5-3.4,6.7
		C345.8,443.4,343.7,447.9,341.5,452.4z"/>
	<path class="st3" d="M327.5,477.5c-2.7,4.2-5.4,8.4-8.1,12.6c-1.3,2.1-2.8,4.2-3.9,6.4c-0.4,1.2-1,2.3-1.7,3.4
		c-0.8,1.1-1.8,2-2.9,2.6c0,0-0.1,0-0.1,0c0,0,0,0,0,0c0.1-1.3,0.5-2.6,1.2-3.7c0.7-1,1.6-2,2.5-2.8c1.6-1.9,3-4,4.4-6.1
		C321.7,485.6,324.6,481.5,327.5,477.5z"/>
	<path class="st3" d="M343.6,453.6c2.7-4.2,5.4-8.4,8.2-12.6c1.4-2.1,2.8-4.2,4-6.4c0.4-1.2,1-2.3,1.7-3.4c0.8-1.1,1.8-1.9,3-2.5
		c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.1,1.3-0.6,2.6-1.3,3.7c-0.7,1-1.6,2-2.5,2.8c-1.6,1.9-3,4-4.5,6.1
		C349.4,445.4,346.5,449.5,343.6,453.6z"/>
	<path class="st3" d="M325.6,475.9c-3.3,3.7-6.7,7.4-10.1,11.1c-1.7,1.9-3.4,3.7-5,5.6c-0.6,1.1-1.4,2.1-2.2,3.1
		c-0.9,0.9-2.1,1.6-3.3,2c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0.3-1.3,1-2.4,1.8-3.4c0.9-0.9,1.9-1.7,3-2.4c1.9-1.7,3.6-3.5,5.4-5.3
		C318.6,483,322.1,479.5,325.6,475.9z"/>
	<path class="st3" d="M345.5,455.1c3.4-3.7,6.8-7.4,10.2-11.1c1.7-1.8,3.5-3.6,5-5.6c0.6-1.1,1.4-2.1,2.2-3.1c0.9-0.9,2.1-1.6,3.3-2
		c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c-0.3,1.3-1,2.4-1.9,3.4c-0.9,0.9-1.9,1.7-3,2.4c-1.9,1.6-3.6,3.5-5.4,5.2
		C352.6,448,349.1,451.5,345.5,455.1z"/>
	<path class="st3" d="M324,474.1c-3.9,3.1-7.8,6.2-11.8,9.3c-2,1.5-4,3-5.8,4.7c-0.8,1-1.7,1.9-2.7,2.7c-1.1,0.8-2.3,1.3-3.6,1.4
		c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.5-1.2,1.4-2.3,2.4-3.1c1-0.7,2.1-1.3,3.3-1.8c2.1-1.3,4.1-2.8,6.2-4.3
		C315.9,479.9,319.9,477,324,474.1z"/>
	<path class="st3" d="M347.1,456.9c3.9-3.1,7.9-6.2,11.9-9.2c2-1.5,4-3,5.9-4.7c0.8-1,1.7-1.9,2.7-2.7c1.1-0.8,2.3-1.2,3.6-1.4
		c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.5,1.2-1.4,2.3-2.4,3.1c-1,0.7-2.2,1.3-3.3,1.8c-2.2,1.3-4.2,2.8-6.2,4.3
		C355.3,451.1,351.2,454,347.1,456.9z"/>
	<path class="st3" d="M322.7,472c-4.4,2.4-8.8,4.8-13.2,7.1c-2.2,1.2-4.4,2.3-6.5,3.7c-1,0.8-2,1.6-3.1,2.2
		c-1.2,0.6-2.5,0.9-3.8,0.8c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0.7-1.1,1.7-2,2.9-2.6c1.1-0.5,2.3-1,3.6-1.3c2.3-0.9,4.5-2.1,6.8-3.2
		C313.7,476.4,318.2,474.2,322.7,472z"/>
	<path class="st3" d="M349.3,458.4c4.3-2.3,8.5-4.6,12.8-6.8c2.1-1.1,4.3-2.2,6.4-3.5c0.9-0.8,1.9-1.5,3-2.1
		c1.2-0.5,2.4-0.8,3.7-0.7c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c-0.7,1.1-1.7,1.9-2.8,2.6c-1.1,0.5-2.3,0.9-3.5,1.2c-2.3,0.9-4.4,2-6.6,3
		C358,454.3,353.7,456.4,349.3,458.4z"/>
	<path class="st3" d="M321.8,469.7c-4.7,1.6-9.5,3.3-14.2,4.8c-2.4,0.8-4.8,1.5-7.1,2.5c-1.1,0.7-2.2,1.2-3.4,1.6
		c-1.3,0.4-2.6,0.4-3.9,0.2c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.9-1,2-1.7,3.3-2.1c1.2-0.3,2.5-0.6,3.7-0.6
		c2.5-0.5,4.8-1.3,7.2-2C312.2,472.5,317,471.1,321.8,469.7z"/>
	<path class="st3" d="M320.3,467.5c-4.8,0.8-9.5,1.6-14.3,2.3c-2.4,0.4-4.8,0.7-7.1,1.3c-1.1,0.5-2.3,0.8-3.5,1
		c-1.3,0.1-2.6,0-3.7-0.5c0,0-0.1-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1-0.8,2.2-1.3,3.4-1.5c1.2-0.1,2.4-0.1,3.7,0
		c2.4-0.1,4.8-0.5,7.2-0.7C310.7,468.6,315.5,468,320.3,467.5z"/>
	<path class="st3" d="M350.3,460.8c4.6-1.6,9.2-3.1,13.8-4.6c2.3-0.8,4.6-1.5,6.9-2.4c1-0.6,2.2-1.2,3.3-1.6
		c1.2-0.3,2.5-0.4,3.8-0.1c0,0,0.1,0.1,0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.9,0.9-2,1.6-3.2,2c-1.2,0.3-2.4,0.5-3.6,0.6
		c-2.4,0.5-4.7,1.2-7,1.9C359.6,458.2,355,459.5,350.3,460.8z"/>
	<path class="st3" d="M398.4,512.6l20.2,11.9c1.6,0.9,2.1,2.9,1.2,4.5c-0.9,1.6-2.9,2.1-4.5,1.2c-0.3-0.2-0.5-0.3-0.7-0.6
		L398.4,512.6z"/>
	<path class="st3" d="M272.9,418.5l-20.2-11.9c-1.6-0.9-2-3-1.1-4.5c0.9-1.5,2.9-2,4.4-1.1c0.3,0.2,0.5,0.3,0.7,0.6L272.9,418.5z"/>
	<path class="st3" d="M411.6,484.8l23.3,3.2c1.8,0.2,3.1,1.9,2.8,3.7s-1.9,3.1-3.7,2.8l0,0c-0.3,0-0.6-0.1-0.9-0.2L411.6,484.8z"/>
	<path class="st3" d="M259.7,446.3l-23.3-3.2c-1.8-0.2-3.1-1.9-2.8-3.7s1.9-3.1,3.7-2.8l0,0c0.3,0,0.6,0.1,0.9,0.2L259.7,446.3z"/>
	<path class="st3" d="M352.8,542l7.7,22.2c0.6,1.7-0.4,3.6-2.1,4.2c-1.7,0.6-3.5-0.3-4.1-2c-0.1-0.3-0.2-0.6-0.2-0.9L352.8,542z"/>
	<path class="st3" d="M318.5,389.1l-7.7-22.2c-0.6-1.7,0.3-3.6,2-4.2c1.7-0.6,3.6,0.3,4.2,2c0.1,0.3,0.2,0.6,0.2,0.9L318.5,389.1z"
		/>
	<path class="st3" d="M380.9,529.5l15.6,17.5c1.2,1.4,1.1,3.4-0.3,4.6s-3.4,1.1-4.6-0.3c-0.2-0.2-0.4-0.5-0.5-0.8L380.9,529.5z"/>
	<path class="st3" d="M290.4,401.5L274.8,384c-1.2-1.4-1-3.4,0.3-4.6c1.3-1.2,3.4-1.1,4.6,0.3c0.2,0.2,0.4,0.5,0.5,0.8L290.4,401.5z
		"/>
	<path class="st3" d="M406.2,431.3l19.1-13.6c1.5-1,3.5-0.6,4.6,0.9c1,1.5,0.7,3.5-0.8,4.5c-0.2,0.2-0.5,0.3-0.8,0.4L406.2,431.3z"
		/>
	<path class="st3" d="M265.1,499.8L246,513.4c-1.5,1.1-3.5,0.8-4.6-0.7s-0.8-3.5,0.7-4.6c0,0,0.1,0,0.1-0.1c0.2-0.2,0.5-0.3,0.8-0.4
		L265.1,499.8z"/>
	<path class="st3" d="M413.9,461l22.9-5.2c1.8-0.4,3.5,0.7,3.9,2.5c0.4,1.8-0.7,3.5-2.5,3.9c-0.3,0.1-0.6,0.1-0.9,0.1L413.9,461z"/>
	<path class="st3" d="M257.4,470l-22.9,5.2c-1.8,0.4-3.5-0.7-3.9-2.5c-0.4-1.8,0.7-3.5,2.5-3.9l0,0c0.3-0.1,0.6-0.1,0.9-0.1
		L257.4,470z"/>
	<path class="st3" d="M368.6,394.4l6.2-22.6c0.5-1.8,2.2-2.8,4-2.4c1.8,0.5,2.8,2.2,2.4,4c0,0,0,0.1,0,0.1c-0.1,0.3-0.2,0.6-0.4,0.8
		L368.6,394.4z"/>
	<path class="st3" d="M302.7,536.6l-6.2,22.6c-0.5,1.7-2.3,2.7-4.1,2.2c-1.7-0.5-2.7-2.3-2.3-4c0.1-0.3,0.2-0.6,0.4-0.8L302.7,536.6
		z"/>
	<path class="st3" d="M393.5,412.6l14.5-18.5c1.1-1.4,3.2-1.7,4.6-0.6c1.4,1.1,1.7,3.2,0.6,4.6c0,0,0,0-0.1,0.1
		c-0.2,0.2-0.4,0.5-0.7,0.6L393.5,412.6z"/>
	<path class="st3" d="M277.8,518.5L263.4,537c-1.1,1.4-3.2,1.7-4.6,0.6c-1.4-1.1-1.7-3.2-0.6-4.6l0,0c0.2-0.2,0.4-0.5,0.7-0.6
		L277.8,518.5z"/>
	<path class="st3" d="M342.4,387.4l-1.9-23.4c-0.1-1.8,1.2-3.4,3-3.5s3.4,1.2,3.5,3c0,0.3,0,0.6-0.1,0.9L342.4,387.4z"/>
	<path class="st3" d="M328.9,543.6l1.9,23.4c0.1,1.8-1.2,3.4-3,3.5c-1.8,0.1-3.4-1.2-3.5-3c0-0.3,0-0.6,0.1-0.9L328.9,543.6z"/>
</g>
<path class="st4" d="M957.1,93.2l21.5-10.7l-20.1,13.2c-0.6,0.5-1.5,0.3-2-0.3c-0.5-0.6-0.3-1.5,0.3-2c0,0,0.1,0,0.1-0.1
	C957,93.3,957.1,93.2,957.1,93.2z"/>
<path class="st4" d="M958.6,49.4l20.1,13.2l-21.5-10.7c-0.7-0.4-1-1.2-0.6-1.9c0.4-0.7,1.2-1,1.9-0.6l0,0
	C958.5,49.3,958.5,49.4,958.6,49.4z"/>
<path class="st4" d="M1030.9,51.9l-21.5,10.7l20.1-13.2c0.7-0.4,1.6-0.2,2,0.5c0.4,0.6,0.2,1.5-0.4,1.9
	C1031,51.8,1030.9,51.8,1030.9,51.9z"/>
<path class="st4" d="M1029.5,95.7l-19.8-13.1l21.3,10.6c0.7,0.4,1,1.2,0.6,1.9c-0.4,0.7-1.2,1-1.9,0.6
	C1029.6,95.8,1029.5,95.7,1029.5,95.7z"/>
<path class="st4" d="M937.1,88.5L976,77.4l-38,13.8c-0.7,0.3-1.6-0.1-1.8-0.9C935.9,89.6,936.3,88.8,937.1,88.5L937.1,88.5
	C937,88.5,937.1,88.5,937.1,88.5z"/>
<path class="st4" d="M956.7,125.6c9.6-12.2,18.9-24.7,28-37.3c-8.3,13.1-16.8,26.2-25.7,39c-0.5,0.7-1.3,0.8-2,0.4
	C956.4,127.2,956.2,126.3,956.7,125.6L956.7,125.6C956.7,125.6,956.7,125.6,956.7,125.6z"/>
<path class="st4" d="M938,53.9l38,13.8l-38.9-11.1c-0.8-0.2-1.2-1-1-1.8S937.1,53.6,938,53.9C937.9,53.9,938,53.9,938,53.9z"/>
<path class="st4" d="M959,17.8c8.9,12.8,17.4,25.9,25.7,39c-9.1-12.6-18.3-25.1-28-37.3c-0.5-0.6-0.4-1.5,0.2-2
	C957.6,17,958.5,17.1,959,17.8C959,17.8,959,17.8,959,17.8z"/>
<path class="st4" d="M1050.9,56.6L1012,67.7l38-13.8c0.7-0.3,1.6,0.1,1.8,0.9C1052.1,55.5,1051.8,56.3,1050.9,56.6L1050.9,56.6
	C1051,56.6,1051,56.6,1050.9,56.6z"/>
<path class="st4" d="M1031.4,19.4c-8.6,13.2-19.5,24.4-28,37.4c7.7-13.6,18-25.5,25.6-38.9c0.4-0.7,1.3-0.9,2-0.5
	C1031.6,17.8,1031.8,18.6,1031.4,19.4C1031.4,19.4,1031.4,19.4,1031.4,19.4z"/>
<path class="st4" d="M1050,91.2l-38-13.8l38.9,11.1c0.8,0.2,1.2,1,1,1.8C1051.7,91,1050.9,91.4,1050,91.2
	C1050.1,91.2,1050.1,91.2,1050,91.2z"/>
<path class="st4" d="M1028.9,127.2c-7.6-13.4-17.9-25.4-25.6-38.9c8.5,13,19.4,24.2,28,37.4c0.5,0.6,0.3,1.5-0.3,2s-1.5,0.3-2-0.3
	C1029,127.3,1029,127.3,1028.9,127.2C1029,127.2,1029,127.2,1028.9,127.2z"/>
<path class="st4" d="M977.4,117l12-26.5l-8.4,27.8c-0.3,1-1.4,1.6-2.4,1.3c-1-0.3-1.6-1.4-1.3-2.4
	C977.4,117.2,977.4,117.1,977.4,117z"/>
<path class="st4" d="M981,26.7l8.5,28.1l-12.1-26.8c-0.4-1,0-2.1,1-2.5s2.1,0,2.5,1C981,26.6,981,26.6,981,26.7z"/>
<path class="st4" d="M1010.6,28.1l-12,26.5l8.4-27.8c0.3-1,1.4-1.6,2.4-1.3c1,0.3,1.6,1.4,1.3,2.4
	C1010.7,27.9,1010.6,28,1010.6,28.1z"/>
<path class="st4" d="M938.2,116.3L965,99.6l-24.5,19.8c-0.8,0.6-2,0.5-2.7-0.3c-0.6-0.8-0.5-2,0.3-2.6
	C938.1,116.4,938.2,116.3,938.2,116.3z"/>
<path class="st4" d="M940.1,25.4L965,45.5l-27.1-17c-0.9-0.6-1.2-1.7-0.6-2.6c0.6-0.9,1.7-1.2,2.6-0.6l0,0
	C940,25.3,940,25.4,940.1,25.4z"/>
<path class="st4" d="M1049.6,28.9l-26.5,16.6l24.3-19.7c0.8-0.7,2-0.5,2.7,0.3c0.6,0.8,0.5,2-0.3,2.7
	C1049.7,28.9,1049.7,28.9,1049.6,28.9z"/>
<path class="st4" d="M1047.6,119.5l-24.6-19.9l26.8,16.8c0.9,0.6,1.2,1.7,0.6,2.6c-0.6,0.9-1.7,1.2-2.6,0.6l0,0
	C1047.8,119.6,1047.7,119.5,1047.6,119.5z"/>
<path class="st4" d="M978.7,141.9l9.8-30l-7,30.8c-0.1,0.8-0.9,1.3-1.7,1.1c-0.8-0.1-1.3-0.9-1.1-1.7c0,0,0-0.1,0-0.1
	C978.7,142,978.7,141.9,978.7,141.9z"/>
<path class="st4" d="M923.7,83.9l30.9-6.5l-30.2,9.3c-0.8,0.2-1.6-0.2-1.8-1s0.2-1.6,1-1.8l0,0C923.6,83.9,923.7,83.9,923.7,83.9z"
	/>
<path class="st4" d="M1009.3,3.2l-9.8,30l7-30.8c0.2-0.8,1-1.2,1.8-1c0.7,0.2,1.2,0.9,1,1.7C1009.4,3.1,1009.3,3.2,1009.3,3.2z"/>
<path class="st4" d="M1064.3,61.2l-30.9,6.5l30.2-9.3c0.8-0.2,1.6,0.2,1.8,1s-0.2,1.6-1,1.8C1064.4,61.2,1064.4,61.2,1064.3,61.2z"
	/>
<path class="st4" d="M1006.6,142.6l-7-30.8l9.8,30c0.3,0.8-0.1,1.6-0.9,1.8c-0.8,0.3-1.6-0.1-1.8-0.9c0,0,0,0,0,0
	C1006.6,142.7,1006.6,142.7,1006.6,142.6z"/>
<path class="st4" d="M1063.6,86.7l-30.2-9.3l30.9,6.5c0.8,0.1,1.3,0.9,1.2,1.7c-0.1,0.8-0.9,1.3-1.7,1.2c0,0,0,0-0.1,0
	C1063.7,86.7,1063.6,86.7,1063.6,86.7z"/>
<path class="st4" d="M981.5,2.4l7,30.8l-9.8-30c-0.2-0.8,0.2-1.6,0.9-1.8c0.8-0.2,1.6,0.2,1.8,0.9l0,0
	C981.4,2.4,981.4,2.4,981.5,2.4z"/>
<path class="st4" d="M924.4,58.4l30.2,9.3l-30.9-6.5c-0.8-0.2-1.3-0.9-1.1-1.7c0.2-0.8,0.9-1.3,1.7-1.1
	C924.3,58.4,924.4,58.4,924.4,58.4z"/>
<path class="st4" d="M1007,118.4l-8.5-28.1l12.1,26.8c0.4,1,0,2.1-1,2.5c-1,0.4-2.1,0-2.5-1l0,0C1007.1,118.5,1007,118.5,1007,118.4
	z"/>
<path class="st4" d="M926.8,71.1l48.8,1.4L926.8,74c-0.8,0-1.5-0.6-1.5-1.4S926,71.1,926.8,71.1C926.8,71.1,926.8,71.1,926.8,71.1z"
	/>
<path class="st4" d="M1061.2,74l-48.8-1.4l48.8-1.4c0.8,0,1.5,0.6,1.5,1.4S1062.1,74,1061.2,74L1061.2,74
	C1061.2,74,1061.2,74,1061.2,74z"/>
<path class="st4" d="M992.6,139.7l1.4-48.8l1.4,48.8c0,0.8-0.6,1.5-1.4,1.5C993.3,141.2,992.6,140.6,992.6,139.7
	C992.6,139.8,992.6,139.7,992.6,139.7L992.6,139.7z"/>
<path class="st4" d="M995.4,5.4L994,54.2l-1.4-48.8v0c0-0.8,0.6-1.5,1.4-1.5S995.4,4.5,995.4,5.4L995.4,5.4
	C995.4,5.3,995.4,5.3,995.4,5.4z"/>
<path class="st4" d="M985.7,59.5c1.1,1.5,2,3.1,2.7,4.8c-1.4-1.1-2.9-1.9-4.4-2.6c-0.8-0.3-1.2-1.2-0.9-1.9c0.3-0.8,1.2-1.2,1.9-0.9
	C985.2,59,985.5,59.2,985.7,59.5L985.7,59.5z"/>
<path class="st4" d="M1009.5,75.9c-1.4-1.1-2.9-1.9-4.5-2.6c1.8-0.3,3.7-0.3,5.5-0.1l0.1,0c0.8,0.1,1.4,0.9,1.3,1.7
	c-0.1,0.8-0.9,1.4-1.7,1.3C1010,76.2,1009.7,76.1,1009.5,75.9L1009.5,75.9z"/>
<path class="st4" d="M1002.2,88.1c-1.1-1.5-2-3.1-2.7-4.8c1.4,1.1,2.9,1.9,4.4,2.6c0.8,0.3,1.2,1.2,0.9,1.9
	c-0.3,0.8-1.2,1.2-1.9,0.9C1002.7,88.5,1002.5,88.4,1002.2,88.1L1002.2,88.1z"/>
<path class="st4" d="M977.5,72.3c1.8-0.1,3.6,0.1,5.4,0.5c-1.6,0.5-3.1,1.3-4.5,2.2c-0.7,0.5-1.6,0.3-2.1-0.4s-0.3-1.6,0.4-2.1
	C976.9,72.4,977.2,72.3,977.5,72.3L977.5,72.3z"/>
<path class="st4" d="M1003.6,61.3c-1.6,0.7-3,1.6-4.4,2.7c0.6-1.7,1.5-3.4,2.5-4.9l0-0.1c0.5-0.7,1.4-0.8,2.1-0.3
	c0.7,0.5,0.8,1.4,0.3,2.1C1004,61,1003.8,61.2,1003.6,61.3L1003.6,61.3z"/>
<path class="st4" d="M984.4,86.3c1.6-0.7,3-1.6,4.4-2.7c-0.6,1.7-1.5,3.4-2.5,4.9l0,0.1c-0.5,0.7-1.4,0.8-2.1,0.3
	c-0.7-0.5-0.8-1.4-0.3-2.1C983.9,86.6,984.1,86.4,984.4,86.3L984.4,86.3z"/>
<path class="st4" d="M1008.2,67.1c-1.7-0.1-3.4,0-5.1,0.4c1.4-1.3,2.9-2.3,4.5-3.2l0.1,0c0.7-0.4,1.6-0.1,2,0.7
	c0.4,0.7,0.1,1.6-0.7,2C1008.7,67.1,1008.5,67.2,1008.2,67.1L1008.2,67.1z"/>
<path class="st4" d="M979.8,80.4c1.7,0.1,3.4,0,5.1-0.4c-1.4,1.3-2.9,2.3-4.5,3.2l-0.1,0c-0.7,0.4-1.6,0.1-2-0.7s-0.1-1.6,0.7-2l0,0
	C979.3,80.5,979.5,80.4,979.8,80.4z"/>
<path class="st4" d="M980.2,65c1.6,0.8,3.1,1.8,4.5,3c-1.7-0.3-3.4-0.3-5-0.2c-0.8,0.1-1.6-0.5-1.7-1.3c-0.1-0.8,0.5-1.6,1.3-1.7
	C979.6,64.8,979.8,64.8,980.2,65L980.2,65z"/>
<path class="st4" d="M997,58.3c-1.1,1.4-2,2.8-2.7,4.4c-0.2-1.8-0.2-3.7,0-5.5l0-0.1c0.1-0.8,0.9-1.4,1.7-1.3s1.4,0.9,1.3,1.7
	C997.3,57.8,997.2,58.1,997,58.3z"/>
<path class="st4" d="M1007.9,82.6c-1.6-0.8-3.1-1.8-4.5-3c1.7,0.3,3.4,0.3,5,0.2c0.8-0.1,1.6,0.5,1.7,1.3c0.1,0.8-0.5,1.6-1.3,1.7
	C1008.5,82.8,1008.2,82.8,1007.9,82.6L1007.9,82.6z"/>
<path class="st4" d="M991,89.3c1.1-1.4,2-2.8,2.7-4.4c0.2,1.8,0.2,3.7,0,5.5l0,0.1c-0.1,0.8-0.9,1.4-1.7,1.3
	c-0.8-0.1-1.4-0.9-1.3-1.7C990.7,89.7,990.8,89.5,991,89.3L991,89.3z"/>
<path class="st4" d="M990.3,27l-3-13.7v0c-0.1-0.5,0.2-1,0.7-1.1c0.5-0.1,1,0.2,1.1,0.7l0,0c0,0,0,0.1,0,0.1L990.3,27z"/>
<path class="st4" d="M982.2,45l-14.1-21.1c-0.3-0.4-0.2-1,0.3-1.3c0.4-0.3,1-0.2,1.3,0.3c0,0,0,0,0,0c0,0,0,0,0,0.1L982.2,45z"/>
<path class="st4" d="M973.2,47.9l-9.9-8.7c-0.4-0.3-0.5-0.9-0.1-1.4s0.9-0.5,1.4-0.1c0,0,0,0,0,0c0,0,0.1,0.1,0.1,0.1L973.2,47.9z"
	/>
<path class="st4" d="M953.7,45.8l-16.3-6.3c-0.5-0.2-0.7-0.8-0.5-1.3c0.2-0.5,0.7-0.7,1.2-0.5c0,0,0.1,0,0.1,0L953.7,45.8z"/>
<path class="st4" d="M997.8,27l1.1-14c0.1-0.5,0.5-0.9,1.1-0.9c0.5,0.1,0.9,0.5,0.9,1c0,0,0,0.1,0,0.1v0L997.8,27z"/>
<path class="st4" d="M1005.8,45l12.5-22.1c0.3-0.5,0.9-0.6,1.3-0.3c0.4,0.3,0.6,0.8,0.4,1.3c0,0,0,0,0,0.1L1005.8,45z"/>
<path class="st4" d="M1014.9,47.9l8.6-10c0.3-0.4,0.9-0.5,1.4-0.1c0.4,0.3,0.5,0.9,0.1,1.4l0,0c0,0-0.1,0.1-0.1,0.1L1014.9,47.9z"/>
<path class="st4" d="M1034.4,45.8l15.5-8c0.5-0.3,1-0.1,1.3,0.4s0.1,1-0.4,1.3c0,0,0,0-0.1,0c0,0-0.1,0-0.1,0L1034.4,45.8z"/>
<path class="st4" d="M997.8,118.1l3,13.7v0c0.1,0.5-0.2,1-0.7,1.2c-0.5,0.1-1-0.2-1.2-0.7c0,0,0,0,0,0c0,0,0-0.1,0-0.1L997.8,118.1z
	"/>
<path class="st4" d="M1005.8,100.1l14.1,21.1c0.3,0.4,0.2,1-0.2,1.3c-0.4,0.3-1,0.2-1.3-0.2c0,0,0,0,0,0c0,0,0,0,0-0.1L1005.8,100.1
	z"/>
<path class="st4" d="M1014.9,97.2l9.9,8.7c0.4,0.3,0.4,1,0.1,1.4c-0.3,0.4-1,0.4-1.4,0.1l0,0c0,0-0.1-0.1-0.1-0.1L1014.9,97.2z"/>
<path class="st4" d="M1034.4,99.3l16.3,6.3c0.5,0.2,0.7,0.8,0.5,1.3c-0.2,0.5-0.7,0.7-1.2,0.5c0,0-0.1,0-0.1,0L1034.4,99.3z"/>
<path class="st4" d="M990.3,118.1l-1.1,14c0,0.5-0.5,0.9-1,0.9s-0.9-0.5-0.9-1c0,0,0,0,0,0c0,0,0-0.1,0-0.1v0L990.3,118.1z"/>
<path class="st4" d="M982.2,100.1l-12.5,22.1c-0.3,0.5-0.8,0.6-1.3,0.4s-0.6-0.8-0.4-1.3l0,0c0,0,0,0,0-0.1L982.2,100.1z"/>
<path class="st4" d="M973.2,97.2l-8.6,10c-0.3,0.4-0.9,0.5-1.4,0.1c-0.4-0.3-0.5-0.9-0.1-1.4c0,0,0.1-0.1,0.1-0.1L973.2,97.2z"/>
<path class="st4" d="M953.7,99.3l-15.5,8c-0.5,0.3-1,0.1-1.3-0.4c-0.3-0.5-0.1-1,0.4-1.3c0,0,0,0,0.1,0c0,0,0.1,0,0.1,0L953.7,99.3z
	"/>
<path class="st4" d="M948.4,76.3l-13.7,3h0c-0.5,0.1-1-0.2-1.1-0.7s0.2-1,0.7-1.1c0,0,0.1,0,0.1,0L948.4,76.3z"/>
<path class="st4" d="M948.4,68.8l-14-1.1c-0.5,0-0.9-0.5-0.9-1c0-0.5,0.5-0.9,1-0.9c0,0,0,0,0,0c0,0,0.1,0,0.1,0l0,0L948.4,68.8z"/>
<path class="st4" d="M1039.6,68.8l13.7-3h0c0.5-0.1,1,0.2,1.1,0.8c0.1,0.5-0.2,1-0.7,1.1c0,0-0.1,0-0.1,0L1039.6,68.8z"/>
<path class="st4" d="M1039.6,76.3l14,1.1c0.5,0.1,0.9,0.5,0.9,1.1c-0.1,0.5-0.5,0.9-1,0.9c0,0-0.1,0-0.1,0h0L1039.6,76.3z"/>
<path class="st4" d="M987.6,5.8l-3.4-19.6c-0.1-0.5,0.3-1,0.8-1.1c0,0,0,0,0,0c0.5-0.1,1,0.3,1.1,0.8c0,0,0,0,0,0c0,0,0,0.1,0,0.1
	L987.6,5.8z"/>
<path class="st4" d="M1000.4,5.8l1.5-19.9c0-0.5,0.5-0.9,1-0.9c0,0,0,0,0,0c0.5,0,0.9,0.5,0.9,1c0,0,0,0,0,0c0,0,0,0.1,0,0.1
	L1000.4,5.8z"/>
<path class="st4" d="M987.6,139.3l-1.5,19.9c0,0.5-0.5,0.9-1,0.9c-0.5,0-0.9-0.5-0.9-1c0,0,0,0,0-0.1c0,0,0-0.1,0-0.1L987.6,139.3z"
	/>
<path class="st4" d="M1000.4,139.3l3.4,19.6c0.1,0.5-0.3,1-0.8,1.1c-0.5,0.1-1-0.3-1.1-0.8c0,0,0-0.1,0-0.1L1000.4,139.3z"/>
<path class="st4" d="M962.4,13.4L951.7-3.5c-0.3-0.4-0.1-1,0.3-1.3c0,0,0,0,0,0c0.4-0.3,1-0.1,1.3,0.3c0,0,0,0,0,0c0,0,0,0.1,0,0.1
	L962.4,13.4z"/>
<path class="st4" d="M974.2,8.4L968-10.5c-0.2-0.5,0.1-1,0.6-1.2c0,0,0,0,0,0c0.5-0.2,1,0.1,1.2,0.6c0,0,0,0.1,0,0.1L974.2,8.4z"/>
<path class="st4" d="M1013.8,136.6l6.3,18.9c0.2,0.5-0.1,1-0.6,1.2c-0.5,0.1-1-0.1-1.2-0.6c0,0,0-0.1,0-0.1L1013.8,136.6z"/>
<path class="st4" d="M1025.6,131.7l10.7,16.8c0.3,0.4,0.2,1-0.3,1.3c-0.4,0.3-1,0.2-1.3-0.3c0,0,0-0.1,0-0.1L1025.6,131.7z"/>
<path class="st4" d="M941.8,30.5l-16.4-11.3c-0.4-0.3-0.5-0.9-0.2-1.3c0.3-0.4,0.9-0.5,1.3-0.2c0,0,0,0,0.1,0.1L941.8,30.5z"/>
<path class="st4" d="M950.7,21.3L937.5,6.4c-0.4-0.4-0.3-1,0.1-1.4s1-0.3,1.4,0.1c0,0,0,0,0,0c0,0,0,0,0.1,0.1L950.7,21.3z"/>
<path class="st4" d="M1037.3,123.8l13.2,14.9c0.3,0.4,0.3,1-0.1,1.4s-1,0.3-1.4-0.1c0,0,0,0-0.1-0.1L1037.3,123.8z"/>
<path class="st4" d="M1046.3,114.6l16.4,11.3c0.4,0.3,0.5,0.9,0.2,1.3s-0.9,0.5-1.3,0.2c0,0-0.1,0-0.1-0.1L1046.3,114.6z"/>
<path class="st4" d="M929.6,53.6l-19.5-4.2c-0.5-0.1-0.8-0.6-0.7-1.1s0.6-0.8,1.1-0.7c0,0,0.1,0,0.1,0L929.6,53.6z"/>
<path class="st4" d="M934.4,41.7L916.5,33c-0.5-0.2-0.7-0.8-0.4-1.3c0.2-0.5,0.8-0.7,1.3-0.4c0,0,0.1,0,0.1,0L934.4,41.7z"/>
<path class="st4" d="M1053.6,103.3l17.9,8.8c0.5,0.2,0.7,0.8,0.5,1.3c-0.2,0.5-0.8,0.7-1.3,0.5c0,0,0,0,0,0c0,0-0.1,0-0.1,0
	L1053.6,103.3z"/>
<path class="st4" d="M1058.4,91.5l19.5,4.2c0.5,0.1,0.8,0.6,0.7,1.1c-0.1,0.5-0.6,0.8-1.1,0.7c0,0-0.1,0-0.1,0L1058.4,91.5z"/>
<path class="st4" d="M927.3,79.5l-19.6,3.6c-0.5,0.1-1-0.3-1.1-0.8s0.3-1,0.8-1.1c0,0,0.1,0,0.1,0L927.3,79.5z"/>
<path class="st4" d="M927.2,66.7l-19.9-1.3c-0.5,0-0.9-0.5-0.9-1c0-0.5,0.5-0.9,1-0.9c0,0,0.1,0,0.1,0L927.2,66.7z"/>
<path class="st4" d="M1060.8,78.4l19.9,1.3c0.5,0,0.9,0.5,0.9,1s-0.5,0.9-1,0.9l0,0c0,0-0.1,0-0.1,0L1060.8,78.4z"/>
<path class="st4" d="M1060.7,65.6l19.6-3.6c0.5-0.1,1,0.2,1.1,0.8c0.1,0.5-0.2,1-0.8,1.1c0,0,0,0,0,0c0,0-0.1,0-0.1,0L1060.7,65.6z"
	/>
<path class="st4" d="M935,104.5l-16.8,10.8c-0.4,0.3-1,0.2-1.3-0.3c-0.3-0.4-0.2-1,0.3-1.3c0,0,0,0,0,0c0,0,0.1,0,0.1,0L935,104.5z"
	/>
<path class="st4" d="M930,92.7L911.1,99c-0.5,0.2-1-0.1-1.2-0.6c-0.2-0.5,0.1-1,0.6-1.2c0,0,0.1,0,0.1,0L930,92.7z"/>
<path class="st4" d="M1058,52.4l18.9-6.4c0.5-0.2,1,0.1,1.2,0.6c0.2,0.5-0.1,1-0.6,1.2c0,0-0.1,0-0.1,0L1058,52.4z"/>
<path class="st4" d="M1053,40.6l16.8-10.8c0.4-0.3,1-0.2,1.3,0.3c0.3,0.4,0.2,1-0.3,1.3c0,0-0.1,0-0.1,0L1053,40.6z"/>
<path class="st4" d="M951.8,124.7L940.4,141c-0.3,0.4-0.9,0.5-1.3,0.2c-0.4-0.3-0.5-0.9-0.2-1.3c0,0,0,0,0.1-0.1L951.8,124.7z"/>
<path class="st4" d="M942.6,115.7l-15,13.1c-0.4,0.3-1,0.3-1.4-0.1s-0.3-1,0.1-1.4c0,0,0,0,0.1-0.1L942.6,115.7z"/>
<path class="st4" d="M1045.4,29.4l15-13.1c0.4-0.3,1-0.3,1.4,0.1c0.3,0.4,0.3,1-0.1,1.4l0,0c0,0,0,0-0.1,0.1L1045.4,29.4z"/>
<path class="st4" d="M1036.3,20.4l11.3-16.4c0.3-0.4,0.9-0.5,1.3-0.2s0.5,0.9,0.2,1.3l0,0c0,0,0,0.1-0.1,0.1L1036.3,20.4z"/>
<path class="st4" d="M975.5,137l-4,19.5c-0.1,0.5-0.6,0.9-1.1,0.8c-0.5-0.1-0.9-0.6-0.8-1.1c0,0,0,0,0,0c0,0,0-0.1,0-0.1L975.5,137z
	"/>
<path class="st4" d="M963.6,132.3l-8.7,17.9c-0.2,0.5-0.8,0.7-1.3,0.4c-0.5-0.2-0.7-0.8-0.4-1.3c0,0,0-0.1,0-0.1L963.6,132.3z"/>
<path class="st4" d="M1024.4,12.7l8.7-17.9c0.2-0.5,0.8-0.7,1.3-0.4c0.5,0.2,0.7,0.8,0.4,1.3c0,0,0,0.1,0,0.1L1024.4,12.7z"/>
<path class="st4" d="M1012.5,8.1l4-19.5c0.1-0.5,0.6-0.9,1.1-0.7c0.5,0.1,0.9,0.6,0.7,1.1c0,0,0,0.1,0,0.1L1012.5,8.1z"/>
<path class="st4" d="M554.8,0.5l0.6,45.2l-6-44.8c-0.2-1.5,0.8-2.8,2.3-3c1.5-0.2,2.8,0.8,3,2.3C554.8,0.3,554.8,0.4,554.8,0.5z"/>
<path class="st4" d="M627.9,38.7l-38.8,23.3l35.7-27.7c1.2-0.9,2.9-0.7,3.8,0.5c0.9,1.2,0.7,2.9-0.5,3.8
	C628.1,38.6,628,38.6,627.9,38.7z"/>
<path class="st4" d="M564.7,159.2l-0.6-45.2l6,44.8c0.2,1.5-0.8,2.8-2.3,3s-2.8-0.8-3-2.3C564.7,159.4,564.7,159.3,564.7,159.2z"/>
<path class="st4" d="M491.6,121l38.3-23l-35.3,27.4c-1.2,0.9-2.9,0.7-3.8-0.5c-0.9-1.2-0.7-2.8,0.5-3.8
	C491.4,121.1,491.5,121.1,491.6,121z"/>
<path class="st4" d="M579.2-29.6l-12.9,75l7.5-75.7c0.1-1.5,1.5-2.6,3-2.4c0,0,0,0,0,0c1.5,0.1,2.6,1.5,2.4,3c0,0,0,0,0,0
	C579.2-29.7,579.2-29.7,579.2-29.6z"/>
<path class="st4" d="M500.3-26.7c12.8,26.2,26.5,52.1,40.4,77.9C525.3,26.4,510,1.4,495.5-24.2c-0.7-1.3-0.3-2.9,1-3.7c0,0,0,0,0,0
	c1.3-0.7,2.9-0.3,3.7,1c0,0,0,0,0,0C500.3-26.8,500.3-26.7,500.3-26.7z"/>
<path class="st4" d="M637.1,0.1l-54.5,53.1l50.6-56.8c1-1.1,2.7-1.2,3.8-0.2c0,0,0,0,0,0c1.1,1,1.2,2.7,0.2,3.8c0,0,0,0,0,0
	C637.2,0,637.1,0.1,637.1,0.1z"/>
<path class="st4" d="M681.1,65.2c-29,4.6-58,8.3-87.1,11.6c28.8-5.1,57.6-10.6,86.1-16.9c1.5-0.3,2.9,0.6,3.2,2
	c0.3,1.5-0.6,2.9-2,3.2l0,0C681.2,65.2,681.1,65.2,681.1,65.2z"/>
<path class="st4" d="M540.3,189.3l12.9-75l-7.5,75.7c-0.1,1.5-1.5,2.6-3,2.4c-1.5-0.1-2.6-1.5-2.4-3l0,0
	C540.3,189.4,540.3,189.4,540.3,189.3z"/>
<path class="st4" d="M619.3,186.6c-15.3-25.4-25.4-53-40.6-78.1c16.7,24.1,28.6,51.3,45.1,75.1c0.8,1.2,0.5,2.9-0.7,3.8
	s-2.9,0.5-3.8-0.7C619.4,186.7,619.3,186.6,619.3,186.6z"/>
<path class="st4" d="M482.4,159.6l54.5-53.1l-50.6,56.8c-1,1.1-2.7,1.2-3.8,0.2c-1.1-1-1.2-2.7-0.2-3.8
	C482.3,159.7,482.4,159.6,482.4,159.6z"/>
<path class="st4" d="M438.7,94.5c28.9-1.9,57.6-9.6,86.9-11.6c-29.1,3.8-56.9,13.2-86.3,17c-1.5,0.2-2.8-0.8-3-2.3
	c-0.2-1.5,0.8-2.8,2.3-3l0,0C438.5,94.5,438.6,94.5,438.7,94.5z"/>
<path class="st4" d="M497.9,15.4L533,57.3l-40.3-36.9c-1.5-1.3-1.6-3.6-0.2-5.1s3.6-1.6,5.1-0.2C497.7,15.2,497.8,15.3,497.9,15.4z"
	/>
<path class="st4" d="M648,95.2l-54.5-8.6l55.2,1.4c2,0,3.6,1.7,3.5,3.7c0,2-1.7,3.6-3.7,3.5l0,0C648.3,95.3,648.2,95.2,648,95.2z"/>
<path class="st4" d="M621.6,144.2l-35.1-41.9l40.3,36.9c1.5,1.3,1.6,3.6,0.2,5.1c-1.3,1.5-3.6,1.6-5.1,0.2
	C621.8,144.5,621.7,144.4,621.6,144.2z"/>
<path class="st4" d="M531.1-50.4l6.5,58.9L524-49.2c-0.5-1.9,0.7-3.9,2.7-4.3c0,0,0,0,0,0c1.9-0.5,3.9,0.7,4.3,2.7c0,0,0,0,0,0
	C531.1-50.7,531.1-50.5,531.1-50.4z"/>
<path class="st4" d="M683.7,26.9l-54.4,25.8l50.9-32.1c1.7-1.1,3.9-0.7,5,1s0.7,3.9-1,5c-0.1,0-0.1,0.1-0.2,0.1
	C683.9,26.7,683.8,26.8,683.7,26.9z"/>
<path class="st4" d="M588.3,209.6l-6.4-58.5l13.5,57.3c0.5,1.9-0.7,3.9-2.7,4.3s-3.9-0.7-4.3-2.7l0,0
	C588.3,209.9,588.3,209.8,588.3,209.6z"/>
<path class="st4" d="M436.5,132.5l53.8-25.4l-50.3,31.7c-1.7,1.1-3.9,0.6-5-1.1c-1.1-1.7-0.6-3.9,1.1-5c0,0,0,0,0,0
	C436.2,132.6,436.3,132.5,436.5,132.5z"/>
<path class="st4" d="M454.7-2.7l42.9,41.1l-46.5-37c-1.2-0.9-1.4-2.6-0.4-3.8c0,0,0,0,0,0c0.9-1.2,2.6-1.4,3.8-0.4c0,0,0,0,0,0
	C454.6-2.8,454.7-2.8,454.7-2.7z"/>
<path class="st4" d="M597.9-48.6L583.7,9.1l8.9-58.8c0.2-1.5,1.6-2.5,3.1-2.3c0,0,0,0,0,0c1.5,0.2,2.5,1.6,2.3,3.1c0,0,0,0,0,0
	C597.9-48.7,597.9-48.7,597.9-48.6z"/>
<path class="st4" d="M664.8,162.4l-42.9-41.1l46.5,37c1.2,0.9,1.4,2.6,0.4,3.8c-0.9,1.2-2.6,1.4-3.8,0.4
	C664.9,162.5,664.8,162.4,664.8,162.4z"/>
<path class="st4" d="M521.6,208.3l14.2-57.7l-8.9,58.8c-0.2,1.5-1.6,2.5-3.1,2.3c-1.5-0.2-2.5-1.6-2.3-3.1l0,0
	C521.6,208.4,521.6,208.3,521.6,208.3z"/>
<path class="st4" d="M430.7,43.9l58,13.2l-58.9-7.9c-1.5-0.2-2.5-1.6-2.3-3c0.2-1.5,1.6-2.5,3-2.3C430.5,43.9,430.6,43.9,430.7,43.9
	z"/>
<path class="st4" d="M479,186.3l40.4-43.6l-36.2,47.1c-0.9,1.2-2.6,1.4-3.8,0.5c-1.2-0.9-1.4-2.6-0.5-3.8l0,0
	C478.9,186.4,479,186.3,479,186.3z"/>
<path class="st4" d="M688.8,115.8l-58-13.2l58.9,7.9c1.5,0.2,2.5,1.6,2.3,3s-1.6,2.5-3,2.3l0,0C689,115.8,688.9,115.8,688.8,115.8z"
	/>
<path class="st4" d="M640.5-26.6l-40.4,43.6l36.2-47.1c0.9-1.2,2.6-1.4,3.8-0.5c0,0,0,0,0,0c1.2,0.9,1.4,2.6,0.5,3.8c0,0,0,0,0,0
	C640.6-26.7,640.5-26.6,640.5-26.6z"/>
<path class="st4" d="M471.5,64.5L526,73l-55.2-1.4c-2-0.1-3.5-1.8-3.5-3.7c0.1-2,1.7-3.5,3.7-3.5C471.2,64.4,471.3,64.4,471.5,64.5z
	"/>
<path class="st4" d="M617-32.8l-42.3,81.5l37.4-83.9c0.6-1.4,2.2-2,3.6-1.4c0,0,0,0,0,0c1.4,0.6,2,2.2,1.4,3.6c0,0,0,0,0,0
	C617-32.9,617-32.9,617-32.8z"/>
<path class="st4" d="M502.5,192.5l42.3-81.5l-37.4,83.9c-0.6,1.4-2.2,2-3.6,1.4c-1.4-0.6-2-2.2-1.4-3.6
	C502.5,192.6,502.5,192.6,502.5,192.5z"/>
<path class="st4" d="M447.1,22.6l81.5,42.3l-83.9-37.4c-1.4-0.6-2-2.2-1.4-3.6c0.6-1.4,2.2-2,3.6-1.4C447,22.5,447,22.6,447.1,22.6
	L447.1,22.6z"/>
<path class="st4" d="M672.4,137.1l-81.5-42.3l83.9,37.4h0c1.4,0.6,2,2.2,1.4,3.6c-0.6,1.4-2.2,2-3.6,1.4l0,0
	C672.5,137.1,672.5,137.1,672.4,137.1z"/>
<path class="st4" d="M588.7,76.4c-3.4,0.7-6.9,0.9-10.3,0.6c2.9-1.4,5.6-3.3,8-5.4c1.1-1.1,2.9-1,4,0.1s1,2.9-0.1,4
	c-0.4,0.4-0.8,0.6-1.4,0.7L588.7,76.4z"/>
<path class="st4" d="M541.4,103.4c2.9-1.5,5.6-3.3,8-5.5c-1,3.3-2.4,6.5-4.3,9.5l-0.1,0.1c-0.8,1.3-2.6,1.7-3.9,0.8
	s-1.7-2.6-0.8-3.9C540.5,104,540.9,103.6,541.4,103.4L541.4,103.4z"/>
<path class="st4" d="M526.7,81.1c3.4-0.7,6.9-0.9,10.3-0.6c-2.9,1.4-5.6,3.3-8,5.4c-1.1,1.1-2.9,1-4-0.1s-1-2.9,0.1-4
	c0.4-0.4,0.8-0.6,1.4-0.7L526.7,81.1z"/>
<path class="st4" d="M573.7,52.2c-1.4,3.1-3.2,6-5.3,8.7c0.4-3.1,0.4-6.3,0-9.4c-0.3-1.5,0.8-3,2.3-3.2c1.5-0.3,3,0.8,3.2,2.3
	c0.1,0.5,0,1.1-0.2,1.6L573.7,52.2z"/>
<path class="st4" d="M571.1,105.2c0.1-3.2-0.2-6.5-1-9.6c2.4,2.5,4.5,5.3,6.2,8.3l0.1,0.1c0.7,1.4,0.2,3.1-1.1,3.8s-3.1,0.2-3.8-1.1
	l0,0C571.2,106.3,571.1,105.7,571.1,105.2z"/>
<path class="st4" d="M544.3,52.3c-0.1,3.2,0.2,6.5,1,9.6c-2.4-2.5-4.5-5.3-6.2-8.3l-0.1-0.1c-0.7-1.4-0.2-3.1,1.1-3.8
	c1.4-0.7,3.1-0.2,3.8,1.1C544.2,51.2,544.3,51.7,544.3,52.3z"/>
<path class="st4" d="M557.3,108.3c1.6-2.8,2.8-5.8,3.6-9c1,3.3,1.6,6.8,1.7,10.2v0.1c0,1.6-1.2,2.8-2.8,2.9c-1.6,0-2.8-1.2-2.9-2.8
	C556.9,109.3,557.1,108.7,557.3,108.3L557.3,108.3z"/>
<path class="st4" d="M557.9,49.4c-1.6,2.8-2.8,5.8-3.6,9c-1-3.3-1.6-6.8-1.7-10.2V48c0-1.6,1.2-2.8,2.8-2.9c1.6,0,2.8,1.2,2.9,2.8
	C558.3,48.4,558.2,48.9,557.9,49.4L557.9,49.4z"/>
<path class="st4" d="M583.9,62.5c-2.7,2.1-5.6,3.9-8.8,5.2c1.8-2.6,3.3-5.4,4.4-8.4c0.5-1.5,2.1-2.3,3.6-1.8
	c1.5,0.5,2.3,2.1,1.8,3.6c-0.2,0.5-0.5,1-0.9,1.3L583.9,62.5z"/>
<path class="st4" d="M581.4,96.5c-1.4-2.9-3.2-5.7-5.4-8.1c3.3,1.1,6.5,2.6,9.4,4.5l0.1,0.1c1.3,0.9,1.6,2.6,0.8,3.9
	c-0.9,1.3-2.6,1.6-3.9,0.8C582,97.4,581.7,97,581.4,96.5z"/>
<path class="st4" d="M531.4,95.1c2.7-2.1,5.6-3.9,8.8-5.2c-1.8,2.6-3.3,5.4-4.4,8.4c-0.5,1.5-2.1,2.3-3.6,1.8
	c-1.5-0.5-2.3-2.1-1.8-3.6c0.2-0.5,0.5-0.9,0.9-1.3L531.4,95.1z"/>
<path class="st4" d="M533.8,61.1c1.4,2.9,3.2,5.7,5.4,8.1c-3.3-1.1-6.5-2.6-9.4-4.5l-0.1-0.1c-1.3-0.9-1.6-2.6-0.8-3.9
	c0.9-1.3,2.6-1.6,3.9-0.8C533.3,60.2,533.6,60.6,533.8,61.1L533.8,61.1z"/>
<path class="st4" d="M640.1,110.7l25.7,6l0,0c1,0.2,1.6,1.2,1.3,2.2c-0.2,0.9-1.2,1.5-2.1,1.3c-0.1,0-0.2,0-0.2-0.1L640.1,110.7z"/>
<path class="st4" d="M616.1,82.3l47.3-6.7c1-0.1,1.9,0.5,2,1.5s-0.5,1.9-1.5,2c0,0-0.1,0-0.1,0L616.1,82.3z"/>
<path class="st4" d="M618.5,64.6l22.8-9.7c0.9-0.4,2,0,2.4,1c0.4,0.9,0,2-1,2.4c-0.1,0-0.2,0.1-0.2,0.1L618.5,64.6z"/>
<path class="st4" d="M638.1,33.3L662,10.8c0.7-0.7,1.9-0.6,2.5,0.1s0.6,1.9-0.1,2.5l0,0c0,0-0.1,0.1-0.2,0.1L638.1,33.3z"/>
<path class="st4" d="M633.9,123.4l22.8,13.4c0.9,0.5,1.2,1.6,0.7,2.5s-1.6,1.2-2.5,0.7c0,0,0,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.1l0,0
	L633.9,123.4z"/>
<path class="st4" d="M596.8,122.3l27.3,39.2c0.6,0.8,0.4,1.9-0.5,2.5s-1.9,0.4-2.5-0.5c0,0-0.1-0.1-0.1-0.1L596.8,122.3z"/>
<path class="st4" d="M584.5,135.2l10,22.7c0.4,0.9-0.1,2-1,2.4c-0.9,0.4-1.9,0-2.3-0.9c0-0.1-0.1-0.2-0.1-0.2L584.5,135.2z"/>
<path class="st4" d="M572.2,170.1l0.9,32.8c0,1-0.8,1.8-1.8,1.8c-1,0-1.8-0.8-1.8-1.7l0,0c0-0.1,0-0.1,0-0.2L572.2,170.1z"/>
<path class="st4" d="M479.4,49l-25.7-6l0,0c-1-0.2-1.6-1.2-1.3-2.2s1.2-1.6,2.2-1.3c0.1,0,0.2,0,0.2,0.1L479.4,49z"/>
<path class="st4" d="M503.4,77.3l-47.3,6.7c-1,0.1-1.9-0.5-2-1.5c-0.1-1,0.5-1.9,1.5-2c0,0,0.1,0,0.1,0L503.4,77.3z"/>
<path class="st4" d="M501,95.1l-22.8,9.7c-0.9,0.4-2,0-2.4-1s0-2,1-2.4l0,0c0.1,0,0.2-0.1,0.2-0.1L501,95.1z"/>
<path class="st4" d="M481.4,126.4l-23.9,22.5c-0.8,0.6-1.9,0.5-2.5-0.2c-0.6-0.8-0.5-1.9,0.2-2.5L481.4,126.4z"/>
<path class="st4" d="M485.6,36.3l-22.8-13.4c-0.8-0.5-1.1-1.6-0.6-2.5c0.5-0.8,1.6-1.1,2.4-0.6c0.1,0,0.1,0.1,0.2,0.1l0,0
	L485.6,36.3z"/>
<path class="st4" d="M522.7,37.4L495.4-1.8c-0.6-0.8-0.4-1.9,0.4-2.5c0,0,0,0,0,0c0.8-0.6,1.9-0.4,2.5,0.4c0,0,0,0,0,0
	c0,0,0.1,0.1,0.1,0.1L522.7,37.4z"/>
<path class="st4" d="M535,24.4L525,1.8c-0.4-0.9,0-2,0.9-2.4c0.9-0.4,2,0,2.4,0.9c0,0,0,0,0,0c0,0.1,0.1,0.2,0.1,0.2L535,24.4z"/>
<path class="st4" d="M547.3-10.4l-0.9-32.8c0-1,0.8-1.8,1.7-1.9c0,0,0,0,0,0c1,0,1.8,0.7,1.9,1.7c0,0,0,0,0,0c0,0.1,0,0.1,0,0.2
	L547.3-10.4z"/>
<path class="st4" d="M590.6-0.5l6-25.7l0,0c0.2-1,1.2-1.6,2.2-1.3c1,0.2,1.6,1.2,1.3,2.2c0,0,0,0,0,0c0,0.1,0,0.2-0.1,0.2L590.6-0.5
	z"/>
<path class="st4" d="M603.3,5.7l13.4-22.8c0.5-0.9,1.6-1.1,2.5-0.6c0,0,0,0,0,0c0.9,0.5,1.1,1.6,0.6,2.5c0,0,0,0,0,0
	c0,0.1-0.1,0.1-0.1,0.2l0,0L603.3,5.7z"/>
<path class="st4" d="M528.9,160.1l-6,25.7l0,0c-0.2,1-1.2,1.6-2.1,1.4c-1-0.2-1.6-1.2-1.4-2.1c0,0,0,0,0-0.1c0-0.1,0-0.2,0.1-0.2
	L528.9,160.1z"/>
<path class="st4" d="M516.2,154l-13.4,22.8c-0.5,0.9-1.6,1.1-2.5,0.6c-0.9-0.5-1.1-1.6-0.6-2.5c0-0.1,0.1-0.1,0.1-0.2l0,0L516.2,154
	z"/>
<path class="st4" d="M678.2,123.5l36,10.3c1,0.3,1.5,1.3,1.2,2.2c-0.3,1-1.3,1.5-2.2,1.2c-0.1,0-0.1,0-0.2-0.1L678.2,123.5z"/>
<path class="st4" d="M667.7,145.2l32.5,18.7c0.9,0.5,1.2,1.6,0.7,2.5c-0.5,0.9-1.6,1.2-2.5,0.7l0,0c0,0-0.1-0.1-0.1-0.1L667.7,145.2
	z"/>
<path class="st4" d="M451.8,14.5L419.3-4.2c-0.9-0.5-1.2-1.6-0.7-2.5c0,0,0,0,0,0c0.5-0.9,1.6-1.2,2.5-0.7c0,0,0,0,0,0
	c0,0,0.1,0.1,0.1,0.1L451.8,14.5z"/>
<path class="st4" d="M441.3,36.2l-36-10.3c-1-0.3-1.5-1.3-1.2-2.2c0.3-1,1.3-1.5,2.2-1.2c0.1,0,0.1,0,0.2,0.1L441.3,36.2z"/>
<path class="st4" d="M685.8,74.6l37.2-4.4c1-0.1,1.9,0.6,2,1.6c0.1,1-0.6,1.9-1.6,2c-0.1,0-0.1,0-0.2,0L685.8,74.6z"/>
<path class="st4" d="M684.5,98.6l37.2,4.8c1,0.1,1.7,1,1.6,2c-0.1,1-1,1.7-2,1.6l0,0c-0.1,0-0.1,0-0.2,0L684.5,98.6z"/>
<path class="st4" d="M435,61l-37.2-4.8c-1-0.1-1.7-1-1.6-2c0.1-1,1-1.7,2-1.6c0.1,0,0.1,0,0.2,0L435,61z"/>
<path class="st4" d="M433.7,85.1l-37.2,4.4c-1,0.1-1.9-0.6-2-1.6c-0.1-1,0.6-1.9,1.6-2c0.1,0,0.1,0,0.2,0L433.7,85.1z"/>
<path class="st4" d="M673.7,25.6L706.3,7c0.9-0.5,2-0.2,2.5,0.7s0.2,2-0.7,2.5c0,0-0.1,0.1-0.2,0.1L673.7,25.6z"/>
<path class="st4" d="M681.9,48.3L718,38.1c1-0.3,2,0.3,2.2,1.2c0.3,1-0.3,2-1.2,2.2l0,0c-0.1,0-0.1,0-0.2,0L681.9,48.3z"/>
<path class="st4" d="M437.6,111.4l-36.1,10.1c-1,0.3-2-0.3-2.2-1.2c-0.3-1,0.3-2,1.2-2.2l0,0c0.1,0,0.1,0,0.2,0L437.6,111.4z"/>
<path class="st4" d="M445.8,134l-32.5,18.6c-0.9,0.5-2,0.2-2.5-0.7s-0.2-2,0.7-2.5l0,0c0,0,0.1-0.1,0.2-0.1L445.8,134z"/>
<path class="st4" d="M644.3-13.8l23-29.6c0.6-0.8,1.7-0.9,2.5-0.3c0,0,0,0,0,0c0.8,0.6,0.9,1.7,0.3,2.5c0,0,0,0,0,0
	c0,0-0.1,0.1-0.1,0.1L644.3-13.8z"/>
<path class="st4" d="M660.6,4l29.5-23.2c0.8-0.6,1.9-0.5,2.5,0.3c0,0,0,0,0,0c0.6,0.8,0.5,1.9-0.3,2.5c0,0,0,0,0,0
	c0,0-0.1,0.1-0.1,0.1L660.6,4z"/>
<path class="st4" d="M458.9,155.7l-29.5,23.2c-0.8,0.6-1.9,0.5-2.5-0.3c-0.6-0.8-0.5-1.9,0.3-2.5c0,0,0.1-0.1,0.1-0.1L458.9,155.7z"
	/>
<path class="st4" d="M475.2,173.5l-23,29.6c-0.6,0.8-1.7,0.9-2.5,0.3c-0.8-0.6-0.9-1.7-0.3-2.5c0,0,0.1-0.1,0.1-0.1L475.2,173.5z"/>
<path class="st4" d="M602.4-39l10-36.1c0.3-1,1.3-1.5,2.2-1.3c0,0,0,0,0,0c1,0.3,1.5,1.3,1.3,2.2c0,0,0,0,0,0c0,0.1,0,0.1-0.1,0.2
	L602.4-39z"/>
<path class="st4" d="M624.1-28.7l18.5-32.6c0.5-0.9,1.6-1.2,2.5-0.7c0,0,0,0,0,0c0.9,0.5,1.2,1.6,0.7,2.5c0,0,0,0,0,0
	c0,0-0.1,0.1-0.1,0.1L624.1-28.7z"/>
<path class="st4" d="M495.4,188.4L476.9,221c-0.5,0.9-1.6,1.2-2.5,0.7c-0.9-0.5-1.2-1.6-0.7-2.5c0-0.1,0.1-0.1,0.1-0.1L495.4,188.4z
	"/>
<path class="st4" d="M517.1,198.6l-10,36.1c-0.3,1-1.3,1.5-2.2,1.3c-1-0.3-1.5-1.3-1.3-2.2c0-0.1,0-0.1,0.1-0.2L517.1,198.6z"/>
<path class="st4" d="M553.8-46.2l-4.6-37.2c-0.1-1,0.6-1.9,1.6-2c0,0,0,0,0,0c1-0.1,1.9,0.6,2,1.6c0,0,0,0,0,0c0,0.1,0,0.1,0,0.2
	L553.8-46.2z"/>
<path class="st4" d="M577.9-45.1l4.6-37.2c0.1-1,1-1.7,2-1.6c0,0,0,0,0,0c1,0.1,1.7,1,1.6,2c0,0,0,0,0,0c0,0.1,0,0.1,0,0.2
	L577.9-45.1z"/>
<path class="st4" d="M541.6,204.7l-4.6,37.2c-0.1,1-1,1.7-2,1.6s-1.7-1-1.6-2l0,0c0-0.1,0-0.1,0-0.2L541.6,204.7z"/>
<path class="st4" d="M565.7,205.9l4.6,37.2c0.1,1-0.6,1.9-1.6,2c-1,0.1-1.9-0.6-2-1.6c0-0.1,0-0.1,0-0.2L565.7,205.9z"/>
<path class="st4" d="M505.9-34.3l-18.5-32.6c-0.5-0.9-0.2-2,0.7-2.5c0,0,0,0,0,0c0.9-0.5,2-0.2,2.5,0.7c0,0,0,0,0,0
	c0,0.1,0.1,0.1,0.1,0.2L505.9-34.3z"/>
<path class="st4" d="M528.6-42.4l-10-36.1c-0.3-1,0.3-2,1.3-2.2c0,0,0,0,0,0c1-0.3,2,0.3,2.2,1.2c0,0,0,0,0,0c0,0.1,0,0.1,0,0.2
	L528.6-42.4z"/>
<path class="st4" d="M590.9,202.1l10,36.1c0.3,1-0.3,2-1.3,2.2c-1,0.3-2-0.3-2.2-1.3c0-0.1,0-0.1,0-0.2L590.9,202.1z"/>
<path class="st4" d="M613.6,194l18.5,32.6c0.5,0.9,0.2,2-0.7,2.5c-0.9,0.5-2,0.2-2.5-0.7c0,0-0.1-0.1-0.1-0.2L613.6,194z"/>
<path class="st4" d="M465.6-4.1l-29.8-22.8c-0.8-0.6-0.9-1.7-0.3-2.5c0,0,0,0,0,0c0.6-0.8,1.7-0.9,2.5-0.3c0,0,0,0,0,0
	c0,0,0.1,0.1,0.1,0.1L465.6-4.1z"/>
<path class="st4" d="M483.2-20.5l-23.3-29.3c-0.6-0.8-0.5-1.9,0.3-2.5c0,0,0,0,0,0c0.8-0.6,1.9-0.5,2.5,0.3c0,0,0,0,0,0
	c0,0,0.1,0.1,0.1,0.1L483.2-20.5z"/>
<path class="st4" d="M636.3,180.2l23.3,29.3c0.6,0.8,0.5,1.9-0.3,2.5c-0.8,0.6-1.9,0.5-2.5-0.3c0,0-0.1-0.1-0.1-0.1L636.3,180.2z"/>
<path class="st4" d="M654,163.8l29.8,22.8c0.8,0.6,0.9,1.7,0.3,2.5c-0.6,0.8-1.7,0.9-2.5,0.3c0,0-0.1-0.1-0.1-0.1L654,163.8z"/>
<path class="st4" d="M1094.1,363l1.1,52.1l-6.5-51.8c-0.3-1.5,0.7-2.9,2.2-3.1c1.5-0.3,2.9,0.7,3.1,2.2c0,0.1,0,0.2,0,0.3
	C1094.1,362.8,1094.1,362.9,1094.1,363z"/>
<path class="st4" d="M1162.3,398.8l-44.5,27.2l41.5-31.7c1.1-1,2.8-0.8,3.8,0.3c1,1.1,0.8,2.8-0.3,3.8c-0.1,0.1-0.1,0.1-0.2,0.2
	C1162.4,398.7,1162.4,398.7,1162.3,398.8z"/>
<path class="st4" d="M1103,511.1l-1.1-52.1l6.5,51.8c0.3,1.5-0.7,2.9-2.2,3.1s-2.9-0.7-3.1-2.2c0-0.1,0-0.2,0-0.3
	C1103,511.3,1103,511.2,1103,511.1z"/>
<path class="st4" d="M1034.9,475.3l44.5-27.2l-41.5,31.7c-1.2,0.8-2.9,0.5-3.8-0.7c-0.8-1.1-0.6-2.7,0.5-3.6
	C1034.7,475.4,1034.8,475.4,1034.9,475.3z"/>
<path class="st4" d="M1116.9,334.9l-12.2,69.9l6.9-70.7c0.1-1.5,1.3-2.7,2.8-2.6c1.5,0.1,2.7,1.3,2.6,2.8c0,0.1,0,0.2,0,0.3
	C1116.9,334.8,1116.9,334.9,1116.9,334.9z"/>
<path class="st4" d="M1043.3,337.5l38.6,74.6l-43.3-72c-0.8-1.3-0.4-2.9,0.9-3.7c1.3-0.8,2.9-0.4,3.7,0.9
	C1043.2,337.4,1043.2,337.5,1043.3,337.5z"/>
<path class="st4" d="M1170.9,362.8l-50.9,49.4L1167,359c0.9-1.2,2.6-1.4,3.8-0.5c1.2,0.9,1.4,2.6,0.5,3.8c-0.1,0.1-0.1,0.2-0.2,0.2
	C1171,362.7,1170.9,362.7,1170.9,362.8z"/>
<path class="st4" d="M1211.8,423.5l-83.3,11l82.4-16.3c1.5-0.3,2.9,0.7,3.2,2.1s-0.7,2.9-2.1,3.2
	C1211.9,423.5,1211.8,423.5,1211.8,423.5z"/>
<path class="st4" d="M1080.3,539.2l12.2-69.9l-6.9,70.7c-0.2,1.5-1.6,2.5-3.1,2.2c-1.3-0.2-2.3-1.4-2.3-2.8
	C1080.2,539.3,1080.2,539.2,1080.3,539.2z"/>
<path class="st4" d="M1153.9,536.6l-38.6-74.6l43.3,72c0.8,1.3,0.4,2.9-0.9,3.7c-1.3,0.8-2.9,0.4-3.7-0.9c0,0,0,0,0,0
	C1154,536.7,1153.9,536.6,1153.9,536.6z"/>
<path class="st4" d="M1026.3,511.3l50.9-49.4l-47,53.1c-1,1.1-2.7,1.3-3.8,0.3c-1.1-1-1.3-2.7-0.3-3.8c0,0,0,0,0,0
	C1026.2,511.4,1026.3,511.4,1026.3,511.3z"/>
<path class="st4" d="M985.4,450.5l83.3-11l-82.4,16.3c-1.5,0.3-2.9-0.7-3.2-2.1s0.7-2.9,2.1-3.2
	C985.3,450.6,985.3,450.5,985.4,450.5z"/>
<path class="st4" d="M1173.5,465.8l24,5.5l0,0c1,0.2,1.6,1.2,1.4,2.2c-0.2,1-1.2,1.6-2.2,1.4c-0.1,0-0.2,0-0.3-0.1L1173.5,465.8z"/>
<path class="st4" d="M1151.1,439.4l44.1-6.4c1-0.2,1.9,0.4,2.1,1.4s-0.4,1.9-1.4,2.1c-0.1,0-0.1,0-0.2,0c0,0-0.1,0-0.1,0
	L1151.1,439.4z"/>
<path class="st4" d="M1153.4,422.8l21.3-9.2c0.9-0.4,2,0,2.4,0.9c0.4,0.9,0,2-0.9,2.4c-0.1,0-0.2,0.1-0.3,0.1L1153.4,422.8z"/>
<path class="st4" d="M1167.8,477.7l21.3,12.4c0.9,0.5,1.2,1.6,0.7,2.5c-0.5,0.9-1.6,1.2-2.5,0.7c-0.1,0-0.1-0.1-0.2-0.1l0,0
	L1167.8,477.7z"/>
<path class="st4" d="M1133.2,476.7l25.5,36.5c0.5,0.8,0.3,2-0.6,2.5c-0.8,0.5-1.8,0.3-2.4-0.4c0,0-0.1-0.1-0.1-0.1L1133.2,476.7z"/>
<path class="st4" d="M1121.6,488.7l9.5,21.1c0.4,0.9,0,2-0.9,2.4c-0.9,0.4-2,0-2.4-0.9l0,0c0-0.1-0.1-0.2-0.1-0.3L1121.6,488.7z"/>
<path class="st4" d="M1023.7,408.3l-24-5.5l0,0c-1-0.2-1.6-1.2-1.4-2.2s1.2-1.6,2.2-1.4c0.1,0,0.2,0,0.3,0.1L1023.7,408.3z"/>
<path class="st4" d="M1046,434.7l-44.1,6.4c-1,0.1-1.9-0.6-1.9-1.6c-0.1-0.9,0.5-1.7,1.4-1.9c0,0,0.1,0,0.1,0L1046,434.7z"/>
<path class="st4" d="M1043.8,451.3l-21.3,9.2c-0.9,0.4-2,0-2.4-0.9s0-2,0.9-2.4l0,0c0.1,0,0.2-0.1,0.3-0.1L1043.8,451.3z"/>
<path class="st4" d="M1029.4,396.4l-21.3-12.4c-0.9-0.5-1.2-1.6-0.7-2.5c0.5-0.9,1.6-1.2,2.5-0.7l0,0c0.1,0,0.1,0.1,0.2,0.1l0,0
	L1029.4,396.4z"/>
<path class="st4" d="M1064,397.4l-25.5-36.5c-0.5-0.8-0.3-2,0.6-2.5c0.8-0.5,1.8-0.3,2.3,0.4c0,0,0.1,0.1,0.1,0.1L1064,397.4z"/>
<path class="st4" d="M1075.5,385.3l-9.5-21.1c-0.4-0.9,0-2,0.9-2.4c0.9-0.4,2,0,2.4,0.9c0,0.1,0.1,0.2,0.1,0.3L1075.5,385.3z"/>
<path class="st4" d="M1127.4,362.1l5.5-24l0,0c0.2-1,1.2-1.6,2.2-1.4c1,0.2,1.6,1.2,1.4,2.2c0,0.1,0,0.2-0.1,0.3L1127.4,362.1z"/>
<path class="st4" d="M1139.2,367.8l12.4-21.3c0.5-0.9,1.6-1.2,2.5-0.7c0.9,0.5,1.2,1.6,0.7,2.5c0,0.1-0.1,0.1-0.1,0.2l0,0
	L1139.2,367.8z"/>
<path class="st4" d="M1069.8,512l-5.5,24l0,0c-0.2,1-1.2,1.6-2.2,1.4c-1-0.2-1.6-1.2-1.4-2.2c0-0.1,0-0.2,0.1-0.3L1069.8,512z"/>
<path class="st4" d="M1058,506.3l-12.4,21.3c-0.5,0.9-1.6,1.2-2.5,0.7c-0.9-0.5-1.2-1.6-0.7-2.5c0-0.1,0.1-0.1,0.1-0.2l0,0
	L1058,506.3z"/>
<path class="st4" d="M1126.9,435c-2,0.7-4.1,1.3-6.2,1.6c-2,0.3-4.1,0.5-6.1,0.6c-2,0.1-4.1,0-6.1-0.3c-2-0.3-3.9-0.7-5.9-1.2
	c2,0.1,3.9,0.1,5.9-0.1c1.9-0.2,3.8-0.5,5.7-1c1.8-0.5,3.6-1.1,5.4-1.8c1.7-0.7,3.3-1.5,4.8-2.5l0,0c1.3-0.8,2.9-0.4,3.7,0.9
	c0.8,1.2,0.4,2.8-0.7,3.7C1127.3,434.8,1127.1,434.9,1126.9,435z"/>
<path class="st4" d="M1083.7,459.1c1.5-1.1,2.8-2.3,4-3.6c1.3-1.4,2.5-2.8,3.6-4.3c1.1-1.5,2.1-3.2,3-4.9c0.9-1.7,1.6-3.5,2.2-5.4
	c-0.3,4-1.2,7.9-2.8,11.6c-0.8,1.9-1.7,3.7-2.7,5.5c-1.1,1.8-2.3,3.6-3.7,5.2c-1,1.1-2.7,1.2-3.8,0.2c-1.1-1-1.2-2.7-0.2-3.8
	C1083.4,459.4,1083.5,459.3,1083.7,459.1L1083.7,459.1z"/>
<path class="st4" d="M1070.3,438.9c2-0.7,4.1-1.3,6.2-1.6c2-0.3,4.1-0.5,6.1-0.6c2-0.1,4.1,0,6.1,0.3c2,0.3,3.9,0.7,5.9,1.2
	c-2-0.1-3.9-0.1-5.9,0.1c-1.9,0.2-3.8,0.5-5.7,1c-1.8,0.5-3.6,1.1-5.4,1.8c-1.7,0.7-3.3,1.5-4.8,2.5l0,0c-1.3,0.8-2.9,0.4-3.7-0.9
	c-0.7-1.2-0.4-2.8,0.7-3.6C1069.9,439.1,1070.1,439,1070.3,438.9z"/>
<path class="st4" d="M1113.4,412.8c-0.5,2.1-1.3,4.1-2.2,6c-0.9,1.9-1.9,3.6-3,5.3c-2.2,3.4-4.9,6.3-8,8.8c1.2-1.5,2.3-3.1,3.2-4.8
	c0.9-1.7,1.7-3.4,2.4-5.2c0.7-1.8,1.2-3.6,1.6-5.4c0.4-1.8,0.6-3.6,0.7-5.4v0c0-1.5,1.2-2.7,2.7-2.7c1.5,0,2.7,1.2,2.7,2.7
	C1113.5,412.4,1113.4,412.6,1113.4,412.8z"/>
<path class="st4" d="M1110.5,461c-0.2-1.8-0.7-3.6-1.2-5.3c-0.6-1.8-1.3-3.6-2.1-5.3c-0.8-1.7-1.8-3.4-2.9-5
	c-1.1-1.6-2.4-3.1-3.7-4.6c3.4,2.2,6.4,5,8.9,8.1c1.3,1.6,2.5,3.3,3.5,5.1c1.1,1.8,2,3.8,2.8,5.8c0.5,1.4-0.2,3-1.6,3.5
	s-3-0.2-3.5-1.6l0,0C1110.6,461.5,1110.6,461.3,1110.5,461L1110.5,461z"/>
<path class="st4" d="M1086.7,412.9c0.2,1.8,0.7,3.6,1.2,5.3c0.6,1.8,1.3,3.6,2.1,5.3c0.8,1.7,1.8,3.4,2.9,5c1.1,1.6,2.4,3.1,3.7,4.6
	c-3.4-2.2-6.4-5-8.9-8.1c-1.3-1.6-2.5-3.3-3.5-5.1c-1.1-1.8-2-3.8-2.8-5.8c-0.5-1.4,0.2-3,1.6-3.5s3,0.2,3.5,1.6
	C1086.6,412.5,1086.7,412.7,1086.7,412.9L1086.7,412.9z"/>
<path class="st4" d="M1098.1,463.7c0.6-1.7,1.1-3.5,1.4-5.2c0.3-1.9,0.5-3.7,0.6-5.6c0.1-1.9,0-3.8-0.3-5.7
	c-0.2-1.9-0.7-3.8-1.2-5.7c2,3.5,3.4,7.3,4.2,11.2c0.4,2,0.7,4,0.8,6.1c0.1,2.1,0.1,4.3-0.2,6.4c-0.2,1.5-1.6,2.5-3.1,2.3
	c-1.4-0.2-2.5-1.5-2.3-3C1097.9,464.1,1098,463.9,1098.1,463.7L1098.1,463.7z"/>
<path class="st4" d="M1099.1,410.4c-0.6,1.7-1.1,3.5-1.4,5.2c-0.3,1.9-0.5,3.7-0.6,5.6c-0.1,1.9,0,3.8,0.3,5.7
	c0.2,1.9,0.6,3.8,1.2,5.7c-1-1.7-1.8-3.5-2.5-5.4c-0.7-1.9-1.3-3.8-1.7-5.8c-0.4-2-0.7-4-0.8-6.1c-0.1-2.1-0.1-4.3,0.2-6.4
	c0.2-1.5,1.6-2.5,3-2.3c1.5,0.2,2.5,1.6,2.3,3C1099.2,410,1099.2,410.2,1099.1,410.4L1099.1,410.4z"/>
<path class="st4" d="M1122.7,422.4c-1.4,1.6-3,3-4.7,4.3c-1.6,1.2-3.4,2.4-5.2,3.3c-3.5,1.9-7.3,3.3-11.3,4.1
	c1.8-0.8,3.5-1.7,5.1-2.8c1.6-1,3.1-2.2,4.6-3.5c1.4-1.3,2.7-2.6,3.9-4.1c1.2-1.4,2.2-2.9,3.1-4.4l0,0c0.7-1.3,2.4-1.8,3.7-1
	c1.3,0.7,1.8,2.3,1.1,3.6C1122.9,422,1122.8,422.2,1122.7,422.4z"/>
<path class="st4" d="M1120,453.2c-1.1-1.5-2.2-2.9-3.6-4.2c-1.3-1.4-2.8-2.6-4.3-3.7c-1.5-1.2-3.2-2.2-4.9-3.1
	c-1.7-0.9-3.5-1.7-5.4-2.4c4,0.4,8,1.5,11.7,3.2c1.9,0.8,3.7,1.8,5.5,2.9c1.8,1.1,3.6,2.4,5.1,3.9c1.1,1,1.2,2.7,0.2,3.8
	c-1,1.1-2.7,1.2-3.8,0.2C1120.3,453.6,1120.1,453.4,1120,453.2L1120,453.2z"/>
<path class="st4" d="M1074.5,451.7c1.4-1.6,3-3,4.7-4.3c1.6-1.2,3.4-2.4,5.2-3.3c3.5-1.9,7.3-3.3,11.3-4.1c-1.8,0.8-3.5,1.7-5.1,2.8
	c-1.6,1-3.1,2.2-4.6,3.5c-1.4,1.3-2.7,2.6-3.9,4.1c-1.2,1.4-2.2,2.9-3.1,4.4l0,0c-0.7,1.3-2.3,1.8-3.7,1.1c-1.3-0.7-1.8-2.3-1.1-3.7
	c0,0,0,0,0-0.1C1074.2,452.1,1074.4,451.9,1074.5,451.7z"/>
<path class="st4" d="M1077.2,420.9c1.1,1.5,2.2,2.9,3.6,4.2c1.3,1.4,2.8,2.6,4.3,3.7c1.5,1.2,3.2,2.2,4.9,3.1
	c1.7,0.9,3.5,1.7,5.4,2.4c-4-0.4-8-1.5-11.7-3.2c-1.9-0.8-3.7-1.8-5.5-2.9c-1.8-1.1-3.6-2.4-5.1-3.9c-1.1-1-1.3-2.7-0.3-3.8
	c1-1.1,2.7-1.3,3.8-0.3c0,0,0.1,0.1,0.1,0.1C1076.9,420.5,1077,420.6,1077.2,420.9L1077.2,420.9z"/>
<path class="st4" d="M1127.5,457.6c1.4,0.7,2.7,1.6,4.1,2.4s2.6,1.7,4,2.5c1.3,0.9,2.7,1.7,4.2,2.2c0.9,0.1,2.2-0.3,2.7,0.3
	c0.3,0.3,0.5,0.8,0.6,1.2c0.1,0.7,0.1,1.5-0.1,2.2c0,0.1-0.1,0.2-0.2,0.3c-0.6,0.4-1.3,0.7-2,0.8c-0.5,0.1-0.9,0.1-1.4-0.1
	c-0.8-0.3-0.8-1.6-1.2-2.4c-1-1.3-2.1-2.4-3.5-3.3c-1.2-1-2.5-1.9-3.7-3S1128.7,458.7,1127.5,457.6z"/>
<path class="st4" d="M1069.6,416.4c-1.4-0.7-2.7-1.6-4.1-2.4s-2.6-1.7-4-2.5c-1.3-0.9-2.7-1.7-4.2-2.2c-0.9-0.1-2.2,0.3-2.7-0.3
	c-0.3-0.3-0.5-0.8-0.6-1.2c-0.1-0.7-0.1-1.5,0.1-2.2c0-0.1,0.1-0.2,0.2-0.3c0.6-0.4,1.3-0.7,2-0.8c0.5-0.1,0.9-0.1,1.4,0.1
	c0.8,0.3,0.8,1.6,1.2,2.4c1,1.3,2.1,2.4,3.5,3.3c1.2,1,2.5,1.9,3.7,3S1068.5,415.4,1069.6,416.4z"/>
<path class="st4" d="M1132.9,446.4c1.6,0.2,3.1,0.5,4.7,0.8s3.1,0.7,4.6,1c1.5,0.4,3.1,0.6,4.7,0.6c0.9-0.2,1.9-1,2.6-0.6
	c0.4,0.2,0.8,0.5,1,1c0.4,0.7,0.6,1.4,0.6,2.1c0,0.1,0,0.2-0.1,0.3c-0.4,0.6-1,1.1-1.6,1.5c-0.4,0.3-0.9,0.4-1.3,0.3
	c-0.8,0-1.3-1.2-1.9-1.9c-1.4-0.8-2.8-1.5-4.4-1.9c-1.5-0.5-3-0.9-4.5-1.5S1134.3,447,1132.9,446.4z"/>
<path class="st4" d="M1064.3,427.7c-1.6-0.2-3.1-0.5-4.7-0.8s-3.1-0.7-4.6-1c-1.5-0.4-3.1-0.6-4.7-0.6c-0.9,0.2-1.9,1-2.6,0.6
	c-0.4-0.2-0.8-0.6-1-1c-0.4-0.7-0.6-1.4-0.6-2.1c0-0.1,0-0.2,0.1-0.3c0.4-0.6,1-1.1,1.6-1.5c0.4-0.3,0.9-0.4,1.3-0.3
	c0.8,0,1.3,1.2,1.9,1.9c1.4,0.8,2.8,1.5,4.4,1.9c1.5,0.5,3,0.9,4.5,1.5S1062.8,427,1064.3,427.7z"/>
<path class="st4" d="M1119.2,408.1c0.7-1.4,1.6-2.7,2.4-4.1s1.7-2.6,2.5-4c0.9-1.3,1.7-2.7,2.2-4.2c0.1-0.9-0.3-2.2,0.3-2.7
	c0.3-0.3,0.8-0.5,1.2-0.6c0.7-0.1,1.5-0.1,2.2,0.1c0.1,0,0.2,0.1,0.3,0.2c0.4,0.6,0.7,1.3,0.8,2c0.1,0.5,0.1,0.9-0.1,1.4
	c-0.3,0.8-1.6,0.8-2.4,1.2c-1.3,1-2.4,2.1-3.3,3.5c-1,1.2-1.9,2.5-3,3.7S1120.3,406.9,1119.2,408.1z"/>
<path class="st4" d="M1078,466c-0.7,1.4-1.6,2.7-2.4,4.1s-1.7,2.6-2.5,4c-0.9,1.3-1.7,2.7-2.2,4.2c-0.1,0.9,0.3,2.2-0.3,2.7
	c-0.3,0.3-0.8,0.5-1.2,0.6c-0.7,0.1-1.5,0.1-2.2-0.1c-0.1,0-0.2-0.1-0.3-0.2c-0.4-0.6-0.7-1.3-0.8-2c-0.1-0.5-0.1-0.9,0.1-1.4
	c0.3-0.8,1.6-0.8,2.4-1.2c1.3-1,2.4-2.1,3.3-3.5c1-1.2,1.9-2.5,3-3.7S1076.9,467.1,1078,466z"/>
<path class="st4" d="M1108,402.8c0.2-1.6,0.5-3.1,0.8-4.7s0.7-3.1,1-4.6c0.4-1.5,0.6-3.1,0.6-4.7c-0.2-0.9-1-1.9-0.6-2.6
	c0.2-0.4,0.5-0.8,1-1c0.7-0.4,1.4-0.6,2.1-0.6c0.1,0,0.2,0,0.3,0.1c0.6,0.4,1.1,1,1.5,1.6c0.3,0.4,0.4,0.9,0.3,1.3
	c0,0.8-1.2,1.3-1.9,1.9c-0.8,1.4-1.5,2.8-1.9,4.4c-0.5,1.5-0.9,3-1.5,4.5S1108.6,401.3,1108,402.8z"/>
<path class="st4" d="M1089.2,471.3c-0.2,1.6-0.5,3.1-0.8,4.7s-0.7,3.1-1,4.6c-0.4,1.5-0.6,3.1-0.6,4.7c0.2,0.9,1,1.9,0.6,2.6
	c-0.2,0.4-0.6,0.8-1,1c-0.7,0.4-1.4,0.6-2.1,0.6c-0.1,0-0.2,0-0.3-0.1c-0.6-0.4-1.1-1-1.5-1.6c-0.3-0.4-0.4-0.9-0.3-1.3
	c0-0.8,1.2-1.3,1.9-1.9c0.8-1.4,1.5-2.8,1.9-4.4c0.5-1.5,0.9-3,1.5-4.5S1088.6,472.8,1089.2,471.3z"/>
<path class="st4" d="M1182.8,402l-40.5,17.4l38.1-22.2c1.3-0.8,2.9-0.4,3.7,0.8c0.8,1.3,0.4,2.9-0.8,3.7c-0.1,0-0.1,0.1-0.2,0.1
	C1183,401.9,1182.9,402,1182.8,402z"/>
<path class="st4" d="M1192.2,458.9l-31.6-9.1l32.7,3.8c1.5,0.2,2.5,1.5,2.4,3c-0.2,1.5-1.5,2.5-3,2.4
	C1192.5,459,1192.3,458.9,1192.2,458.9z"/>
<path class="st4" d="M1175.7,477l-34.1-20.2l36.5,15.3c1.4,0.5,2.1,2.1,1.5,3.5s-2.1,2.1-3.5,1.5c0,0-0.1,0-0.1-0.1
	C1175.9,477.1,1175.8,477,1175.7,477z"/>
<path class="st4" d="M1140.5,358.6l-21.5,36.7l16.6-39.1c0.6-1.4,2.2-1.9,3.6-1.3c1.3,0.6,1.9,2.1,1.4,3.4
	C1140.6,358.4,1140.5,358.5,1140.5,358.6z"/>
<path class="st4" d="M1118.4,525.8l-6.4-43.6l11.6,42.5c0.5,1.4-0.3,2.9-1.7,3.4c-1.4,0.5-2.9-0.3-3.4-1.7c0-0.1-0.1-0.2-0.1-0.3
	C1118.5,526,1118.4,525.9,1118.4,525.8z"/>
<path class="st4" d="M1170.6,500.7l-23.4-23.1l26.8,19c1.2,0.9,1.5,2.5,0.6,3.8c-0.9,1.2-2.5,1.5-3.8,0.6l0,0
	C1170.8,500.9,1170.7,500.8,1170.6,500.7z"/>
<path class="st4" d="M1058.5,516.4l20.2-37.4l-15.3,39.7c-0.5,1.4-2,2.1-3.4,1.7c-1.4-0.5-2.1-2-1.7-3.4c0-0.1,0-0.1,0.1-0.2
	C1058.4,516.6,1058.5,516.5,1058.5,516.4z"/>
<path class="st4" d="M1014.4,472.1l40.5-17.4l-38.1,22.2c-1.3,0.8-2.9,0.4-3.7-0.8c-0.8-1.3-0.4-2.9,0.8-3.7c0.1,0,0.1-0.1,0.2-0.1
	C1014.2,472.2,1014.3,472.1,1014.4,472.1z"/>
<path class="st4" d="M1005,415.2l31.6,9.1l-32.7-3.8c-1.5-0.2-2.5-1.5-2.4-3s1.5-2.5,3-2.4l0,0
	C1004.7,415.1,1004.9,415.2,1005,415.2z"/>
<path class="st4" d="M1021.5,397.1l34.1,20.2l-36.5-15.3c-1.4-0.5-2.1-2.1-1.5-3.5c0.5-1.4,2.1-2.1,3.5-1.5c0,0,0.1,0,0.1,0.1
	C1021.2,397,1021.4,397,1021.5,397.1z"/>
<path class="st4" d="M1078.8,348.3l6.4,43.6l-11.6-42.5c-0.3-1.5,0.6-2.9,2.1-3.2c1.3-0.3,2.7,0.5,3.1,1.8
	C1078.7,348.1,1078.7,348.2,1078.8,348.3z"/>
<path class="st4" d="M1026.6,373.4l23.4,23.1l-26.8-19c-1.2-0.9-1.5-2.5-0.6-3.8c0.9-1.2,2.5-1.5,3.8-0.6
	C1026.4,373.2,1026.5,373.3,1026.6,373.4z"/>
<path class="st4" d="M1191.6,471.3c0.7,0,1.4,0.1,2.2,0.1c0.3,0,0.6,0.3,0.5,0.6c0,0.3-0.3,0.6-0.6,0.5c0,0,0,0,0,0
	c-0.1,0-0.2,0-0.2-0.1C1192.8,472.2,1192.2,471.8,1191.6,471.3z"/>
<path class="st4" d="M1202.1,473.1c0.7,0.2,1.3,0.4,2,0.6c0.9,0.3,1.5,1.3,1.2,2.2s-1.3,1.5-2.2,1.2c0,0-0.1,0-0.1,0
	c-0.7-0.2-1.3-0.5-1.9-0.8c-0.8-0.4-1.2-1.3-0.9-2.2C1200.4,473.3,1201.3,472.9,1202.1,473.1L1202.1,473.1z"/>
<path class="st4" d="M1211.9,476.6c0.6,0.3,1.3,0.6,1.9,0.9c0.7,0.3,0.9,1.1,0.7,1.7c-0.3,0.6-0.9,0.9-1.5,0.7
	c-0.7-0.1-1.4-0.3-2.1-0.5c-0.8-0.2-1.3-1-1.1-1.8c0.2-0.8,1-1.3,1.8-1.1C1211.7,476.5,1211.8,476.5,1211.9,476.6z"/>
<path class="st4" d="M1183.4,488.4c0.7,0.2,1.4,0.4,2.1,0.7c0.3,0.1,0.4,0.4,0.3,0.7c-0.1,0.3-0.4,0.4-0.7,0.3
	c-0.1,0-0.2-0.1-0.2-0.1C1184.4,489.5,1183.9,488.9,1183.4,488.4z"/>
<path class="st4" d="M1193.1,492.6c0.6,0.3,1.2,0.7,1.8,1c0.8,0.5,1.1,1.6,0.6,2.4c-0.5,0.8-1.6,1.1-2.4,0.6c0,0,0,0-0.1,0
	c0,0-0.1,0-0.1-0.1c-0.6-0.4-1.1-0.8-1.7-1.2c-0.7-0.6-0.9-1.6-0.3-2.3C1191.5,492.5,1192.4,492.3,1193.1,492.6L1193.1,492.6z"/>
<path class="st4" d="M1201.8,498.4c0.6,0.4,1.1,0.9,1.6,1.3c0.6,0.4,0.7,1.3,0.2,1.8c-0.4,0.5-1.1,0.6-1.6,0.4
	c-0.6-0.3-1.3-0.6-1.9-0.9c-0.8-0.4-1.1-1.3-0.7-2.1s1.3-1.1,2.1-0.7c0,0,0,0,0.1,0C1201.7,498.3,1201.7,498.3,1201.8,498.4z"/>
<path class="st4" d="M1013.8,385.7c-0.7-0.2-1.4-0.4-2.1-0.7c-0.3-0.1-0.4-0.4-0.3-0.7c0.1-0.3,0.4-0.4,0.7-0.3
	c0.1,0,0.2,0.1,0.2,0.1C1012.8,384.6,1013.3,385.1,1013.8,385.7z"/>
<path class="st4" d="M1004.1,381.4c-0.6-0.3-1.2-0.7-1.8-1c-0.8-0.5-1.1-1.6-0.6-2.4c0.5-0.8,1.5-1.1,2.4-0.6l0.1,0.1
	c0.6,0.4,1.1,0.8,1.7,1.2c0.7,0.6,0.9,1.6,0.3,2.3C1005.7,381.6,1004.8,381.8,1004.1,381.4L1004.1,381.4z"/>
<path class="st4" d="M995.3,375.7c-0.5-0.4-1.1-0.9-1.6-1.3c-0.6-0.4-0.7-1.3-0.2-1.8c0.4-0.5,1.1-0.6,1.6-0.4
	c0.6,0.3,1.3,0.6,1.9,0.9c0.7,0.4,1,1.3,0.6,2.1c-0.4,0.7-1.3,1-2,0.6C995.5,375.8,995.4,375.7,995.3,375.7z"/>
<path class="st4" d="M1005.6,402.7c-0.7,0-1.4-0.1-2.2-0.1c-0.3,0-0.5-0.3-0.5-0.6c0-0.3,0.3-0.5,0.6-0.5c0.1,0,0.2,0,0.2,0.1
	C1004.4,401.9,1005,402.3,1005.6,402.7z"/>
<path class="st4" d="M995.1,401c-0.7-0.2-1.3-0.4-2-0.6c-0.9-0.3-1.5-1.2-1.2-2.2c0.3-0.9,1.2-1.5,2.2-1.2c0,0,0.1,0,0.1,0
	c0,0,0.1,0,0.1,0c0.7,0.2,1.3,0.5,1.9,0.8c0.8,0.4,1.2,1.3,0.9,2.2C996.7,400.8,995.9,401.2,995.1,401L995.1,401z"/>
<path class="st4" d="M985.3,397.5c-0.6-0.3-1.3-0.6-1.9-0.9c-0.7-0.3-1-1.1-0.7-1.7c0.3-0.6,0.9-0.9,1.5-0.7
	c0.7,0.2,1.4,0.3,2.1,0.5c0.8,0.2,1.3,1,1.1,1.8c-0.2,0.8-1,1.3-1.8,1.1C985.4,397.6,985.3,397.5,985.3,397.5z"/>
<path class="st4" d="M1197.7,432.9c0.7-0.3,1.4-0.5,2-0.7c0.3-0.1,0.6,0.1,0.7,0.4c0.1,0.3-0.1,0.6-0.4,0.7c-0.1,0-0.2,0-0.3,0
	C1199.1,433.2,1198.4,433.1,1197.7,432.9z"/>
<path class="st4" d="M1208,430.5c0.7-0.1,1.4-0.2,2.1-0.2c1-0.1,1.8,0.7,1.9,1.7c0.1,0.9-0.6,1.7-1.5,1.8l-0.1,0c-0.7,0-1.4,0-2.1,0
	c-0.9,0-1.6-0.8-1.6-1.7C1206.6,431.3,1207.2,430.7,1208,430.5L1208,430.5z"/>
<path class="st4" d="M1218.4,430c0.7,0,1.4,0.1,2.1,0.1c0.7,0,1.3,0.6,1.3,1.3c0,0.6-0.5,1.1-1.1,1.2c-0.7,0.1-1.4,0.3-2.1,0.4
	c-0.8,0.1-1.6-0.5-1.7-1.3c-0.1-0.8,0.4-1.6,1.2-1.7C1218.2,430,1218.3,430,1218.4,430z"/>
<path class="st4" d="M1196.6,451.8c0.7-0.1,1.4-0.1,2.2-0.2c0.3,0,0.6,0.2,0.6,0.5c0,0.3-0.2,0.6-0.5,0.6c0,0,0,0,0,0
	c-0.1,0-0.2,0-0.3,0C1197.9,452.4,1197.3,452.1,1196.6,451.8z"/>
<path class="st4" d="M1207.2,452c0.7,0.1,1.4,0.2,2.1,0.3c1,0.2,1.6,1.1,1.4,2c-0.2,0.9-1,1.6-2,1.5c0,0-0.1,0-0.1,0
	c-0.7-0.1-1.4-0.3-2-0.5c-0.9-0.2-1.4-1.1-1.2-2C1205.7,452.5,1206.4,451.9,1207.2,452L1207.2,452z"/>
<path class="st4" d="M1217.5,454c0.7,0.2,1.3,0.4,2,0.6c0.7,0.2,1.1,0.9,0.9,1.6c-0.2,0.6-0.7,1-1.4,0.9c-0.7,0-1.4-0.1-2.1-0.1
	c-0.8-0.1-1.5-0.8-1.4-1.7c0.1-0.8,0.8-1.4,1.6-1.4C1217.3,453.9,1217.4,454,1217.5,454z"/>
<path class="st4" d="M1000.5,422.3c-0.7,0.1-1.4,0.1-2.2,0.2c-0.3,0-0.6-0.2-0.6-0.5c0-0.3,0.2-0.6,0.5-0.6l0,0c0.1,0,0.2,0,0.3,0
	C999.2,421.6,999.9,421.9,1000.5,422.3z"/>
<path class="st4" d="M990,422.1c-0.7-0.1-1.4-0.2-2.1-0.3c-1-0.1-1.6-1-1.5-2c0.1-1,1-1.6,2-1.5c0,0,0,0,0.1,0c0,0,0.1,0,0.1,0
	c0.7,0.1,1.4,0.3,2,0.5c0.9,0.2,1.4,1.1,1.2,2C991.5,421.6,990.8,422.1,990,422.1z"/>
<path class="st4" d="M979.7,420.1c-0.7-0.2-1.3-0.4-2-0.6c-0.7-0.2-1.1-0.9-0.9-1.6c0.2-0.6,0.7-1,1.4-1c0.7,0,1.4,0.1,2.1,0.1
	c0.8,0.1,1.5,0.8,1.4,1.7c-0.1,0.8-0.8,1.5-1.7,1.4C979.9,420.1,979.8,420.1,979.7,420.1z"/>
<path class="st4" d="M999.5,441.2c-0.7,0.3-1.4,0.5-2,0.7c-0.3,0.1-0.6-0.1-0.7-0.4s0.1-0.6,0.4-0.7c0,0,0,0,0,0c0.1,0,0.2,0,0.3,0
	C998.1,440.9,998.8,441,999.5,441.2z"/>
<path class="st4" d="M989.2,443.5c-0.7,0.1-1.4,0.2-2.1,0.2c-1,0.1-1.8-0.6-2-1.5s0.6-1.8,1.5-2c0,0,0.1,0,0.1,0c0,0,0.1,0,0.1,0
	c0.7,0,1.4,0,2.1,0c0.9,0,1.6,0.8,1.6,1.7C990.6,442.7,990,443.4,989.2,443.5L989.2,443.5z"/>
<path class="st4" d="M978.8,444.1c-0.7,0-1.4-0.1-2.1-0.1c-0.7,0-1.3-0.6-1.3-1.3c0-0.6,0.5-1.2,1.1-1.3c0.7-0.1,1.4-0.3,2.1-0.4
	c0.8-0.1,1.6,0.4,1.8,1.3s-0.4,1.6-1.3,1.8C979,444.1,978.9,444.1,978.8,444.1z"/>
<path class="st4" d="M1188.1,394.5c0.5-0.5,1.1-1,1.6-1.4c0.2-0.2,0.6-0.2,0.8,0.1c0.2,0.2,0.2,0.6-0.1,0.8
	c-0.1,0.1-0.1,0.1-0.2,0.1C1189.5,394.2,1188.8,394.3,1188.1,394.5z"/>
<path class="st4" d="M1196.7,388.2c0.6-0.4,1.2-0.7,1.8-1c0.9-0.5,1.9-0.2,2.4,0.7c0.5,0.9,0.2,1.9-0.7,2.4l-0.1,0
	c-0.6,0.3-1.3,0.6-1.9,0.9c-0.9,0.3-1.8-0.1-2.2-0.9C1195.7,389.5,1196,388.7,1196.7,388.2L1196.7,388.2z"/>
<path class="st4" d="M1206.1,383.6c0.7-0.3,1.3-0.5,2-0.7c0.7-0.3,1.4,0.1,1.7,0.7c0.2,0.6,0,1.2-0.5,1.6c-0.6,0.4-1.2,0.8-1.8,1.2
	c-0.7,0.4-1.7,0.2-2.1-0.5c-0.4-0.7-0.2-1.6,0.5-2.1C1205.9,383.7,1206,383.6,1206.1,383.6z"/>
<path class="st4" d="M1194.6,412.2c0.6-0.4,1.3-0.7,1.9-1c0.3-0.1,0.6,0,0.8,0.3c0.1,0.3,0,0.6-0.3,0.7c-0.1,0-0.2,0.1-0.3,0.1
	C1196,412.3,1195.3,412.3,1194.6,412.2z"/>
<path class="st4" d="M1204.4,408.3c0.7-0.2,1.3-0.4,2-0.6c0.9-0.3,1.9,0.3,2.2,1.2c0.3,0.9-0.3,1.9-1.2,2.2c0,0,0,0-0.1,0
	c0,0-0.1,0-0.1,0c-0.7,0.1-1.4,0.3-2.1,0.4c-0.9,0.1-1.8-0.5-1.9-1.4C1203.1,409.3,1203.6,408.5,1204.4,408.3L1204.4,408.3z"/>
<path class="st4" d="M1214.6,406.1c0.7-0.1,1.4-0.2,2.1-0.2c0.7-0.1,1.4,0.4,1.5,1.1c0.1,0.6-0.3,1.2-0.9,1.4
	c-0.7,0.2-1.3,0.5-2,0.7c-0.8,0.2-1.7-0.2-1.9-1c-0.2-0.8,0.2-1.6,1-1.9C1214.4,406.1,1214.5,406.1,1214.6,406.1z"/>
<path class="st4" d="M1002.6,461.8c-0.6,0.4-1.3,0.7-1.9,1c-0.3,0.1-0.6,0-0.8-0.3c-0.1-0.3,0-0.6,0.3-0.8l0,0
	c0.1,0,0.2-0.1,0.3-0.1C1001.1,461.8,1001.9,461.8,1002.6,461.8z"/>
<path class="st4" d="M992.8,465.8c-0.7,0.2-1.3,0.4-2,0.6c-0.9,0.3-1.9-0.3-2.2-1.2s0.3-1.9,1.2-2.2c0,0,0,0,0.1,0l0.1,0
	c0.7-0.1,1.4-0.3,2.1-0.4c0.9-0.1,1.8,0.5,1.9,1.4C994,464.8,993.5,465.6,992.8,465.8L992.8,465.8z"/>
<path class="st4" d="M982.6,468c-0.7,0.1-1.4,0.2-2.1,0.2c-0.7,0.1-1.4-0.4-1.5-1.1c-0.1-0.6,0.3-1.2,0.9-1.4c0.7-0.2,1.3-0.5,2-0.7
	c0.8-0.3,1.7,0.1,2,0.9s-0.1,1.7-0.9,2c0,0,0,0-0.1,0C982.7,468,982.6,468,982.6,468z"/>
<path class="st4" d="M1009,479.6c-0.5,0.5-1.1,1-1.6,1.4c-0.2,0.2-0.6,0.2-0.8,0c-0.2-0.2-0.2-0.6,0-0.8c0,0,0,0,0,0
	c0.1-0.1,0.1-0.1,0.2-0.1C1007.6,479.9,1008.3,479.8,1009,479.6z"/>
<path class="st4" d="M1000.5,485.8c-0.6,0.4-1.2,0.7-1.8,1c-0.8,0.5-1.9,0.2-2.4-0.7c-0.5-0.8-0.2-1.9,0.7-2.4c0,0,0,0,0,0l0.1,0
	c0.6-0.3,1.3-0.6,1.9-0.9c0.9-0.3,1.8,0.1,2.2,0.9C1001.4,484.6,1001.2,485.4,1000.5,485.8L1000.5,485.8z"/>
<path class="st4" d="M991.1,490.5c-0.7,0.3-1.3,0.5-2,0.7c-0.7,0.3-1.4-0.1-1.7-0.7c-0.2-0.6,0-1.2,0.5-1.6c0.6-0.4,1.2-0.8,1.8-1.2
	c0.7-0.5,1.7-0.3,2.1,0.4s0.3,1.7-0.4,2.1c0,0,0,0-0.1,0C991.3,490.4,991.2,490.4,991.1,490.5z"/>
<path class="st4" d="M1165,363.5c0.3-0.7,0.6-1.3,0.9-2c0.1-0.3,0.5-0.4,0.8-0.3c0.3,0.1,0.4,0.5,0.3,0.8c0,0,0,0,0,0
	c0,0.1-0.1,0.1-0.2,0.2C1166.3,362.7,1165.7,363.1,1165,363.5z"/>
<path class="st4" d="M1170.6,354.4c0.4-0.6,0.8-1.1,1.3-1.7c0.6-0.7,1.7-0.9,2.5-0.2c0.7,0.6,0.9,1.7,0.3,2.4c0,0,0,0.1-0.1,0.1
	c-0.5,0.5-0.9,1-1.4,1.5c-0.6,0.6-1.7,0.6-2.3,0C1170.2,356,1170.1,355.1,1170.6,354.4z"/>
<path class="st4" d="M1177.5,346.6c0.5-0.5,1-1,1.5-1.4c0.5-0.5,1.3-0.5,1.8,0c0.4,0.4,0.5,1.1,0.1,1.7c-0.4,0.6-0.8,1.2-1.2,1.7
	c-0.5,0.7-1.4,0.9-2.1,0.4c-0.7-0.5-0.9-1.4-0.4-2.1C1177.3,346.7,1177.4,346.6,1177.5,346.6L1177.5,346.6z"/>
<path class="st4" d="M1177.8,377.4c0.4-0.6,0.9-1.1,1.4-1.7c0.2-0.2,0.6-0.3,0.8-0.1c0.2,0.2,0.3,0.6,0.1,0.8
	c-0.1,0.1-0.1,0.1-0.2,0.2C1179.2,376.9,1178.5,377.2,1177.8,377.4z"/>
<path class="st4" d="M1185.4,370c0.5-0.5,1.1-0.9,1.6-1.3c0.8-0.6,1.9-0.5,2.5,0.3c0.6,0.8,0.5,1.9-0.3,2.5c0,0,0,0-0.1,0.1
	c0,0-0.1,0-0.1,0.1c-0.6,0.4-1.2,0.8-1.8,1.1c-0.8,0.5-1.8,0.2-2.3-0.6C1184.6,371.4,1184.7,370.5,1185.4,370L1185.4,370z"/>
<path class="st4" d="M1194,364.1c0.6-0.4,1.2-0.7,1.8-1c0.6-0.4,1.4-0.1,1.8,0.5c0.3,0.5,0.2,1.2-0.3,1.6c-0.5,0.5-1,0.9-1.6,1.4
	c-0.7,0.5-1.6,0.4-2.2-0.2c-0.5-0.6-0.5-1.6,0.2-2.1C1193.8,364.2,1193.9,364.1,1194,364.1z"/>
<path class="st4" d="M1019.4,496.7c-0.4,0.6-0.9,1.1-1.4,1.7c-0.2,0.2-0.6,0.3-0.8,0.1c-0.2-0.2-0.3-0.6-0.1-0.8
	c0.1-0.1,0.1-0.1,0.2-0.2C1018,497.1,1018.7,496.9,1019.4,496.7z"/>
<path class="st4" d="M1011.8,504.1c-0.5,0.5-1.1,0.9-1.6,1.3c-0.8,0.6-1.9,0.4-2.5-0.4c-0.5-0.8-0.4-1.8,0.3-2.4l0.1-0.1
	c0.6-0.4,1.2-0.8,1.8-1.1c0.8-0.5,1.8-0.2,2.3,0.6C1012.6,502.6,1012.4,503.5,1011.8,504.1L1011.8,504.1z"/>
<path class="st4" d="M1003.2,510c-0.6,0.4-1.2,0.7-1.8,1c-0.6,0.4-1.4,0.2-1.8-0.5c-0.3-0.5-0.2-1.2,0.3-1.6c0.5-0.5,1-0.9,1.6-1.4
	c0.6-0.6,1.6-0.5,2.2,0.1c0.6,0.6,0.5,1.6-0.1,2.2c0,0,0,0,0,0C1003.4,509.9,1003.3,510,1003.2,510z"/>
<path class="st4" d="M1032.1,510.6c-0.3,0.7-0.6,1.3-0.9,2c-0.2,0.3-0.5,0.4-0.8,0.2c-0.3-0.1-0.4-0.5-0.2-0.7
	c0-0.1,0.1-0.1,0.2-0.2C1030.9,511.4,1031.5,511,1032.1,510.6z"/>
<path class="st4" d="M1026.6,519.6c-0.4,0.6-0.8,1.1-1.3,1.7c-0.6,0.8-1.7,0.9-2.5,0.3c-0.8-0.6-0.9-1.7-0.3-2.5c0,0,0,0,0,0
	c0,0,0-0.1,0.1-0.1c0.5-0.5,0.9-1,1.4-1.5c0.7-0.6,1.7-0.6,2.3,0C1027,518.1,1027.1,519,1026.6,519.6L1026.6,519.6z"/>
<path class="st4" d="M1019.7,527.5c-0.5,0.5-1,1-1.5,1.4c-0.5,0.5-1.3,0.5-1.8,0c-0.4-0.4-0.5-1.1-0.1-1.7c0.4-0.6,0.8-1.2,1.2-1.7
	c0.5-0.7,1.4-0.9,2.1-0.5c0.7,0.5,0.9,1.4,0.5,2.1c0,0,0,0.1-0.1,0.1C1019.8,527.4,1019.8,527.4,1019.7,527.5z"/>
<path class="st4" d="M1132.1,343.7c0-0.7,0.1-1.4,0.1-2.2c0-0.3,0.3-0.5,0.6-0.5c0.3,0,0.5,0.3,0.5,0.6c0,0.1,0,0.2-0.1,0.2
	C1132.9,342.5,1132.5,343.1,1132.1,343.7z"/>
<path class="st4" d="M1133.8,333.3c0.2-0.7,0.4-1.4,0.6-2c0.3-0.9,1.2-1.5,2.2-1.2c0.9,0.3,1.5,1.2,1.2,2.2c0,0,0,0.1,0,0.1
	c0,0,0,0.1,0,0.1c-0.2,0.7-0.5,1.3-0.8,2c-0.4,0.8-1.3,1.2-2.2,0.9C1134,334.9,1133.6,334.1,1133.8,333.3L1133.8,333.3z"/>
<path class="st4" d="M1137.1,323.4c0.3-0.6,0.6-1.3,0.9-1.9c0.3-0.7,1.1-1,1.7-0.7c0.6,0.2,0.9,0.9,0.8,1.5
	c-0.1,0.7-0.3,1.4-0.4,2.1c-0.2,0.8-1,1.3-1.8,1.1c-0.8-0.2-1.3-1-1.1-1.8C1137.1,323.6,1137.1,323.5,1137.1,323.4z"/>
<path class="st4" d="M1149.2,351.8c0.2-0.7,0.4-1.4,0.6-2.1c0.1-0.3,0.4-0.5,0.7-0.4c0.3,0.1,0.5,0.4,0.4,0.7c0,0.1-0.1,0.2-0.1,0.2
	C1150.3,350.8,1149.7,351.3,1149.2,351.8z"/>
<path class="st4" d="M1153.4,342c0.3-0.6,0.7-1.2,1-1.8c0.5-0.8,1.6-1.1,2.4-0.6c0.8,0.5,1.1,1.6,0.6,2.4c0,0,0,0.1-0.1,0.1
	c-0.4,0.6-0.8,1.2-1.2,1.7c-0.6,0.7-1.6,0.9-2.3,0.3C1153.2,343.6,1153,342.8,1153.4,342L1153.4,342z"/>
<path class="st4" d="M1159,333.3c0.4-0.6,0.9-1.1,1.3-1.6c0.4-0.6,1.3-0.7,1.8-0.2c0.5,0.4,0.7,1.1,0.4,1.6
	c-0.3,0.6-0.6,1.3-0.9,1.9c-0.4,0.7-1.3,1-2.1,0.6c-0.7-0.4-1-1.3-0.7-2C1158.9,333.4,1159,333.4,1159,333.3z"/>
<path class="st4" d="M1048,522.3c-0.2,0.7-0.4,1.4-0.6,2.1c-0.1,0.3-0.4,0.5-0.7,0.4s-0.5-0.4-0.4-0.7c0-0.1,0.1-0.2,0.1-0.2
	C1046.9,523.3,1047.4,522.8,1048,522.3z"/>
<path class="st4" d="M1043.8,532c-0.3,0.6-0.7,1.2-1,1.8c-0.5,0.8-1.6,1.1-2.4,0.6c-0.8-0.5-1.1-1.6-0.6-2.4c0,0,0-0.1,0.1-0.1
	c0.4-0.6,0.8-1.2,1.2-1.7c0.6-0.7,1.6-0.9,2.3-0.3C1044,530.4,1044.2,531.3,1043.8,532L1043.8,532z"/>
<path class="st4" d="M1038.1,540.8c-0.4,0.6-0.9,1.1-1.3,1.6c-0.4,0.6-1.3,0.7-1.8,0.2c-0.5-0.4-0.6-1.1-0.4-1.6
	c0.3-0.6,0.6-1.3,0.9-1.9c0.4-0.8,1.3-1.1,2.1-0.7c0.8,0.4,1.1,1.3,0.7,2.1l0,0C1038.2,540.7,1038.2,540.7,1038.1,540.8z"/>
<path class="st4" d="M1065.1,530.4c0,0.7-0.1,1.4-0.1,2.2c0,0.3-0.3,0.6-0.6,0.5c-0.3,0-0.6-0.3-0.5-0.6c0,0,0,0,0,0
	c0-0.1,0-0.2,0.1-0.2C1064.3,531.6,1064.7,531,1065.1,530.4z"/>
<path class="st4" d="M1063.4,540.8c-0.2,0.7-0.4,1.3-0.6,2c-0.3,0.9-1.2,1.5-2.2,1.2c-0.9-0.3-1.5-1.2-1.2-2.2c0,0,0-0.1,0-0.1
	c0,0,0-0.1,0-0.1c0.2-0.7,0.5-1.3,0.8-2c0.4-0.8,1.3-1.2,2.2-0.9C1063.2,539.2,1063.6,540,1063.4,540.8L1063.4,540.8z"/>
<path class="st4" d="M1060,550.7c-0.3,0.6-0.6,1.3-0.9,1.9c-0.3,0.7-1.1,1-1.7,0.7c-0.6-0.2-0.9-0.9-0.8-1.5
	c0.1-0.7,0.3-1.4,0.4-2.1c0.2-0.8,1-1.3,1.9-1.1c0.8,0.2,1.3,1,1.1,1.8C1060.1,550.5,1060.1,550.6,1060,550.7z"/>
<path class="st4" d="M1093.9,338c-0.3-0.7-0.5-1.4-0.7-2c-0.1-0.3,0.1-0.6,0.4-0.7c0.3-0.1,0.6,0.1,0.7,0.4c0,0.1,0,0.2,0,0.3
	C1094.2,336.6,1094.1,337.3,1093.9,338z"/>
<path class="st4" d="M1091.5,327.7c-0.1-0.7-0.2-1.4-0.3-2.1c-0.1-1,0.6-1.8,1.5-2c1-0.1,1.8,0.6,2,1.5c0,0,0,0.1,0,0.1
	c0,0,0,0.1,0,0.1c0,0.7,0.1,1.4,0.1,2.1c0,0.9-0.8,1.7-1.7,1.6C1092.3,329.1,1091.6,328.5,1091.5,327.7L1091.5,327.7z"/>
<path class="st4" d="M1090.8,317.3c0-0.7,0.1-1.4,0.1-2.1c0-0.7,0.6-1.3,1.3-1.3c0.6,0,1.1,0.5,1.3,1.1c0.1,0.7,0.3,1.4,0.4,2.1
	c0.1,0.8-0.4,1.6-1.3,1.8s-1.6-0.4-1.8-1.3C1090.8,317.5,1090.8,317.4,1090.8,317.3z"/>
<path class="st4" d="M1112.8,338.9c-0.1-0.7-0.2-1.4-0.2-2.2c0-0.3,0.2-0.6,0.5-0.6c0.3,0,0.6,0.2,0.6,0.5c0,0.1,0,0.2,0,0.3
	C1113.4,337.6,1113.1,338.3,1112.8,338.9z"/>
<path class="st4" d="M1113,328.3c0.1-0.7,0.2-1.4,0.3-2.1c0.2-1,1.1-1.6,2-1.5c0.9,0.1,1.6,1,1.5,2c0,0,0,0.1,0,0.1
	c-0.1,0.7-0.3,1.4-0.5,2c-0.2,0.9-1.1,1.4-2,1.2C1113.4,329.9,1112.9,329.1,1113,328.3L1113,328.3z"/>
<path class="st4" d="M1114.9,318.1c0.2-0.7,0.4-1.3,0.6-2c0.2-0.7,0.9-1.1,1.6-0.9c0.6,0.2,1,0.7,1,1.4c0,0.7-0.1,1.4-0.1,2.1
	c-0.1,0.8-0.8,1.5-1.7,1.4c-0.8-0.1-1.4-0.8-1.4-1.6C1114.8,318.2,1114.8,318.2,1114.9,318.1z"/>
<path class="st4" d="M1084.4,535.2c0.1,0.7,0.2,1.4,0.2,2.2c0,0.3-0.2,0.6-0.5,0.6c-0.3,0-0.6-0.2-0.6-0.5c0-0.1,0-0.2,0-0.2
	C1083.7,536.5,1084,535.8,1084.4,535.2z"/>
<path class="st4" d="M1084.2,545.8c-0.1,0.7-0.2,1.4-0.3,2.1c-0.1,1-1,1.6-2,1.5s-1.6-1-1.5-2c0,0,0,0,0,0c0,0,0-0.1,0-0.1
	c0.1-0.7,0.3-1.4,0.5-2c0.2-0.9,1.1-1.4,2-1.2C1083.8,544.2,1084.3,544.9,1084.2,545.8L1084.2,545.8z"/>
<path class="st4" d="M1082.3,556c-0.2,0.7-0.4,1.3-0.6,2c-0.2,0.7-0.9,1.1-1.6,0.9c-0.6-0.2-1-0.7-1-1.4c0-0.7,0.1-1.4,0.1-2.1
	c0.1-0.8,0.8-1.5,1.6-1.4c0.8,0.1,1.5,0.8,1.4,1.6C1082.3,555.8,1082.3,555.9,1082.3,556z"/>
<path class="st4" d="M1103.3,536.1c0.3,0.7,0.5,1.4,0.7,2c0.1,0.3-0.1,0.6-0.4,0.7c-0.3,0.1-0.6-0.1-0.7-0.4c0-0.1,0-0.2,0-0.3
	C1103,537.5,1103.1,536.8,1103.3,536.1z"/>
<path class="st4" d="M1105.7,546.4c0.1,0.7,0.2,1.4,0.3,2.1c0.1,1-0.7,1.8-1.6,1.9c-0.9,0.1-1.8-0.6-1.9-1.5c0,0,0-0.1,0-0.1
	c0-0.7-0.1-1.4-0.1-2.1c0-0.9,0.8-1.7,1.7-1.6C1104.9,545,1105.5,545.6,1105.7,546.4L1105.7,546.4z"/>
<path class="st4" d="M1106.3,556.8c0,0.7-0.1,1.4-0.1,2.1c0,0.7-0.6,1.3-1.3,1.3c-0.6,0-1.2-0.5-1.3-1.1c-0.1-0.7-0.3-1.4-0.4-2.1
	c-0.1-0.8,0.4-1.6,1.3-1.8s1.6,0.4,1.8,1.3C1106.3,556.6,1106.3,556.7,1106.3,556.8L1106.3,556.8z"/>
<path class="st4" d="M1056.3,347.4c-0.5-0.5-1-1.1-1.4-1.6c-0.2-0.2-0.2-0.6,0.1-0.8c0.2-0.2,0.6-0.2,0.8,0.1
	c0.1,0.1,0.1,0.1,0.1,0.2C1056,345.9,1056.2,346.6,1056.3,347.4z"/>
<path class="st4" d="M1050.1,338.8c-0.4-0.6-0.7-1.2-1-1.8c-0.5-0.8-0.2-1.9,0.7-2.4c0.8-0.5,1.9-0.2,2.4,0.7c0,0,0,0,0,0
	c0,0,0,0.1,0,0.1c0.3,0.6,0.6,1.3,0.8,1.9c0.3,0.9-0.1,1.8-0.9,2.2C1051.4,339.8,1050.5,339.5,1050.1,338.8z"/>
<path class="st4" d="M1045.5,329.4c-0.3-0.7-0.5-1.3-0.7-2c-0.3-0.7,0.1-1.4,0.7-1.7c0.6-0.2,1.2,0,1.6,0.5c0.4,0.6,0.8,1.2,1.2,1.8
	c0.5,0.7,0.2,1.7-0.5,2.1c-0.7,0.5-1.7,0.2-2.1-0.5l0,0C1045.6,329.6,1045.5,329.5,1045.5,329.4z"/>
<path class="st4" d="M1074.1,341c-0.4-0.6-0.7-1.3-1-1.9c-0.1-0.3,0-0.6,0.3-0.8c0.3-0.1,0.6,0,0.8,0.3c0,0.1,0.1,0.2,0.1,0.3
	C1074.2,339.5,1074.1,340.2,1074.1,341z"/>
<path class="st4" d="M1070.2,331.1c-0.2-0.7-0.4-1.3-0.6-2c-0.2-0.9,0.3-1.9,1.3-2.1c0.9-0.2,1.9,0.3,2.1,1.3c0,0,0,0.1,0,0.1
	c0.1,0.7,0.3,1.4,0.4,2.1c0.1,0.9-0.5,1.7-1.4,1.9C1071.2,332.4,1070.4,331.9,1070.2,331.1L1070.2,331.1z"/>
<path class="st4" d="M1068,320.9c-0.1-0.7-0.2-1.4-0.2-2.1c-0.1-0.7,0.4-1.4,1.1-1.5c0.6-0.1,1.2,0.3,1.4,0.9c0.2,0.7,0.5,1.3,0.7,2
	c0.3,0.8-0.2,1.7-1,1.9s-1.7-0.2-1.9-1C1068,321.1,1068,321,1068,320.9L1068,320.9z"/>
<path class="st4" d="M1123.1,533.1c0.4,0.6,0.7,1.3,1,1.9c0.1,0.3,0,0.6-0.3,0.8c-0.3,0.1-0.6,0-0.8-0.3c0-0.1-0.1-0.2-0.1-0.3
	C1123,534.6,1123,533.8,1123.1,533.1z"/>
<path class="st4" d="M1127,542.9c0.2,0.7,0.4,1.3,0.6,2c0.3,0.9-0.3,1.9-1.2,2.2c-0.9,0.3-1.9-0.3-2.2-1.2c0,0,0,0,0,0
	c0,0,0-0.1,0-0.1c-0.1-0.7-0.3-1.4-0.4-2.1c-0.1-0.9,0.5-1.8,1.4-1.9C1126,541.7,1126.8,542.2,1127,542.9L1127,542.9z"/>
<path class="st4" d="M1129.2,553.2c0.1,0.7,0.2,1.4,0.2,2.1c0.1,0.7-0.4,1.4-1.1,1.5c-0.6,0.1-1.2-0.3-1.4-0.9
	c-0.2-0.7-0.5-1.3-0.7-2c-0.2-0.8,0.2-1.7,1-1.9c0.8-0.2,1.6,0.2,1.9,1C1129.2,553,1129.2,553.1,1129.2,553.2z"/>
<path class="st4" d="M1140.9,526.7c0.5,0.5,1,1.1,1.4,1.6c0.2,0.2,0.2,0.6,0,0.8c-0.2,0.2-0.6,0.2-0.8,0c0,0,0,0,0,0
	c-0.1-0.1-0.1-0.1-0.1-0.2C1141.2,528.1,1141,527.4,1140.9,526.7z"/>
<path class="st4" d="M1147.1,535.3c0.4,0.6,0.7,1.2,1,1.8c0.5,0.9,0.1,1.9-0.7,2.4s-1.9,0.1-2.4-0.7c0,0,0-0.1,0-0.1
	c-0.3-0.6-0.6-1.3-0.9-1.9c-0.3-0.9,0.1-1.8,0.9-2.2C1145.8,534.3,1146.7,534.6,1147.1,535.3L1147.1,535.3z"/>
<path class="st4" d="M1151.7,544.7c0.3,0.7,0.5,1.3,0.7,2c0.3,0.7-0.1,1.4-0.7,1.7c-0.6,0.2-1.2,0-1.6-0.5c-0.4-0.6-0.8-1.2-1.2-1.8
	c-0.5-0.7-0.2-1.7,0.5-2.1s1.7-0.2,2.1,0.5C1151.6,544.5,1151.6,544.6,1151.7,544.7z"/>
<path class="st4" d="M1024.6,371.1c-0.7-0.3-1.3-0.6-2-0.9c-0.3-0.1-0.4-0.5-0.3-0.8s0.5-0.4,0.8-0.3c0,0,0,0,0,0
	c0.1,0,0.1,0.1,0.2,0.2C1023.8,369.9,1024.2,370.4,1024.6,371.1z"/>
<path class="st4" d="M1015.5,365.6c-0.6-0.4-1.1-0.8-1.7-1.3c-0.8-0.6-0.9-1.7-0.3-2.5c0.6-0.8,1.7-0.9,2.5-0.3l0.1,0.1
	c0.5,0.5,1,0.9,1.5,1.4c0.7,0.6,0.7,1.7,0,2.3C1017.1,366,1016.2,366.1,1015.5,365.6z"/>
<path class="st4" d="M1007.6,358.7c-0.5-0.5-1-1-1.4-1.5c-0.5-0.5-0.5-1.3,0-1.8c0.4-0.4,1.1-0.5,1.6-0.1c0.6,0.4,1.2,0.8,1.7,1.2
	c0.7,0.5,0.9,1.4,0.4,2.1c-0.5,0.7-1.4,0.9-2.1,0.4c0,0,0,0-0.1,0C1007.8,358.9,1007.7,358.8,1007.6,358.7z"/>
<path class="st4" d="M1038.5,358.2c-0.6-0.4-1.1-0.9-1.7-1.4c-0.2-0.2-0.3-0.6-0.1-0.8c0.2-0.2,0.6-0.3,0.8-0.1c0,0,0,0,0,0
	c0.1,0.1,0.1,0.1,0.2,0.2C1038,356.8,1038.2,357.5,1038.5,358.2z"/>
<path class="st4" d="M1031,350.7c-0.5-0.5-0.9-1.1-1.3-1.6c-0.6-0.8-0.4-1.9,0.4-2.5c0.8-0.6,1.8-0.4,2.4,0.3l0.1,0.1
	c0.4,0.6,0.8,1.2,1.1,1.8c0.5,0.8,0.2,1.8-0.6,2.3C1032.4,351.5,1031.5,351.3,1031,350.7L1031,350.7z"/>
<path class="st4" d="M1025,342.1c-0.4-0.6-0.7-1.2-1-1.8c-0.4-0.6-0.2-1.4,0.5-1.8c0.5-0.3,1.2-0.2,1.6,0.3c0.5,0.5,0.9,1,1.4,1.6
	c0.6,0.6,0.5,1.6-0.1,2.2s-1.6,0.5-2.2-0.1c0,0,0,0,0,0C1025.1,342.3,1025,342.2,1025,342.1z"/>
<path class="st4" d="M1158.7,515.9c0.6,0.4,1.1,0.9,1.7,1.4c0.2,0.2,0.3,0.6,0.1,0.8c-0.2,0.2-0.6,0.3-0.8,0.1
	c-0.1-0.1-0.1-0.1-0.2-0.2C1159.2,517.2,1158.9,516.6,1158.7,515.9z"/>
<path class="st4" d="M1166.2,523.4c0.5,0.5,0.9,1.1,1.3,1.6c0.6,0.8,0.4,1.9-0.3,2.5c-0.8,0.6-1.9,0.4-2.5-0.3c0,0,0-0.1-0.1-0.1
	c-0.4-0.6-0.8-1.2-1.1-1.8c-0.5-0.8-0.2-1.8,0.6-2.3C1164.7,522.6,1165.6,522.8,1166.2,523.4L1166.2,523.4z"/>
<path class="st4" d="M1172.2,532c0.4,0.6,0.7,1.2,1,1.8c0.4,0.6,0.2,1.4-0.5,1.8c-0.5,0.3-1.2,0.2-1.6-0.3c-0.5-0.5-0.9-1-1.4-1.6
	c-0.5-0.6-0.5-1.6,0.2-2.2c0.6-0.5,1.6-0.5,2.1,0.1C1172.1,531.8,1172.1,531.9,1172.2,532z"/>
<path class="st4" d="M1172.6,503c0.7,0.3,1.3,0.6,2,0.9c0.3,0.1,0.4,0.5,0.2,0.8c-0.1,0.3-0.5,0.4-0.8,0.2c-0.1,0-0.1-0.1-0.2-0.2
	C1173.4,504.2,1173,503.6,1172.6,503z"/>
<path class="st4" d="M1181.6,508.5c0.6,0.4,1.1,0.8,1.7,1.3c0.8,0.6,0.9,1.7,0.3,2.5c-0.6,0.8-1.7,0.9-2.5,0.3c0,0,0,0-0.1,0
	c0,0-0.1,0-0.1-0.1c-0.5-0.5-1-0.9-1.5-1.4c-0.7-0.6-0.7-1.7,0-2.3C1180.1,508.1,1181,508,1181.6,508.5L1181.6,508.5z"/>
<path class="st4" d="M1189.6,515.3c0.5,0.5,1,1,1.4,1.5c0.5,0.5,0.5,1.3,0,1.8c-0.4,0.4-1.1,0.5-1.7,0.1c-0.6-0.4-1.2-0.8-1.7-1.2
	c-0.7-0.5-0.8-1.5-0.3-2.1c0.5-0.7,1.4-0.8,2.1-0.4C1189.4,515.2,1189.5,515.3,1189.6,515.3z"/>
<path class="st3" d="M268.9,291.9v-58.6h15.9v22.9h21.1v-22.9h15.9v58.6h-15.9V269h-21.1v22.9H268.9z"/>
<path class="st3" d="M341.9,292.6c-2.5,0-5.1-0.4-7.4-1.4c-2.1-0.9-3.8-2.3-5.1-4.2c-1.3-2.2-1.9-4.7-1.8-7.2
	c-0.1-2.1,0.4-4.2,1.2-6.2c0.8-1.7,2-3.1,3.4-4.2c1.6-1.1,3.3-2,5.1-2.5c2.1-0.6,4.2-1,6.3-1.1c2-0.1,4-0.4,5.9-0.7
	c1.2-0.1,2.3-0.5,3.2-1.2c0.6-0.5,1-1.2,1-2v-0.1c0-1-0.4-2-1.3-2.6c-1-0.6-2.2-1-3.4-0.9c-1.3-0.1-2.6,0.3-3.7,1
	c-1,0.7-1.6,1.8-1.7,3h-14.5c0.2-2.7,1.1-5.2,2.6-7.4c1.7-2.4,4-4.3,6.7-5.4c3.5-1.5,7.2-2.2,10.9-2c2.9,0,5.7,0.3,8.5,1.1
	c2.3,0.6,4.5,1.7,6.4,3.1c1.7,1.2,3,2.8,4,4.6c0.9,1.8,1.4,3.7,1.4,5.7v30.1h-14.8v-6.2h-0.3c-0.8,1.5-1.9,2.9-3.2,4
	c-1.3,1-2.7,1.8-4.3,2.2C345.4,292.4,343.7,292.6,341.9,292.6z M347,282.6c1.2,0,2.3-0.2,3.4-0.7c1-0.5,1.9-1.2,2.6-2.1
	c0.7-1,1-2.2,1-3.4v-3.7c-0.4,0.2-0.9,0.3-1.3,0.5c-0.5,0.2-1,0.3-1.5,0.4c-0.5,0.1-1.1,0.3-1.7,0.4s-1.2,0.2-1.8,0.3
	c-1,0.1-2.1,0.4-3,0.9c-0.7,0.4-1.3,0.9-1.7,1.6c-0.4,0.6-0.6,1.3-0.6,2.1c-0.1,1.1,0.4,2.1,1.3,2.8
	C344.7,282.3,345.9,282.7,347,282.6L347,282.6z"/>
<path class="st3" d="M377.3,308.4v-60.5H393v7.7h0.3c0.6-1.5,1.4-2.9,2.5-4.1c1.1-1.3,2.6-2.3,4.1-3c1.8-0.8,3.8-1.2,5.7-1.1
	c2.9,0,5.8,0.8,8.3,2.3c2.8,1.8,5,4.3,6.4,7.3c1.6,3.3,2.5,7.6,2.5,12.9c0.1,4.3-0.7,8.6-2.4,12.6c-1.3,3.1-3.5,5.6-6.3,7.5
	c-2.6,1.6-5.6,2.5-8.6,2.5c-1.9,0-3.8-0.3-5.5-1c-1.5-0.6-3-1.6-4.1-2.8c-1.1-1.2-2-2.5-2.6-4h-0.2v23.7L377.3,308.4z M392.7,269.9
	c0,1.9,0.2,3.8,0.8,5.5c0.5,1.4,1.3,2.6,2.4,3.6c2.2,1.7,5.2,1.7,7.4,0c1.1-1,1.9-2.2,2.3-3.6c1.1-3.7,1.1-7.5,0-11.2
	c-0.4-1.4-1.2-2.6-2.3-3.6c-1.1-0.8-2.4-1.3-3.7-1.2c-1.4,0-2.7,0.4-3.7,1.2c-1.1,0.9-2,2.2-2.4,3.6
	C393,266.1,392.7,268,392.7,269.9z"/>
<path class="st3" d="M429.5,308.4v-60.5h15.7v7.7h0.3c0.6-1.5,1.4-2.9,2.5-4.1c1.1-1.3,2.6-2.3,4.1-3c1.8-0.8,3.8-1.2,5.7-1.1
	c2.9,0,5.8,0.8,8.3,2.3c2.8,1.8,5,4.3,6.4,7.3c1.7,3.3,2.5,7.6,2.5,12.9c0.1,4.3-0.7,8.6-2.4,12.6c-1.3,3.1-3.5,5.6-6.3,7.5
	c-2.6,1.6-5.6,2.5-8.6,2.5c-1.9,0-3.8-0.3-5.5-1c-1.5-0.6-3-1.6-4.1-2.8c-1.1-1.2-2-2.5-2.6-4h-0.2v23.7L429.5,308.4z M445,269.9
	c0,1.9,0.2,3.8,0.8,5.5c0.5,1.4,1.3,2.6,2.4,3.6c2.2,1.7,5.2,1.7,7.4,0c1.1-0.9,1.9-2.2,2.4-3.6c1.1-3.7,1.1-7.5,0-11.2
	c-0.4-1.4-1.2-2.6-2.3-3.6c-1.1-0.8-2.4-1.3-3.7-1.2c-1.4,0-2.7,0.4-3.7,1.2c-1.1,0.9-1.9,2.2-2.4,3.6
	C445.2,266.1,444.9,268,445,269.9z"/>
<path class="st3" d="M490,308.3c-1.7,0-3.5-0.1-5.2-0.4c-1.5-0.2-2.9-0.6-4.3-1.1l3.4-11.2c1.6,0.6,3.3,0.9,5,0.9
	c1.3,0,2.4-0.7,3-1.8l0.3-0.8l-15.5-45.9h16.5l7.1,30.5h0.5l7.2-30.5h16.6l-16,47.6c-0.8,2.4-2,4.6-3.5,6.5c-1.6,2-3.6,3.6-6,4.6
	C496.3,307.8,493.1,308.4,490,308.3z"/>
<path class="st3" d="M595.7,233.2v58.6h-13.3l-21.2-30.8h-0.3v30.8h-15.9v-58.6h13.5l20.8,30.7h0.5v-30.7H595.7z"/>
<path class="st3" d="M624.5,292.7c-4.2,0.1-8.4-0.8-12.1-2.7c-3.3-1.7-6.1-4.5-7.8-7.8c-1.9-3.8-2.9-8-2.7-12.2
	c-0.1-4.1,0.8-8.2,2.7-11.9c1.8-3.3,4.5-6.1,7.8-7.9c3.6-2,7.7-2.9,11.8-2.8c3.1,0,6.1,0.5,9,1.5c2.6,1,5,2.5,6.9,4.5
	c2,2,3.5,4.5,4.4,7.1c1.1,3,1.6,6.2,1.5,9.4v3.7h-39.3v-8.7h24.7c0-1.2-0.3-2.3-1-3.3c-0.6-1-1.5-1.7-2.5-2.3
	c-1.1-0.6-2.3-0.8-3.5-0.8c-1.2,0-2.4,0.3-3.5,0.8c-1,0.5-1.9,1.3-2.6,2.2c-0.7,1-1,2.2-1,3.4v9.4c0,1.3,0.3,2.6,0.9,3.8
	c0.6,1.1,1.5,2,2.5,2.6c1.2,0.7,2.6,1,4,0.9c1,0,2-0.1,3-0.5c0.9-0.3,1.7-0.7,2.3-1.3c0.6-0.6,1.1-1.3,1.4-2.1h14.4
	c-0.4,2.9-1.7,5.7-3.5,7.9c-2,2.3-4.5,4.1-7.3,5.2C631.8,292.1,628.2,292.8,624.5,292.7z"/>
<path class="st3" d="M659.7,291.9l-11-44h15.8l5,26.8h0.3l5.6-26.8h15.3l5.8,26.6h0.3l4.8-26.6h15.8l-11,44h-17l-6.2-23.6h-0.5
	l-6.2,23.6H659.7z"/>
<path class="st3" d="M735.9,233.2h17.8l11.5,23.8h0.5l11.5-23.8h17.8l-21.5,40.2v18.4h-15.8v-18.4L735.9,233.2z"/>
<path class="st3" d="M810.1,292.7c-4.2,0.1-8.4-0.8-12.1-2.7c-3.3-1.7-6.1-4.5-7.8-7.8c-1.9-3.8-2.9-8-2.7-12.2
	c-0.1-4.1,0.8-8.2,2.7-11.9c1.8-3.3,4.5-6.1,7.8-7.9c3.6-2,7.7-2.9,11.8-2.8c3.1,0,6.1,0.5,9,1.5c2.6,1,5,2.5,6.9,4.5
	c2,2,3.5,4.5,4.4,7.1c1.1,3,1.6,6.2,1.5,9.4v3.7h-39.3v-8.7h24.7c0-1.2-0.3-2.3-1-3.3c-0.6-1-1.5-1.7-2.5-2.3
	c-1.1-0.6-2.3-0.8-3.5-0.8c-1.2,0-2.4,0.3-3.5,0.8c-1,0.5-1.9,1.3-2.6,2.2c-0.7,1-1,2.2-1,3.4v9.4c0,1.3,0.3,2.6,0.9,3.8
	c0.6,1.1,1.5,2,2.5,2.6c1.2,0.7,2.6,1,4,0.9c1,0,2-0.1,3-0.5c0.9-0.3,1.7-0.7,2.3-1.3c0.6-0.6,1.1-1.3,1.4-2.1h14.4
	c-0.4,2.9-1.7,5.7-3.5,7.9c-2,2.3-4.5,4.1-7.3,5.2C817.3,292.1,813.7,292.8,810.1,292.7z"/>
<path class="st3" d="M850.3,292.6c-2.5,0-5.1-0.4-7.4-1.4c-2.1-0.9-3.8-2.3-5.1-4.2c-1.3-2.2-1.9-4.7-1.8-7.2
	c-0.1-2.1,0.4-4.2,1.2-6.2c0.8-1.7,2-3.1,3.4-4.2c1.6-1.1,3.3-2,5.1-2.5c2.1-0.6,4.2-1,6.3-1.1c2-0.1,4-0.4,5.9-0.7
	c1.2-0.1,2.3-0.5,3.2-1.2c0.6-0.5,1-1.2,1-2v-0.1c0-1-0.5-2-1.3-2.6c-1-0.6-2.2-1-3.4-0.9c-1.3-0.1-2.6,0.3-3.7,1
	c-1,0.7-1.6,1.8-1.7,3h-14.5c0.2-2.7,1.1-5.2,2.6-7.4c1.7-2.4,4-4.3,6.7-5.4c3.5-1.5,7.2-2.2,10.9-2c2.9,0,5.7,0.3,8.5,1.1
	c2.3,0.6,4.5,1.7,6.4,3.1c1.7,1.2,3,2.8,4,4.6c0.9,1.7,1.4,3.7,1.4,5.7v30.1h-14.8v-6.2H863c-0.8,1.5-1.9,2.9-3.2,4
	c-1.3,1-2.7,1.8-4.3,2.2C853.8,292.4,852,292.6,850.3,292.6z M855.4,282.6c1.2,0,2.3-0.2,3.4-0.7c1-0.5,1.9-1.2,2.6-2.1
	c0.7-1,1-2.2,1-3.4v-3.7c-0.4,0.2-0.9,0.3-1.3,0.5s-1,0.3-1.5,0.4c-0.5,0.1-1.1,0.3-1.7,0.4s-1.2,0.2-1.8,0.3c-1,0.1-2.1,0.4-3,0.9
	c-0.7,0.4-1.3,0.9-1.7,1.6c-0.4,0.6-0.6,1.3-0.6,2.1c-0.1,1.1,0.4,2.1,1.3,2.8C853.1,282.3,854.2,282.7,855.4,282.6L855.4,282.6z"/>
<path class="st3" d="M885.7,291.9v-44H901v8.4h0.5c0.5-2.6,1.9-5,3.8-6.8c1.7-1.4,3.9-2.2,6.1-2.1c0.7,0,1.4,0.1,2,0.2
	c0.7,0.1,1.3,0.3,2,0.4v13.5c-0.9-0.3-1.9-0.5-2.9-0.6c-1-0.1-2-0.2-2.9-0.2c-1.5,0-2.9,0.3-4.2,1c-1.2,0.7-2.2,1.7-2.9,2.9
	c-0.7,1.3-1.1,2.9-1.1,4.4v22.9L885.7,291.9z"/>
<path class="st3" d="M936.5,291.9v-11.5l21.9-18.1c1.3-1.1,2.5-2.2,3.7-3.4c1-1,1.8-2.1,2.4-3.3c0.6-1.2,0.9-2.5,0.8-3.8
	c0-1.4-0.3-2.7-1-3.9c-0.6-1.1-1.5-1.9-2.6-2.5c-1.2-0.6-2.5-0.9-3.9-0.9c-1.3,0-2.7,0.3-3.9,0.9c-1.1,0.6-2,1.5-2.6,2.6
	c-0.6,1.3-1,2.7-0.9,4.2h-15.1c-0.1-3.7,0.9-7.4,2.8-10.7c1.9-3,4.6-5.4,7.8-6.9c3.7-1.7,7.8-2.5,11.9-2.4c4.2-0.1,8.3,0.7,12.2,2.2
	c3.2,1.3,6,3.5,8,6.3c1.9,2.8,2.9,6.1,2.8,9.5c0,2.3-0.5,4.6-1.4,6.7c-1.3,2.7-3,5.2-5,7.4c-3.2,3.4-6.7,6.7-10.3,9.6l-5.5,4.6v0.3
	h22.9v12.7L936.5,291.9z"/>
<path class="st3" d="M1014.2,293.5c-4.9,0.1-9.6-1.2-13.8-3.7c-4-2.6-7.1-6.2-9-10.6c-2.2-5.2-3.3-10.9-3.1-16.5
	c0-6.5,1.1-11.9,3.2-16.4c1.9-4.3,5-7.8,8.9-10.3c8.6-4.7,19-4.7,27.6,0c4,2.4,7.1,6,9,10.3c2.1,4.5,3.1,10,3.1,16.4
	c0.2,5.7-0.9,11.4-3.1,16.6c-1.9,4.3-5,8-8.9,10.5C1023.8,292.3,1019,293.6,1014.2,293.5z M1014.2,280.5c2.7,0,5-1.4,6.8-4.3
	c1.8-2.9,2.6-7.4,2.6-13.6c0.1-3.3-0.3-6.7-1.2-9.9c-0.6-2.2-1.7-4.1-3.3-5.7c-1.3-1.2-3.1-1.9-4.9-1.8c-2.7,0-5,1.4-6.7,4.2
	c-1.7,2.8-2.6,7.2-2.7,13.2c-0.1,3.4,0.3,6.8,1.2,10.1c0.6,2.2,1.7,4.2,3.3,5.9C1010.6,279.9,1012.4,280.6,1014.2,280.5z"/>
<path class="st3" d="M1047.5,291.9v-11.5l21.9-18.1c1.3-1.1,2.5-2.2,3.7-3.4c1-1,1.8-2.1,2.4-3.3c0.6-1.2,0.9-2.5,0.8-3.8
	c0-1.4-0.3-2.7-1-3.9c-0.6-1.1-1.5-1.9-2.6-2.5c-1.2-0.6-2.5-0.9-3.9-0.9c-1.3,0-2.7,0.3-3.9,0.9c-1.1,0.6-2,1.5-2.6,2.6
	c-0.6,1.3-1,2.7-0.9,4.2h-15.1c-0.1-3.7,0.9-7.4,2.8-10.7c1.9-3,4.6-5.4,7.8-6.9c3.7-1.7,7.8-2.5,11.9-2.4c4.2-0.1,8.3,0.7,12.2,2.2
	c3.2,1.3,6,3.5,8,6.3c1.9,2.8,2.9,6.1,2.8,9.5c0,2.3-0.5,4.6-1.4,6.7c-1.3,2.7-3,5.2-5,7.4c-3.2,3.4-6.7,6.7-10.3,9.6l-5.5,4.6v0.3
	h22.9v12.7L1047.5,291.9z"/>
<path class="st3" d="M1122.5,232.2c3.3,0,6.6,0.5,9.7,1.6c3.1,1.1,5.8,2.8,8.1,5.1c2.5,2.6,4.4,5.7,5.6,9.1c1.4,4.4,2.1,9,2,13.6
	c0,4.4-0.6,8.8-1.8,13c-1.1,3.6-2.8,6.9-5.2,9.8c-2.2,2.6-4.9,4.8-8,6.2c-7,3-15,2.8-21.9-0.4c-3.1-1.5-5.8-3.8-7.8-6.7
	c-1.9-2.8-3.1-6-3.4-9.4h15.7c0.3,1.6,1.2,3,2.5,3.9c1.3,0.8,2.9,1.2,4.5,1.2c3.1,0.1,6-1.6,7.4-4.4c1.6-2.9,2.3-6.8,2.4-11.7h-0.3
	c-0.7,1.8-1.9,3.4-3.4,4.6c-1.6,1.3-3.3,2.3-5.3,2.9c-2,0.7-4.2,1-6.4,1c-3.3,0.1-6.5-0.8-9.3-2.4c-2.7-1.6-4.8-3.9-6.2-6.6
	c-3.2-6.6-2.9-14.3,0.7-20.6c2-3.2,4.9-5.7,8.3-7.3C1114.1,233,1118.3,232.1,1122.5,232.2z M1122.6,244.2c-1.5,0-2.9,0.3-4.2,1.1
	c-1.2,0.7-2.2,1.7-2.9,3c-1.4,2.7-1.4,5.9,0,8.6c0.7,1.2,1.7,2.3,2.9,3c2.3,1.3,5,1.4,7.4,0.5c1-0.4,1.8-1,2.6-1.7
	c0.7-0.8,1.3-1.7,1.7-2.6c0.4-1.1,0.6-2.2,0.6-3.3c0-1.5-0.4-3-1.1-4.3c-0.7-1.2-1.7-2.3-2.9-3
	C1125.5,244.6,1124.1,244.2,1122.6,244.2z"/>
<path class="st5" d="M127.5,124.3c6.5,2.8,12.9,5.7,19.4,8.5l19.3,8.8c6.5,2.9,12.8,6,19.5,8.2c3.5,0.9,7.4,0.9,10.4,2.7
	c1.6,0.9,3,2,4.3,3.3c1.5,1.4,2.7,3.1,3.5,5c0.1,0.2,0,0.4-0.2,0.4c0,0,0,0-0.1,0c-2,0.5-4,0.6-6.1,0.4c-1.8-0.2-3.6-0.7-5.2-1.3
	c-3.3-1.2-5.8-4.3-8.7-6.4c-5.9-3.9-12.4-6.9-18.6-10.2l-18.9-9.6C140,130.9,133.7,127.7,127.5,124.3z"/>
<path class="st5" d="M46,85.1c-6.5-2.8-12.9-5.7-19.4-8.5L7.4,67.8c-6.5-2.9-12.8-6-19.5-8.2c-3.5-0.9-7.4-0.9-10.4-2.8
	c-1.6-0.9-3-2-4.3-3.3c-1.5-1.4-2.6-3.1-3.5-5c-0.1-0.2,0-0.4,0.2-0.4c0,0,0,0,0,0c0,0,0,0,0.1,0c2-0.5,4-0.6,6.1-0.4
	c1.8,0.2,3.6,0.7,5.2,1.3c3.3,1.2,5.8,4.3,8.6,6.4c5.9,3.9,12.4,6.9,18.6,10.1l18.9,9.6C33.5,78.5,39.8,81.7,46,85.1z"/>
<path class="st5" d="M118.2,137.1c5.2,4.8,10.2,9.8,15.3,14.7l15.1,14.9c5.1,4.9,9.9,10.1,15.5,14.4c2.9,2.1,6.6,3.4,8.8,6.2
	c1.2,1.4,2.2,2.9,2.9,4.5c0.9,1.8,1.4,3.8,1.6,5.9c0,0.2-0.1,0.3-0.3,0.4c0,0,0,0-0.1,0c-2-0.2-4-0.8-5.8-1.7
	c-1.6-0.8-3.1-1.8-4.4-3.1c-2.7-2.3-3.9-6-5.9-9c-4.2-5.8-9.2-10.7-14-15.9l-14.4-15.5C127.7,147.6,122.9,142.4,118.2,137.1z"/>
<path class="st5" d="M55.3,72.3c-5.2-4.8-10.2-9.8-15.3-14.7L24.9,42.7C19.9,37.8,15,32.6,9.4,28.2c-3-2.1-6.7-3.4-8.9-6.2
	c-1.2-1.4-2.2-2.9-2.9-4.5c-0.9-1.8-1.4-3.8-1.5-5.8c0-0.2,0.1-0.3,0.3-0.4c0,0,0,0,0.1,0c2,0.2,4,0.8,5.8,1.8
	c1.6,0.8,3.1,1.8,4.5,3.1c2.7,2.3,3.9,6,5.9,9c4.2,5.7,9.2,10.7,14,15.9l14.4,15.5C45.8,61.8,50.6,67,55.3,72.3z"/>
<path class="st5" d="M131.7,109.1c7.1,0.4,14.1,0.9,21.2,1.3L174,112c7,0.5,14.1,1.3,21.2,1c3.6-0.3,7.2-1.7,10.7-1
	c1.8,0.3,3.5,0.8,5.2,1.6c1.9,0.8,3.6,2,5,3.5c0.1,0.1,0.1,0.3,0,0.5c0,0,0,0,0,0c-1.7,1.2-3.5,2-5.5,2.4c-1.8,0.4-3.6,0.6-5.4,0.5
	c-3.6,0-6.9-2-10.4-3.1c-6.9-1.7-14-2.2-21-3.1l-21-2.5C145.7,110.9,138.7,110.1,131.7,109.1z"/>
<path class="st5" d="M41.8,100.3c-7.1-0.4-14.1-0.9-21.1-1.3l-21.1-1.6c-7-0.5-14.1-1.3-21.2-1c-3.6,0.3-7.3,1.7-10.7,1
	c-1.8-0.3-3.5-0.8-5.2-1.6c-1.9-0.8-3.6-2-5-3.5c-0.1-0.1-0.1-0.3,0-0.5c0,0,0,0,0,0c0,0,0,0,0,0c1.7-1.2,3.6-2,5.6-2.4
	c1.8-0.4,3.6-0.6,5.4-0.5c3.5,0,6.9,2,10.3,3.1c6.9,1.7,14,2.2,21,3.1l21,2.5C27.8,98.4,34.8,99.3,41.8,100.3z"/>
<path class="st5" d="M90.5,149.7c0.9,7,1.7,14,2.5,21l2.2,21.1c0.8,7,1.2,14.1,2.8,21c1,3.5,3,6.8,2.9,10.4c0,1.8-0.2,3.6-0.6,5.4
	c-0.5,2-1.3,3.9-2.5,5.5c-0.1,0.1-0.3,0.2-0.5,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.4-1.4-2.6-3.2-3.4-5c-0.7-1.7-1.2-3.4-1.5-5.2
	c-0.7-3.5,0.8-7.1,1.2-10.7c0.4-7.1-0.3-14.1-0.7-21.2l-1.3-21.1C91.2,163.8,90.7,156.8,90.5,149.7z"/>
<path class="st5" d="M83,59.7c-0.9-7-1.7-14-2.5-21l-2.2-21.1c-0.8-7-1.3-14.1-2.8-21c-1-3.5-3-6.8-2.9-10.4c0-1.8,0.2-3.6,0.6-5.4
	c0.5-2,1.3-3.9,2.5-5.5c0.1-0.2,0.3-0.2,0.5-0.1c0,0,0,0,0,0c1.4,1.4,2.6,3.2,3.4,5c0.7,1.7,1.2,3.4,1.5,5.2
	c0.7,3.5-0.8,7.1-1.2,10.7c-0.4,7.1,0.3,14.1,0.7,21.2L82,38.5C82.3,45.6,82.8,52.6,83,59.7z"/>
<path class="st5" d="M74.8,148.3c-1.9,6.8-3.8,13.6-5.4,20.5c-1.7,6.8-3.4,13.7-5,20.6c-1.5,6.9-3.4,13.7-4.2,20.8
	c-0.1,1.8,0,3.7,0,5.5c0,1.8-0.2,3.6-0.8,5.3c-1.2,3.7-3.6,6.9-6.8,9.1c-0.1,0.1-0.4,0.1-0.5-0.1c0,0,0,0,0,0c0,0,0,0,0-0.1
	c-0.8-1.9-1.3-3.9-1.4-5.9c-0.1-1.8,0-3.6,0.4-5.3c0.6-3.5,3.2-6.4,4.7-9.6c2.7-6.6,4.3-13.5,6.3-20.2c1.9-6.8,3.8-13.6,5.8-20.4
	C70,161.6,72.2,154.9,74.8,148.3z"/>
<path class="st5" d="M98.7,61.1c2-6.8,3.8-13.6,5.4-20.5c1.7-6.9,3.2-13.7,4.7-20.6c1.4-6.9,3.2-13.8,4.1-20.9c0.1-1.8,0-3.7,0-5.5
	c0-1.8,0.3-3.6,0.9-5.3c1.3-3.7,3.8-6.8,7.2-8.9c0.2-0.1,0.4,0,0.5,0.1c0,0,0,0,0,0v0c0.7,1.9,1.1,3.9,1.1,5.9
	c0.1,1.8-0.1,3.6-0.6,5.3c-0.6,3.4-3.3,6.3-4.8,9.5c-2.8,6.5-4.3,13.4-6.1,20.3c-1.8,6.8-3.5,13.7-5.5,20.5
	C103.5,47.8,101.4,54.6,98.7,61.1z"/>
<path class="st5" d="M106,146.1c3.3,6.2,6.4,12.5,9.5,18.8l9.2,18.9c3.2,6.3,6,12.7,9.8,18.6c2.1,2.9,5.1,5.4,6.3,8.7
	c0.7,1.7,1.1,3.4,1.2,5.2c0.2,2,0.1,4.1-0.5,6c-0.1,0.2-0.2,0.3-0.4,0.2c0,0,0,0,0,0c0,0,0,0,0,0c-1.8-0.9-3.5-2-4.9-3.5
	c-1.3-1.3-2.3-2.7-3.2-4.3c-1.8-3-1.7-6.9-2.6-10.4c-2.1-6.8-5.1-13.1-7.9-19.5l-8.5-19.3C111.4,159.1,108.6,152.7,106,146.1z"/>
<path class="st5" d="M67.7,63.7c-3.3-6.3-6.4-12.6-9.6-18.9l-9.3-19C45.7,19.5,42.8,13,39,7c-2.1-2.9-5.2-5.4-6.3-8.7
	C32-3.4,31.6-5.2,31.4-7c-0.2-2-0.1-4.1,0.5-6.1c0.1-0.2,0.2-0.3,0.4-0.2c0,0,0,0,0,0c1.9,0.9,3.5,2.1,4.9,3.6
	c1.3,1.3,2.3,2.8,3.2,4.4c1.8,3,1.7,7,2.6,10.5c2.1,6.8,5.2,13.2,7.9,19.7l8.5,19.4C62.2,50.7,65.1,57.2,67.7,63.7z"/>
<path class="st5" d="M49,130.5c-5.6,4.2-11.3,8.3-17,12.5l-17.1,12.2c-5.7,4.1-11.5,8-16.8,12.8c-2.5,2.5-4.4,5.9-7.5,7.6
	c-1.5,0.9-3.2,1.6-4.9,2.1c-2,0.6-4,0.7-6,0.5c-0.2,0-0.3-0.2-0.3-0.4c0,0,0,0,0,0c0,0,0,0,0-0.1c0.5-2,1.4-3.8,2.7-5.4
	c1.1-1.4,2.3-2.7,3.7-3.8c2.7-2.3,6.6-2.8,9.8-4.2c6.3-3.1,12.1-7.2,18-11l17.6-11.5C37.1,138,43,134.1,49,130.5z"/>
<path class="st5" d="M124.5,78.9c5.6-4.2,11.3-8.3,17-12.5l17.1-12.2c5.7-4.1,11.5-8,16.8-12.8c2.5-2.5,4.4-6,7.5-7.6
	c1.5-0.9,3.2-1.6,4.9-2.1c2-0.6,4-0.7,6-0.5c0.2,0,0.3,0.2,0.3,0.4c0,0,0,0,0,0c0,0,0,0,0,0.1c-0.5,2-1.4,3.8-2.7,5.4
	c-1.1,1.4-2.3,2.7-3.7,3.8c-2.7,2.3-6.6,2.8-9.8,4.2c-6.3,3.1-12.1,7.2-18,11l-17.6,11.5C136.4,71.4,130.5,75.3,124.5,78.9z"/>
<path class="st5" d="M42.9,115.8c-6.8,2.1-13.6,3.9-20.3,5.9l-20.4,5.6c-6.8,1.9-13.7,3.5-20.3,6.2c-3.3,1.5-6.3,4.1-9.8,4.6
	c-1.8,0.3-3.6,0.4-5.4,0.3c-2-0.2-4-0.7-5.9-1.6c-0.2-0.1-0.2-0.3-0.2-0.4c0,0,0,0,0,0c0,0,0,0,0,0c1.2-1.7,2.7-3.1,4.4-4.2
	c1.5-1,3.1-1.8,4.9-2.3c3.3-1.2,7.2-0.4,10.8-0.6c7.1-0.8,13.9-2.6,20.8-4.2l20.6-4.8C29.1,118.7,36,117.2,42.9,115.8z"/>
<path class="st5" d="M130.6,93.6c6.8-2.1,13.6-3.9,20.3-5.9l20.4-5.6c6.8-1.9,13.7-3.5,20.3-6.2c3.3-1.5,6.3-4.1,9.8-4.6
	c1.8-0.3,3.6-0.4,5.4-0.3c2,0.2,4,0.7,5.9,1.6c0.2,0.1,0.2,0.3,0.2,0.4c0,0,0,0,0,0c-1.2,1.7-2.7,3.1-4.4,4.2
	c-1.5,1-3.1,1.8-4.9,2.3c-3.3,1.2-7.2,0.4-10.8,0.6c-7.1,0.8-13.9,2.6-20.8,4.2l-20.6,4.8C144.4,90.6,137.5,92.2,130.6,93.6z"/>
<path class="st5" d="M60.2,141.9c-3.9,5.8-8,11.6-11.9,17.4l-12.1,17.2c-3.9,5.8-8.1,11.4-11.3,17.7c-1.4,3.3-2,7.1-4.2,9.8
	c-1.1,1.4-2.3,2.7-3.8,3.8c-1.6,1.3-3.4,2.2-5.3,2.8c-0.2,0.1-0.4,0-0.4-0.2c0,0,0,0,0-0.1c-0.4-3.8,0.4-7.7,2.4-11
	c0.9-1.5,2.1-2.9,3.5-4c1.4-1.2,2.9-2.3,4.2-3.5c4.8-5.2,8.8-11,13.1-16.6l12.8-16.7L60.2,141.9z"/>
<path class="st5" d="M113,67.9l23.8-35c3.9-5.9,8.1-11.6,11.3-17.9c1.5-3.3,2.1-7.2,4.5-9.8c1.1-1.4,2.5-2.7,3.9-3.7
	c1.7-1.2,3.5-2.1,5.5-2.6c0.2,0,0.4,0.1,0.4,0.2c0,0,0,0,0,0c0,0,0,0,0,0.1c0.2,2-0.1,4.1-0.7,6c-0.5,1.7-1.2,3.4-2.2,4.9
	c-1.7,3.1-5.2,5-7.8,7.4c-4.9,5.2-8.8,11.1-13.1,16.7l-12.6,17C121.8,56.9,117.5,62.5,113,67.9z"/>
<path class="st5" d="M123.5,130.8c1.8,1,3.5,2,5.2,3c1.7,1,3.3,2.2,5.1,3.2s3.3,2.3,5.3,2.8c1.1,0.1,2.7-0.3,3.3,0.5
	c0.4,0.4,0.7,1,0.8,1.5c0.2,0.9,0.1,1.8-0.1,2.7c0,0.1-0.1,0.2-0.2,0.3c-0.8,0.5-1.6,0.8-2.5,0.9c-0.6,0.1-1.2,0-1.7-0.2
	c-1-0.4-1-2-1.5-3c-1.2-1.8-2.9-2.8-4.4-4.1s-3.2-2.4-4.7-3.7S124.9,132.2,123.5,130.8z"/>
<path class="st5" d="M50,78.6c-1.8-1-3.5-2-5.2-3s-3.3-2.2-5.1-3.2s-3.3-2.3-5.3-2.8c-1.1-0.1-2.7,0.3-3.3-0.5
	c-0.4-0.4-0.7-1-0.8-1.5c-0.2-0.9-0.1-1.8,0.1-2.7c0-0.1,0.1-0.2,0.2-0.3c0.8-0.5,1.6-0.8,2.5-0.9c0.6-0.1,1.2,0,1.7,0.2
	c1,0.4,1,2,1.5,3c1.2,1.8,2.9,2.8,4.4,4.1s3.2,2.4,4.7,3.7S48.6,77.2,50,78.6z"/>
<path class="st5" d="M112.5,142.2c1.3,1.5,2.5,3,3.8,4.5s2.3,3.1,3.6,4.7s2.3,3.2,4,4.4c1,0.5,2.6,0.6,2.9,1.6
	c0.2,0.5,0.3,1.1,0.2,1.7c-0.2,0.9-0.5,1.7-1,2.5c-0.1,0.1-0.2,0.2-0.3,0.2c-0.9,0.2-1.8,0.2-2.7,0c-0.6-0.1-1.1-0.4-1.5-0.8
	c-0.8-0.7-0.3-2.2-0.4-3.3c-0.5-2-1.7-3.6-2.7-5.3s-2.1-3.3-3.1-5S113.4,144,112.5,142.2z"/>
<path class="st5" d="M61.3,67.5c-1.3-1.5-2.6-3.1-3.8-4.6s-2.4-3.2-3.6-4.8s-2.3-3.3-4-4.5c-1-0.5-2.6-0.6-3-1.6
	c-0.2-0.5-0.3-1.1-0.2-1.7c0.2-0.9,0.5-1.7,1-2.5c0.1-0.1,0.2-0.2,0.3-0.2c0.9-0.2,1.8-0.2,2.7,0c0.6,0.1,1.1,0.4,1.5,0.8
	c0.8,0.7,0.3,2.2,0.4,3.3c0.5,2.1,1.7,3.6,2.7,5.4s2.1,3.4,3.1,5.1S60.4,65.7,61.3,67.5z"/>
<path class="st5" d="M130.2,116.6c2,0.3,3.9,0.7,5.9,1s3.9,0.9,5.9,1.3s3.9,1,6,0.8c1.1-0.2,2.4-1.2,3.3-0.7c0.5,0.3,1,0.7,1.2,1.2
	c0.5,0.8,0.8,1.6,0.9,2.5c0,0.1,0,0.3-0.1,0.4c-0.5,0.7-1.2,1.3-2,1.7c-0.5,0.3-1.1,0.4-1.7,0.4c-1,0-1.7-1.5-2.5-2.3
	c-1.7-1.2-3.7-1.7-5.6-2.4s-3.8-1.2-5.7-1.9S132.1,117.4,130.2,116.6z"/>
<path class="st5" d="M43.3,92.8c-2-0.3-3.9-0.7-5.9-1s-3.9-0.9-5.9-1.3s-3.9-1-6-0.8c-1.1,0.2-2.4,1.2-3.3,0.7
	c-0.5-0.3-1-0.7-1.2-1.2c-0.5-0.8-0.8-1.6-0.9-2.5c0-0.1,0-0.3,0.1-0.4c0.5-0.7,1.2-1.3,2-1.7c0.5-0.3,1.1-0.4,1.7-0.4
	c1,0,1.7,1.5,2.5,2.3c1.7,1.2,3.7,1.7,5.6,2.4s3.8,1.2,5.7,1.9S41.4,92,43.3,92.8z"/>
<path class="st5" d="M82.8,149.6c0.1,2,0,4,0,6c0,2-0.2,4-0.2,6s-0.3,4,0.3,6c0.4,1,1.6,2.1,1.3,3.1c-0.2,0.6-0.5,1.1-0.9,1.4
	c-0.7,0.6-1.5,1-2.3,1.3c-0.1,0-0.3,0-0.4,0c-0.8-0.4-1.5-1-2.1-1.7c-0.4-0.4-0.6-1-0.7-1.6c-0.2-1,1.2-1.9,1.8-2.8
	c0.9-1.9,1-3.9,1.3-5.9s0.5-4,0.8-5.9S82.4,151.6,82.8,149.6z"/>
<path class="st5" d="M90.6,60.3c-0.1-2,0-4.1,0-6.1s0.2-4.1,0.2-6.1s0.3-4.1-0.3-6.1c-0.4-1.1-1.6-2.2-1.3-3.2
	c0.2-0.6,0.5-1.1,0.9-1.4c0.7-0.6,1.5-1.1,2.3-1.3c0.1,0,0.3,0,0.4,0c0.8,0.4,1.5,1,2.1,1.7c0.4,0.4,0.6,1,0.7,1.6
	c0.2,1-1.2,1.9-1.8,2.9c-0.9,2-1,4-1.3,6s-0.5,4-0.8,6C91.4,56.2,91.1,58.2,90.6,60.3z"/>
<path class="st5" d="M67.4,145.9c-0.6,1.9-1.3,3.7-2,5.6s-1.5,3.6-2.2,5.5s-1.6,3.6-1.8,5.7c0.1,1.1,0.8,2.5,0.1,3.3
	c-0.3,0.5-0.8,0.8-1.4,1c-0.8,0.3-1.7,0.4-2.6,0.4c-0.1,0-0.3-0.1-0.3-0.2c-0.6-0.7-1.1-1.4-1.4-2.3c-0.2-0.5-0.2-1.1-0.1-1.7
	c0.2-1,1.7-1.3,2.6-2c1.5-1.5,2.2-3.3,3.2-5s1.8-3.5,2.8-5.2C65.4,149.3,66.4,147.6,67.4,145.9z"/>
<path class="st5" d="M105.9,63.9c0.6-1.9,1.4-3.8,2-5.7s1.6-3.7,2.3-5.6s1.6-3.6,1.8-5.8c-0.1-1.1-0.8-2.6-0.1-3.4
	c0.3-0.5,0.8-0.8,1.4-1c0.8-0.3,1.7-0.5,2.6-0.4c0.1,0,0.3,0.1,0.3,0.2c0.6,0.7,1.1,1.4,1.4,2.3c0.2,0.5,0.2,1.1,0.1,1.7
	c-0.2,1-1.8,1.4-2.7,2.1c-1.5,1.5-2.3,3.3-3.3,5.1s-1.8,3.5-2.8,5.3S107,62.2,105.9,63.9z"/>
<path class="st5" d="M98.5,148.2c0.8,1.9,1.4,3.8,2.1,5.6s1.2,3.8,1.9,5.7s1.1,3.8,2.3,5.6c0.8,0.8,2.3,1.5,2.3,2.5
	c0,0.6-0.1,1.2-0.4,1.7c-0.4,0.8-1,1.5-1.7,2c-0.1,0.1-0.2,0.1-0.4,0.1c-0.9-0.1-1.8-0.4-2.5-0.9c-0.5-0.3-0.9-0.7-1.2-1.2
	c-0.5-0.9,0.5-2.2,0.7-3.3c0.2-2.1-0.4-4-0.8-6s-0.9-3.9-1.3-5.9C99.2,152.1,98.8,150.2,98.5,148.2z"/>
<path class="st5" d="M75,61.2c-0.8-1.9-1.4-3.8-2.1-5.6c-0.7-1.9-1.2-3.8-1.9-5.7s-1.1-3.8-2.3-5.6c-0.8-0.8-2.3-1.5-2.3-2.5
	c0-0.6,0.1-1.2,0.4-1.7c0.4-0.8,1-1.5,1.7-2c0.1-0.1,0.2-0.1,0.4-0.1c0.9,0.1,1.8,0.4,2.5,0.9c0.5,0.3,0.9,0.7,1.2,1.2
	c0.5,0.9-0.5,2.2-0.7,3.3c-0.2,2.1,0.4,4,0.8,6s0.9,3.9,1.3,5.9S74.7,59.2,75,61.2z"/>
<path class="st5" d="M45.8,123.4c-1.7,1.1-3.5,2-5.2,3c-1.7,1-3.6,1.8-5.3,2.8s-3.6,1.7-5.1,3.2c-0.7,0.9-1.1,2.5-2.1,2.6
	c-0.6,0.1-1.2,0.1-1.7-0.1c-0.8-0.3-1.6-0.8-2.3-1.4c-0.1-0.1-0.2-0.2-0.2-0.3c0-0.9,0.1-1.8,0.4-2.6c0.2-0.5,0.6-1,1-1.4
	c0.8-0.7,2.2,0.1,3.4,0.2c2.1-0.2,3.9-1.1,5.8-1.8s3.7-1.5,5.6-2.2C42,124.8,43.9,124.1,45.8,123.4z"/>
<path class="st5" d="M127.7,85.9c1.7-1.1,3.5-2,5.2-3s3.6-1.8,5.3-2.8s3.6-1.7,5.1-3.2c0.7-0.9,1.1-2.5,2.1-2.6
	c0.6-0.1,1.2-0.1,1.7,0.1c0.8,0.3,1.6,0.8,2.3,1.4c0.1,0.1,0.2,0.2,0.2,0.3c0,0.9-0.1,1.8-0.4,2.6c-0.2,0.5-0.6,1-1,1.4
	c-0.8,0.7-2.2-0.1-3.4-0.2c-2.1,0.2-3.9,1.1-5.8,1.8s-3.7,1.5-5.6,2.2S129.6,85.3,127.7,85.9z"/>
<path class="st5" d="M41.8,108.2c-2,0.4-3.9,0.7-5.9,1s-4,0.5-5.9,0.8s-4,0.4-5.9,1.3c-1,0.6-1.8,2-2.9,1.8
	c-0.6-0.1-1.1-0.3-1.6-0.7c-0.7-0.6-1.3-1.3-1.7-2.1c-0.1-0.1-0.1-0.3,0-0.4c0.3-0.9,0.7-1.6,1.3-2.3c0.4-0.4,0.9-0.8,1.4-0.9
	c1-0.3,2.1,0.8,3.1,1.3c2,0.6,4,0.3,6,0.3s4-0.2,6-0.1S39.8,108.1,41.8,108.2z"/>
<path class="st5" d="M131.7,101.2c2-0.4,3.9-0.7,5.9-1c2-0.3,4-0.5,5.9-0.8s4-0.4,5.9-1.3c1-0.6,1.8-2,2.9-1.8
	c0.6,0.1,1.1,0.3,1.6,0.7c0.7,0.6,1.3,1.3,1.7,2.1c0.1,0.1,0.1,0.3,0,0.4c-0.3,0.9-0.7,1.6-1.3,2.3c-0.4,0.4-0.9,0.8-1.4,0.9
	c-1,0.3-2.1-0.8-3.1-1.3c-2-0.6-4-0.3-6-0.3s-4,0.2-6,0.1S133.7,101.3,131.7,101.2z"/>
<path class="st5" d="M54.4,136.7c-1.2,1.6-2.5,3-3.8,4.5s-2.7,2.9-4,4.4s-2.7,2.8-3.6,4.7c-0.3,1.1-0.1,2.7-1,3.2
	c-0.5,0.3-1,0.5-1.6,0.5c-0.9,0-1.8-0.2-2.6-0.5c-0.1,0-0.2-0.1-0.3-0.3c-0.3-0.8-0.5-1.7-0.5-2.6c0-0.6,0.2-1.1,0.5-1.6
	c0.5-0.9,2.1-0.7,3.2-1c1.9-0.9,3.2-2.3,4.7-3.6s2.9-2.7,4.4-3.9S52.8,137.9,54.4,136.7z"/>
<path class="st5" d="M119.1,72.7c1.2-1.6,2.5-3,3.8-4.5s2.7-2.9,4-4.4s2.7-2.8,3.6-4.7c0.3-1.1,0.1-2.7,1-3.2c0.5-0.3,1-0.5,1.6-0.5
	c0.9,0,1.8,0.2,2.6,0.5c0.1,0,0.2,0.1,0.3,0.3c0.4,0.8,0.5,1.7,0.5,2.6c0,0.6-0.2,1.1-0.5,1.6c-0.5,0.9-2.1,0.7-3.2,1
	c-1.9,0.9-3.2,2.3-4.7,3.6c-1.5,1.3-2.9,2.7-4.4,3.9S120.6,71.5,119.1,72.7z"/>
<path class="st5" d="M100,111.5c4.4,2,8.7,4.1,13.1,6.2c2.2,1,4.3,2.1,6.6,3c1.2,0.3,2.4,0.6,3.5,1.2c1.1,0.6,2.1,1.5,2.8,2.5
	c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.3,0.1-2.5-0.2-3.7-0.7c-1.1-0.6-2.1-1.3-3-2.1c-2.1-1.3-4.2-2.3-6.4-3.5
	C108.5,116,104.2,113.8,100,111.5z"/>
<path class="st5" d="M98.3,113c4.1,2.7,8.2,5.5,12.3,8.3c2,1.4,4,2.8,6.2,4c1.2,0.5,2.3,1,3.3,1.7c1,0.8,1.9,1.8,2.4,3
	c0,0,0,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.3-0.1-2.5-0.6-3.6-1.3c-1-0.8-1.9-1.6-2.7-2.5c-1.9-1.6-3.9-3-5.9-4.5
	C106.2,118.9,102.3,116,98.3,113z"/>
<path class="st5" d="M96.7,114.8c3.6,3.4,7.2,6.8,10.7,10.2c1.8,1.7,3.5,3.5,5.4,5c1.1,0.6,2.1,1.4,3,2.2c0.9,0.9,1.6,2.1,1.9,3.3
	c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1.2-0.4-2.4-1-3.3-1.9c-0.9-0.9-1.6-1.9-2.3-3c-1.6-1.9-3.3-3.6-5.1-5.4
	C103.5,122,100.1,118.4,96.7,114.8z"/>
<path class="st5" d="M101.6,105.2c4.8,0,9.6,0,14.5,0c2.4,0,4.8,0.1,7.2-0.1c1.2-0.3,2.4-0.4,3.6-0.4c1.3,0.1,2.5,0.4,3.6,1.1
	c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.1,0.6-2.4,0.9-3.6,0.9c-1.2-0.1-2.4-0.3-3.6-0.6c-2.4-0.3-4.8-0.3-7.2-0.4
	C111.3,105.6,106.4,105.4,101.6,105.2z"/>
<path class="st5" d="M101.4,107.4c4.8,0.7,9.5,1.4,14.3,2.2c2.4,0.4,4.8,0.8,7.2,1c1.2-0.1,2.4-0.1,3.7,0.1c1.2,0.2,2.4,0.8,3.4,1.6
	c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.2,0.4-2.5,0.6-3.7,0.4c-1.2-0.2-2.4-0.6-3.5-1.1c-2.3-0.6-4.7-1-7.1-1.5
	C110.8,109.3,106.1,108.4,101.4,107.4z"/>
<path class="st5" d="M100.9,109.4c4.6,1.4,9.2,2.8,13.8,4.2c2.3,0.7,4.6,1.5,7,2c1.2,0.1,2.4,0.3,3.6,0.6c1.2,0.4,2.3,1.1,3.1,2.1
	c0,0,0,0.1,0,0.1c0,0,0,0,0,0c-1.2,0.3-2.5,0.2-3.8-0.2c-1.1-0.4-2.2-1-3.3-1.6c-2.2-1-4.5-1.7-6.8-2.5
	C110,112.7,105.4,111.1,100.9,109.4z"/>
<path class="st5" d="M95.5,117.2c2.9,3.8,5.7,7.6,8.5,11.5c1.4,1.9,2.8,3.9,4.4,5.7c0.9,0.8,1.8,1.7,2.5,2.6c0.7,1,1.1,2.2,1.3,3.5
	c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.1-0.5-2.1-1.3-2.9-2.3c-0.7-1-1.2-2.1-1.7-3.2c-1.2-2.1-2.6-4-3.9-6
	C100.8,125.1,98.1,121.1,95.5,117.2z"/>
<path class="st5" d="M92.8,117.6c2.3,4.4,4.5,8.8,6.7,13.2c1.1,2.2,2.2,4.4,3.5,6.5c0.8,1,1.5,2,2.1,3.1c0.5,1.2,0.8,2.5,0.7,3.8
	c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c-1.1-0.7-1.9-1.7-2.5-2.9c-0.5-1.1-0.9-2.3-1.2-3.5c-0.9-2.3-2-4.5-3-6.8
	C96.9,126.5,94.8,122.1,92.8,117.6z"/>
<path class="st5" d="M90.6,118.4c1.5,4.7,3,9.4,4.4,14.1c0.7,2.4,1.4,4.7,2.3,7c0.6,1.1,1.1,2.2,1.5,3.4c0.3,1.3,0.4,2.6,0.1,3.8
	c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.9-0.9-1.6-2-2-3.3c-0.3-1.2-0.5-2.4-0.5-3.7c-0.5-2.4-1.2-4.8-1.8-7.2
	C93.1,128,91.8,123.2,90.6,118.4z"/>
<path class="st5" d="M88.2,118.9c0.7,4.9,1.3,9.8,2,14.7c0.3,2.4,0.6,4.9,1.1,7.3c0.4,1.2,0.7,2.4,0.9,3.6c0.1,1.3-0.1,2.6-0.6,3.8
	c0,0-0.1,0.1-0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.8-1.1-1.2-2.3-1.4-3.6c-0.1-1.2-0.1-2.5,0.1-3.7c0-2.5-0.3-4.9-0.6-7.4
	C89.1,128.7,88.6,123.8,88.2,118.9z"/>
<path class="st5" d="M85.8,118.5c-0.1,5-0.3,10-0.5,15c-0.1,2.5-0.2,5-0.1,7.5c0.2,1.2,0.3,2.5,0.3,3.8c-0.1,1.3-0.5,2.6-1.2,3.7
	c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.6-1.2-0.8-2.5-0.8-3.8c0.1-1.3,0.3-2.5,0.7-3.7c0.4-2.5,0.5-5,0.7-7.5
	C85,128.5,85.4,123.5,85.8,118.5z"/>
<path class="st5" d="M83.2,118.1c-1.1,4.9-2.2,9.7-3.4,14.6c-0.6,2.4-1.2,4.8-1.6,7.3c0,1.3-0.2,2.5-0.4,3.7c-0.4,1.3-1,2.4-1.9,3.4
	c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.3-1.3-0.3-2.6,0-3.9c0.4-1.2,0.8-2.4,1.4-3.5c0.8-2.4,1.5-4.8,2.1-7.2
	C80.4,127.7,81.8,122.9,83.2,118.1z"/>
<path class="st5" d="M101.7,102.6c4.7-0.8,9.4-1.5,14.2-2.2c2.4-0.4,4.7-0.7,7.1-1.2c1.1-0.4,2.3-0.8,3.5-1c1.3-0.1,2.5,0,3.7,0.5
	c0,0,0.1,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-1,0.8-2.2,1.3-3.4,1.5c-1.2,0.1-2.4,0.1-3.6,0c-2.4,0.1-4.8,0.4-7.1,0.7
	C111.2,101.5,106.5,102.1,101.7,102.6z"/>
<path class="st5" d="M73.2,98c-4.3-2-8.6-4.1-12.9-6.2c-2.2-1-4.3-2.1-6.5-3c-1.2-0.3-2.3-0.7-3.4-1.2c-1.1-0.6-2-1.5-2.7-2.5
	c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.3-0.1,2.5,0.2,3.7,0.7c1.1,0.6,2.1,1.3,3,2.1c2,1.3,4.2,2.4,6.3,3.5C64.8,93.4,69,95.7,73.2,98z"/>
<path class="st5" d="M74.4,96c-4-2.7-7.9-5.4-11.8-8.1c-2-1.3-3.9-2.8-6-4c-1.1-0.4-2.2-1-3.2-1.7c-1-0.8-1.8-1.8-2.3-2.9
	c0,0,0-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.3,0.1,2.5,0.6,3.5,1.3c1,0.7,1.8,1.6,2.6,2.5c1.8,1.6,3.8,3,5.7,4.4
	C66.7,90.3,70.5,93.1,74.4,96z"/>
<path class="st5" d="M76,94c-3.5-3.3-6.9-6.6-10.3-10c-1.7-1.7-3.4-3.4-5.2-4.9c-1-0.6-2-1.4-2.9-2.2c-0.9-0.9-1.5-2-1.8-3.3
	c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c1.2,0.3,2.3,1,3.2,1.8c0.8,0.9,1.5,1.9,2.2,2.9c1.5,1.9,3.2,3.6,4.9,5.3C69.4,87.1,72.7,90.5,76,94z
	"/>
<path class="st5" d="M71.6,104.4c-4.8,0-9.6,0-14.3-0.1c-2.4,0-4.8-0.1-7.2,0.1c-1.2,0.3-2.4,0.4-3.6,0.4c-1.3-0.1-2.5-0.5-3.6-1.1
	c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.1-0.6,2.4-0.9,3.6-0.9c1.2,0.1,2.4,0.3,3.6,0.6c2.4,0.3,4.8,0.4,7.2,0.5
	C62.1,103.9,66.8,104.1,71.6,104.4z"/>
<path class="st5" d="M71.8,102.1c-4.7-0.7-9.4-1.5-14.2-2.3c-2.4-0.4-4.7-0.8-7.1-1c-1.2,0.1-2.4,0-3.6-0.1
	c-1.2-0.3-2.4-0.8-3.3-1.6c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.2-0.4,2.5-0.5,3.7-0.3c1.2,0.3,2.3,0.6,3.4,1.1c2.3,0.7,4.7,1.1,7,1.5
	C62.5,100.2,67.2,101.2,71.8,102.1z"/>
<path class="st5" d="M72.4,100.1c-4.6-1.4-9.1-2.8-13.7-4.3c-2.3-0.7-4.5-1.5-6.9-2c-1.2-0.1-2.4-0.3-3.6-0.7C47,92.7,46,92,45.1,91
	c0,0,0-0.1,0-0.1c0,0,0,0,0,0c1.2-0.2,2.5-0.2,3.7,0.2c1.1,0.4,2.2,1,3.2,1.6c2.2,1,4.5,1.7,6.7,2.5C63.4,96.8,67.9,98.4,72.4,100.1
	z"/>
<path class="st5" d="M77.9,92.4c-2.9-3.8-5.7-7.7-8.5-11.6c-1.4-1.9-2.8-3.9-4.3-5.7c-0.9-0.8-1.7-1.7-2.5-2.6
	c-0.7-1-1.1-2.3-1.2-3.5c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1.1,0.5,2.1,1.3,2.9,2.4c0.7,1,1.2,2.1,1.6,3.2
	c1.2,2.1,2.6,4,3.9,6C72.6,84.4,75.3,88.4,77.9,92.4z"/>
<path class="st5" d="M80.1,91.1c-2.2-4.3-4.3-8.5-6.4-12.8c-1.1-2.1-2.1-4.3-3.3-6.4c-0.8-0.9-1.4-1.9-2-3c-0.5-1.2-0.7-2.4-0.6-3.7
	c0,0,0-0.1,0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1,0.7,1.9,1.7,2.4,2.8c0.5,1.1,0.8,2.3,1.1,3.5c0.8,2.3,1.9,4.4,2.8,6.6
	C76.2,82.4,78.2,86.7,80.1,91.1z"/>
<path class="st5" d="M82.5,90.2c-1.4-4.6-2.8-9.1-4.2-13.7c-0.7-2.3-1.3-4.6-2.2-6.8c-0.6-1-1.1-2.2-1.5-3.3c-0.3-1.2-0.3-2.5,0-3.7
	c0,0,0.1-0.1,0.1-0.1c0,0,0,0,0,0c0.9,0.9,1.6,2,1.9,3.2c0.3,1.2,0.5,2.4,0.5,3.6c0.4,2.4,1.1,4.7,1.7,7
	C80.1,80.9,81.3,85.5,82.5,90.2z"/>
<path class="st5" d="M85.1,90.6c-0.7-4.9-1.3-9.8-1.9-14.7c-0.3-2.5-0.6-4.9-1-7.3c-0.4-1.2-0.7-2.4-0.9-3.6
	c-0.1-1.3,0.1-2.6,0.6-3.8c0,0,0.1-0.1,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c0.7,1.1,1.2,2.3,1.4,3.6c0.1,1.2,0.1,2.5-0.1,3.7
	c0,2.5,0.3,4.9,0.5,7.4C84.3,80.8,84.7,85.7,85.1,90.6z"/>
<path class="st5" d="M87.5,90.6c0.2-4.9,0.4-9.9,0.6-14.8c0.1-2.5,0.3-4.9,0.2-7.4c-0.2-1.2-0.3-2.5-0.3-3.7
	c0.1-1.3,0.5-2.5,1.2-3.6c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.6,1.2,0.8,2.5,0.8,3.8c-0.1,1.2-0.4,2.5-0.7,3.7c-0.4,2.5-0.5,4.9-0.7,7.4
	C88.3,80.7,87.9,85.6,87.5,90.6z"/>
<path class="st5" d="M90.2,91c1.1-4.8,2.3-9.6,3.5-14.4c0.6-2.4,1.2-4.8,1.6-7.2c0-1.3,0.2-2.5,0.5-3.7c0.4-1.2,1-2.4,1.9-3.3
	c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.3,1.3,0.3,2.6,0,3.8c-0.4,1.2-0.8,2.4-1.4,3.5c-0.9,2.3-1.5,4.7-2.2,7.1C93,81.5,91.6,86.2,90.2,91z
	"/>
<path class="st5" d="M81,117.3c-1.9,4.6-3.8,9.2-5.8,13.8c-1,2.3-2,4.6-2.8,6.9c-0.2,1.2-0.6,2.5-1.1,3.6c-0.6,1.2-1.4,2.2-2.4,3
	c0,0-0.1,0-0.1,0c0,0,0,0,0,0c-0.1-1.3,0.1-2.6,0.6-3.8c0.5-1.1,1.2-2.2,2-3.2c1.2-2.2,2.2-4.5,3.3-6.7
	C76.7,126.3,78.8,121.8,81,117.3z"/>
<path class="st5" d="M92.5,91.7c1.9-4.6,3.9-9.1,5.9-13.6c1-2.3,2-4.5,2.8-6.9c0.2-1.2,0.6-2.4,1.1-3.6c0.6-1.2,1.4-2.2,2.4-3
	c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0.1,1.3-0.1,2.6-0.6,3.8c-0.6,1.1-1.2,2.2-2,3.2c-1.2,2.2-2.2,4.4-3.3,6.6
	C96.8,82.9,94.6,87.3,92.5,91.7z"/>
<path class="st5" d="M78.7,116.4c-2.6,4.2-5.3,8.3-8,12.5c-1.3,2.1-2.7,4.1-3.9,6.3c-0.4,1.2-1,2.3-1.6,3.4
	c-0.7,1.1-1.7,1.9-2.9,2.5c0,0-0.1,0-0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c0.1-1.3,0.5-2.5,1.2-3.6c0.7-1,1.6-1.9,2.5-2.8
	c1.6-1.9,2.9-4,4.3-6C73,124.5,75.9,120.5,78.7,116.4z"/>
<path class="st5" d="M94.6,92.9c2.7-4.2,5.4-8.3,8.1-12.4c1.3-2.1,2.8-4.1,3.9-6.3c0.4-1.2,1-2.3,1.7-3.4c0.8-1.1,1.8-1.9,2.9-2.5
	c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.1,1.3-0.5,2.5-1.3,3.6c-0.7,1-1.6,1.9-2.5,2.8c-1.6,1.9-3,4-4.4,6
	C100.3,84.8,97.5,88.9,94.6,92.9z"/>
<path class="st5" d="M76.8,114.9c-3.3,3.7-6.6,7.3-9.9,10.9c-1.7,1.8-3.4,3.6-4.9,5.6c-0.6,1.1-1.3,2.1-2.2,3c-0.9,0.9-2,1.6-3.3,2
	c0,0-0.1,0-0.1,0c0,0,0,0,0,0c0.3-1.3,0.9-2.4,1.8-3.4c0.9-0.9,1.9-1.7,2.9-2.3c1.9-1.6,3.5-3.4,5.3-5.2
	C69.9,121.9,73.4,118.4,76.8,114.9z"/>
<path class="st5" d="M96.4,94.4c3.3-3.7,6.7-7.3,10.1-10.9c1.7-1.8,3.4-3.6,4.9-5.5c0.6-1.1,1.4-2.1,2.2-3c0.9-0.9,2.1-1.6,3.3-2
	c0,0,0.1,0,0.1,0c0,0,0,0,0,0c0,0,0,0,0,0c-0.3,1.3-1,2.4-1.8,3.4c-0.9,0.9-1.9,1.7-2.9,2.3c-1.9,1.6-3.6,3.4-5.3,5.2
	C103.5,87.4,100,90.9,96.4,94.4z"/>
<path class="st5" d="M75.3,113.1c-3.9,3.1-7.7,6.1-11.6,9.1c-1.9,1.5-3.9,3-5.7,4.7c-0.8,1-1.7,1.8-2.6,2.6
	c-1.1,0.8-2.3,1.2-3.6,1.4c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.5-1.2,1.3-2.2,2.3-3c1-0.7,2.1-1.3,3.3-1.8
	c2.1-1.3,4.1-2.8,6.1-4.2C67.3,118.9,71.3,116,75.3,113.1z"/>
<path class="st5" d="M98,96.1c3.9-3.1,7.8-6.1,11.7-9.1c2-1.5,4-3,5.8-4.6c0.8-1,1.7-1.8,2.7-2.6c1.1-0.7,2.3-1.2,3.6-1.4
	c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c0,0,0,0,0,0c-0.5,1.2-1.4,2.2-2.4,3c-1,0.7-2.1,1.3-3.3,1.8c-2.1,1.3-4.1,2.8-6.1,4.2
	C106.1,90.4,102.1,93.3,98,96.1z"/>
<path class="st5" d="M74,111.1c-4.3,2.4-8.6,4.7-13,7c-2.2,1.2-4.4,2.3-6.4,3.6c-0.9,0.8-2,1.5-3,2.1c-1.2,0.6-2.5,0.8-3.7,0.8
	c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0,0,0,0,0,0c0.7-1.1,1.7-2,2.8-2.6c1.1-0.5,2.3-1,3.5-1.2c2.3-0.9,4.5-2.1,6.7-3.2
	C65.2,115.4,69.6,113.2,74,111.1z"/>
<path class="st5" d="M100.2,97.7c4.2-2.3,8.4-4.5,12.7-6.7c2.1-1.1,4.2-2.2,6.3-3.5c0.9-0.8,1.9-1.5,3-2.1c1.1-0.5,2.4-0.8,3.7-0.7
	c0,0,0.1,0,0.1,0.1c0,0,0,0,0,0c-0.7,1.1-1.6,1.9-2.7,2.5c-1.1,0.5-2.2,0.9-3.4,1.2c-2.2,0.9-4.4,2-6.5,3
	C108.8,93.6,104.5,95.7,100.2,97.7z"/>
<path class="st5" d="M73.1,108.8c-4.7,1.6-9.3,3.2-14,4.7c-2.3,0.8-4.7,1.5-7,2.5c-1.1,0.7-2.2,1.2-3.4,1.6
	c-1.2,0.4-2.6,0.4-3.8,0.2c0,0-0.1,0-0.1-0.1c0,0,0,0,0,0c0.9-0.9,2-1.7,3.2-2.1c1.2-0.3,2.4-0.6,3.7-0.6c2.4-0.5,4.8-1.3,7.1-2
	C63.7,111.6,68.4,110.2,73.1,108.8z"/>
<path class="st5" d="M71.6,106.6c-4.7,0.8-9.4,1.6-14.1,2.3c-2.4,0.4-4.7,0.7-7,1.3c-1.1,0.5-2.3,0.8-3.5,1c-1.2,0.1-2.5,0-3.7-0.5
	c0,0-0.1-0.1,0-0.1c0,0,0,0,0,0c0,0,0,0,0,0c1-0.8,2.2-1.3,3.4-1.5c1.2-0.1,2.4-0.1,3.6,0c2.4-0.1,4.8-0.4,7.1-0.7
	C62.2,107.7,66.9,107.2,71.6,106.6z"/>
<path class="st5" d="M101.2,100.1c4.5-1.5,9.1-3,13.6-4.5c2.3-0.8,4.6-1.4,6.8-2.4c1-0.6,2.1-1.1,3.3-1.5c1.2-0.3,2.5-0.4,3.7-0.1
	c0,0,0.1,0.1,0.1,0.1c0,0,0,0,0,0c-0.9,0.9-1.9,1.6-3.1,2c-1.2,0.3-2.4,0.5-3.6,0.6c-2.4,0.5-4.6,1.2-6.9,1.9
	C110.4,97.5,105.8,98.8,101.2,100.1z"/>
<path class="st5" d="M148.6,151l19.9,11.7c1.5,0.9,2.1,2.9,1.2,4.4c-0.9,1.5-2.9,2.1-4.4,1.2c-0.3-0.2-0.5-0.3-0.7-0.6L148.6,151z"
	/>
<path class="st5" d="M24.9,58.4L5,46.6c-1.5-0.9-2.1-2.9-1.2-4.4s2.9-2.1,4.4-1.2c0.3,0.2,0.5,0.3,0.7,0.6L24.9,58.4z"/>
<path class="st5" d="M161.6,123.7l22.9,3.2c1.8,0.2,3,1.9,2.8,3.6s-1.9,3-3.6,2.8c-0.3,0-0.6-0.1-0.9-0.2L161.6,123.7z"/>
<path class="st5" d="M11.9,85.7l-22.9-3.1c-1.8-0.2-3-1.9-2.8-3.6c0,0,0,0,0,0c0.2-1.8,1.9-3,3.6-2.8c0.3,0,0.6,0.1,0.9,0.2
	L11.9,85.7z"/>
<path class="st5" d="M103.7,180.1l7.6,21.9c0.6,1.7-0.3,3.5-2,4.1c-1.7,0.6-3.5-0.3-4.1-2c-0.1-0.3-0.2-0.6-0.2-0.9L103.7,180.1z"/>
<path class="st5" d="M69.8,29.3L62.2,7.4c-0.6-1.7,0.3-3.5,2-4.1s3.5,0.3,4.1,2c0.1,0.3,0.2,0.6,0.2,0.9L69.8,29.3z"/>
<path class="st5" d="M131.4,167.8l15.4,17.3c1.2,1.3,1.1,3.4-0.3,4.6c-1.3,1.2-3.4,1.1-4.5-0.3c-0.2-0.2-0.4-0.5-0.5-0.7
	L131.4,167.8z"/>
<path class="st5" d="M42.1,41.6L26.7,24.4C25.5,23,25.6,21,27,19.8c1.3-1.2,3.4-1.1,4.6,0.2c0,0,0,0,0,0c0.2,0.2,0.4,0.5,0.5,0.7
	L42.1,41.6z"/>
<path class="st5" d="M156.2,70.9l18.9-13.4c1.4-1,3.5-0.7,4.5,0.7s0.7,3.5-0.7,4.5c0,0,0,0,0,0c-0.2,0.2-0.5,0.3-0.8,0.4L156.2,70.9
	z"/>
<path class="st5" d="M17.3,138.5l-18.9,13.4c-1.5,1-3.5,0.7-4.5-0.8c0,0,0,0,0,0c-1-1.5-0.7-3.5,0.8-4.5c0,0,0,0,0,0
	c0.2-0.2,0.5-0.3,0.8-0.4L17.3,138.5z"/>
<path class="st5" d="M163.9,100.3l22.6-5.1c1.7-0.4,3.5,0.7,3.8,2.5c0.4,1.7-0.7,3.4-2.4,3.8c-0.3,0.1-0.6,0.1-0.9,0.1L163.9,100.3z
	"/>
<path class="st5" d="M9.6,109.1l-22.6,5.1c-1.7,0.4-3.5-0.7-3.9-2.4c0,0,0,0,0,0c-0.4-1.7,0.7-3.5,2.4-3.9c0.3-0.1,0.6-0.1,0.9-0.1
	L9.6,109.1z"/>
<path class="st5" d="M119.3,34.6l6.1-22.3c0.5-1.7,2.3-2.7,4-2.3c1.7,0.5,2.7,2.3,2.3,4c-0.1,0.3-0.2,0.6-0.4,0.8L119.3,34.6z"/>
<path class="st5" d="M54.2,174.8l-6.1,22.3c-0.5,1.7-2.2,2.8-4,2.3s-2.8-2.2-2.3-4c0,0,0,0,0-0.1c0.1-0.3,0.2-0.6,0.4-0.8
	L54.2,174.8z"/>
<path class="st5" d="M143.7,52.5L158,34.3c1.1-1.4,3.2-1.6,4.6-0.4c1.3,1.1,1.6,3,0.5,4.4c-0.2,0.2-0.4,0.4-0.6,0.6L143.7,52.5z"/>
<path class="st5" d="M29.8,156.9l-14.2,18.2c-1.1,1.4-3.2,1.6-4.6,0.4c-1.3-1.1-1.6-3-0.5-4.4c0.2-0.2,0.4-0.4,0.6-0.6L29.8,156.9z"
	/>
<path class="st5" d="M93.4,27.7L91.6,4.7c-0.1-1.8,1.2-3.3,3-3.5s3.3,1.2,3.5,3c0,0.3,0,0.6-0.1,0.9L93.4,27.7z"/>
<path class="st5" d="M80.1,181.7l1.8,23.1c0.1,1.8-1.2,3.3-3,3.5c-1.8,0.1-3.3-1.2-3.5-3c0-0.3,0-0.6,0.1-0.9L80.1,181.7z"/>
</svg>

'''
'''--- src/frontend/public/dialog/jellyfish.svg ---
<svg height="1000" viewBox="0 0 1000 1000" width="1000" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" transform="translate(56 14)"><path d="m364.943 603.134 26.883-50.782 31.862-15.433z" fill="#561c55"/><path d="m500.857 388.558 13.938 46.799-60.24 55.759z" fill="#6d2367"/><path d="m520.77 426.395 53.27-162.299-3.486 84.634z" fill="#6d2367"/><path d="m565.577 340.267 72.19-131.929-51.281 15.431z" fill="#6d2367"/><g fill="#883685"><path d="m620.34 187.427 6.471 26.883-14.437 12.446 7.219 25.888 44.06-53.268-22.903-11.949z"/><path d="m562.593 242.189 49.783 2.489-83.64 73.682z"/><path d="m543.174 293.967-32.694 126.903 55.095-100.019z"/><path d="m510.482 352.216 44.641-28.378-34.35 71.194z"/></g><path d="m462.024 467.219 2.988 23.899-26.387 8.959z" fill="#933583"/><path d="m397.801 545.381 50.285-30.866v-23.399z" fill="#933583"/><path d="m631.306 251.054 38.833-41.323 33.854 20.663z" fill="#b12788"/><path d="m622.841 267.983 67.707-37.589-31.363 98.326z" fill="#b93692"/><path d="m591.974 333.699 67.211-20.909-67.211 104.549z" fill="#a3327c"/><path d="m579.528 425.303 24.892-49.787-31.366 18.92z" fill="#be3c8e"/><path d="m559.615 431.776 37.837-77.665-29.374 30.37z" fill="#be3c8e"/><path d="m521.279 461.148 78.525-55.989-90.474 107.767z" fill="#a3327c"/><path d="m502.362 483.45 23.399-5.374-23.399 20.909z" fill="#c33c8d"/><path d="m470 529.355 49.787-35.349-42.319 83.64z" fill="#892269"/><path d="m441.625 577.646 38.832-26.883-43.811 109.525z" fill="#60164c"/><path d="m416.73 647.097 32.111-56.009-18.669 12.446z" fill="#821b54"/><path d="m419.221 695.885 12.553-96.084 14.082-10.206z" fill="#5d0c3c"/><path d="m407.52 673.481 29.126-52.274-19.916 77.665z" fill="#4a0f35"/><path d="m415.486 668.502-13.69 55.511 14.934 17.924z" fill="#4a0f35"/><path d="m604.42 302.333 47.795-26.886-42.319 62.732z" fill="#d4388b"/><path d="m631.306 333.699 28.378-54.142 4.979 12.818z" fill="#d4388b"/><path d="m820.846 92.026 56.091 72.811-98.242 49.786z" fill="#814598"/><path d="m875.276 168.507-81.314 50.948-14.271-6.97z" fill="#9a57a3"/><path d="m593.246 154.569-14.438 37.089-46.051-74.427z" fill="#512e69"/><path d="m602.952 79.143 46.052 61.234-58.746 12.945z" fill="#643e84"/><path d="m689.081 106.277 27.382-22.403 14.937 62.232-44.807 39.329z" fill="#7c4f9d"/><path d="m633.819 137.64 197.648-44.804-166.781-66.216z" fill="#7c4f9d"/><path d="m548.937 73.171 202.376-44.559-96.086-13.941z" fill="#8863aa"/><path d="m705.261 56.243 53.022-23.149 45.553 57.251z" fill="#8863aa"/><path d="m766.247 90.345 51.778 52.274-78.661 25.888z" fill="#7c4f9d"/><path d="m664.686 185.435-4.48-77.665 52.773-31.86z" fill="#643e84"/><path d="m743.347 83.874 14.936 40.325-56.257 84.636z" fill="#643e84"/><path d="m602.952 94.331 32.114-27.135 6.719 50.035-38.833-21.905" fill="#844698"/><path d="m551.175 79.143 92.103-5.972 6.846-16.931z" fill="#7f509c"/><path d="m530.018 97.067 74.181-23.896-74.181 49.535z" fill="#7f509c"/><path d="m606.936 114.244-44.557-20.661 18.917 49.786z" fill="#844698"/><path d="m712.979 203.523 64.388-65.883 39.165 19.75-41.489 30.206z" fill="#7c4f9d"/><path d="m799.855 217.258 73.183-45.014-2.985 74.676z" fill="#814598"/><path d="m763.429 266.336 32.192 43.397-44.805-9.958z" fill="#3a214e"/><path d="m764.755 275.214 94.839-19.25-35.761 50.119z" fill="#3a214e"/><path d="m752.309 266.336 58.497-50.283 48.791 35.098z" fill="#7c4f9d"/><path d="m718.288 210.826 83.641-40.243-39.496 93.347z" fill="#572d6a"/><path d="m793.632 276.542 37.837-10.206-46.133-17.34z" fill="#5c3c73"/><path d="m473.467074 140.503654c0 5.018603-4.067527 9.086129-9.08613 9.086129s-9.08613-4.067526-9.08613-9.086129 4.067527-9.08613 9.08613-9.08613 9.08613 4.067527 9.08613 9.08613" fill="#301a49"/><path d="m187.824383 407.895119c0 5.016119-4.07001 9.086129-9.08613 9.086129-5.018603 0-9.08613-4.07001-9.08613-9.086129 0-5.018603 4.067527-9.08613 9.08613-9.08613 5.01612 0 9.08613 4.067527 9.08613 9.08613" fill="#282928"/><path d="m273.390943 542.920619c0 5.018603-4.067527 9.08613-9.08613 9.08613s-9.08613-4.067527-9.08613-9.08613c0-5.016119 4.067527-9.086129 9.08613-9.086129s9.08613 4.07001 9.08613 9.086129m345.570919-34.849616c0 5.018603-4.067526 9.08613-9.086129 9.08613s-9.08613-4.067527-9.08613-9.08613 4.067527-9.08613 9.08613-9.08613 9.086129 4.067527 9.086129 9.08613" fill="#301a49"/><path d="m871.151008 617.089661c0 9.292238-7.534113 16.826351-16.828834 16.826351-9.29472 0-16.828833-7.534113-16.828833-16.826351 0-9.29472 7.534113-16.828833 16.828833-16.828833 9.294721 0 16.828834 7.534113 16.828834 16.828833" fill="#282928"/><path d="m364.076 511.299 6.896 1.214 12.391-7.933-3.685-8.18-15.068 12.096z" fill="#643673"/><path d="m409.544 499.079 34.524 4.428-.819-5.183-19.712-5.5z" fill="#743c94"/><path d="m379.609 504.495 11.551-7.365 6.087.844.752 13.281z" fill="#503576"/><path d="m376.83 502.789 10.916 10.226-14-6.248z" fill="#996ead"/><path d="m393.413 506.452 19.039 4.077-17.189 2.186z" fill="#9b6ead"/><path d="m404.322 491.446-14.895 9.635 30.541 6.747z" fill="#996ead"/><path d="m355.981 495.62-9.447 7.646 7.788 3.35 18.905-.39z" fill="#743c94"/><path d="m346.842 494.942-12.637 6.712 15.769 5.215z" fill="#503576"/><path d="m419.357544 738.109759.171343-44.531721m.002483 0 16.421585-38.872445m0 0 74.300653-141.290684m0 0 37.270763-41.238961m.002483 0 46.555551-35.055724m-.002483 0 43.230509-56.639938m0 0 47.007499-72.865348m-136.791076 164.56101 19.515686-23.573279m0 0 51.603952-67.41218m0 0 50.921066-78.986504m0 0 39.403855-80.858857m-24.651 86.26981 13.920974-28.142418m0 0 6.158404 1.720877m.002483 0 6.89344 7.280823m-.002483-.002483 17.705413 6.50109m.002483 0 15.396011 10.186199m0 0 47.28562 7.60116m0 0 33.528539-4.991288m-109.547585-103.448778-5.517732 17.151653m0 0 14.181713-3.37719m0 0-4.425112 13.809229m.002483 0 16.384336 1.544568m-.002483 0-8.246799 10.571099m0 0 13.230637-1.825172m0 0-4.849744 10.767275m.136578-1.922018 13.789363 1.221748m0-.002483-7.21626 11.912042m0 .002484 4.536857 14.720573m0 0-14.228894 1.328527m0-.002484-2.483228 9.699487m-.881546-1.827655-7.665723-1.956783m0 0-9.302171 3.113967m111.323094 18.058031 42.311715-55.058122m0 0 12.259694-88.464984m0 0-50.354889-85.346049m0 0-83.088795-58.9418904m-.002484 0-96.657151-13.6751344m0 0-83.503494 39.4808356m0 0-38.912177 53.4316084m0 0 3.220746 32.0634348m0 0 58.234171 78.159589m0 0 15.919972-.956043m111.807323-3.680143-18.199575 6.953037m.002483 0 3.724841-14.457351m0 0-13.203321 5.659276m0 0-1.41544-16.165812m0 0-13.992987 6.220485m0-.002483-1.335977-15.18742m.002484 0-14.618761 4.380413m-.002484 0-2.987322-17.315546m.002483 0-10.710161 11.648821m.990808-2.756383-2.647121-11.330967m0 0-8.082905 8.701229m.757384-2.746449-4.248802-13.801779m0 0-10.407207 12.550232m0 0-12.299427-.00745m0 0-4.288534-11.907076m0 0-8.450423 11.070229m.002483 0-15.624468.057114m-.002483 0-.260739 12.098285m0 0-4.571622 8.547269m30.05947 21.472469-42.862992 22.972339m0 0-21.385556 18.812932m0 0 12.77124-.052148m0 0-22.825828 14.601378m0 0-1.231681 10.484187m0 0 10.888953-4.065043m0 0-17.211251 17.727762m0 0 2.860678 5.748672m0 0-10.5562 15.681582m-.002483 0-1.633964 26.37436m0 0-13.734732 22.758781m0 0 3.752157 8.713646m.002483 0-15.669166 22.800996m0 0 .583558 21.748107m0-.002483-26.702146 52.214827m0 .002483-17.809708 9.878279m0-.002483-8.433041-4.857193m0 0-10.784658 12.584997m0 0-10.384858.720136m0 0-2.006447 8.887472m0 0-13.87131-5.140281m0 0-9.438748 12.545266m0 .002483-46.513336-4.93914m0-.002483-17.757561-8.69378m0 0 14.107216 20.04958m0 0 48.134884 8.798075m-.002483 0 41.40037-7.134313m33.35968-42.696615-33.35968 42.696615m0 0-10.399757 13.595671m0 0-34.427467 33.647734m0 0-33.272767 54.062348m0 0-20.876494 25.030935m0 .002483 20.521393-5.224711m0-.002483 18.636623-27.504229m0 0 24.847175-20.11911m-2.932692.831881-8.45539-2.748933m0 0 28.49752-12.719092m0 .002484-8.018342-4.77773m0 0 24.889391-14.134532m0 0-9.197875-4.832361m0-.002483 24.698181-14.767755m0 0-5.771021-4.412695m0 0 21.199314-11.104994m.002484-.002483-2.736517-6.89344m0 .002483 49.768847-56.481011m0-.002484 54.288322-65.465329m0 .002483 17.407426-22.721532m.002483 0-6.828876-5.55498m-.002483 0 12.542782-12.843254m-1.410473-.434564-.881546-12.381373m0 0 18.88743-17.077156m74.04488-120.702244-53.814025 61.661024m0 0-17.039908 26.853623m0 0 12.51795 2.726584m0 0-18.162326 18.611791m0 0 2.453429 10.849222m-39.381507 68.450168 3.650345 12.242313m-.002484 0-15.525139 13.436744m0-.002483 3.719875 9.612574m0 0-16.488631 10.573583m.111745-1.5694-1.047922 9.446198m0 0-12.719092 9.888212m.002484 0-.054631 10.888953m-.002484 0-14.492116 6.540822m0 0 1.946851 8.842773m0 0-14.367955 8.582035m0 0 1.621547 13.575805m0 0-31.127258 33.409344m0 0-3.940882 21.186898m0 0-24.911739 26.424025m0-.002483-15.703932 46.538168m0 .002484-6.252767 11.114926m-1.534634-.106778 6.277599 12.078419m0 0-14.660976 33.627868m0 0-2.222488 40.15379m17.946285 20.985757-17.946285-20.983274" stroke="#fff" stroke-width=".436"/><path d="m670.483869 302.370362-52.021135-49.202672m68.604129-68.26641 9.970158 26.548186m18.56461-6.2478-14.41017-8.383377m0-.002483-13.297684-11.050363m0 0-31.266318-4.045178m-77.081868 148.745334-54.717921-10.690295m-123.416411 397.351181 18.117628-23.548447m.069531-.730069-15.89514-16.605343m0 0 32.319207-22.269585m0 0-19.197833-9.741702m1.288795.09188 58.889743-68.951781m0 0-56.714435 46.130919m15.289232-48.517301 40.650436 2.326784m0-.002483-15.738697-28.745843m3.940883-21.186898 45.991858-12.632178m0 0-14.934131-20.044614m25.291673-37.543918-10.357542 57.588532m10.357542-57.588532 46.262531-6.553237m-4.258736-55.721144 4.258736 55.721144m70.267891-68.122383-69.932656 67.094326m51.603953-65.98929-56.197924 11.293719m36.063915-80.277782 20.134009 68.986546m65.338685-73.972867-65.338685 73.970384m51.502141-79.21496-71.63615 10.228414m14.569096-30.258128 57.067054 20.029714m39.662111-80.898589-25.825567 86.143165m30.359941-101.953875-96.21762 47.50911m54.116979-60.642901-69.632185 15.95722m0 0 15.515206 44.683198m0 0-60.297733 3.235646m0 0 44.514338 23.608044m.268189-71.526888-44.782527 47.918844m0 0-33.339814 63.371968m.002483 0 77.854152-39.76144m-77.854152 39.76144-9.493379 51.914356m0-.002483 64.2113-41.224061m-64.2113 41.224061 43.801652 8.949552m0 .002483-68.010638 31.176923m0 0-30.153832 51.680933m0 0 43.146079-12.520434m.002483-.002483-12.99473-39.160499m0 .002483 24.208986-40.126475m5.502833 72.577293-14.546748 17.429775m-.327786-1.278862-50.796903 45.043265m0 .002483 5.264442-41.127215m49.992338 48.408039-49.930257 33.82156m-5.26196-41.966547-38.090228 16.215476m0 0 .211075 21.512201m25.738654-67.928691-15.083125 32.376321m0 0-16.525879-15.040909m0 0-25.467983 23.918448m-48.400589-9.831098 50.106567-7.099548m29.632355 43.605477-35.092973 11.81768m.002483.002483-1.825172 25.669124m-31.350748 48.514818.355101-19.806224m0 0 31.743099-29.734167m485.557909-326.541946-33.071625 18.025749m0 0-21.248979 12.527883m0 0-35.316463 2.105777m0 0-29.696919-6.064042m-3.009672 26.314763 68.023054-22.354015m0-.002483-22.354015 29.652221m0 0 43.602994-42.180104m0 0-8.793109 37.144118m54.124428-143.634851-45.331319 106.490733m0 0-20.874012-45.818033m-.799599 1.02309-34.891831 59.431086m0-.002483-27.186376-32.609745m0 0 24.899323-5.256993m0 0 37.978483-22.584955m0 0 21.415355-23.007103m0 0 44.789976-37.665597m-104.183814 83.257655 2.287053 37.866738m35.69143-60.451693-.374967 58.345916m21.790322-81.353019-.541343 68.825136m-97.382254-36.826265 24.757779-16.285007m0 0 31.283701-28.383292m0 0 41.882117 12.669428m-84.293161 50.849051 11.127343-35.135187m0 0-3.076719-52.768587m-42.366346 40.80688 45.443065 11.96419m0-.002483 51.750463 7.293239m-98.114805-18.795549 43.287623-41.263793m0-.002484 39.22258-38.547142m.002483 0-4.864643 62.932437m4.864643-62.932437 37.017474 75.601865m0 0-5.564913-123.011646m0 0-31.452561 47.409781m-143.552904 38.557075 70.916014-29.831013m0 .002483 73.203066-9.585258m-109.865439 60.774512 35.892572-50.866434m-.002483 0-9.103512 70.762054m30.873968-186.1650904-31.104909 46.4810543m0 0 9.334453 68.9219821m-9.334453-68.9219821 82.743627 59.8706171m.566176-.856713-52.204894-105.4949584m-31.104909 46.4810543 114.196188 12.4633193m-179.74843-72.619508-5.535114 43.7172219m-.826915.2532892 71.914271 16.1856776m31.104909-46.4810543-102.192265 30.0420875m0 0 6.051625 49.0884433m0 0 65.035731-32.6494765m0 0-60.809277 98.4301761m31.241486-50.282876-51.030327 23.960663m0 0 15.562387-39.4584866m-15.562387 39.4584866-4.151956 16.034201m23.940797 10.285528-19.788841-26.322212m0 .002483-26.344562-46.5381685m0 0-33.012027-23.2430104m-.002484 0-8.9868-22.3068335m68.345873 92.0880124-31.144641 16.669907m-.002483 0-3.76209-22.450861m0 0 8.562169-40.7572145m.002483 0-40.921107 46.6399805m0 0 11.974123 28.703628m0 0 20.382332-34.588877m-29.391481 52.103081-2.964974-46.217832m0 0 1.033022-45.1798427m0 0 6.873574-24.7031482m0 0-47.941192 29.4610123m47.941192-29.4610123-44.789976 62.4929059m0 0 37.916402-37.7897577m81.278523-87.1861211-74.404949 62.4829729m0 0 68.869835-18.765751m-.826915.2532892-35.028409 41.7554722" stroke="#fff" stroke-width=".218"/><path d="m386.012764 515.65478 1.705978-16.930645" fill="#fff"/><path d="m386.012764 515.65478 1.705978-16.930645" stroke="#231f20" stroke-width=".473"/><path d="m341.657353 494.199694-4.042695 11.621505" fill="#fff"/><path d="m341.657353 494.199694-4.042695 11.621505" stroke="#231f20" stroke-width=".473"/><path d="m778.926418 286.194617c-.586042 1.018123-1.882286 1.363292-2.897927.77725-1.013156-.581075-1.360808-1.879803-.774767-2.895443.581076-1.01564 1.882287-1.360809 2.892961-.779734 1.01564.588525 1.363292 1.88477.779733 2.897927m-2.26967-38.097678c-.586042 1.018123-1.882287 1.363292-2.897927.77725-1.013156-.583558-1.363292-1.879803-.774767-2.895443.581076-1.01564 1.879804-1.360809 2.892961-.779733 1.013156.588525 1.363291 1.884769.779733 2.897926m-13.774464-29.873228c-.588524 1.018123-1.879803 1.360809-2.897926.77725-1.01564-.583558-1.360809-1.879803-.774767-2.895443.583558-1.01564 1.879803-1.363292 2.895443-.779733 1.010674.586041 1.358326 1.884769.77725 2.897926m-3.074235-52.768586c-.586042 1.01564-1.879804 1.360808-2.897927.77725-1.013157-.583559-1.360809-1.879803-.774767-2.895444.586042-1.01564 1.882287-1.360808 2.895443-.779733 1.010674.586042 1.358326 1.88477.777251 2.897927m-33.44411-29.44363c-.586041 1.018123-1.882286 1.363292-2.897926.77725-1.01564-.583558-1.358326-1.879803-.774767-2.89296.586041-1.01564 1.879803-1.363292 2.895443-.779733 1.010674.586041 1.358326 1.882286.77725 2.895443m-40.484059-19.761525c-.586042 1.01564-1.882287 1.360808-2.897927.77725-1.013157-.583559-1.360809-1.879803-.772284-2.895443.581076-1.015641 1.879804-1.360809 2.892961-.779734 1.01564.588525 1.363291 1.88477.77725 2.897927m-34.631092-16.5656117c-.586042 1.0156397-1.882287 1.3608087-2.895444.7772507-1.01564-.5835589-1.363292-1.8773205-.77725-2.8929606.583559-1.0156401 1.879803-1.3632919 2.895443-.7822167 1.013157.5860417 1.360809 1.8847698.777251 2.8979266m-41.949164-7.0796819c-.586042 1.0156401-1.882287 1.3608088-2.897927.7772503s-1.358325-1.8798033-.774767-2.8979266c.583559-1.0131569 1.879803-1.3608088 2.895444-.7772503 1.013156.5860417 1.360808 1.8822865.77725 2.8979266m-39.84587 1.4601379c-.586042 1.0181233-1.882287 1.3632919-2.897927.7797334-1.013157-.5860417-1.360809-1.8822865-.774767-2.8954434.583559-1.01564 1.879803-1.3632919 2.89296-.7822166 1.013157.5885249 1.363292 1.8847697.779734 2.8979266m7.496864-24.7031482c-.583559 1.0181233-1.882287 1.3632919-2.897927.7772502-1.013157-.5835585-1.360809-1.8798033-.774767-2.8954434.583559-1.0156401 1.879803-1.3608087 2.89296-.7797334 1.01564.5885249 1.363292 1.8847697.779734 2.8979266m68.249027-18.5124618c-.583558 1.0181233-1.882286 1.363292-2.897926.7797335-1.013157-.5835585-1.360809-1.8798033-.774767-2.8954434.583558-1.0156401 1.879803-1.3608087 2.89296-.7822167 1.01564.5885249 1.363292 1.8847697.779733 2.8979266m71.355545 16.3917854c-.583558 1.0156401-1.882286 1.363292-2.897926.7772502-1.013157-.5835584-1.363292-1.8798032-.774767-2.8929601.581075-1.0156401 1.879803-1.363292 2.89296-.7822167 1.01564.5885249 1.363292 1.8847697.779733 2.8979266m82.475439 59.6645093c-.586042 1.01564-1.88477 1.360809-2.897927.777251-1.013157-.586042-1.360809-1.879804-.774767-2.897927.583559-1.013157 1.879803-1.360809 2.89296-.77725 1.01564.586041 1.363292 1.884769.779734 2.897926m-230.607415 12.341641c-.586042 1.015641-1.879803 1.363292-2.897926.777251-1.01564-.583559-1.360809-1.879804-.774767-2.895444.583558-1.01564 1.882286-1.360808 2.895443-.779733 1.013157.586042 1.358325 1.882286.77725 2.897926m32.272026-4.718132c-.586042 1.01564-1.879803 1.360809-2.897926.77725-1.013157-.583558-1.360809-1.87732-.772284-2.895443.581075-1.01564 1.882286-1.360809 2.89296-.779734 1.01564.588525 1.360809 1.88477.77725 2.897927m34.596327 4.586521c-.586042 1.015641-1.879803 1.360809-2.895443.777251-1.01564-.583559-1.360809-1.879804-.777251-2.895444.586042-1.01564 1.882287-1.360808 2.895444-.779733 1.01564.586042 1.360809 1.88477.77725 2.897926" fill="#fff"/><path d="m750.272455 307.485811c-1.49987 2.607388-4.827395 3.491418-7.429817 1.996514-2.602423-1.499869-3.491418-4.822428-1.986582-7.42485 1.497386-2.604906 4.824911-3.496384 7.419884-2.001481 2.602422 1.507319 3.496384 4.834844 1.996515 7.429817" fill="#bcbcbc"/><path d="m608.321232 178.305827c-1.499869 2.604906-4.827394 3.491418-7.429817 1.994032-2.599939-1.499869-3.491418-4.822428-1.986582-7.422367 1.494903-2.607389 4.822428-3.498868 7.422367-2.001482 2.59994 1.504836 3.491418 4.834845 1.994032 7.429817m-33.935788 10.260697c-1.49987 2.607389-4.827395 3.493901-7.429817 1.996515-2.59994-1.49987-3.491418-4.822428-1.986582-7.424851 1.494903-2.607389 4.824911-3.493901 7.419884-1.998998 2.602422 1.502353 3.496384 4.832361 1.996515 7.427334" fill="#fff"/><path d="m584.797617 200.699574c-1.25403 2.175307-4.027795 2.915309-6.200619 1.666246-2.170341-1.251547-2.912826-4.022829-1.66128-6.195653 1.251547-2.175308 4.027796-2.920276 6.198137-1.673696 2.172824 1.258997 2.912826 4.035245 1.663762 6.203103m7.144246 9.483446c-1.25403 2.172824-4.030279 2.915309-6.200619 1.666246-2.172825-1.251547-2.91531-4.025312-1.66128-6.195653 1.251547-2.177791 4.030279-2.920276 6.195653-1.671212 2.172824 1.256513 2.917793 4.032761 1.666246 6.200619" fill="#8a8a8b"/><path d="m607.787338 210.269933c-1.251547 2.172824-4.027795 2.912826-6.200619 1.663763-2.167858-1.251547-2.912826-4.025312-1.661279-6.195653 1.251546-2.177791 4.030278-2.917793 6.198136-1.671212 2.172824 1.256513 2.915309 4.032761 1.663762 6.203102" fill="#bcbcbc"/><path d="m582.885532 180.59288c-1.25403 2.172824-4.027795 2.912826-6.20062 1.666246-2.17034-1.251547-2.912826-4.025312-1.663762-6.198136 1.25403-2.175308 4.030278-2.917793 6.200619-1.671212 2.170341 1.256513 2.912826 4.035244 1.663763 6.203102m-.347652-12.445937c-1.256513 2.175308-4.030278 2.91531-6.200619 1.666246-2.172825-1.251547-2.91531-4.025312-1.663763-6.195653 1.251547-2.17779 4.032762-2.920275 6.198136-1.671212 2.170341 1.25403 2.915309 4.032762 1.666246 6.200619" fill="#d8d9d9"/><path d="m599.180471 168.728019c-1.25403 2.172824-4.027795 2.912826-6.200619 1.666245-2.167858-1.251546-2.912826-4.025312-1.661279-6.195653 1.251546-2.17779 4.030278-2.917792 6.198136-1.671212 2.172824 1.256513 2.915309 4.032762 1.663762 6.20062m7.688073-11.303652c-1.25403 2.172824-4.027795 2.912826-6.200619 1.666245-2.167858-1.251546-2.91531-4.027795-1.663763-6.198136 1.25403-2.175307 4.032762-2.917792 6.200619-1.671212 2.172825 1.258996 2.912826 4.035245 1.663763 6.203103m5.0782 10.01734c-1.256513 2.172824-4.032761 2.912826-6.203102 1.666245-2.172824-1.251546-2.912826-4.027795-1.661279-6.198136 1.249063-2.17779 4.027795-2.917792 6.195652-1.671212 2.170341 1.256513 2.91531 4.032762 1.668729 6.203103m11.328485.807049c-1.256513 2.172824-4.030279 2.910342-6.203103 1.663762-2.170341-1.251547-2.910343-4.025312-1.658796-6.195653 1.251547-2.175307 4.027795-2.917792 6.195653-1.671212 2.172824 1.256513 2.917792 4.032762 1.666246 6.203103m10.414656-12.699226c-1.25403 2.172824-4.030278 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.025312-1.661279-6.198136 1.249063-2.175307 4.027795-2.917792 6.195653-1.668729 2.172824 1.25403 2.915309 4.030279 1.666245 6.20062m13.171039 7.464582c-1.256513 2.172824-4.032761 2.915309-6.203102 1.666246-2.170341-1.251547-2.912826-4.025312-1.661279-6.195653 1.251546-2.177791 4.030278-2.920276 6.198136-1.671212 2.170341 1.256513 2.915309 4.032761 1.666245 6.200619m11.390565 3.704975c-1.254029 2.175308-4.030278 2.912826-6.200619 1.666246-2.172824-1.251547-2.912826-4.025312-1.661279-6.195653 1.251547-2.17779 4.030278-2.920275 6.195653-1.671212 2.172824 1.256513 2.915309 4.032762 1.666245 6.200619m-10.47922 10.014857c-1.256513 2.172825-4.030278 2.912826-6.203103 1.666246-2.172824-1.251547-2.912826-4.027795-1.661279-6.198136 1.249064-2.175307 4.030279-2.917792 6.195653-1.668729 2.172824 1.25403 2.915309 4.030278 1.668729 6.200619m-9.945327-5.825652c-1.251546 2.172825-4.027795 2.912826-6.200619 1.663763-2.170341-1.249064-2.912826-4.022829-1.661279-6.195653 1.249063-2.175307 4.027795-2.917792 6.198136-1.671212 2.170341 1.256513 2.912826 4.032761 1.663762 6.203102m22.299384 13.049361c-1.251546 2.175308-4.027795 2.91531-6.200619 1.666246-2.170341-1.251547-2.912826-4.025312-1.658796-6.198136 1.249063-2.175307 4.025312-2.917792 6.195653-1.671212 2.170341 1.258996 2.912826 4.035245 1.663762 6.203102m15.872791-5.217261c-1.256513 2.172824-4.032761 2.912826-6.203102 1.663763-2.170341-1.249064-2.910343-4.025312-1.658796-6.195653 1.249063-2.177791 4.030278-2.917793 6.195652-1.671212 2.170341 1.256513 2.912826 4.032761 1.666246 6.203102m-.340202 15.994469c-1.251547 2.172824-4.027795 2.912826-6.200619 1.666246-2.170341-1.251547-2.91531-4.027795-1.66128-6.198136 1.251547-2.175308 4.030279-2.917793 6.198136-1.668729 2.172825 1.25403 2.91531 4.030278 1.663763 6.200619m15.259434-6.461358c-1.25403 2.172824-4.027796 2.912826-6.20062 1.666246-2.170341-1.251547-2.915309-4.025312-1.661279-6.198136 1.249063-2.175308 4.030278-2.917793 6.198136-1.671213 2.170341 1.256514 2.912826 4.032762 1.663763 6.203103m.258255 16.416618c-1.251546 2.172824-4.027795 2.912826-6.200619 1.663762-2.167858-1.249063-2.912826-4.022829-1.658796-6.195653 1.249063-2.172824 4.027795-2.917792 6.195653-1.671212 2.175307 1.256513 2.915309 4.035245 1.663762 6.203103m10.203582 9.056331c-1.254029 2.172824-4.027795 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.027795-1.661279-6.198136 1.251547-2.175307 4.030278-2.917792 6.195653-1.671212 2.172824 1.256513 2.917792 4.035245 1.666245 6.203103m2.726584-13.47896c-1.256513 2.172824-4.030278 2.91531-6.203102 1.666246-2.170341-1.251547-2.912826-4.025312-1.661279-6.195653 1.251546-2.17779 4.030278-2.920275 6.195652-1.671212 2.175308 1.256513 2.917793 4.032762 1.668729 6.200619m14.541781 7.13928c-1.251546 2.175307-4.027795 2.915309-6.200619 1.666245-2.167858-1.251546-2.912826-4.025312-1.663763-6.198136 1.25403-2.175307 4.032762-2.917792 6.20062-1.668729 2.172824 1.256514 2.915309 4.032762 1.663762 6.20062m-4.566655 16.235342c-1.25403 2.172824-4.027796 2.912826-6.20062 1.663762-2.170341-1.249063-2.912826-4.022828-1.661279-6.195653 1.251547-2.172824 4.030278-2.917792 6.198136-1.671212 2.170341 1.256513 2.915309 4.032762 1.663763 6.203103m13.213254-2.336717c-1.25403 2.172824-4.030279 2.910342-6.20062 1.663762-2.170341-1.251547-2.912826-4.025312-1.661279-6.198136s4.030279-2.915309 6.195653-1.668729c2.172824 1.256513 2.917792 4.032762 1.666246 6.203103" fill="#fff"/><path d="m721.769968 235.017779c-1.251546 2.172825-4.027795 2.912826-6.200619 1.663763-2.170341-1.249064-2.912826-4.022829-1.658796-6.195653 1.24658-2.175307 4.027795-2.920276 6.195653-1.668729 2.170341 1.25403 2.912826 4.030278 1.663762 6.200619m8.269148 11.673653c-1.25403 2.175308-4.027795 2.912826-6.200619 1.663763-2.170341-1.249064-2.915309-4.022829-1.661279-6.195653 1.249063-2.175307 4.027795-2.917792 6.198136-1.671212 2.170341 1.256513 2.910342 4.032761 1.663762 6.203102m9.821165 8.505055c-1.251546 2.172824-4.027795 2.912826-6.200619 1.663762-2.170341-1.251546-2.912826-4.022828-1.661279-6.195652 1.249063-2.175308 4.030278-2.917793 6.198136-1.671213 2.172824 1.256514 2.912826 4.032762 1.663762 6.203103m13.943323-.017383c-1.251546 2.175308-4.025312 2.912826-6.198136 1.666246-2.167857-1.251547-2.915309-4.025312-1.663762-6.198136 1.251546-2.175307 4.030278-2.917793 6.198136-1.668729 2.172824 1.256513 2.915309 4.032762 1.663762 6.200619m-7.300689 11.090095c-1.25403 2.175307-4.025312 2.915309-6.200619 1.663762-2.167858-1.249063-2.912826-4.022828-1.661279-6.193169 1.249063-2.177791 4.030278-2.920276 6.200619-1.671213 2.170341 1.256514 2.910343 4.032762 1.661279 6.20062m5.453168 14.916748c-1.251547 2.175307-4.027795 2.912826-6.203103 1.666246-2.167857-1.251547-2.912825-4.027795-1.661279-6.198136 1.251547-2.177791 4.030279-2.917793 6.198136-1.671213 2.172824 1.256514 2.917793 4.035245 1.666246 6.203103" fill="#d8d9d9"/><path d="m736.947455 281.732257c-1.256513 2.175307-4.030278 2.912826-6.203102 1.666246-2.172824-1.251547-2.912826-4.025312-1.661279-6.195653 1.251546-2.177791 4.030278-2.920276 6.195652-1.671212 2.170341 1.256513 2.91531 4.032761 1.668729 6.200619m-1.097586 9.550493c-1.25403 2.172825-4.030279 2.91531-6.20062 1.666246-2.172824-1.251547-2.912825-4.025312-1.661279-6.198136 1.251547-2.175307 4.030279-2.917792 6.195653-1.668729 2.172824 1.25403 2.917793 4.032762 1.666246 6.200619" fill="#bcbcbc"/><path d="m732.010799 298.426996c-1.251547 2.172824-4.027795 2.912826-6.200619 1.663763-2.167858-1.249064-2.912826-4.025312-1.66128-6.195653 1.251547-2.175308 4.030279-2.917793 6.198136-1.671212 2.172825 1.256513 2.912826 4.032761 1.663763 6.203102m-5.676658-9.94036c-1.25403 2.172824-4.027796 2.912826-6.20062 1.666246-2.170341-1.251547-2.912826-4.027795-1.661279-6.198136 1.251547-2.175308 4.027795-2.917793 6.195653-1.671212 2.175307 1.256513 2.917792 4.032761 1.666246 6.203102m-11.112444 2.304435c-1.25403 2.175308-4.030278 2.912826-6.203102 1.663763-2.165375-1.249064-2.910343-4.022829-1.658796-6.195653 1.251546-2.175307 4.030278-2.917792 6.198136-1.668729 2.172824 1.25403 2.912826 4.030278 1.663762 6.200619" fill="#bcbcbc"/><path d="m707.747182 282.775213c-1.256513 2.172824-4.030278 2.915309-6.203103 1.666245-2.17034-1.251546-2.912825-4.025312-1.658796-6.198136 1.249064-2.175307 4.027796-2.917792 6.195653-1.668729 2.172824 1.256513 2.917793 4.032762 1.666246 6.20062" fill="#8a8a8b"/><path d="m700.600453 281.459102c-1.256513 2.172824-4.032762 2.912826-6.203103 1.666246-2.17034-1.251547-2.912826-4.025312-1.661279-6.198136 1.251547-2.175308 4.030279-2.917793 6.195653-1.671213 2.170341 1.256514 2.917792 4.035245 1.668729 6.203103" fill="#8a8a8b"/><path d="m673.533272 304.004325c-1.256513 2.172825-4.030278 2.912826-6.203102 1.666246-2.170341-1.251547-2.910343-4.025312-1.658796-6.198136 1.249063-2.175307 4.030278-2.917792 6.195652-1.668729 2.172825 1.256513 2.917793 4.030278 1.666246 6.200619" fill="#fff"/><path d="m688.268745 309.60152c-1.25403 2.175308-4.027795 2.912826-6.203103 1.666246-2.170341-1.251547-2.912826-4.025312-1.661279-6.198136 1.251547-2.175307 4.030278-2.917792 6.198136-1.668729 2.172824 1.25403 2.912826 4.030278 1.666246 6.200619m-47.027365 73.145953c-1.25403 2.172824-4.030278 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.025312-1.661279-6.198136 1.249063-2.175307 4.030278-2.917792 6.195653-1.668729 2.170341 1.25403 2.915309 4.032762 1.666245 6.20062" fill="#d8d9d9"/><path d="m621.571735 383.758146c-1.256514 2.172824-4.027796 2.912826-6.20062 1.666246-2.172824-1.251547-2.912826-4.027795-1.661279-6.198136 1.249063-2.175307 4.027795-2.917793 6.195653-1.668729 2.170341 1.25403 2.915309 4.030278 1.666246 6.200619" fill="#fff"/><path d="m599.024028 439.459425c-1.25403 2.172824-4.030278 2.912826-6.203103 1.666245-2.167857-1.251546-2.912826-4.025312-1.661279-6.198136 1.251547-2.175307 4.030279-2.917792 6.198136-1.671212 2.172824 1.258996 2.915309 4.032762 1.666246 6.203103" fill="#d8d9d9"/><path d="m569.967782 450.800325c-1.25403 2.175307-4.027795 2.912826-6.20062 1.666246-2.17034-1.251547-2.915309-4.025312-1.661279-6.198136 1.249064-2.175308 4.027795-2.917793 6.198136-1.671212 2.172824 1.258996 2.915309 4.035244 1.663763 6.203102" fill="#fff"/><path d="m551.390756 475.374345c-1.25403 2.172825-4.030278 2.912826-6.203102 1.666246-2.172825-1.251547-2.910343-4.025312-1.658796-6.198136 1.249063-2.175307 4.030278-2.917792 6.195652-1.668729 2.170341 1.25403 2.91531 4.030279 1.666246 6.200619m-37.084521 40.320167c-1.25403 2.172824-4.030278 2.912826-6.203102 1.666246-2.167858-1.251547-2.912826-4.027795-1.658797-6.198136 1.251547-2.175308 4.027796-2.917793 6.195653-1.668729 2.172825 1.25403 2.91531 4.032761 1.666246 6.200619" fill="#d8d9d9"/><g fill="#fff"><path d="m480.161856 577.579027c-1.256514 2.175307-4.030279 2.912826-6.20062 1.666246-2.175307-1.251547-2.915309-4.025312-1.663762-6.198136 1.249063-2.175308 4.030278-2.917793 6.195653-1.671212 2.170341 1.258996 2.915309 4.032761 1.668729 6.203102m-40.769631-.69282c-1.25403 2.175307-4.030279 2.912826-6.203103 1.666245-2.167857-1.251546-2.912826-4.027795-1.658796-6.198136 1.249064-2.175307 4.027795-2.917792 6.198136-1.668729 2.172824 1.25403 2.912826 4.030279 1.663763 6.20062m-15.130306 46.299778c-1.25403 2.175308-4.027795 2.912826-6.203103 1.666246-2.165374-1.251547-2.910342-4.027795-1.658796-6.198136 1.251547-2.175308 4.027796-2.917793 6.198137-1.671212 2.172824 1.256513 2.912825 4.032761 1.663762 6.203102m-8.423108 11.879761c-1.25403 2.172824-4.025312 2.912826-6.200619 1.666246-2.167858-1.251547-2.912826-4.027795-1.66128-6.198136 1.251547-2.175308 4.030279-2.917793 6.198136-1.671212 2.172825 1.256513 2.912826 4.035244 1.663763 6.203102m-62.820692-4.467326c-1.256513 2.175307-4.032762 2.915309-6.203102 1.666245-2.172825-1.251546-2.912826-4.027795-1.658796-6.198136 1.24658-2.175307 4.027795-2.917792 6.193169-1.668729 2.170341 1.25403 2.917793 4.032762 1.668729 6.20062m-22.488109 7.228675c-1.25403 2.175308-4.027795 2.915309-6.203103 1.666246-2.170341-1.251547-2.910342-4.027795-1.658796-6.195653 1.249064-2.177791 4.030279-2.920276 6.195653-1.671212 2.170341 1.25403 2.912826 4.032761 1.666246 6.200619m23.888649-26.955435c-1.254029 2.172824-4.027795 2.912826-6.200619 1.663762-2.172824-1.25403-2.912826-4.025312-1.661279-6.195653 1.251547-2.17779 4.030278-2.917792 6.198136-1.671212 2.170341 1.25403 2.912826 4.032762 1.663762 6.203103m17.236083-7.777469c-1.25403 2.175307-4.030278 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.027795-1.661279-6.198136 1.251546-2.175307 4.027795-2.917792 6.195653-1.668729 2.17034 1.256514 2.917792 4.032762 1.666245 6.20062m12.788622-22.083343c-1.256513 2.175307-4.030278 2.915309-6.203102 1.668729-2.170341-1.25403-2.912826-4.030279-1.661279-6.198137 1.25403-2.17779 4.032761-2.920275 6.198136-1.671212 2.172824 1.256513 2.915309 4.032762 1.666245 6.20062m20.265621-17.506755c-1.251547 2.172824-4.030279 2.912826-6.200619 1.663763-2.170341-1.251547-2.912826-4.025312-1.66128-6.195653 1.25403-2.177791 4.030279-2.917793 6.195653-1.671213 2.172824 1.256514 2.917793 4.032762 1.666246 6.203103m-18.090313-6.391828c-1.256513 2.172824-4.030279 2.912826-6.203103 1.663763-2.172824-1.249064-2.910343-4.022829-1.658796-6.195653 1.249064-2.175308 4.030279-2.917793 6.195653-1.668729 2.170341 1.25403 2.912826 4.030278 1.666246 6.200619m34.663374-12.512984c-1.251547 2.172824-4.027795 2.912826-6.203103 1.66128-2.165374-1.249064-2.910342-4.022829-1.658796-6.19317 1.251547-2.177791 4.030279-2.917793 6.198136-1.671212 2.172825 1.251546 2.912826 4.032761 1.663763 6.203102m18.095279-19.247497c-1.256513 2.177791-4.030278 2.915309-6.203102 1.668729-2.170341-1.25403-2.912826-4.027795-1.658796-6.198136 1.249063-2.175307 4.030278-2.920276 6.195653-1.671212 2.170341 1.256513 2.915309 4.032761 1.666245 6.200619m-17.241049-2.19269c-1.251547 2.175308-4.027795 2.915309-6.200619 1.666246-2.170341-1.251547-2.910343-4.027795-1.658796-6.198136 1.251547-2.175308 4.027795-2.917793 6.195653-1.671212 2.172824 1.258996 2.915309 4.035244 1.663762 6.203102m8.85519-14.040169c-1.25403 2.175308-4.030279 2.912826-6.203103 1.666246-2.172824-1.251547-2.910342-4.025312-1.658796-6.198136 1.251547-2.172824 4.030279-2.915309 6.195653-1.668729 2.170341 1.258996 2.915309 4.032762 1.666246 6.200619m-41.472384 7.171562c-1.25403 2.172824-4.027796 2.912826-6.20062 1.663762-2.172824-1.251547-2.912826-4.025312-1.661279-6.198136 1.249064-2.175307 4.030278-2.915309 6.198136-1.668729 2.167858 1.25403 2.912826 4.032762 1.663763 6.203103m25.199793-22.341599c-1.25403 2.177791-4.030278 2.915309-6.203102 1.666246-2.167858-1.251547-2.912826-4.022829-1.661279-6.198136 1.254029-2.175308 4.030278-2.917793 6.200619-1.671213 2.172824 1.258997 2.915309 4.035245 1.663762 6.203103m13.789363-9.140761c-1.251547 2.172824-4.027795 2.912826-6.200619 1.663763-2.170341-1.249064-2.912826-4.025312-1.658796-6.195653 1.249063-2.175308 4.027795-2.917793 6.195653-1.671212 2.172824 1.256513 2.912826 4.032761 1.663762 6.203102m18.800516-7.037467c-1.25403 2.175307-4.027795 2.912826-6.200619 1.666246-2.170341-1.251547-2.912826-4.022829-1.661279-6.198136 1.251547-2.175308 4.030278-2.917793 6.198136-1.668729 2.172824 1.256513 2.912826 4.032761 1.663762 6.200619m11.425331 28.832756c-1.25403 2.172824-4.030279 2.912826-6.203103 1.666245-2.170341-1.251546-2.910343-4.025311-1.658796-6.198136 1.249063-2.175307 4.030278-2.917792 6.195653-1.671212 2.170341 1.256513 2.915309 4.032762 1.666246 6.203103"/><path d="m460.410263 515.761559c-1.251546 2.172824-4.027795 2.915309-6.200619 1.663763-2.167858-1.249064-2.915309-4.020346-1.661279-6.195653 1.251546-2.175308 4.027795-2.917793 6.198136-1.668729 2.172824 1.256513 2.915309 4.032761 1.663762 6.200619m4.390347-49.125691c-1.251547 2.172824-4.030279 2.912825-6.203103 1.663762-2.170341-1.249063-2.910343-4.025312-1.661279-6.195653 1.251547-2.175307 4.030278-2.917792 6.198136-1.668729 2.172824 1.25403 2.912826 4.030279 1.666246 6.20062m25.738654-53.019393c-1.25403 2.172824-4.027795 2.915309-6.203103 1.666246-2.170341-1.251547-2.910343-4.025312-1.658796-6.198136 1.249064-2.175308 4.027795-2.917793 6.198136-1.668729 2.167858 1.256513 2.910343 4.032761 1.663763 6.200619m1.472554-20.717568c-1.25403 2.175307-4.030279 2.915309-6.203103 1.666246-2.170341-1.251547-2.912826-4.022829-1.658796-6.195653 1.24658-2.175307 4.027795-2.917792 6.195653-1.671212 2.170341 1.256513 2.912826 4.032761 1.666246 6.200619m14.926681-21.839987c-1.25403 2.172824-4.030279 2.912826-6.203103 1.666246-2.170341-1.251547-2.910343-4.027795-1.658796-6.198136 1.249064-2.175307 4.030279-2.917792 6.195653-1.671212 2.170341 1.256513 2.915309 4.032761 1.666246 6.203102m-3.779473-10.86412c-1.25403 2.172824-4.027795 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.025312-1.661279-6.195653 1.249063-2.175307 4.027795-2.920275 6.195653-1.671212 2.170341 1.25403 2.912826 4.032762 1.666245 6.20062m13.446678-21.698443c-1.25403 2.175307-4.030279 2.912826-6.200619 1.666246-2.175308-1.251547-2.912826-4.025312-1.66128-6.198137 1.249064-2.175307 4.030279-2.917792 6.195653-1.668729 2.170341 1.25403 2.915309 4.032762 1.666246 6.20062m.767317-13.131308c-1.251547 2.172824-4.027795 2.912826-6.203102 1.666246-2.167858-1.251547-2.912826-4.027795-1.658796-6.200619 1.249063-2.175308 4.030278-2.91531 6.198136-1.668729 2.172824 1.256513 2.915309 4.032761 1.663762 6.203102m1.221748-14.87205c-1.256513 2.175308-4.030278 2.912826-6.200619 1.666246-2.172824-1.251547-2.912826-4.022829-1.661279-6.195653 1.249063-2.177791 4.027795-2.920276 6.195652-1.671212 2.170341 1.256513 2.91531 4.032761 1.666246 6.200619m9.08613-14.074934c-1.251547 2.175307-4.027795 2.912826-6.203103 1.666246-2.167857-1.251547-2.912826-4.025312-1.658796-6.198136 1.251547-2.172824 4.030279-2.917793 6.195653-1.671212 2.172824 1.256513 2.917793 4.035244 1.666246 6.203102m45.629307 60.774512c-1.256513 2.172825-4.030278 2.912826-6.200619 1.666246-2.172824-1.251547-2.912826-4.025312-1.661279-6.198136 1.251546-2.175307 4.027795-2.917792 6.195652-1.671212 2.172825 1.256513 2.917793 4.032761 1.666246 6.203102m7.881765 7.648341c-1.25403 2.172825-4.027796 2.912826-6.20062 1.666246-2.170341-1.251547-2.912826-4.027795-1.661279-6.198136 1.249063-2.175307 4.030278-2.917792 6.198136-1.671212 2.170341 1.256513 2.912826 4.032762 1.663763 6.203102m3.128866-19.16555c-1.256513 2.172824-4.030278 2.912826-6.200619 1.666246-2.175307-1.251547-2.912826-4.025312-1.661279-6.198137 1.24658-2.172824 4.027795-2.917792 6.193169-1.668729 2.172825 1.25403 2.91531 4.032762 1.668729 6.20062m-.762351-14.139498c-1.251546 2.175307-4.027795 2.915309-6.200619 1.666246-2.172824-1.251547-2.912826-4.025312-1.658796-6.195653 1.24658-2.177791 4.027795-2.920276 6.195653-1.671212 2.170341 1.256513 2.912826 4.032761 1.663762 6.200619m19.759042-16.630175c-1.254029 2.172824-4.030278 2.915309-6.203102 1.666245-2.167858-1.251546-2.910343-4.025312-1.658796-6.195653 1.251547-2.17779 4.027795-2.920275 6.195653-1.671212 2.172824 1.256513 2.917792 4.032762 1.666245 6.20062m-3.300209-11.576807c-1.256513 2.172824-4.030278 2.912825-6.203103 1.666245-2.17034-1.251546-2.910342-4.025312-1.658796-6.198136 1.246581-2.175307 4.027796-2.917792 6.195653-1.668729 2.170341 1.25403 2.915309 4.030279 1.666246 6.20062m18.082863-17.551453c-1.251546 2.172824-4.027795 2.912826-6.200619 1.666246-2.167858-1.251547-2.912826-4.025312-1.661279-6.198137 1.251547-2.175307 4.030278-2.917792 6.198136-1.668729 2.172824 1.25403 2.915309 4.030279 1.663762 6.20062m-11.966673-4.509542c-1.25403 2.172825-4.032762 2.912826-6.203103 1.666246-2.170341-1.251547-2.912826-4.025312-1.661279-6.198136 1.251546-2.175307 4.027795-2.917792 6.198136-1.668729 2.172824 1.25403 2.915309 4.032762 1.666246 6.200619m-64.151702-7.34787c-1.25403 2.175307-4.027795 2.915309-6.20062 1.666246-2.172824-1.251547-2.912826-4.022829-1.661279-6.195653 1.249064-2.177791 4.030279-2.920276 6.198136-1.671212 2.170341 1.256513 2.912826 4.032761 1.663763 6.200619m-9.274855-7.407468c-1.25403 2.172824-4.030279 2.912826-6.203103 1.663763-2.167858-1.249064-2.912826-4.022829-1.658796-6.195653 1.249064-2.175308 4.027795-2.917793 6.195653-1.671212 2.172824 1.256513 2.915309 4.035244 1.666246 6.203102m23.533548-13.555939c-1.251547 2.172824-4.027796 2.912826-6.203103 1.666245-2.167858-1.251546-2.910343-4.025312-1.658796-6.198136 1.251547-2.175307 4.027795-2.917792 6.198136-1.668729 2.170341 1.25403 2.915309 4.030279 1.663763 6.20062m-13.454128-2.334234c-.995774 1.720876-3.190947 2.306918-4.909341 1.318594-1.713427-.990808-2.301952-3.183498-1.30866-4.901892.985841-1.720877 3.183497-2.309401 4.896924-1.321077 1.718394.993291 2.306919 3.190948 1.321077 4.904375m-12.180231 26.329662c-.993291 1.718393-3.185981 2.301952-4.904374 1.316111-1.718394-.990808-2.304436-3.183498-1.316111-4.901892.990808-1.720876 3.188464-2.309401 4.901891-1.321077 1.718394.993291 2.306919 3.190948 1.318594 4.906858"/><path d="m525.182772 289.224155c-.993291 1.718393-3.188464 2.304435-4.906858 1.318594-1.71591-.993291-2.301952-3.185981-1.308661-4.901892.985842-1.720876 3.183498-2.309401 4.896925-1.32356 1.718394.993291 2.304435 3.190947 1.318594 4.906858m-181.424609 201.181167c-.774767 1.340943-2.488194 1.80034-3.829137 1.028056-1.338459-.772283-1.80034-2.48571-1.025573-3.82417.772284-1.34591 2.485711-1.805307 3.824171-1.033023 1.343426.774767 1.802823 2.488194 1.030539 3.829137m-9.605124 15.621985c-.774767 1.343426-2.485711 1.797857-3.829137 1.030539-1.33846-.77725-1.795373-2.488194-1.02309-3.829137.769801-1.343426 2.488194-1.802823 3.821688-1.030539 1.343426.77725 1.805306 2.488194 1.030539 3.829137m85.711084 213.664353c-.79215 1.368258-2.537859 1.835105-3.9086 1.047922-1.365775-.787184-1.835106-2.535376-1.042956-3.903634.7847-1.370742 2.537859-1.837589 3.901151-1.050406 1.368258.789667 1.837588 2.537859 1.050405 3.906118m17.891655-247.565376c-.990808 1.718393-3.185981 2.301952-4.906858 1.31611-1.713427-.990807-2.301952-3.183497-1.311144-4.899408.988324-1.72336 3.185981-2.311885 4.899408-1.32356 1.718393.990808 2.306918 3.190947 1.318594 4.906858m-21.159583 12.512984c-.993291 1.718393-3.185981 2.301952-4.906857 1.318593-1.715911-.993291-2.301952-3.185981-1.311145-4.904374.988325-1.720877 3.185982-2.306918 4.901892-1.318594 1.71591.988325 2.304435 3.188464 1.31611 4.904375m-16.396751 3.712425c-.993291 1.718393-3.185981 2.304435-4.901892 1.316111-1.718393-.988325-2.304435-3.183498-1.313627-4.901892.988324-1.720876 3.185981-2.309401 4.899408-1.321077 1.718393.993291 2.304435 3.188464 1.316111 4.906858m-9.818682 11.360766c-.988325 1.71591-3.183498 2.304435-4.901892 1.316111-1.718393-.990808-2.306918-3.183498-1.31611-4.901891.993291-1.720877 3.188464-2.306919 4.904374-1.321078 1.718394.993291 2.304435 3.188465 1.313628 4.906858"/><path d="m344.731589 496.466881c-.990808 1.71591-3.183498 2.304435-4.901892 1.31611-1.718393-.990807-2.304435-3.183497-1.31611-4.901891.993291-1.720877 3.190947-2.306918 4.904374-1.321077 1.718394.993291 2.304435 3.190947 1.313628 4.906858m-17.357761-9.140761c-.990808 1.71591-3.188465 2.304435-4.904375 1.318594-1.71591-.993291-2.304435-3.188464-1.313627-4.904375.990808-1.720876 3.185981-2.309401 4.899408-1.321077 1.718393.990808 2.306918 3.190948 1.318594 4.906858m13.704933 20.551192c-.993291 1.720876-3.185981 2.304435-4.904375 1.31611-1.718393-.988324-2.304435-3.181014-1.313627-4.899408.990808-1.720877 3.185981-2.309402 4.899408-1.321077 1.718393.990808 2.306918 3.188464 1.318594 4.904375m103.292335 21.420321c-.993291 1.720877-3.190947 2.309401-4.906858 1.321077-1.718393-.990808-2.304435-3.183498-1.311144-4.901891.988325-1.72336 3.183498-2.309402 4.899408-1.323561 1.718394.993291 2.304435 3.190948 1.318594 4.904375m-15.723797 20.305352c-.990808 1.718393-3.183498 2.304435-4.901891 1.316111-1.718394-.990808-2.306919-3.183498-1.316111-4.901892.993291-1.718393 3.188464-2.306918 4.904375-1.321077 1.71591.993291 2.304435 3.190948 1.313627 4.906858m-15.857892 18.216958c-.990807 1.720876-3.183497 2.306918-4.901891 1.321077-1.720877-.990808-2.306918-3.185981-1.31611-4.904375.993291-1.72336 3.188464-2.309401 4.901891-1.318594 1.718393.990808 2.306918 3.188465 1.31611 4.901892m-18.827831 15.602119c-.990808 1.718393-3.185981 2.304435-4.904375 1.318593-1.718393-.993291-2.304435-3.183497-1.313627-4.901891.990808-1.72336 3.188464-2.309401 4.901891-1.321077 1.718394.990808 2.306919 3.190948 1.316111 4.904375m170.97767-350.393348c-1.25403 2.172824-4.030279 2.912826-6.203103 1.666246-2.170341-1.251547-2.910342-4.027795-1.658796-6.198136 1.249064-2.175308 4.030279-2.917793 6.195653-1.668729 2.172824 1.256513 2.917793 4.030278 1.666246 6.200619m57.737525 22.428512c-1.25403 2.172824-4.030279 2.912826-6.200619 1.663762-2.172825-1.251546-2.912826-4.022828-1.66128-6.195653 1.251547-2.175307 4.027795-2.917792 6.195653-1.671212 2.172824 1.256513 2.917793 4.032762 1.666246 6.203103m-200.699421 391.813584c-1.25403 2.175307-4.030279 2.915309-6.203103 1.666245-2.170341-1.251546-2.910343-4.027795-1.656313-6.198136 1.246581-2.172824 4.027795-2.917792 6.19317-1.668729 2.170341 1.25403 2.915309 4.032762 1.666246 6.20062m17.817158 10.978349c-1.256514 2.172824-4.030279 2.912826-6.20062 1.666246-2.172824-1.251547-2.912826-4.027795-1.661279-6.198136 1.249064-2.175308 4.030278-2.917793 6.195653-1.671213 2.170341 1.258997 2.915309 4.035245 1.666246 6.203103m-32.977263 21.636362c-1.256513 2.172824-4.030278 2.912826-6.200619 1.666246-2.172824-1.251547-2.912826-4.027795-1.663763-6.198136 1.251547-2.175308 4.030279-2.917793 6.198136-1.668729 2.167858 1.25403 2.912826 4.030278 1.666246 6.200619m16.543262 17.655748c-1.256513 2.175308-4.030278 2.912826-6.203102 1.666246-2.172824-1.251547-2.912826-4.027795-1.658796-6.200619 1.249063-2.172824 4.027795-2.91531 6.193169-1.668729 2.172825 1.256513 2.91531 4.035245 1.668729 6.203102m-18.020782 21.852403c-1.251547 2.175308-4.027795 2.912826-6.20062 1.666246-2.167857-1.251547-2.912826-4.025312-1.661279-6.195653 1.251547-2.177791 4.030278-2.920276 6.198136-1.671212 2.172824 1.256513 2.915309 4.032762 1.663763 6.200619m17.345344 19.409652c-1.254029 2.177791-4.030278 2.915309-6.200619 1.668729-2.170341-1.251547-2.912826-4.025312-1.658796-6.198136 1.249064-2.172824 4.027795-2.917792 6.19317-1.671212 2.172824 1.258996 2.917792 4.032761 1.666245 6.200619m40.747282-188.601881c-1.25403 2.172824-4.032761 2.912826-6.200619 1.666245-2.175307-1.251546-2.915309-4.027795-1.661279-6.200619 1.249063-2.172824 4.030278-2.915309 6.195652-1.668729 2.170341 1.258997 2.91531 4.035245 1.666246 6.203103m6.093841-21.738175c-1.25403 2.175308-4.030279 2.912826-6.203103 1.666246-2.167858-1.251547-2.912826-4.025312-1.661279-6.195653 1.251547-2.17779 4.030278-2.920275 6.198136-1.671212 2.172824 1.256513 2.915309 4.032762 1.666246 6.200619m29.932825-34.062433c-1.25403 2.172824-4.030278 2.910343-6.200619 1.663763-2.175307-1.251547-2.915309-4.025312-1.661279-6.198136 1.249063-2.172824 4.027795-2.915309 6.195653-1.668729 2.17034 1.25403 2.915309 4.032761 1.666245 6.203102m-1.678662-12.798555c-1.251546 2.172824-4.030278 2.915309-6.203102 1.666246-2.167858-1.251547-2.912826-4.027795-1.658796-6.198136 1.249063-2.175307 4.027795-2.915309 6.198136-1.668729 2.170341 1.256513 2.915309 4.032762 1.663762 6.200619m15.736214-6.80156c-1.25403 2.175307-4.027795 2.912826-6.203103 1.666246-2.170341-1.251547-2.915309-4.025312-1.661279-6.198137 1.249063-2.175307 4.030278-2.917792 6.200619-1.671212 2.170341 1.256513 2.910343 4.032762 1.663763 6.203103m-3.297727-10.836805c-1.254029 2.172824-4.030278 2.912826-6.200619 1.666245-2.172824-1.251546-2.912826-4.025312-1.661279-6.198136 1.251547-2.175307 4.030278-2.917792 6.19317-1.668729 2.172824 1.25403 2.917792 4.030279 1.668728 6.20062m-2.038729-12.552716c-1.25403 2.175307-4.030279 2.912826-6.203103 1.668729-2.167858-1.25403-2.912826-4.025312-1.661279-6.200619 1.251546-2.175308 4.030278-2.917793 6.200619-1.668729 2.170341 1.25403 2.910343 4.032761 1.663763 6.200619m16.555678 5.728806c-1.25403 2.172824-4.030278 2.912826-6.200619 1.663763-2.172824-1.249064-2.91531-4.022829-1.66128-6.195653 1.249064-2.175308 4.030279-2.917793 6.195653-1.668729 2.170341 1.25403 2.912826 4.030278 1.666246 6.200619m.032282-10.605865c-1.25403 2.172824-4.030278 2.915309-6.203103 1.663763-2.170341-1.251547-2.912826-4.025312-1.661279-6.198137 1.249064-2.175307 4.030279-2.917792 6.198136-1.668728 2.172824 1.254029 2.912826 4.032761 1.666246 6.203102m12.090835-8.244316c-1.256513 2.172825-4.030278 2.91531-6.203102 1.666246-2.170341-1.251547-2.910343-4.025312-1.66128-6.198136 1.25403-2.175307 4.030279-2.917792 6.195653-1.668729 2.172824 1.256513 2.917793 4.032762 1.668729 6.200619m.794633-11.152175c-1.256513 2.172824-4.030278 2.912826-6.203103 1.666246-2.17034-1.251547-2.912826-4.027795-1.658796-6.200619 1.251547-2.172824 4.027796-2.91531 6.195653-1.668729 2.170341 1.256513 2.915309 4.032761 1.666246 6.203102m17.104472-8.954518c-1.251547 2.172824-4.027795 2.912826-6.20062 1.666245-2.170341-1.251546-2.912826-4.027795-1.661279-6.198136 1.249064-2.175307 4.030279-2.917792 6.198136-1.668729 2.170341 1.256513 2.912826 4.030279 1.663763 6.20062m-4.606387-9.672172c-1.25403 2.172824-4.027796 2.912826-6.20062 1.663763-2.172824-1.249064-2.915309-4.022829-1.663762-6.195653 1.251546-2.175308 4.030278-2.917793 6.200619-1.671213 2.170341 1.256514 2.910343 4.032762 1.663763 6.203103m17.464539-13.297684c-1.251546 2.172824-4.027795 2.912826-6.203102 1.663763-2.167858-1.251547-2.912826-4.025312-1.658796-6.198136 1.24658-2.175308 4.030278-2.91531 6.198136-1.668729 2.170341 1.256513 2.910342 4.032761 1.663762 6.203102m-4.638669-11.070228c-1.25403 2.172824-4.027795 2.912826-6.200619 1.666245-2.172824-1.251546-2.915309-4.025312-1.66128-6.195653 1.249064-2.175307 4.030279-2.920275 6.198137-1.671212 2.170341 1.25403 2.910342 4.032762 1.663762 6.20062"/></g><path d="m746.267009 243.954916c-1.256514 2.172824-4.030279 2.912826-6.20062 1.663762-2.172824-1.251547-2.915309-4.025312-1.661279-6.195653 1.249063-2.175307 4.027795-2.917792 6.195653-1.671212 2.170341 1.256513 2.915309 4.032762 1.666246 6.203103m-6.905856-9.413916c-1.256514 2.172824-4.032762 2.912826-6.203103 1.666245-2.175307-1.251546-2.912826-4.025312-1.661279-6.198136 1.251547-2.175307 4.027795-2.917792 6.195653-1.668729 2.170341 1.256514 2.915309 4.030279 1.668729 6.20062m-205.827287-99.080782c-1.499869 2.604906-4.827394 3.491418-7.429817 1.994032-2.599939-1.497386-3.491418-4.822428-1.986582-7.422367 1.497387-2.607389 4.822428-3.498868 7.419884-2.001482 2.602423 1.504836 3.496385 4.832361 1.996515 7.429817" fill="#d8d9d9"/><path d="m530.531644 101.015368c-1.502352 2.604906-4.827394 3.491418-7.429817 1.996515-2.602422-1.499869-3.488935-4.8249109-1.989065-7.4273334 1.497386-2.6049058 4.824911-3.4939013 7.422367-1.9989983 2.59994 1.504836 3.493901 4.8323609 1.996515 7.4298167" fill="#fff"/><path d="m884.498356 166.788618c-1.502352 2.604906-4.827394 3.491418-7.427333 1.996515-2.604906-1.49987-3.493902-4.822428-1.994032-7.424851 1.502352-2.604905 4.829877-3.496384 7.42485-2.001481 2.602423 1.504836 3.493902 4.832361 1.996515 7.429817" fill="#d8d9d9"/><path d="m832.196617 81.154514c-1.504836 2.6049057-4.827395 3.491418-7.429817 1.996515-2.602423-1.5023527-3.491418-4.8249113-1.991549-7.4273338 1.502353-2.6024225 4.829878-3.4939012 7.424851-1.9989982 2.602422 1.5048359 3.491418 4.8323609 1.996515 7.429817m-82.152619-58.9443736c-1.502353 2.6049057-4.827395 3.491418-7.427334 1.996515-2.602422-1.5023527-3.491418-4.8249113-1.994032-7.4273338 1.502353-2.6024225 4.829878-3.4939012 7.427334-1.9989982 2.599939 1.5048359 3.491418 4.8323609 1.994032 7.429817m-96.436144-13.6726512c-1.504836 2.6049058-4.827395 3.491418-7.427334 1.996515-2.604906-1.49986948-3.493901-4.82491124-1.991548-7.42733377 1.499869-2.60242252 4.827394-3.49390123 7.422367-1.99899822 2.602422 1.5023527 3.493901 4.83484414 1.996515 7.42981699m-81.519396 40.1736561c-1.504836 2.607389-4.827394 3.491418-7.429817 1.996515-2.599939-1.4998694-3.491418-4.8249112-1.989065-7.4248505 1.499869-2.6049058 4.827394-3.4963845 7.422367-2.0014814 2.602423 1.5048359 3.493901 4.8323609 1.996515 7.4298169m224.950622 143.4212937c-1.504836 2.604905-4.827394 3.491418-7.429817 1.996515-2.599939-1.502353-3.491418-4.824912-1.989065-7.424851 1.497386-2.604906 4.827394-3.493901 7.42485-2.001481 2.59994 1.504836 3.491418 4.832361 1.994032 7.429817m-55.770809-72.10548c-1.502352 2.607389-4.827394 3.491418-7.427333 1.996515-2.602423-1.49987-3.493902-4.822428-1.991549-7.424851 1.49987-2.607389 4.827395-3.496384 7.424851-2.001481 2.599939 1.504836 3.491418 4.832361 1.994031 7.429817m-77.697708-35.0110261c-1.504836 2.607389-4.827394 3.491418-7.427334 1.996515-2.604906-1.4998695-3.493901-4.822428-1.994032-7.4248506 1.49987-2.6049057 4.829878-3.4963844 7.427334-1.9989982 2.59994 1.5023527 3.491418 4.8298777 1.994032 7.4273338" fill="#fff"/><path d="m871.766848 256.197228c-1.502352 2.604905-4.827394 3.491418-7.4323 1.996515-2.599939-1.49987-3.488935-4.824912-1.984099-7.424851 1.494903-2.604906 4.819945-3.496384 7.417401-2.001481 2.602423 1.504836 3.498868 4.834844 1.998998 7.429817m-41.335806 52.795902c-1.49987 2.607389-4.829878 3.491418-7.429817 1.996515-2.602423-1.49987-3.491418-4.822428-1.986582-7.424851 1.494903-2.604906 4.822428-3.496384 7.419884-2.001481 2.602422 1.507319 3.496384 4.834844 1.996515 7.429817" fill="#d8d9d9"/><path d="m835.928908 271.051895c-.586042 1.01564-1.88477 1.360809-2.897927.77725-1.010674-.583558-1.363292-1.879803-.774767-2.895443.581075-1.01564 1.879803-1.363292 2.89296-.779733 1.013157.586041 1.363292 1.882286.779734 2.897926m-21.027972 12.738958c-.588525 1.01564-1.879803 1.360808-2.897926.77725-1.01564-.583559-1.360809-1.879803-.774767-2.895443.586041-1.015641 1.882286-1.360809 2.895443-.779734 1.013157.588525 1.358326 1.88477.77725 2.897927m.062081-57.290544c-.583559 1.01564-1.882287 1.360808-2.897927.774767-1.010673-.583559-1.360808-1.879804-.774767-2.89296.581076-1.018124 1.882287-1.363292 2.892961-.779734 1.01564.586042 1.365775 1.882287.779733 2.897927m21.561865-25.112881c-.583558 1.01564-1.879803 1.360809-2.897926.77725-1.010674-.583558-1.358326-1.879803-.772284-2.897926.583558-1.013157 1.882286-1.358326 2.89296-.777251 1.01564.588525 1.360809 1.88477.77725 2.897927" fill="#fff"/><path d="m796.751026 316.127443c-1.504836 2.604905-4.827395 3.491418-7.429817 1.996515-2.602423-1.49987-3.491418-4.824912-1.991549-7.424851 1.49987-2.604906 4.827395-3.496384 7.424851-2.001481 2.599939 1.504836 3.491418 4.83236 1.996515 7.429817" fill="#d8d9d9"/><path d="m708.479734 298.983239c0 2.061079-1.671212 3.732291-3.734774 3.732291-2.061079 0-3.734774-1.671212-3.734774-3.732291 0-2.063562 1.673695-3.734774 3.734774-3.734774 2.063562 0 3.734774 1.671212 3.734774 3.734774" fill="#603a7e"/><path d="m702.750928 334.639904c0 1.959267-1.586782 3.546049-3.543566 3.546049-1.961749 0-3.548532-1.586782-3.548532-3.546049 0-1.959266 1.586783-3.546049 3.548532-3.546049 1.956784 0 3.543566 1.586783 3.543566 3.546049" fill="#674684"/><path d="m700.118707 351.565584c0 1.959266-1.586783 3.548532-3.548532 3.548532-1.956784 0-3.546049-1.589266-3.546049-3.548532 0-1.959267 1.589265-3.546049 3.546049-3.546049 1.961749 0 3.548532 1.586782 3.548532 3.546049" fill="#6b4b87"/><path d="m699.41347 369.325627c0 1.959267-1.589265 3.546049-3.548532 3.546049-1.956783 0-3.546049-1.586782-3.546049-3.546049 0-1.961749 1.589266-3.548532 3.546049-3.548532 1.959267 0 3.548532 1.586783 3.548532 3.548532" fill="#70518a"/><path d="m698.79018 404.796051c0 1.658796-1.345909 3.007188-3.007189 3.007188-1.661279 0-3.007188-1.348392-3.007188-3.007188 0-1.66128 1.345909-3.009672 3.007188-3.009672 1.66128 0 3.007189 1.348392 3.007189 3.009672" fill="#7b5d90"/><path d="m700.160922 423.713278c0 1.66128-1.34591 3.007189-3.007189 3.007189s-3.007189-1.345909-3.007189-3.007189c0-1.661279 1.34591-3.007188 3.007189-3.007188s3.007189 1.345909 3.007189 3.007188" fill="#7d6194"/><path d="m701.799852 442.506345c0 1.661279-1.345909 3.007189-3.007189 3.007189-1.663762 0-3.007188-1.34591-3.007188-3.007189 0-1.658796 1.343426-3.007189 3.007188-3.007189 1.66128 0 3.007189 1.348393 3.007189 3.007189" fill="#816697"/><path d="m702.296497 459.496588c0 1.559467-1.263962 2.82343-2.820946 2.82343-1.559467 0-2.820947-1.263963-2.820947-2.82343 0-1.556984 1.26148-2.818463 2.820947-2.818463 1.556984 0 2.820946 1.261479 2.820946 2.818463" fill="#866c9a"/><path d="m704.568651 315.680462c0 1.959266-1.589266 3.548532-3.548533 3.548532-1.959266 0-3.546049-1.589266-3.546049-3.548532 0-1.959267 1.586783-3.546049 3.546049-3.546049 1.959267 0 3.548533 1.586782 3.548533 3.546049" fill="#674684"/><path d="m699.569914 387.723861c0 1.810273-1.467588 3.27786-3.277861 3.27786s-3.27786-1.467587-3.27786-3.27786 1.467587-3.277861 3.27786-3.277861 3.277861 1.467588 3.277861 3.277861" fill="#75578c"/><path d="m701.715422 476.566295c0 1.373225-1.112486 2.488194-2.488194 2.488194s-2.490677-1.114969-2.490677-2.488194c0-1.375708 1.114969-2.490678 2.490677-2.490678s2.488194 1.11497 2.488194 2.490678m1.537118 18.919711c0 1.375708-1.114969 2.488194-2.488194 2.488194-1.375708 0-2.490677-1.112486-2.490677-2.488194s1.114969-2.490677 2.490677-2.490677c1.373225 0 2.488194 1.114969 2.488194 2.490677" fill="#8a729e"/><path d="m704.206099 514.403234c0 1.375708-1.114969 2.488194-2.490677 2.488194-1.373225 0-2.488194-1.112486-2.488194-2.488194 0-1.373225 1.114969-2.488194 2.488194-2.488194 1.375708 0 2.490677 1.114969 2.490677 2.488194" fill="#8d7b9d"/><path d="m704.206099 533.695429c0 1.373225-1.114969 2.488194-2.490677 2.488194-1.373225 0-2.488194-1.114969-2.488194-2.488194 0-1.375708 1.114969-2.488194 2.488194-2.488194 1.375708 0 2.490677 1.112486 2.490677 2.488194m-.417182 19.664679c0 1.373225-1.114969 2.490678-2.488194 2.490678-1.375708 0-2.490677-1.117453-2.490677-2.490678s1.114969-2.488194 2.490677-2.488194c1.373225 0 2.488194 1.114969 2.488194 2.488194" fill="#9782a9"/><path d="m703.292272 571.947067c0 1.097586-.891479 1.991548-1.991549 1.991548s-1.991548-.893962-1.991548-1.991548c0-1.10007.891478-1.991549 1.991548-1.991549s1.991549.891479 1.991549 1.991549m-1.991549 19.749109c0 1.10007-.888995 1.991549-1.991548 1.991549-1.10007 0-1.991549-.891479-1.991549-1.991549s.891479-1.991549 1.991549-1.991549c1.102553 0 1.991548.891479 1.991548 1.991549" fill="#a38faf"/><path d="m699.309175 612.853275c0 1.10007-.888996 1.991549-1.989066 1.991549-1.102553 0-1.994031-.891479-1.994031-1.991549 0-1.097586.891478-1.991548 1.994031-1.991548 1.10007 0 1.989066.893962 1.989066 1.991548m-3.983097 20.081862c0 1.097586-.891479 1.991548-1.991549 1.991548s-1.991548-.893962-1.991548-1.991548c0-1.10007.891478-1.991549 1.991548-1.991549s1.991549.891479 1.991549 1.991549" fill="#ae9cb9"/><path d="m688.251362 652.848139c0 .859197-.695304 1.5545-1.552017 1.5545-.86168 0-1.556984-.695303-1.556984-1.5545s.695304-1.554501 1.556984-1.554501c.856713 0 1.552017.695304 1.552017 1.554501m-8.130087 20.20354c0 .859196-.695304 1.5545-1.554501 1.5545-.861679 0-1.556983-.695304-1.556983-1.5545 0-.859197.695304-1.554501 1.556983-1.554501.859197 0 1.554501.695304 1.554501 1.554501" fill="#bcacc7"/><path d="m671.452327 694.792336c0 .859197-.695303 1.554501-1.556983 1.554501-.859197 0-1.554501-.695304-1.554501-1.554501 0-.859196.695304-1.556983 1.554501-1.556983.86168 0 1.556983.697787 1.556983 1.556983m-11.162108 21.946766c0 .859197-.697787 1.5545-1.5545 1.5545-.86168 0-1.556984-.695303-1.556984-1.5545s.695304-1.556984 1.556984-1.556984c.856713 0 1.5545.697787 1.5545 1.556984" fill="#c7bcd2"/><path d="m646.225218 738.769304c0 .856713-.695304 1.5545-1.5545 1.5545-.86168 0-1.556984-.697787-1.556984-1.5545 0-.86168.695304-1.556984 1.556984-1.556984.859196 0 1.5545.695304 1.5545 1.556984" fill="#d7cddf"/><path d="m630.702562 761.182668c0 .578592-.46933 1.050405-1.050405 1.050405-.578592 0-1.050405-.471813-1.050405-1.050405 0-.581075.471813-1.050405 1.050405-1.050405.581075 0 1.050405.46933 1.050405 1.050405m-18.502528 22.734694c0 .581075-.46933 1.050405-1.050406 1.050405-.581075 0-1.050405-.46933-1.050405-1.050405 0-.581076.46933-1.050406 1.050405-1.050406.581076 0 1.050406.46933 1.050406 1.050406" fill="#ddd7e4"/><path d="m591.787903 808.145717c0 .581075-.46933 1.050405-1.052889 1.050405-.581075 0-1.047922-.46933-1.047922-1.050405 0-.578592.466847-1.050406 1.047922-1.050406.583559 0 1.052889.471814 1.052889 1.050406m-23.647777 23.648769c0 .578592-.46933 1.050406-1.050405 1.050406s-1.050405-.471814-1.050405-1.050406c0-.581075.46933-1.052888 1.050405-1.052888s1.050405.471813 1.050405 1.052888" fill="#ece8ee"/><path d="m400.040517 817.197081c0 2.520476-2.041213 4.564173-4.561689 4.564173s-4.566656-2.043697-4.566656-4.564173 2.04618-4.564172 4.566656-4.564172 4.561689 2.043696 4.561689 4.564172" fill="#221435"/><path d="m420.286272 799.441011c0 2.520476-2.043697 4.561689-4.561689 4.561689-2.520477 0-4.566656-2.041213-4.566656-4.561689s2.046179-4.564173 4.566656-4.564173c2.517992 0 4.561689 2.043697 4.561689 4.564173" fill="#291a37"/><path d="m440.36565 784.837646c0 2.520476-2.043696 4.564172-4.564172 4.564172s-4.564173-2.043696-4.564173-4.564172 2.043697-4.564173 4.564173-4.564173 4.564172 2.043697 4.564172 4.564173" fill="#2e213d"/><path d="m460.613888 767.909731c0 2.520476-2.043696 4.564173-4.564172 4.564173s-4.564173-2.043697-4.564173-4.564173 2.043697-4.564172 4.564173-4.564172 4.564172 2.043696 4.564172 4.564172" fill="#322641"/><path d="m477.869836 749.490391c0 2.336717-1.894702 4.233903-4.231419 4.233903-2.339201 0-4.23142-1.897186-4.23142-4.233903s1.892219-4.233903 4.23142-4.233903c2.336717 0 4.231419 1.897186 4.231419 4.233903" fill="#392c46"/><path d="m494.134977 733.225747c0 2.336717-1.894702 4.233903-4.23142 4.233903-2.3392 0-4.233903-1.897186-4.233903-4.233903 0-2.336718 1.894703-4.23142 4.233903-4.23142 2.336718 0 4.23142 1.894702 4.23142 4.23142" fill="#3e314b"/><path d="m511.060657 714.807151c0 2.334234-1.894703 4.23142-4.233903 4.23142-2.336718 0-4.228937-1.897186-4.228937-4.23142 0-2.336717 1.892219-4.233903 4.228937-4.233903 2.3392 0 4.233903 1.897186 4.233903 4.233903" fill="#45374f"/><path d="m526.493916 695.721063c0 2.336718-1.894703 4.233904-4.23142 4.233904s-4.233903-1.897186-4.233903-4.233904c0-2.336717 1.897186-4.231419 4.233903-4.231419s4.23142 1.894702 4.23142 4.231419" fill="#4a3f56"/><path d="m541.929659 676.803836c0 2.063562-1.673695 3.734774-3.734774 3.734774s-3.734775-1.671212-3.734775-3.734774c0-2.061079 1.673696-3.732291 3.734775-3.732291s3.734774 1.671212 3.734774 3.732291" fill="#4f445b"/><path d="m554.209219 657.553855c0 2.063562-1.671212 3.734775-3.732291 3.734775s-3.734774-1.671213-3.734774-3.734775c0-2.061079 1.673695-3.732291 3.734774-3.732291s3.732291 1.671212 3.732291 3.732291" fill="#564a61"/><path d="m568.646705 638.803004c0 2.061079-1.673696 3.732291-3.732291 3.732291-2.063563 0-3.734775-1.671212-3.734775-3.732291 0-2.063563 1.671212-3.734775 3.734775-3.734775 2.058595 0 3.732291 1.671212 3.732291 3.734775" fill="#5b5066"/><path d="m582.418685 620.049669c0 2.061079-1.671212 3.732291-3.732291 3.732291-2.063562 0-3.734774-1.671212-3.734774-3.732291 0-2.063562 1.671212-3.732291 3.734774-3.732291 2.061079 0 3.732291 1.668729 3.732291 3.732291" fill="#62576d"/><path d="m594.700729 600.799688c0 2.061079-1.673696 3.732291-3.734775 3.732291s-3.734774-1.671212-3.734774-3.732291c0-2.063562 1.673695-3.734774 3.734774-3.734774s3.734775 1.671212 3.734775 3.734774" fill="#685d70"/><path d="m604.325719 580.387557c0 1.696045-1.375708 3.06927-3.069269 3.06927-1.696045 0-3.071753-1.373225-3.071753-3.06927 0-1.696044 1.375708-3.069269 3.071753-3.069269 1.693561 0 3.069269 1.373225 3.069269 3.069269" fill="#6f6377"/><path d="m615.942258 561.30147c0 1.696045-1.373225 3.069269-3.06927 3.069269-1.696044 0-3.071752-1.373224-3.071752-3.069269 0-1.693561 1.375708-3.069269 3.071752-3.069269 1.696045 0 3.06927 1.375708 3.06927 3.069269" fill="#766c7f"/><path d="m626.731882 541.222092c0 1.696044-1.375709 3.069269-3.071753 3.069269s-3.069269-1.373225-3.069269-3.069269c0-1.696045 1.373225-3.06927 3.069269-3.06927s3.071753 1.373225 3.071753 3.06927" fill="#7d7385"/><path d="m637.019893 522.302381c0 1.698527-1.375708 3.071752-3.069269 3.071752-1.696044 0-3.071752-1.373225-3.071752-3.071752 0-1.693562 1.375708-3.06927 3.071752-3.06927 1.693561 0 3.069269 1.375708 3.069269 3.06927" fill="#867b8a"/><path d="m646.808777 503.551529c0 1.693561-1.373225 3.069269-3.06927 3.069269-1.696044 0-3.069269-1.375708-3.069269-3.069269 0-1.698528 1.373225-3.071753 3.069269-3.071753 1.696045 0 3.06927 1.373225 3.06927 3.071753" fill="#8e8492"/><path d="m654.444702 482.973022c0 1.696044-1.375709 3.069269-3.071753 3.069269-1.693561 0-3.069269-1.373225-3.069269-3.069269 0-1.696045 1.375708-3.071753 3.069269-3.071753 1.696044 0 3.071753 1.375708 3.071753 3.071753" fill="#958d9b"/><path d="m663.071434 464.721299c0 1.693561-1.375708 3.069269-3.069269 3.069269s-3.069269-1.375708-3.069269-3.069269c0-1.696044 1.375708-3.071753 3.069269-3.071753s3.069269 1.375709 3.069269 3.071753" fill="#9c96a2"/><path d="m672.033403 446.630986c0 1.693561-1.375708 3.069269-3.06927 3.069269-1.693561 0-3.069269-1.375708-3.069269-3.069269 0-1.696045 1.375708-3.069269 3.069269-3.069269 1.693562 0 3.06927 1.373224 3.06927 3.069269" fill="#a69eaa"/><path d="m680.165973 427.048253c0 1.696045-1.375708 3.071753-3.069269 3.071753-1.696045 0-3.071753-1.375708-3.071753-3.071753 0-1.693561 1.375708-3.069269 3.071753-3.069269 1.693561 0 3.069269 1.375708 3.069269 3.069269" fill="#b1a8b4"/><path d="m687.260554 407.798273c0 1.487453-1.206848 2.694302-2.696785 2.694302-1.487453 0-2.694302-1.206849-2.694302-2.694302 0-1.489937 1.206849-2.696785 2.694302-2.696785 1.489937 0 2.696785 1.206848 2.696785 2.696785" fill="#b8b2bc"/><path d="m695.393125 391.369239c0 1.489936-1.206849 2.694302-2.696785 2.694302-1.489937 0-2.696786-1.204366-2.696786-2.694302 0-1.489937 1.206849-2.696785 2.696786-2.696785 1.489936 0 2.696785 1.206848 2.696785 2.696785" fill="#c1bcc3"/><path d="m702.529921 373.445302c0 1.489937-1.206849 2.696785-2.696785 2.696785-1.489937 0-2.696786-1.206848-2.696786-2.696785 0-1.489936 1.206849-2.696785 2.696786-2.696785 1.489936 0 2.696785 1.206849 2.696785 2.696785m5.39357-16.925679c0 1.489936-1.209332 2.696785-2.696785 2.696785-1.489937 0-2.696785-1.206849-2.696785-2.696785 0-1.487454 1.206848-2.696785 2.696785-2.696785 1.487453 0 2.696785 1.209331 2.696785 2.696785" fill="#d6d3d8"/><path d="m714.630689 340.393543c0 1.489936-1.206849 2.696785-2.694302 2.696785-1.49242 0-2.699268-1.206849-2.699268-2.696785 0-1.489937 1.206848-2.696785 2.699268-2.696785 1.487453 0 2.694302 1.206848 2.694302 2.696785" fill="#e2e1e5"/><path d="m721.27084 323.800616c0 1.214298-.985842 2.197656-2.20014 2.197656s-2.20014-.983358-2.20014-2.197656.985842-2.197657 2.20014-2.197657 2.20014.983359 2.20014 2.197657" fill="#efeff2"/><path d="m727.118841 307.681985c0 1.144768-.928728 2.073496-2.071012 2.073496-1.147251 0-2.075979-.928728-2.075979-2.073496 0-1.147251.928728-2.073495 2.075979-2.073495 1.142284 0 2.071012.926244 2.071012 2.073495m23.955696 11.581774c0 1.581816-1.281345 2.860678-2.863161 2.860678s-2.863162-1.278862-2.863162-2.860678 1.281346-2.863161 2.863162-2.863161 2.863161 1.281345 2.863161 2.863161" fill="#fff"/><path d="m753.937699 332.042448c0 1.581816-1.283829 2.863162-2.863162 2.863162-1.581816 0-2.863161-1.281346-2.863161-2.863162 0-1.579332 1.281345-2.863161 2.863161-2.863161 1.579333 0 2.863162 1.283829 2.863162 2.863161" fill="#f4f2f4"/><path d="m755.179312 345.06946c0 1.579333-1.281345 2.860678-2.860678 2.860678-1.584299 0-2.863161-1.281345-2.863161-2.860678 0-1.581816 1.278862-2.863161 2.863161-2.863161 1.579333 0 2.860678 1.281345 2.860678 2.863161" fill="#e7e6ea"/><path d="m756.09314 358.262849c0 1.489936-1.209332 2.696785-2.696785 2.696785-1.489937 0-2.696785-1.206849-2.696785-2.696785 0-1.489937 1.206848-2.696786 2.696785-2.696786 1.487453 0 2.696785 1.206849 2.696785 2.696786" fill="#dfdce0"/><path d="m756.09314 373.363356c0 1.489936-1.209332 2.696785-2.696785 2.696785-1.489937 0-2.696785-1.206849-2.696785-2.696785 0-1.489937 1.206848-2.694302 2.696785-2.694302 1.487453 0 2.696785 1.204365 2.696785 2.694302" fill="#d4d2d6"/><path d="m755.348172 389.129368c0 1.489936-1.206849 2.696785-2.696785 2.696785-1.489937 0-2.696785-1.206849-2.696785-2.696785 0-1.489937 1.206848-2.696786 2.696785-2.696786 1.489936 0 2.696785 1.206849 2.696785 2.696786" fill="#ccc8ce"/><path d="m753.853269 405.225649c0 1.489936-1.206849 2.694302-2.694302 2.694302-1.49242 0-2.699268-1.204366-2.699268-2.694302 0-1.489937 1.206848-2.696785 2.699268-2.696785 1.487453 0 2.694302 1.206848 2.694302 2.696785" fill="#c4bfc6"/><path d="m750.784 421.324413c0 1.718394-1.393091 3.111485-3.109001 3.111485-1.720877 0-3.111485-1.393091-3.111485-3.111485 0-1.718393 1.390608-3.111484 3.111485-3.111484 1.71591 0 3.109001 1.393091 3.109001 3.111484" fill="#bdb8c1"/><path d="m746.634526 438.498416c0 1.718393-1.39309 3.111484-3.109001 3.111484-1.720876 0-3.113967-1.393091-3.113967-3.111484 0-1.718394 1.393091-3.111485 3.113967-3.111485 1.715911 0 3.109001 1.393091 3.109001 3.111485" fill="#b7b0ba"/><path d="m740.992633 456.918998c0 1.718393-1.393091 3.111484-3.113967 3.111484-1.715911 0-3.109001-1.393091-3.109001-3.111484 0-1.71591 1.39309-3.111484 3.109001-3.111484 1.720876 0 3.113967 1.395574 3.113967 3.111484" fill="#b1a8b4"/><path d="m734.769665 473.598838c0 1.718393-1.393091 3.111484-3.109001 3.111484-1.720877 0-3.113968-1.393091-3.113968-3.111484 0-1.715911 1.393091-3.111484 3.113968-3.111484 1.71591 0 3.109001 1.395573 3.109001 3.111484" fill="#a79fab"/><path d="m727.632869 492.682442c0 1.718393-1.393091 3.111484-3.109001 3.111484-1.718394 0-3.111484-1.393091-3.111484-3.111484 0-1.718394 1.39309-3.111484 3.111484-3.111484 1.71591 0 3.109001 1.39309 3.109001 3.111484" fill="#a097a4"/><path d="m718.921706 511.768529c0 1.718394-1.39309 3.109001-3.111484 3.109001-1.71591 0-3.111484-1.390607-3.111484-3.109001 0-1.720877 1.395574-3.111484 3.111484-3.111484 1.718394 0 3.111484 1.390607 3.111484 3.111484" fill="#9992a0"/><path d="m709.793362 529.771929c0 1.718394-1.393091 3.111484-3.111485 3.111484-1.718393 0-3.109001-1.39309-3.109001-3.111484 0-1.718393 1.390608-3.109001 3.109001-3.109001 1.718394 0 3.111485 1.390608 3.111485 3.109001" fill="#948c9b"/><path d="m702.326296 549.478824c0 1.969199-1.596715 3.568398-3.568398 3.568398-1.969199 0-3.568398-1.599199-3.568398-3.568398 0-1.971683 1.599199-3.568399 3.568398-3.568399 1.971683 0 3.568398 1.596716 3.568398 3.568399" fill="#8e8594"/><path d="m691.457209 569.724578c0 1.9692-1.599199 3.568398-3.568398 3.568398-1.9692 0-3.568398-1.599198-3.568398-3.568398 0-1.971683 1.599198-3.565915 3.568398-3.565915 1.969199 0 3.568398 1.594232 3.568398 3.565915" fill="#887e8e"/><path d="m679.589864 588.810666c0 1.969199-1.596715 3.568398-3.568398 3.568398-1.969199 0-3.568398-1.599199-3.568398-3.568398 0-1.971683 1.599199-3.568399 3.568398-3.568399 1.971683 0 3.568398 1.596716 3.568398 3.568399" fill="#837787"/><path d="m667.891379 608.808097c0 1.9692-1.596715 3.565915-3.568398 3.565915-1.9692 0-3.565915-1.596715-3.565915-3.565915 0-1.971682 1.596715-3.568398 3.565915-3.568398 1.971683 0 3.568398 1.596716 3.568398 3.568398" fill="#7c7283"/><path d="m653.702217 627.891702c0 1.969199-1.596716 3.568398-3.568399 3.568398-1.969199 0-3.568398-1.599199-3.568398-3.568398 0-1.971683 1.599199-3.568399 3.568398-3.568399 1.971683 0 3.568399 1.596716 3.568399 3.568399" fill="#766c7f"/><path d="m640.426882 648.467725c0 1.9692-1.599199 3.568398-3.568398 3.568398-1.9692 0-3.568398-1.599198-3.568398-3.568398 0-1.969199 1.599198-3.568398 3.568398-3.568398 1.969199 0 3.568398 1.599199 3.568398 3.568398" fill="#72677a"/><path d="m626.818794 668.298781c0 1.9692-1.599198 3.568398-3.568398 3.568398-1.969199 0-3.568398-1.599198-3.568398-3.568398 0-1.969199 1.599199-3.568398 3.568398-3.568398 1.9692 0 3.568398 1.599199 3.568398 3.568398" fill="#6b6074"/><path d="m611.88218 688.626482c0 1.971683-1.596715 3.568398-3.565914 3.568398-1.971683 0-3.568398-1.596715-3.568398-3.568398 0-1.966716 1.596715-3.565915 3.568398-3.565915 1.969199 0 3.565914 1.599199 3.565914 3.565915" fill="#675a70"/><path d="m595.867846 708.956667c0 1.969199-1.596716 3.568398-3.568398 3.568398-1.9692 0-3.568398-1.599199-3.568398-3.568398 0-1.9692 1.599198-3.568398 3.568398-3.568398 1.971682 0 3.568398 1.599198 3.568398 3.568398" fill="#62566b"/><path d="m580.350156 729.203911c0 2.105777-1.705977 3.816721-3.814237 3.816721s-3.816721-1.710944-3.816721-3.816721c0-2.10826 1.708461-3.816721 3.816721-3.816721s3.814237 1.708461 3.814237 3.816721" fill="#5d5166"/><path d="m563.094208 748.952027c0 2.10826-1.705978 3.816721-3.816721 3.816721-2.10826 0-3.814238-1.708461-3.814238-3.816721s1.705978-3.819204 3.814238-3.819204c2.110743 0 3.816721 1.710944 3.816721 3.819204" fill="#584b62"/><path d="m546.583227 769.860555c0 2.10826-1.70846 3.819204-3.819204 3.819204-2.10826 0-3.814237-1.710944-3.814237-3.819204 0-2.105777 1.705977-3.816721 3.814237-3.816721 2.110744 0 3.819204 1.710944 3.819204 3.816721" fill="#53475e"/><path d="m529.488689 788.861964c0 2.108261-1.705978 3.816721-3.816721 3.816721-2.105777 0-3.816721-1.70846-3.816721-3.816721 0-2.10826 1.710944-3.81672 3.816721-3.81672 2.110743 0 3.816721 1.70846 3.816721 3.81672" fill="#4e425a"/><path d="m511.482805 807.699481c0 2.10826-1.705977 3.81672-3.816721 3.81672-2.10826 0-3.814237-1.70846-3.814237-3.81672 0-2.110744 1.705977-3.819204 3.814237-3.819204 2.110744 0 3.816721 1.70846 3.816721 3.819204" fill="#4a3f56"/><path d="m492.483631 827.695174c0 2.10826-1.708461 3.816721-3.816721 3.816721s-3.819204-1.708461-3.819204-3.816721 1.710944-3.816721 3.819204-3.816721 3.816721 1.708461 3.816721 3.816721" fill="#453850"/><path d="m474.723587 845.784494c0 2.105777-1.705977 3.816721-3.816721 3.816721-2.10826 0-3.816721-1.710944-3.816721-3.816721 0-2.10826 1.708461-3.816721 3.816721-3.816721 2.110744 0 3.816721 1.708461 3.816721 3.816721" fill="#41354d"/><path d="m456.221058 864.245056c0 2.406248-1.949333 4.355582-4.355581 4.355582s-4.355581-1.949334-4.355581-4.355582c0-2.403764 1.949333-4.355581 4.355581-4.355581s4.355581 1.951817 4.355581 4.355581" fill="#3d2f4a"/><path d="m436.474432 882.583196c0 2.403764-1.949333 4.355581-4.355581 4.355581-2.406247 0-4.355581-1.951817-4.355581-4.355581 0-2.406248 1.949334-4.355582 4.355581-4.355582 2.406248 0 4.355581 1.949334 4.355581 4.355582" fill="#382b46"/><path d="m417.140022 899.759681c0 2.403764-1.949333 4.353098-4.355581 4.353098s-4.355581-1.949334-4.355581-4.353098c0-2.406248 1.949333-4.358065 4.355581-4.358065s4.355581 1.951817 4.355581 4.358065" fill="#322641"/><path d="m397.808095 917.515752c0 2.403764-1.949333 4.355581-4.355581 4.355581-2.408731 0-4.358064-1.951817-4.358064-4.355581 0-2.406248 1.949333-4.355582 4.358064-4.355582 2.406248 0 4.355581 1.949334 4.355581 4.355582" fill="#2f223e"/><path d="m378.890867 935.438943c0 2.403765-1.949333 4.355582-4.355581 4.355582-2.406247 0-4.355581-1.951817-4.355581-4.355582 0-2.406247 1.949334-4.355581 4.355581-4.355581 2.406248 0 4.355581 1.949334 4.355581 4.355581" fill="#2b1d3a"/><path d="m357.316586 951.202969c0 2.406247-1.949334 4.355581-4.355581 4.355581-2.406248 0-4.355581-1.949334-4.355581-4.355581 0-2.406248 1.949333-4.355581 4.355581-4.355581 2.406247 0 4.355581 1.949333 4.355581 4.355581" fill="#261837"/><path d="m336.157004 966.305959c0 2.403764-1.949334 4.353098-4.355582 4.353098-2.406247 0-4.358064-1.949334-4.358064-4.353098 0-2.406247 1.951817-4.358064 4.358064-4.358064 2.406248 0 4.355582 1.951817 4.355582 4.358064m-250.3860743-247.850947c0 1.651347-1.3384597 2.987323-2.9873228 2.987323s-2.9873228-1.335976-2.9873228-2.987323c0-1.651346 1.3384597-2.987323 2.9873228-2.987323s2.9873228 1.335977 2.9873228 2.987323" fill="#221435"/><path d="m93.4873111 705.698672c0 1.651346-1.3384596 2.987323-2.9873228 2.987323-1.6488631 0-2.9873228-1.335977-2.9873228-2.987323 0-1.648863 1.3384597-2.987323 2.9873228-2.987323 1.6488632 0 2.9873228 1.33846 2.9873228 2.987323" fill="#261837"/><path d="m100.893289 692.413404c0 1.529669-1.2416137 2.768799-2.7687986 2.768799-1.5296682 0-2.771282-1.23913-2.771282-2.768799 0-1.529668 1.2416138-2.768798 2.771282-2.768798 1.5271849 0 2.7687986 1.23913 2.7687986 2.768798" fill="#2b1f3c"/><path d="m108.671503 677.725113c0 1.529668-1.239131 2.768799-2.768799 2.768799s-2.768799-1.239131-2.768799-2.768799 1.239131-2.768799 2.768799-2.768799 2.768799 1.239131 2.768799 2.768799" fill="#2f223f"/><path d="m116.512791 662.478096c0 1.532151-1.241614 2.771282-2.768799 2.771282-1.529668 0-2.768799-1.239131-2.768799-2.771282 0-1.529669 1.239131-2.768799 2.768799-2.768799 1.527185 0 2.768799 1.23913 2.768799 2.768799" fill="#352844"/><path d="m127.963947 647.012554c0 1.889736-1.534635 3.424371-3.421888 3.424371-1.89222 0-3.424371-1.534635-3.424371-3.424371s1.532151-3.421888 3.424371-3.421888c1.887253 0 3.421888 1.532152 3.421888 3.421888" fill="#392d47"/><path d="m137.919951 630.086875c0 1.892219-1.532151 3.424371-3.421888 3.424371-1.892219 0-3.424371-1.532152-3.424371-3.424371 0-1.889736 1.532152-3.421888 3.424371-3.421888 1.889737 0 3.421888 1.532152 3.421888 3.421888" fill="#3f324b"/><path d="m148.623904 613.344954c0 1.889736-1.532152 3.421888-3.421888 3.421888-1.89222 0-3.424371-1.532152-3.424371-3.421888s1.532151-3.421887 3.424371-3.421887c1.889736 0 3.421888 1.532151 3.421888 3.421887" fill="#433850"/><path d="m160.571953 593.931081c0 1.892219-1.532151 3.424371-3.421888 3.424371-1.892219 0-3.42437-1.532152-3.42437-3.424371 0-1.889736 1.532151-3.421888 3.42437-3.421888 1.889737 0 3.421888 1.532152 3.421888 3.421888" fill="#483d54"/><path d="m171.711464 575.324256c0 1.889737-1.532152 3.421888-3.421888 3.421888s-3.421887-1.532151-3.421887-3.421888c0-1.889736 1.532151-3.421887 3.421887-3.421887s3.421888 1.532151 3.421888 3.421887" fill="#4d4259"/><path d="m183.847494 556.156223c0 1.889736-1.532152 3.421887-3.421888 3.421887-1.892219 0-3.424371-1.532151-3.424371-3.421887 0-1.889737 1.532152-3.421888 3.424371-3.421888 1.889736 0 3.421888 1.532151 3.421888 3.421888" fill="#52465d"/><path d="m197.040882 537.797721c0 1.889736-1.532151 3.421888-3.421888 3.421888-1.889736 0-3.42437-1.532152-3.42437-3.421888s1.534634-3.421888 3.42437-3.421888c1.889737 0 3.421888 1.532152 3.421888 3.421888" fill="#584b62"/><path d="m210.668338 517.010623c0 1.889736-1.532151 3.424371-3.421887 3.424371s-3.421888-1.534635-3.421888-3.424371c0-1.889737 1.532152-3.421888 3.421888-3.421888s3.421887 1.532151 3.421887 3.421888" fill="#5d5166"/><path d="m222.991107 497.782991c0 1.889737-1.532151 3.421888-3.421888 3.421888-1.892219 0-3.42437-1.532151-3.42437-3.421888 0-1.892219 1.532151-3.421887 3.42437-3.421887 1.889737 0 3.421888 1.529668 3.421888 3.421887" fill="#62576d"/><path d="m237.552009 477.807908c0 1.889737-1.532152 3.421888-3.421888 3.421888s-3.424371-1.532151-3.424371-3.421888c0-1.889736 1.534635-3.421887 3.424371-3.421887s3.421888 1.532151 3.421888 3.421887" fill="#685d70"/><path d="m252.487133 458.016585c0 1.892219-1.532152 3.421887-3.421888 3.421887-1.891474 0-3.423626-1.529668-3.423626-3.421887 0-1.889737 1.532152-3.421888 3.423626-3.421888 1.889736 0 3.421888 1.532151 3.421888 3.421888" fill="#6d6276"/><path d="m267.04878 438.16318c0 1.892219-1.532152 3.424371-3.421888 3.424371s-3.421888-1.532152-3.421888-3.424371c0-1.889736 1.532152-3.421888 3.421888-3.421888s3.421888 1.532152 3.421888 3.421888" fill="#73697d"/><path d="m280.989619 417.880177c0 1.889736-1.532151 3.421887-3.421887 3.421887-1.89222 0-3.424371-1.532151-3.424371-3.421887s1.532151-3.421888 3.424371-3.421888c1.889736 0 3.421887 1.532152 3.421887 3.421888" fill="#796f81"/><path d="m297.418653 399.33295c0 1.889736-1.532151 3.421887-3.421888 3.421887-1.892219 0-3.421887-1.532151-3.421887-3.421887s1.529668-3.421888 3.421887-3.421888c1.889737 0 3.421888 1.532152 3.421888 3.421888" fill="#817687"/><path d="m313.100235 379.419948c0 1.889736-1.534634 3.421887-3.421887 3.421887-1.89222 0-3.424371-1.532151-3.424371-3.421887 0-1.889737 1.532151-3.421888 3.424371-3.421888 1.887253 0 3.421887 1.532151 3.421887 3.421888" fill="#877c8b"/><path d="m329.280946 361.247688c0 1.889736-1.532151 3.421888-3.421887 3.421888-1.89222 0-3.421888-1.532152-3.421888-3.421888s1.529668-3.421888 3.421888-3.421888c1.889736 0 3.421887 1.532152 3.421887 3.421888" fill="#8d8392"/><path d="m347.577367 343.385832c0 2.130609-1.728326 3.858936-3.858935 3.858936-2.13061 0-3.858936-1.728327-3.858936-3.858936 0-2.128126 1.728326-3.858936 3.858936-3.858936 2.130609 0 3.858935 1.73081 3.858935 3.858936" fill="#948d9a"/><path d="m364.753853 325.963507c0 2.130609-1.728327 3.858936-3.858936 3.858936s-3.856452-1.728327-3.856452-3.858936 1.725843-3.858936 3.856452-3.858936 3.858936 1.728327 3.858936 3.858936" fill="#9992a0"/><path d="m380.435435 307.667086c0 2.130609-1.728326 3.858936-3.858936 3.858936-2.130609 0-3.856452-1.728327-3.856452-3.858936s1.725843-3.858936 3.856452-3.858936c2.13061 0 3.858936 1.728327 3.858936 3.858936" fill="#a098a5"/><path d="m398.483533 292.854633c0 2.13061-1.728326 3.858936-3.858935 3.858936-2.13061 0-3.856453-1.728326-3.856453-3.858936 0-2.130609 1.725843-3.858935 3.856453-3.858935 2.130609 0 3.858935 1.728326 3.858935 3.858935" fill="#a8a1ad"/><path d="m415.908341 277.793858c0 2.130609-1.725843 3.861419-3.858935 3.861419-2.13061 0-3.858936-1.73081-3.858936-3.861419s1.728326-3.856452 3.858936-3.856452c2.133092 0 3.858935 1.725843 3.858935 3.856452" fill="#b2abb5"/><path d="m433.578989 261.988114c0 2.13061-1.725843 3.858936-3.856452 3.858936-2.133093 0-3.858936-1.728326-3.858936-3.858936 0-2.130609 1.725843-3.858935 3.858936-3.858935 2.130609 0 3.856452 1.728326 3.856452 3.858935" fill="#bab3bd"/><path d="m451.254603 249.542178c0 2.130609-1.725843 3.858935-3.858936 3.858935-2.130609 0-3.856452-1.728326-3.856452-3.858935 0-2.13061 1.725843-3.858936 3.856452-3.858936 2.133093 0 3.858936 1.728326 3.858936 3.858936" fill="#c1bcc3"/><path d="m468.55525 237.843692c0 2.13061-1.728327 3.858936-3.858936 3.858936-2.133092 0-3.858936-1.728326-3.858936-3.858936 0-2.130609 1.725844-3.858935 3.858936-3.858935 2.130609 0 3.858936 1.728326 3.858936 3.858935" fill="#c7c3ca"/><path d="m487.224155 226.766014c0 2.130609-1.728327 3.858936-3.856453 3.858936-2.133092 0-3.858935-1.728327-3.858935-3.858936s1.725843-3.856452 3.858935-3.856452c2.128126 0 3.856453 1.725843 3.856453 3.856452" fill="#d2ced5"/><path d="m505.272253 216.932433c0 2.130609-1.728326 3.858935-3.858936 3.858935-2.130609 0-3.856452-1.728326-3.856452-3.858935 0-2.13061 1.725843-3.856453 3.856452-3.856453 2.13061 0 3.858936 1.725843 3.858936 3.856453" fill="#dbd7dc"/><path d="m524.437804 207.59798c0 2.336717-1.894703 4.23142-4.23142 4.23142s-4.23142-1.894703-4.23142-4.23142 1.894703-4.23142 4.23142-4.23142 4.23142 1.894703 4.23142 4.23142" fill="#e6e4e8"/><path d="m543.481676 200.503399c0 2.336717-1.894702 4.23142-4.23142 4.23142-2.336717 0-4.231419-1.894703-4.231419-4.23142s1.894702-4.233903 4.231419-4.233903c2.336718 0 4.23142 1.897186 4.23142 4.233903" fill="#f1f0f2"/><path d="m561.15729 194.779559c0 2.336718-1.897186 4.23142-4.233903 4.23142s-4.23142-1.894702-4.23142-4.23142c0-2.336717 1.894703-4.231419 4.23142-4.231419s4.233903 1.894702 4.233903 4.231419" fill="#fff"/><path d="m257.853388 570.963709c0 1.375708-1.114969 2.488194-2.488194 2.488194-1.375708 0-2.488194-1.112486-2.488194-2.488194s1.112486-2.490678 2.488194-2.490678c1.373225 0 2.488194 1.11497 2.488194 2.490678" fill="#221435"/><path d="m280.381229 543.831964c0 1.375708-1.11497 2.488194-2.488195 2.488194-1.375708 0-2.490677-1.112486-2.490677-2.488194s1.114969-2.488194 2.490677-2.488194c1.373225 0 2.488195 1.112486 2.488195 2.488194" fill="#271a37"/><path d="m300.917521 519.312575c0 1.373224-1.114969 2.488194-2.488194 2.488194-1.375708 0-2.490678-1.11497-2.490678-2.488194 0-1.375708 1.11497-2.490678 2.490678-2.490678 1.373225 0 2.488194 1.11497 2.488194 2.490678" fill="#2e213d"/><path d="m319.834749 495.292314c0 1.373225-1.112486 2.488194-2.488194 2.488194s-2.488194-1.114969-2.488194-2.488194c0-1.375708 1.112486-2.490677 2.488194-2.490677s2.488194 1.114969 2.488194 2.490677" fill="#342742"/><path d="m337.882847 474.256893c0 1.375708-1.112486 2.490677-2.488194 2.490677s-2.488194-1.114969-2.488194-2.490677c0-1.373225 1.112486-2.488194 2.488194-2.488194s2.488194 1.114969 2.488194 2.488194" fill="#3b2e48"/><path d="m352.198654 454.341408c0 1.375708-1.114969 2.490677-2.490677 2.490677s-2.488194-1.114969-2.488194-2.490677c0-1.373225 1.112486-2.488194 2.488194-2.488194s2.490677 1.114969 2.490677 2.488194" fill="#41344d"/><path d="m366.137011 435.548341c0 1.375708-1.11497 2.490677-2.488195 2.490677-1.375708 0-2.490677-1.114969-2.490677-2.490677 0-1.373225 1.114969-2.488194 2.490677-2.488194 1.373225 0 2.488195 1.114969 2.488195 2.488194" fill="#473b52"/><path d="m378.955431 417.378565c0 1.373225-1.114969 2.488194-2.488194 2.488194-1.375708 0-2.490677-1.114969-2.490677-2.488194 0-1.375708 1.114969-2.488194 2.490677-2.488194 1.373225 0 2.488194 1.112486 2.488194 2.488194" fill="#4d4259"/><path d="m390.780561 400.512483c0 1.375708-1.114969 2.490677-2.488194 2.490677-1.375708 0-2.488194-1.114969-2.488194-2.490677 0-1.373225 1.112486-2.488194 2.488194-2.488194 1.373225 0 2.488194 1.114969 2.488194 2.488194" fill="#53475e"/><path d="m401.85824 385.575869c0 1.375708-1.11497 2.490677-2.488194 2.490677-1.375709 0-2.488195-1.114969-2.488195-2.490677 0-1.373225 1.112486-2.488194 2.488195-2.488194 1.373224 0 2.488194 1.114969 2.488194 2.488194" fill="#5a4f66"/><path d="m411.813499 370.890061c0 1.375708-1.114969 2.488194-2.488194 2.488194-1.378191 0-2.490677-1.112486-2.490677-2.488194s1.112486-2.488194 2.490677-2.488194c1.373225 0 2.488194 1.112486 2.488194 2.488194" fill="#61566a"/><path d="m421.480704 355.789554c0 1.375708-1.112486 2.490677-2.488194 2.490677s-2.490677-1.114969-2.490677-2.490677c0-1.373225 1.114969-2.488194 2.490677-2.488194s2.488194 1.114969 2.488194 2.488194" fill="#675c72"/><path d="m430.609049 342.63838c0 1.375709-1.114969 2.490678-2.488194 2.490678-1.375708 0-2.490678-1.114969-2.490678-2.490678 0-1.375708 1.11497-2.488194 2.490678-2.488194 1.373225 0 2.488194 1.112486 2.488194 2.488194" fill="#6f6576"/><path d="m440.482362 329.941638c0 1.375708-1.114969 2.488194-2.490678 2.488194-1.373224 0-2.488194-1.112486-2.488194-2.488194s1.11497-2.488194 2.488194-2.488194c1.375709 0 2.490678 1.112486 2.490678 2.488194" fill="#766c7f"/><path d="m449.3599 316.835162c0 1.370742-1.114969 2.488194-2.488194 2.488194-1.375708 0-2.490677-1.117452-2.490677-2.488194 0-1.375708 1.114969-2.490677 2.490677-2.490677 1.373225 0 2.488194 1.114969 2.488194 2.490677" fill="#807585"/><path d="m458.239922 305.007549c0 1.375708-1.112486 2.490678-2.488194 2.490678s-2.490677-1.11497-2.490677-2.490678c0-1.373225 1.114969-2.488194 2.490677-2.488194s2.488194 1.114969 2.488194 2.488194" fill="#877c8c"/><path d="m468.237397 292.271075c0 1.10007-.891479 1.994032-1.991549 1.994032-1.097587 0-1.991548-.893962-1.991548-1.994032 0-1.097587.893961-1.991549 1.991548-1.991549 1.10007 0 1.991549.893962 1.991549 1.991549" fill="#8e8695"/><path d="m478.691785 280.448428c0 1.10007-.891479 1.991549-1.991549 1.991549s-1.991548-.891479-1.991548-1.991549c0-1.100069.891478-1.991548 1.991548-1.991548s1.991549.891479 1.991549 1.991548" fill="#98909e"/><path d="m491.512689 269.537126c0 1.10007-.891479 1.991549-1.991549 1.991549-1.100069 0-1.991548-.891479-1.991548-1.991549s.891479-1.991548 1.991548-1.991548c1.10007 0 1.991549.891478 1.991549 1.991548" fill="#a097a4"/><path d="m504.706077 256.800652c0 1.097587-.891479 1.989065-1.991548 1.989065-1.10007 0-1.991549-.891478-1.991549-1.989065 0-1.102553.891479-1.991549 1.991549-1.991549 1.100069 0 1.991548.888996 1.991548 1.991549" fill="#a8a2ad"/><path d="m518.562487 244.769414c0 1.10007-.891479 1.991549-1.991548 1.991549-1.10007 0-1.991549-.891479-1.991549-1.991549s.891479-1.991548 1.991549-1.991548c1.100069 0 1.991548.891478 1.991548 1.991548" fill="#b4adb8"/><path d="m534.452661 231.615758c0 1.100069-.891479 1.991548-1.991549 1.991548s-1.991548-.891479-1.991548-1.991548c0-1.10007.891478-1.991549 1.991548-1.991549s1.991549.891479 1.991549 1.991549" fill="#beb9c1"/><path d="m553.412103 219.420627c0 1.10007-.891478 1.991548-1.991548 1.991548s-1.991549-.891478-1.991549-1.991548.891479-1.991549 1.991549-1.991549 1.991548.891479 1.991548 1.991549" fill="#c7c3ca"/><path d="m572.413761 205.852271c0 1.10007-.891479 1.991549-1.991549 1.991549-1.100069 0-1.991548-.891479-1.991548-1.991549s.891479-1.989065 1.991548-1.989065c1.10007 0 1.991549.888995 1.991549 1.989065" fill="#d3d1d8"/><path d="m594.276097 191.913915c0 1.10007-.891479 1.991548-1.991549 1.991548s-1.991548-.891478-1.991548-1.991548.891478-1.991549 1.991548-1.991549 1.991549.891479 1.991549 1.991549" fill="#e0dee2"/><path d="m475.242582 307.103393c0 1.102554-.891479 1.994032-1.991549 1.994032s-1.991548-.891478-1.991548-1.994032c0-1.097586.891478-1.991548 1.991548-1.991548s1.991549.893962 1.991549 1.991548" fill="#8e8695"/><path d="m3.15369905 622.555245c0 .871613-.70523663 1.57685-1.5743663 1.57685-.87161288 0-1.57933275-.705237-1.57933275-1.57685 0-.871612.70771987-1.576849 1.57933275-1.576849.86912967 0 1.5743663.705237 1.5743663 1.576849" fill="#37184c"/><path d="m21.7622617 605.257082c0 .86913-.7052366 1.574366-1.5768495 1.574366s-1.5768495-.705236-1.5768495-1.574366c0-.871613.7052366-1.579333 1.5768495-1.579333s1.5768495.70772 1.5768495 1.579333" fill="#3c1d50"/><path d="m39.6226279 586.958178c0 .871613-.7052366 1.576849-1.5768495 1.576849-.8691296 0-1.5768495-.705236-1.5768495-1.576849s.7077199-1.57685 1.5768495-1.57685c.8716129 0 1.5768495.705237 1.5768495 1.57685" fill="#3e2554"/><path d="m57.6707261 569.347128c0 .869129-.7077198 1.576849-1.5768495 1.576849-.8716129 0-1.5793327-.70772-1.5793327-1.576849 0-.871613.7077198-1.57685 1.5793327-1.57685.8691297 0 1.5768495.705237 1.5768495 1.57685" fill="#432857"/><path d="m73.4128992 552.232723c0 .871613-.7052366 1.576849-1.5768495 1.576849-.8691297 0-1.5743663-.705236-1.5743663-1.576849s.7052366-1.57685 1.5743663-1.57685c.8716129 0 1.5768495.705237 1.5768495 1.57685" fill="#492f5b"/><path d="m89.967336 534.497511c0 1.008191-.8169819 1.825173-1.8251723 1.825173s-1.8251723-.816982-1.8251723-1.825173c0-1.00819.8169819-1.825172 1.8251723-1.825172s1.8251723.816982 1.8251723 1.825172" fill="#4b345e"/><path d="m105.152769 516.576058c0 1.00819-.816981 1.825172-1.825172 1.825172-1.00819 0-1.827655-.816982-1.827655-1.825172 0-1.008191.819465-1.825172 1.827655-1.825172 1.008191 0 1.825172.816981 1.825172 1.825172" fill="#513964"/><path d="m120.025565 499.585815c0 1.00819-.816982 1.825172-1.825173 1.825172-1.00819 0-1.827655-.816982-1.827655-1.825172 0-1.008191.819465-1.825173 1.827655-1.825173 1.008191 0 1.825173.816982 1.825173 1.825173" fill="#553e66"/><path d="m134.961185 481.537716c0 1.008191-.819465 1.825173-1.825172 1.825173-1.00819 0-1.827656-.816982-1.827656-1.825173 0-1.00819.819466-1.825172 1.827656-1.825172 1.005707 0 1.825172.816982 1.825172 1.825172" fill="#594469"/><path d="m147.593364 463.67586c0 1.008191-.816982 1.825172-1.825172 1.825172-1.008191 0-1.827656-.816981-1.827656-1.825172 0-1.005707.819465-1.822689 1.827656-1.822689 1.00819 0 1.825172.816982 1.825172 1.822689" fill="#5e486e"/><path d="m160.786752 446.626019c0 1.005708-.816982 1.825173-1.822689 1.825173-1.010673 0-1.827655-.819465-1.827655-1.825173 0-1.00819.816982-1.825172 1.827655-1.825172 1.005707 0 1.822689.816982 1.822689 1.825172" fill="#634e71"/><path d="m175.223989 429.886582c0 1.008191-.816982 1.825173-1.825172 1.825173s-1.825172-.816982-1.825172-1.825173c0-1.00819.816982-1.825172 1.825172-1.825172s1.825172.816982 1.825172 1.825172" fill="#665375"/><path d="m187.733497 411.776403c0 1.008191-.819465 1.825173-1.825173 1.825173-1.00819 0-1.825172-.816982-1.825172-1.825173 0-1.00819.816982-1.825172 1.825172-1.825172 1.005708 0 1.825173.816982 1.825173 1.825172" fill="#6c5779"/><path d="m200.738905 396.469788c0 1.281346-1.040473 2.321818-2.324301 2.321818-1.281346 0-2.321818-1.040472-2.321818-2.321818 0-1.286312 1.040472-2.326784 2.321818-2.326784 1.283828 0 2.324301 1.040472 2.324301 2.326784" fill="#705d7c"/><path d="m214.804154 379.541626c0 1.283829-1.040472 2.321818-2.321818 2.321818-1.286312 0-2.326784-1.037989-2.326784-2.321818s1.040472-2.324301 2.326784-2.324301c1.281346 0 2.321818 1.040472 2.321818 2.324301" fill="#766382"/><path d="m227.996301 363.514875c0 1.368258-1.110003 2.478261-2.478261 2.478261-1.370742 0-2.478262-1.110003-2.478262-2.478261 0-1.368259 1.10752-2.480744 2.478262-2.480744 1.368258 0 2.478261 1.112485 2.478261 2.480744" fill="#796786"/><path d="m240.941118 347.709131c0 1.368259-1.110003 2.480745-2.478261 2.480745-1.370742 0-2.480745-1.112486-2.480745-2.480745 0-1.368258 1.110003-2.478261 2.480745-2.478261 1.368258 0 2.478261 1.110003 2.478261 2.478261" fill="#7f6c8c"/><path d="m253.698948 332.648356c0 1.370741-1.110003 2.480744-2.478261 2.480744-1.368259 0-2.480745-1.110003-2.480745-2.480744 0-1.368259 1.112486-2.478261 2.480745-2.478261 1.368258 0 2.478261 1.110002 2.478261 2.478261" fill="#857390"/><path d="m267.88811 317.900467c0 1.368258-1.110002 2.478261-2.480744 2.478261-1.368258 0-2.478261-1.110003-2.478261-2.478261 0-1.370742 1.110003-2.478261 2.478261-2.478261 1.370742 0 2.480744 1.107519 2.480744 2.478261" fill="#887995"/><path d="m281.826467 302.904256c0 1.368258-1.110003 2.478261-2.478261 2.478261-1.370742 0-2.480745-1.110003-2.480745-2.478261 0-1.368259 1.110003-2.480745 2.480745-2.480745 1.368258 0 2.478261 1.112486 2.478261 2.480745" fill="#8f7f99"/><path d="m296.328516 289.708384c0 1.370742-1.110003 2.480744-2.478261 2.480744-1.370742 0-2.480744-1.110002-2.480744-2.480744 0-1.368258 1.110002-2.478261 2.480744-2.478261 1.368258 0 2.478261 1.110003 2.478261 2.478261" fill="#94859e"/><path d="m311.635131 277.359293c0 1.658796-1.345909 3.004706-3.007188 3.004706-1.66128 0-3.007189-1.34591-3.007189-3.004706 0-1.663762 1.345909-3.007188 3.007189-3.007188 1.661279 0 3.007188 1.343426 3.007188 3.007188" fill="#998aa3"/><path d="m328.126246 264.476308c0 1.658796-1.34591 3.007189-3.004706 3.007189-1.663762 0-3.009672-1.348393-3.009672-3.007189 0-1.663762 1.34591-3.007188 3.009672-3.007188 1.658796 0 3.004706 1.343426 3.004706 3.007188" fill="#a192a9"/><path d="m343.745747 252.278694c0 1.66128-1.345909 3.007189-3.007188 3.007189-1.66128 0-3.007189-1.345909-3.007189-3.007189 0-1.661279 1.345909-3.007188 3.007189-3.007188 1.661279 0 3.007188 1.345909 3.007188 3.007188" fill="#a699ad"/><path d="m361.108475 241.449339c0 1.661279-1.34591 3.007189-3.007189 3.007189s-3.007189-1.34591-3.007189-3.007189 1.34591-3.007189 3.007189-3.007189 3.007189 1.34591 3.007189 3.007189" fill="#aba0b3"/><path d="m378.533283 231.804483c0 1.661279-1.34591 3.007189-3.007189 3.007189s-3.007189-1.34591-3.007189-3.007189 1.34591-3.009672 3.007189-3.009672 3.007189 1.348393 3.007189 3.009672" fill="#b3a9bb"/><path d="m397.949639 221.84674c0 1.661279-1.345909 3.007189-3.007188 3.007189-1.66128 0-3.009672-1.34591-3.009672-3.007189 0-1.658796 1.348392-3.007188 3.009672-3.007188 1.661279 0 3.007188 1.348392 3.007188 3.007188" fill="#b9b0c2"/><path d="m416.432302 212.636449c0 1.658796-1.345909 3.007189-3.007188 3.007189-1.66128 0-3.007189-1.348393-3.007189-3.007189 0-1.661279 1.345909-3.007189 3.007189-3.007189 1.661279 0 3.007188 1.34591 3.007188 3.007189" fill="#c0b8c6"/><path d="m436.345305 204.794416c0 1.66128-1.34591 3.007189-3.007189 3.007189s-3.007189-1.345909-3.007189-3.007189c0-1.661279 1.34591-3.007188 3.007189-3.007188s3.007189 1.345909 3.007189 3.007188" fill="#c7c0cd"/><path d="m460.559257 198.166682c0 1.919535-1.554501 3.476518-3.474036 3.476518-1.919534 0-3.476518-1.556983-3.476518-3.476518 0-1.917052 1.556984-3.474036 3.476518-3.474036 1.919535 0 3.474036 1.556984 3.474036 3.474036" fill="#cdc7d2"/><path d="m482.277565 192.380761c0 1.917052-1.5545 3.474036-3.474035 3.474036s-3.474035-1.556984-3.474035-3.474036c0-1.919534 1.5545-3.474035 3.474035-3.474035s3.474035 1.554501 3.474035 3.474035" fill="#d6d3dc"/><path d="m506.98568 187.40189c0 1.917052-1.5545 3.474036-3.474035 3.474036s-3.474036-1.556984-3.474036-3.474036c0-1.919535 1.554501-3.474035 3.474036-3.474035s3.474035 1.5545 3.474035 3.474035" fill="#dfdce3"/><path d="m532.063796 184.35497c0 1.917052-1.556984 3.474035-3.474036 3.474035-1.919535 0-3.474035-1.556983-3.474035-3.474035 0-1.919535 1.5545-3.474036 3.474035-3.474036 1.917052 0 3.474036 1.554501 3.474036 3.474036" fill="#eae7eb"/><path d="m559.113594 181.283217c0 1.917052-1.554501 3.474036-3.474035 3.474036-1.919535 0-3.476519-1.556984-3.476519-3.474036 0-1.919535 1.556984-3.474035 3.476519-3.474035 1.919534 0 3.474035 1.5545 3.474035 3.474035" fill="#f4f3f5"/></g></svg>
'''
'''--- src/frontend/public/dialog/mail.svg ---
<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
<g>
	<rect x="441.061" y="193.837" style="fill:#11544F;" width="42.511" height="30.214"/>
	<rect x="28.43" y="193.837" style="fill:#11544F;" width="39.489" height="30.214"/>
	<path style="fill:#11544F;" d="M444.363,402.339H67.637c-8.344,0-15.107-6.763-15.107-15.107V53.087
		C52.53,23.815,76.344,0,105.615,0h300.769c29.271,0,53.086,23.815,53.086,53.087v334.145
		C459.47,395.576,452.707,402.339,444.363,402.339z M82.743,372.125h346.513V53.087c0-12.613-10.261-22.873-22.872-22.873H105.615
		c-12.611,0-22.872,10.261-22.872,22.873C82.743,53.087,82.743,372.125,82.743,372.125z"/>
</g>
<path style="fill:#6AB797;" d="M444.214,496.893H67.786c-24.957,0-45.188-20.231-45.188-45.188v-231.4
	c0-9.927,11.027-15.883,19.329-10.44L245.301,343.18c6.497,4.259,14.901,4.259,21.399,0l203.374-133.315
	c8.303-5.443,19.329,0.514,19.329,10.44v231.4C489.402,476.662,469.17,496.893,444.214,496.893z"/>
<g>
	<path style="fill:#11544F;" d="M444.214,512H67.786c-33.247,0-60.295-27.047-60.295-60.295v-231.4
		c0-15.226,12.392-27.612,27.624-27.612c5.346,0,10.566,1.57,15.093,4.537l203.374,133.317c0.909,0.597,1.817,0.722,2.417,0.722
		c0.6,0,1.508-0.125,2.417-0.722L461.791,197.23c4.528-2.967,9.747-4.537,15.093-4.537c15.232,0,27.624,12.386,27.624,27.612v231.4
		C504.508,484.953,477.461,512,444.214,512z M37.705,225.159v226.546c0,16.586,13.495,30.081,30.081,30.081h376.428
		c16.586,0,30.081-13.495,30.081-30.081V225.159L274.982,355.814c-5.656,3.707-12.218,5.667-18.982,5.667
		c-6.763,0-13.326-1.959-18.982-5.667L37.705,225.159z"/>
	<path style="fill:#11544F;" d="M41.941,498.614c-4.923,0-9.748-2.402-12.649-6.827c-4.574-6.978-2.626-16.343,4.352-20.917
		l70.511-46.223c6.979-4.574,16.343-2.626,20.917,4.352c4.574,6.978,2.626,16.343-4.352,20.917l-70.511,46.223
		C47.655,497.813,44.781,498.614,41.941,498.614z"/>
	<path style="fill:#11544F;" d="M470.059,498.614c-2.842,0-5.715-0.801-8.268-2.475L258.417,362.824
		c-1.468-0.964-3.367-0.964-4.834,0l-64.834,42.5c-6.981,4.574-16.343,2.626-20.917-4.352c-4.574-6.978-2.626-16.343,4.352-20.917
		l64.834-42.5c11.531-7.558,26.434-7.558,37.964,0L478.355,470.87c6.978,4.574,8.927,13.939,4.352,20.917
		C479.807,496.21,474.982,498.614,470.059,498.614z"/>
	<path style="fill:#11544F;" d="M331.534,121.337H180.465c-8.344,0-15.107-6.763-15.107-15.107s6.763-15.107,15.107-15.107h151.069
		c8.344,0,15.107,6.763,15.107,15.107S339.878,121.337,331.534,121.337z"/>
	<path style="fill:#11544F;" d="M355.707,200.308H156.293c-8.344,0-15.107-6.763-15.107-15.107c0-8.344,6.763-15.107,15.107-15.107
		h199.414c8.344,0,15.107,6.763,15.107,15.107S364.051,200.308,355.707,200.308z"/>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>

'''
'''--- src/frontend/public/dialog/mario.svg ---
<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 496.2 496.2" style="enable-background:new 0 0 496.2 496.2;" xml:space="preserve">
<path style="fill:#25B7D3;" d="M496.2,248.1C496.2,111.1,385.1,0,248.1,0S0,111.1,0,248.1s111.1,248.1,248.1,248.1
	S496.2,385.1,496.2,248.1z"/>
<path style="fill:#FFD090;" d="M143.1,306.8c0,0-23.9-66.5,2.9-88.3c0,0,83.3-77.4,217.2,16.3c0,0,5.9,102.1-15.9,123.9
	s-67,63.2-102.1,67c-21.4,2.3-84.1-20.1-100.4-50.2C144.8,375.5,115.9,329,143.1,306.8z"/>
<path style="fill:#FBFAF6;" d="M271.5,256.8c1.5,21.9-7,31.5-18.3,32.4c-11.3,0.9-20.8-5.3-22.4-27.4c-1-14,0.8-29.8,17.7-31.5
	C264.9,228.5,270.6,242.8,271.5,256.8z"/>
<path style="fill:#0084A4;" d="M271.3,261c1,14.9-4.8,21.4-12.4,22c-7.7,0.6-14.2-3.6-15.2-18.6c-0.7-9.5,0.6-20.2,12-21.4
	C266.8,241.8,270.6,251.5,271.3,261z"/>
<path style="fill:#130002;" d="M266.7,261.3c0.7,9.9-3.3,14.3-8.6,14.7c-5.3,0.4-9.8-2.4-10.5-12.4c-0.5-6.3,0.4-13.5,8.4-14.3
	C263.6,248.5,266.2,254.9,266.7,261.3z"/>
<path style="fill:#FBFAF6;" d="M260.8,254c0.2,3.1-1.6,4.5-3.8,4.7c-2.3,0.2-4.2-0.7-4.4-3.8c-0.1-2,0.3-4.2,3.7-4.6
	C259.6,250,260.7,252,260.8,254z"/>
<g>
	<path style="fill:#472410;" d="M226.4,316.5c0,0,37.7-6.3,64-28.9c0,0,21.3,25.1-7.5,46.5c0,0,1.3,17.6-35.2,23.9
		c0,0-13.8,15.1-38.9,13.8c0,0-25.1,11.3-33.9,3.8c0,0-18.8-1.3-25.1-16.3c0,0-16.3-6.3-15.1-26.4L226.4,316.5z"/>
	<path style="fill:#472410;" d="M170.8,248.3c0,0-21.3-22.6-37.7,6.3c0,0-2.5-26.4,10-33.9C143.1,220.6,167,211.8,170.8,248.3z"/>
	<path style="fill:#472410;" d="M221.4,236.1c0,0,26.4-32.6,57.8-12.6c0,0-15.5-36.4-41.4-25.1C237.7,198.5,218.9,212.3,221.4,236.1
		z"/>
	<path style="fill:#472410;" d="M327.5,212.9c0,0-2.7,39.5-6.9,47.1c0,0-10.5,24.3,9.6,23.4c0,0,7.5,16.3,18.8,9.2
		c0,0,0.8-47.7,15.1-49.4C364.1,243.2,337.5,214.6,327.5,212.9z"/>
</g>
<path style="fill:#FBFAF6;" d="M139.8,280.7c3.7,19.2,13.2,25.6,23.1,23.7c9.9-1.8,16.8-9.3,13.1-28.7c-2.3-12.3-7.5-25.4-22.4-23.1
	C139.2,254.8,137.5,268.4,139.8,280.7z"/>
<path style="fill:#0084A4;" d="M148.6,279.7c2.8,14.6,10,19.5,17.6,18.1c7.5-1.4,12.7-7.1,10-21.8c-1.8-9.3-5.7-19.4-17.1-17.6
	C148,260,146.8,270.4,148.6,279.7z"/>
<path style="fill:#130002;" d="M153,279.5c1.9,9.7,6.8,12.9,12,12c5.2-1,8.8-4.8,7-14.6c-1.2-6.2-3.8-12.9-11.7-11.7
	C152.8,266.4,151.8,273.3,153,279.5z"/>
<path style="fill:#FBFAF6;" d="M159.4,270.5c0.5,2.6,2.2,3.3,4.1,3c1.9-0.3,3.2-1.4,2.8-4c-0.3-1.6-1.2-3.4-4-2.9
	C159.5,267,159,268.9,159.4,270.5z"/>
<path style="fill:#EDBF88;" d="M229.3,321.5c0,22.9-21.2,41.4-47.3,41.4s-47.3-18.6-47.3-41.4c0-5.7,1.3-11.2,3.7-16.1
	c7.2-14.9,24-25.3,43.6-25.3C208.2,280.1,229.3,298.6,229.3,321.5z"/>
<g>
	<path style="fill:#FFD090;" d="M223.9,317.8c0,22.6-20.4,40.9-45.6,40.9s-45.6-18.3-45.6-40.9c0-5.7,1.3-11,3.6-15.9
		c6.9-14.7,23.1-25,42-25C203.5,276.9,223.9,295.2,223.9,317.8z"/>
	<path style="fill:#FFD090;" d="M407.2,288.9c-8.1,25.3-22.6,41.9-47.3,41c-14.2-0.5-21.4-27.5-16.1-53.6
		c5.2-26.1,21.3-42.6,40.7-38.7C404,241.5,415.2,264.2,407.2,288.9z"/>
</g>
<path style="fill:#EDBB7E;" d="M393.4,288.4c-2.7,13.6-13.2,22.9-23.3,20.9c-10.1-2-16.1-14.7-13.4-28.3
	c2.7-13.6,13.2-22.9,23.3-20.9C390.1,262.2,396.1,274.9,393.4,288.4z"/>
<path style="fill:#FFD090;" d="M397.4,287.9c-2.6,13.1-12.7,22.1-22.5,20.2c-9.8-2-15.6-14.2-13-27.3c2.6-13.1,12.7-22.1,22.5-20.2
	C394.2,262.6,400,274.8,397.4,287.9z"/>
<path style="fill:#D61E1E;" d="M115.5,203.1c0,0-8.4-80.4,27.6-104.6c0,0,60.9-53,126.4-13.4c31.8,19.3,63.6,43.5,97.9,88.7
	c0,0,58.9,13.8,36.3,77.4c0,0-20.2-19.3-43.6-7.5C360.1,243.7,280.4,147.8,115.5,203.1z"/>
<ellipse transform="matrix(-0.1518 -0.9884 0.9884 -0.1518 65.2117 350.7504)" style="fill:#F1FBFA;" cx="183.103" cy="147.395" rx="41" ry="42.5"/>
<path style="fill:#D61E1E;" d="M154,168.5l13-46.7l14,15.6l9.9-18.7l25.7,41.7l-10.5,7.3l-13-25.1l-9.6,14.8l-12.6-12l-5.4,27.5
	L154,168.5z"/>
<path style="fill:#B21818;" d="M133.5,260c0,0-38.9-5-46.5-22.6c0,0-10-36.4,49-50.2c0,0,101.6-37.1,191.2,29.8
	c0,0-79.4-43.2-158.1-10.6C169.1,206.4,128.1,219.8,133.5,260z"/>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>

'''
'''--- src/frontend/public/distortion-footer.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 504 108" style="enable-background:new 0 0 504 108;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#FFFFFF;}
</style>
<g>
	<path class="st0" d="M288,72h36v36h-36V72z"/>
	<path class="st0" d="M180,72h36v36h-36V72z"/>
	<path class="st0" d="M252,0h36v36h-36V0z"/>
	<path class="st0" d="M216,36h36v36h-36V36z"/>
	<path class="st0" d="M180,72h36v36h-36V72z"/>
</g>
<path class="st0" d="M144,0h36v36h-36V0z"/>
<g>
	<path class="st0" d="M252,72h36v36h-36V72z"/>
	<path class="st0" d="M144,72h36v36h-36V72z"/>
	<path class="st0" d="M468,72h36v36h-36V72z"/>
</g>
<g>
	<path class="st0" d="M432,0h36v72h-36V0z"/>
	<path class="st0" d="M396,36h36v36h-36V36z"/>
	<path class="st0" d="M360,72h36v36h-36V72z"/>
</g>
<path class="st0" d="M288,36h36v36h-36V36z"/>
<g>
	<path class="st0" d="M180,36h36v36h-36V36z"/>
	<path class="st0" d="M144,72h36v36h-36V72z"/>
	<path class="st0" d="M72,36h36v72H72V36z"/>
	<path class="st0" d="M108,72h36v36h-36V72z"/>
	<path class="st0" d="M0,72h36v36H0V72z"/>
</g>
</svg>

'''
'''--- src/frontend/public/github.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 217.191 211.828"><defs><style>.cls-1{fill:#fff;fill-rule:evenodd;}</style></defs><path class="cls-1" d="M111.4,3A108.606,108.606,0,0,0,77.079,214.641c5.43,1,7.412-2.357,7.412-5.235,0-2.578-.094-9.407-.147-18.469-30.208,6.562-36.581-14.558-36.581-14.558-4.938-12.545-12.058-15.885-12.058-15.885-9.859-6.738.746-6.6.746-6.6,10.9.768,16.634,11.191,16.634,11.191,9.687,16.6,25.416,11.8,31.6,9.023.987-7.017,3.792-11.8,6.9-14.517-24.114-2.741-49.465-12.057-49.465-53.672A41.977,41.977,0,0,1,53.3,76.778c-1.116-2.747-4.843-13.788,1.065-28.739,0,0,9.118-2.92,29.863,11.132a102.94,102.94,0,0,1,54.374,0c20.732-14.052,29.833-11.132,29.833-11.132,5.925,14.951,2.2,25.992,1.081,28.739a41.9,41.9,0,0,1,11.163,29.14c0,41.718-25.391,50.9-49.583,53.587,3.9,3.353,7.373,9.981,7.373,20.11,0,14.518-.134,26.231-.134,29.791,0,2.9,1.956,6.283,7.467,5.222A108.611,108.611,0,0,0,111.4,3Z" transform="translate(-2.809 -3)"/></svg>
'''
'''--- src/frontend/public/icons/badge.svg ---
<svg width="176" height="201" viewBox="0 0 176 201" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M91.64 199.697C90.4933 200.279 89.2257 200.582 87.94 200.582C86.6543 200.582 85.3867 200.279 84.24 199.697L3.69998 153.207C2.62536 152.5 1.7311 151.551 1.08865 150.436C0.44621 149.321 0.0734109 148.072 0 146.787V53.7874C0.0726093 52.5041 0.445152 51.2557 1.08774 50.1424C1.73032 49.0292 2.62502 48.0822 3.69998 47.3774L84.24 0.877411C85.388 0.300465 86.6551 0 87.94 0C89.2248 0 90.4919 0.300465 91.64 0.877411L172.18 47.4374C173.255 48.1422 174.15 49.0892 174.792 50.2024C175.435 51.3157 175.807 52.5641 175.88 53.8474V146.847C175.807 148.131 175.435 149.379 174.792 150.492C174.15 151.606 173.255 152.553 172.18 153.257L91.64 199.697Z" fill="#0A5688" fill-opacity="0.5"/>
<path d="M169.75 146.737V53.8672C169.629 53.4108 169.391 52.9938 169.06 52.6572L88.6299 6.22721C88.1777 6.10721 87.7021 6.10721 87.2499 6.22721L6.81989 52.6572C6.49443 52.9942 6.25739 53.4064 6.12988 53.8572V146.727C6.25297 147.18 6.49061 147.593 6.81989 147.927L87.2599 194.357C87.4807 194.421 87.71 194.452 87.9399 194.447C88.1731 194.451 88.4056 194.421 88.6299 194.357L169.11 147.917C169.421 147.586 169.642 147.179 169.75 146.737V146.737Z" fill="#F74444"/>
<path d="M87.9399 10.4771L10.1499 55.3771V145.207L87.9399 190.107L165.72 145.207L165.73 55.3871L87.9399 10.4771Z" fill="#00273C"/>
<path d="M87.9399 17.1074L57.96 34.4174H117.92L87.9399 17.1074Z" fill="#03A9FF"/>
<path d="M19.9199 56.3775H155.96L117.92 34.4175H57.9599L19.9199 56.3775Z" fill="#0074B1"/>
<path d="M15.8999 58.6974V78.3374H159.98V58.6974L155.96 56.3774H19.9199L15.8999 58.6974Z" fill="#004E76"/>
<path d="M159.98 78.3374H15.8999V100.297H159.98V78.3374Z" fill="#003454"/>
<path d="M159.98 100.287H15.8999V122.247H159.98V100.287Z" fill="#002B44"/>
<path d="M44.0695 145.207H9.28955V121.147H44.0695L41.2596 133.177L44.0695 145.207Z" fill="#F74444"/>
<path d="M131.81 145.207H166.59V121.147H131.81L134.62 133.177L131.81 145.207Z" fill="#F74444"/>
<path d="M20.1097 135.367C20.0355 135.406 19.9736 135.465 19.9312 135.538C19.8888 135.61 19.8675 135.693 19.8698 135.777V137.277C19.8634 137.324 19.8678 137.371 19.8825 137.416C19.8971 137.46 19.9218 137.501 19.9546 137.535C19.9873 137.569 20.0273 137.594 20.0715 137.61C20.1157 137.626 20.163 137.632 20.2098 137.627H22.0697V136.917C22.0648 136.87 22.0705 136.823 22.0865 136.779C22.1024 136.735 22.1283 136.695 22.162 136.662C22.1957 136.629 22.2365 136.605 22.2811 136.59C22.3258 136.575 22.3732 136.571 22.4197 136.577H24.0697C24.1163 136.571 24.1637 136.575 24.2084 136.59C24.253 136.605 24.2938 136.629 24.3275 136.662C24.3612 136.695 24.387 136.735 24.403 136.779C24.419 136.823 24.4247 136.87 24.4197 136.917V139.557C24.4264 139.605 24.422 139.653 24.4067 139.699C24.3915 139.744 24.3659 139.785 24.3319 139.819C24.298 139.853 24.2567 139.879 24.2112 139.894C24.1657 139.909 24.1173 139.914 24.0697 139.907H17.8698C17.8222 139.914 17.7738 139.909 17.7283 139.894C17.6828 139.879 17.6415 139.853 17.6076 139.819C17.5736 139.785 17.548 139.744 17.5328 139.699C17.5175 139.653 17.5131 139.605 17.5198 139.557V134.437C17.5198 134.107 17.6397 133.967 17.9697 133.797L22.0697 131.587V129.037C22.081 128.944 22.071 128.849 22.0403 128.76C22.0096 128.671 21.9591 128.591 21.8926 128.524C21.8262 128.458 21.7454 128.407 21.6566 128.377C21.5677 128.346 21.4731 128.336 21.3797 128.347H20.5598C20.466 128.334 20.3705 128.342 20.2807 128.372C20.1909 128.402 20.1092 128.453 20.0423 128.52C19.9754 128.587 19.9249 128.668 19.895 128.758C19.865 128.848 19.8564 128.943 19.8698 129.037V130.437C19.8728 130.475 19.8676 130.512 19.8546 130.548C19.8416 130.583 19.8211 130.615 19.7944 130.642C19.7678 130.668 19.7357 130.689 19.7004 130.702C19.665 130.715 19.6273 130.72 19.5898 130.717H17.7998C17.7618 130.722 17.7233 130.718 17.687 130.706C17.6508 130.694 17.618 130.673 17.5909 130.646C17.5639 130.619 17.5434 130.586 17.531 130.55C17.5187 130.514 17.5148 130.475 17.5198 130.437V128.617C17.4775 128.28 17.5128 127.938 17.623 127.616C17.7332 127.295 17.9154 127.003 18.1556 126.763C18.3958 126.523 18.6877 126.341 19.0091 126.23C19.3304 126.12 19.6727 126.085 20.0097 126.127H21.9397C22.276 126.087 22.6172 126.123 22.9372 126.234C23.2573 126.345 23.5479 126.527 23.7869 126.767C24.026 127.007 24.2072 127.299 24.3168 127.619C24.4265 127.94 24.4617 128.281 24.4197 128.617V132.677C24.4197 133.007 24.2797 133.147 23.9497 133.317L20.1097 135.367Z" fill="white"/>
<path d="M26.1098 128.597C26.0675 128.26 26.1028 127.918 26.213 127.597C26.3232 127.275 26.5054 126.983 26.7456 126.743C26.9858 126.503 27.2777 126.321 27.5991 126.211C27.9204 126.1 28.2627 126.065 28.5997 126.107H30.5298C30.8665 126.065 31.2084 126.1 31.5294 126.21C31.8504 126.32 32.1419 126.503 32.3814 126.743C32.6209 126.984 32.8021 127.276 32.911 127.597C33.0199 127.919 33.0537 128.261 33.0097 128.597V137.437C33.0517 137.774 33.0165 138.115 32.9068 138.435C32.7972 138.756 32.616 139.047 32.3769 139.287C32.1379 139.527 31.8473 139.71 31.5272 139.82C31.2072 139.931 30.8661 139.968 30.5298 139.927H28.6098C28.2719 139.971 27.9285 139.937 27.6059 139.828C27.2833 139.718 26.99 139.536 26.7486 139.296C26.5072 139.056 26.3241 138.763 26.2134 138.441C26.1027 138.119 26.0672 137.775 26.1098 137.437V128.597ZM30.1098 137.677C30.2035 137.691 30.299 137.682 30.3888 137.652C30.4786 137.622 30.5603 137.572 30.6272 137.505C30.6942 137.438 30.7446 137.356 30.7745 137.266C30.8045 137.177 30.8131 137.081 30.7998 136.987V128.987C30.8111 128.894 30.801 128.799 30.7703 128.711C30.7396 128.622 30.6891 128.541 30.6227 128.475C30.5562 128.408 30.4755 128.358 30.3866 128.327C30.2978 128.296 30.2031 128.286 30.1098 128.297H29.1098C29.0164 128.286 28.9218 128.296 28.8329 128.327C28.744 128.358 28.6633 128.408 28.5968 128.475C28.5304 128.541 28.4799 128.622 28.4492 128.711C28.4186 128.799 28.4085 128.894 28.4198 128.987V136.987C28.4064 137.081 28.415 137.177 28.445 137.266C28.4749 137.356 28.5254 137.438 28.5923 137.505C28.6592 137.572 28.7409 137.622 28.8307 137.652C28.9205 137.682 29.016 137.691 29.1098 137.677H30.1098Z" fill="white"/>
<path d="M149.54 131.767C149.539 132.067 149.429 132.357 149.231 132.582C149.032 132.807 148.757 132.951 148.46 132.987V132.987C148.757 133.024 149.032 133.168 149.231 133.393C149.429 133.618 149.539 133.907 149.54 134.207V137.437C149.58 137.775 149.543 138.117 149.432 138.439C149.32 138.76 149.137 139.052 148.896 139.291C148.655 139.531 148.363 139.713 148.041 139.824C147.72 139.934 147.377 139.969 147.04 139.927H145.04C144.713 139.966 144.382 139.93 144.071 139.822C143.76 139.714 143.478 139.537 143.246 139.304C143.014 139.071 142.837 138.788 142.731 138.477C142.624 138.165 142.589 137.834 142.63 137.507V136.937C142.625 136.892 142.63 136.845 142.646 136.802C142.661 136.758 142.686 136.719 142.719 136.687C142.751 136.654 142.791 136.629 142.834 136.614C142.877 136.598 142.924 136.593 142.97 136.597H144.63C144.675 136.593 144.722 136.598 144.765 136.614C144.808 136.629 144.848 136.654 144.88 136.687C144.913 136.719 144.938 136.758 144.953 136.802C144.969 136.845 144.974 136.892 144.97 136.937V137.647H146.9C146.947 137.654 146.995 137.65 147.041 137.634C147.086 137.619 147.128 137.593 147.162 137.56C147.196 137.526 147.221 137.484 147.237 137.439C147.252 137.393 147.256 137.345 147.25 137.297V134.837C147.263 134.744 147.254 134.648 147.224 134.558C147.194 134.468 147.144 134.387 147.077 134.32C147.01 134.253 146.928 134.203 146.839 134.173C146.749 134.143 146.653 134.134 146.56 134.147H144.56C144.513 134.152 144.466 134.147 144.421 134.131C144.377 134.115 144.337 134.089 144.304 134.055C144.272 134.021 144.247 133.981 144.232 133.936C144.218 133.891 144.213 133.844 144.22 133.797V132.217C144.213 132.171 144.218 132.123 144.232 132.079C144.247 132.034 144.272 131.993 144.304 131.96C144.337 131.926 144.377 131.9 144.421 131.884C144.466 131.868 144.513 131.862 144.56 131.867H146.56C146.651 131.88 146.745 131.872 146.833 131.843C146.921 131.814 147.002 131.765 147.068 131.701C147.135 131.636 147.185 131.557 147.217 131.47C147.248 131.383 147.26 131.29 147.25 131.197V128.727C147.255 128.681 147.249 128.633 147.233 128.589C147.217 128.545 147.191 128.505 147.157 128.472C147.124 128.439 147.083 128.415 147.038 128.4C146.994 128.385 146.946 128.381 146.9 128.387H144.97V129.097C144.974 129.143 144.969 129.189 144.953 129.233C144.938 129.276 144.913 129.316 144.88 129.348C144.848 129.381 144.808 129.406 144.765 129.421C144.722 129.436 144.675 129.442 144.63 129.437H142.97C142.924 129.442 142.877 129.436 142.834 129.421C142.791 129.406 142.751 129.381 142.719 129.348C142.686 129.316 142.661 129.276 142.646 129.233C142.63 129.189 142.625 129.143 142.63 129.097V128.437C142.598 128.119 142.64 127.797 142.753 127.497C142.865 127.198 143.044 126.927 143.276 126.707C143.509 126.487 143.789 126.323 144.094 126.228C144.4 126.133 144.723 126.109 145.04 126.157H147.04C147.377 126.115 147.72 126.151 148.041 126.261C148.363 126.371 148.655 126.553 148.896 126.793C149.137 127.033 149.32 127.325 149.432 127.646C149.543 127.967 149.58 128.31 149.54 128.647V131.767Z" fill="white"/>
<path d="M151.27 128.597C151.226 128.261 151.26 127.919 151.368 127.597C151.477 127.276 151.659 126.984 151.898 126.743C152.138 126.503 152.429 126.32 152.75 126.21C153.071 126.1 153.413 126.065 153.75 126.107H155.68C156.016 126.065 156.358 126.1 156.679 126.21C157 126.32 157.292 126.503 157.531 126.743C157.771 126.984 157.952 127.276 158.061 127.597C158.17 127.919 158.204 128.261 158.16 128.597V137.437C158.202 137.774 158.166 138.115 158.057 138.435C157.947 138.756 157.766 139.047 157.527 139.287C157.288 139.527 156.997 139.71 156.677 139.82C156.357 139.931 156.016 139.968 155.68 139.927H153.75C153.413 139.968 153.072 139.931 152.752 139.82C152.432 139.71 152.142 139.527 151.902 139.287C151.663 139.047 151.482 138.756 151.373 138.435C151.263 138.115 151.228 137.774 151.27 137.437V128.597ZM155.27 137.677C155.363 137.691 155.459 137.682 155.549 137.652C155.639 137.622 155.72 137.572 155.787 137.505C155.854 137.438 155.904 137.356 155.934 137.266C155.964 137.177 155.973 137.081 155.96 136.987V128.987C155.971 128.894 155.961 128.799 155.93 128.711C155.9 128.622 155.849 128.541 155.783 128.475C155.716 128.408 155.635 128.358 155.547 128.327C155.458 128.296 155.363 128.286 155.27 128.297H154.27C154.176 128.286 154.082 128.296 153.993 128.327C153.904 128.358 153.823 128.408 153.757 128.475C153.69 128.541 153.64 128.622 153.609 128.711C153.578 128.799 153.568 128.894 153.58 128.987V136.987C153.566 137.081 153.575 137.177 153.605 137.266C153.635 137.356 153.685 137.438 153.752 137.505C153.819 137.572 153.901 137.622 153.991 137.652C154.08 137.682 154.176 137.691 154.27 137.677H155.27Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M123.8 132.718C123.8 133.024 123.709 133.324 123.538 133.579C123.368 133.834 123.126 134.032 122.843 134.15C122.56 134.267 122.248 134.298 121.947 134.238C121.647 134.178 121.37 134.03 121.154 133.814C120.937 133.597 120.789 133.321 120.729 133.02C120.67 132.719 120.7 132.408 120.818 132.124C120.935 131.841 121.134 131.599 121.389 131.429C121.643 131.258 121.943 131.168 122.25 131.168C122.454 131.166 122.656 131.205 122.844 131.283C123.033 131.36 123.204 131.474 123.349 131.619C123.493 131.763 123.607 131.934 123.684 132.123C123.762 132.311 123.801 132.514 123.8 132.718Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M109.03 50.1172C109.032 50.4246 108.942 50.7256 108.773 50.982C108.603 51.2384 108.361 51.4387 108.077 51.5572C107.794 51.6758 107.481 51.7073 107.18 51.6478C106.878 51.5883 106.601 51.4405 106.384 51.2231C106.166 51.0058 106.018 50.7287 105.959 50.4271C105.899 50.1255 105.931 49.813 106.05 49.5294C106.168 49.2457 106.368 49.0038 106.625 48.8342C106.881 48.6647 107.182 48.5752 107.49 48.5772C107.898 48.5772 108.29 48.7394 108.579 49.0282C108.867 49.317 109.03 49.7087 109.03 50.1172Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M61.3197 45.5271C61.3197 45.8341 61.2285 46.1341 61.0578 46.3893C60.887 46.6444 60.6444 46.843 60.3605 46.96C60.0767 47.077 59.7646 47.1071 59.4636 47.0465C59.1627 46.9859 58.8865 46.8373 58.6702 46.6195C58.4538 46.4017 58.307 46.1246 58.2483 45.8233C58.1896 45.5219 58.2217 45.21 58.3406 44.9269C58.4594 44.6439 58.6597 44.4025 58.9159 44.2334C59.1721 44.0643 59.4728 43.9751 59.7797 43.9771C59.9828 43.9771 60.1839 44.0172 60.3714 44.0952C60.5589 44.1733 60.7291 44.2876 60.8722 44.4317C61.0153 44.5757 61.1286 44.7467 61.2054 44.9347C61.2822 45.1227 61.321 45.324 61.3197 45.5271V45.5271Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M58.2299 141.437C58.2299 141.744 58.139 142.043 57.9687 142.298C57.7983 142.553 57.5563 142.752 57.273 142.869C56.9898 142.987 56.6782 143.017 56.3775 142.957C56.0768 142.898 55.8007 142.75 55.5839 142.533C55.3671 142.316 55.2195 142.04 55.1597 141.74C55.0999 141.439 55.1306 141.127 55.2479 140.844C55.3652 140.561 55.5639 140.319 55.8187 140.148C56.0736 139.978 56.3733 139.887 56.6799 139.887C56.8838 139.886 57.086 139.925 57.2746 140.003C57.4633 140.08 57.6347 140.194 57.7789 140.338C57.9231 140.482 58.0372 140.654 58.1146 140.843C58.192 141.031 58.2312 141.233 58.2299 141.437Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M82.7699 31.3474C82.7699 31.654 82.679 31.9537 82.5087 32.2086C82.3384 32.4635 82.0963 32.6621 81.8131 32.7794C81.5299 32.8967 81.2182 32.9274 80.9175 32.8676C80.6169 32.8078 80.3407 32.6602 80.1239 32.4434C79.9071 32.2267 79.7595 31.9505 79.6997 31.6498C79.6399 31.3491 79.6706 31.0375 79.7879 30.7542C79.9052 30.471 80.1039 30.2289 80.3588 30.0586C80.6137 29.8883 80.9133 29.7974 81.2199 29.7974C81.4238 29.7961 81.626 29.8353 81.8147 29.9127C82.0033 29.9901 82.1747 30.1042 82.3189 30.2484C82.4631 30.3926 82.5772 30.564 82.6546 30.7527C82.7321 30.9413 82.7713 31.1435 82.7699 31.3474V31.3474Z" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M97.0399 119.877C97.0399 120.184 96.9491 120.483 96.7787 120.738C96.6084 120.993 96.3663 121.192 96.0831 121.309C95.7999 121.426 95.4882 121.457 95.1876 121.397C94.8869 121.338 94.6107 121.19 94.3939 120.973C94.1772 120.756 94.0295 120.48 93.9697 120.18C93.9099 119.879 93.9406 119.567 94.0579 119.284C94.1753 119.001 94.3739 118.759 94.6288 118.588C94.8837 118.418 95.1834 118.327 95.49 118.327C95.6939 118.326 95.896 118.365 96.0847 118.442C96.2733 118.52 96.4447 118.634 96.5889 118.778C96.7331 118.922 96.8473 119.094 96.9247 119.282C97.0021 119.471 97.0413 119.673 97.0399 119.877V119.877Z" fill="white"/>
<path d="M73.2498 125.207L70.5198 124.707C69.9337 124.612 69.3428 124.548 68.7498 124.517C68.7182 123.924 68.6547 123.333 68.5598 122.747L68.0598 120.017C67.7598 118.367 67.2797 118.367 66.9697 120.017L66.4797 122.747C66.3749 123.332 66.3114 123.924 66.2897 124.517C65.6967 124.548 65.1059 124.612 64.5198 124.707L61.7897 125.207C60.1397 125.507 60.1397 125.997 61.7897 126.297L64.5198 126.787C65.1059 126.883 65.6967 126.946 66.2897 126.977C66.3108 127.571 66.3743 128.163 66.4797 128.747L66.9697 131.477C67.2797 133.127 67.7598 133.127 68.0598 131.477L68.5598 128.747C68.6553 128.161 68.7187 127.57 68.7498 126.977C69.3428 126.946 69.9337 126.883 70.5198 126.787L73.2498 126.297C74.8998 125.997 74.8998 125.507 73.2498 125.207Z" fill="white"/>
<path d="M102.02 33.8174L99.2897 33.3274C98.7036 33.2319 98.1128 33.1684 97.5198 33.1374C97.4937 32.544 97.4302 31.9528 97.3298 31.3674L96.8298 28.6374C96.5398 26.9874 96.0498 26.9874 95.7398 28.6374L95.2498 31.3674C95.1443 31.9521 95.0809 32.5436 95.0598 33.1374C94.4667 33.1684 93.8758 33.2319 93.2897 33.3274L90.5598 33.8174C88.9098 34.1174 88.9098 34.6174 90.5598 34.9174L93.2897 35.4074C93.8758 35.5029 94.4667 35.5663 95.0598 35.5974C95.0809 36.1912 95.1443 36.7827 95.2498 37.3674L95.7398 40.0974C96.0498 41.7474 96.5398 41.7474 96.8298 40.0974L97.3298 37.3674C97.4302 36.782 97.4937 36.1908 97.5198 35.5974C98.1128 35.5663 98.7036 35.5029 99.2897 35.4074L102.02 34.9174C103.67 34.6174 103.67 34.1174 102.02 33.8174Z" fill="white"/>
<path d="M111.33 139.537L109.49 139.207C109.099 139.144 108.705 139.101 108.31 139.077C108.296 138.681 108.253 138.287 108.18 137.897L107.85 136.057C107.65 134.957 107.32 134.957 107.12 136.057L106.79 137.897C106.717 138.287 106.673 138.681 106.66 139.077C106.265 139.101 105.871 139.144 105.48 139.207L103.65 139.537C102.54 139.737 102.54 140.067 103.65 140.267L105.48 140.597C105.87 140.665 106.264 140.709 106.66 140.727C106.673 141.123 106.717 141.518 106.79 141.907L107.12 143.737C107.32 144.847 107.65 144.847 107.85 143.737L108.18 141.907C108.253 141.518 108.296 141.123 108.31 140.727C108.706 140.709 109.1 140.665 109.49 140.597L111.33 140.267C112.43 140.067 112.43 139.737 111.33 139.537Z" fill="white"/>
<path d="M81.5599 48.8973L79.7299 48.5673C79.3357 48.5037 78.9385 48.4603 78.5399 48.4373C78.5243 48.0419 78.4842 47.6478 78.4199 47.2573L78.1099 45.4373C77.8999 44.3373 77.5699 44.3373 77.3699 45.4373L77.0399 47.2773C76.9755 47.6678 76.9354 48.0619 76.9199 48.4573C76.5212 48.4803 76.1241 48.5237 75.7299 48.5873L73.8999 48.9173C72.7899 49.1173 72.7899 49.4473 73.8999 49.6473L75.7299 49.9773C76.1241 50.0409 76.5212 50.0843 76.9199 50.1073C76.9354 50.5028 76.9755 50.8968 77.0399 51.2873L77.3699 53.1273C77.5699 54.2273 77.8999 54.2273 78.1099 53.1273L78.4399 51.2873C78.5042 50.8968 78.5443 50.5028 78.5599 50.1073C78.9585 50.0843 79.3557 50.0409 79.7499 49.9773L81.5799 49.6473C82.6699 49.4373 82.6699 49.0973 81.5599 48.8973Z" fill="white"/>
<path d="M101.8 160.327C101.44 157.327 98.2797 152.477 95.9797 149.327L94.4997 156.327C94.4997 156.327 93.4297 146.517 91.7797 136.907C91.5797 135.777 91.3097 134.607 91.0497 133.517C90.5997 131.517 90.1697 129.907 90.0497 129.577C89.8897 129.077 89.6997 129.007 89.4597 128.957C88.9523 128.889 88.4415 128.849 87.9297 128.837V128.837C87.4179 128.849 86.9071 128.889 86.3997 128.957C86.1597 129.007 85.9697 129.077 85.8097 129.577C85.7097 129.907 85.2797 131.577 84.8097 133.517C84.5497 134.607 84.2797 135.777 84.0797 136.907C82.4297 146.517 81.3597 156.327 81.3597 156.327L79.8797 149.327C77.5797 152.487 74.4197 157.327 74.0597 160.327C73.6597 163.897 73.6597 166.047 74.4797 166.557C75.0897 166.967 77.8297 167.557 81.0297 167.877C81.0297 168.977 81.0997 169.647 81.0997 169.877C81.0997 170.647 81.4597 170.877 81.8097 170.877C82.1597 170.877 84.6097 170.967 86.6997 170.987C86.7572 171.385 86.894 171.767 87.1019 172.11C87.3097 172.454 87.5844 172.752 87.9097 172.987C88.2397 172.756 88.5183 172.459 88.7283 172.115C88.9382 171.771 89.0748 171.387 89.1297 170.987C91.2297 170.987 93.7197 170.907 94.0197 170.877C94.3197 170.847 94.6797 170.617 94.7297 169.877C94.7297 169.637 94.7297 168.967 94.7997 167.877C97.9997 167.537 100.74 166.967 101.35 166.557C102.2 166.047 102.2 163.897 101.8 160.327Z" fill="#F74444"/>
<path d="M91.4799 160.897C91.4819 161.598 91.2759 162.283 90.8881 162.867C90.5004 163.45 89.9482 163.905 89.3015 164.175C88.6549 164.444 87.9428 164.516 87.2554 164.38C86.5681 164.245 85.9364 163.909 85.4403 163.414C84.9442 162.919 84.6061 162.288 84.4687 161.602C84.3313 160.915 84.4008 160.202 84.6684 159.555C84.9361 158.907 85.3898 158.354 85.9721 157.965C86.5545 157.575 87.2393 157.367 87.9399 157.367C88.4043 157.366 88.8644 157.456 89.2938 157.633C89.7233 157.81 90.1136 158.07 90.4424 158.398C90.7713 158.725 91.0322 159.115 91.2102 159.544C91.3883 159.973 91.4799 160.433 91.4799 160.897V160.897Z" fill="#00273C"/>
<path d="M48.9125 65H50.0565V60.664H51.6085V59.664H47.3525V60.664H48.9125V65ZM53.6967 65H57.4727V64.016H54.8327V62.776H57.4167V61.8H54.8327V60.64H57.4727V59.664H53.6967V65ZM59.5288 65H63.5928V64H61.0168L63.5368 60.576V59.664H59.5288V60.664H62.0488L59.5288 64.08V65ZM65.4498 62.336C65.4498 63.944 66.6258 65.096 68.2338 65.096C69.8498 65.096 71.0258 63.944 71.0258 62.336C71.0258 60.728 69.8498 59.576 68.2338 59.576C66.6258 59.576 65.4498 60.728 65.4498 62.336ZM69.8578 62.336C69.8578 63.328 69.2178 64.088 68.2338 64.088C67.2498 64.088 66.6178 63.328 66.6178 62.336C66.6178 61.336 67.2498 60.584 68.2338 60.584C69.2178 60.584 69.8578 61.336 69.8578 62.336ZM72.815 64.248C73.319 64.752 74.055 65.096 75.079 65.096C76.519 65.096 77.215 64.36 77.215 63.384C77.215 62.2 76.095 61.936 75.215 61.736C74.599 61.592 74.151 61.48 74.151 61.12C74.151 60.8 74.423 60.576 74.935 60.576C75.455 60.576 76.031 60.76 76.463 61.16L77.095 60.328C76.567 59.84 75.863 59.584 75.015 59.584C73.759 59.584 72.991 60.304 72.991 61.192C72.991 62.384 74.111 62.624 74.983 62.824C75.599 62.968 76.063 63.104 76.063 63.504C76.063 63.808 75.759 64.104 75.135 64.104C74.399 64.104 73.815 63.776 73.439 63.384L72.815 64.248ZM86.4827 65H87.7227L85.6667 59.664H84.2427L82.1787 65H83.4267L83.7627 64.08H86.1467L86.4827 65ZM84.9547 60.648L85.8347 63.096H84.0667L84.9547 60.648ZM91.8461 65.096C93.0621 65.096 93.7341 64.448 94.1181 63.784L93.1421 63.312C92.9181 63.752 92.4381 64.088 91.8461 64.088C90.9181 64.088 90.2141 63.344 90.2141 62.336C90.2141 61.328 90.9181 60.584 91.8461 60.584C92.4381 60.584 92.9181 60.928 93.1421 61.36L94.1181 60.88C93.7421 60.216 93.0621 59.576 91.8461 59.576C90.2861 59.576 89.0461 60.696 89.0461 62.336C89.0461 63.976 90.2861 65.096 91.8461 65.096ZM99.8356 65H101.076L99.0196 59.664H97.5956L95.5316 65H96.7796L97.1156 64.08H99.4996L99.8356 65ZM98.3076 60.648L99.1876 63.096H97.4196L98.3076 60.648ZM102.928 65H105.032C106.704 65 107.864 63.944 107.864 62.336C107.864 60.728 106.704 59.664 105.032 59.664H102.928V65ZM104.064 64V60.664H105.032C106.128 60.664 106.704 61.392 106.704 62.336C106.704 63.24 106.088 64 105.032 64H104.064ZM110.03 65H113.806V64.016H111.166V62.776H113.75V61.8H111.166V60.64H113.806V59.664H110.03V65ZM120.695 65H121.839V59.664H120.239L118.943 62.992L117.647 59.664H116.055V65H117.191V61.16L118.695 65H119.191L120.695 61.16V65ZM125.746 65H126.882V62.816L128.922 59.664H127.626L126.314 61.808L124.986 59.664H123.69L125.746 62.816V65Z" fill="white"/>
<path d="M47.1845 106L47.1845 72.544H34.8965V79.264H39.7925L39.7925 106H47.1845ZM52.5785 96.256C52.9145 99.184 54.2585 101.632 56.6105 103.6C58.9625 105.568 61.7465 106.528 64.9625 106.528C68.1785 106.528 70.9145 105.568 73.2665 103.6C75.6185 101.632 77.0105 99.184 77.3465 96.256C77.4425 95.248 77.4905 92.896 77.4905 89.248C77.4905 85.648 77.4425 83.296 77.3465 82.288C77.0105 79.36 75.6185 76.912 73.2665 74.944C70.9145 72.976 68.1785 72.016 64.9625 72.016C61.7465 72.016 58.9625 72.976 56.6105 74.944C54.2585 76.912 52.9145 79.36 52.5785 82.288C52.4825 83.296 52.4345 85.648 52.4345 89.248C52.4345 92.896 52.4825 95.248 52.5785 96.256ZM59.9705 95.44C59.8745 94.672 59.8265 92.608 59.8265 89.248C59.8265 86.032 59.8745 84.064 59.9225 83.296C60.2585 80.656 62.3225 78.736 64.9625 78.736C67.6025 78.736 69.6665 80.656 70.0025 83.296C70.0505 84.064 70.0985 86.032 70.0985 89.248C70.0985 92.608 70.0505 94.672 69.9545 95.44C69.7145 97.984 67.6025 99.808 64.9625 99.808C62.3225 99.808 60.2105 97.984 59.9705 95.44ZM81.3597 96.256C81.6957 99.184 83.0397 101.632 85.3917 103.6C87.7437 105.568 90.5277 106.528 93.7437 106.528C96.9597 106.528 99.6957 105.568 102.048 103.6C104.4 101.632 105.792 99.184 106.128 96.256C106.224 95.248 106.272 92.896 106.272 89.248C106.272 85.648 106.224 83.296 106.128 82.288C105.792 79.36 104.4 76.912 102.048 74.944C99.6957 72.976 96.9597 72.016 93.7437 72.016C90.5277 72.016 87.7437 72.976 85.3917 74.944C83.0397 76.912 81.6957 79.36 81.3597 82.288C81.2637 83.296 81.2157 85.648 81.2157 89.248C81.2157 92.896 81.2637 95.248 81.3597 96.256ZM88.7517 95.44C88.6557 94.672 88.6077 92.608 88.6077 89.248C88.6077 86.032 88.6557 84.064 88.7037 83.296C89.0397 80.656 91.1037 78.736 93.7437 78.736C96.3837 78.736 98.4477 80.656 98.7837 83.296C98.8317 84.064 98.8797 86.032 98.8797 89.248C98.8797 92.608 98.8317 94.672 98.7357 95.44C98.4957 97.984 96.3837 99.808 93.7437 99.808C91.1037 99.808 88.9917 97.984 88.7517 95.44ZM122.381 84.592C123.869 83.152 124.637 81.424 124.637 79.36C124.637 77.296 123.869 75.568 122.381 74.128C120.893 72.688 119.117 71.968 117.005 71.968C114.893 71.968 113.069 72.688 111.581 74.128C110.093 75.568 109.373 77.296 109.373 79.36C109.373 81.424 110.093 83.152 111.581 84.592C113.069 86.032 114.893 86.752 117.005 86.752C119.117 86.752 120.893 86.032 122.381 84.592ZM118.253 106L141.053 72.544H134.525L111.725 106H118.253ZM117.005 81.904C115.661 81.904 114.653 80.848 114.653 79.36C114.653 77.968 115.661 76.816 117.005 76.816C118.301 76.816 119.357 77.968 119.357 79.36C119.357 80.752 118.301 81.904 117.005 81.904ZM130.445 104.416C131.933 105.856 133.757 106.576 135.869 106.576C137.981 106.576 139.757 105.856 141.245 104.416C142.733 102.976 143.453 101.248 143.453 99.184C143.453 97.12 142.733 95.392 141.245 93.952C139.757 92.512 137.981 91.792 135.869 91.792C133.757 91.792 131.933 92.512 130.445 93.952C128.957 95.392 128.189 97.12 128.189 99.184C128.189 101.248 128.957 102.976 130.445 104.416ZM133.469 99.184C133.469 97.792 134.525 96.64 135.869 96.64C137.165 96.64 138.221 97.792 138.221 99.184C138.221 100.576 137.165 101.728 135.869 101.728C134.477 101.728 133.469 100.672 133.469 99.184Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/icons/check.svg ---
<svg width="24" height="24" viewBox="0 0 24 24" fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path d="M23.5 0.5L9 18.5L4 13.5" stroke="#00c08b" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M18.273 12.494C18.421 13.139 18.5 13.81 18.5 14.5C18.5 19.471 14.469 23.5 9.5 23.5C4.527 23.5 0.5 19.471 0.5 14.5C0.5 9.529 4.527 5.5 9.5 5.5C10.936 5.5 12.293 5.836 13.5 6.436" stroke="#00c08b" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

'''
'''--- src/frontend/public/icons/close.svg ---
<?xml version="1.0" encoding="UTF-8"?>
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Generator: Sketch 59.1 (86144) - https://sketch.com -->
    <title>close</title>
    <desc>Created with Sketch.</desc>
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="close">
            <g id="Outline_Icons_1_" stroke="#878787" stroke-linecap="round" stroke-linejoin="round">
                <g id="Outline_Icons">
                    <g id="Group">
                        <line x1="0.5" y1="0.5" x2="23.5" y2="23.5" id="Path"></line>
                        <line x1="23.5" y1="0.5" x2="0.5" y2="23.5" id="Path"></line>
                    </g>
                </g>
            </g>
            <g id="Invisible_Shape">
                <rect id="Rectangle" x="0" y="0" width="24" height="24"></rect>
            </g>
        </g>
    </g>
</svg>
'''
'''--- src/frontend/public/icons/contribute2earn.svg ---
<svg width="39" height="36" viewBox="0 0 39 36" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M29.4656 21.7661L22.9687 18.7675V16.0603C22.273 15.705 21.6397 15.2383 21.0937 14.6785V18.7581L15.0656 21.5781V14.3495C15.1785 14.3435 15.2895 14.3181 15.3937 14.2743L19.5937 12.3379C19.36 11.7344 19.2087 11.102 19.1437 10.4579L15 12.3379L10.2187 10.1759L15 7.96692L19.1062 9.84692V9.77172C19.1063 9.13652 19.1915 8.50421 19.3594 7.89172L15.375 6.08693C15.2516 6.02966 15.1172 6 14.9812 6C14.8453 6 14.7109 6.02966 14.5875 6.08693L7.55625 9.32992C7.39352 9.40543 7.2558 9.52615 7.15942 9.67777C7.06304 9.82938 7.01205 10.0055 7.0125 10.1853V18.7769L0.543753 21.7661C0.381021 21.8416 0.243302 21.9623 0.146925 22.1139C0.0505489 22.2656 -0.000440835 22.4417 2.87131e-06 22.6215V31.8147C-0.000440835 31.9945 0.0505489 32.1706 0.146925 32.3222C0.243302 32.4738 0.381021 32.5946 0.543753 32.6701L7.575 35.9131C7.69841 35.9703 7.83276 36 7.96875 36C8.10473 36 8.23909 35.9703 8.3625 35.9131L15 32.8487L21.6375 35.9131C21.7609 35.9703 21.8953 36 22.0312 36C22.1672 36 22.3016 35.9703 22.425 35.9131L29.4562 32.6701C29.619 32.5946 29.7567 32.4738 29.8531 32.3222C29.9494 32.1706 30.0004 31.9945 30 31.8147V22.6215C30.0013 22.4427 29.9517 22.2673 29.857 22.1158C29.7624 21.9643 29.6266 21.843 29.4656 21.7661ZM3.21563 22.6215L8.00625 20.4031L12.7969 22.6121L7.96875 24.8117L3.21563 22.6215ZM7.96875 34.0237V26.7951C8.09924 26.7852 8.22659 26.7501 8.34375 26.6917L14.0437 24.0597V31.2037L7.96875 34.0237ZM17.25 22.6215L22.0406 20.4125L26.8312 22.6215L22.0406 24.8117L17.25 22.6215ZM22.0687 34.0237V26.7951C22.1873 26.7851 22.3024 26.7499 22.4062 26.6917L28.1062 24.0597V31.2037L22.0687 34.0237Z" fill="#22C55E"/>
<path d="M28.3999 20C33.6466 20 37.8999 15.7467 37.8999 10.5C37.8999 5.25329 33.6466 1 28.3999 1C23.1532 1 18.8999 5.25329 18.8999 10.5C18.8999 15.7467 23.1532 20 28.3999 20Z" fill="#22C55E" stroke="white" stroke-width="2"/>
<path d="M31.1119 6.46L29.234 9.25C29.1041 9.44 29.3538 9.67 29.5336 9.51L31.3816 7.9C31.4315 7.86 31.5015 7.89 31.5015 7.96V12.99C31.5015 13.06 31.4116 13.09 31.3716 13.04L25.7778 6.34C25.598 6.12 25.3383 6 25.0486 6H24.8488C24.3294 6 23.8999 6.43 23.8999 6.96V14.04C23.8999 14.57 24.3294 15 24.8588 15C25.1885 15 25.4981 14.83 25.6779 14.54L27.5558 11.75C27.6857 11.56 27.436 11.33 27.2562 11.49L25.4082 13.09C25.3583 13.13 25.2884 13.1 25.2884 13.03V8.01C25.2884 7.94 25.3783 7.91 25.4182 7.96L31.012 14.66C31.1918 14.88 31.4615 15 31.7412 15H31.941C32.4704 15 32.8999 14.57 32.8999 14.04V6.96C32.8899 6.43 32.4604 6 31.931 6C31.6013 6 31.2917 6.17 31.1119 6.46Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/icons/dog.svg ---
<svg width="42" height="40" viewBox="0 0 42 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.0183 7.54324C15.6511 4.96373 22.3456 2.58015 23.4559 3.39645C23.8151 3.82093 21.6925 5.87802 20.6801 6.92288C19.8964 7.70653 19.2433 8.68606 18.6881 9.66562L14.0183 7.54324Z" fill="#FBBC7F"/>
<path d="M15.4878 7.41269C16.7941 5.29029 21.8557 3.26583 22.6395 3.85358C22.9007 4.1801 21.2026 5.74742 20.4189 6.59638C19.8311 7.24943 19.0473 8.03306 18.6228 8.84937L15.4878 7.41269Z" fill="#F5A8AE"/>
<path d="M17.8064 6.40048C18.3616 5.94335 19.2433 5.323 19.8964 4.96383C20.8761 4.40874 22.7048 3.85365 22.7048 3.85365C21.9211 3.29857 16.7941 5.29034 15.5531 7.41272L16.3369 7.77188C16.6961 7.2168 17.2513 6.7923 17.8064 6.40048Z" fill="#FEDBA9"/>
<path d="M7.94418 7.77192C8.532 4.76792 13.9857 0.229239 15.2593 0.523109C15.7818 0.784326 14.4755 3.49446 13.9204 4.76789C13.4632 5.78011 13.1692 6.95562 13.006 8.0658L7.94418 7.77192Z" fill="#FBBC7F"/>
<path d="M9.28314 7.11876C9.74033 4.66987 13.7571 0.980203 14.7368 1.24142C15.096 1.46998 14.051 3.49438 13.6264 4.5719C13.2999 5.3882 12.8427 6.43306 12.7121 7.31467L9.28314 7.11876Z" fill="#F5A8AE"/>
<path d="M11.1119 5.35576C11.4711 4.70272 12.0916 3.8211 12.5488 3.26601C13.2999 2.4497 14.8021 1.24158 14.7694 1.24158C13.7897 1.01301 9.77299 4.70272 9.3158 7.119L10.1975 7.15164C10.3608 6.53125 10.7853 5.97616 11.1119 5.35576Z" fill="#FEDBA9"/>
<path d="M38.1512 22.4C39.5881 22.1388 40.6985 21.4204 41.4822 19.5266C42.2333 21.0613 41.9068 23.7387 40.1433 24.6203C39.6208 24.1632 38.8044 23.249 38.4778 22.6286L38.1512 22.4Z" fill="#FBBC7F"/>
<path d="M29.6933 32.1303C29.3341 33.3384 31.1301 36.2118 31.8812 37.224C32.1425 37.5832 30.8036 37.3547 30.7383 38.922C31.8486 38.9546 32.0772 38.9546 33.1548 38.9546C33.9712 37.42 34.6896 33.8609 34.6896 32.0977H29.6933V32.1303Z" fill="#FBBC7F"/>
<path d="M29.6933 32.1303C29.3341 33.3384 31.1301 36.2118 31.8812 37.224C32.1425 37.5832 30.8036 37.3547 30.7383 38.922C31.8486 38.9546 32.0772 38.9546 33.1548 38.9546C33.9712 37.42 34.6896 33.8609 34.6896 32.0977H29.6933V32.1303Z" fill="#FBBC7F"/>
<path d="M18.0676 32.1303C17.7084 33.3384 19.5045 36.2118 20.2556 37.224C20.5169 37.5832 19.178 37.3547 19.1127 38.922C20.223 38.9546 20.4516 38.9546 21.5292 38.9546C22.3456 37.42 23.064 33.8609 23.064 32.0977H18.0676V32.1303Z" fill="#FBBC7F"/>
<path d="M13.0059 32.1303C12.6467 33.3384 14.4428 36.2118 15.1939 37.224C15.4552 37.5832 14.1163 37.3547 14.051 38.922C15.1613 38.9546 15.3899 38.9546 16.4675 38.9546C17.2839 37.42 18.0023 33.8609 18.0023 32.0977H13.0059V32.1303Z" fill="#FBBC7F"/>
<path d="M34.4611 29.257C32.7956 32.1631 35.4408 36.3425 36.2245 37.3548C36.4858 37.7139 35.4081 37.3874 35.3102 38.9874C36.4205 39.02 36.6817 39.02 37.7594 39.02C39.0003 37.4527 40.7311 30.8896 40.6332 28.3428L34.4611 29.257Z" fill="#FBBC7F"/>
<path d="M10.6873 30.6937C16.2716 33.8283 23.162 33.6977 27.6033 33.5018C30.0852 33.4038 36.8124 34.4813 39.2942 31.6406C41.0577 29.7141 41.3843 24.7837 39.3269 22.498C37.2043 20.1471 34.0039 19.9512 31.1955 19.2002C28.5177 18.4492 24.1744 18.841 22.6069 16.4247C21.3659 14.4983 20.125 10.6127 18.2963 8.9474C15.1613 6.04136 9.21782 5.29038 5.85423 9.20863C4.64594 10.58 4.74389 12.3432 3.50295 13.6167C2.42529 14.6942 0.465908 14.7268 0.26997 15.7064C-0.187218 18.2532 4.71123 19.3961 5.62561 21.0287C6.70327 22.7919 9.02186 29.7794 10.6873 30.6937Z" fill="#FFB359"/>
<path d="M19.9618 29.8773C19.9618 28.1794 19.4393 26.4162 18.5249 25.0775C17.5126 23.6081 15.9777 22.6286 15.0633 21.0939C14.3122 19.7552 14.2796 18.3511 14.051 16.8818C13.8224 15.5104 13.5285 13.5839 11.4058 13.9104C10.0669 14.139 8.92395 15.2165 7.71566 15.7716C5.82159 16.5879 2.68657 16.6532 0.923127 15.4125C0.89047 15.3798 0.825189 15.3145 0.792533 15.2818C0.661908 15.4777 0.367985 15.641 0.367985 15.9349C0.106734 18.4817 2.71923 20.5715 4.35204 21.4204C6.11549 22.4 6.14817 27.2978 10.2629 31.5426C11.8304 33.1752 15.0307 34.7425 17.9044 34.9058C18.3616 34.9384 19.3413 32.9793 19.4719 32.5875C19.8312 31.7712 19.9618 30.7916 19.9618 29.8773Z" fill="#FEDBA9"/>
<path d="M4.5807 16.0981C4.8093 16.9797 3.27441 17.894 2.88253 18.1225C2.32737 18.449 2.00083 18.4817 1.44567 18.0899C0.988474 17.7307 -0.0891973 16.294 0.302683 15.6084C0.923161 14.5309 4.38476 15.4125 4.5807 16.0981Z" fill="#4A403E"/>
<path d="M9.74028 13.4207C9.70763 13.4207 9.60969 13.3881 9.60969 13.3228C9.51172 12.9963 9.34841 12.8003 9.08717 12.7677C8.85858 12.735 8.5647 12.8004 8.33611 13.0289C8.30346 13.0616 8.20547 13.0616 8.1075 13.0289C8.07484 12.9963 8.07484 12.8983 8.1075 12.8004C8.36874 12.5391 8.7933 12.3759 9.11986 12.4412C9.44641 12.5391 9.70763 12.7677 9.87091 13.1922C9.90357 13.2901 9.87091 13.3881 9.74028 13.4207C9.80559 13.4207 9.80559 13.4207 9.74028 13.4207Z" fill="#945E3C"/>
<path d="M6.50737 12.7677C6.47472 12.7677 6.37674 12.735 6.37674 12.6697C6.27877 12.3432 6.1155 12.1473 5.85425 12.1146C5.593 12.082 5.33173 12.1473 5.10314 12.3758C5.07048 12.4085 4.97253 12.4085 4.87456 12.3758C4.8419 12.3432 4.8419 12.2453 4.87456 12.1473C5.13581 11.8861 5.56033 11.7228 5.8869 11.7881C6.21346 11.886 6.47469 12.1146 6.63797 12.5391C6.67062 12.6371 6.638 12.735 6.50737 12.7677Z" fill="#945E3C"/>
<path d="M3.82954 20.3105C3.69891 20.3105 3.60095 20.3104 3.47033 20.2778C3.04579 20.1472 2.78452 19.8207 2.71921 19.2982C2.71921 19.2003 2.75187 19.1676 2.84984 19.1023C2.94781 19.1023 2.98046 19.135 3.04577 19.233C3.07843 19.5921 3.2744 19.886 3.56831 19.9839C3.92753 20.1145 4.45001 19.9513 4.6786 19.6574C4.80923 19.5268 4.90722 19.233 4.77659 18.9064C4.74393 18.8085 4.77658 18.7105 4.80924 18.7105C4.90721 18.6779 5.00517 18.7105 5.00517 18.7432C5.20111 19.1024 5.13583 19.5268 4.87458 19.8207C4.67864 20.1145 4.25408 20.3105 3.82954 20.3105Z" fill="#945E3C"/>
<path opacity="0.3" d="M2.58859 15.5103C2.71922 15.543 3.37232 15.7062 3.17638 15.9348C3.04576 16.1307 2.42531 16.0327 2.26203 16.0327C1.93547 16.0001 1.60891 15.9348 1.28234 15.9021C1.05375 15.8695 0.629201 15.6736 1.02108 15.543C1.24967 15.445 1.47826 15.5103 1.70685 15.5103C2.06607 15.4124 2.36 15.445 2.58859 15.5103Z" fill="#BEC0C2"/>
</svg>

'''
'''--- src/frontend/public/icons/error.svg ---

<svg width="4px" height="25px" viewBox="0 0 4 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="location-pin-exclamation-2" transform="translate(-9.000000, 0.000000)">
            <g id="Outline_Icons" transform="translate(10.000000, 0.000000)" stroke="#FFFFFF" stroke-linejoin="round">
                <g id="Group">
                    <line x1="1.2" y1="15.6" x2="1.2" y2="1.2" id="Path" stroke-linecap="round"></line>
                    <path d="M2.4,22.8 C2.4,23.4648 1.8624,24 1.2,24 L1.2,24 C0.5376,24 0,23.4648 0,22.8 L0,22.8 C0,22.1376 0.5376,21.6 1.2,21.6 L1.2,21.6 C1.8624,21.6 2.4,22.1376 2.4,22.8 L2.4,22.8 Z" id="Path"></path>
                </g>
            </g>
            <g id="invisible_shape">
                <rect id="Rectangle" x="0" y="0" width="24" height="24"></rect>
            </g>
        </g>
    </g>
</svg>
'''
'''--- src/frontend/public/icons/input-error.svg ---
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<!-- Generator: Adobe Illustrator 16.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
    <g id="Outline_Icons_1_">
        <g id="Outline_Icons">
            <g>
                <circle fill="none" stroke="#ED1D25" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="12" cy="12" r="11.5"></circle>
                <line fill="none" stroke="#ED1D25" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="7.5" y1="7.5" x2="16.5" y2="16.5"></line>
                <line fill="none" stroke="#ED1D25" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="16.5" y1="7.5" x2="7.5" y2="16.5"></line>
            </g>
        </g>
        <g id="New_icons_1_"></g>
    </g>
    <g id="Invisible_Shape">
        <rect fill="none" width="24" height="24"></rect>
    </g>
</svg>
'''
'''--- src/frontend/public/icons/input-success.svg ---
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<!-- Generator: Adobe Illustrator 16.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
    <g id="Outline_Icons_1_">
        <g id="Outline_Icons">
            <g>
                <polyline fill="none" stroke="#00CD6B" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="17,8.5      9.5,15.5 7,13    "></polyline>
                <circle fill="none" stroke="#00CD6B" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="12" cy="12" r="11.5"></circle>
            </g>
        </g>
        <g id="New_icons_1_"></g>
    </g>
    <g id="Invisible_Shape">
        <rect fill="none" width="24" height="24"></rect>
    </g>
</svg>
'''
'''--- src/frontend/public/icons/learn2earn.svg ---
<svg width="36" height="35" viewBox="0 0 36 35" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.97207 5.27491C5.8584 4.27209 1.69267 6.20979 0.495984 7.91566C-0.0371401 8.67901 0.000579635 9.22911 0.000579635 9.54121V26.2381L15.6223 35L18.5599 33.5542V17.2935L2.52056 8.99264C3.38127 8.01621 5.31701 6.82556 6.76848 7.30376L21.0549 14.1912L21.055 32.3057L24 30.8573V12.7432L7.97207 5.27491Z" fill="#FC6322"/>
<path d="M25.5 20C30.7467 20 35 15.7467 35 10.5C35 5.25329 30.7467 1 25.5 1C20.2533 1 16 5.25329 16 10.5C16 15.7467 20.2533 20 25.5 20Z" fill="#FC6322" stroke="white" stroke-width="2"/>
<path d="M28.212 6.46L26.3341 9.25C26.2042 9.44 26.4539 9.67 26.6337 9.51L28.4817 7.9C28.5316 7.86 28.6016 7.89 28.6016 7.96V12.99C28.6016 13.06 28.5117 13.09 28.4717 13.04L22.8779 6.34C22.6981 6.12 22.4384 6 22.1487 6H21.9489C21.4295 6 21 6.43 21 6.96V14.04C21 14.57 21.4295 15 21.9589 15C22.2886 15 22.5982 14.83 22.778 14.54L24.6559 11.75C24.7858 11.56 24.5361 11.33 24.3563 11.49L22.5083 13.09C22.4584 13.13 22.3885 13.1 22.3885 13.03V8.01C22.3885 7.94 22.4784 7.91 22.5183 7.96L28.1121 14.66C28.2919 14.88 28.5616 15 28.8413 15H29.0411C29.5705 15 30 14.57 30 14.04V6.96C29.99 6.43 29.5605 6 29.0311 6C28.7014 6 28.3918 6.17 28.212 6.46Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/icons/nft_certificates.svg ---
<svg width="28" height="32" viewBox="0 0 28 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M28 8.10159C28.0004 8.0775 27.9943 8.05372 27.9825 8.03266C27.9706 8.0116 27.9534 7.99399 27.9324 7.98159L14.0689 0.0189997C14.0476 0.00656211 14.0234 -6.10938e-07 13.9986 -6.12019e-07C13.9739 -6.13099e-07 13.9497 0.00656211 13.9284 0.0189997L0.0688931 8.07092C-0.0229629 8.12425 -0.0229629 8.25759 0.0688931 8.31092L13.9311 16.2735C13.9526 16.2855 13.977 16.2916 14.0017 16.2912C14.0264 16.2907 14.0506 16.2837 14.0716 16.2708L27.9324 8.22159C27.9534 8.20919 27.9706 8.19158 27.9825 8.17052C27.9943 8.14945 28.0004 8.12568 28 8.10159ZM28 11.9189C28.0001 11.8948 27.9938 11.8711 27.9817 11.8501C27.9696 11.8292 27.9521 11.8118 27.9311 11.7996C27.91 11.7875 27.886 11.781 27.8616 11.7809C27.8372 11.7807 27.8132 11.787 27.792 11.7989L15.6791 18.7135C15.6576 18.7256 15.6396 18.743 15.6271 18.7641C15.6145 18.7851 15.6078 18.8091 15.6075 18.8335L15.6075 22.9894C15.6075 23.0961 15.7263 23.1628 15.8196 23.1094L27.9311 16.1948C27.9522 16.1825 27.9696 16.1649 27.9817 16.1439C27.9938 16.1228 28.0001 16.099 28 16.0748L28 11.9202L28 11.9189ZM28 19.7735C28 19.7494 27.9936 19.7258 27.9815 19.705C27.9693 19.6842 27.9517 19.667 27.9306 19.6551C27.9094 19.6431 27.8855 19.637 27.8611 19.6371C27.8368 19.6373 27.8129 19.6439 27.792 19.6561L14.0013 27.5414L0.210729 19.6561C0.189782 19.6439 0.165921 19.6373 0.141576 19.6371C0.117229 19.637 0.0932628 19.6431 0.0721236 19.6551C0.0509826 19.667 0.0334235 19.6842 0.0212298 19.705C0.00903425 19.7258 0.00263891 19.7494 0.00269994 19.7735L0.00269976 23.9374C0.00236406 23.9612 0.00845041 23.9845 0.0203218 24.0052C0.032195 24.0258 0.0494279 24.0429 0.0702428 24.0548L13.9324 31.9814C13.9533 31.9936 13.9771 32 14.0013 32C14.0256 32 14.0494 31.9936 14.0702 31.9814L27.9311 24.0548C27.9522 24.0431 27.9697 24.026 27.9818 24.0054C27.9939 23.9848 28.0002 23.9613 28 23.9374L28 19.7735ZM12.1953 18.7202C12.1956 18.6959 12.1892 18.6721 12.1768 18.6512C12.1645 18.6303 12.1466 18.6131 12.125 18.6015L0.210729 11.8002C0.117523 11.7469 0.00270029 11.8136 0.00270028 11.9202L0.0027001 16.0762C0.0024388 16.1002 0.00852896 16.124 0.0203717 16.145C0.0322144 16.166 0.0494015 16.1837 0.0702431 16.1962L11.9846 22.9961C12.0058 23.0084 12.03 23.0149 12.0546 23.0149C12.0792 23.0149 12.1034 23.0085 12.1247 22.9963C12.146 22.9841 12.1636 22.9666 12.1758 22.9455C12.1879 22.9243 12.1942 22.9004 12.1939 22.8761L12.1939 18.7188L12.1953 18.7202Z" fill="#818CF8"/>
</svg>

'''
'''--- src/frontend/public/icons/rocket.svg ---
<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path d="M5.38672 11.6241C5.38672 11.6241 14.5076 2.47829 15.0976 1.88913C15.9809 1.00579 19.5167 0.416626 19.5167 0.416626C19.5167 0.416626 18.9276 3.95163 18.0426 4.83579C16.8651 6.01413 8.32005 14.5583 8.32005 14.5583L5.38672 11.6241Z" stroke="white" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M6.5625 10.4382L9.5 13.3799" stroke="white" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M12.7398 10.14C12.7398 10.7292 12.7398 13.085 12.4448 13.9692C12.2582 14.5292 11.6698 15.3333 11.2657 15.7375C10.1048 16.8983 8.31982 18.6833 8.31982 18.6833L8.86566 14.0125" stroke="white" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M9.79333 7.19328C9.205 7.19328 6.8225 7.16828 5.93917 7.46244C5.38 7.64994 4.59917 8.26244 4.19583 8.66578C3.03417 9.82744 1.25 11.6124 1.25 11.6124L5.95083 11.0383" stroke="white" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M6.55262 14.5583C7.14262 15.1474 6.89679 15.9824 6.25762 16.6216C5.44429 17.4349 1.54346 18.4016 1.54346 18.4016C1.54346 18.4016 2.49846 14.4891 3.31179 13.6749C3.95929 13.0283 4.78596 12.7908 5.37512 13.3799" stroke="white" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
<clipPath id="clip0">
<rect width="20" height="20" fill="white"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/frontend/public/icons/sprites.svg ---
<!-- "display: none" ensures the SVG doesn't take up space even though it's not being shown because of the use of symbol -->
<svg xmlns="http://www.w3.org/2000/svg" style="display:none;">
    <symbol id="login" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <g>
                <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="1.5" y1="12.5" x2="16.5" y2="12.5"></line>
                <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="      12.5,8.5 16.5,12.5 12.5,16.5     "></polyline>
            </g>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M2.482,7.951     C4.213,4.146,8.048,1.5,12.5,1.5c6.075,0,11,4.925,11,11s-4.925,11-11,11c-4.473,0-8.322-2.669-10.042-6.502"></path>
        </g>
        <g id="Invisible_SHape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="sign-up" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="     20.5,10.5 23.5,7.5 20.5,4.5    "></polyline>
            <circle fill="none" stroke-linejoin="round" stroke-miterlimit="10" cx="6.5" cy="4" r="3.5"></circle>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M12,9.5H1c0,4.069,1.547,6.442,3.5,7.5     v6.5h4V17C10.451,15.942,12,13.569,12,9.5z"></path>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14.5" y1="7.5" x2="23.5" y2="7.5"></line>
        </g>
        <g id="Invisible_SHape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="plus-card" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <rect x="3.5" y="0.5" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" width="20" height="20"></rect>
            <polygon fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="20.5,8.5      15.5,8.5 15.5,3.5 11.5,3.5 11.5,8.5 6.5,8.5 6.5,12.5 11.5,12.5 11.5,17.5 15.5,17.5 15.5,12.5 20.5,12.5    "></polygon>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="3.5,4.5      0.5,4.5 0.5,23.5 19.5,23.5 19.5,20.5    "></polyline>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="cards" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <rect x="3.5" y="0.5" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" width="20" height="20"></rect>
            <polyline fill="none" stroke-linejoin="round" stroke-miterlimit="10" points="21,16.5 18,8.5 14,14.5      11.5,11.5 8.5,16.5    "></polyline>
            <circle fill="none" stroke-linejoin="round" stroke-miterlimit="10" cx="10" cy="6" r="1.5"></circle>
            <line fill="none" stroke-linejoin="round" stroke-miterlimit="10" x1="23.5" y1="16.5" x2="3.5" y2="16.5"></line>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="3.5,4.5      0.5,4.5 0.5,23.5 19.5,23.5 19.5,20.5    "></polyline>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="user" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M12,23.5h11.5c0,0,0-2.057-1-4.057     c-0.746-1.492-4-2.5-8-4v-3c0,0,1.5-1,1.5-3c0.5,0,1-2,0-2.5c0-0.298,1.339-2.802,1-4.5c-0.5-2.5-7.5-2.5-8-0.5c-3,0-1,4.594-1,5     c-1,0.5-0.5,2.5,0,2.5c0,2,1.5,3,1.5,3v3c-4,1.5-7.255,2.508-8,4c-1,2-1,4.057-1,4.057H12z"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="password" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="12" cy="12" r="11.5"></circle>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M15.5,9     c0-1.934-1.567-3.5-3.5-3.5c-1.934,0-3.5,1.566-3.5,3.5c0,1.387,0.808,2.582,1.977,3.148L9.5,18.5h5l-0.978-6.352     C14.691,11.582,15.5,10.387,15.5,9z"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="log-out" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="9.5,2.5      17.5,2.5 17.5,5    "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="17.5,20      17.5,21.5 9.5,21.5    "></polyline>
            <polygon fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="0.5,21.5      9.5,23.5 9.5,0.5 0.5,2.5    "></polygon>
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="6" cy="12.5" r="1.5"></circle>
            <g>
                <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="12" y1="12.508" x2="23.5" y2="12.508"></line>
                <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="      19.5,8.5 23.5,12.5 19.5,16.5     "></polyline>
            </g>
        </g>
        <g id="Invisible_SHape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="circle">
        <circle fill="none" cx="8" cy="8" r="7.5"></circle>
    </symbol>
    <symbol id="check-shield" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="     17.501,7 10.001,14 7.501,11.5    "></polyline>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M2.5,0.5h19v7.264     c0,6.603-3.659,12.661-9.5,15.736c-5.844-3.075-9.5-9.133-9.5-15.736V0.5z"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="user" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M12,23.5h11.5c0,0,0-2.057-1-4.057     c-0.746-1.492-4-2.5-8-4v-3c0,0,1.5-1,1.5-3c0.5,0,1-2,0-2.5c0-0.298,1.339-2.802,1-4.5c-0.5-2.5-7.5-2.5-8-0.5c-3,0-1,4.594-1,5     c-1,0.5-0.5,2.5,0,2.5c0,2,1.5,3,1.5,3v3c-4,1.5-7.255,2.508-8,4c-1,2-1,4.057-1,4.057H12z"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="alarm" viewBox="0 0 24 24">
        <g id="Outline_Icons_1_">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M20.5,16.5V11     c0-3.651-2.309-6.756-5.541-7.959C14.738,1.603,13.5,0.5,12,0.5S9.258,1.603,9.037,3.041C5.805,4.244,3.5,7.349,3.5,11v5.5     c0,1.657-1.344,3-3,3h23C21.841,19.5,20.5,18.157,20.5,16.5z"></path>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M15,19.5     c0,1.657-1.344,3-3,3c-1.659,0-3-1.343-3-3"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="nova-log-out" viewBox="0 0 24 24">
        <g id="Frame_-_24px">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
        <g id="Filled_Icons">
            <path stroke="none" d="M18,2H7C5.897,2,5,2.898,5,4v7h7.59l-2.297-2.292l1.413-1.416l4.708,4.699l-4.706,4.715l-1.416-1.412   L12.582,13H5v7c0,1.103,0.897,2,2,2h11c1.103,0,2-0.897,2-2V4C20,2.898,19.103,2,18,2z"></path>
        </g>
    </symbol>
    <symbol id="email" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M22.5,17     c0,0.828-0.672,1.5-1.5,1.5H3c-0.828,0-1.5-0.672-1.5-1.5V6c0-0.829,0.672-1.5,1.5-1.5h18c0.828,0,1.5,0.671,1.5,1.5V17z"></path>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="22,5      12,13 2,5    "></polyline>
        </g>
        <g id="invisible_shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="globe" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="12" cy="12" r="11.5"></circle>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M20.5,4.255    C20.5,4.255,20,7,18,8c-2-0.5-4,1-3.5,1s1,2,1,2c0.5,0.5,1.5,0,1.5,0c1.25,1.25-2,3.5-2,4s1.25,0.75,0.5,1.5s-1.5,1-1.5,1    c0,2.5-2.5,2.5-3,2.5s-1.5-2-1.5-2.5s0.5-1,0.5-1.5s-1-1.5-1-1.5c0-2-1.5-1.5-3-1.5s-1.5-2-1.5-2s0-3.5,2.5-4s2.5,0.5,2.5,0.5    c1,1,3,0,4,0c0,0,0.5-3.5-0.5-3s-1.896,0.114-2-1C10.854,1.938,15.363,1,15.363,1"></path>
        </g>
        <g id="invisible_shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="news" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="5" cy="21.5" r="2"></circle>
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="19" cy="21.5" r="2"></circle>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="7" y1="21.511" x2="17" y2="21.511"></line>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    7.5,12.511 6,12.511 4.5,15.5   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="3,21.511     0.5,21.511 0.5,17 2.5,15 5,10.511 9.5,10.511 9.5,19.5   "></polyline>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="0.5" y1="19.511" x2="23.5" y2="19.511"></line>
            <rect x="9.5" y="8.511" fill="none" stroke-linejoin="round" stroke-miterlimit="10" width="14" height="11"></rect>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M19.891,5.392    c-1.35,1.35-3.52,1.35-4.87,0l4.87-4.871C21.241,1.871,21.241,4.041,19.891,5.392z"></path>
            <polygon fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    19.891,5.392 22.5,8.511 17.631,8.511   "></polygon>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="17.442" y1="2.979" x2="15.63" y2="1.168"></line>
            <g>
                <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="     17.373,11.389 18.818,16.5 20.264,11.389    "></polyline>
                <g>
                    <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14.5" y1="16.5" x2="14.5" y2="11.511"></line>
                    <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="13" y1="11.511" x2="16" y2="11.511"></line>
                </g>
            </g>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="sport" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <g>
                <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M12,0.503     c-6.351,0-11.5,5.149-11.5,11.5s5.149,11.5,11.5,11.5s11.5-5.149,11.5-11.5S18.35,0.503,12,0.503L12,0.503z"></path>
            </g>
            <polygon fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    8.854,16.862 6.9,10.831 12.013,7.104 17.126,10.831 15.173,16.862   "></polygon>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    16.369,1.396 12.013,3.257 7.658,1.396   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    3.323,4.556 3.741,9.287 0.63,12.867   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    2.288,17.981 6.901,19.044 9.335,23.117   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    14.694,23.117 17.126,19.042 21.738,17.979   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="    23.396,12.866 20.284,9.284 20.702,4.556   "></polyline>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="12.013" y1="3.257" x2="12.013" y2="7.104"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="17.126" y1="10.98" x2="20.284" y2="9.284"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="15.173" y1="16.862" x2="17.126" y2="19.042"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="8.854" y1="16.862" x2="6.901" y2="19.044"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="3.741" y1="9.287" x2="6.9" y2="10.831"></line>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="games" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M18.915,22.086    C18.137,22.863,16.601,23.5,15.5,23.5h-10c-1.101,0-2-0.9-2-2v-19c0-1.1,0.899-2,2-2h13c1.101,0,2,0.9,2,2v16    c0,1.1-0.636,2.637-1.414,3.414L18.915,22.086z"></path>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M17.5,10.5    c0,0.551-0.449,1-1,1h-9c-0.55,0-1-0.449-1-1v-6c0-0.549,0.45-1,1-1h9c0.551,0,1,0.451,1,1V10.5z"></path>
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="18" cy="15" r="0.5"></circle>
            <circle fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="15" cy="16.5" r="0.5"></circle>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="9.5" y1="16.5" x2="5.5" y2="16.5"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="7.5" y1="14.5" x2="7.5" y2="18.5"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="12.5" y1="21" x2="13.5" y2="20.5"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="9.5" y1="21" x2="10.5" y2="20.5"></line>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="misc" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <g>
                <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M0.5,14.5V17c0,0.824,0.175,1.5,1,1.5v5      h3v-5c0.824,0,0.999-0.677,1-1.5v-2.5H0.5z"></path>
                <circle fill="none" stroke-linejoin="round" stroke-miterlimit="10" cx="3" cy="11" r="1.5"></circle>
            </g>
            <g>
                <polygon fill="none" stroke-linejoin="round" stroke-miterlimit="10" points="8.5,10.5 11.5,10.5 11.5,14       15,10.5 23.5,10.5 23.5,0.5 8.5,0.5     "></polygon>
            </g>
            <g>
                <g>
                    <g>
                        <path d="M14.5,7.777c-0.274,0-0.494,0.221-0.494,0.494c0,0.272,0.22,0.494,0.494,0.494c0.272,0,0.494-0.222,0.494-0.494        C14.994,7.998,14.772,7.777,14.5,7.777L14.5,7.777z"></path>
                    </g>
                </g>
            </g>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M13.018,4.019     c0-0.818,0.664-1.482,1.482-1.482s1.482,0.664,1.482,1.482S15.318,5.5,14.5,5.5v1"></path>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="18" y1="2.5" x2="18" y2="6.5"></line>
            <g>
                <g>
                    <g>
                        <path d="M18,8c-0.302,0-0.545,0.245-0.545,0.546S17.698,9.092,18,9.092c0.301,0,0.545-0.245,0.545-0.546S18.301,8,18,8L18,8z"></path>
                    </g>
                </g>
            </g>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="search" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <circle fill="none" stroke-linejoin="round" stroke-miterlimit="10" cx="8.5" cy="8.5" r="8"></circle>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="14.156" y1="14.156" x2="23.5" y2="23.5"></line>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="empty-user" viewBox="0 0 28 28">
        <g id="Outline_Icons">
            <path fill="none" d="M2.37564 7.28867L14 0.57735L25.6244 7.28867V20.7113L14 27.4227L2.37564 20.7113V7.28867Z" />
            <path fill="none" d="M22.2546 21.8354C20.9538 20.926 18.4132 20.1306 15.8478 19.1684V16.5792C15.8478 16.5792 17.4013 16.0613 17.4013 13.4721C18.2568 13.4721 18.2568 11.4007 17.4013 11.4007C17.4013 11.1459 18.2786 9.21333 17.9192 7.77578C17.4013 5.70439 11.705 5.70439 11.1872 7.77578C8.59791 7.25793 10.1515 11.0538 10.1515 11.4007C9.29597 11.4007 9.29597 13.4721 10.1515 13.4721C10.1515 16.0613 11.705 16.5792 11.705 16.5792V19.1684C9.40264 20.0395 6.68705 20.8949 5.30957 21.8478" stroke-miterlimit="10" stroke-linejoin="round"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="28" height="28"></rect>
        </g>
    </symbol>
    <symbol id="separator" viewBox="0 0 1 20">
        <rect width="1" height="20"/>
    </symbol>
    <symbol id="pen" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M7.294,21.675     l-6.466,1.517l1.517-6.465l15.6-15.602c0.781-0.781,2.049-0.781,2.829,0l2.122,2.122c0.78,0.781,0.78,2.047,0,2.829L7.294,21.675     z"></path>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="22.191" y1="6.784" x2="17.238" y2="1.832"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="20.764" y1="8.211" x2="15.824" y2="3.246"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="7.546" y1="21.424" x2="2.596" y2="16.474"></line>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="left-triangle" width="50" height="50" viewBox="0 0 50 50">
        <g id="Outline_Icons">
            <path d="M50 0H0L50 50V0Z" fill="#161729"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="50" height="50"></rect>
        </g>
    </symbol>
    <symbol id="right-triangle" width="50" height="50" viewBox="0 0 50 50">
        <g id="Outline_Icons">
            <path d="M0 0H50L0 50V0Z" fill="#161729"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="50" height="50"></rect>
        </g>
    </symbol>
    <symbol id="squares" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path d="M6.7826 0.521729H0.521729V6.7826H6.7826V0.521729Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M15.2609 0.521729H9V6.7826H15.2609V0.521729Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.4783 0.521729H17.2174V6.7826H23.4783V0.521729Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M15.1304 8.86957H8.86951V15.1304H15.1304V8.86957Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M6.7826 8.86957H0.521729V15.1304H6.7826V8.86957Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.4783 8.86957H17.2174V15.1304H23.4783V8.86957Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M15.1304 17H8.86951V23.2609H15.1304V17Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M6.7826 17H0.521729V23.2609H6.7826V17Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.4783 17H17.2174V23.2609H23.4783V17Z" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="karma" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path d="M10.1338 12C11.8222 10.5833 13.0385 9.09077 13.934 7.51733C14.8313 5.94045 15.4064 4.2823 15.8112 2.53766" fill="none" stroke-linejoin="round"/>
            <path d="M10.1338 12C11.8222 13.4167 13.0385 14.9092 13.934 16.4827C14.8313 18.0595 15.4064 19.7177 15.8112 21.4623" fill="none" stroke-linejoin="round"/>
            <path d="M10.1339 21.4624V2.53766" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M12.0264 1L21.5527 6.5V17.5L12.0264 23L2.50012 17.5V6.5L12.0264 1Z" fill="none"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="people" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M0.5,9.5v3c0,0.825,0.175,1.5,1,1.5v4.5h3     V14c0.824,0,0.999-0.676,1-1.5v-3H0.5z"></path>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M18.5,9.5v3c0,0.825,0.175,1.5,1,1.5v4.5     h3V14c0.824,0,0.999-0.676,1-1.5v-3H18.5z"></path>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M8.5,9.5h7v5c0,1.1-0.9,2-2,2v6h-3v-6     c-1.101,0-2-0.9-2-2V9.5z"></path>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M4.5,6c0,0.828-0.672,1.5-1.5,1.5l0,0     C2.172,7.5,1.5,6.828,1.5,6l0,0c0-0.828,0.672-1.5,1.5-1.5l0,0C3.828,4.5,4.5,5.172,4.5,6L4.5,6z"></path>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M22.5,6c0,0.828-0.672,1.5-1.5,1.5l0,0     c-0.828,0-1.5-0.672-1.5-1.5l0,0c0-0.828,0.672-1.5,1.5-1.5l0,0C21.828,4.5,22.5,5.172,22.5,6L22.5,6z"></path>
            <path fill="none" stroke-linejoin="round" stroke-miterlimit="10" d="M14.5,5c0,1.381-1.119,2.5-2.5,2.5l0,0     c-1.381,0-2.5-1.119-2.5-2.5l0,0c0-1.381,1.119-2.5,2.5-2.5l0,0C13.381,2.5,14.5,3.619,14.5,5L14.5,5z"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="comments" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path d="M14.5 1.50009H4.5C2.291 1.50009 0.5 3.29109 0.5 5.50009V9.50009C0.5 11.7101 2.291 13.5001 4.5 13.5001H5.5V17.5001L10 13.5001H14.5C16.709 13.5001 18.5 11.7101 18.5 9.50009V5.50009C18.5 3.29109 16.709 1.50009 14.5 1.50009Z" fill="none" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M11.5 17.0001C11.5 18.3811 12.619 19.5001 14 19.5001H16.5L19.5 22.5001V19.5001H21C22.381 19.5001 23.5 18.3811 23.5 17.0001V15.0001C23.5 13.6191 22.381 12.5001 21 12.5001" fill="none" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="home" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="3.5,13.5     3.5,23.5 9.5,23.5 9.5,16.5 14.5,16.5 14.5,23.5 20.5,23.5 20.5,14   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="0.5,13     12,1.5 23.5,13   "></polyline>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="16,2.5     19.5,2.5 19.5,6   "></polyline>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="list" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <rect y="3.3" width="24" height="1.33333" fill="white"/>
            <rect y="8.63333" width="17.3333" height="1.33333" fill="white"/>
            <rect y="13.9667" width="24" height="1.33333" fill="white"/>
            <rect y="19.3" width="17.3333" height="1.33333" fill="white"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="heart" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path d="M12 22C12 22 24 14 24 8.07399C24 1.23598 14.1818 -0.926029 12 7.39199C9.81818 -0.926029 0 1.23598 0 8.07399C0 14 12 22 12 22Z" fill="white"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="hamburger" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path d="M25.0645 6.25H1.06445" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M25.0645 12.6684H1.06445" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M25.0645 19.0868H1.06445" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="left-arrow" width="9" height="14" viewBox="0 0 9 14" fill="none" stroke="none">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M6.97267 0L0.000165422 6.9725L0.0275826 6.99992L0 7.0275L6.9725 14L8.52194 12.4506L3.07147 7.00008L8.52211 1.54944L6.97267 0Z" fill="white"/>
    </symbol>
    <symbol id="right-arrow" width="9" height="15" viewBox="0 0 9 15" fill="none" stroke="none">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M1.80606 14.7781L8.77856 7.80558L8.75121 7.77823L8.77881 7.75064L1.80631 0.778138L0.256864 2.32758L5.70726 7.77798L0.256614 13.2286L1.80606 14.7781Z" fill="white"/>
    </symbol>
    <symbol id="download" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M22.5,17.718     v1.913c0,1.584-1.285,2.869-2.869,2.869H3.369c-1.585,0-2.869-1.285-2.869-2.869v-1.913"></path>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="11.5" y1="17.608" x2="11.5" y2="0.5"></line>
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="     18.5,10.608 11.5,17.608 4.5,10.608    "></polyline>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="link" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M12.354,16.596     l-3.183,3.182c-1.171,1.172-3.071,1.172-4.243,0l-0.707-0.707C3.051,17.9,3.051,16,4.222,14.83l4.597-4.597     c1.172-1.172,3.071-1.172,4.243,0l0.707,0.708"></path>
            <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" d="M11.647,7.403     l3.182-3.181c1.172-1.171,3.07-1.171,4.242,0l0.707,0.707C20.95,6.1,20.95,8,19.778,9.171l-4.596,4.596     c-1.172,1.173-3.071,1.173-4.242,0"></path>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="close" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="0.5" y1="0.5" x2="23.5" y2="23.5"></line>
            <line fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" x1="23.5" y1="0.5" x2="0.5" y2="23.5"></line>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="check" viewBox="0 0 24 24">
        <g id="Outline_Icons">
            <polyline fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="     23.5,0.5 7,23.5 0.5,17    "></polyline>
        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="XXXX" viewBox="0 0 24 24">
        <g id="Outline_Icons">

        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="XXXX" viewBox="0 0 24 24">
        <g id="Outline_Icons">

        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
    <symbol id="XXXX" viewBox="0 0 24 24">
        <g id="Outline_Icons">

        </g>
        <g id="Invisible_Shape">
            <rect fill="none" stroke="none" width="24" height="24"></rect>
        </g>
    </symbol>
</svg>
'''
'''--- src/frontend/public/icons/success.svg ---

<svg width="25px" height="18px" viewBox="0 0 25 18" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="check-circle-2" transform="translate(1.000000, -3.000000)">
            <g id="Outline_Icons_1_" transform="translate(0.000000, 3.000000)" stroke="#FFFFFF" stroke-linecap="round" stroke-linejoin="round">
                <g id="Outline_Icons">
                    <g id="Group">
                        <polyline id="Path" points="24 0.5 6 17.3 0 11.3"></polyline>
                    </g>
                </g>
            </g>
            <g id="Invisible_Shape">
                <rect id="Rectangle" x="0" y="0" width="24" height="24"></rect>
            </g>
        </g>
    </g>
</svg>
'''
'''--- src/frontend/public/images/Account/logout.svg ---
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18.6667 6.66667L16.7867 8.54667L18.8933 10.6667H8V13.3333H18.8933L16.7867 15.44L18.6667 17.3333L24 12L18.6667 6.66667ZM2.66667 2.66667H12V0H2.66667C1.2 0 0 1.2 0 2.66667V21.3333C0 22.8 1.2 24 2.66667 24H12V21.3333H2.66667V2.66667Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/images/Account/profile.svg ---
<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13 25.9999C11.0345 26.0055 9.09381 25.5608 7.32683 24.7C6.68016 24.3854 6.06056 24.018 5.47434 23.6015L5.29624 23.4715C3.68404 22.2814 2.36593 20.7378 1.44306 18.9592C0.48852 17.1182 -0.00655475 15.0737 6.55322e-05 13C6.55322e-05 5.82009 5.82014 0 13 0C20.1799 0 25.9999 5.82009 25.9999 13C26.0065 15.0727 25.5119 17.1163 24.5582 18.9566C23.6367 20.7342 22.3204 22.2773 20.7103 23.4676C20.1032 23.9122 19.4584 24.3035 18.7837 24.6376L18.6797 24.6896C16.9116 25.555 14.9685 26.0033 13 25.9999ZM13 19.5C12.0446 19.4981 11.1072 19.7602 10.2912 20.2573C9.47526 20.7544 8.81246 21.4672 8.37592 22.3171C9.81339 23.0291 11.3959 23.3995 13 23.3995C14.6041 23.3995 16.1866 23.0291 17.6241 22.3171V22.3106C17.187 21.4616 16.5239 20.7499 15.7079 20.2539C14.892 19.7579 13.9549 19.497 13 19.5ZM13 16.9C14.3834 16.9015 15.7416 17.2701 16.9361 17.968C18.1305 18.666 19.1184 19.6683 19.799 20.8728L19.8172 20.8559L19.8354 20.8403L19.8133 20.8598L19.8003 20.8702C21.4056 19.4832 22.5484 17.6385 23.0754 15.5835C23.6023 13.5284 23.4881 11.3614 22.7482 9.37312C22.0083 7.38483 20.678 5.67039 18.9358 4.4598C17.1936 3.24922 15.1228 2.6004 13.0013 2.6004C10.8798 2.6004 8.80904 3.24922 7.06684 4.4598C5.32464 5.67039 3.99433 7.38483 3.25441 9.37312C2.51448 11.3614 2.40032 13.5284 2.92724 15.5835C3.45417 17.6385 4.59697 19.4832 6.20233 20.8702C6.88332 19.6663 7.87139 18.6646 9.06578 17.9671C10.2602 17.2696 11.6182 16.9014 13.0013 16.9H13ZM13 15.6C11.6209 15.6 10.2982 15.0521 9.32306 14.0769C8.34788 13.1017 7.80003 11.7791 7.80003 10.4C7.80003 9.02086 8.34788 7.69822 9.32306 6.72303C10.2982 5.74784 11.6209 5.19999 13 5.19999C14.3791 5.19999 15.7018 5.74784 16.6769 6.72303C17.6521 7.69822 18.2 9.02086 18.2 10.4C18.2 11.7791 17.6521 13.1017 16.6769 14.0769C15.7018 15.0521 14.3791 15.6 13 15.6ZM13 7.79998C12.3104 7.79998 11.6491 8.07391 11.1615 8.56151C10.6739 9.0491 10.4 9.71042 10.4 10.4C10.4 11.0895 10.6739 11.7509 11.1615 12.2385C11.6491 12.726 12.3104 13 13 13C13.6896 13 14.3509 12.726 14.8385 12.2385C15.3261 11.7509 15.6 11.0895 15.6 10.4C15.6 9.71042 15.3261 9.0491 14.8385 8.56151C14.3509 8.07391 13.6896 7.79998 13 7.79998Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/images/chapter/check.svg ---
<svg width="17" height="13" viewBox="0 0 17 13" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M6.66712 12.5003L0 5.50015L1.90451 3.5005L6.66846 8.49818L6.66712 8.4996L14.5951 0L16.4996 1.99965L8.57162 10.5007L6.66846 12.4989L6.66712 12.5003Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/images/chapter/check_disabled.svg ---
<svg width="17" height="13" viewBox="0 0 17 13" fill="none" xmlns="http://www.w3.org/2000/svg">
<path opacity="0.2" d="M6.66712 12.5003L0 5.50015L1.90451 3.5005L6.66846 8.49818L6.66712 8.4996L14.5951 0L16.4996 1.99965L8.57162 10.5007L6.66846 12.4989L6.66712 12.5003Z" fill="#071C43"/>
</svg>

'''
'''--- src/frontend/public/images/chapter/checked.svg ---
<svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M6.66712 16L0 8.99982L1.90451 7.00018L6.66846 11.9979L6.66712 11.9993L18.0955 0L20 1.99965L8.57162 14.0004L6.66846 15.9986L6.66712 16Z" fill="#22C55E"/>
</svg>

'''
'''--- src/frontend/public/images/header/logo-white.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 891 162"><defs><style>.cls-1{fill:#fff;}</style></defs><path class="cls-1" d="M443.7,90.21H416.82l-7.2,17.68a.78.78,0,0,1-.71.47h-2.79a.76.76,0,0,1-.7-1l21.88-53a.77.77,0,0,1,.7-.47h4.52a.76.76,0,0,1,.7.47l21.89,53a.77.77,0,0,1-.71,1h-2.79a.75.75,0,0,1-.7-.47Zm-1.64-3.89L430.22,57.57,418.46,86.32Z"/><path class="cls-1" d="M471.51,81.1c0-16.21,12-28.12,28-28.12A26.58,26.58,0,0,1,524.7,69.54a.76.76,0,0,1-.71,1h-2.85a.76.76,0,0,1-.68-.44A22.9,22.9,0,0,0,499.4,57C486,57,475.64,67.39,475.64,81.1S486,105.24,499.4,105.24a22.88,22.88,0,0,0,21.06-13.19.76.76,0,0,1,.68-.44H524a.77.77,0,0,1,.71,1,26.59,26.59,0,0,1-25.15,16.57C483.51,109.22,471.51,97.3,471.51,81.1Z"/><path class="cls-1" d="M580.1,90.21H553.23L546,107.89a.76.76,0,0,1-.7.47h-2.8a.76.76,0,0,1-.7-1L563.9,53.83h5.53l22.08,53.48a.76.76,0,0,1-.7,1H588a.75.75,0,0,1-.7-.47Zm-1.63-3.89L566.63,57.57,554.86,86.32Z"/><path class="cls-1" d="M659.4,81.1c0,16-12.23,27.26-28,27.26H614.36a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h17.08C647.33,53.83,659.4,65.05,659.4,81.1Zm-4.13,0c0-13.63-10.36-23.29-23.68-23.29H617.73v46.58h13.86C644.91,104.39,655.2,94.81,655.27,81.1Z"/><path class="cls-1" d="M687.29,57.81v20.4h27A.76.76,0,0,1,715,79v2.46a.76.76,0,0,1-.76.76h-27v22.2h28.76a.76.76,0,0,1,.76.76v2.45a.76.76,0,0,1-.76.76H683.16V53.83h32.89a.76.76,0,0,1,.76.76v2.46a.76.76,0,0,1-.76.76Z"/><path class="cls-1" d="M787.86,54.59v53a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76V58.66L763.55,89h-.46L743,58.66V107.6a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h4.29a.77.77,0,0,1,.63.34L763.4,82.34l18.7-28.17a.77.77,0,0,1,.64-.34h4.36A.76.76,0,0,1,787.86,54.59Z"/><path class="cls-1" d="M834.29,88V107.6a.76.76,0,0,1-.76.76h-2.69a.76.76,0,0,1-.76-.76V88.11L810.21,55a.76.76,0,0,1,.65-1.15h3a.76.76,0,0,1,.65.37l17.7,29.23L849.88,54.2a.76.76,0,0,1,.65-.37h3a.77.77,0,0,1,.65,1.16Z"/><path class="cls-1" d="M207.21,54.75v52.5a.76.76,0,0,1-.75.75H201a7.49,7.49,0,0,1-6.3-3.43l-24.78-38.3.85,19.13v21.85a.76.76,0,0,1-.75.75h-7.22a.76.76,0,0,1-.75-.75V54.75a.76.76,0,0,1,.75-.75h5.43a7.52,7.52,0,0,1,6.3,3.42l24.78,38.24-.77-19.06V54.75a.75.75,0,0,1,.75-.75h7.22A.76.76,0,0,1,207.21,54.75Z"/><path class="cls-1" d="M281,108h-7.64a.75.75,0,0,1-.7-1L292.9,54.72A1.14,1.14,0,0,1,294,54h9.57a1.14,1.14,0,0,1,1.05.72L324.8,107a.75.75,0,0,1-.7,1h-7.64a.76.76,0,0,1-.71-.48l-16.31-43a.75.75,0,0,0-1.41,0l-16.31,43A.76.76,0,0,1,281,108Z"/><path class="cls-1" d="M377.84,106.79,362.66,87.4c8.57-1.62,13.58-7.4,13.58-16.27,0-10.19-6.63-17.13-18.36-17.13H336.71a1.12,1.12,0,0,0-1.12,1.13h0a7.2,7.2,0,0,0,7.2,7.2H357c7.09,0,10.49,3.63,10.49,8.87s-3.32,9-10.49,9H336.71a1.13,1.13,0,0,0-1.12,1.13v26a.75.75,0,0,0,.75.75h7.22a.76.76,0,0,0,.75-.75V87.87h8.33l13.17,17.19a7.51,7.51,0,0,0,6,2.94h5.48A.75.75,0,0,0,377.84,106.79Z"/><path class="cls-1" d="M258.17,54h-33.5a1,1,0,0,0-1,1h0A7.33,7.33,0,0,0,231,62.33h27.17a.74.74,0,0,0,.75-.75V54.75A.75.75,0,0,0,258.17,54Zm0,45.67h-25a.76.76,0,0,1-.75-.75V85.38a.75.75,0,0,1,.75-.75h23.11a.75.75,0,0,0,.75-.75V77a.75.75,0,0,0-.75-.75H224.79a1.13,1.13,0,0,0-1.12,1.13v29.46a1.12,1.12,0,0,0,1.12,1.12h33.38a.75.75,0,0,0,.75-.75v-6.83A.74.74,0,0,0,258.17,99.67Z"/><path class="cls-1" d="M108.24,40.57,89.42,68.5a2,2,0,0,0,3,2.63l18.52-16a.74.74,0,0,1,1.24.56v50.29a.75.75,0,0,1-1.32.48l-56-67A9.59,9.59,0,0,0,47.54,36H45.59A9.59,9.59,0,0,0,36,45.59v70.82A9.59,9.59,0,0,0,45.59,126h0a9.59,9.59,0,0,0,8.17-4.57L72.58,93.5a2,2,0,0,0-3-2.63l-18.52,16a.74.74,0,0,1-1.24-.56V56.07a.75.75,0,0,1,1.32-.48l56,67a9.59,9.59,0,0,0,7.33,3.4h2a9.59,9.59,0,0,0,9.59-9.59V45.59A9.59,9.59,0,0,0,116.41,36h0A9.59,9.59,0,0,0,108.24,40.57Z"/></svg>
'''
'''--- src/frontend/public/images/header/logo.svg ---
<svg width="179" height="17" viewBox="0 0 179 17" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.0734 1.18862V16.3066C13.0734 16.4218 12.987 16.537 12.8431 16.537H11.2593C10.5394 16.537 9.84828 16.1626 9.44513 15.5579L2.30369 4.52897L2.53406 10.029V16.3354C2.53406 16.4506 2.44767 16.5658 2.30369 16.5658H0.230368C0.115183 16.5658 0 16.4794 0 16.3354V1.18862C0 1.07344 0.0863871 0.958252 0.230368 0.958252H1.78536C2.50526 0.958252 3.19637 1.3326 3.59952 1.93732L10.741 12.9374L10.5106 7.43738V1.18862C10.5106 1.07344 10.597 0.958252 10.741 0.958252H12.8143C12.9871 0.958252 13.0734 1.04464 13.0734 1.18862Z" fill="#0A172F"/>
<path d="M31.547 16.5082H29.3585C29.2145 16.5082 29.0993 16.3642 29.1569 16.2202L34.9737 1.15983C35.0313 1.04464 35.1465 0.958252 35.2617 0.958252H38.0261C38.1701 0.958252 38.2853 1.04464 38.314 1.15983L44.1597 16.2202C44.2173 16.3642 44.1021 16.5082 43.9581 16.5082H41.7696C41.6832 16.5082 41.5968 16.4506 41.568 16.3642L36.8742 3.98185C36.8167 3.80907 36.5287 3.80907 36.4711 3.98185L31.7773 16.3642C31.7197 16.4506 31.6333 16.5082 31.547 16.5082Z" fill="#0A172F"/>
<path d="M58.6002 16.1626L54.2232 10.5762C56.6996 10.1154 58.1394 8.44525 58.1394 5.88239C58.1394 2.94518 56.2389 0.958252 52.8409 0.958252H46.7362C46.5634 0.958252 46.4194 1.10223 46.4194 1.27501C46.4194 2.42685 47.3409 3.34833 48.4927 3.34833H52.6106C54.6551 3.34833 55.6342 4.38499 55.6342 5.91119C55.6342 7.43738 54.6839 8.47404 52.6106 8.47404H46.7938C46.621 8.47404 46.477 8.61802 46.477 8.7908V16.2778C46.477 16.393 46.5634 16.5082 46.7074 16.5082H48.7807C48.8959 16.5082 49.0111 16.4218 49.0111 16.2778V10.7201H51.4011L55.2022 15.6731C55.6054 16.2202 56.2389 16.5082 56.93 16.5082H58.5138C58.629 16.5082 58.7154 16.3066 58.6002 16.1626Z" fill="#0A172F"/>
<path d="M26.7516 0.958252H17.1049C16.9321 0.958252 16.8169 1.07344 16.8169 1.24621C16.8169 2.39806 17.7672 3.34833 18.919 3.34833H26.7516C26.8668 3.34833 26.9819 3.26194 26.9819 3.11796V1.15983C26.9531 1.04464 26.8668 0.958252 26.7516 0.958252ZM26.7516 14.1181H19.5525C19.4374 14.1181 19.3222 14.0317 19.3222 13.8877V10.0002C19.3222 9.88505 19.4086 9.76987 19.5525 9.76987H26.2044C26.3196 9.76987 26.4348 9.68348 26.4348 9.5395V7.58136C26.4348 7.46618 26.3484 7.35099 26.2044 7.35099H17.1337C16.9609 7.35099 16.8169 7.49497 16.8169 7.66775V16.1626C16.8169 16.3354 16.9609 16.4794 17.1337 16.4794H26.7516C26.8668 16.4794 26.9819 16.393 26.9819 16.249V14.2909C26.9531 14.2045 26.8668 14.1181 26.7516 14.1181Z" fill="#0A172F"/>
<path d="M77.2951 13.758H71.4858L70.5545 16.5075H66.5856L72.2175 0.942033H76.6078L82.2397 16.5075H78.2264L77.2951 13.758ZM76.3195 10.8312L74.3905 5.13273L72.4836 10.8312H76.3195Z" fill="#0A172F"/>
<path d="M83.3108 8.70259C83.3108 7.16526 83.6434 5.79792 84.3086 4.60058C84.9738 3.38846 85.8976 2.4498 87.0802 1.78461C88.2775 1.10463 89.6301 0.764648 91.1379 0.764648C92.9856 0.764648 94.5673 1.25245 95.8829 2.22807C97.1985 3.20368 98.078 4.53406 98.5215 6.21921H94.3529C94.0425 5.5688 93.5991 5.07361 93.0226 4.73362C92.4608 4.39363 91.8178 4.22364 91.0935 4.22364C89.9257 4.22364 88.9797 4.63015 88.2554 5.44316C87.531 6.25617 87.1689 7.34264 87.1689 8.70259C87.1689 10.0625 87.531 11.149 88.2554 11.962C88.9797 12.775 89.9257 13.1815 91.0935 13.1815C91.8178 13.1815 92.4608 13.0115 93.0226 12.6716C93.5991 12.3316 94.0425 11.8364 94.3529 11.186H98.5215C98.078 12.8711 97.1985 14.2015 95.8829 15.1771C94.5673 16.1379 92.9856 16.6184 91.1379 16.6184C89.6301 16.6184 88.2775 16.2858 87.0802 15.6206C85.8976 14.9406 84.9738 14.0019 84.3086 12.8046C83.6434 11.6073 83.3108 10.2399 83.3108 8.70259Z" fill="#0A172F"/>
<path d="M110.533 13.758H104.724L103.792 16.5075H99.8234L105.455 0.942033H109.846L115.478 16.5075H111.464L110.533 13.758ZM109.557 10.8312L107.628 5.13273L105.721 10.8312H109.557Z" fill="#0A172F"/>
<path d="M123.023 0.942033C124.664 0.942033 126.098 1.26724 127.325 1.91764C128.552 2.56805 129.498 3.48454 130.163 4.6671C130.843 5.83488 131.183 7.18743 131.183 8.72476C131.183 10.2473 130.843 11.5999 130.163 12.7824C129.498 13.965 128.544 14.8815 127.303 15.5319C126.076 16.1823 124.649 16.5075 123.023 16.5075H117.192V0.942033H123.023ZM122.779 13.2259C124.213 13.2259 125.329 12.8342 126.127 12.0507C126.926 11.2673 127.325 10.1586 127.325 8.72476C127.325 7.29091 126.926 6.17486 126.127 5.37664C125.329 4.57841 124.213 4.17929 122.779 4.17929H120.983V13.2259H122.779Z" fill="#0A172F"/>
<path d="M137.093 3.97974V7.12831H142.171V10.0551H137.093V13.4698H142.836V16.5075H133.302V0.942033H142.836V3.97974H137.093Z" fill="#0A172F"/>
<path d="M162.925 0.942033V16.5075H159.134V7.17265L155.653 16.5075H152.593L149.089 7.15048V16.5075H145.298V0.942033H149.777L154.145 11.7181L158.468 0.942033H162.925Z" fill="#0A172F"/>
<path d="M179 0.942033L173.612 11.3634V16.5075H169.82V11.3634L164.432 0.942033H168.734L171.749 7.4609L174.743 0.942033H179Z" fill="#0A172F"/>
</svg>

'''
'''--- src/frontend/public/images/museum_exterior_1.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 5000 3609.1" style="enable-background:new 0 0 5000 3609.1;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#0072CE;}
	.st1{fill:#5698D8;}
	.st2{fill:url(#SVGID_1_);}
	.st3{fill:#B6D2F6;}
	.st4{fill:url(#SVGID_2_);}
	.st5{fill:#65A6DB;}
	.st6{fill:#7FB2E5;}
	.st7{fill:#8FC1EA;}
	.st8{fill:#A2CEED;}
	.st9{fill:#C5E1FF;}
	.st10{fill:#FFFFFF;}
	.st11{fill:url(#SVGID_3_);}
	.st12{fill:url(#SVGID_4_);}
	.st13{fill:#014AA8;}
	.st14{fill:#4E96D1;}
	.st15{fill:#2886C6;}
	.st16{fill:#3E8CCC;}
	.st17{fill:#348BD1;}
	.st18{fill:#3A8ACC;}
	.st19{fill:#388ACE;}
	.st20{fill:#3064D8;}
	.st21{fill:#D9E8FB;}
	.st22{fill:#6BA8DB;}
	.st23{fill:url(#SVGID_5_);}
	.st24{fill:url(#SVGID_6_);}
	.st25{fill:url(#SVGID_7_);}
</style>
<g id="white_background">
</g>
<g>
	<rect x="2400.5" y="930.8" class="st0" width="1031.2" height="417"/>
	<path class="st1" d="M2354.4,994.7h680.3c-76.3-142.1-151.4-279.8-231-424.8c-39-71-84-151.9-164.5-243.8
		c-47.4-54.1-91.9-94.7-124.2-121.9c-26.7-17.5-57.7-30-88.6-23.4c-97.9,21-127.1,219.2-154.3,403.7C2248,748,2261.3,820.9,2285,880
		C2305.7,931.5,2333.3,969.7,2354.4,994.7z"/>
	
		<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="25960.0781" y1="-5001.6738" x2="26663.0547" y2="-5001.6738" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#7BBBF3"/>
	</linearGradient>
	<path class="st2" d="M2293.1,881.1c7.2,23.3,16.9,37.7,29.7,47.3c14.9,11.2,33.3,15.6,47.3,18.9c13.1,3.1,24.3,4.4,32.3,4.9
		c131.2-0.7,262.3-1.4,393.5-2.1c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2
		c-6.8-4.6-27.2-18.2-56.8-28.4c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7
		c-13.8,30.3-31.2,73-46,125.7c-4.9,17.7-9,37.7-12.9,62.9c-6,38.7-11.6,89.3-19.6,161.5C2283.4,698.5,2271.6,811.5,2293.1,881.1z"
		/>
	<path class="st0" d="M2304.6,522.3c15.1-65.3,57-112.4,106.1-119.6c38.7-5.7,71,15,85.2,24.3c59.9,39.6,289.4,503.1,300,523.2
		c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2c-6.8-4.6-27.2-18.2-56.8-28.4
		c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7c-13.8,30.3-31.2,73-46,125.7
		C2312.5,477.1,2308.5,497.2,2304.6,522.3z"/>
	<path class="st3" d="M3829.9,710.8c19.2,10.8,36.1,28.9,36.1,28.9c36.3,38.8,43.7,85.6,49.1,119.1c3.4,21.6,6.9,57.6,0,101.4
		c-4.9,31-11.5,73.3-42.6,115.6c-24.5,33.3-54.4,53.2-77,64.9c-14.2,4.7-28.4,9.5-42.6,14.2c-152.6-2-305.3-4-457.9-6
		C3342.7,1097.2,3746.7,663.9,3829.9,710.8z"/>
	<path class="st0" d="M3416.3,1144.7c46.4,0.9,94.5,0.9,143.9,0c53.8-1,105.9-3.1,156.1-6.1c18-2.5,52.3-9.9,87.2-34.5
		c7.9-5.6,40.1-29.2,62.9-73c33.4-64.4,23-127.1,16.2-168.3c-5.7-34.3-14.4-52.3-26.4-77c-13.1-27-21.4-34.7-30.4-38.5
		c-10.2-4.3-23.1-4.7-50.7,6.1c-21.2,8.3-53.2,24-87.2,54.7C3597.4,920.3,3506.9,1032.5,3416.3,1144.7z"/>
	
		<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="25201.6895" y1="-4659.8975" x2="25599.9668" y2="-4659.8975" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#7BBBF3"/>
	</linearGradient>
	<path class="st4" d="M3508.2,1122.1l93-7.4c83.7-6.7,146.7-80.6,140-164.3l0,0c-6.7-83.7-80.6-146.7-164.3-140l-93,7.4
		c-83.7,6.7-146.7,80.6-140,164.3l0,0C3350.6,1065.8,3424.5,1128.8,3508.2,1122.1z"/>
	<path class="st3" d="M3035.2,1014.9c-211.3,0-422.6,0-633.9,0c-5.9-0.7-14.4-2-24.3-4.1c-15.3-3.2-37.5-7.8-55.4-17.6
		c-23.9-13-36.3-33.2-43.3-44.6c-37.8-61.6-33.7-189-32.4-221.7c3.2-84.2,7.8-85.5,31.1-301.4c0.9-8.5,4.1-37.8,13.5-75.7
		c11.1-44.4,20.6-81.2,48.7-117.6c15.1-19.6,36.5-47.4,74.3-58.1c32.2-9.1,59.7-1.2,82.4,5.4c13.4,3.9,52.4,17.1,96,56.8
		c91.8,83.6,153.3,239.2,163.5,265.6c6.9,18.9,13.8,37.8,20.7,56.7c-32.9-53.6-58.9-96.3-75.5-123.6c-32.3-53.2-45.6-76.8-71-109.5
		c-30.8-39.7-49.6-63.5-83.1-87.2c-38.4-27.1-66.5-33.1-85.2-34.5c-8.9-0.7-20.6-1.6-34.5,2c-18,4.7-42.4,17.6-71,64.9
		c-21.7,36-34.6,73.4-48.7,143.9c-11.8,59-17.4,106.4-20.3,133.8c-13.3,125.3,0.3,117.7-6.2,249.2c-0.6,11.7-2.3,45.3,12.2,83.3
		c5.6,14.7,12.7,32.4,29.7,47.3c27.4,23.9,61.6,23.8,72.7,23.2c195.9-0.8,391.8-1.6,587.7-2.5
		C3000.6,971.1,3017.9,993,3035.2,1014.9z"/>
	<path class="st1" d="M2650.1,303c1.1,2.3,2.5,5,4.1,8.1c3.8,7.5,8.7,17.4,14.9,29.6c31.6,62.8,94,186.9,180.9,358.9
		c116.7,230.9,177.5,347.6,298.8,408.6c27.6,13.9,90.2,44.4,174.4,40.6c28.6-1.3,88.5-7.9,150-44.6c54.4-32.4,83.4-72.4,133.8-141.9
		c64.1-88.4,93.3-137.9,93.3-137.9c11.1-18.8,22.3-39.1,44.6-60.8c29.7-29,62.1-44.3,85.2-52.7c-17.5-1.7-43.3-3.9-74.8-5.2
		c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5
		c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57
		c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4c-3.2-2.5-6.4-4.9-9.4-7.2
		C2654.5,306.4,2652.3,304.7,2650.1,303z"/>
	<path class="st5" d="M2650.1,303c1.5,2.6,2.9,5.1,4.4,7.7c4.5,7.9,9,15.8,13.4,23.6c3,5.3,6.1,10.6,9.1,15.9
		c5.2,9.2,10.5,18.3,15.7,27.4c90.9,158.6,173.7,298.8,247.3,424.5c23.5,40.2,86.8,148.5,200.7,206.8
		c59.3,30.3,106.3,33.8,123.7,34.5c57.9,2.2,101.3-14.8,129.8-26.4c66.6-27,108.1-65,150-103.4c28.2-25.9,94.9-90.9,131.8-137.9
		c5.3-6.7,22.2-28.7,50.7-50.7c11.8-9.1,22.1-15.6,28.6-19.4l0,0c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0
		c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8
		c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4
		C2666.7,313.9,2653.3,304.2,2650.1,303z"/>
	<path class="st6" d="M2669,340.7c1,1.2,2,2.4,3.1,3.7c1.5,1.8,3.1,3.7,4.9,5.8c16.2,19.3,40.8,48.5,74.4,95
		c5.6,7.8,10.8,15.1,15.7,22.2c67.5,97.2,74.9,133.7,164.7,261.6c49.6,70.6,83.7,111.3,131.8,150c65.2,52.6,110.3,64.7,129.8,68.9
		c47.5,10.3,86.6,4.3,113.5,0c60-9.7,102.4-31.8,137.9-50.7c10-5.3,47.2-31.3,121.6-83.1c28.3-19.7,51.5-36.1,79.1-62.9
		c18.8-18.2,33-34.9,42.5-46.8l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
		c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
		c-39.8-41.7-77.1-73.4-105.3-95.4c0.5-1.4-8.6-7.8-9.4-7.2c-1,0.7-1.8,1.6-2.5,2.5c-0.1,0.1-0.2,0.3-0.3,0.5
		c-0.1,0.1-0.1,0.2-0.2,0.3C2650.8,317.4,2655.7,324.6,2669,340.7z"/>
	<path class="st7" d="M2667.9,334.3c1.1,3.1,2.5,6.5,4.2,10.1c4.5,9.4,11.4,20.4,20.5,33.1c17,23.8,42,53.6,74.4,89.9
		c51.4,57.4,121.6,131.1,209.3,223.1c20.4,21.4,64.8,67.1,135.8,99.3c51.9,23.6,94.2,29.1,105.4,30.4c55,6.4,97.8-2.6,131.8-10.1
		c43.4-9.6,73.9-22.4,107.5-36.5c32.4-13.6,74.4-33.5,121.5-62.2c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
		c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
		c-39.8-41.7-77.1-73.4-105.3-95.4C2664.7,320.3,2665.2,326.6,2667.9,334.3z"/>
	<path class="st8" d="M2995.9,646.2c20.9,27.3,79.3,69.7,140.6,91c58,20.1,108,17.7,133.8,16.2c44.3-2.6,80.3-12.4,104.9-21
		c-107,7.6-204.7,5.1-303.6-41.8C3043.2,677.1,3017.6,661.3,2995.9,646.2z"/>
	<g>
		<ellipse class="st9" cx="2935" cy="1354.6" rx="720.7" ry="184.1"/>
		<ellipse class="st9" cx="2935" cy="1373" rx="717" ry="165.3"/>
	</g>
	<ellipse class="st1" cx="2958.7" cy="1447.9" rx="414.8" ry="175.8"/>
	<ellipse class="st9" cx="2958.7" cy="1497.9" rx="408.3" ry="144.6"/>
	<ellipse class="st1" cx="2958.7" cy="1617.5" rx="250.6" ry="119.6"/>
	<ellipse class="st7" cx="2958.7" cy="1667.6" rx="229.7" ry="69.6"/>
	<ellipse class="st1" cx="2958.7" cy="1823.2" rx="220.6" ry="119"/>
	<ellipse class="st10" cx="2958.7" cy="1863.5" rx="197.7" ry="60.4"/>
	<g>
		
			<radialGradient id="SVGID_3_" cx="27062.6797" cy="-4543.5977" r="170.166" fx="27012.0488" fy="-4594.481" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)" gradientUnits="userSpaceOnUse">
			<stop  offset="5.641030e-02" style="stop-color:#FFFFFF"/>
			<stop  offset="0.9949" style="stop-color:#0072CE"/>
		</radialGradient>
		<path class="st11" d="M2090.1,1199c0.8-7.3,1.2-14.8,1.2-22.3c0-116.3-94.3-210.6-210.6-210.6c-116.3,0-210.6,94.3-210.6,210.6
			c0,6.1,0.3,12.2,0.8,18.2L2090.1,1199z"/>
		<ellipse class="st1" cx="1880.6" cy="1234.3" rx="231.4" ry="88.2"/>
		<ellipse class="st10" cx="1880.6" cy="1243.1" rx="230.2" ry="79.2"/>
		<ellipse class="st1" cx="1880.6" cy="1282.2" rx="198.6" ry="84.1"/>
		<ellipse class="st10" cx="1880.6" cy="1306.2" rx="195.5" ry="69.2"/>
		<ellipse class="st1" cx="1880.6" cy="1363.4" rx="120" ry="57.3"/>
		<ellipse class="st10" cx="1880.6" cy="1387.4" rx="110" ry="33.3"/>
		<ellipse class="st1" cx="1880.6" cy="1461.9" rx="105.6" ry="57"/>
		<ellipse class="st10" cx="1880.6" cy="1481.2" rx="94.7" ry="28.9"/>
		<path class="st1" d="M1882.2,2197L1882.2,2197c10.6,0,19.3-30,19.3-66.5v-573.3c0-36.5-8.7-66.5-19.3-66.5l0,0
			c-10.6,0-19.3,30-19.3,66.5v573.3C1863,2167.4,1871.6,2197,1882.2,2197z"/>
	</g>
	
		<linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="2625.05" y1="-2926.3325" x2="2625.05" y2="-3266.3914" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st12" d="M1810,2615.9l419.8-16.8l246.4-187.2l848.1-9l123.1-84.1H2331.8c-176.4-20.3-352.7-40.7-529.1-61
		C1805.1,2377.2,1807.5,2496.6,1810,2615.9z"/>
	<rect x="1879.2" y="2255.7" class="st10" width="4.3" height="366.4"/>
	<rect x="2011.4" y="2281.2" class="st10" width="4.3" height="331.4"/>
	<rect x="2119.1" y="2290.4" class="st10" width="4.3" height="312.8"/>
	<rect x="2218.2" y="2311.6" class="st10" width="4.3" height="279"/>
	<rect x="2373.6" y="2311.6" class="st10" width="4.3" height="200.9"/>
	<rect x="3296.3" y="2301.8" class="st10" width="4.3" height="95"/>
	<rect x="3077.3" y="2311.6" class="st10" width="4.3" height="91.4"/>
	<rect x="2554.5" y="2344.4" class="st13" width="301" height="46.3"/>
	<path class="st10" d="M1804.2,2385c215,12,430,23.9,644.9,35.9l7.3-24.1l-651-48.5C1805.1,2360.6,1804.7,2372.8,1804.2,2385z"/>
	<path class="st1" d="M2220.3,2611.4c259.8,1.5,519.7,3,779.5,4.5c-0.4-8-0.8-16-1.2-24.1c-259.4-0.4-518.9-0.8-778.3-1.2
		C2220.3,2597.6,2220.3,2604.5,2220.3,2611.4z"/>
	<rect x="2248.5" y="2563.7" class="st1" width="798.3" height="26.9"/>
	<rect x="2270.5" y="2540.4" class="st1" width="808.9" height="23.3"/>
	<rect x="2296.2" y="2520.9" class="st1" width="829.7" height="19.6"/>
	<rect x="2317.8" y="2504.1" class="st1" width="876.6" height="16.7"/>
	<rect x="2344.8" y="2492.7" class="st14" width="883.2" height="11.4"/>
	<rect x="2375.8" y="2475.6" class="st15" width="843.2" height="17.1"/>
	<rect x="2393.7" y="2456.8" class="st16" width="843.6" height="18.8"/>
	<rect x="2413.3" y="2438.9" class="st14" width="844.4" height="17.9"/>
	<rect x="2432" y="2420.9" class="st17" width="866.4" height="17.9"/>
	<rect x="2449.2" y="2403" class="st18" width="875" height="17.9"/>
	<rect x="2467.1" y="2390.7" class="st19" width="857.1" height="12.2"/>
	<path class="st20" d="M2197.9,2578.7l-2.9-3.2l145.6-134.6h33.1c15.6-13.6,30.8-27.9,45.3-42.6c16.2-16.4,31.8-33.7,46.5-51.5
		l3.3,2.7c-14.8,17.8-30.5,35.2-46.7,51.7c-14.7,15-30.3,29.6-46.1,43.4l-0.6,0.5h-33L2197.9,2578.7z"/>
	
		<rect x="2340" y="2443.6" transform="matrix(1 -9.518689e-03 9.518689e-03 1 -23.4599 22.4064)" class="st20" width="4.3" height="64.3"/>
	<rect x="2466" y="2348.3" class="st20" width="4.3" height="57.5"/>
	<rect x="2203.5" y="2567.4" class="st20" width="4.3" height="48.5"/>
	<polygon class="st9" points="3895.7,1959.2 3736.6,2603.3 3035.7,2621.7 	"/>
	<path class="st21" d="M3431.9,2331.2c-132.1,96.8-264.1,193.7-396.2,290.5c-16.7,0.1-33.4,0.2-50.1,0.4
		c138.5-97,277.1-193.9,415.6-290.9H3431.9z"/>
	<polygon class="st0" points="3895.7,2602.9 3895.7,1959.2 3736.6,2603.3 	"/>
	<polygon class="st9" points="2296.2,1436.8 2296.2,2348.3 3431.9,2331.2 3895.7,1959.2 	"/>
	<path class="st0" d="M3606.4,2196.9l-1172.7-172.7c-8.4-1.2-15.2-6-15.2-10.5v-349.1c0-4.5,6.9-6.4,15.2-4.1l1172.7,310.8
		c3.3,0.8,5.9,3.8,5.9,6.6v214.9C3612.2,2195.6,3609.6,2197.5,3606.4,2196.9z"/>
	<path class="st22" d="M1365.2,1892.6c0,6.8,0,712.1,0,712.1l425.6,14.1v-363.1l505.4,92.6v-911.5L1365.2,1892.6z"/>
	<path class="st21" d="M1816.9,2630.6c-10.9,2.7-21.8,5.4-32.6,8.1c2.2-127.7,4.4-255.4,6.5-383c8.7,1.6,17.4,3.2,26.1,4.8
		C1816.9,2383.8,1816.9,2507.2,1816.9,2630.6z"/>
	
		<linearGradient id="SVGID_5_" gradientUnits="userSpaceOnUse" x1="3249.2087" y1="-2836.8176" x2="4897.2114" y2="-3072.8181" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st23" d="M3819.6,2605.9l93.5-9.3c10.9-0.3,889.2,64.1,889.2,64.1l-48.4,14.9L3819.6,2605.9z"/>
	
		<linearGradient id="SVGID_6_" gradientUnits="userSpaceOnUse" x1="3248.4441" y1="-2842.1621" x2="4896.4419" y2="-3078.1616" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st24" d="M3633.6,2617.9l963.6,76.2l114.3-8.7c-313.5-23.7-627.1-47.5-940.6-71.2
		C3725.1,2615.5,3679.4,2616.7,3633.6,2617.9z"/>
	
		<linearGradient id="SVGID_7_" gradientUnits="userSpaceOnUse" x1="3246.854" y1="-2853.2629" x2="4894.8521" y2="-3089.2629" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<polygon class="st25" points="3430.3,2632.8 4388.5,2717.6 4501,2707.1 3557.4,2623.5 	"/>
	<polygon class="st9" points="4159.9,2740.6 4281.5,2727.6 3314.2,2636.1 3190.8,2645.8 	"/>
	<polygon class="st9" points="2938.5,2662.5 3875,2766.6 4025.6,2753.6 3067.4,2654.2 	"/>
	<polygon class="st9" points="3581,2801.9 3736.1,2783.3 2795.2,2675.5 2630,2688.3 	"/>
	<polygon class="st9" points="3430.3,2819.2 2520.6,2694.1 2336.7,2694.1 3248.9,2836.5 	"/>
	<path class="st9" d="M1991.9,2726.3c281.9,51.6,563.8,103.2,845.7,154.8l212.9-24.8l-861.4-138.7
		C2123.3,2720.5,2057.6,2723.4,1991.9,2726.3z"/>
	<polygon class="st9" points="1614.4,2749.8 1823.7,2739.9 2617.3,2898.5 2389.9,2933.1 	"/>
	<polygon class="st9" points="2087.4,2957.9 1804.3,2992.6 1197,2782 1397.8,2765.3 	"/>
	<g>
		<path class="st10" d="M2535.6,1815.5l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7V1853l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88l-8.7-1.7L2535.6,1815.5L2535.6,1815.5z"/>
		<path class="st10" d="M2669.9,1950v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2669.9,1950z"/>
		<path class="st10" d="M2752.8,1856.6l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2752.8,1856.6L2752.8,1856.6z"/>
		<path class="st10" d="M2875.9,1989v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2875.9,1989z"/>
		<path class="st10" d="M2998.2,1903l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2998.2,1903L2998.2,1903z"/>
		<path class="st10" d="M3168,2013v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
			c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
			c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3166.9,2022,3168,2018,3168,2013z"/>
		<path class="st10" d="M3251.4,1996.1l-8.1,0.9c-0.8-2.6-1.9-5-3.4-7.3s-3.4-4.2-5.7-5.8c-2.3-1.6-5.2-2.7-8.7-3.4
			c-5.2-1-9.4-0.5-12.7,1.5s-5,5.1-5,9.2c0,3.5,1.1,6.6,3.4,9.2c2.3,2.6,5.8,5,10.5,7.2l11.5,5.2c6.4,2.9,11.2,6.4,14.4,10.7
			c3.2,4.2,4.8,9.1,4.8,14.5c0,4.6-1.2,8.5-3.6,11.6c-2.4,3.1-5.7,5.3-10,6.6c-4.3,1.2-9.2,1.3-14.8,0.3c-7.4-1.4-13.6-4.4-18.4-8.9
			c-4.8-4.5-7.9-10.3-9.3-17.4l8.5-0.6c1.1,5.1,3.2,9.2,6.4,12.2c3.2,3.1,7.4,5.1,12.6,6.1c5.9,1.1,10.5,0.6,14-1.6
			c3.5-2.2,5.3-5.4,5.3-9.6c0-3.3-1-6.3-3.1-8.9s-5.2-4.9-9.3-6.7l-12.5-5.6c-6.6-3-11.5-6.6-14.7-10.9s-4.8-9.2-4.8-14.6
			c0-4.5,1.1-8.3,3.4-11.3c2.3-3,5.4-5.1,9.4-6.3c4-1.2,8.6-1.3,13.7-0.3c7,1.3,12.6,4.1,16.8,8.3
			C3246.5,1984.6,3249.5,1989.9,3251.4,1996.1z"/>
		<path class="st10" d="M3302.6,2071.4c-7.1-1.3-13.3-4.3-18.5-8.8c-5.2-4.6-9.2-10.3-12-17.1c-2.8-6.9-4.2-14.4-4.2-22.7
			c0-8.2,1.4-15.3,4.2-21.2c2.8-5.9,6.8-10.2,11.8-12.8c5-2.7,10.8-3.4,17.4-2.2c4.1,0.8,8.1,2.3,12,4.7c3.8,2.3,7.3,5.5,10.4,9.4
			c3.1,3.9,5.5,8.5,7.3,13.9s2.7,11.5,2.7,18.3v4.7l-59.6-11.3v-8.4l50.5,9.6c0-5.3-1-10.2-3-14.8c-2-4.6-4.7-8.4-8.2-11.5
			s-7.5-5.1-12.1-6c-4.8-0.9-9.1-0.3-12.8,1.7s-6.5,5.2-8.6,9.3s-3.1,8.9-3.2,14.3v5c0,6.5,1,12.4,3.2,17.6c2.1,5.2,5.1,9.6,9,13
			s8.5,5.6,13.8,6.6c3.6,0.7,6.8,0.7,9.5,0s5-1.9,6.9-3.6s3.3-3.7,4.2-5.9l8.4,4.5c-1.2,3.2-3.1,6-5.7,8.5c-2.6,2.4-5.9,4.1-9.8,5.1
			C3312.2,2072.4,3307.7,2072.4,3302.6,2071.4z"/>
		<path class="st10" d="M3401.4,2057.1v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
			c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
			c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3400.4,2066.2,3401.4,2062.1,3401.4,2057.1z"/>
		<path class="st10" d="M3433.6,2094.5v-81.8l8.6,1.6v12.6l0.8,0.2c1.5-3.9,4.1-6.8,7.6-8.5c3.6-1.8,7.8-2.2,12.8-1.2
			c5.3,1,9.6,3.1,13,6.4s5.9,7.4,7.6,12.3l0.6,0.1c1.7-4.2,4.5-7.3,8.4-9.2c3.9-1.9,8.6-2.4,14.2-1.3c7.1,1.3,12.7,4.8,16.8,10.3
			c4.1,5.6,6.2,12.9,6.2,22.1v54.8l-8.8-1.7v-54.8c0-6.5-1.5-11.6-4.6-15.4s-7.1-6.2-12.2-7.1c-5.8-1.1-10.3,0-13.5,3.2
			c-3.1,3.2-4.7,7.8-4.7,13.7v53.9l-9-1.7v-55.7c0-5.5-1.4-10.3-4.3-14.2c-2.9-4-6.9-6.4-12.2-7.4c-3.5-0.7-6.7-0.3-9.5,1
			s-5,3.5-6.6,6.4c-1.6,3-2.4,6.6-2.4,10.9v52.4L3433.6,2094.5z"/>
	</g>
</g>
</svg>

'''
'''--- src/frontend/public/images/sideMenu/arrow.svg ---
<svg width="33" height="8" viewBox="0 0 33 8" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.146447 4.03553C-0.0488155 3.84027 -0.0488155 3.52369 0.146447 3.32843L3.32843 0.146447C3.52369 -0.0488155 3.84027 -0.0488155 4.03553 0.146447C4.2308 0.341709 4.2308 0.658291 4.03553 0.853553L1.70711 3.18198H32.5V4.18198H1.70711L4.03553 6.51041C4.2308 6.70567 4.2308 7.02225 4.03553 7.21751C3.84027 7.41278 3.52369 7.41278 3.32843 7.21751L0.146447 4.03553Z" fill="black"/>
</svg>

'''
'''--- src/frontend/public/images/sideMenu/checked.svg ---
<svg width="20" height="16" viewBox="0 0 20 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M6.66712 16L0 8.99982L1.90451 7.00018L6.66846 11.9979L6.66712 11.9993L18.0955 0L20 1.99965L8.57162 14.0004L6.66846 15.9986L6.66712 16Z" fill="#22C55E"/>
</svg>

'''
'''--- src/frontend/public/images/sideMenu/nearAcademy.svg ---
<svg width="156" height="14" viewBox="0 0 156 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.3936 0.369714V13.5452C11.3936 13.6455 11.3183 13.7459 11.1928 13.7459H9.81256C9.18516 13.7459 8.58286 13.4197 8.23151 12.8927L2.00769 3.28086L2.20845 8.07421V13.5702C2.20845 13.6706 2.13317 13.771 2.00769 13.771H0.200767C0.100383 13.771 0 13.6957 0 13.5702V0.369714C0 0.269329 0.0752871 0.168945 0.200767 0.168945H1.55596C2.18336 0.168945 2.78566 0.495194 3.13701 1.02221L9.36083 10.6089L9.16006 5.81556V0.369714C9.16006 0.269329 9.23535 0.168945 9.36083 0.168945H11.1678C11.3183 0.168945 11.3936 0.244233 11.3936 0.369714Z" fill="#0A172F"/>
<path d="M27.4934 13.7208H25.5861C25.4607 13.7208 25.3603 13.5953 25.4105 13.4699L30.4799 0.344618C30.5301 0.244234 30.6305 0.168945 30.7308 0.168945H33.1401C33.2655 0.168945 33.3659 0.244234 33.391 0.344618L38.4855 13.4699C38.5357 13.5953 38.4353 13.7208 38.3098 13.7208H36.4025C36.3273 13.7208 36.252 13.6706 36.2269 13.5953L32.1362 2.80403C32.086 2.65346 31.8351 2.65346 31.7849 2.80403L27.6942 13.5953C27.644 13.6706 27.5687 13.7208 27.4934 13.7208Z" fill="#0A172F"/>
<path d="M51.0705 13.4197L47.2559 8.55103C49.4142 8.1495 50.669 6.69392 50.669 4.46037C50.669 1.90057 49.0127 0.168945 46.0513 0.168945H40.731C40.5804 0.168945 40.4549 0.294426 40.4549 0.445002C40.4549 1.44885 41.258 2.25192 42.2618 2.25192H45.8506C47.6324 2.25192 48.4857 3.15538 48.4857 4.48547C48.4857 5.81556 47.6575 6.71902 45.8506 6.71902H40.7812C40.6306 6.71902 40.5051 6.8445 40.5051 6.99508V13.5201C40.5051 13.6204 40.5804 13.7208 40.7059 13.7208H42.5128C42.6132 13.7208 42.7136 13.6455 42.7136 13.5201V8.67651H44.7965L48.1092 12.993C48.4606 13.4699 49.0127 13.7208 49.615 13.7208H50.9953C51.0956 13.7208 51.1709 13.5452 51.0705 13.4197Z" fill="#0A172F"/>
<path d="M23.3142 0.168945H14.907C14.7565 0.168945 14.6561 0.26933 14.6561 0.419906C14.6561 1.42375 15.4843 2.25192 16.4881 2.25192H23.3142C23.4146 2.25192 23.515 2.17663 23.515 2.05115V0.344618C23.4899 0.244234 23.4146 0.168945 23.3142 0.168945ZM23.3142 11.6378H17.0402C16.9398 11.6378 16.8394 11.5626 16.8394 11.4371V8.04911C16.8394 7.94873 16.9147 7.84834 17.0402 7.84834H22.8374C22.9378 7.84834 23.0382 7.77305 23.0382 7.64757V5.94104C23.0382 5.84066 22.9629 5.74027 22.8374 5.74027H14.9321C14.7816 5.74027 14.6561 5.86575 14.6561 6.01633V13.4197C14.6561 13.5702 14.7816 13.6957 14.9321 13.6957H23.3142C23.4146 13.6957 23.515 13.6204 23.515 13.495V11.7884C23.4899 11.7131 23.4146 11.6378 23.3142 11.6378Z" fill="#0A172F"/>
<path d="M67.3633 11.3238H62.3004L61.4888 13.72H58.0298L62.9381 0.154592H66.7642L71.6725 13.72H68.1749L67.3633 11.3238ZM66.513 8.77309L64.8318 3.80682L63.17 8.77309H66.513Z" fill="#0A172F"/>
<path d="M72.606 6.91798C72.606 5.57819 72.8958 4.38654 73.4755 3.34305C74.0552 2.28667 74.8604 1.46862 75.891 0.888903C76.9345 0.296301 78.1133 0 79.4273 0C81.0376 0 82.4161 0.425127 83.5626 1.27538C84.7092 2.12564 85.4757 3.28508 85.8622 4.7537H82.2293C81.9588 4.18686 81.5723 3.75529 81.0698 3.45899C80.5803 3.16269 80.0199 3.01454 79.3887 3.01454C78.3709 3.01454 77.5464 3.36881 76.9152 4.07736C76.2839 4.7859 75.9683 5.73278 75.9683 6.91798C75.9683 8.10319 76.2839 9.05006 76.9152 9.75861C77.5464 10.4672 78.3709 10.8214 79.3887 10.8214C80.0199 10.8214 80.5803 10.6733 81.0698 10.377C81.5723 10.0807 81.9588 9.6491 82.2293 9.08227H85.8622C85.4757 10.5509 84.7092 11.7103 83.5626 12.5606C82.4161 13.398 81.0376 13.8166 79.4273 13.8166C78.1133 13.8166 76.9345 13.5268 75.891 12.9471C74.8604 12.3545 74.0552 11.5364 73.4755 10.4929C72.8958 9.44942 72.606 8.25778 72.606 6.91798Z" fill="#0A172F"/>
<path d="M96.3304 11.3238H91.2675L90.4559 13.72H86.9969L91.9052 0.154592H95.7313L100.64 13.72H97.142L96.3304 11.3238ZM95.4801 8.77309L93.7989 3.80682L92.1371 8.77309H95.4801Z" fill="#0A172F"/>
<path d="M107.216 0.154592C108.646 0.154592 109.895 0.43801 110.964 1.00485C112.034 1.57168 112.858 2.37041 113.438 3.40102C114.031 4.41875 114.327 5.59751 114.327 6.93731C114.327 8.26422 114.031 9.44298 113.438 10.4736C112.858 11.5042 112.027 12.3029 110.945 12.8698C109.876 13.4366 108.633 13.72 107.216 13.72H102.133V0.154592H107.216ZM107.003 10.8601C108.253 10.8601 109.225 10.5187 109.921 9.8359C110.617 9.15312 110.964 8.18692 110.964 6.93731C110.964 5.68769 110.617 4.71505 109.921 4.01939C109.225 3.32372 108.253 2.97589 107.003 2.97589H105.438V10.8601H107.003Z" fill="#0A172F"/>
<path d="M119.478 2.80198V5.54598H123.903V8.09675H119.478V11.0726H124.483V13.72H116.174V0.154592H124.483V2.80198H119.478Z" fill="#0A172F"/>
<path d="M141.991 0.154592V13.72H138.686V5.58463L135.652 13.72H132.986L129.932 5.5653V13.72H126.628V0.154592H130.532L134.338 9.54604L138.107 0.154592H141.991Z" fill="#0A172F"/>
<path d="M156 0.154592L151.304 9.23686V13.72H148V9.23686L143.304 0.154592H147.053L149.681 5.83584L152.29 0.154592H156Z" fill="#0A172F"/>
</svg>

'''
'''--- src/frontend/public/images/splash/bg_transparent.svg ---
<svg width="477" height="477" viewBox="0 0 477 477" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M60.6433 0L75.1409 46.8255L10.8997 0H9.8874L74.3493 46.9863L0 38.986V39.5857L74.753 47.6294L0 118.585V119.407L75.3631 47.8724L140.738 155.253L0 138.448V139.049L140.622 155.839L60.8457 227.342L60.8368 227.335L0 157.35V158.27L59.8507 227.154L0 208.523V209.148L59.8942 227.792L0 250.027V250.663L60.369 228.252L23.6579 356.741L0 346.16V346.813L23.3787 357.27L0 386.868V387.83L23.7323 357.784L60.496 477H61.1199L24.3766 357.85L175.356 455.542L144.052 477H145.106L175.787 455.97L186.974 477H187.649L176.482 456.006L252.651 477H254.895L176.758 455.464L309.869 393.937L336.339 477H336.965L310.519 394.013L435.213 439.518L380.596 477H381.65L435.853 439.801L477 469.822V469.084L436.285 439.378L477 387.83V386.868L435.909 438.891L360.202 294.575L477 346.813V346.16L360.326 293.977L477 250.663V250.027L359.737 293.56L321.817 160.84L477 209.148V208.523L322.646 160.474L458.402 136.864L477 158.259V157.35L459.248 136.929L477 139.042V138.441L459.185 136.321L477 119.52V118.701L458.52 136.128L345.405 25.3752L345.67 25.1915L477 39.6584V39.0586L346.418 24.6741L382.085 0H381.037L345.514 24.5745L344.979 24.5155L337.121 0H336.495L344.327 24.4332L255.264 0H253.01L343.265 24.7601L220.76 62.2493L187.649 0H186.974L220.086 62.2514L76.2624 47.1898L145.106 0H144.052L75.7606 46.8109L61.2675 0H60.6433ZM175.628 455.008L24.6062 357.288L183.919 321.161L175.628 455.008ZM309.403 393.496L184.509 321.282L176.222 455.055L309.403 393.496ZM321.212 160.892L359.062 293.366L233.093 227.721L321.212 160.892ZM61.5968 227.469H231.68L141.323 156.011L61.5968 227.469ZM320.623 160.073L141.943 155.34L220.633 63.0417L320.623 160.073ZM343.96 25.1708L221.182 62.7437L321.179 159.782L343.96 25.1708ZM142.199 155.943L320.522 160.667L232.541 227.39L142.199 155.943ZM344.77 25.8147L344.663 25.4838L344.533 25.3563L321.743 160.025L457.892 136.347L344.905 25.7207L344.77 25.8147ZM75.9934 47.7611L220.018 62.8438L141.352 155.114L75.9934 47.7611ZM24.275 356.752L61.0022 228.207L183.624 320.617L24.275 356.752ZM309.924 393.108L184.656 320.678L359.017 294.332L309.924 393.108ZM232.665 228.17L358.59 293.793L184.969 320.028L232.665 228.17ZM232.047 228.066L184.24 320.138L184.023 320.171L61.806 228.066H232.047ZM310.465 393.359L359.546 294.607L435.237 438.892L310.465 393.359Z" fill="#1A3B65"/>
<path d="M9.83887 477H10.8505L0 469.084V469.822L9.83887 477Z" fill="#1A3B65"/>
<path d="M458.516 140.119C460.492 140.119 462.094 138.517 462.094 136.541C462.094 134.566 460.492 132.964 458.516 132.964C456.54 132.964 454.939 134.566 454.939 136.541C454.939 138.517 456.54 140.119 458.516 140.119Z" fill="#153B6B"/>
<path d="M321.379 163.969C323.355 163.969 324.956 162.367 324.956 160.391C324.956 158.416 323.355 156.814 321.379 156.814C319.403 156.814 317.801 158.416 317.801 160.391C317.801 162.367 319.403 163.969 321.379 163.969Z" fill="#153B6B"/>
<path d="M359.539 297.529C361.515 297.529 363.116 295.927 363.116 293.951C363.116 291.976 361.515 290.374 359.539 290.374C357.563 290.374 355.961 291.976 355.961 293.951C355.961 295.927 357.563 297.529 359.539 297.529Z" fill="#153B6B"/>
<path d="M435.859 443.014C437.835 443.014 439.436 441.412 439.436 439.436C439.436 437.461 437.835 435.859 435.859 435.859C433.883 435.859 432.281 437.461 432.281 439.436C432.281 441.412 433.883 443.014 435.859 443.014Z" fill="#153B6B"/>
<path d="M310.05 397.103C312.026 397.103 313.627 395.501 313.627 393.525C313.627 391.549 312.026 389.948 310.05 389.948C308.074 389.948 306.472 391.549 306.472 393.525C306.472 395.501 308.074 397.103 310.05 397.103Z" fill="#153B6B"/>
<path d="M184.241 324.36C186.217 324.36 187.819 322.758 187.819 320.783C187.819 318.807 186.217 317.205 184.241 317.205C182.265 317.205 180.664 318.807 180.664 320.783C180.664 322.758 182.265 324.36 184.241 324.36Z" fill="#153B6B"/>
<path d="M175.894 459.113C177.87 459.113 179.471 457.511 179.471 455.535C179.471 453.559 177.87 451.958 175.894 451.958C173.918 451.958 172.316 453.559 172.316 455.535C172.316 457.511 173.918 459.113 175.894 459.113Z" fill="#153B6B"/>
<path d="M23.85 360.731C25.8258 360.731 27.4275 359.13 27.4275 357.154C27.4275 355.178 25.8258 353.576 23.85 353.576C21.8742 353.576 20.2725 355.178 20.2725 357.154C20.2725 359.13 21.8742 360.731 23.85 360.731Z" fill="#153B6B"/>
<path d="M60.8175 231.345C62.7933 231.345 64.395 229.743 64.395 227.768C64.395 225.792 62.7933 224.19 60.8175 224.19C58.8417 224.19 57.24 225.792 57.24 227.768C57.24 229.743 58.8417 231.345 60.8175 231.345Z" fill="#153B6B"/>
<path d="M75.7237 51.2776C77.6995 51.2776 79.3012 49.6759 79.3012 47.7001C79.3012 45.7243 77.6995 44.1226 75.7237 44.1226C73.7479 44.1226 72.1462 45.7243 72.1462 47.7001C72.1462 49.6759 73.7479 51.2776 75.7237 51.2776Z" fill="#153B6B"/>
<path d="M220.612 66.1838C222.588 66.1838 224.19 64.5821 224.19 62.6063C224.19 60.6305 222.588 59.0288 220.612 59.0288C218.637 59.0288 217.035 60.6305 217.035 62.6063C217.035 64.5821 218.637 66.1838 220.612 66.1838Z" fill="#153B6B"/>
<path d="M344.632 28.6201C346.608 28.6201 348.21 27.0184 348.21 25.0426C348.21 23.0668 346.608 21.4651 344.632 21.4651C342.657 21.4651 341.055 23.0668 341.055 25.0426C341.055 27.0184 342.657 28.6201 344.632 28.6201Z" fill="#153B6B"/>
<path d="M141.311 159.199C143.287 159.199 144.889 157.597 144.889 155.621C144.889 153.646 143.287 152.044 141.311 152.044C139.335 152.044 137.734 153.646 137.734 155.621C137.734 157.597 139.335 159.199 141.311 159.199Z" fill="#153B6B"/>
<path d="M232.537 231.345C234.513 231.345 236.115 229.743 236.115 227.768C236.115 225.792 234.513 224.19 232.537 224.19C230.562 224.19 228.96 225.792 228.96 227.768C228.96 229.743 230.562 231.345 232.537 231.345Z" fill="#153B6B"/>
</svg>

'''
'''--- src/frontend/public/images/splash/close.svg ---
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path opacity="0.2" fill-rule="evenodd" clip-rule="evenodd" d="M10.0507 12L0 22.0507L1.94928 24L12 13.9493L22.0507 24L24 22.0507L13.9493 12L24 1.94928L22.0507 0L12 10.0507L1.94928 0L0 1.94928L10.0507 12Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/images/splash/logo-white.svg ---
<svg width="179" height="17" viewBox="0 0 179 17" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.0734 1.27724V16.3952C13.0734 16.5104 12.987 16.6256 12.8431 16.6256H11.2593C10.5394 16.6256 9.84828 16.2512 9.44513 15.6465L2.30369 4.61759L2.53406 10.1177V16.424C2.53406 16.5392 2.44767 16.6544 2.30369 16.6544H0.230368C0.115183 16.6544 0 16.568 0 16.424V1.27724C0 1.16206 0.0863871 1.04688 0.230368 1.04688H1.78536C2.50526 1.04688 3.19637 1.42122 3.59952 2.02594L10.741 13.0261L10.5106 7.526V1.27724C10.5106 1.16206 10.597 1.04688 10.741 1.04688H12.8143C12.9871 1.04688 13.0734 1.13326 13.0734 1.27724Z" fill="white"/>
<path d="M31.547 16.5968H29.3585C29.2145 16.5968 29.0993 16.4528 29.1569 16.3088L34.9737 1.24845C35.0313 1.13326 35.1465 1.04688 35.2617 1.04688H38.0261C38.1701 1.04688 38.2853 1.13326 38.314 1.24845L44.1597 16.3088C44.2173 16.4528 44.1021 16.5968 43.9581 16.5968H41.7696C41.6832 16.5968 41.5968 16.5392 41.568 16.4528L36.8742 4.07047C36.8167 3.89769 36.5287 3.89769 36.4711 4.07047L31.7773 16.4528C31.7197 16.5392 31.6333 16.5968 31.547 16.5968Z" fill="white"/>
<path d="M58.6002 16.2512L54.2232 10.6648C56.6996 10.204 58.1394 8.53387 58.1394 5.97101C58.1394 3.03381 56.2389 1.04688 52.8409 1.04688H46.7362C46.5634 1.04688 46.4194 1.19086 46.4194 1.36363C46.4194 2.51548 47.3409 3.43695 48.4927 3.43695H52.6106C54.6551 3.43695 55.6342 4.47361 55.6342 5.99981C55.6342 7.526 54.6839 8.56266 52.6106 8.56266H46.7938C46.621 8.56266 46.477 8.70665 46.477 8.87942V16.3664C46.477 16.4816 46.5634 16.5968 46.7074 16.5968H48.7807C48.8959 16.5968 49.0111 16.5104 49.0111 16.3664V10.8088H51.4011L55.2022 15.7617C55.6054 16.3088 56.2389 16.5968 56.93 16.5968H58.5138C58.629 16.5968 58.7154 16.3952 58.6002 16.2512Z" fill="white"/>
<path d="M26.7516 1.04688H17.1049C16.9321 1.04688 16.8169 1.16206 16.8169 1.33484C16.8169 2.48668 17.7672 3.43695 18.919 3.43695H26.7516C26.8668 3.43695 26.9819 3.35057 26.9819 3.20658V1.24845C26.9531 1.13326 26.8668 1.04688 26.7516 1.04688ZM26.7516 14.2067H19.5525C19.4374 14.2067 19.3222 14.1203 19.3222 13.9763V10.0889C19.3222 9.97368 19.4086 9.85849 19.5525 9.85849H26.2044C26.3196 9.85849 26.4348 9.7721 26.4348 9.62812V7.66998C26.4348 7.5548 26.3484 7.43962 26.2044 7.43962H17.1337C16.9609 7.43962 16.8169 7.5836 16.8169 7.75637V16.2512C16.8169 16.424 16.9609 16.568 17.1337 16.568H26.7516C26.8668 16.568 26.9819 16.4816 26.9819 16.3376V14.3795C26.9531 14.2931 26.8668 14.2067 26.7516 14.2067Z" fill="white"/>
<path d="M77.2955 13.8467H71.4862L70.5549 16.5961H66.5859L72.2179 1.03066H76.6081L82.2401 16.5961H78.2268L77.2955 13.8467ZM76.3199 10.9198L74.3908 5.22136L72.484 10.9198H76.3199Z" fill="white"/>
<path d="M83.3111 8.79121C83.3111 7.25388 83.6437 5.88655 84.3089 4.6892C84.9741 3.47708 85.898 2.53842 87.0806 1.87323C88.2779 1.19326 89.6305 0.853271 91.1382 0.853271C92.986 0.853271 94.5677 1.34108 95.8833 2.31669C97.1989 3.2923 98.0784 4.62268 98.5218 6.30783H94.3533C94.0429 5.65743 93.5994 5.16223 93.0229 4.82224C92.4612 4.48226 91.8182 4.31226 91.0939 4.31226C89.9261 4.31226 88.98 4.71877 88.2557 5.53178C87.5314 6.34479 87.1693 7.43127 87.1693 8.79121C87.1693 10.1512 87.5314 11.2376 88.2557 12.0506C88.98 12.8637 89.9261 13.2702 91.0939 13.2702C91.8182 13.2702 92.4612 13.1002 93.0229 12.7602C93.5994 12.4202 94.0429 11.925 94.3533 11.2746H98.5218C98.0784 12.9597 97.1989 14.2901 95.8833 15.2657C94.5677 16.2266 92.986 16.707 91.1382 16.707C89.6305 16.707 88.2779 16.3744 87.0806 15.7092C85.898 15.0292 84.9741 14.0906 84.3089 12.8932C83.6437 11.6959 83.3111 10.3285 83.3111 8.79121Z" fill="white"/>
<path d="M110.533 13.8467H104.724L103.793 16.5961H99.8238L105.456 1.03066H109.846L115.478 16.5961H111.465L110.533 13.8467ZM109.558 10.9198L107.629 5.22136L105.722 10.9198H109.558Z" fill="white"/>
<path d="M123.024 1.03066C124.664 1.03066 126.098 1.35586 127.325 2.00627C128.552 2.65668 129.498 3.57316 130.163 4.75572C130.843 5.9235 131.183 7.27606 131.183 8.81339C131.183 10.3359 130.843 11.6885 130.163 12.871C129.498 14.0536 128.545 14.9701 127.303 15.6205C126.076 16.2709 124.65 16.5961 123.024 16.5961H117.192V1.03066H123.024ZM122.78 13.3145C124.213 13.3145 125.33 12.9228 126.128 12.1393C126.926 11.3559 127.325 10.2472 127.325 8.81339C127.325 7.37953 126.926 6.26349 126.128 5.46526C125.33 4.66703 124.213 4.26792 122.78 4.26792H120.984V13.3145H122.78Z" fill="white"/>
<path d="M137.094 4.06836V7.21693H142.171V10.1438H137.094V13.5584H142.837V16.5961H133.302V1.03066H142.837V4.06836H137.094Z" fill="white"/>
<path d="M162.926 1.03066V16.5961H159.134V7.26127L155.653 16.5961H152.593L149.09 7.2391V16.5961H145.298V1.03066H149.777L154.145 11.8067L158.469 1.03066H162.926Z" fill="white"/>
<path d="M179 1.03066L173.612 11.452V16.5961H169.821V11.452L164.433 1.03066H168.734L171.75 7.54952L174.743 1.03066H179Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/images/splash/quote-bg.svg ---
<svg width="565" height="120" viewBox="0 0 565 120" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0 104.692C0 112.976 7.63458 119.692 17.0523 119.692H547.948C557.365 119.692 565 112.976 565 104.692V32.6922C565 24.4079 557.365 17.6922 547.948 17.6922H17.0523C7.63458 17.6922 0 24.4079 0 32.6922V104.692Z" fill="white"/>
<path d="M16.4837 0.192154C22.168 6.19215 29.6094 13.1922 27.3358 17.6922H46.0936C45.1066 17.6922 42.9224 14.2869 35.8097 9.69215C28.1541 4.74672 15.2184 -1.14339 16.4837 0.192154Z" fill="white"/>
</svg>

'''
'''--- src/frontend/public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="black" />
    <meta name="description" content="NEAR Academy is an interactive introduction course for web developers looking to explore blockchain integration to their Apps. It is free, and it hands a completion certificate."/>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700;900&display=swap" rel="stylesheet">

    <!-- Meta Pixel Code -->
    <script>
      !function(f,b,e,v,n,t,s)
      {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
      n.callMethod.apply(n,arguments):n.queue.push(arguments)};
      if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
      n.queue=[];t=b.createElement(e);t.async=!0;
      t.src=v;s=b.getElementsByTagName(e)[0];
      s.parentNode.insertBefore(t,s)}(window, document,'script',
      'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '1174712496699755');
      fbq('track', 'PageView');
    </script>
    <noscript><img height="1" width="1" style="display:none"
      src="https://www.facebook.com/tr?id=1174712496699755&ev=PageView&noscript=1"
    /></noscript>
    <!-- End Meta Pixel Code -->

    <!-- Twitter single-event website tag code -->
    <script src="//static.ads-twitter.com/oct.js" type="text/javascript"></script>
    <script type="text/javascript">twttr.conversion.trackPid('o8n1i', { tw_sale_amount: 0, tw_order_quantity: 0 });</script>
    <noscript>
    <img height="1" width="1" style="display:none;" alt="" src="https://analytics.twitter.com/i/adsct?txn_id=o8n1i&p_id=Twitter&tw_sale_amount=0&tw_order_quantity=0" />
    <img height="1" width="1" style="display:none;" alt="" src="//t.co/i/adsct?txn_id=o8n1i&p_id=Twitter&tw_sale_amount=0&tw_order_quantity=0" />
    </noscript>
    <!-- End Twitter single-event website tag code -->

    <meta name="userreport:mediaId" value="270ac59b-9f58-4d09-8edc-73553f024c4d"/>
<!--    <script src="https://sak.userreport.com/101labs/launcher.js" async id="userreport-launcher-script"></script>-->
    <!-- <script src="./node_modules/reflect-metadata/Reflect.js"></script> -->
    <link rel="apple-touch-icon" href="logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <link rel='stylesheet' href='https://highlightjs.org/static/demo/styles/agate.css'/>
    <title>Near Academy</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

'''
'''--- src/frontend/public/logo-white.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 891 162"><defs><style>.cls-1{fill:#fff;}</style></defs><path class="cls-1" d="M443.7,90.21H416.82l-7.2,17.68a.78.78,0,0,1-.71.47h-2.79a.76.76,0,0,1-.7-1l21.88-53a.77.77,0,0,1,.7-.47h4.52a.76.76,0,0,1,.7.47l21.89,53a.77.77,0,0,1-.71,1h-2.79a.75.75,0,0,1-.7-.47Zm-1.64-3.89L430.22,57.57,418.46,86.32Z"/><path class="cls-1" d="M471.51,81.1c0-16.21,12-28.12,28-28.12A26.58,26.58,0,0,1,524.7,69.54a.76.76,0,0,1-.71,1h-2.85a.76.76,0,0,1-.68-.44A22.9,22.9,0,0,0,499.4,57C486,57,475.64,67.39,475.64,81.1S486,105.24,499.4,105.24a22.88,22.88,0,0,0,21.06-13.19.76.76,0,0,1,.68-.44H524a.77.77,0,0,1,.71,1,26.59,26.59,0,0,1-25.15,16.57C483.51,109.22,471.51,97.3,471.51,81.1Z"/><path class="cls-1" d="M580.1,90.21H553.23L546,107.89a.76.76,0,0,1-.7.47h-2.8a.76.76,0,0,1-.7-1L563.9,53.83h5.53l22.08,53.48a.76.76,0,0,1-.7,1H588a.75.75,0,0,1-.7-.47Zm-1.63-3.89L566.63,57.57,554.86,86.32Z"/><path class="cls-1" d="M659.4,81.1c0,16-12.23,27.26-28,27.26H614.36a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h17.08C647.33,53.83,659.4,65.05,659.4,81.1Zm-4.13,0c0-13.63-10.36-23.29-23.68-23.29H617.73v46.58h13.86C644.91,104.39,655.2,94.81,655.27,81.1Z"/><path class="cls-1" d="M687.29,57.81v20.4h27A.76.76,0,0,1,715,79v2.46a.76.76,0,0,1-.76.76h-27v22.2h28.76a.76.76,0,0,1,.76.76v2.45a.76.76,0,0,1-.76.76H683.16V53.83h32.89a.76.76,0,0,1,.76.76v2.46a.76.76,0,0,1-.76.76Z"/><path class="cls-1" d="M787.86,54.59v53a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76V58.66L763.55,89h-.46L743,58.66V107.6a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h4.29a.77.77,0,0,1,.63.34L763.4,82.34l18.7-28.17a.77.77,0,0,1,.64-.34h4.36A.76.76,0,0,1,787.86,54.59Z"/><path class="cls-1" d="M834.29,88V107.6a.76.76,0,0,1-.76.76h-2.69a.76.76,0,0,1-.76-.76V88.11L810.21,55a.76.76,0,0,1,.65-1.15h3a.76.76,0,0,1,.65.37l17.7,29.23L849.88,54.2a.76.76,0,0,1,.65-.37h3a.77.77,0,0,1,.65,1.16Z"/><path class="cls-1" d="M207.21,54.75v52.5a.76.76,0,0,1-.75.75H201a7.49,7.49,0,0,1-6.3-3.43l-24.78-38.3.85,19.13v21.85a.76.76,0,0,1-.75.75h-7.22a.76.76,0,0,1-.75-.75V54.75a.76.76,0,0,1,.75-.75h5.43a7.52,7.52,0,0,1,6.3,3.42l24.78,38.24-.77-19.06V54.75a.75.75,0,0,1,.75-.75h7.22A.76.76,0,0,1,207.21,54.75Z"/><path class="cls-1" d="M281,108h-7.64a.75.75,0,0,1-.7-1L292.9,54.72A1.14,1.14,0,0,1,294,54h9.57a1.14,1.14,0,0,1,1.05.72L324.8,107a.75.75,0,0,1-.7,1h-7.64a.76.76,0,0,1-.71-.48l-16.31-43a.75.75,0,0,0-1.41,0l-16.31,43A.76.76,0,0,1,281,108Z"/><path class="cls-1" d="M377.84,106.79,362.66,87.4c8.57-1.62,13.58-7.4,13.58-16.27,0-10.19-6.63-17.13-18.36-17.13H336.71a1.12,1.12,0,0,0-1.12,1.13h0a7.2,7.2,0,0,0,7.2,7.2H357c7.09,0,10.49,3.63,10.49,8.87s-3.32,9-10.49,9H336.71a1.13,1.13,0,0,0-1.12,1.13v26a.75.75,0,0,0,.75.75h7.22a.76.76,0,0,0,.75-.75V87.87h8.33l13.17,17.19a7.51,7.51,0,0,0,6,2.94h5.48A.75.75,0,0,0,377.84,106.79Z"/><path class="cls-1" d="M258.17,54h-33.5a1,1,0,0,0-1,1h0A7.33,7.33,0,0,0,231,62.33h27.17a.74.74,0,0,0,.75-.75V54.75A.75.75,0,0,0,258.17,54Zm0,45.67h-25a.76.76,0,0,1-.75-.75V85.38a.75.75,0,0,1,.75-.75h23.11a.75.75,0,0,0,.75-.75V77a.75.75,0,0,0-.75-.75H224.79a1.13,1.13,0,0,0-1.12,1.13v29.46a1.12,1.12,0,0,0,1.12,1.12h33.38a.75.75,0,0,0,.75-.75v-6.83A.74.74,0,0,0,258.17,99.67Z"/><path class="cls-1" d="M108.24,40.57,89.42,68.5a2,2,0,0,0,3,2.63l18.52-16a.74.74,0,0,1,1.24.56v50.29a.75.75,0,0,1-1.32.48l-56-67A9.59,9.59,0,0,0,47.54,36H45.59A9.59,9.59,0,0,0,36,45.59v70.82A9.59,9.59,0,0,0,45.59,126h0a9.59,9.59,0,0,0,8.17-4.57L72.58,93.5a2,2,0,0,0-3-2.63l-18.52,16a.74.74,0,0,1-1.24-.56V56.07a.75.75,0,0,1,1.32-.48l56,67a9.59,9.59,0,0,0,7.33,3.4h2a9.59,9.59,0,0,0,9.59-9.59V45.59A9.59,9.59,0,0,0,116.41,36h0A9.59,9.59,0,0,0,108.24,40.57Z"/></svg>
'''
'''--- src/frontend/public/logo.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 891 162"><path d="M443.7,90.21H416.82l-7.2,17.68a.78.78,0,0,1-.71.47h-2.79a.76.76,0,0,1-.7-1l21.88-53a.77.77,0,0,1,.7-.47h4.52a.76.76,0,0,1,.7.47l21.89,53a.77.77,0,0,1-.71,1h-2.79a.75.75,0,0,1-.7-.47Zm-1.64-3.89L430.22,57.57,418.46,86.32Z"/><path d="M471.51,81.1c0-16.21,12-28.12,28-28.12A26.58,26.58,0,0,1,524.7,69.54a.76.76,0,0,1-.71,1h-2.85a.76.76,0,0,1-.68-.44A22.9,22.9,0,0,0,499.4,57C486,57,475.64,67.39,475.64,81.1S486,105.24,499.4,105.24a22.88,22.88,0,0,0,21.06-13.19.76.76,0,0,1,.68-.44H524a.77.77,0,0,1,.71,1,26.59,26.59,0,0,1-25.15,16.57C483.51,109.22,471.51,97.3,471.51,81.1Z"/><path d="M580.1,90.21H553.23L546,107.89a.76.76,0,0,1-.7.47h-2.8a.76.76,0,0,1-.7-1L563.9,53.83h5.53l22.08,53.48a.76.76,0,0,1-.7,1H588a.75.75,0,0,1-.7-.47Zm-1.63-3.89L566.63,57.57,554.86,86.32Z"/><path d="M659.4,81.1c0,16-12.23,27.26-28,27.26H614.36a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h17.08C647.33,53.83,659.4,65.05,659.4,81.1Zm-4.13,0c0-13.63-10.36-23.29-23.68-23.29H617.73v46.58h13.86C644.91,104.39,655.2,94.81,655.27,81.1Z"/><path d="M687.29,57.81v20.4h27A.76.76,0,0,1,715,79v2.46a.76.76,0,0,1-.76.76h-27v22.2h28.76a.76.76,0,0,1,.76.76v2.45a.76.76,0,0,1-.76.76H683.16V53.83h32.89a.76.76,0,0,1,.76.76v2.46a.76.76,0,0,1-.76.76Z"/><path d="M787.86,54.59v53a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76V58.66L763.55,89h-.46L743,58.66V107.6a.76.76,0,0,1-.76.76h-2.61a.76.76,0,0,1-.76-.76v-53a.76.76,0,0,1,.76-.76h4.29a.77.77,0,0,1,.63.34L763.4,82.34l18.7-28.17a.77.77,0,0,1,.64-.34h4.36A.76.76,0,0,1,787.86,54.59Z"/><path d="M834.29,88V107.6a.76.76,0,0,1-.76.76h-2.69a.76.76,0,0,1-.76-.76V88.11L810.21,55a.76.76,0,0,1,.65-1.15h3a.76.76,0,0,1,.65.37l17.7,29.23L849.88,54.2a.76.76,0,0,1,.65-.37h3a.77.77,0,0,1,.65,1.16Z"/><path d="M207.21,54.75v52.5a.76.76,0,0,1-.75.75H201a7.49,7.49,0,0,1-6.3-3.43l-24.78-38.3.85,19.13v21.85a.76.76,0,0,1-.75.75h-7.22a.76.76,0,0,1-.75-.75V54.75a.76.76,0,0,1,.75-.75h5.43a7.52,7.52,0,0,1,6.3,3.42l24.78,38.24-.77-19.06V54.75a.75.75,0,0,1,.75-.75h7.22A.76.76,0,0,1,207.21,54.75Z"/><path d="M281,108h-7.64a.75.75,0,0,1-.7-1L292.9,54.72A1.14,1.14,0,0,1,294,54h9.57a1.14,1.14,0,0,1,1.05.72L324.8,107a.75.75,0,0,1-.7,1h-7.64a.76.76,0,0,1-.71-.48l-16.31-43a.75.75,0,0,0-1.41,0l-16.31,43A.76.76,0,0,1,281,108Z"/><path d="M377.84,106.79,362.66,87.4c8.57-1.62,13.58-7.4,13.58-16.27,0-10.19-6.63-17.13-18.36-17.13H336.71a1.12,1.12,0,0,0-1.12,1.13h0a7.2,7.2,0,0,0,7.2,7.2H357c7.09,0,10.49,3.63,10.49,8.87s-3.32,9-10.49,9H336.71a1.13,1.13,0,0,0-1.12,1.13v26a.75.75,0,0,0,.75.75h7.22a.76.76,0,0,0,.75-.75V87.87h8.33l13.17,17.19a7.51,7.51,0,0,0,6,2.94h5.48A.75.75,0,0,0,377.84,106.79Z"/><path d="M258.17,54h-33.5a1,1,0,0,0-1,1h0A7.33,7.33,0,0,0,231,62.33h27.17a.74.74,0,0,0,.75-.75V54.75A.75.75,0,0,0,258.17,54Zm0,45.67h-25a.76.76,0,0,1-.75-.75V85.38a.75.75,0,0,1,.75-.75h23.11a.75.75,0,0,0,.75-.75V77a.75.75,0,0,0-.75-.75H224.79a1.13,1.13,0,0,0-1.12,1.13v29.46a1.12,1.12,0,0,0,1.12,1.12h33.38a.75.75,0,0,0,.75-.75v-6.83A.74.74,0,0,0,258.17,99.67Z"/><path d="M108.24,40.57,89.42,68.5a2,2,0,0,0,3,2.63l18.52-16a.74.74,0,0,1,1.24.56v50.29a.75.75,0,0,1-1.32.48l-56-67A9.59,9.59,0,0,0,47.54,36H45.59A9.59,9.59,0,0,0,36,45.59v70.82A9.59,9.59,0,0,0,45.59,126h0a9.59,9.59,0,0,0,8.17-4.57L72.58,93.5a2,2,0,0,0-3-2.63l-18.52,16a.74.74,0,0,1-1.24-.56V56.07a.75.75,0,0,1,1.32-.48l56,67a9.59,9.59,0,0,0,7.33,3.4h2a9.59,9.59,0,0,0,9.59-9.59V45.59A9.59,9.59,0,0,0,116.41,36h0A9.59,9.59,0,0,0,108.24,40.57Z"/></svg>
'''
'''--- src/frontend/public/man.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 340 856" style="enable-background:new 0 0 340 856;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#1D1611;}
	.st1{fill:#5D5B59;}
	.st2{fill:#747474;}
	.st3{fill:#1D1D1B;}
	.st4{fill:#F7A379;}
	.st5{opacity:0.3;fill:#F7A379;enable-background:new    ;}
	.st6{opacity:0.2;fill:#F7A379;enable-background:new    ;}
	.st7{fill:#1EBF8C;}
	.st8{opacity:0.2;fill:#20541D;enable-background:new    ;}
	.st9{fill:#164514;}
	.st10{fill:#E6E7E8;}
	.st11{fill:#AAAAAA;}
	.st12{fill:#1D1D1B;stroke:#C3B398;stroke-width:0.8095;stroke-miterlimit:10;}
	.st13{fill:#2A2A2B;}
	.st14{fill:#F7F7F7;}
	.st15{fill:#F7AD8D;}
	.st16{fill:#946446;}
	.st17{opacity:0.4;fill:#E08C68;enable-background:new    ;}
	.st18{fill:#CE866F;}
	.st19{fill:#F0EEEE;}
	.st20{fill:#607138;}
	.st21{fill:#18100E;}
	.st22{fill:#EEEAEA;}
	.st23{fill:#E4806A;}
	.st24{fill:#402119;}
	.st25{fill:#422B20;}
	.st26{fill:#231F20;}
	.st27{fill:#58595B;}
	.st28{fill:none;stroke:#422B20;stroke-width:0.4652;stroke-linecap:round;stroke-miterlimit:10;}
</style>
<path id="XMLID_1605_" class="st0" d="M217.5,774.3c0,0-2.1,15.8-2.2,19.2c-0.1,3.4-1.9,11.4-1.9,11.4s-2.3,11.4-0.7,15.6
	c1.6,4.2,9.8,13.5,16.2,15.4s21.7,0.9,23.9-0.1c4.8-2.2,4.2-10.6,4.3-17.9c0-7.3-3.4-11.6-8.8-18.9c-5.4-7.3-7.3-24.5-7.3-24.5
	L217.5,774.3z"/>
<path id="XMLID_1604_" class="st1" d="M217.7,770.3c0,0-2.1,15.9-2.2,19.2c-0.1,3.4-1.9,11.4-1.9,11.4s-2.3,11.4-0.7,15.6
	c1.6,4.2,9.8,13.5,16.2,15.4s21.7,0.9,23.9-0.1c4.8-2.2,4.2-10.5,4.3-17.8c0-7.3-3.4-11.6-8.8-19c-5.4-7.3-7.3-24.5-7.3-24.5
	L217.7,770.3z"/>
<path id="XMLID_1603_" class="st2" d="M220.6,771.4c0,0-1.8,13.4-1.8,16.2s-1.6,9.6-1.6,9.6s-2,9.6-0.6,13.2
	c1.3,3.5,8.2,11.3,13.6,13c5.4,1.6,18.3,0.7,20.1-0.1c4.1-1.9,3.6-8.9,3.6-15c0.1-6.2-2.9-9.8-7.4-16c-4.5-6.1-6.1-20.6-6.1-20.6
	L220.6,771.4z"/>
<path id="XMLID_3_" class="st0" d="M142.3,774.3c0,0,2.1,15.8,2.2,19.2c0.1,3.4,1.9,11.4,1.9,11.4s2.3,11.4,0.7,15.6
	c-1.6,4.2-9.8,13.5-16.2,15.4c-6.4,1.9-21.7,0.9-23.9-0.1c-4.8-2.2-4.2-10.6-4.3-17.9c0-7.3,3.5-11.6,8.8-18.9
	c5.4-7.3,7.3-24.5,7.3-24.5L142.3,774.3z"/>
<path id="XMLID_2_" class="st1" d="M142.1,770.3c0,0,2.1,15.9,2.2,19.2c0.1,3.4,1.9,11.4,1.9,11.4s2.3,11.4,0.7,15.6
	c-1.6,4.2-9.8,13.5-16.2,15.4c-6.4,1.9-21.7,0.9-23.9-0.1c-4.8-2.2-4.2-10.5-4.3-17.8c0-7.3,3.4-11.6,8.8-19
	c5.4-7.3,7.3-24.5,7.3-24.5L142.1,770.3z"/>
<path id="XMLID_1_" class="st2" d="M139.2,771.4c0,0,1.8,13.4,1.8,16.2s1.6,9.6,1.6,9.6s2,9.6,0.6,13.2c-1.3,3.5-8.2,11.3-13.6,13
	c-5.4,1.6-18.3,0.7-20.1-0.1c-4.1-1.9-3.6-8.9-3.6-15c-0.1-6.2,2.9-9.8,7.4-16c4.5-6.1,6.1-20.6,6.1-20.6L139.2,771.4z"/>
<path class="st3" d="M81.6,602c67-5.5,147.1,0,163.7,3c16.6,3,16.1-75.5,11-111.5c-5.1-35.9-18.7-228.1-15-257.1
	c3.6-29-112.5-84.5-117.6-31.8s-30.8,189.3-36.9,241C80.6,497.2,81.6,602,81.6,602z"/>
<path class="st4" d="M167.4,108.5c1.3,12.4,2.5,47.9,0,55.3c-2.5,7.4-24.7,12.9-33.3,14.5c-7.2,1.3,15.8,53.3,38.9,56.1
	c72.2,8.6,59.1-50.8,58.3-59.8c0,0-8.3-1.6-23.4-8.8c-4.9-2.3-8.4-32.1-8.2-42.2C199.9,113.4,167.4,108.5,167.4,108.5z"/>
<path class="st5" d="M202.3,150.2c-1.7-9.6-2.8-21.2-2.7-26.7c0.2-10.1-32.3-15-32.3-15c1.3,12.4,2.5,47.9,0,55.3
	c0,0.1-0.1,0.2-0.2,0.3C184.8,163.7,195.7,158,202.3,150.2z"/>
<path class="st4" d="M271.3,501.3c2.8-2.7,4.5-4.3,5.5-9.1c1-4.8,0.4-15.1-1.3-16.1c-1.6-1-0.1,8.1-0.1,10.4
	c-0.1,2.2-1.7,8.8-3.9,9.7c-2.1,0.9-3.6-1.9-4.3-6.7c-0.7-4.8-1.3-8-1.4-12.6c-0.1-4.7-2.6-14.9-0.1-20.3c2.4-5.4,4.2-9.8,3.8-14.2
	c-0.5-4.4,18-3.5,18-3.5c1.1,4.6,5.8,29.1,6.6,32.2c0.8,3-1.7,21.3-6.7,25.1c-5,3.8-13.9,13.8-16.9,13
	C267.6,508.4,268.5,504,271.3,501.3z"/>
<path class="st6" d="M277.9,500.8c1.4-1.9,3.6-4.2,4.4-6.4c0.4-1.2,0.2-2.6,0.3-3.9c0.2-1.3,0.6-2.6,0.9-3.8
	c0.7-2.6,1.7-5.1,2.5-7.7c0.9-3.3-0.8-4.2-3-6.1c-2.5-2.3-2.7-4.6-3.6-7.8c-1.7-5.9-2.8-12.3-2.2-18.5c0.2-1.6,0.8-3,1.3-4.6
	c0.4-1.1,0.6-2.1,1-3.1c4.1-0.2,7.9,0,7.9,0c1.1,4.6,5.8,29.1,6.6,32.2c0.8,3-1.7,21.3-6.7,25.1c-3.7,2.8-9.4,8.9-13.4,11.6
	C274.5,505.2,276.5,502.7,277.9,500.8z"/>
<path class="st5" d="M275.9,476.7c-0.1-0.2-0.3-0.4-0.4-0.5c-1.6-1-0.1,8.1-0.1,10.4c-0.1,2.2-1.7,8.8-3.9,9.7
	c-0.1,0.1-0.2,0.1-0.4,0.1c0.6-1.3,0.9-2.5,1.1-4.2c0.2-2.2,0.6-4.7-0.8-6.7c-0.6-1-1.2-1.4-1.3-2.7c-0.2-1.3,0-2.4,0.4-3.6
	c0.7-2.1,1.2-4.1,1.6-6.2c0.3-1.6,0.9-5.8,2.7-5.6c1.3,2.1,1.2,4.8,1.1,7.2C275.9,475.3,275.9,476,275.9,476.7z"/>
<path class="st7" d="M118.5,387.9c-10.9,22.4-17.7,46.3-15.5,68.6c2.2,22.3,3.1,168.6,3.1,180s4.9,156,4.9,156s31.2,9.9,33.8,0
	c11.4-43.2,10.4-128.3,11.8-136.4c2.9-16.6,18.2-167.5,22.9-167.5s21.1,165.9,21.7,178.2c1,20.7,9.1,127.1,9.1,127.1
	s32.2-0.2,35.2-3.1c1.3-1.2-0.1-119.6,0.3-130.5c0.5-10.9,3.2-237.9,0.6-249c-10.4-44.8-70.3-34.9-70.3-34.9L118.5,387.9z"/>
<path class="st8" d="M179.5,488.7c0,0,21.1,165.9,21.7,178.2c1,20.7,9.1,127.1,9.1,127.1s32.2-0.2,35.2-3.1
	c1.3-1.2-0.1-119.6,0.3-130.5c0.5-10.9,3.2-237.9,0.6-249c-10.4-44.8-70.3-34.9-70.3-34.9L179.5,488.7z"/>
<g>
	<path class="st9" d="M103.8,448.2c-0.5,0-1.1-0.3-1.3-0.8c-0.3-0.7,0-1.6,0.7-1.9c8.4-3.8,20.6-10.1,28.8-21.8
		c0.5-0.6,1.3-0.8,2-0.3c0.6,0.5,0.8,1.3,0.3,2c-8.7,12.2-21.2,18.9-30,22.8C104.2,448.2,104,448.2,103.8,448.2z"/>
</g>
<path class="st10" d="M211,170.8c7.4,4.3,38.9,13.5,42.3,22s-5.5,87.4-8.2,94.9s-1,89.9-3.4,94.6c-2.4,4.6-98,16.3-119.8,8.6
	c-11-3.9-3.6-11.1-3.6-16c0-5-2.8-150.7-3.8-154.6c-0.9-3.9-12.7-22.3-8.4-26.2c4.4-3.9,55.1-19.8,55.1-19.8l23.7,47.9L211,170.8z"
	/>
<path class="st11" d="M187.9,226.6c0,1.3-0.9,2.4-2,2.4s-2-1.1-2-2.4c0-1.3,0.9-2.4,2-2.4C187,224.1,187.9,225.2,187.9,226.6z"/>
<path class="st11" d="M185.4,253.9c0,1.3-0.9,2.4-2,2.4s-2-1.1-2-2.4c0-1.3,0.9-2.4,2-2.4S185.4,252.6,185.4,253.9z"/>
<path class="st11" d="M184.2,281.9c0,1.3-1.1,2.4-2.4,2.4c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4
	C183.1,279.5,184.2,280.6,184.2,281.9z"/>
<path class="st11" d="M183.4,313.9c0,1.3-1.1,2.4-2.4,2.4c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4
	C182.4,311.4,183.4,312.5,183.4,313.9z"/>
<path class="st11" d="M182,349.2c0,1.3-1.1,2.4-2.4,2.4c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4C180.9,346.8,182,347.9,182,349.2z"
	/>
<path class="st11" d="M182,376.7c0,1.3-1.1,2.4-2.4,2.4c-1.3,0-2.4-1.1-2.4-2.4s1.1-2.4,2.4-2.4C180.9,374.2,182,375.3,182,376.7z"
	/>
<path class="st3" d="M114.3,383.5c20,2.9,70.7,3.3,89.3-0.1c18.7-3.4,31.1-3.7,31.1-3.7l3.1,13.4c0,0,0.8,3.7-36,5.9
	c-36.9,2.2-80.9,0.2-87.5-2.2C107.7,394.4,114.3,383.5,114.3,383.5z"/>
<path class="st12" d="M195.3,397.2c0,1.1-0.8,2-1.8,2l-20.9,0.6c-1,0-1.9-0.8-1.9-1.9l-0.4-11.5c0-1.1,0.8-2,1.8-2l20.9-0.6
	c1,0,1.9,0.8,1.9,1.9L195.3,397.2z"/>
<path class="st3" d="M268.3,192.3c8.9,0,22.8,11,23.7,54.8c0.8,43.9,7.5,156.4,3.6,162.7s2.6,49.5-1.1,50.8c-3.8,1.3-25.4,0-29.6,0
	s-4.3-45.3-5.5-50.8c-2.5-11.4-5.4-118.7-6.3-122.5C252.3,283.5,268.3,192.3,268.3,192.3z"/>
<path class="st13" d="M233.2,174.5c17.4,10,35.1,17.8,35.1,17.8c1.7,5-7.4,65.2-10.8,72.7c-3.3,7.5-7.7,83.9-6.9,95.2
	c1.7,22.5,20.2,231.6,19.7,236.6c-0.4,5,0,9.1-25.8,12.9c-8.1,1.2-43.6,2.4-43.6,2.4c-4.2,0-0.2-248,3.7-285.5
	c5.4-52.1,8.7-148,8.7-154.6C213.3,165.4,233.2,174.5,233.2,174.5z"/>
<path class="st3" d="M201.3,143.4c3.8,4.6,27.3,27.8,31.9,31.1c4.6,3.3,12.1,27.2,12.1,27.2l-29.3-7.6l26.9,30.1
	c0,0-38.1,132.9-41,142.5c0,0,8.6-169.2,9.7-180.5c1.2-12-9.2-16.6-9.2-16.6L201.3,143.4z"/>
<path class="st13" d="M135.1,174.5c-17.4,10-35.1,20.1-35.1,20.1c-1.7,5,3,68,6.4,75.5c3.3,7.5,4,37.9-2.5,53.5
	c-4.5,10.4-60.4,265.3-60,270.3s22.3,10.4,30.2,12.5s25.5,2.9,25.5,2.9c4.2,0,4.1-109.8,1.4-138.5c-5.4-58.7,14.1-78.8,17-110.6
	c6.4-69.8,29.9-181,34.9-191.9C155.7,162.2,135.1,174.5,135.1,174.5z"/>
<path class="st3" d="M170,147.1c-3.8,4.6-37.5,27.8-42.1,31.1s-13.5,25.6-13.5,25.6l27-2.6l-29.2,28.4c0,0,3.4,125,6.3,134.6
	c0,0,31.7-173.3,33.4-184.5c0.8-5,15.4-8.9,15.4-8.9L170,147.1z"/>
<path class="st13" d="M295.6,409.8c-1.9,1.2-34,3.3-37.8,0.5c-2.7-2,0.6,11.6,0.6,14.5s1.9,4.5,6.4,5.1c7.2,1,30.2,0.8,32.2-2.3
	C298.1,426.1,297.5,408.6,295.6,409.8z"/>
<path class="st4" d="M75.5,354.9c6,18.1,18.1,49.4,20.6,55.8s6.4,12.4,7.1,18.1s2.5,17.1,2.5,17.1s23.5-13.6,24.2-18.6
	c0,0-0.9-8.2-5.7-9.2c-5.7-1.2-4.6-9-5.7-12.5c-0.3-0.9-13.6-44.5-14.9-50.7c-1.8-8.2-9.6-32.7-20.6-22.7
	C69.5,344.3,75.5,354.9,75.5,354.9z"/>
<path class="st3" d="M99.9,194.6c-6.5-3.1-16.7,3.8-21.6,22.4c-4.9,18.6-23.5,126.2-17.7,133.6c5.7,7.4,30.1,62.5,31.3,67.8
	c1.1,5.3,2.7,6.2,11.9,0s18.4-10.5,21.1-12.9c2.3-2.1-5.4-11.7-6.4-17.6s-14.8-50.8-17.5-53.4c-2.7-2.7,10.3-58.6,10.3-66.4
	C111.4,222.6,99.9,194.6,99.9,194.6z"/>
<path class="st13" d="M82.1,399.6c1.6-1.9,31.4-15.3,36.3-14.3c3.6,0.7-1.7-12.1-2.8-14.8c-1.1-2.7-3.6-3.4-8.5-2.2
	c-7.9,2-31.9,11.4-33,15.2C73.7,385.4,80.6,401.5,82.1,399.6z"/>
<path class="st3" d="M218.5,327.9c0,3.4-2.1,6.1-4.7,6.1c-2.6,0-4.7-2.7-4.7-6.1s2.1-6.1,4.7-6.1S218.5,324.6,218.5,327.9z"/>
<path class="st3" d="M218.5,374.2c0,3.4-2.1,6.1-4.7,6.1c-2.6,0-4.7-2.7-4.7-6.1s2.1-6.1,4.7-6.1S218.5,370.8,218.5,374.2z"/>
<path class="st3" d="M218.5,416.7c0,3.4-2.1,6.1-4.7,6.1c-2.6,0-4.7-2.7-4.7-6.1s2.1-6.1,4.7-6.1S218.5,413.3,218.5,416.7z"/>
<path class="st3" d="M218.5,459.6c0,3.4-2.1,6.1-4.7,6.1c-2.6,0-4.7-2.7-4.7-6.1s2.1-6.1,4.7-6.1S218.5,456.2,218.5,459.6z"/>
<polygon class="st10" points="169.3,153.9 157,164.1 156.5,175 167.3,170.8 "/>
<polygon class="st14" points="157,164.1 165.9,172.7 184.9,222.1 162.9,179 153.2,192.3 148.8,176.6 "/>
<polygon class="st10" points="201.7,153.1 212.9,164.1 212.4,176.6 202.3,169.6 "/>
<polygon class="st14" points="212.9,164.1 204.1,172.7 185.1,222.1 207.1,179 211.2,190.9 217,175 "/>
<g>
	<g id="ears_20_">
		<path id="XMLID_1593_" class="st15" d="M152.1,91.9l2.2,18.1c0,0-0.9,1.7-3.6,1.8c-2.7,0.1-7.6-9-7.6-9s-4.2-10-0.2-13
			C147.2,86.6,152.1,91.9,152.1,91.9z"/>
		<path id="XMLID_1592_" class="st15" d="M216.1,92.2l-1,18.2c0,0,1,1.7,3.7,1.6s7-9.6,7-9.6s3.6-10.3-0.6-13
			C220.7,86.6,216.1,92.2,216.1,92.2z"/>
	</g>
	<path id="head_30_" class="st15" d="M146.1,65.9c0,0,5,52.5,9.6,58.7c4.6,6.2,14.7,20.9,20.3,23.4c5.5,2.5,11.7,2.8,17.8,0.3
		c6.2-2.5,17.1-16.4,21.4-22.1c5.3-6.9,6.8-66.9,6.8-62.3c0,0-4.2-29.1-39-28C152.5,36.9,146.1,65.9,146.1,65.9z"/>
	<path id="beard" class="st16" d="M209.4,117.9c-4.7,1.2-1.4-8-24.6-7.2c-23.2,0.9-19.2,10.4-26.4,8.2c-5.6-1.7-11.5-31.9-11.5-31.9
		s3.7,31.7,7.3,41.6c4.1,11.5,19.1,29.2,31.3,28.8s28.5-18,31.9-29.7c2.5-8.6,2.9-35.7,2.9-35.7S214,116.7,209.4,117.9z
		 M185.1,133.1c-10.7,0.7-13.8-10.5-13.8-10.5s2.7-5.9,12.7-5.9c12.6-1.2,14.8,5.9,14.8,5.9S195.9,132.5,185.1,133.1z"/>
	<g id="hair_51_">
		<path id="XMLID_1572_" class="st16" d="M225,57.6c-2.6-15.3-19.2-33.2-50.2-28.3c-13.5,2.1-11.2,10.2-15.5,11.5
			c-3.3,1-4.9-1.4-8.6,1.1c-6.7,4.7-8.3,14-8.6,16.7c-1.3,13.2,5.5,37.9,6.1,40.4c0.2,0.7,1.1,0.2,1.1,0.2c-2-14-1-32.5,8.1-41.4
			c13.3-16.4,44.9-13.6,55.4-0.3c7.9,7.2,8.1,30.2,6,40.4c0,0,1.2,0.2,1.3-0.6C220.8,90.2,227.2,70.8,225,57.6z"/>
	</g>
	<g id="face_19_">
		<path id="nose_30_" class="st17" d="M179.3,100.2c0,0-1.5,6.1-0.6,8.4s12.2,1.4,13.4,0c1.1-1.3-0.7-8.4-0.7-8.4s0.7,5.2-0.9,6.7
			c-1.6,1.4-9.1,1-10-0.2C179.5,105.4,179.3,100.2,179.3,100.2z"/>
		<g id="lips_31_">
			<path id="XMLID_1571_" class="st18" d="M174.9,120.7c5,4.4,14.2,4.8,20.8-0.1c0,0-5.2,0.8-10.6,0.9
				C178.7,121.5,174.9,120.7,174.9,120.7z"/>
			<path id="XMLID_1570_" class="st18" d="M181.3,127.3c2.5,0.7,4.8,0.7,7.7,0c0,0-1.2,2-3.9,2C182.4,129.3,181.3,127.3,181.3,127.3
				z"/>
		</g>
		<g id="left_49_">
			<path id="XMLID_1569_" class="st19" d="M205.3,87.7c5.3,0.7,8,4.2,8,4.2s0.4,0.7-9.1,1.7c-7.8,0-9.9-0.5-9.9-1.1
				C194.3,91,198.7,86.8,205.3,87.7z"/>
			<path id="XMLID_1568_" class="st20" d="M200,89.7c0.2-2,1.9-3.6,4-3.5s3.8,1.9,3.6,3.9c-0.1,2.1-1.9,3.6-4,3.5
				S199.9,91.7,200,89.7z"/>
			<path id="XMLID_1567_" class="st21" d="M201.1,89.8c0.1-1.5,1.4-2.6,2.8-2.5c1.6,0.1,2.6,1.3,2.5,2.8s-1.4,2.6-2.8,2.5
				C202.1,92.4,201,91.2,201.1,89.8z"/>
			<path id="XMLID_1566_" class="st22" d="M200,88.6c0.1-0.6,0.6-1.1,1.2-1c0.6,0,1.1,0.5,1,1.1c0,0.6-0.5,1-1.2,1
				C200.4,89.7,199.9,89.2,200,88.6z"/>
			<path id="XMLID_1565_" class="st23" d="M204.6,85.1c-11.1-0.1-10.3,7.4-10.3,7.4s3-5.4,10.8-5.2c4.7,0.2,8.3,4.5,8.3,4.5
				S212.9,85.1,204.6,85.1z"/>
			<path id="XMLID_1564_" class="st24" d="M204.6,86.7c-9.6-0.5-10.3,5.8-10.3,5.8s3.7-5.5,10.4-4.6c6.2,0.8,8.6,4,8.6,4
				S212.8,87.1,204.6,86.7z"/>
		</g>
		<g id="right_67_">
			<path id="XMLID_1563_" class="st19" d="M164.1,88.1c-5.3,0.5-8,4.2-8,4.2s0.2,1.2,9,1.9c8.5,0.2,10-0.7,10-1.3
				C175.1,90.8,169.4,87.6,164.1,88.1z"/>
			<path id="XMLID_1562_" class="st20" d="M169.5,90.1c-0.1-2-1.9-3.6-4-3.5s-3.7,1.9-3.6,3.9c0.1,2,1.9,3.6,4.1,3.5
				C168,93.9,169.6,92.2,169.5,90.1z"/>
			<path id="XMLID_1561_" class="st21" d="M168.4,90.2c-0.1-1.4-1.4-2.6-2.9-2.5s-2.6,1.3-2.5,2.8s1.3,2.6,2.8,2.5
				S168.4,91.6,168.4,90.2z"/>
			<path id="XMLID_1560_" class="st22" d="M163.8,89.2c0-0.6-0.6-1.1-1.2-1c-0.6,0-1.1,0.5-1.1,1.1s0.6,1.1,1.2,1
				C163.4,90.3,163.9,89.8,163.8,89.2z"/>
			<path id="XMLID_1559_" class="st23" d="M165.2,85.7c10.5-0.4,10,7.3,10,7.3s-3-5.4-10.8-5.1c-4.7,0.2-8.3,4.5-8.3,4.5
				S156.1,86.1,165.2,85.7z"/>
			<path id="XMLID_1558_" class="st24" d="M165.2,87.3c9.6,0,10,5.7,10,5.7s-3.5-5.1-10.4-4.7c-6.2,0.4-8.6,4-8.6,4
				S156.8,87.3,165.2,87.3z"/>
		</g>
		<g id="eyebrows_30_">
			<path id="XMLID_1557_" class="st16" d="M193.7,83.4c8.6-0.4,24.5-0.7,24.5-0.7s-0.8-6.3-4.6-7s-21.1-0.7-22,0.5
				C191,77.3,192.1,83.5,193.7,83.4z"/>
			<path id="XMLID_1556_" class="st16" d="M176.7,83.5c-9.9-0.5-25.7-0.7-25.7-0.7s0.9-6.3,4.6-7c3.8-0.7,20.9-1,21.7,0.2
				C178.2,77.2,178.3,83.6,176.7,83.5z"/>
		</g>
	</g>
	<g>
		<path class="st25" d="M216.1,94.9c-0.3,0-0.6-0.2-0.8-0.5c-0.3-0.5-0.2-1.1,0.3-1.4l5.3-3.4c0.5-0.3,1.1-0.2,1.4,0.3
			c0.3,0.5,0.2,1.1-0.3,1.4l-5.3,3.4C216.5,94.8,216.3,94.9,216.1,94.9z"/>
	</g>
	<g>
		<path class="st25" d="M154.2,94.6c-0.1,0-0.3,0-0.4-0.1l-8.3-4c-0.5-0.2-0.7-0.8-0.5-1.3s0.8-0.7,1.3-0.5l8.3,4
			c0.5,0.2,0.7,0.8,0.5,1.3C154.9,94.4,154.5,94.6,154.2,94.6z"/>
	</g>
	<g>
		<path class="st26" d="M179.5,95.2c0,7.2-5.9,13.1-13.1,13.1c-7.2,0-13.1-5.8-13.1-13.1c0-7.2,5.9-13.1,13.1-13.1
			C173.6,82.2,179.5,88,179.5,95.2z"/>
		<path class="st26" d="M217,95.2c0,7.2-5.8,13.1-13.1,13.1c-7.2,0-13-5.8-13-13.1c0-7.2,5.8-13.1,13-13.1
			C211.2,82.2,217,88,217,95.2z"/>
		<g>
			<path class="st27" d="M166.4,82.2c-1.1,0-2.2,0.2-3.3,0.5l-7.8,19.5c1,1.6,2.2,2.9,3.7,3.9l9.5-23.7
				C167.8,82.3,167.1,82.2,166.4,82.2z"/>
			<path class="st27" d="M171,83l-9.7,24.2c1.6,0.7,3.3,1,5.1,1c0.9,0,1.8-0.1,2.7-0.3l8.1-20.1C175.7,85.7,173.5,84,171,83z"/>
		</g>
		<g>
			<path class="st27" d="M208.6,83.1l-9.7,24.2c1.6,0.7,3.3,1,5.1,1c0.9,0,1.8-0.1,2.7-0.3l8.1-20.1C213.3,85.7,211.1,84,208.6,83.1
				z"/>
			<path class="st27" d="M204,82.2c-1.1,0-2.2,0.2-3.3,0.5l-7.8,19.4c1,1.6,2.2,2.9,3.7,4l9.5-23.7C205.4,82.3,204.7,82.2,204,82.2z
				"/>
		</g>
		<path class="st28" d="M179.5,95.2c0,7.2-5.9,13.1-13.1,13.1c-7.2,0-13.1-5.8-13.1-13.1c0-7.2,5.9-13.1,13.1-13.1
			C173.6,82.2,179.5,88,179.5,95.2z"/>
		<path class="st28" d="M217,95.2c0,7.2-5.8,13.1-13.1,13.1c-7.2,0-13-5.8-13-13.1c0-7.2,5.8-13.1,13-13.1
			C211.2,82.2,217,88,217,95.2z"/>
		<g>
			<path class="st25" d="M190.6,98.8c-0.3,0-0.6-0.3-0.6-0.6c0-3.1-2.2-5.7-4.8-5.7c-2.7,0-4.8,2.6-4.8,5.7c0,0.3-0.3,0.6-0.6,0.6
				s-0.6-0.3-0.6-0.6c0-3.8,2.7-6.8,6-6.8s6,3.1,6,6.8C191.1,98.6,190.9,98.8,190.6,98.8z"/>
		</g>
		<g>
			<path class="st25" d="M152.5,98c-0.4,0-0.6-0.3-0.6-0.6v-4.6c0-0.4,0.3-0.6,0.6-0.6s0.6,0.3,0.6,0.6v4.6
				C153.2,97.7,152.9,98,152.5,98z"/>
		</g>
		<g>
			<path class="st25" d="M217.8,98c-0.4,0-0.6-0.3-0.6-0.6v-4.6c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v4.6
				C218.4,97.7,218.1,98,217.8,98z"/>
		</g>
	</g>
</g>
<path class="st16" d="M221,61.4c-1.3-11.2-8.4-21.2-20-23.3c-5.9-1-12.2-0.9-18,0.1c-3.3,0.6-7.2,1.3-10,3.3
	c-1.6,1.2-2.9,2.7-1.4,5.9c1.8,2.6,7.2,4.7,10.1,5.6c4,1.2,8.4,0.8,12.5,1.8c2.3,0.6,4.6,1.8,6.8,2.4c-0.1-1.5-1.6-3.1-2.1-4.7
	c1.3,0,2.2,1.1,3.2,1.9c1.9,1.5,4.3,2.4,6.1,4.1c2.8,2.6,5.5,6.5,6.6,10.2c0.5-0.7,0.7-1.8,1.2-2.6c1,3.3,1.8,6.9,2.7,10.3
	c0.7,3,0.6,6.5,1.6,9.3c0-1.2,0.6-2.3,0.8-3.4c0.4-2,0.3-4.2,0.4-6.2C221.7,71,221.5,66.4,221,61.4z"/>
<path class="st16" d="M166.6,43.7c-4,2.3-7.1,6.1-10.3,9.3c-2.2,2.3-5.1,4.6-6.7,7.4c-1.3,2.3-2.5,5.3-3.4,7.8
	c-1.4,4.1-1.2,9.1-0.4,13.3c0.8,4.1,1.1,8.3,1.9,12.4c0.4,2.3,0.8,4.5,1.2,6.8c0.5,2.4,0.6,5.3,2.6,7.1c-2.8-28.3-1.8-34.7-0.1-37.8
	c0,0.8,0.3,1.6,0.7,2.2c1.9-6.7,7.3-8.2,11.5-16.3c-0.6,2.5-0.5,6.2,0.1,8.6c0.8-4.6,4.2-7,7.1-10.4c1.7-2.1,5.4-9.5,6.2-10.4
	C176.1,40,168.2,42.7,166.6,43.7z"/>
</svg>

'''
'''--- src/frontend/public/manifest.json ---
{
  "short_name": "NearAcademy",
  "name": "NearAcademy",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "black",
  "background_color": "black"
}

'''
'''--- src/frontend/public/museum_exterior_1.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 5000 3609.1" style="enable-background:new 0 0 5000 3609.1;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#0072CE;}
	.st1{fill:#5698D8;}
	.st2{fill:url(#SVGID_1_);}
	.st3{fill:#B6D2F6;}
	.st4{fill:url(#SVGID_2_);}
	.st5{fill:#65A6DB;}
	.st6{fill:#7FB2E5;}
	.st7{fill:#8FC1EA;}
	.st8{fill:#A2CEED;}
	.st9{fill:#C5E1FF;}
	.st10{fill:#FFFFFF;}
	.st11{fill:url(#SVGID_3_);}
	.st12{fill:url(#SVGID_4_);}
	.st13{fill:#014AA8;}
	.st14{fill:#4E96D1;}
	.st15{fill:#2886C6;}
	.st16{fill:#3E8CCC;}
	.st17{fill:#348BD1;}
	.st18{fill:#3A8ACC;}
	.st19{fill:#388ACE;}
	.st20{fill:#3064D8;}
	.st21{fill:#D9E8FB;}
	.st22{fill:#6BA8DB;}
	.st23{fill:url(#SVGID_5_);}
	.st24{fill:url(#SVGID_6_);}
	.st25{fill:url(#SVGID_7_);}
</style>
<g id="white_background">
</g>
<g>
	<rect x="2400.5" y="930.8" class="st0" width="1031.2" height="417"/>
	<path class="st1" d="M2354.4,994.7h680.3c-76.3-142.1-151.4-279.8-231-424.8c-39-71-84-151.9-164.5-243.8
		c-47.4-54.1-91.9-94.7-124.2-121.9c-26.7-17.5-57.7-30-88.6-23.4c-97.9,21-127.1,219.2-154.3,403.7C2248,748,2261.3,820.9,2285,880
		C2305.7,931.5,2333.3,969.7,2354.4,994.7z"/>
	
		<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="25960.0781" y1="-5001.6738" x2="26663.0547" y2="-5001.6738" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#7BBBF3"/>
	</linearGradient>
	<path class="st2" d="M2293.1,881.1c7.2,23.3,16.9,37.7,29.7,47.3c14.9,11.2,33.3,15.6,47.3,18.9c13.1,3.1,24.3,4.4,32.3,4.9
		c131.2-0.7,262.3-1.4,393.5-2.1c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2
		c-6.8-4.6-27.2-18.2-56.8-28.4c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7
		c-13.8,30.3-31.2,73-46,125.7c-4.9,17.7-9,37.7-12.9,62.9c-6,38.7-11.6,89.3-19.6,161.5C2283.4,698.5,2271.6,811.5,2293.1,881.1z"
		/>
	<path class="st0" d="M2304.6,522.3c15.1-65.3,57-112.4,106.1-119.6c38.7-5.7,71,15,85.2,24.3c59.9,39.6,289.4,503.1,300,523.2
		c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2c-6.8-4.6-27.2-18.2-56.8-28.4
		c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7c-13.8,30.3-31.2,73-46,125.7
		C2312.5,477.1,2308.5,497.2,2304.6,522.3z"/>
	<path class="st3" d="M3829.9,710.8c19.2,10.8,36.1,28.9,36.1,28.9c36.3,38.8,43.7,85.6,49.1,119.1c3.4,21.6,6.9,57.6,0,101.4
		c-4.9,31-11.5,73.3-42.6,115.6c-24.5,33.3-54.4,53.2-77,64.9c-14.2,4.7-28.4,9.5-42.6,14.2c-152.6-2-305.3-4-457.9-6
		C3342.7,1097.2,3746.7,663.9,3829.9,710.8z"/>
	<path class="st0" d="M3416.3,1144.7c46.4,0.9,94.5,0.9,143.9,0c53.8-1,105.9-3.1,156.1-6.1c18-2.5,52.3-9.9,87.2-34.5
		c7.9-5.6,40.1-29.2,62.9-73c33.4-64.4,23-127.1,16.2-168.3c-5.7-34.3-14.4-52.3-26.4-77c-13.1-27-21.4-34.7-30.4-38.5
		c-10.2-4.3-23.1-4.7-50.7,6.1c-21.2,8.3-53.2,24-87.2,54.7C3597.4,920.3,3506.9,1032.5,3416.3,1144.7z"/>
	
		<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="25201.6895" y1="-4659.8975" x2="25599.9668" y2="-4659.8975" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#7BBBF3"/>
	</linearGradient>
	<path class="st4" d="M3508.2,1122.1l93-7.4c83.7-6.7,146.7-80.6,140-164.3l0,0c-6.7-83.7-80.6-146.7-164.3-140l-93,7.4
		c-83.7,6.7-146.7,80.6-140,164.3l0,0C3350.6,1065.8,3424.5,1128.8,3508.2,1122.1z"/>
	<path class="st3" d="M3035.2,1014.9c-211.3,0-422.6,0-633.9,0c-5.9-0.7-14.4-2-24.3-4.1c-15.3-3.2-37.5-7.8-55.4-17.6
		c-23.9-13-36.3-33.2-43.3-44.6c-37.8-61.6-33.7-189-32.4-221.7c3.2-84.2,7.8-85.5,31.1-301.4c0.9-8.5,4.1-37.8,13.5-75.7
		c11.1-44.4,20.6-81.2,48.7-117.6c15.1-19.6,36.5-47.4,74.3-58.1c32.2-9.1,59.7-1.2,82.4,5.4c13.4,3.9,52.4,17.1,96,56.8
		c91.8,83.6,153.3,239.2,163.5,265.6c6.9,18.9,13.8,37.8,20.7,56.7c-32.9-53.6-58.9-96.3-75.5-123.6c-32.3-53.2-45.6-76.8-71-109.5
		c-30.8-39.7-49.6-63.5-83.1-87.2c-38.4-27.1-66.5-33.1-85.2-34.5c-8.9-0.7-20.6-1.6-34.5,2c-18,4.7-42.4,17.6-71,64.9
		c-21.7,36-34.6,73.4-48.7,143.9c-11.8,59-17.4,106.4-20.3,133.8c-13.3,125.3,0.3,117.7-6.2,249.2c-0.6,11.7-2.3,45.3,12.2,83.3
		c5.6,14.7,12.7,32.4,29.7,47.3c27.4,23.9,61.6,23.8,72.7,23.2c195.9-0.8,391.8-1.6,587.7-2.5
		C3000.6,971.1,3017.9,993,3035.2,1014.9z"/>
	<path class="st1" d="M2650.1,303c1.1,2.3,2.5,5,4.1,8.1c3.8,7.5,8.7,17.4,14.9,29.6c31.6,62.8,94,186.9,180.9,358.9
		c116.7,230.9,177.5,347.6,298.8,408.6c27.6,13.9,90.2,44.4,174.4,40.6c28.6-1.3,88.5-7.9,150-44.6c54.4-32.4,83.4-72.4,133.8-141.9
		c64.1-88.4,93.3-137.9,93.3-137.9c11.1-18.8,22.3-39.1,44.6-60.8c29.7-29,62.1-44.3,85.2-52.7c-17.5-1.7-43.3-3.9-74.8-5.2
		c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5
		c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57
		c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4c-3.2-2.5-6.4-4.9-9.4-7.2
		C2654.5,306.4,2652.3,304.7,2650.1,303z"/>
	<path class="st5" d="M2650.1,303c1.5,2.6,2.9,5.1,4.4,7.7c4.5,7.9,9,15.8,13.4,23.6c3,5.3,6.1,10.6,9.1,15.9
		c5.2,9.2,10.5,18.3,15.7,27.4c90.9,158.6,173.7,298.8,247.3,424.5c23.5,40.2,86.8,148.5,200.7,206.8
		c59.3,30.3,106.3,33.8,123.7,34.5c57.9,2.2,101.3-14.8,129.8-26.4c66.6-27,108.1-65,150-103.4c28.2-25.9,94.9-90.9,131.8-137.9
		c5.3-6.7,22.2-28.7,50.7-50.7c11.8-9.1,22.1-15.6,28.6-19.4l0,0c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0
		c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8
		c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4
		C2666.7,313.9,2653.3,304.2,2650.1,303z"/>
	<path class="st6" d="M2669,340.7c1,1.2,2,2.4,3.1,3.7c1.5,1.8,3.1,3.7,4.9,5.8c16.2,19.3,40.8,48.5,74.4,95
		c5.6,7.8,10.8,15.1,15.7,22.2c67.5,97.2,74.9,133.7,164.7,261.6c49.6,70.6,83.7,111.3,131.8,150c65.2,52.6,110.3,64.7,129.8,68.9
		c47.5,10.3,86.6,4.3,113.5,0c60-9.7,102.4-31.8,137.9-50.7c10-5.3,47.2-31.3,121.6-83.1c28.3-19.7,51.5-36.1,79.1-62.9
		c18.8-18.2,33-34.9,42.5-46.8l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
		c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
		c-39.8-41.7-77.1-73.4-105.3-95.4c0.5-1.4-8.6-7.8-9.4-7.2c-1,0.7-1.8,1.6-2.5,2.5c-0.1,0.1-0.2,0.3-0.3,0.5
		c-0.1,0.1-0.1,0.2-0.2,0.3C2650.8,317.4,2655.7,324.6,2669,340.7z"/>
	<path class="st7" d="M2667.9,334.3c1.1,3.1,2.5,6.5,4.2,10.1c4.5,9.4,11.4,20.4,20.5,33.1c17,23.8,42,53.6,74.4,89.9
		c51.4,57.4,121.6,131.1,209.3,223.1c20.4,21.4,64.8,67.1,135.8,99.3c51.9,23.6,94.2,29.1,105.4,30.4c55,6.4,97.8-2.6,131.8-10.1
		c43.4-9.6,73.9-22.4,107.5-36.5c32.4-13.6,74.4-33.5,121.5-62.2c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
		c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
		c-39.8-41.7-77.1-73.4-105.3-95.4C2664.7,320.3,2665.2,326.6,2667.9,334.3z"/>
	<path class="st8" d="M2995.9,646.2c20.9,27.3,79.3,69.7,140.6,91c58,20.1,108,17.7,133.8,16.2c44.3-2.6,80.3-12.4,104.9-21
		c-107,7.6-204.7,5.1-303.6-41.8C3043.2,677.1,3017.6,661.3,2995.9,646.2z"/>
	<g>
		<ellipse class="st9" cx="2935" cy="1354.6" rx="720.7" ry="184.1"/>
		<ellipse class="st9" cx="2935" cy="1373" rx="717" ry="165.3"/>
	</g>
	<ellipse class="st1" cx="2958.7" cy="1447.9" rx="414.8" ry="175.8"/>
	<ellipse class="st9" cx="2958.7" cy="1497.9" rx="408.3" ry="144.6"/>
	<ellipse class="st1" cx="2958.7" cy="1617.5" rx="250.6" ry="119.6"/>
	<ellipse class="st7" cx="2958.7" cy="1667.6" rx="229.7" ry="69.6"/>
	<ellipse class="st1" cx="2958.7" cy="1823.2" rx="220.6" ry="119"/>
	<ellipse class="st10" cx="2958.7" cy="1863.5" rx="197.7" ry="60.4"/>
	<g>
		
			<radialGradient id="SVGID_3_" cx="27062.6797" cy="-4543.5977" r="170.166" fx="27012.0488" fy="-4594.481" gradientTransform="matrix(-1 0 0 1 28943.3789 5626.1475)" gradientUnits="userSpaceOnUse">
			<stop  offset="5.641030e-02" style="stop-color:#FFFFFF"/>
			<stop  offset="0.9949" style="stop-color:#0072CE"/>
		</radialGradient>
		<path class="st11" d="M2090.1,1199c0.8-7.3,1.2-14.8,1.2-22.3c0-116.3-94.3-210.6-210.6-210.6c-116.3,0-210.6,94.3-210.6,210.6
			c0,6.1,0.3,12.2,0.8,18.2L2090.1,1199z"/>
		<ellipse class="st1" cx="1880.6" cy="1234.3" rx="231.4" ry="88.2"/>
		<ellipse class="st10" cx="1880.6" cy="1243.1" rx="230.2" ry="79.2"/>
		<ellipse class="st1" cx="1880.6" cy="1282.2" rx="198.6" ry="84.1"/>
		<ellipse class="st10" cx="1880.6" cy="1306.2" rx="195.5" ry="69.2"/>
		<ellipse class="st1" cx="1880.6" cy="1363.4" rx="120" ry="57.3"/>
		<ellipse class="st10" cx="1880.6" cy="1387.4" rx="110" ry="33.3"/>
		<ellipse class="st1" cx="1880.6" cy="1461.9" rx="105.6" ry="57"/>
		<ellipse class="st10" cx="1880.6" cy="1481.2" rx="94.7" ry="28.9"/>
		<path class="st1" d="M1882.2,2197L1882.2,2197c10.6,0,19.3-30,19.3-66.5v-573.3c0-36.5-8.7-66.5-19.3-66.5l0,0
			c-10.6,0-19.3,30-19.3,66.5v573.3C1863,2167.4,1871.6,2197,1882.2,2197z"/>
	</g>
	
		<linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="2625.05" y1="-2926.3325" x2="2625.05" y2="-3266.3914" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st12" d="M1810,2615.9l419.8-16.8l246.4-187.2l848.1-9l123.1-84.1H2331.8c-176.4-20.3-352.7-40.7-529.1-61
		C1805.1,2377.2,1807.5,2496.6,1810,2615.9z"/>
	<rect x="1879.2" y="2255.7" class="st10" width="4.3" height="366.4"/>
	<rect x="2011.4" y="2281.2" class="st10" width="4.3" height="331.4"/>
	<rect x="2119.1" y="2290.4" class="st10" width="4.3" height="312.8"/>
	<rect x="2218.2" y="2311.6" class="st10" width="4.3" height="279"/>
	<rect x="2373.6" y="2311.6" class="st10" width="4.3" height="200.9"/>
	<rect x="3296.3" y="2301.8" class="st10" width="4.3" height="95"/>
	<rect x="3077.3" y="2311.6" class="st10" width="4.3" height="91.4"/>
	<rect x="2554.5" y="2344.4" class="st13" width="301" height="46.3"/>
	<path class="st10" d="M1804.2,2385c215,12,430,23.9,644.9,35.9l7.3-24.1l-651-48.5C1805.1,2360.6,1804.7,2372.8,1804.2,2385z"/>
	<path class="st1" d="M2220.3,2611.4c259.8,1.5,519.7,3,779.5,4.5c-0.4-8-0.8-16-1.2-24.1c-259.4-0.4-518.9-0.8-778.3-1.2
		C2220.3,2597.6,2220.3,2604.5,2220.3,2611.4z"/>
	<rect x="2248.5" y="2563.7" class="st1" width="798.3" height="26.9"/>
	<rect x="2270.5" y="2540.4" class="st1" width="808.9" height="23.3"/>
	<rect x="2296.2" y="2520.9" class="st1" width="829.7" height="19.6"/>
	<rect x="2317.8" y="2504.1" class="st1" width="876.6" height="16.7"/>
	<rect x="2344.8" y="2492.7" class="st14" width="883.2" height="11.4"/>
	<rect x="2375.8" y="2475.6" class="st15" width="843.2" height="17.1"/>
	<rect x="2393.7" y="2456.8" class="st16" width="843.6" height="18.8"/>
	<rect x="2413.3" y="2438.9" class="st14" width="844.4" height="17.9"/>
	<rect x="2432" y="2420.9" class="st17" width="866.4" height="17.9"/>
	<rect x="2449.2" y="2403" class="st18" width="875" height="17.9"/>
	<rect x="2467.1" y="2390.7" class="st19" width="857.1" height="12.2"/>
	<path class="st20" d="M2197.9,2578.7l-2.9-3.2l145.6-134.6h33.1c15.6-13.6,30.8-27.9,45.3-42.6c16.2-16.4,31.8-33.7,46.5-51.5
		l3.3,2.7c-14.8,17.8-30.5,35.2-46.7,51.7c-14.7,15-30.3,29.6-46.1,43.4l-0.6,0.5h-33L2197.9,2578.7z"/>
	
		<rect x="2340" y="2443.6" transform="matrix(1 -9.518689e-03 9.518689e-03 1 -23.4599 22.4064)" class="st20" width="4.3" height="64.3"/>
	<rect x="2466" y="2348.3" class="st20" width="4.3" height="57.5"/>
	<rect x="2203.5" y="2567.4" class="st20" width="4.3" height="48.5"/>
	<polygon class="st9" points="3895.7,1959.2 3736.6,2603.3 3035.7,2621.7 	"/>
	<path class="st21" d="M3431.9,2331.2c-132.1,96.8-264.1,193.7-396.2,290.5c-16.7,0.1-33.4,0.2-50.1,0.4
		c138.5-97,277.1-193.9,415.6-290.9H3431.9z"/>
	<polygon class="st0" points="3895.7,2602.9 3895.7,1959.2 3736.6,2603.3 	"/>
	<polygon class="st9" points="2296.2,1436.8 2296.2,2348.3 3431.9,2331.2 3895.7,1959.2 	"/>
	<path class="st0" d="M3606.4,2196.9l-1172.7-172.7c-8.4-1.2-15.2-6-15.2-10.5v-349.1c0-4.5,6.9-6.4,15.2-4.1l1172.7,310.8
		c3.3,0.8,5.9,3.8,5.9,6.6v214.9C3612.2,2195.6,3609.6,2197.5,3606.4,2196.9z"/>
	<path class="st22" d="M1365.2,1892.6c0,6.8,0,712.1,0,712.1l425.6,14.1v-363.1l505.4,92.6v-911.5L1365.2,1892.6z"/>
	<path class="st21" d="M1816.9,2630.6c-10.9,2.7-21.8,5.4-32.6,8.1c2.2-127.7,4.4-255.4,6.5-383c8.7,1.6,17.4,3.2,26.1,4.8
		C1816.9,2383.8,1816.9,2507.2,1816.9,2630.6z"/>
	
		<linearGradient id="SVGID_5_" gradientUnits="userSpaceOnUse" x1="3249.2087" y1="-2836.8176" x2="4897.2114" y2="-3072.8181" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st23" d="M3819.6,2605.9l93.5-9.3c10.9-0.3,889.2,64.1,889.2,64.1l-48.4,14.9L3819.6,2605.9z"/>
	
		<linearGradient id="SVGID_6_" gradientUnits="userSpaceOnUse" x1="3248.4441" y1="-2842.1621" x2="4896.4419" y2="-3078.1616" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<path class="st24" d="M3633.6,2617.9l963.6,76.2l114.3-8.7c-313.5-23.7-627.1-47.5-940.6-71.2
		C3725.1,2615.5,3679.4,2616.7,3633.6,2617.9z"/>
	
		<linearGradient id="SVGID_7_" gradientUnits="userSpaceOnUse" x1="3246.854" y1="-2853.2629" x2="4894.8521" y2="-3089.2629" gradientTransform="matrix(1 0 0 1 0 5626.1475)">
		<stop  offset="0" style="stop-color:#FFFFFF"/>
		<stop  offset="1" style="stop-color:#5698D8"/>
	</linearGradient>
	<polygon class="st25" points="3430.3,2632.8 4388.5,2717.6 4501,2707.1 3557.4,2623.5 	"/>
	<polygon class="st9" points="4159.9,2740.6 4281.5,2727.6 3314.2,2636.1 3190.8,2645.8 	"/>
	<polygon class="st9" points="2938.5,2662.5 3875,2766.6 4025.6,2753.6 3067.4,2654.2 	"/>
	<polygon class="st9" points="3581,2801.9 3736.1,2783.3 2795.2,2675.5 2630,2688.3 	"/>
	<polygon class="st9" points="3430.3,2819.2 2520.6,2694.1 2336.7,2694.1 3248.9,2836.5 	"/>
	<path class="st9" d="M1991.9,2726.3c281.9,51.6,563.8,103.2,845.7,154.8l212.9-24.8l-861.4-138.7
		C2123.3,2720.5,2057.6,2723.4,1991.9,2726.3z"/>
	<polygon class="st9" points="1614.4,2749.8 1823.7,2739.9 2617.3,2898.5 2389.9,2933.1 	"/>
	<polygon class="st9" points="2087.4,2957.9 1804.3,2992.6 1197,2782 1397.8,2765.3 	"/>
	<g>
		<path class="st10" d="M2535.6,1815.5l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7V1853l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88l-8.7-1.7L2535.6,1815.5L2535.6,1815.5z"/>
		<path class="st10" d="M2669.9,1950v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2669.9,1950z"/>
		<path class="st10" d="M2752.8,1856.6l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2752.8,1856.6L2752.8,1856.6z"/>
		<path class="st10" d="M2875.9,1989v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2875.9,1989z"/>
		<path class="st10" d="M2998.2,1903l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
			l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2998.2,1903L2998.2,1903z"/>
		<path class="st10" d="M3168,2013v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
			c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
			c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3166.9,2022,3168,2018,3168,2013z"/>
		<path class="st10" d="M3251.4,1996.1l-8.1,0.9c-0.8-2.6-1.9-5-3.4-7.3s-3.4-4.2-5.7-5.8c-2.3-1.6-5.2-2.7-8.7-3.4
			c-5.2-1-9.4-0.5-12.7,1.5s-5,5.1-5,9.2c0,3.5,1.1,6.6,3.4,9.2c2.3,2.6,5.8,5,10.5,7.2l11.5,5.2c6.4,2.9,11.2,6.4,14.4,10.7
			c3.2,4.2,4.8,9.1,4.8,14.5c0,4.6-1.2,8.5-3.6,11.6c-2.4,3.1-5.7,5.3-10,6.6c-4.3,1.2-9.2,1.3-14.8,0.3c-7.4-1.4-13.6-4.4-18.4-8.9
			c-4.8-4.5-7.9-10.3-9.3-17.4l8.5-0.6c1.1,5.1,3.2,9.2,6.4,12.2c3.2,3.1,7.4,5.1,12.6,6.1c5.9,1.1,10.5,0.6,14-1.6
			c3.5-2.2,5.3-5.4,5.3-9.6c0-3.3-1-6.3-3.1-8.9s-5.2-4.9-9.3-6.7l-12.5-5.6c-6.6-3-11.5-6.6-14.7-10.9s-4.8-9.2-4.8-14.6
			c0-4.5,1.1-8.3,3.4-11.3c2.3-3,5.4-5.1,9.4-6.3c4-1.2,8.6-1.3,13.7-0.3c7,1.3,12.6,4.1,16.8,8.3
			C3246.5,1984.6,3249.5,1989.9,3251.4,1996.1z"/>
		<path class="st10" d="M3302.6,2071.4c-7.1-1.3-13.3-4.3-18.5-8.8c-5.2-4.6-9.2-10.3-12-17.1c-2.8-6.9-4.2-14.4-4.2-22.7
			c0-8.2,1.4-15.3,4.2-21.2c2.8-5.9,6.8-10.2,11.8-12.8c5-2.7,10.8-3.4,17.4-2.2c4.1,0.8,8.1,2.3,12,4.7c3.8,2.3,7.3,5.5,10.4,9.4
			c3.1,3.9,5.5,8.5,7.3,13.9s2.7,11.5,2.7,18.3v4.7l-59.6-11.3v-8.4l50.5,9.6c0-5.3-1-10.2-3-14.8c-2-4.6-4.7-8.4-8.2-11.5
			s-7.5-5.1-12.1-6c-4.8-0.9-9.1-0.3-12.8,1.7s-6.5,5.2-8.6,9.3s-3.1,8.9-3.2,14.3v5c0,6.5,1,12.4,3.2,17.6c2.1,5.2,5.1,9.6,9,13
			s8.5,5.6,13.8,6.6c3.6,0.7,6.8,0.7,9.5,0s5-1.9,6.9-3.6s3.3-3.7,4.2-5.9l8.4,4.5c-1.2,3.2-3.1,6-5.7,8.5c-2.6,2.4-5.9,4.1-9.8,5.1
			C3312.2,2072.4,3307.7,2072.4,3302.6,2071.4z"/>
		<path class="st10" d="M3401.4,2057.1v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
			c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
			c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3400.4,2066.2,3401.4,2062.1,3401.4,2057.1z"/>
		<path class="st10" d="M3433.6,2094.5v-81.8l8.6,1.6v12.6l0.8,0.2c1.5-3.9,4.1-6.8,7.6-8.5c3.6-1.8,7.8-2.2,12.8-1.2
			c5.3,1,9.6,3.1,13,6.4s5.9,7.4,7.6,12.3l0.6,0.1c1.7-4.2,4.5-7.3,8.4-9.2c3.9-1.9,8.6-2.4,14.2-1.3c7.1,1.3,12.7,4.8,16.8,10.3
			c4.1,5.6,6.2,12.9,6.2,22.1v54.8l-8.8-1.7v-54.8c0-6.5-1.5-11.6-4.6-15.4s-7.1-6.2-12.2-7.1c-5.8-1.1-10.3,0-13.5,3.2
			c-3.1,3.2-4.7,7.8-4.7,13.7v53.9l-9-1.7v-55.7c0-5.5-1.4-10.3-4.3-14.2c-2.9-4-6.9-6.4-12.2-7.4c-3.5-0.7-6.7-0.3-9.5,1
			s-5,3.5-6.6,6.4c-1.6,3-2.4,6.6-2.4,10.9v52.4L3433.6,2094.5z"/>
	</g>
</g>
</svg>

'''
'''--- src/frontend/public/museum_exterior_animated.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 5000 3609.1" style="enable-background:new 0 0 5000 3609.1;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#0072CE;}
	.st1{fill:#5698D8;}
	.st2{fill:url(#SVGID_1_);}
	.st3{fill:#B6D2F6;}
	.st4{fill:url(#SVGID_2_);}
	.st5{fill:#65A6DB;}
	.st6{fill:#7FB2E5;}
	.st7{fill:#8FC1EA;}
	.st8{fill:#A2CEED;}
	.st9{fill:#C5E1FF;}
	.st10{fill:#FFFFFF;}
	.st11{fill:url(#SVGID_3_);}
	.st12{fill:url(#SVGID_4_);}
	.st13{fill:#014AA8;}
	.st14{fill:#4E96D1;}
	.st15{fill:#2886C6;}
	.st16{fill:#3E8CCC;}
	.st17{fill:#348BD1;}
	.st18{fill:#3A8ACC;}
	.st19{fill:#388ACE;}
	.st20{fill:#3064D8;}
	.st21{fill:#D9E8FB;}
	.st22{fill:#6BA8DB;}
	.st23{fill:url(#SVGID_5_);}
	.st24{fill:url(#SVGID_6_);}
	.st25{fill:url(#SVGID_7_);}

	.memetext{
     	-webkit-animation: fadeinout 11s linear infinite;
    	animation: fadeinout 11s linear infinite;
    }

	@-webkit-keyframes fadeinout {
	  	0%,100% { opacity: 0; }
	  	50% { opacity: 1; }
	}

	@keyframes fadeinout {
	  0%,100% { opacity: 0; }
	  50% { opacity: 1; }
	}

    @keyframes move_wave {
        0% {
            transform: translateX(0) translateZ(0) scaleY(1)
        }
        50% {
            transform: translateX(-15%) translateZ(0) scaleY(0.55)
        }
        100% {
            transform: translateX(0) translateZ(0) scaleY(1)
        }
    }

	.tower {
		-webkit-animation: mover 7s infinite  alternate;
    	animation: mover 7s infinite  alternate;
	}

	@-webkit-keyframes mover {
    	0% { transform: translateY(0); }
    	100% { transform: translateY(-250px); }
	}
	@keyframes mover {
		0% { transform: translateY(0); }
		100% { transform: translateY(-250px); }
	}
</style>
<g id="white_background">
</g>
<rect x="2400.5" y="930.8" class="st0" width="1031.2" height="417"/>
<path class="st1" d="M2354.4,994.7h680.3c-76.3-142.1-151.4-279.8-231-424.8c-39-71-84-151.9-164.5-243.8
	c-47.4-54.1-91.9-94.7-124.2-121.9c-26.7-17.5-57.7-30-88.6-23.4c-97.9,21-127.1,219.2-154.3,403.7C2248,748,2261.3,820.9,2285,880
	C2305.7,931.5,2333.3,969.7,2354.4,994.7z"/>
<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="22326.0781" y1="5769.6738" x2="23029.0547" y2="5769.6738" gradientTransform="matrix(-1 0 0 -1 25309.3789 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#7BBBF3"/>
</linearGradient>
<path class="st2" d="M2293.1,881.1c7.2,23.3,16.9,37.7,29.7,47.3c14.9,11.2,33.3,15.6,47.3,18.9c13.1,3.1,24.3,4.4,32.3,4.9
	c131.2-0.7,262.3-1.4,393.5-2.1c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2
	c-6.8-4.6-27.2-18.2-56.8-28.4c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7
	c-13.8,30.3-31.2,73-46,125.7c-4.9,17.7-9,37.7-12.9,62.9c-6,38.7-11.6,89.3-19.6,161.5C2283.4,698.5,2271.6,811.5,2293.1,881.1z"/>
<path class="st0" d="M2304.6,522.3c15.1-65.3,57-112.4,106.1-119.6c38.7-5.7,71,15,85.2,24.3c59.9,39.6,289.4,503.1,300,523.2
	c62.5-0.3,124.9-0.7,187.4-1c-80.5-150.7-160.9-301.3-241.4-452c-89.1-79.2-161-136.6-198.7-162.2c-6.8-4.6-27.2-18.2-56.8-28.4
	c-30.5-10.5-50.1-10.1-59.5-9.5c-11.5,0.8-25,1.9-39.2,10.8c-13.2,8.3-20.7,19.2-24.3,25.7c-13.8,30.3-31.2,73-46,125.7
	C2312.5,477.1,2308.5,497.2,2304.6,522.3z"/>
<path class="st3" d="M3829.9,710.8c19.2,10.8,36.1,28.9,36.1,28.9c36.3,38.8,43.7,85.6,49.1,119.1c3.4,21.6,6.9,57.6,0,101.4
	c-4.9,31-11.5,73.3-42.6,115.6c-24.5,33.3-54.4,53.2-77,64.9c-14.2,4.7-28.4,9.5-42.6,14.2c-152.6-2-305.3-4-457.9-6
	C3342.7,1097.2,3746.7,663.9,3829.9,710.8z"/>
<path class="st0" d="M3416.3,1144.7c46.4,0.9,94.5,0.9,143.9,0c53.8-1,105.9-3.1,156.1-6.1c18-2.5,52.3-9.9,87.2-34.5
	c7.9-5.6,40.1-29.2,62.9-73c33.4-64.4,23-127.1,16.2-168.3c-5.7-34.3-14.4-52.3-26.4-77c-13.1-27-21.4-34.7-30.4-38.5
	c-10.2-4.3-23.1-4.7-50.7,6.1c-21.2,8.3-53.2,24-87.2,54.7C3597.4,920.3,3506.9,1032.5,3416.3,1144.7z"/>
<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="21567.6895" y1="5427.8975" x2="21965.9668" y2="5427.8975" gradientTransform="matrix(-1 0 0 -1 25309.3789 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#7BBBF3"/>
</linearGradient>
<path class="st4" d="M3508.2,1122.1l93-7.4c83.7-6.7,146.7-80.6,140-164.3l0,0c-6.7-83.7-80.6-146.7-164.3-140l-93,7.4
	c-83.7,6.7-146.7,80.6-140,164.3l0,0C3350.6,1065.8,3424.5,1128.8,3508.2,1122.1z"/>
<path class="st3" d="M3035.2,1014.9c-211.3,0-422.6,0-633.9,0c-5.9-0.7-14.4-2-24.3-4.1c-15.3-3.2-37.5-7.8-55.4-17.6
	c-23.9-13-36.3-33.2-43.3-44.6c-37.8-61.6-33.7-189-32.4-221.7c3.2-84.2,7.8-85.5,31.1-301.4c0.9-8.5,4.1-37.8,13.5-75.7
	c11.1-44.4,20.6-81.2,48.7-117.6c15.1-19.6,36.5-47.4,74.3-58.1c32.2-9.1,59.7-1.2,82.4,5.4c13.4,3.9,52.4,17.1,96,56.8
	c91.8,83.6,153.3,239.2,163.5,265.6c6.9,18.9,13.8,37.8,20.7,56.7c-32.9-53.6-58.9-96.3-75.5-123.6c-32.3-53.2-45.6-76.8-71-109.5
	c-30.8-39.7-49.6-63.5-83.1-87.2c-38.4-27.1-66.5-33.1-85.2-34.5c-8.9-0.7-20.6-1.6-34.5,2c-18,4.7-42.4,17.6-71,64.9
	c-21.7,36-34.6,73.4-48.7,143.9c-11.8,59-17.4,106.4-20.3,133.8c-13.3,125.3,0.3,117.7-6.2,249.2c-0.6,11.7-2.3,45.3,12.2,83.3
	c5.6,14.7,12.7,32.4,29.7,47.3c27.4,23.9,61.6,23.8,72.7,23.2c195.9-0.8,391.8-1.6,587.7-2.5C3000.6,971.1,3017.9,993,3035.2,1014.9
	z"/>
<path class="st1" d="M2650.1,303c1.1,2.3,2.5,5,4.1,8.1c3.8,7.5,8.7,17.4,14.9,29.6c31.6,62.8,94,186.9,180.9,358.9
	c116.7,230.9,177.5,347.6,298.8,408.6c27.6,13.9,90.2,44.4,174.4,40.6c28.6-1.3,88.5-7.9,150-44.6c54.4-32.4,83.4-72.4,133.8-141.9
	c64.1-88.4,93.3-137.9,93.3-137.9c11.1-18.8,22.3-39.1,44.6-60.8c29.7-29,62.1-44.3,85.2-52.7c-17.5-1.7-43.3-3.9-74.8-5.2
	c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5
	c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57
	c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4c-3.2-2.5-6.4-4.9-9.4-7.2
	C2654.5,306.4,2652.3,304.7,2650.1,303z"/>
<path class="st5" d="M2650.1,303c1.5,2.6,2.9,5.1,4.4,7.7c4.5,7.9,9,15.8,13.4,23.6c3,5.3,6.1,10.6,9.1,15.9
	c5.2,9.2,10.5,18.3,15.7,27.4c90.9,158.6,173.7,298.8,247.3,424.5c23.5,40.2,86.8,148.5,200.7,206.8
	c59.3,30.3,106.3,33.8,123.7,34.5c57.9,2.2,101.3-14.8,129.8-26.4c66.6-27,108.1-65,150-103.4c28.2-25.9,94.9-90.9,131.8-137.9
	c5.3-6.7,22.2-28.7,50.7-50.7c11.8-9.1,22.1-15.6,28.6-19.4l0,0c-2.8-0.1-5.6-0.2-8.5-0.3c-21.1-0.7-40.5-0.9-58.7-0.7l0,0
	c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0c-107,7.6-204.7,5.1-303.6-41.8
	c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4c-39.8-41.7-77.1-73.4-105.3-95.4
	C2666.7,313.9,2653.3,304.2,2650.1,303z"/>
<path class="st6" d="M2669,340.7c1,1.2,2,2.4,3.1,3.7c1.5,1.8,3.1,3.7,4.9,5.8c16.2,19.3,40.8,48.5,74.4,95
	c5.6,7.8,10.8,15.1,15.7,22.2c67.5,97.2,74.9,133.7,164.7,261.6c49.6,70.6,83.7,111.3,131.8,150c65.2,52.6,110.3,64.7,129.8,68.9
	c47.5,10.3,86.6,4.3,113.5,0c60-9.7,102.4-31.8,137.9-50.7c10-5.3,47.2-31.3,121.6-83.1c28.3-19.7,51.5-36.1,79.1-62.9
	c18.8-18.2,33-34.9,42.5-46.8l0,0c-41.6,0.5-76.6,3.4-109.5,6.9c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
	c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
	c-39.8-41.7-77.1-73.4-105.3-95.4c0.5-1.4-8.6-7.8-9.4-7.2c-1,0.7-1.8,1.6-2.5,2.5c-0.1,0.1-0.2,0.3-0.3,0.5
	c-0.1,0.1-0.1,0.2-0.2,0.3C2650.8,317.4,2655.7,324.6,2669,340.7z"/>
<path class="st7" d="M2667.9,334.3c1.1,3.1,2.5,6.5,4.2,10.1c4.5,9.4,11.4,20.4,20.5,33.1c17,23.8,42,53.6,74.4,89.9
	c51.4,57.4,121.6,131.1,209.3,223.1c20.4,21.4,64.8,67.1,135.8,99.3c51.9,23.6,94.2,29.1,105.4,30.4c55,6.4,97.8-2.6,131.8-10.1
	c43.4-9.6,73.9-22.4,107.5-36.5c32.4-13.6,74.4-33.5,121.5-62.2c-39.6,4.3-76.1,9.7-117.4,13.5c-29.3,2.7-57.8,5.4-85.7,7.3l0,0
	c-107,7.6-204.7,5.1-303.6-41.8c-28.4-13.5-54-29.2-75.8-44.4c-34.9-24.4-59.8-47.3-70.2-57c-64.9-60.5-82.1-102.9-154.1-178.4
	c-39.8-41.7-77.1-73.4-105.3-95.4C2664.7,320.3,2665.2,326.6,2667.9,334.3z"/>
<path class="st8" d="M2995.9,646.2c20.9,27.3,79.3,69.7,140.6,91c58,20.1,108,17.7,133.8,16.2c44.3-2.6,80.3-12.4,104.9-21
	c-107,7.6-204.7,5.1-303.6-41.8C3043.2,677.1,3017.6,661.3,2995.9,646.2z"/>
<g>
	<ellipse class="st9" cx="2935" cy="1354.6" rx="720.7" ry="184.1"/>
	<ellipse class="st9" cx="2935" cy="1373" rx="717" ry="165.3"/>
</g>
<ellipse class="st1" cx="2958.7" cy="1447.9" rx="414.8" ry="175.8"/>
<ellipse class="st9" cx="2958.7" cy="1497.9" rx="408.3" ry="144.6"/>
<ellipse class="st1" cx="2958.7" cy="1617.5" rx="250.6" ry="119.6"/>
<ellipse class="st7" cx="2958.7" cy="1667.6" rx="229.7" ry="69.6"/>
<ellipse class="st1" cx="2958.7" cy="1823.2" rx="220.6" ry="119"/>
<ellipse class="st10" cx="2958.7" cy="1863.5" rx="197.7" ry="60.4"/>
<g class="tower">

		<radialGradient id="SVGID_3_" cx="23428.6797" cy="5311.5977" r="170.166" fx="23378.0488" fy="5260.7144" gradientTransform="matrix(-1 0 0 -1 25309.3789 6394.1475)" gradientUnits="userSpaceOnUse">
		<stop  offset="5.641030e-02" style="stop-color:#FFFFFF"/>
		<stop  offset="0.9949" style="stop-color:#0072CE"/>
	</radialGradient>
	<path class="st11" d="M2090.1,1199c0.8-7.3,1.2-14.8,1.2-22.3c0-116.3-94.3-210.6-210.6-210.6c-116.3,0-210.6,94.3-210.6,210.6
		c0,6.1,0.3,12.2,0.8,18.2L2090.1,1199z"/>
	<ellipse class="st1" cx="1880.6" cy="1234.3" rx="231.4" ry="88.2"/>
	<ellipse class="st10" cx="1880.6" cy="1243.1" rx="230.2" ry="79.2"/>
	<ellipse class="st1" cx="1880.6" cy="1282.2" rx="198.6" ry="84.1"/>
	<ellipse class="st10" cx="1880.6" cy="1306.2" rx="195.5" ry="69.2"/>
	<ellipse class="st1" cx="1880.6" cy="1363.4" rx="120" ry="57.3"/>
	<ellipse class="st10" cx="1880.6" cy="1387.4" rx="110" ry="33.3"/>
	<ellipse class="st1" cx="1880.6" cy="1461.9" rx="105.6" ry="57"/>
	<ellipse class="st10" cx="1880.6" cy="1481.2" rx="94.7" ry="28.9"/>
	<path class="st1" d="M1882.2,2197L1882.2,2197c10.6,0,19.3-30,19.3-66.5v-573.3c0-36.5-8.7-66.5-19.3-66.5l0,0
		c-10.6,0-19.3,30-19.3,66.5v573.3C1863,2167.4,1871.6,2197,1882.2,2197z"/>
</g>
<linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="2625.05" y1="3694.3325" x2="2625.05" y2="4034.3914" gradientTransform="matrix(1 0 0 -1 0 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#5698D8"/>
</linearGradient>
<path class="st12" d="M1810,2615.9l419.8-16.8l246.4-187.2l848.1-9l123.1-84.1H2331.8c-176.4-20.3-352.7-40.7-529.1-61
	C1805.1,2377.2,1807.5,2496.6,1810,2615.9z"/>
<rect x="1879.2" y="2255.7" class="st10" width="4.3" height="366.4"/>
<rect x="2011.4" y="2281.2" class="st10" width="4.3" height="331.4"/>
<rect x="2119.1" y="2290.4" class="st10" width="4.3" height="312.8"/>
<rect x="2218.2" y="2311.6" class="st10" width="4.3" height="279"/>
<rect x="2373.6" y="2311.6" class="st10" width="4.3" height="200.9"/>
<rect x="3296.3" y="2301.8" class="st10" width="4.3" height="95"/>
<rect x="3077.3" y="2311.6" class="st10" width="4.3" height="91.4"/>
<rect x="2554.5" y="2344.4" class="st13" width="301" height="46.3"/>
<path class="st10" d="M1804.2,2385c215,12,430,23.9,644.9,35.9l7.3-24.1l-651-48.5C1805.1,2360.6,1804.7,2372.8,1804.2,2385z"/>
<path class="st1" d="M2220.3,2611.4c259.8,1.5,519.7,3,779.5,4.5c-0.4-8-0.8-16-1.2-24.1c-259.4-0.4-518.9-0.8-778.3-1.2
	C2220.3,2597.6,2220.3,2604.5,2220.3,2611.4z"/>
<rect x="2248.5" y="2563.7" class="st1" width="798.3" height="26.9"/>
<rect x="2270.5" y="2540.4" class="st1" width="808.9" height="23.3"/>
<rect x="2296.2" y="2520.9" class="st1" width="829.7" height="19.6"/>
<rect x="2317.8" y="2504.1" class="st1" width="876.6" height="16.7"/>
<rect x="2344.8" y="2492.7" class="st14" width="883.2" height="11.4"/>
<rect x="2375.8" y="2475.6" class="st15" width="843.2" height="17.1"/>
<rect x="2393.7" y="2456.8" class="st16" width="843.6" height="18.8"/>
<rect x="2413.3" y="2438.9" class="st14" width="844.4" height="17.9"/>
<rect x="2432" y="2420.9" class="st17" width="866.4" height="17.9"/>
<rect x="2449.2" y="2403" class="st18" width="875" height="17.9"/>
<rect x="2467.1" y="2390.7" class="st19" width="857.1" height="12.2"/>
<path class="st20" d="M2197.9,2578.7l-2.9-3.2l145.6-134.6h33.1c15.6-13.6,30.8-27.9,45.3-42.6c16.2-16.4,31.8-33.7,46.5-51.5
	l3.3,2.7c-14.8,17.8-30.5,35.2-46.7,51.7c-14.7,15-30.3,29.6-46.1,43.4l-0.6,0.5h-33L2197.9,2578.7z"/>
<rect x="2339.9" y="2443.5" transform="matrix(1 -9.519120e-03 9.519120e-03 1 -23.46 22.4065)" class="st20" width="4.3" height="64.3"/>
<rect x="2466" y="2348.3" class="st20" width="4.3" height="57.5"/>
<rect x="2203.5" y="2567.4" class="st20" width="4.3" height="48.5"/>
<polygon class="st9" points="3895.7,1959.2 3736.6,2603.3 3035.7,2621.7 "/>
<path class="st21" d="M3431.9,2331.2c-132.1,96.8-264.1,193.7-396.2,290.5c-16.7,0.1-33.4,0.2-50.1,0.4
	c138.5-97,277.1-193.9,415.6-290.9H3431.9z"/>
<polygon class="st0" points="3895.7,2602.9 3895.7,1959.2 3736.6,2603.3 "/>
<polygon class="st9" points="2296.2,1436.8 2296.2,2348.3 3431.9,2331.2 3895.7,1959.2 "/>
<path class="st0" d="M3606.4,2196.9l-1172.7-172.7c-8.4-1.2-15.2-6-15.2-10.5v-349.1c0-4.5,6.9-6.4,15.2-4.1l1172.7,310.8
	c3.3,0.8,5.9,3.8,5.9,6.6v214.9C3612.2,2195.6,3609.6,2197.5,3606.4,2196.9z"/>
<path class="st22" d="M1365.2,1892.6c0,6.8,0,712.1,0,712.1l425.6,14.1v-363.1l505.4,92.6v-911.5L1365.2,1892.6z"/>
<path class="st21" d="M1816.9,2630.6c-10.9,2.7-21.8,5.4-32.6,8.1c2.2-127.7,4.4-255.4,6.5-383c8.7,1.6,17.4,3.2,26.1,4.8
	C1816.9,2383.8,1816.9,2507.2,1816.9,2630.6z"/>
<linearGradient id="SVGID_5_" gradientUnits="userSpaceOnUse" x1="3249.2087" y1="3604.8176" x2="4897.2114" y2="3840.8181" gradientTransform="matrix(1 0 0 -1 0 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#5698D8"/>
</linearGradient>
<path class="st23" d="M3819.6,2605.9l93.5-9.3c10.9-0.3,889.2,64.1,889.2,64.1l-48.4,14.9L3819.6,2605.9z"/>
<linearGradient id="SVGID_6_" gradientUnits="userSpaceOnUse" x1="3248.4441" y1="3610.1621" x2="4896.4419" y2="3846.1616" gradientTransform="matrix(1 0 0 -1 0 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#5698D8"/>
</linearGradient>
<path class="st24" d="M3633.6,2617.9l963.6,76.2l114.3-8.7c-313.5-23.7-627.1-47.5-940.6-71.2
	C3725.1,2615.5,3679.4,2616.7,3633.6,2617.9z"/>
<linearGradient id="SVGID_7_" gradientUnits="userSpaceOnUse" x1="3246.854" y1="3621.2629" x2="4894.8521" y2="3857.2629" gradientTransform="matrix(1 0 0 -1 0 6394.1475)">
	<stop  offset="0" style="stop-color:#FFFFFF"/>
	<stop  offset="1" style="stop-color:#5698D8"/>
</linearGradient>
<polygon class="st25" points="3430.3,2632.8 4388.5,2717.6 4501,2707.1 3557.4,2623.5 "/>
<polygon class="st9" points="4159.9,2740.6 4281.5,2727.6 3314.2,2636.1 3190.8,2645.8 "/>
<polygon class="st9" points="2938.5,2662.5 3875,2766.6 4025.6,2753.6 3067.4,2654.2 "/>
<polygon class="st9" points="3581,2801.9 3736.1,2783.3 2795.2,2675.5 2630,2688.3 "/>
<polygon class="st9" points="3430.3,2819.2 2520.6,2694.1 2336.7,2694.1 3248.9,2836.5 "/>
<path class="st9" d="M1991.9,2726.3c281.9,51.6,563.8,103.2,845.7,154.8l212.9-24.8l-861.4-138.7
	C2123.3,2720.5,2057.6,2723.4,1991.9,2726.3z"/>
<polygon class="st9" points="1614.4,2749.8 1823.7,2739.9 2617.3,2898.5 2389.9,2933.1 "/>
<polygon class="st9" points="2087.4,2957.9 1804.3,2992.6 1197,2782 1397.8,2765.3 "/>
<g class="memetext">
	<path class="st10" d="M2535.6,1815.5l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7V1853l-0.8-0.2l-34.3,81.6l-8.4-1.6
		l-34.3-94.5l-0.8-0.2v88l-8.7-1.7L2535.6,1815.5L2535.6,1815.5z"/>
	<path class="st10" d="M2669.9,1950v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2669.9,1950z"/>
	<path class="st10" d="M2752.8,1856.6l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
		l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2752.8,1856.6L2752.8,1856.6z"/>
	<path class="st10" d="M2875.9,1989v-109.1l59,11.2v8.9l-49.7-9.4v41.1l46.6,8.8v8.9l-46.6-8.8v41.2l50.7,9.6v8.9L2875.9,1989z"/>
	<path class="st10" d="M2998.2,1903l10.7,2l36.9,102l0.9,0.2l36.9-88l10.7,2v109.1l-8.7-1.7v-88.1l-0.8-0.2l-34.3,81.6l-8.4-1.6
		l-34.3-94.5l-0.8-0.2v88.1l-8.7-1.7L2998.2,1903L2998.2,1903z"/>
	<path class="st10" d="M3168,2013v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
		c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
		c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3166.9,2022,3168,2018,3168,2013z"/>
	<path class="st10" d="M3251.4,1996.1l-8.1,0.9c-0.8-2.6-1.9-5-3.4-7.3s-3.4-4.2-5.7-5.8c-2.3-1.6-5.2-2.7-8.7-3.4
		c-5.2-1-9.4-0.5-12.7,1.5s-5,5.1-5,9.2c0,3.5,1.1,6.6,3.4,9.2c2.3,2.6,5.8,5,10.5,7.2l11.5,5.2c6.4,2.9,11.2,6.4,14.4,10.7
		c3.2,4.2,4.8,9.1,4.8,14.5c0,4.6-1.2,8.5-3.6,11.6c-2.4,3.1-5.7,5.3-10,6.6c-4.3,1.2-9.2,1.3-14.8,0.3c-7.4-1.4-13.6-4.4-18.4-8.9
		c-4.8-4.5-7.9-10.3-9.3-17.4l8.5-0.6c1.1,5.1,3.2,9.2,6.4,12.2c3.2,3.1,7.4,5.1,12.6,6.1c5.9,1.1,10.5,0.6,14-1.6
		c3.5-2.2,5.3-5.4,5.3-9.6c0-3.3-1-6.3-3.1-8.9s-5.2-4.9-9.3-6.7l-12.5-5.6c-6.6-3-11.5-6.6-14.7-10.9s-4.8-9.2-4.8-14.6
		c0-4.5,1.1-8.3,3.4-11.3c2.3-3,5.4-5.1,9.4-6.3c4-1.2,8.6-1.3,13.7-0.3c7,1.3,12.6,4.1,16.8,8.3
		C3246.5,1984.6,3249.5,1989.9,3251.4,1996.1z"/>
	<path class="st10" d="M3302.6,2071.4c-7.1-1.3-13.3-4.3-18.5-8.8c-5.2-4.6-9.2-10.3-12-17.1c-2.8-6.9-4.2-14.4-4.2-22.7
		c0-8.2,1.4-15.3,4.2-21.2c2.8-5.9,6.8-10.2,11.8-12.8c5-2.7,10.8-3.4,17.4-2.2c4.1,0.8,8.1,2.3,12,4.7c3.8,2.3,7.3,5.5,10.4,9.4
		c3.1,3.9,5.5,8.5,7.3,13.9s2.7,11.5,2.7,18.3v4.7l-59.6-11.3v-8.4l50.5,9.6c0-5.3-1-10.2-3-14.8c-2-4.6-4.7-8.4-8.2-11.5
		s-7.5-5.1-12.1-6c-4.8-0.9-9.1-0.3-12.8,1.7s-6.5,5.2-8.6,9.3s-3.1,8.9-3.2,14.3v5c0,6.5,1,12.4,3.2,17.6c2.1,5.2,5.1,9.6,9,13
		s8.5,5.6,13.8,6.6c3.6,0.7,6.8,0.7,9.5,0s5-1.9,6.9-3.6s3.3-3.7,4.2-5.9l8.4,4.5c-1.2,3.2-3.1,6-5.7,8.5c-2.6,2.4-5.9,4.1-9.8,5.1
		C3312.2,2072.4,3307.7,2072.4,3302.6,2071.4z"/>
	<path class="st10" d="M3401.4,2057.1v-50.6l8.8,1.7v81.8l-8.8-1.7v-13.6l-0.7-0.1c-1.8,3.9-4.6,6.8-8.5,8.9s-8.6,2.6-14.2,1.5
		c-4.9-0.9-9.2-2.9-13-5.9s-6.7-6.9-8.9-11.8c-2.2-4.8-3.2-10.5-3.2-17v-53l8.8,1.7v52.4c0,6.4,1.8,11.9,5.3,16.4
		c3.5,4.6,8,7.3,13.5,8.4c3.4,0.7,6.8,0.4,9.9-0.8c3.2-1.2,5.8-3.3,7.8-6.3C3400.4,2066.2,3401.4,2062.1,3401.4,2057.1z"/>
	<path class="st10" d="M3433.6,2094.5v-81.8l8.6,1.6v12.6l0.8,0.2c1.5-3.9,4.1-6.8,7.6-8.5c3.6-1.8,7.8-2.2,12.8-1.2
		c5.3,1,9.6,3.1,13,6.4s5.9,7.4,7.6,12.3l0.6,0.1c1.7-4.2,4.5-7.3,8.4-9.2c3.9-1.9,8.6-2.4,14.2-1.3c7.1,1.3,12.7,4.8,16.8,10.3
		c4.1,5.6,6.2,12.9,6.2,22.1v54.8l-8.8-1.7v-54.8c0-6.5-1.5-11.6-4.6-15.4s-7.1-6.2-12.2-7.1c-5.8-1.1-10.3,0-13.5,3.2
		c-3.1,3.2-4.7,7.8-4.7,13.7v53.9l-9-1.7v-55.7c0-5.5-1.4-10.3-4.3-14.2c-2.9-4-6.9-6.4-12.2-7.4c-3.5-0.7-6.7-0.3-9.5,1
		s-5,3.5-6.6,6.4c-1.6,3-2.4,6.6-2.4,10.9v52.4L3433.6,2094.5z"/>
</g>
</svg>

'''
'''--- src/frontend/public/museum_interior_x2.svg ---
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="_x2018_лой_x5F_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
	 x="0px" y="0px" viewBox="0 0 3200 1355.3" style="enable-background:new 0 0 3200 1355.3;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#E6F1FF;}
	.st1{opacity:0.2;fill:#9EBFEF;enable-background:new    ;}
	.st2{opacity:0.4;fill:#9EBFEF;enable-background:new    ;}
	.st3{fill:#FFB359;}
	.st4{fill:#1C468A;}
	.st5{fill:#BDD8FF;}
	.st6{fill:#9EBFEF;}
	.st7{opacity:0.3;fill:#D2E3FC;enable-background:new    ;}
	.st8{opacity:0.5;fill:#9EBFEF;enable-background:new    ;}
	.st9{fill:#D2E3FC;}
	.st10{fill:#DCECFF;}
	.st11{fill:#A1C3E5;}
	.st12{fill:#83B7E2;}
	.st13{fill:#7FAADD;}
	.st14{opacity:0.4;fill:#F8FCFF;enable-background:new    ;}
	.st15{fill:#2E3552;}
	.st16{fill:#8AB7F9;}
	.st17{fill:#AFCDFB;}
	.st18{fill:#AFD1F9;}
	.st19{fill:#B66645;}
	.st20{fill:#91B0B7;}
	.st21{fill:none;}
	.st22{fill:#A30A3F;}
	.st23{fill:#FFFFFF;}
	.st24{fill:none;stroke:#4D4D4D;stroke-width:0.496;stroke-miterlimit:10;}
	.st25{fill:#890E3D;}
	.st26{fill:#FF585D;}
	.st27{fill:#5D2F28;}
	.st28{fill:#FDBE9F;}
	.st29{fill:#FC9D74;}
	.st30{fill:#D67B0F;}
	.st31{fill:#073A4F;}
	.st32{fill:#F2F3D3;}
	.st33{fill:#06303A;}
	.st34{fill:#0072CE;}
	.st35{fill:#FFD01F;}
	.st36{fill:#2C7CA4;}
	.st37{fill:#F1F2F2;}
	.st38{fill:#00022D;}
	.st39{fill:#DB490F;}
	.st40{fill:#2A6551;}
	.st41{fill:#F1560C;}
	.st42{fill:#397441;}
	.st43{fill:#CC4212;}
	.st44{fill:#B5B4B4;}
	.st45{fill:#8F5755;}
	.st46{opacity:0.7;fill:#F2F3D3;enable-background:new    ;}
	.st47{fill:#740203;}
	.st48{fill:#C9410D;}
	.st49{fill:#7C4343;}
	.st50{fill:#210606;}
	.st51{fill:#E5E5C6;}
	.st52{fill:#1B2E43;}
	.st53{fill:#ED8B0A;}
	.st54{fill:#D3450D;}
	.st55{fill:url(#SVGID_1_);}
	.st56{fill:#25282A;}
	.st57{fill:#191919;}
	.st58{fill:url(#SVGID_2_);}
	.st59{fill:#000107;}
	.st60{fill:#010219;}
	.st61{fill-rule:evenodd;clip-rule:evenodd;fill:#FDBE9F;}
	.st62{opacity:0.7;fill:#FC9D74;enable-background:new    ;}
	.st63{opacity:0.3;fill-rule:evenodd;clip-rule:evenodd;fill:#FC9D74;enable-background:new    ;}
	.st64{fill:#DD6043;}
	.st65{fill:#453428;}
	.st66{fill:#00B3B0;}
	.st67{fill:#03073F;}
	.st68{fill:#4F473E;}
	.st69{fill:#029680;}
	.st70{fill:#07466D;}
	.st71{fill:#1A1615;}
	.st72{fill:#015448;}
	.st73{fill:#049B93;}
	.st74{fill:#64455E;}
	.st75{fill:#51324C;}
	.st76{fill:#D5C9D1;}
	.st77{fill:#5D5D5D;}
	.st78{fill:#DFD5DC;}
	.st79{fill:#EEE8EC;}
	.st80{fill:#F8F6F8;}
	.st81{fill:#B6A3B1;}
	.st82{fill:#FBBC7F;}
	.st83{fill:#F5A8AE;}
	.st84{fill:#FEDBA9;}
	.st85{fill:#4A403E;}
	.st86{fill:#945E3C;}
	.st87{opacity:0.3;fill:#BEC0C2;enable-background:new    ;}
	.st88{fill:#233862;}
	.st89{fill:#CE6F1A;}
	.st90{fill:#E3956F;}
	.st91{fill:#FFC2A5;}
	.st92{opacity:0.55;fill:#FFB299;enable-background:new    ;}
	.st93{fill:#702530;}
	.st94{fill:#DC8A64;}
	.st95{fill:#DF9378;}
	.st96{fill:#654745;}
	.st97{fill:#E59A72;}
	.st98{fill:#E7CED2;}
	.st99{fill:#FCEDF0;}
	.st100{fill:#9E3724;}
	.st101{fill:#F6A26C;}
	.st102{fill:#FFB299;}
	.st103{fill:#FFF2AD;}
	.st104{fill:#F7DF95;}
	.st105{fill:#5F1500;}
	.st106{fill:#01C08B;}
	.st107{fill:#89DAA4;}
	.st108{fill:#079840;}
	.st109{fill:#64281A;}
	.st110{fill:#CF886F;}
	.st111{fill:#EB6058;}
	.st112{fill:#B42C22;}
	.st113{fill:#D28E69;}
	.st114{opacity:0.32;fill:#573A30;enable-background:new    ;}
	.st115{fill:#E1C4B5;}
	.st116{fill:#00C1DE;}
	.st117{fill:#EFDFD7;}
	.st118{opacity:0.32;enable-background:new    ;}
	.st119{fill:#573A30;}
	.st120{fill:#D78965;}
	.st121{fill:#E99564;}
</style>
<path class="st0" d="M3072,1085.4c-2.5,22.6-6,44.7-10.6,66.1c-3.8,18-8.3,35.5-13.6,52.4c-1.1,3.6-2.3,7.1-3.4,10.6
	c-17.5,52-42.5,97.4-75.6,131.6h-217.9v-745c0-56.1,20-107.6,53.3-147.6c9.4,4.9,18.8,10.3,28.1,16.1c42.2,26.2,84,61.7,125.5,109.8
	C3046.7,682.5,3092.9,898.9,3072,1085.4z"/>
<polygon class="st1" points="2750.9,1085.4 2750.9,1349.2 2720.5,1349.6 1823.1,1349.6 1823.1,1085.4 "/>
<path class="st1" d="M1360.3,1086.4v264.2H297.9l-51.6-0.1c0,0-74.4-114.4-110.9-264h1224.9V1086.4z"/>
<path class="st2" d="M457.2,1312.5H277c0-16-13-29-29-29v-143.7c16,0,29-13,29-29h180.2c0,16,13,29,29,29v143.7
	C470.1,1283.6,457.2,1296.5,457.2,1312.5z"/>
<path class="st2" d="M723.9,1312.5H543.8c0-16-13-29-29-29v-143.7c16,0,29-13,29-29H724c0,16,13,29,29,29v143.7
	C736.9,1283.6,723.9,1296.5,723.9,1312.5z"/>
<path class="st2" d="M987.2,1312.5H807c0-16-13-29-29-29v-143.7c16,0,29-13,29-29h180.2c0,16,13,29,29,29v143.7
	C1000.2,1283.6,987.2,1296.5,987.2,1312.5z"/>
<path class="st2" d="M1254,1312.5h-180.2c0-16-13-29-29-29v-143.7c16,0,29-13,29-29H1254c0,16,13,29,29,29v143.7
	C1266.9,1283.6,1254,1296.5,1254,1312.5z"/>
<path class="st2" d="M2146,1312.5h-180.2c0-16-13-29-29-29v-143.7c16,0,29-13,29-29H2146c0,16,13,29,29,29v143.7
	C2159,1283.6,2146,1296.5,2146,1312.5z"/>
<path class="st2" d="M2412.8,1312.5h-180.2c0-16-13-29-29-29v-143.7c16,0,29-13,29-29h180.2c0,16,13,29,29,29v143.7
	C2425.8,1283.6,2412.8,1296.5,2412.8,1312.5z"/>
<path class="st2" d="M2676.1,1312.5h-180.2c0-16-13-29-29-29v-143.7c16,0,29-13,29-29h180.2c0,16,13,29,29,29v143.7
	C2689,1283.6,2676.1,1296.5,2676.1,1312.5z"/>
<g>
	<g>
		<path class="st3" d="M833.7,1214.6c43.7,0,90.5-1.3,140.5-4.2c128.1-7.5,217-22.7,217.8-22.8l-1.3-10.5
			c-0.9,0.2-89.4,15.2-217.1,22.7c-117.8,6.9-293.9,8.6-464.2-22.7l-1.4,10.5C580.4,1200.9,689.9,1214.6,833.7,1214.6z"/>
	</g>
	<g>
		<rect x="1197" y="1165.3" class="st4" width="7.7" height="180.8"/>
		<path class="st4" d="M1208,1159c0-4.6-3.2-8.3-7.1-8.3s-7.1,3.7-7.1,8.3c0,4.6,3.2,8.3,7.1,8.3S1208,1163.6,1208,1159z"/>
		<rect x="1194.2" y="1343.7" class="st4" width="13.8" height="4.3"/>
		<rect x="1195" y="1163.8" class="st4" width="11.6" height="3.5"/>
	</g>
	<polygon class="st4" points="1175.1,1178.7 1177,1191.2 1193.2,1188 1191.2,1175.9 	"/>
	<g>
		<path class="st4" d="M1199,1180.6c-0.2-1.3-0.8-2.5-1.7-3.3c-0.1-0.1-0.2-0.1-0.2-0.2l0,0c-0.9-0.7-1.9-0.9-2.9-0.7l-2.8,0.5
			l-4.7,0.8c-0.1,0-0.2,0-0.3,0.1l0,0l0,0h-0.1c-1,0.3-1.8,1-2.4,1.9c-0.7,1.1-1,2.4-0.8,3.7c0.3,2.5,2.1,4.3,4.2,4.3
			c0.2,0,0.4,0,0.7-0.1l4-0.7l1.1-0.2l2.5-0.4c0.6-0.1,1.2-0.4,1.6-0.7l0,0C1198.5,1184.6,1199.3,1182.7,1199,1180.6z
			 M1197.1,1184.1L1197.1,1184.1c-0.5,0.6-1.1,0.9-1.8,1.1l-2.5,0.4l-1,0.2l0,0l-4,0.7c-1.8,0.3-3.5-1.1-3.7-3.2
			c-0.1-1,0.1-2,0.6-2.8s1.3-1.4,2.1-1.5l4.1-0.7l0.7-0.1l0,0l2.8-0.5c0.9-0.2,1.7,0.1,2.4,0.7c0.1,0.1,0.2,0.2,0.3,0.4l0,0
			c0.5,0.6,0.8,1.3,0.9,2.1C1198.2,1182.1,1197.8,1183.3,1197.1,1184.1z"/>
	</g>
	<g>
		<path class="st3" d="M483.9,1187.6c-0.2,0-5.5,0.9-15.2,2.4l0,0c-30.7,4.6-105.3,14.7-202.7,20.4c-31.7,1.9-62.1,3-91.3,3.7
			c-1.3-3.5-2.6-7-3.9-10.5c34.3-0.7,66.1-2,94.6-3.7c96.7-5.7,171-15.7,201.7-20.3c4.7-0.7,8.3-1.3,10.9-1.7h0.1
			c2.8-0.4,4.2-0.7,4.4-0.7l0.1,1.1l0.9,7.6l0.1,1.2L483.9,1187.6z"/>
	</g>
	<polygon class="st4" points="467.1,1178.7 468.9,1191.2 485.1,1188 483.1,1175.9 	"/>
	<g>
		<path class="st4" d="M491,1180.6c-0.2-1.3-0.8-2.5-1.7-3.3c-0.1-0.1-0.1-0.1-0.2-0.2c-0.9-0.7-1.9-0.9-3-0.8l-2.8,0.5l-4.7,0.8
			c-0.1,0-0.2,0-0.3,0.1h-0.1c-1,0.3-1.8,1-2.4,1.9c-0.7,1.1-1,2.4-0.8,3.7c0.3,2.5,2.1,4.3,4.2,4.3c0.2,0,0.4,0,0.7-0.1l4-0.7
			l1.1-0.2l2.5-0.4c0.6-0.1,1.2-0.4,1.7-0.7C490.4,1184.6,491.2,1182.6,491,1180.6z M489,1184.1c-0.5,0.6-1.1,1-1.8,1.1l-2.5,0.4
			l0,0l-1,0.2l-4,0.7c-1.8,0.3-3.4-1.1-3.7-3.2c-0.1-1,0.1-2,0.6-2.8s1.3-1.4,2.1-1.5l4.1-0.7l0.7-0.1l2.8-0.5
			c0.9-0.2,1.7,0.1,2.4,0.7c0.1,0.1,0.3,0.2,0.4,0.4c0.5,0.6,0.8,1.3,0.9,2.1C490.1,1182.1,489.8,1183.3,489,1184.1z"/>
	</g>
	<polygon class="st4" points="516.9,1190.2 518.4,1177.6 502.1,1175 500.9,1187.3 	"/>
	<g>
		<path class="st4" d="M509.2,1178.3c-0.4-0.4-0.9-0.8-1.5-1c-0.2-0.1-0.4-0.1-0.6-0.2l-5.1-0.9l-2.5-0.4c-1-0.2-2,0.1-2.8,0.6
			c-1.1,0.7-1.9,2-2.1,3.6c-0.2,1.3,0.1,2.6,0.8,3.7c0.3,0.6,0.8,1,1.3,1.4c0.5,0.3,1,0.5,1.5,0.6l2.8,0.5l4.7,0.8
			c0.8,0.1,1.6,0,2.3-0.3c0.3-0.1,0.6-0.3,0.9-0.6c0.9-0.8,1.5-2,1.7-3.3C510.9,1181.1,510.3,1179.4,509.2,1178.3z M509.6,1182.6
			c-0.1,1-0.6,1.9-1.3,2.5c0,0-0.1,0-0.1,0.1l0,0c-0.7,0.6-1.5,0.8-2.3,0.7l-4.8-0.8l0,0l-2.8-0.5c-0.6-0.1-1.2-0.4-1.7-0.9
			c-0.2-0.2-0.3-0.4-0.5-0.6c-0.5-0.8-0.7-1.8-0.6-2.8c0.1-0.9,0.5-1.7,1.1-2.3c0.7-0.7,1.6-1.1,2.6-0.9l2.5,0.4l5,0.9
			c0.9,0.2,1.6,0.7,2.1,1.4C509.5,1180.5,509.8,1181.6,509.6,1182.6z"/>
	</g>
</g>
<path class="st0" d="M1591.7,370.2L1591.7,370.2c-127.5,0-230.9,103.4-230.9,230.9v745.2h461.8V601
	C1822.6,473.5,1719.2,370.2,1591.7,370.2z"/>
<path class="st5" d="M3023.1,1266.6c-14.8,30.4-32.9,57.3-54.4,79.6h54.4v0.2h-235.9v-278.1h235.9V1266.6z"/>
<rect x="2862.2" y="1115.3" class="st6" width="86.1" height="34"/>
<path class="st6" d="M2956.2,1158.3h-102v-52h102V1158.3z M2856.7,1155.7h96.9v-46.9h-96.9V1155.7z"/>
<path class="st7" d="M1591.7,406.5L1591.7,406.5c-115.2,0-208.5,93.4-208.5,208.5v732.7h417V615
	C1800.2,499.8,1706.9,406.5,1591.7,406.5z"/>
<g>
	<g>
		<rect x="2653.6" y="1165.3" class="st4" width="8.5" height="180.8"/>
		<path class="st4" d="M2650,1159c0-4.6,3.5-8.3,7.8-8.3s7.8,3.7,7.8,8.3c0,4.6-3.5,8.3-7.8,8.3S2650,1163.6,2650,1159z"/>
		<rect x="2650" y="1343.6" class="st4" width="15.2" height="4.3"/>
		<rect x="2651.5" y="1163.9" class="st4" width="12.8" height="3.5"/>
	</g>
	<g>
		<path class="st3" d="M2281.2,1214.6c-48.3,0-100-1.3-155.2-4.2c-141.6-7.5-239.8-22.7-240.8-22.8l1.4-10.5
			c1,0.2,98.8,15.2,239.9,22.7c130.2,6.9,324.9,8.6,513.1-22.7l1.5,10.5C2561.2,1200.9,2440.1,1214.6,2281.2,1214.6z"/>
	</g>
	<g>
		<rect x="1871.1" y="1165.3" class="st4" width="8.5" height="180.8"/>
		<path class="st4" d="M1867.5,1159c0-4.6,3.5-8.3,7.8-8.3s7.8,3.7,7.8,8.3c0,4.6-3.5,8.3-7.8,8.3S1867.5,1163.6,1867.5,1159z"/>
		<rect x="1867.5" y="1343.6" class="st4" width="15.2" height="4.3"/>
		<rect x="1869" y="1163.9" class="st4" width="12.8" height="3.5"/>
	</g>
	<polygon class="st4" points="1903.8,1178.7 1901.8,1191.2 1883.9,1188 1886.1,1175.9 	"/>
	<g>
		<path class="st4" d="M1894.3,1179.8c-0.7-0.9-1.6-1.6-2.6-1.9h-0.1l0,0l0,0c-0.1,0-0.2-0.1-0.3-0.1l-5.2-0.8l-3.1-0.5
			c-1.2-0.2-2.3,0.1-3.3,0.7c-0.1,0.1-0.2,0.1-0.3,0.2c-1,0.8-1.7,2-1.9,3.3c-0.3,2,0.6,4,2.1,5c0.5,0.4,1.1,0.6,1.8,0.7l2.7,0.4
			l1.2,0.2l4.4,0.7c0.2,0,0.5,0.1,0.7,0.1c2.3,0,4.3-1.8,4.7-4.3C1895.3,1182.2,1895,1180.9,1894.3,1179.8z M1894,1183.3
			c-0.3,2.1-2.1,3.5-4.1,3.2l-4.4-0.7l-1.1-0.2l-2.8-0.4c-0.8-0.1-1.5-0.5-2-1.1c-0.8-0.8-1.2-2-1-3.3c0.1-0.8,0.5-1.6,1-2.1
			c0.1-0.1,0.3-0.3,0.4-0.4c0.8-0.6,1.7-0.9,2.7-0.7l3.1,0.5l0,0l0.8,0.1l4.5,0.7c1,0.1,1.8,0.7,2.4,1.5
			C1893.9,1181.3,1894.2,1182.3,1894,1183.3z"/>
	</g>
	<g>
		<path class="st3" d="M3047.8,1204c-1.1,3.6-2.3,7.1-3.4,10.6c-42.7-0.3-88-1.6-135.8-4.1c-107.6-5.7-190.1-15.8-224-20.4l0,0
			c-10.7-1.4-16.6-2.3-16.8-2.4l0.1-0.6l0.2-1.2l1-7.6l0.2-1.1c0.1,0,1.8,0.3,4.8,0.7c0,0,0.1,0,0.2,0c2.8,0.4,6.9,1,12.1,1.7
			c33.9,4.6,116,14.6,222.9,20.3C2949.8,1202,2996.7,1203.7,3047.8,1204z"/>
	</g>
	<polygon class="st4" points="2686.4,1178.7 2684.4,1191.2 2666.4,1188 2668.7,1175.9 	"/>
	<g>
		<path class="st4" d="M2676.8,1179.8c-0.7-0.9-1.6-1.6-2.6-1.9c-0.1,0-0.1,0-0.2,0c-0.1,0-0.2-0.1-0.3-0.1l-5.2-0.8l-3.1-0.5
			c-1.2-0.2-2.3,0.1-3.3,0.8l-0.2,0.2c-1,0.8-1.7,2-1.9,3.3c-0.3,2,0.6,3.9,2.1,5c0.5,0.4,1.2,0.6,1.8,0.7l2.7,0.4l1.2,0.2l4.4,0.7
			c0.2,0,0.5,0.1,0.7,0.1c2.3,0,4.3-1.8,4.7-4.3C2677.8,1182.2,2677.5,1180.9,2676.8,1179.8z M2676.6,1183.3
			c-0.3,2.1-2.1,3.5-4.1,3.2l-4.4-0.7l-1.1-0.2l-2.8-0.4c-0.8-0.1-1.5-0.5-2-1.1c-0.8-0.8-1.2-2-1-3.3c0.1-0.8,0.5-1.5,1-2.1
			c0.1-0.1,0.3-0.3,0.4-0.4c0.8-0.6,1.7-0.9,2.7-0.7l3,0.5l0,0l0.8,0.1l4.5,0.7c1,0.1,1.8,0.7,2.4,1.5
			C2676.5,1181.3,2676.7,1182.3,2676.6,1183.3z"/>
	</g>
	<polygon class="st4" points="2631.3,1190.2 2629.7,1177.6 2647.7,1175 2649,1187.3 	"/>
	<g>
		<path class="st4" d="M2655.9,1180c-0.2-1.6-1.1-2.9-2.3-3.6c-0.9-0.6-2-0.8-3.1-0.6l-2.7,0.4l-5.6,0.9c-0.2,0-0.5,0.1-0.7,0.2
			c-0.6,0.2-1.2,0.5-1.7,1c-1.2,1.1-1.9,2.8-1.6,4.5c0.2,1.3,0.9,2.5,1.9,3.3c0.3,0.3,0.6,0.5,1,0.6l0,0c0.8,0.4,1.6,0.5,2.5,0.3
			l5.2-0.8l3.1-0.5c0.6-0.1,1.2-0.3,1.7-0.6c0.5-0.3,1-0.8,1.4-1.4C2655.8,1182.7,2656.1,1181.4,2655.9,1180z M2654.1,1183.1
			c-0.2,0.2-0.3,0.4-0.5,0.6c-0.5,0.5-1.2,0.8-1.8,0.9l-3.1,0.5l-5.3,0.8c-0.9,0.1-1.8-0.1-2.6-0.7c0,0-0.1,0-0.1-0.1
			c-0.8-0.6-1.3-1.5-1.4-2.5c-0.2-1.1,0.1-2.1,0.7-2.9l0,0c0.5-0.8,1.4-1.3,2.3-1.4l5.6-0.9l2.8-0.4c1.1-0.2,2.2,0.2,2.9,0.9
			c0.6,0.6,1.1,1.4,1.2,2.3C2655,1181.2,2654.7,1182.2,2654.1,1183.1z"/>
	</g>
</g>
<g>
	<rect x="719.2" y="978.7" class="st8" width="108.5" height="32.9"/>
	<g>
		<path class="st6" d="M837.5,1020.5H709.4v-50.6h128.1V1020.5z M712.2,1017.7h122.5v-45H712.2V1017.7z"/>
	</g>
</g>
<g>
	<rect x="1992.3" y="909.6" class="st8" width="108.5" height="32.9"/>
	<g>
		<path class="st6" d="M2110.6,951.3h-128.1v-50.6h128.1V951.3z M1985.3,948.5h122.5v-45h-122.5V948.5z"/>
	</g>
</g>
<g>
	<rect x="2444" y="895.8" class="st8" width="108.5" height="32.9"/>
	<g>
		<path class="st6" d="M2562.3,937.6h-128.1V887h128.1V937.6z M2437,934.8h122.5v-45H2437V934.8z"/>
	</g>
</g>
<rect x="1903.2" y="496" class="st9" width="276.7" height="379.7"/>
<path class="st6" d="M1893.9,490.4v394.7h295.3V490.4H1893.9z M2170.5,866.4h-258V509.1h258V866.4z"/>
<polygon class="st6" points="1948,253.6 1948,490.4 1948,494 1951.3,494 1951.3,490.4 1951.3,256.1 "/>
<polygon class="st6" points="2137.4,365.2 2137.4,490.4 2137.4,494 2140.7,494 2140.7,490.4 2140.7,366.3 "/>
<g>
	<polygon class="st5" points="1150.1,912.8 429.4,912 430.8,517.6 1150.1,517.6 	"/>
	<path class="st10" d="M427.9,555.9c0,0,41.7-18.7,87.8-4.4s62.6,27.4,62.6,27.4s36.2-25.2,85.6-11c49.4,14.3,47.2,49.4,47.2,49.4
		s19.4-6.2,37.7,0.4c18.3,6.6,19,17.6,19,17.6s30-41,90.8-32.2C919.3,611.9,923,666,923,666s14.3-17.9,36.8-11.9c0,0,6.6-36.2,51-34
		c0,0,18.1-34,59.8-26.9s43.9,31.3,43.9,31.3s15.9-18.1,35.7-11v79.6H426.8C426.8,693.1,426.8,554.8,427.9,555.9z"/>
	<path class="st6" d="M939.8,688.8c0,0,0.6-0.6,1.9-1.5c5.9-4.3,25.4-16.5,55.4-13.4c36.2,3.8,48.3-19.2,82.9-20.3
		s42.8-24.2,70.3-23.1v62.6L939.8,688.8z"/>
	<path class="st8" d="M426.8,577.9c0,0,60.4-6.6,101,19.8c40.6,26.3,91.1,6.6,129.5,26.3c38.4,19.8,79,3.3,108.3,18.7
		s51.2,30.7,84.9,29.3c33.7-1.5,54.9-0.7,56.4,14.6c1.5,15.4-477.9-0.7-477.9-0.7L428.3,582L426.8,577.9z"/>
	<path class="st9" d="M426.8,671.2c0,0,252.5-17.6,395.2,3.3c142.7,20.8,328,8.8,328,8.8l-1,228.5l-718.2,1
		C430.8,912.8,425.2,669.5,426.8,671.2z"/>
	<path class="st8" d="M429,710.7c0,0,278.8,0,432.5,38.4s287.6,51.6,287.6,51.6v112.1H430.8C430.8,912.8,426.8,708.5,429,710.7z"/>
	<path class="st6" d="M427.9,754.6c0,0,195.4-9.9,230.5,28.5c35.1,38.4-35.1,61.5,35.1,72.5c70.3,11,230.5,2.2,230.5,57.1H430.8
		C430.8,912.7,426.8,753.5,427.9,754.6z"/>
	<g>
		<path class="st0" d="M395.2,483.8V946h788.3V483.8H395.2z M1149.5,912H429.2V517.8h720.2L1149.5,912L1149.5,912z"/>
	</g>
	<polygon class="st6" points="1086.2,239.3 1086.2,483.8 1086.2,484.7 1089.4,484.7 1089.4,483.8 1089.4,237.3 	"/>
	<polygon class="st6" points="490.1,433.9 490.1,484.7 486.8,484.7 486.8,434.8 	"/>
</g>
<g>
	<polygon class="st6" points="2340.2,399.4 2340.2,474.8 2340.2,516.4 2340.2,519.8 2340.2,540.9 2340.2,566.2 2337.6,566.2 
		2337.6,540.9 2337.6,519.8 2337.6,516.4 2337.6,474.8 2337.6,399.3 	"/>
	<polygon class="st6" points="2616,401.3 2616,474.8 2616,516.4 2616,519.8 2616,540.9 2616,566.2 2618.6,566.2 2618.6,540.9 
		2618.6,519.8 2618.6,516.4 2618.6,474.8 2618.6,401.5 	"/>
	<rect x="2278.1" y="516.4" class="st5" width="427.9" height="352.4"/>
	<g>
		<path class="st11" d="M2681.1,540.9v163.4c-0.1,55.5-0.4,124.3-0.4,135.1H2307V540.9H2681.1z"/>
		<g>
			<rect x="2306.9" y="686.2" class="st12" width="373.7" height="153.1"/>
			<path class="st0" d="M2518.9,592.2c0-5.6,4.5-10.2,10.2-10.2s10.2,4.5,10.2,10.2c0,5.6-4.5,10.2-10.2,10.2
				S2518.9,597.8,2518.9,592.2z"/>
			<path class="st13" d="M2681.1,704.3c-0.1,55.5-0.4,124.3-0.4,135.1h-299.9c4-49.6,155-106.5,160.2-115.7
				c5.2-9.3-131.2-15.7-134.7-27.8c-0.8-2.8,4.5-6,13.7-9.6c31.2-12.1,106.8-27.8,137.3-40.3c39.5-16.2,123.7-14.5,123.7-14.5
				c0.1,0,0.1,2.9,0.1,7.9C2681.2,651.3,2681.1,676.1,2681.1,704.3z"/>
			<path class="st14" d="M2379.1,606.8c0,0,5.5-10.1,18.6-9c0,0,19.1-16.8,39.4-2.2c0,0,21.6-3.6,37.6,3.1
				c10.7,4.5,14.2,9.2,14.2,9.2L2379.1,606.8z"/>
			<path class="st14" d="M2560.1,579.8c0,0,4.1-7.6,14-6.8c0,0,14.3-12.7,29.6-1.7c0,0,16.3-2.7,28.3,2.4c8,3.4,10.7,6.9,10.7,6.9
				L2560.1,579.8z"/>
			<path class="st14" d="M2330.8,640.7c0,0,7.3-11.1,24.7-9.9c0,0,25.3-18.6,52.4-2.5c0,0,28.7-4,50,3.5c14.2,5,18.9,10.2,18.9,10.2
				L2330.8,640.7z"/>
		</g>
	</g>
</g>
<path class="st5" d="M1511,646.8c-0.4,1.8-0.7,3.5-1,5.1l-2.8-1.2C1508.6,649.3,1509.9,648,1511,646.8z"/>
<rect x="1473.9" y="1049.6" class="st6" width="234.6" height="28.8"/>
<rect x="1442.5" y="1078.3" class="st5" width="297.3" height="269.3"/>
<rect x="1536.9" y="1123.8" class="st6" width="108.5" height="32.9"/>
<g>
	<path class="st6" d="M1655.2,1165.6h-128.1V1115h128.1V1165.6z M1529.9,1162.8h122.5v-45h-122.5V1162.8z"/>
</g>
<path class="st15" d="M3072.8,1355.3h-2919c-1.9,0-3.5-1.6-3.5-3.5v-1.5c0-1.9,1.6-3.5,3.5-3.5h2919.1c1.9,0,3.5,1.6,3.5,3.5v1.5
	C3076.3,1353.7,3074.7,1355.3,3072.8,1355.3z"/>
<path class="st5" d="M2124.1,779.8c-10.7-27-19.4-31.9-19.4-31.9l-39.6-56.7c-5.6-20-9.5-32.1-9.5-32.1s-7.4-18.2-22.6-0.5
	c-3,10.8-7.4,26.1-7.4,26.1l-48.6,67.6c0,0-24.3,30.2,4.7,55.4c9.4,9.7,36.7,19.7,36.7,19.7c-4.3,0.6-4.6,2.8-4.6,2.8
	c-3.7,6.5,5.5,9,5.5,9c-2.6,0.5-5.1,2.2-6.9,6.5s0.7,13.2,15.7,6.2c14.9-7,16-26.7,15.9-34.6c0-1.6-0.4-3.1-0.9-4.4h20.1l-4.9,4.1
	c0,0-10.4,7-7.6,20.9c2.8,13.9,9.4,27.5,19.6,28.3c10.2,0.7,10.9-3.3,10.9-3.3s1.7-5.4-1.7-8.5c0,0,2.2-8.5-3.1-10.4
	c-5.4-1.8,2.8-6.5,2.8-6.5s24.2-12.7,30.9-18.7c1.6-1.4,3.6-3.4,5.6-5.9h1.1C2123.5,805,2127.8,789.2,2124.1,779.8z"/>
<path class="st6" d="M2094.9,780.8c1.5-9.2-18.5-65.8-25.1-78.4c-2.7-5.1-5.1-11.4-6.5-17.7c-1-3.5-1.9-6.7-2.8-9.5
	c-1.3,6.2-1.8,13.5,0,21c4.4,18.9,21.8,91.7,7,114.6C2067.5,810.8,2093.4,790,2094.9,780.8z"/>
<path class="st6" d="M2028.9,673.5c-1.8,6.3-3.2,11.3-3.2,11.3l-0.6,0.9c-3.6,30.9-24.3,58.5-27.3,72.6c-3.7,17,24,33.6,24,33.6
	c-10-28.8,4.1-75.4,7.4-98.4C2030.5,684.1,2029.9,677.7,2028.9,673.5z"/>
<path class="st6" d="M2079.3,837.5c0,0,24.2-12.7,30.9-18.7c1.6-1.4,3.6-3.4,5.6-5.9h1.1c6.7-7.9,11-23.7,7.3-33.1
	c-0.4-1-0.8-2-1.2-2.9c-0.2,14-6.1,28.4-27.5,33.8l6.3,4.4c0,0-42.6,4.2-48.6,31.3c3.5,10.4,9.3,19.1,17.3,19.7
	c10.2,0.7,10.9-3.3,10.9-3.3s1.7-5.4-1.7-8.5c0,0,2.2-8.5-3.1-10.4C2071.2,842.1,2079.3,837.5,2079.3,837.5z"/>
<path class="st6" d="M2041,837.2c-4.7-28.4-48.9-32.7-48.9-32.7l6.3-4.4c-23-5.8-28.2-22-27.5-37c-4.6,11.1-7.4,28.8,10.8,44.6
	c9.4,9.7,36.7,19.7,36.7,19.7c-4.3,0.6-4.6,2.8-4.6,2.8c-3.7,6.5,5.5,9,5.5,9c-2.6,0.5-5.1,2.2-6.9,6.5s0.7,13.2,15.7,6.2
	C2034.8,848.8,2038.7,843.2,2041,837.2z"/>
<path class="st16" d="M2044.5,689.9c0,2.8,0.1,5.5,0.2,8.3s0.3,5.5,0.7,8.2c0.2,1.4,0.4,2.7,0.6,4.1c0.1,0.7,0.3,1.3,0.5,2
	c0.2,0.6,0.4,1.3,0.8,1.8c0.2,0.3,0.4,0.6,0.5,0.9c0.1,0.2,0.2,0.3,0.2,0.5c0,0.1,0.1,0.2,0.1,0.3s0,0.1,0,0.2
	c0,0.1-0.1,0.2-0.2,0.3c-0.2,0.1-0.4,0.1-0.5,0.1s-0.2-0.1-0.3-0.1c-0.2-0.1-0.3-0.2-0.5-0.2c-0.3-0.2-0.6-0.4-0.9-0.6
	c-1.1-0.8-2.2-1.7-3.3-2.6l0.6-0.4c0.8,2.2,1.6,4.3,2.3,6.5c0.7,2.2,1.4,4.4,2.1,6.6c0.3,1.1,0.6,2.2,0.9,3.4
	c0.2,1.1,0.5,2.3,0.5,3.5c0,0.2,0,0.3-0.1,0.5c0,0.2-0.1,0.4-0.2,0.5c-0.2,0.3-0.4,0.6-0.7,0.8s-0.7,0.2-1.1,0.2
	c-0.3,0-0.7-0.1-1-0.2c-1.2-0.5-2.1-1.2-3-2l0.7-0.5c1.1,2.2,2.2,4.4,3.2,6.7s1.9,4.5,2.7,6.9c0.4,1.2,0.8,2.4,1,3.6
	c0.1,0.6,0.2,1.2,0.3,1.9c0,0.6,0.1,1.3-0.2,2c-0.1,0.3-0.3,0.6-0.5,0.9s-0.6,0.5-1,0.6c-0.8,0.2-1.5,0-2.1-0.3
	c-1.2-0.6-2.1-1.4-3-2.4l0.7-0.4c1.2,3.5,2.2,7,3.1,10.5c0.8,3.6,1.5,7.1,1.9,10.8c0.5,3.6,0.7,7.3,0.7,10.9s-0.3,7.3-0.9,10.9
	l0.3-2.7c0-0.5,0.1-0.9,0.1-1.4l0.1-1.4c0-0.9,0.1-1.8,0.1-2.7v-2.7c0-0.9-0.1-1.8-0.1-2.7c-0.1-0.9-0.1-1.8-0.2-2.7l-0.3-2.7
	l-0.4-2.7c-0.5-3.6-1.2-7.2-2.1-10.7c-0.4-1.8-0.9-3.5-1.4-5.2s-1.1-3.5-1.7-5.2c-0.1-0.2,0-0.4,0.2-0.5s0.3,0,0.4,0.1l0,0
	c0.8,0.8,1.7,1.7,2.7,2.2c0.5,0.2,1,0.4,1.5,0.2c0.4-0.1,0.7-0.5,1-1c0.2-0.5,0.2-1,0.1-1.6c0-0.6-0.2-1.2-0.3-1.8
	c-0.3-1.2-0.6-2.3-1-3.5c-0.8-2.3-1.7-4.6-2.7-6.8s-2-4.5-3.1-6.6c-0.1-0.2,0-0.5,0.2-0.6s0.4-0.1,0.5,0.1l0,0
	c0.8,0.7,1.7,1.4,2.7,1.8c0.5,0.2,1,0.3,1.3,0.1c0.2-0.1,0.3-0.2,0.4-0.4c0.1-0.1,0.1-0.2,0.1-0.3s0-0.2,0-0.4
	c0-1.1-0.2-2.2-0.5-3.3c-0.2-1.1-0.5-2.2-0.8-3.3c-0.6-2.2-1.3-4.4-2-6.6c-0.7-2.2-1.5-4.4-2.2-6.5l0,0c-0.1-0.2,0-0.4,0.2-0.5
	c0.1,0,0.3,0,0.4,0.1c1,0.9,2.1,1.8,3.2,2.6c0.3,0.2,0.6,0.4,0.8,0.6c0.1,0.1,0.3,0.2,0.4,0.2s0.1,0.1,0.2,0.1c0,0,0.1,0,0,0
	l-0.1,0.1l0,0c0,0,0-0.1,0-0.2c0-0.1-0.1-0.3-0.2-0.4c-0.1-0.3-0.3-0.6-0.5-0.9c-0.4-0.6-0.6-1.3-0.8-2c-0.2-0.7-0.3-1.4-0.5-2
	c-0.3-1.4-0.4-2.7-0.6-4.1c-0.3-2.8-0.4-5.5-0.4-8.3C2044.4,695.5,2044.4,692.7,2044.5,689.9z"/>
<path class="st5" d="M2003.1,613.1c-1.6,10.4-5.8,18.8-12.7,17.7c-6.9-1.1-14.1-11.3-12.4-21.7s8.6-17.8,15.5-16.7
	C2000.5,593.5,2004.8,602.8,2003.1,613.1z"/>
<path class="st5" d="M2087,613.1c1.6,10.4,5.8,18.8,12.7,17.7s14.1-11.3,12.4-21.7s-8.6-17.8-15.5-16.7
	C2089.6,593.5,2085.3,602.8,2087,613.1z"/>
<path class="st5" d="M2009.8,645.2l2.3-2.3c-8.6-0.2-14.9-6.3-15.5-6.6s4.2-1.7,4.2-1.7l-10.4-3.8l1.4-30.6c0,0-1.8-45.2,54.9-44.9
	c47.7,0.2,50.8,43.2,50.8,43.2l-0.3,32.7l-8.6,3.8l4.1,1.6c-2,4.8-15.2,6.6-15.2,6.6l1.9,2.3c0,0-2.3-0.6-11.6,3.1
	c-9.2,3.8-8.7,20.7-8.7,20.7s-18.7,15.7-28-1.5C2031.1,667.7,2032.5,648,2009.8,645.2z"/>
<path class="st6" d="M2092.7,636.4l-4.1-1.6l0.3-0.1l-13.6-3.5l3.3,3.7c0,0-6.4-3.9-15.7,0c-8.3,3.5-18.7,2.4-18.7,2.4
	s-10.7,0.2-15-3.3s-11.8-2.6-17.2,0.2l1.7-3.9l-13.4,4l0.5,0.2c0,0-4.8,1.4-4.2,1.7c0.6,0.3,6.9,6.4,15.5,6.6l-2.3,2.3
	c10,1.2,15.3,5.7,18.1,10.4c2,1.3,4.3,5.6,6.9,10.6c3.8,7.4,16.9,8.1,20.5,1.5c1.9-3.6,4.2-6.5,5.5-10.3c1.2-3.8,3.3-7.4,7-8.9
	c9.2-3.8,11.6-3.1,11.6-3.1l-1.9-2.3C2077.5,643,2090.7,641.3,2092.7,636.4z"/>
<path class="st6" d="M2084.1,569c-7.9-7.6-17.5-13.8-37.3-13.8c-20.4,0-35.7,6.8-43.2,15.1c4.1-3.2,9.3-5.2,16.1-4.4
	c12.3,1.4,19.1,7.8,22.9,13.3c2.1,3.1,6.7,3.2,8.8,0.1c4.3-6.1,11.8-13.2,23.4-12.8C2078.3,566.7,2081.4,567.6,2084.1,569z"/>
<path class="st16" d="M2055.5,643.3c-3.2,0.9-6.6,1.3-9.9,1.4c-3.3,0-6.7-0.5-9.9-1.4c-1.6-0.5-3.1-1-4.6-1.8
	c2.5,2.8,6.9,7.1,14.7,7.1c8,0,11-4.3,14.8-7.4C2059,642.1,2057.3,642.8,2055.5,643.3z"/>
<path class="st6" d="M2032.2,614.1c1.5-1,2.8-2.3,3.7-3.7c3-4.2,3.8-9.6,2.7-14.6c0-0.1,0-1.2-0.1-1.3c-3.5-15-22.1-20.5-32.8-9.4
	c-3,3.1-5.2,8.2-5,13.6c0.5,9.6,9.9,16,19.5,15.1c0.1,0,0.2,0,0.4,0C2020.6,613.8,2018.9,623,2032.2,614.1z"/>
<path class="st6" d="M2060.6,614c-1.5-1-2.8-2.3-3.7-3.7c-3-4.2-3.8-9.6-2.7-14.6c0.1-0.2,0.1-1.4,0.2-1.7
	c3.5-14.3,21.4-19.8,32.1-9.6c3.4,3.2,5.9,8.5,5.6,14.3c-0.5,9.6-9.9,16-19.5,15.1c-0.1,0-0.2,0-0.4,0
	C2072.2,613.7,2073.8,622.9,2060.6,614z"/>
<path class="st6" d="M2051.5,546.9c0,0-0.6,6.9,9,9.7c6.4,1.9,10,6.5,10,6.5s-54.2-3.4-65.5,7.2c-11.3,10.6,0,0,0,0
	S2016.7,546.9,2051.5,546.9z"/>
<path class="st6" d="M2037.7,625.1c3.8-1.9,9.7-3.5,16.2-0.4c4.2,2,5.7,7.5,3,11.4c-2.1,2.9-4.8,4.6-11.3,4.4
	c-6.5-0.2-10.4-2.6-11.6-6C2032.6,631,2034.3,626.8,2037.7,625.1z"/>
<path class="st5" d="M2034,653.1c0.9,0.6,1.8,1.1,2.8,1.5s2,0.7,3,1c2,0.5,4.1,0.8,6.2,0.8c2.1,0,4.2-0.3,6.2-0.8c1-0.3,2-0.6,3-1
	s1.9-0.8,2.8-1.4c-1.6,1.4-3.6,2.4-5.6,3c-2.1,0.6-4.2,1-6.4,1c-2.2,0-4.3-0.3-6.4-1C2037.5,655.6,2035.6,654.6,2034,653.1z"/>
<path class="st6" d="M2009.2,598.7c0,0,1,10.2,13.7,10.2s12.7-6.8,12.7-6.8s1.6-14.7-13-14.7
	C2022.6,587.5,2013.2,586.5,2009.2,598.7z"/>
<path class="st6" d="M2084,598.7c0,0-1,10.2-13.7,10.2c-12.6,0-12.7-6.8-12.7-6.8s-1.6-14.7,13-14.7
	C2070.7,587.5,2080.1,586.5,2084,598.7z"/>
<path class="st5" d="M1612.3,656c3.1,8.5,6,16.7,6,16.7l-61.9-2l-38-15.9l-2.8-1.2c1.4-1.4,2.6-2.7,3.8-3.9
	c10-10.6,11.2-13.6,11.2-13.6c-0.7-3.9-1.2-7.5-1.6-11c-0.2-0.1-0.4-0.2-0.6-0.4c0,0,0.4-2.6-4.6-20.1c-0.8-2.8-1.8-6-2.9-9.6
	c-0.9-2.8-1.2-5.4-1.2-7.7c0-6.4,2.6-10.8,3.7-14c0.5-1.3,1.1-2.7,0.1-2.2c-4.7,3.4-25.8-15.5-28.3-24.7c1.3-1.3,2.6-2.6,3.8-3.8
	c-0.1-0.1-0.1-0.1-0.1-0.1s17.8-19.4,25.8-21.8c4.3-1.3,12.7-1.6,18.7-1.6c4,0,7,0.1,7,0.1c0.6,0,1.2-0.1,1.8-0.1
	c3.8-0.3,6.9-3.2,7.4-7c0.3-2.7,0.6-5.9,0.9-9.8c0.1-0.8,0.1-1.7,0.2-2.5c2.8-3.4,28.5,5.9,28.5,5.9s0.3,0.3,0.5,0.8
	c0,0.7,0,1.4,0.1,2.1c0,1.8,0.1,3.7,0.3,5.5c0,0.2,0,0.3,0.1,0.4c0.3,2.7,2.8,4.3,5.5,4.8c0.9,0.2,1.7,0.4,2.6,0.5c0,0,0,0,0-0.1
	c0,0,27.5,2.9,32.7,8.9c3.9,4.5,6.3,10.8,7.9,16c0.2,0.7,0.4,1.4,0.6,2.1c0.1,11.5-7.9,28.2-21,45.6c-0.3,0.4-0.2,0.9-0.2,1.4
	c-0.2,1.2-0.6,2.5-1.1,4c-4.2,13.3-10.8,32.9-11.4,33c-0.2,4.1-0.1,6.9,0.3,7.7C1606.6,640.4,1609.5,648.3,1612.3,656z"/>
<path class="st5" d="M1565.9,835.3c-7.9,25.3-3.8,38.3-3.8,38.3c11.3,50.9,2.6,142.9,2.6,142.9H1547c-26.7-70.2-27.5-114.3-29-130.8
	s-41.2-124.1-41.4-147.1c-0.1-24,23.8-62.6,23.8-62.6s34.4,13.3,55.6,26.4c7.1,4.4,12.5,8.7,14.4,12.3
	C1575.3,724.3,1579,793.2,1565.9,835.3z"/>
<path class="st5" d="M1667,1013.9h-19.9c0,0-77.4-111.9-80.1-140.4c-3.3-35.6-28.2-176-28.2-176l79.4-24.7c0,0,6.9,17.8,12.8,35.8
	c2.5,7.8,4.9,15.7,6.3,22.2c3.2,14.2-5.8,67.9-11.9,106.1c-3,18.8-5.3,33.8-5.2,38.5C1620.7,889.6,1646.8,891.4,1667,1013.9z"/>
<path class="st5" d="M1637.3,730.7c0,0-23.8,0.8-47.5,7.3c-15.8,4.3-31.5,11.2-40.2,22c0,0-22.6-24.4-49.5-30.5l0,0
	c-7.3-1.7-15-2-22.7,0c0,0,0.7-24.9,32.6-68.6c2.1-2.9,4.4-5.9,6.8-8.9c0,0,30.7,17.7,81,6.7c4.6-1,9.4-2.2,14.3-3.8
	c0,0,11.5,27.8,15.2,39C1630,701.7,1637.3,730.7,1637.3,730.7z"/>
<path class="st5" d="M1547,1016.5c0,0-1,11.5-2.5,13.9s-7.7,10.4-14.8,13.1c-7.1,2.7-27.5,1.3-29.1,8.7h71.8c0,0,1-11.1-1.8-18.4
	s-5.9-17.2-5.9-17.2L1547,1016.5L1547,1016.5z"/>
<path class="st5" d="M1667,1013.9c0,0,8,11,10,15.3s15,22.8,13.4,22.9c-1.6,0.2-36.4,0-36.4,0s-3.6-8.7-3.2-14.6s-4.7-17.2-3.8-23.6
	C1648.1,1007.4,1667,1013.9,1667,1013.9z"/>
<path class="st5" d="M1519.3,649.8c-0.4,1.8-0.7,3.5-1,5.1l-2.8-1.2C1517,652.3,1518.2,651,1519.3,649.8z"/>
<path class="st6" d="M1589.6,508.7c0,0.1-0.1,0.2-0.1,0.4c-0.7,2.4-10.3,2.8-16.3,1.5c-4.9-1.1-11.6-4.6-12.8-8.2
	c-0.3-0.8-0.3-1.5,0-2.2c0.1-0.1,0.1-0.2,0.2-0.3c2.8-3.4,28.5,5.9,28.5,5.9s0.3,0.3,0.5,0.8C1589.7,507,1589.8,507.7,1589.6,508.7z
	"/>
<path class="st17" d="M1565.7,594.8c0,0,7.8,8.2,20.4,7.8c12.5-0.3,20.4-12.2,19.1-16s-14.1,4.4-22,3.1S1562.3,588.2,1565.7,594.8z"
	/>
<path class="st17" d="M1520,589c0,0,3.2,8,11.9,10.9c8.7,2.9,17.3-3.9,17.5-6.9c0.2-3.1-10.9-0.3-15.9-3.2
	C1528.4,586.9,1519.4,583.3,1520,589z"/>
<path class="st17" d="M1637.5,764.1c2.6,54-21.3,119-45.2,169.5l0,0c-7.8,16.4-15.6,31.3-22.4,43.8c-13.2,23.9-23,39-23,39
	l-25.5-72.3c-6.3-7.5-14.4-60.8-14.4-60.8c-7.5-11.3-21.7-91.6-21.7-91.6c-10.9-11.3-8.7-33.9-8.7-33.9c-4.7-6.9-1.6-16.9-1.6-16.9
	c-1.9-8.5,2.4-11.4,2.4-11.4c53.2-4.5,140.8-56.8,140.8-56.8C1646.7,704.2,1637.5,764.1,1637.5,764.1z"/>
<path class="st6" d="M1593,930.9c0,0-0.2,1-0.6,2.7l0,0c-7.8,16.4-15.6,31.3-22.4,43.8c-0.1-0.4-0.1-0.9-0.2-1.4
	c-3.8-37-13.8-92.8-7.8-102.5C1568.1,863.9,1593,930.9,1593,930.9z"/>
<path class="st6" d="M1625.4,679.7c0,0-71.1,52.7-99.5,68.6s12.5,15.9,38.5-8.4C1590.3,715.6,1625.4,679.7,1625.4,679.7z"/>
<path class="st6" d="M1627.1,689.7c0,0-37.8,71.9-80.5,95.7c-42.6,23.8-47.7,33.2-33.9,31.4c13.8-1.9,66.5-36.4,78.4-55.2
	C1603.1,742.8,1627.1,689.7,1627.1,689.7z"/>
<path class="st6" d="M1625.4,729.8c0,0-10.9,69.4-22.6,93.7c-11.7,24.2-3.3,50.2,1.7,48.5c0,0,7.9-5.6,7.9-13.8
	C1612.5,850,1631.5,775.2,1625.4,729.8z"/>
<path class="st6" d="M1507.1,883.3c0,0,20.9,17.6,23,8.4C1532.2,882.4,1510,887.5,1507.1,883.3z"/>
<path class="st6" d="M1485.4,791.7c0,0,10.5,1.9,17.4-1.3c6.9-3.1,9.1-11,4.4-9.4C1502.4,782.6,1495.9,791.4,1485.4,791.7z"/>
<rect x="2812.1" y="1038.1" class="st6" width="186.1" height="29.8"/>
<path class="st18" d="M2845.4,1038c0,0,1.8-15.2,14.5-20.4c12.7-5.3,91.4-17.9,91.4-17.9s28.7,19.9,29,38.8
	C2980.4,1038.4,2845.4,1038.8,2845.4,1038z"/>
<path class="st5" d="M2951.3,999.7c0,0-57.9,28.5-91.4,17.9c0,0,8.2-10.5,22.6-18.4c-0.8-4.9-1.5-9.3-2-13.3
	c-1.9-14.4-1.9-22.5-1.9-22.5l35.5-28.6l8-6.4c-0.2,6.8,0.2,13.1,1.1,18.9c0.1,0.5,0.1,0.9,0.2,1.4
	C2929.2,983,2951.3,999.7,2951.3,999.7z"/>
<path class="st6" d="M2923.7,948c0,0-0.1,0.2-0.3,0.5c-2.2,4-17.5,29.9-42.8,37.3c-1.9-14.4-1.9-22.5-1.9-22.5l35.5-28.6
	c4.7,5.5,7.9,10.5,9,12.5C2923.5,947.8,2923.7,948,2923.7,948z"/>
<path class="st5" d="M2868.4,962.6c0,0,55.3,9.2,60.5-25.3s15.8-56.6-19.3-63.9c-35.1-7.3-43.9,4.8-48.5,15.9
	C2856.6,900.3,2854.1,959.3,2868.4,962.6z"/>
<path class="st6" d="M2918.8,928.3c0,0,7.3-7.4,3.1-12.1c-4.2-4.7-6.7,2.4-10,2.2s-9.3-10-9.8-18.9c-0.4-8.9-32.1-20-41.1-9.9
	c-0.2,0.2,0.1-11.7,7.9-20.3c8.8-9.7,54.8-33.7,77.3-5.2c28.7,36.4-9.6,74.5-14.7,80.3c-5.1,5.8-8,4.1-8,4.1
	S2914.4,936.3,2918.8,928.3z"/>
<g id="Layer_2_1_">
</g>
<g>
	<path class="st19" d="M1093.3,1025.7c0,0-15.5-8.2-26.1-8.5c-10.5-0.3-11.8-14.9-11.8-14.9l-14,1.1c0,0,2.3,11.9-6.4,14.7
		s-12.6-0.3-15.1,1c-5.1,2.7-2.9,41.8-2.9,41.8s24.5,13.6,24.2,18.9s-2.5,33.7,0,63.8c1.5,17.4-24.1,35.1-23.4,52.6
		c0.3,8.1,0.3,16.2,1,24.3c0.8,10.1,3,20.1,5.1,30c0.3,1.4,0.6,2.8,0.9,4.2c2.6,12.4,6.8,25,3.7,37.9c-5.4,11.5-6.3,12.9-9.8,15.7
		c-1.2,2.2,1.8,20.1,7.8,11.9c0.3-0.4,11.1-32.9,11.8-36.8c1.8-13.1,5-26.2,2.9-39.3c-0.7-4.3-1.9-8.5-2.4-12.8
		c-1-9.7,2-19.8,2.9-29.4c0.9-8.5,1.7-17.3,1.2-25.9c0.8,13.6,0.8,27.3,1.8,40.8c1.7,23.6,3.4,47.1,3.9,70.8c0,4.3,0.1,13.2,0,14.9
		c-0.3,7.6,0.2,15.8-2.1,23.1c-1.6,5-3.5,14-0.5,18.6c3.2,4.9,6.4,3.2,10.8-0.2c3.1-2.4-0.4-3.5,0-7.9s-2.4-27.9,2.7-45.5l-0.1-0.9
		c2.4-17.9,7.3-36.5,7.2-47.6l-1-19.9c0,0-16.9-60.9-15.3-70.4c1.3-7.5,6.8-11.1,0-35.4c0.3-0.1-18.4-2.4-18.6-2.3
		c-1.1-2.5,19.1-44,18.6-47.4c0,0,19-0.6,24.9-6.8c0,0,1.8-14.4,5.5-8.3c1.8-4.3,6.4,2.8,9.9,0.2c2.8-2.1,6.4-4.3,10-5.2
		C1099.2,1039.5,1096.7,1032.4,1093.3,1025.7z M1042.8,1175.4c0,0.2,0,0.4,0,0.6C1042.9,1175.7,1042.9,1175.6,1042.8,1175.4
		L1042.8,1175.4z M1042.7,1173.6c0,0.2,0.1,0.5,0.1,0.9C1042.8,1174.2,1042.7,1173.9,1042.7,1173.6L1042.7,1173.6z"/>
	<path class="st20" d="M1089.8,1045.8c3.1,4.4,6.6,8.4,10.7,9.3c-0.8-5.4-1.7-10.6-2.8-15.6c-1.6-6.7-6.9-11.9-13.6-13.4
		c-4.2-0.8-9.1-1.9-13.6-3.1c5.5,4,10.3,8.8,14.1,14.4C1086.5,1040,1088.2,1042.9,1089.8,1045.8z"/>
	<path class="st21" d="M1097.5,944.1"/>
	<path class="st21" d="M1035.5,915.3"/>
	<path class="st22" d="M1068.9,1090.9c-0.7-5.3-0.7-10.7-0.1-16.1v0.1c-0.2-3.1-0.2-6.2,0-9.3c0.3-5.5,0.3-10.1-1.3-15.4
		c-0.6-1.9,2.2-22.3,1.8-24.2c-11.4,5-20.3,10.6-27.2,11.1c0,0-20.1-8.6-24-13.9c-6.4,11-4.3,43-4.3,43s6.3,15,6,20.2
		c0,0.2-0.6,3.5-0.7,3.8C1023.1,1094,1041,1098.7,1068.9,1090.9z"/>
	<path class="st22" d="M1026.8,1057.2c0-0.4-0.1-0.8-0.4-1c-0.2-0.2-0.3-0.5-0.2-0.8c1.5-6.3,2.4-12.1,5.3-18
		c1.5-3.2,3.7-6.5,4.6-10c0.3-1.3,0.5-2.5,0.5-3.8c0-0.7-0.5-1.3-1.2-1.3c-0.3,0-0.6,0.1-0.8,0.3c-0.9,0.7-1.9,1.1-3,1.1
		c-4.7,0-9.4-1.4-11.2-0.5c-1.8,0.9-6.4,4.5-12.9,16.6c-5.6,10.5-2.4,43.3,1.7,44.2c0.6,0.1,5.2-8.5,5.6-9.7c0.2-0.7,1-1,1.6-0.8
		c0.3,0.1,0.6,0.3,0.7,0.7c1.3,2.7,1.8,10.5,2.9,14.8c0.5,2,6.2,3.8,6.2,3.8C1026.1,1081.5,1026.4,1065.5,1026.8,1057.2z"/>
	<path class="st21" d="M1096.8,942.6"/>
	<path class="st23" d="M1056.2,967.5c0,0,7.1-18.3,25.1-5.2c-1.4,2.4-3.5,4.4-5.9,5.8c-3,1.6-7.3,1.1-13.4-0.2
		C1057.8,966.9,1056.2,967.5,1056.2,967.5z"/>
	<path class="st23" d="M1035,967.3c0,0-7.1-18.3-25.1-5.2c1.4,2.4,3.5,4.4,5.9,5.8c3,1.6,7.3,1.1,13.4-0.2
		C1033.4,966.7,1035,967.3,1035,967.3z"/>
	<circle class="st23" cx="1025.8" cy="963.7" r="1.7"/>
	<path class="st22" d="M1009.3,1023.4c-1-0.2-5,2.7-5.4,3.6c-2.8,6.4-11.9,29.7-14.1,38.9c-2.5,10.9-5.9,28.3,2.2,31.4
		c8.1,3.1,18.6-14.1,20.5-20.4s12-54,8.9-54C1019.7,1022.9,1011.3,1023.9,1009.3,1023.4z"/>
	<path class="st24" d="M1089.1,1033.4"/>
	<path class="st22" d="M1099.2,1047c-0.4-2.3-0.9-4.5-1.3-6.7c-1.6-7.5-7.5-13.3-14.9-14.8c-8.2-1.7-18.5-4.2-23.2-6.8
		c-1.1-0.6-2.5-0.2-3.1,0.9c-0.1,0.2-0.2,0.4-0.2,0.6c-1,4.7-3,11.9-3.4,13.6c-0.6,2.7,2.3,41.7,4.3,53.1c0.3,2.2,0.5,4.5,0.6,6.7
		c0,0,15-1.1,13.6-3.7c-3-5.9,1.7-24.4,4-27.3c1-1.2,2.2-2.2,3.6-2.9c0.5-0.2,0.9-0.6,1.1-1.1c3.7-7.5,9.1-7.3,17.2-8.9
		C1098.7,1049.4,1099.5,1048.2,1099.2,1047z"/>
	<path class="st22" d="M1085.6,1025.8c9.9,0.4,16.1,17,19.4,25.8c5.7,15.1,14.1,40.7,0.9,48.9c-16.8,10.3-24.8-36.2-26.7-42.6
		c-1.9-6.3-2.5-28.5-1.3-30.7C1078.6,1025.8,1084.6,1025.8,1085.6,1025.8z"/>
	<path class="st25" d="M1039,1018.3c0,0-3.6,13.3,4.7,18.6c0,0-17.1-1.6-18.6,2.1c0,0,6.2-13.1,7-15.3
		C1033,1021.5,1039,1018.3,1039,1018.3z"/>
	<path class="st25" d="M1056.2,1015.7c0,0-4.5,16.1-12.1,21.4c0,0,19.3,0.1,19.7,4.4c0,0-2.3-15.7-2.5-18.3
		C1061.1,1020.7,1056.2,1015.7,1056.2,1015.7z"/>
	<path class="st26" d="M1018.8,1090.2c-1.1,2.7-1.6,5.8-2.3,8.6c-0.8,3.1-1.5,6.2-2.2,9.4c-1.4,6.2-2.4,12.5-2.9,18.8
		c-0.9,13.4-1.6,26.1-1.7,39.4c-0.3,32-3.8,63.8-6.9,95.6c-0.2,2.1-1.8,7.8-0.5,9.5c1.2,1.5,7.9,2.3,9.8,2.8
		c21.9,5.3,44.7,5.2,66.5-0.4c-4.1-11.9-7.6-24-10.6-36.2c-1-3.6-1.6-7.3-1.8-11.1c-0.1-4.8,1.2-9.5,2.5-14.2
		c5.6-20.9,10.7-41.9,15.3-63.1c0.9-4,1.7-8,1.6-12.1c-0.1-4.4-1.3-8.6-2.6-12.8c-2.2-7.3-4.7-14.4-7.6-21.4
		c-1.5-3.5-3-6.9-4.8-10.2c-0.3-0.5-0.7-1.7-1.2-2.1c-0.7-0.5-1.9,0-2.7,0.1l-6.8,0.9l-8.4,1.2c-2.8,0.5-5.7,0.7-8.6,0.8
		c-2.4,0-4.8-0.2-7.3-0.5c-2.8-0.3-5.7-0.7-8.5-1.1C1024.7,1091.7,1021.2,1091.5,1018.8,1090.2z"/>
	<path class="st27" d="M1102.7,1019.5c2.2-1,4.2-2.4,5.9-4.1c2.2-2.2,4.1-5.9,2.6-8.7c-1.1-2.1-3.5-2.9-5.7-3.5l-4.8-1.3
		c-1-0.3-3.9-0.5-4.6-1.4c-1.1-1.7,1.1-3.1,2.3-3.6c3.5-1.6,7-1.7,8.1-6.5c1.4-7.2-5.6-12.1-7.6-14.6c-2.4-2.9,2.2-7.9,2.2-10.9
		c0.1-2.7-1.6-5.1-3.6-6.9c-2.6-2.4-5.8-4-7.4-7.2c-1.1-2.3-2.4-4.5-3.7-6.7c-4.8-7.3-11.7-13.1-19.9-16.1c-1.9-0.7-3.8-1.2-5.8-1.6
		c-3.1-0.8-6.2-1.2-9.5-1.3c-15.3-0.2-16.7,7.4-16.7,7.4s-11.6-1.9-16.4,3.4c-6.4,7-3.1,16.2-4.1,17.9s-9.4,5.1-9.1,9.5
		c0.2,4.4,4.4,9.1,2.4,11.6c-2.1,2.5-9.1,7.4-7.6,14.6s8.7,4.7,10.5,8.6s-12.4,2.4-15.1,7.8c-2.7,5.4,4.5,11.6,8.6,12.7
		c4.1,1.1-3.9,2.3-3.9,7.1c0,2.9,8.7,13,16.8,7.6c4.2-2.8,9.7,5.2,12.6,7.6c6.1,5,15.9,9.1,23.5,5.9c3.7-1.6,6.7-4.9,10.7-6
		c6.2-1.6,12.6,3.2,19,2.7c1.4-0.1,2.7-0.5,3.7-1.3c1.1-0.9,1.7-2.3,1.7-3.7c-0.1-1.1-0.7-2.1-1.1-3.1c-0.4-1.1-0.4-2.4,0.3-3.1
		c0.4-0.3,0.8-0.6,1.2-0.6c5.6-1.7,11.6-1.6,17-3.5c0.6-0.1,1.1-0.5,1.5-1.1c0.4-0.9-0.1-2-0.7-2.7c-1.2-1.6-2.7-2.9-4.4-4.1
		C1101.7,1019.8,1102.2,1019.6,1102.7,1019.5z"/>
</g>
<g>
	<path class="st3" d="M3034.1,1034.8c6.3,4.6,15.7,8.8,18.3,9.9c5.4,2.3,8-0.6,9.1-2.4c0,0,28.9-44.4,29.6-57.2
		c0,0-13.1-18.2-17-18.2c-3.9,0.1-30.7,46.6-30.7,46.6L3034.1,1034.8z"/>
	<path class="st3" d="M3017.2,970.9c0,0,28.2,36.2,31.8,36.9c3.5,0.8-3.2,21.8-11.4,26.2c-8.2,4.4-20.5-14.2-22.9-19.6
		S3017.2,970.9,3017.2,970.9z"/>
	<path class="st28" d="M3076.5,968.2l7.2-10c0,0,12.2,5.6,11.4,7.2c-0.7,1.6-8.8,11.9-8.8,11.9L3076.5,968.2z"/>
	<path class="st28" d="M3080.5,964.4c0,0-1.9-5-1.9-7.1c0-2,6.9-11.7,7.8-12.8c0.8-1,13.7,7.6,13.2,8.7c-1.3,3-2.4,9.6-4.3,12.3
		c-1.3,1.8-3.1,3.2-5.2,4.2C3087.5,970.8,3080.5,964.4,3080.5,964.4z"/>
	<path class="st28" d="M3094.2,930.7c0.8,1,0,3.1-1.8,8c-1.7,4.6-3.2,9.6-4,11.3c-1.7,3.5-5.3,1.6-5.2,0.1
		c0.1-1.6,4.9-11.5,6.4-15.3C3091.2,930.8,3092.6,928.6,3094.2,930.7z"/>
	<path class="st28" d="M3088.8,947.5c0,0,7.3-13.7,8-15.2s2.4-3.6,3.8-3.4c1.4,0.3,0.6,2.8,0,4.6s-6.8,15.9-7.8,17.1
		C3091.9,952,3088.8,947.5,3088.8,947.5z"/>
	<path class="st28" d="M3096.5,952.5c0,0-3.1-1.1-3.8-2.4c-0.8-1.3,7.2-15.6,8.3-17.2c1.1-1.6,3.4-2.3,3.1,0.3
		C3103.8,935.8,3096.5,952.5,3096.5,952.5z"/>
	<path class="st28" d="M3096.6,952.1c1.5-3.3,4.2-7.2,5-8.4s2.8-1.6,2.3,0.3c-0.5,1.9-4.2,10.2-5.4,12.9
		C3097.7,958.3,3095.1,955.3,3096.6,952.1z"/>
	<path class="st28" d="M3079.8,947.6c0,0,6.5,3.6,7.8,8.6c1.3,4.9-7.2,7.3-8,5.4c-0.4-0.9-2-7.7-1.9-9.5
		C3077.6,950.3,3079.8,947.6,3079.8,947.6z"/>
	<path class="st28" d="M3080.9,953.3c-2.1-0.9-3.4-0.5-3.1-2.3c0.2-1.9,1.8-5,1.9-7.1c0-2.1-0.7-4.1,0.2-4.9
		c0.9-0.8,2.8,2.3,3.2,4.1s0.5,7.1,0,9.3C3082.6,954.5,3080.9,953.3,3080.9,953.3z"/>
	<path class="st29" d="M3088.2,958.3c-0.1,0-0.1,0-0.1,0c-0.3,0-0.6-0.3-0.6-0.6c-0.1-3-3.7-6-3.8-6c-0.3-0.2-0.3-0.6-0.1-0.9
		c0.2-0.3,0.6-0.3,0.9-0.1c0.2,0.1,4.2,3.4,4.2,6.9C3088.6,958,3088.5,958.3,3088.2,958.3z"/>
	<path class="st29" d="M3095.1,951.4c-0.2,0.1-0.3,0-0.5-0.1l0,0c-0.1,0-3.1-2.5-6-2.5c-0.3,0-0.6-0.3-0.6-0.6s0.3-0.6,0.6-0.6
		c3.3,0,6.6,2.7,6.7,2.8c0.2,0.2,0.3,0.6,0.1,0.9C3095.3,951.3,3095.2,951.3,3095.1,951.4z"/>
	<path class="st30" d="M3050,1015.8L3050,1015.8c-0.4,0.1-0.7-0.2-0.8-0.5c-0.2-2.1-2.1-7.6-2.2-7.7c-0.1-0.3,0.1-0.7,0.3-0.8
		c0.3-0.1,0.7,0.1,0.8,0.3s2,5.7,2.3,8C3050.5,1015.4,3050.3,1015.7,3050,1015.8z"/>
	<path class="st30" d="M3046.9,1010.7L3046.9,1010.7c-0.4,0.1-0.7-0.2-0.7-0.6c-0.1-1.6-1.4-2.8-1.5-2.8c-0.2-0.2-0.3-0.6-0.1-0.9
		s0.6-0.3,0.9-0.1c0.1,0.1,1.7,1.6,1.9,3.6C3047.3,1010.4,3047.2,1010.6,3046.9,1010.7z"/>
	<path class="st29" d="M3094.3,956.9c-0.2,0.1-0.5-0.1-0.6-0.2c-0.1-0.2-2.6-3.8-8-3.8c-0.3,0-0.6-0.3-0.6-0.6s0.3-0.6,0.6-0.6
		c6.1,0.1,8.9,4.2,9,4.3c0.2,0.3,0.1,0.6-0.2,0.9C3094.4,956.9,3094.4,956.9,3094.3,956.9z"/>
	<polygon class="st29" points="3076.5,968.2 3078.7,965.2 3089.9,973.1 3086.4,977.4 	"/>
	<polygon class="st31" points="3012.7,1115.1 3010.7,1128.9 3006.2,1127.7 3008.3,1113.6 	"/>
	<polygon class="st28" points="3036.5,1278.3 3055,1276.5 3060.7,1312.7 3047.9,1317.6 	"/>
	<path class="st32" d="M3048.1,1324.7l-4-10.9c-0.2-0.7,0.1-1.4,0.7-1.8l13.7-7.2c0.9-0.5,2,0.1,2.1,1l2.1,13.4
		c0.1,0.7-0.3,1.3-0.9,1.6l-11.9,4.7C3049.2,1325.8,3048.4,1325.4,3048.1,1324.7z"/>
	<path class="st29" d="M3040.7,1292.6l-3.1-10.3l17.1-7.8l1.4,8.1C3056.1,1282.6,3046.3,1291.9,3040.7,1292.6z"/>
	<polygon class="st28" points="2931.9,1276.1 2902.2,1305.5 2889.9,1298.2 2919,1262.5 	"/>
	<path class="st32" d="M2893.5,1292.3l7.9-9.3c0.4-0.5,1.2-0.5,1.6-0.1l10.3,11.4c0.5,0.5,0.3,1.3-0.2,1.7l-11.7,10.4
		c-0.5,0.3-2.3-1.8-2.6-2.4l-5.4-10.5C2893.2,1293.2,2893.2,1292.7,2893.5,1292.3z"/>
	<path class="st29" d="M2923.3,1284.6c0,0-6.9-8.6-9.7-15.5l2.8-3.4l14.2,11.7L2923.3,1284.6z"/>
	<path class="st33" d="M3026.1,1134.5c0,0.2,0.1,0.3,0.1,0.5c1.4,4.1,23.3,58.4,23.3,66.5c0,11.1,7.2,65.3,6.1,70.7
		c-1.1,5.4-3.5,5.8-3.5,5.8l-21.7,8.7c-1.4,0.6,0-0.1-0.6-1.6c-4-9.3-9.4-41-10.4-44.8c-0.8-3.4-5.7-7.1-5.8-10
		c0-0.9-1.8-2.1-2.5-2.7l-1.3-1c-0.9-0.7,0.3-1.8,0.6-2.9c0,0-16.7-44.7-19.3-52.7c-2.6-7.8-10.4-55.8-10.2-67.9
		c0-1.4,1.2-2.7,2.6-2.8l34.4-3.2c1.5-0.1,2.8,0.9,3.1,2.4L3026.1,1134.5z"/>
	<path class="st34" d="M3031.6,1294.1c0,0-3.7-8.2-4.5-10.4c-0.8-2.1,32.1-16.7,32.1-16.7l2.3,12.3L3031.6,1294.1z"/>
	<polygon class="st35" points="3025.7,1110.9 3025.1,1122.5 3000.5,1118.6 2967.9,1110.3 2969.1,1101.1 	"/>
	<path class="st31" d="M2927.7,1273.6c-0.2-0.1-3.3-5.7-3.5-5.7c-4.5,0.3-12.7-4.6-9.9-8.2c1.6-2,24.4-36.1,27.1-41.8
		c1.6-3.4,2-8.3,3.2-7.5c2.7,1.6,0.7-2.9,0.6-3.9l1-0.7c2.5-0.5-1.2-3.1,0.1-3.2l1.9-2.2c0.2-0.9,2.7-62.6,2.7-62.6l-4.9-24.8
		c0-0.7,0.4-1.3,1-1.7l5.4-2.7c0.5-0.3,1.2-0.5,1.9-0.3l53.4,9.3c0.9,0.3,5,1.8,5,2.8l-7.3,33.7c0,0.2-6.8,14.8-6.8,14.9
		c-1.2,4.1-11.5,43.3-12.6,47c-3.6,11.8-5.3,11.3-8.2,14.9c-4.6,5.8-37.4,39.9-42.8,45.8c-0.6,0.6-1,1.4-1.9,1.2L2927.7,1273.6z"/>
	<path class="st36" d="M3009.9,1129c-0.1,0-0.1,0-0.1,0l-4.5-0.8c-0.2-0.1-0.3-0.1-0.4-0.3c-0.1-0.1-0.1-0.3-0.1-0.5l1.6-6.5
		c0.1-0.3,0.4-0.5,0.8-0.5c0.3,0.1,0.5,0.4,0.5,0.8l-1.4,5.8l3.2,0.6l1.5-6.4c0.1-0.3,0.4-0.5,0.8-0.5c0.3,0.1,0.5,0.4,0.5,0.8
		l-1.6,6.9C3010.5,1128.8,3010.2,1129,3009.9,1129z"/>
	<path class="st34" d="M2908.7,1264.3c0,0,1.4-5.8,4.5-8c2.5-1.8,27.2,18.5,27.2,18.5s-6.8,6.9-8.7,6.7
		C2929.9,1281.4,2908.7,1264.3,2908.7,1264.3z"/>
	<path class="st37" d="M3007.9,969.7l15.2,57.8c0,0.1,0.1,0.2,0.1,0.3l4.2,62.3c0,0.1,0,0.2,0.1,0.3l5.2,22.9c0.2,1-0.5,2.1-1.6,2.2
		l-12.2,1.5c-0.3,0.1-0.5,0-0.8-0.1l-51.8-17.2c-0.9-0.3-1.4-1.2-1.2-2.1l11.9-127.4C2976.3,952.4,3007.5,967.8,3007.9,969.7z"/>
	<path class="st26" d="M3004.9,969.6l-19.6-14.4c-1.6-1.7-1.3-3.9-1-4.9l4.2-9.9c0.4-1.4,1.9-1.9,2.9-1l18.3,15.6
		c0.6,0.5,0.9,1.5,0.7,2.4l-2.8,11C3007.3,969.7,3005.9,970.3,3004.9,969.6z"/>
	<path class="st28" d="M3005.3,970.7c2.5,7.2,4.2,11.6-2.8,11.6c-7.1,0-16.8-13.8-16.8-21.5c0-7.6,0.4-4.8,7.5-4.8
		C3000.1,956.1,3002.1,961.8,3005.3,970.7z"/>
	<path class="st38" d="M2998.4,897.7c0,0-4.3-3.6-10.7,2.8c-3.7,3.7-9.8,17.7-10.4,20.5c0.8,4.7,1.1,3.7,4.1,7.1
		c4.9,5.5,13,7.8,13,7.8L2998.4,897.7z"/>
	<polygon class="st28" points="2977.2,954 2985.8,921.5 3009,929.6 3001.6,965 	"/>
	<path class="st26" d="M2995.6,1136.1l-48.5-3.4l-1.9-7c0,0-15.8-3.5-17-14.2c-0.3-2.8-2.4-10.5-1.3-20.1c0.5-4.4,3.9-9,4.6-14.1
		c3.6-26,8.7-56.9,8.7-56.9s-2.8-33.4-0.1-41.6c5.3-16.3,27.7-28.2,38.5-30.7c0,0,20.4,7.2,13.3,21.1c-3.2,6.2-3,6-3.8,11.3
		c-4.3,27.1,6,131.2,6,131.2L2995.6,1136.1z"/>
	<path class="st39" d="M2942.1,1124.5l-0.6,10.9c-0.1,0.5,0.5,1,1.1,1l52.2,3.4c0.7,0.1,1.3-0.4,1.2-1l-0.6-11.6
		c0-0.5-0.5-0.9-1.1-1l-51-2.6C2942.6,1123.5,2942.1,1123.9,2942.1,1124.5z"/>
	<path class="st39" d="M2955.9,1083.7c0,0-28,9-28.6,12.7s-0.1,7.5,1.9,7.5s30.5-10.6,30.5-10.6L2955.9,1083.7z"/>
	<path class="st39" d="M2937.2,1121.4c0.3,0,0.6-0.1,0.9-0.3c0.3-0.3,0.2-0.9-0.3-1.1c0,0-1.8-1-3.8-3.8c-1.9-2.5-4.4-7.1-5.6-14.3
		c-2.1-12.8,6.2-26.9,6.3-27.1c0.1-0.1,0.1-0.1,0.1-0.2c0.1-0.2,5.6-21.2,11.4-30.8c0.2-0.4,0.1-0.9-0.4-1.1s-1-0.1-1.3,0.3
		c-5.8,9.6-11.1,29.4-11.5,31.1c-0.3,0.6-2.3,4-4.1,8.9c-1.7,4.9-3.5,12.1-2.4,19.1c2.5,14.7,10,19,10.2,19.2
		C2936.9,1121.3,2937,1121.4,2937.2,1121.4z"/>
	<path class="st40" d="M2939.6,1009.3c0.1,0,0.2,0,0.3-0.1c0.5-0.1,0.8-0.6,0.6-1c-1.9-4.9-0.2-8.6,2-12.4c0.2-0.4,0-0.9-0.5-1.1
		c-0.5-0.2-1-0.1-1.3,0.3c-2.3,4.1-4.1,8.1-2,13.6C2938.9,1009,2939.2,1009.2,2939.6,1009.3z"/>
	<path class="st41" d="M2948.1,1135.8L2948.1,1135.8c0.6,0,1-0.3,1-0.7v-8.7c0-0.4-0.4-0.8-0.9-0.8s-0.9,0.3-0.9,0.7v8.7
		C2947.2,1135.3,2947.6,1135.7,2948.1,1135.8z"/>
	<path class="st41" d="M2955.7,1136c0.5,0,0.9-0.2,1-0.5c0.5-1.6-0.3-8.7-0.4-9.5c-0.1-0.4-0.5-0.7-1-0.7s-0.9,0.4-0.9,0.8
		c0.3,3,0.8,8,0.5,9C2954.8,1135.5,2955.1,1135.9,2955.7,1136C2955.5,1136,2955.6,1136,2955.7,1136z"/>
	<path class="st42" d="M2976.1,1135.5L2976.1,1135.5c0.6,0,1-0.3,1-0.8c0-1.6,0.2-7.1,0.2-7.2c0-0.5-0.4-0.8-0.9-0.9
		c-0.5,0-1,0.3-1,0.8c0,0.2-0.2,5.6-0.2,7.2C2975.2,1135.1,2975.6,1135.4,2976.1,1135.5z"/>
	<path class="st42" d="M2966,975.2c0.1,0,0.2,0,0.3-0.1l5.7-1.5c0.5-0.1,0.8-0.6,0.6-1s-0.7-0.6-1.2-0.5l-5.7,1.5
		c-0.5,0.1-0.8,0.6-0.6,1C2965.3,974.9,2965.6,975.1,2966,975.2z"/>
	<path class="st42" d="M2953.8,1097.3c0.1,0,0.3,0,0.4-0.1c0.5-0.2,0.7-0.6,0.5-1c-0.5-0.9-2.1-5.6-2.7-7.3
		c-0.2-0.4-0.7-0.7-1.2-0.6s-0.8,0.6-0.6,1c0.2,0.6,2.2,6.4,2.8,7.5C2953.1,1097,2953.4,1097.2,2953.8,1097.3z"/>
	<path class="st42" d="M2948.9,1098.6c0.1,0,0.3,0,0.4-0.1c0.5-0.2,0.7-0.6,0.5-1c-0.4-0.8-1.4-4.8-2.1-7.2
		c-0.1-0.5-0.6-0.7-1.1-0.6s-0.9,0.5-0.8,0.9c0.2,0.6,1.6,6.4,2.2,7.5C2948.2,1098.4,2948.5,1098.5,2948.9,1098.6z"/>
	<path class="st43" d="M2934,1103.8c0.1,0,0.2,0,0.3,0c0.5-0.1,0.8-0.5,0.7-0.9l-2.1-7.6c-0.1-0.4-0.6-0.7-1.2-0.6
		c-0.5,0.1-0.8,0.5-0.7,0.9l2.1,7.6C2933.2,1103.5,2933.6,1103.8,2934,1103.8z"/>
	<path class="st40" d="M2941.9,1007.8c0.4,0,0.8-0.2,0.9-0.5c1-2.6,3.1-3.9,3.1-4c0.4-0.3,0.5-0.8,0.2-1.1s-0.9-0.4-1.3-0.2
		c-0.1,0.1-2.5,1.7-3.8,4.7c-0.2,0.4,0.1,0.9,0.6,1C2941.8,1007.8,2941.8,1007.8,2941.9,1007.8z"/>
	<path class="st40" d="M2941.4,1018.4c0.2,0,0.5-0.1,0.7-0.2l1.3-1c0.4-0.3,0.4-0.8,0.1-1.2s-0.9-0.3-1.3-0.1l-1.3,1
		c-0.4,0.3-0.4,0.8-0.1,1.2C2940.8,1018.3,2941.1,1018.4,2941.4,1018.4z"/>
	<path class="st39" d="M2966.5,960.2c0.2,0,0.3,0,0.5-0.1c1-0.5,3.2-1.7,3.3-1.7c0.5-0.2,0.6-0.8,0.3-1.1c-0.3-0.4-0.9-0.5-1.3-0.3
		c0,0-2.3,1.2-3.2,1.7c-0.5,0.2-0.6,0.7-0.3,1.1C2965.9,960,2966.2,960.1,2966.5,960.2z"/>
	<path class="st39" d="M2966.3,963.9c0.2,0,0.4-0.1,0.6-0.2l2-1.2c0.4-0.2,0.5-0.8,0.2-1.1s-0.9-0.5-1.3-0.2l-2,1.2
		c-0.4,0.2-0.5,0.8-0.2,1.1C2965.8,963.8,2966,963.9,2966.3,963.9z"/>
	<path class="st40" d="M2971.2,989.6c0.2,0,0.4-0.1,0.6-0.1l1.3-0.8c0.5-0.2,0.5-0.8,0.2-1.1s-0.9-0.5-1.3-0.2l-1.3,0.8
		c-0.5,0.2-0.5,0.8-0.2,1.1C2970.7,989.5,2970.9,989.6,2971.2,989.6z"/>
	<path class="st40" d="M2974,996.7c0.2,0,0.4-0.1,0.6-0.1l1.6-1c0.4-0.2,0.5-0.8,0.2-1.1s-0.9-0.5-1.3-0.2l-1.6,1
		c-0.4,0.2-0.5,0.8-0.2,1.1C2973.4,996.6,2973.7,996.7,2974,996.7z"/>
	<path class="st40" d="M2942.9,1091.3c0.1,0,0.2,0,0.4-0.1c0.5-0.2,0.8-0.6,0.6-1l-0.9-1.9c-0.2-0.4-0.8-0.6-1.2-0.5
		c-0.5,0.2-0.8,0.6-0.6,1l0.9,1.9C2942.2,1091.1,2942.6,1091.3,2942.9,1091.3z"/>
	<path class="st40" d="M2938.7,1093.2c0.1,0,0.2,0,0.4-0.1c0.5-0.2,0.8-0.6,0.6-1l-0.9-1.9c-0.2-0.4-0.8-0.6-1.2-0.5
		c-0.5,0.2-0.8,0.6-0.6,1l0.9,1.9C2938,1093,2938.4,1093.2,2938.7,1093.2z"/>
	<path class="st40" d="M2956.2,1087c0.1,0,0.1,0,0.2,0c0.5-0.1,0.9-0.5,0.8-0.9l-0.3-2.4c-0.1-0.5-0.5-0.8-1-0.7
		c-0.5,0.1-0.9,0.5-0.8,0.9l0.3,2.4C2955.4,1086.6,2955.8,1086.9,2956.2,1087z"/>
	<path class="st44" d="M2994.6,1116.4c-0.4,0-0.8-0.3-0.8-0.8c-0.1-0.3-3.8-35.1-5.9-71.4c-1.4-24.3-1.7-48.3-0.6-64.2
		c0.1-0.5,0.4-0.8,0.9-0.8c0.5,0.1,0.8,0.4,0.8,0.9c-1,15.9-0.8,39.8,0.6,64c2.2,36.3,5.9,71,5.9,71.4c0.1,0.5-0.3,0.9-0.7,0.9
		C2994.6,1116.4,2994.6,1116.4,2994.6,1116.4z"/>
	<path class="st39" d="M2987.8,1097.1c-2.7-0.2-1.5,6,0.7,5.7C2991.2,1102.4,2989.7,1097.3,2987.8,1097.1z"/>
	<path class="st39" d="M2981.9,1012.3c-3.7-0.1-2.5,6.2,0.6,5.8C2986.2,1017.5,2984.5,1012.4,2981.9,1012.3z"/>
	<path class="st39" d="M2983.9,1058.7c-2.8,1-4.4-4.9-1-5.5C2985.2,1052.8,2987.2,1057.5,2983.9,1058.7z"/>
	<path class="st44" d="M2990.7,992.2c-1,0-2.1-1-2.8-2.7c-1.2-3-0.6-7.1-0.5-7.2c0.1-0.3,0.3-0.6,0.6-0.6c0.3-0.1,0.6,0,0.8,0.2
		c0.1,0.2,3.3,4,3.6,7.2c0.2,2.4-0.9,3-1.3,3.1C2991,992.2,2990.8,992.2,2990.7,992.2z M2988.9,984.6c-0.1,1.3,0.1,3,0.6,4.3
		c0.5,1.2,1,1.7,1.2,1.7c0.1-0.1,0.2-0.5,0.2-1.4C2990.7,987.7,2989.7,985.9,2988.9,984.6z"/>
	<path class="st44" d="M2994.1,1119c-0.6,0-1-0.3-1.3-1.2c-0.5-1.3-0.8-3.4-0.2-4.5c0.2-0.5,0.6-0.6,0.9-0.8c0.3-0.1,0.6,0,0.9,0.2
		c0.6,0.5,1,2,1.2,4.5c0,0.1,0,0.2-0.1,0.3C2995.4,1118,2995,1119,2994.1,1119L2994.1,1119z"/>
	<path class="st45" d="M3026.3,1070.8c-0.3-1.1,0.2-2.3,1.3-2.7c1.1-0.5,2.4,0.1,2.9,1.2l12.3,30.3c0.5,1.1-0.1,2.4-1.2,2.9
		c-1.1,0.5-2.4-0.1-2.9-1.2l-12.3-30.3C3026.4,1070.9,3026.3,1070.8,3026.3,1070.8z"/>
	<path class="st34" d="M3071.3,1068.9c7,16-20.8,38-59.8,56.5c-42.6,20.2-140.7,61.8-152.3,37.6c-12.8-26.6,68.1-68.4,129.8-91.3
		C3025.8,1058.2,3066.7,1058.4,3071.3,1068.9z"/>
	<path class="st46" d="M3048,1065.2l-163.9,71.4c0,0-27.8,22.3-24.8,26.9c0.9,1.4,6.8,1.7,13.8,1.2c7.7-0.6,17.9-2.3,21.3-3.1
		l165.4-72.1c0,0,5.9-6.5,9.1-12.3c1.9-3.3,3.1-5.6,1.8-7.5c-1.3-1.8-6.8-3.5-12.2-4.2C3053.3,1064.8,3048,1065.2,3048,1065.2z"/>
	
		<ellipse transform="matrix(0.9315 -0.3638 0.3638 0.9315 -197.858 1179.1011)" class="st47" cx="3031.2" cy="1114.8" rx="8.4" ry="4.6"/>
	<path class="st47" d="M3034.7,1102c0.8,1.6,4.1,9.7,4.1,9.7l-15.7,6.1c0,0-3.7-8.4-4.2-9.7c-0.6-1.4-0.5-5,5.8-7.5
		C3030.9,1098.3,3034,1100.5,3034.7,1102z"/>
	<path class="st41" d="M3028.2,1109c-3.9,1.5-7.8,1-8.6-1c-0.8-2.1,1.7-5.1,5.6-6.6c3.9-1.5,7.8-1,8.6,1
		C3034.6,1104.5,3032.1,1107.5,3028.2,1109z"/>
	<path class="st48" d="M3025.3,1109.8c-0.6-0.2-0.9-0.4-1.1-0.9c-0.4-1.1,0.9-2.6,2.9-3.4s4.1-0.5,4.5,0.6c0.1,0.3,0.1,0.6,0,1
		c0,0-0.7,0.9-3,1.8C3026.4,1109.7,3025.3,1109.8,3025.3,1109.8z"/>
	<path class="st47" d="M2919.3,1168.4c-4.2,2-8.5,1.8-9.5-0.5c-1.1-2.3,1.4-5.7,5.7-7.8c4.2-2,8.5-1.8,9.5,0.5
		C2926,1163,2923.5,1166.4,2919.3,1168.4z"/>
	<path class="st47" d="M2920.1,1151.4c0.9,1.5,4.8,9.3,4.8,9.3l-15.2,7.2c0,0-4.3-8.1-4.9-9.3c-0.7-1.4-0.8-5,5.2-7.9
		C2916,1147.9,2919.3,1149.8,2920.1,1151.4z"/>
	
		<ellipse transform="matrix(0.9034 -0.4288 0.4288 0.9034 -213.9336 1360.3654)" class="st41" cx="2912.3" cy="1155" rx="7.6" ry="4.1"/>
	<path class="st48" d="M2911.3,1159.8c-0.6-0.1-0.9-0.3-1.2-0.8c-0.5-1,0.7-2.7,2.7-3.6c2-1,4-0.8,4.5,0.2c0.1,0.3,0.2,0.6,0.1,1
		c0,0-0.6,0.9-2.9,2C2912.3,1159.7,2911.3,1159.8,2911.3,1159.8z"/>
	<path class="st45" d="M2897.8,1129.5c-0.3-0.9,0.2-2,1-2.4c1-0.5,2.2-0.1,2.7,0.9l13.3,27c0.5,1,0.1,2.2-0.9,2.7s-2.2,0.1-2.7-0.9
		l-13.3-27C2897.9,1129.7,2897.9,1129.6,2897.8,1129.5z"/>
	<path class="st45" d="M3029.5,1106c0.1,0,0.1,0,0.2,0l-11.9-24.2c-0.5-1-1.7-1.4-2.7-0.9c-0.9,0.5-1.3,1.4-1,2.4
		c0.1,0.1,0.1,0.2,0.1,0.3l11.7,23.8C3027.1,1107.1,3028.2,1106.1,3029.5,1106z"/>
	<path class="st47" d="M2903.1,1136.9c-4.2,2-8.5,1.8-9.5-0.5c-1.1-2.3,1.4-5.7,5.7-7.8c4.2-2,8.5-1.8,9.5,0.5
		C2909.9,1131.5,2907.3,1134.9,2903.1,1136.9z"/>
	<path class="st47" d="M2904,1119.8c0.9,1.5,4.8,9.3,4.8,9.3l-15.2,7.2c0,0-4.3-8.1-4.9-9.3c-0.7-1.4-0.8-5,5.2-7.9
		C2899.9,1116.4,2903.2,1118.3,2904,1119.8z"/>
	<path class="st41" d="M2898,1127.2c-3.8,1.8-7.6,1.6-8.6-0.5c-1-2,1.3-5.2,5.1-6.9c3.8-1.8,7.6-1.6,8.6,0.5
		C2904,1122.3,2901.7,1125.5,2898,1127.2z"/>
	<path class="st48" d="M2895.1,1128.2c-0.6-0.2-1-0.5-1.3-1c-0.6-1.3,0.5-3.1,2.5-4.1c2-0.9,4.1-0.6,4.7,0.6
		c0.2,0.3,0.2,0.8,0.1,1.2c0,0-0.6,1-2.8,2.1C2896.2,1128.2,2895.1,1128.2,2895.1,1128.2z"/>
	<path class="st49" d="M2895.4,1125.5c-0.2-0.7-0.1-1.6,0.5-2.1l0.1-0.1c0.8-0.8,2.1-0.8,2.8,0.1c0.8,0.8,0.8,2.1-0.1,2.8l-0.1,0.1
		c-0.8,0.8-2.1,0.8-2.8-0.1C2895.6,1126,2895.4,1125.7,2895.4,1125.5z"/>
	<path class="st32" d="M2943.1,1102.7c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2942.3,1102.1,2942.6,1102.6,2943.1,1102.7z"/>
	<path class="st32" d="M2942.5,1107.1c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2941.7,1106.5,2942,1106.9,2942.5,1107.1z"/>
	<path class="st32" d="M2981.1,1128.3c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2980.3,1127.8,2980.7,1128.2,2981.1,1128.3z"/>
	<path class="st32" d="M2980.9,1134.1c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2980.1,1133.6,2980.4,1134,2980.9,1134.1z"/>
	<path class="st32" d="M2949.1,1102.7c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2948.3,1102.2,2948.5,1102.7,2949.1,1102.7z"/>
	<path class="st32" d="M2946.6,1099.4c0.5,0.1,0.9-0.2,1-0.8c0.1-0.5-0.2-0.9-0.8-1c-0.5-0.1-0.9,0.2-1,0.8
		C2945.8,1098.8,2946.1,1099.3,2946.6,1099.4z"/>
	<path class="st32" d="M2972.5,1113.1c-0.1-0.5-0.6-0.8-1.1-0.6c-0.5,0.1-0.8,0.6-0.6,1.1c0.1,0.5,0.6,0.8,1.1,0.6
		C2972.3,1114.1,2972.6,1113.6,2972.5,1113.1z"/>
	<path class="st32" d="M2970.2,1107.6c-0.1-0.5-0.6-0.8-1.1-0.6c-0.5,0.1-0.8,0.6-0.6,1.1c0.1,0.5,0.6,0.8,1.1,0.6
		C2970.1,1108.6,2970.4,1108.2,2970.2,1107.6z"/>
	<path class="st32" d="M2968.1,1111.2c-0.1-0.5-0.6-0.8-1.1-0.6c-0.5,0.1-0.8,0.6-0.6,1.1c0.1,0.5,0.6,0.8,1.1,0.6
		C2967.9,1112.2,2968.2,1111.7,2968.1,1111.2z"/>
	<path class="st49" d="M2905.1,1138.6l10.5-4.7c0,0,2.9,6.5,3.4,8c0,0-4.9,4.8-7.1,5.8c-2.1,1.1-3.4,0.3-3.4,0.3L2905.1,1138.6z"/>
	<path class="st50" d="M2914.4,1141.6c0.5,0.3,1.2,0.1,1.5-0.6c0.3-0.6,0.2-1.3-0.3-1.6c-0.5-0.3-1.2-0.1-1.5,0.6
		C2913.8,1140.6,2913.9,1141.3,2914.4,1141.6z"/>
	<path class="st50" d="M2910.8,1143.8c0.4,0.4,1.2,0.3,1.6-0.1c0.5-0.5,0.5-1.2,0.1-1.6s-1.2-0.3-1.6,0.1
		C2910.4,1142.6,2910.4,1143.4,2910.8,1143.8z"/>
	<path class="st49" d="M3021.6,1089.5l-10.6,5c0,0,2.4,6,3,6.7c0.6,0.8,7.8-0.4,11.4-3.4l-1.7-4.3
		C3022.9,1092.2,3022.2,1090.8,3021.6,1089.5z"/>
	
		<ellipse transform="matrix(0.9315 -0.3638 0.3638 0.9315 -186.9501 1171.8093)" class="st47" cx="3017.3" cy="1082.2" rx="8.4" ry="4.6"/>
	<path class="st47" d="M3020.9,1069.4c0.8,1.6,4.1,9.7,4.1,9.7l-15.7,6.1c0,0-3.7-8.4-4.2-9.7c-0.6-1.4-0.5-5,5.8-7.5
		C3017,1065.7,3020.1,1067.9,3020.9,1069.4z"/>
	<path class="st41" d="M3014.3,1076.4c-3.9,1.5-7.8,1-8.6-1c-0.8-2.1,1.7-5.1,5.6-6.6c3.9-1.5,7.8-1,8.6,1
		C3020.7,1071.9,3018.2,1074.9,3014.3,1076.4z"/>
	<path class="st48" d="M3011.4,1077.2c-0.6-0.2-0.9-0.4-1.1-0.9c-0.4-1.1,0.9-2.6,2.9-3.4s4.1-0.5,4.5,0.6c0.1,0.3,0.1,0.6,0,1
		c0,0-0.7,0.9-3,1.8C3012.5,1077.2,3011.4,1077.2,3011.4,1077.2z"/>
	<path class="st50" d="M3021.3,1097.1c0.5,0.4,1.2,0.2,1.6-0.3c0.5-0.5,0.4-1.3,0-1.6c-0.5-0.4-1.2-0.2-1.6,0.3
		C3020.8,1096,3020.8,1096.7,3021.3,1097.1z"/>
	<path class="st50" d="M3017.8,1098.3c0.3,0.5,1,0.7,1.6,0.4c0.6-0.3,0.9-1,0.6-1.5c-0.3-0.5-1-0.7-1.6-0.4
		S3017.5,1097.8,3017.8,1098.3z"/>
	<path class="st49" d="M3011.8,1074.5c-0.2-0.8,0.1-1.6,0.7-2.1l0.2-0.1c0.9-0.7,2.1-0.6,2.8,0.3s0.6,2.1-0.3,2.8l-0.2,0.1
		c-0.9,0.7-2.1,0.6-2.8-0.3C3012,1075.1,3011.9,1074.8,3011.8,1074.5z"/>
	<path class="st51" d="M2967.4,1131.1L2967.4,1131.1l-1.2-4.6c-0.1-0.3,0.1-0.8,0.5-0.8c0.3-0.1,0.8,0.1,0.8,0.5l1.2,4.6
		c0.1,0.3-0.1,0.8-0.5,0.8S2967.5,1131.5,2967.4,1131.1z"/>
	<path class="st51" d="M2967.7,1132.5C2967.7,1132.4,2967.7,1132.4,2967.7,1132.5l-0.4-1.7c-0.1-0.3,0.1-0.8,0.5-0.8
		c0.3-0.1,0.8,0.1,0.8,0.5l0.4,1.6c0.1,0.3-0.1,0.8-0.5,0.8C2968.2,1133,2967.8,1132.8,2967.7,1132.5z"/>
	<path class="st51" d="M2871.6,1157.4c-0.1-0.3,0.1-0.8,0.5-0.9l2.9-0.9c0.3-0.1,0.8,0.1,0.9,0.5s-0.1,0.8-0.5,0.9l-2.9,0.9
		C2872.1,1158,2871.7,1157.8,2871.6,1157.4z"/>
	<path class="st51" d="M2875.6,1149.5C2875.6,1149.4,2875.6,1149.4,2875.6,1149.5c-0.1-0.4,0.2-0.8,0.6-0.9l1.7-0.2
		c0.3-0.1,0.7,0.2,0.8,0.6c0.1,0.3-0.2,0.7-0.6,0.8l-1.7,0.2C2876,1150,2875.7,1149.9,2875.6,1149.5z"/>
	<path class="st51" d="M2880.7,1158.6c-0.1-0.3,0.1-0.6,0.3-0.8l1.2-0.7c0.3-0.2,0.8-0.1,0.9,0.2c0.2,0.3,0.1,0.8-0.2,0.9l-1.2,0.7
		c-0.3,0.2-0.8,0.1-0.9-0.2C2880.8,1158.7,2880.8,1158.6,2880.7,1158.6z"/>
	<path class="st28" d="M2989.5,921.6c0,0,1-8.8-4.1-8.6c-5.6,0.2-4,11.5,0.7,13.7C2988.8,928,2989.5,921.6,2989.5,921.6z"/>
	<path class="st29" d="M3005.8,942c-6-0.1-17.8-10.6-20.4-15.8c0,0,4.1,12.4,8.6,17.4c3.9,4.2,9.9,5.3,9.9,5.3L3005.8,942z"/>
	<path class="st29" d="M2987.6,921.1L2987.6,921.1c-0.3-0.1-0.6-0.3-0.5-0.6c0.3-2.7-0.8-4.4-2-4.6c-0.3-0.1-0.5-0.3-0.5-0.6
		c0.1-0.3,0.3-0.5,0.6-0.5c1.8,0.2,3.4,2.4,3,5.8C2988.1,920.9,2987.8,921.1,2987.6,921.1z"/>
	<path class="st29" d="M2992.5,941.1c-0.1,0-0.2,0-0.3-0.1c-3.2-1.9-3-6.2-3-6.4c0-0.3,0.3-0.5,0.6-0.5s0.5,0.3,0.5,0.6
		c0,0.1-0.2,3.8,2.4,5.4c0.2,0.2,0.3,0.5,0.2,0.8C2992.9,941,2992.7,941.1,2992.5,941.1z"/>
	<path class="st29" d="M2987.4,922.4L2987.4,922.4c-0.3,0-0.6-0.3-0.5-0.6c0.1-2.3-1.8-3-1.9-3c-0.3-0.1-0.4-0.4-0.3-0.7
		c0.1-0.3,0.4-0.4,0.7-0.3c0.9,0.3,2.6,1.7,2.5,4.1C2987.9,922.2,2987.7,922.4,2987.4,922.4z"/>
	<path class="st26" d="M2990.7,968.8l-19.6-14.4c-1.6-1.7-1.3-3.9-1-4.9l4.2-9.9c0.4-1.4,1.9-1.9,2.9-1l18.3,15.6
		c0.6,0.5,0.9,1.5,0.7,2.4l-2.8,11C2993.2,968.9,2991.8,969.5,2990.7,968.8z"/>
	<path class="st3" d="M2967.4,964.5l11.3,10.3l0.1,0.1c0.3,0.6,1.6,5,1.6,5.6l1.7,20c0.1,0.5,0,0.9-0.2,1.4l-14,41.2
		c-0.2,0.6-0.6,1.1-1.2,1.4l-0.5,0.3c-1.4,0.9-1.7,2.8-0.9,4.2l0,0c0.7,1,0.6,2.4-0.1,3.5l-1.4,1.9c-0.5,0.8-0.7,1.7-0.5,2.5
		l14.7,41.5c0,0,0,0,0,0.1c1.2,5.2-1.6,10.9-3.2,11.3l-28.2,7c-1.7,0.5-6.3-0.6-8.5-5.2v-0.1c-0.3-1.3-13.7-50.5-14.9-52.1
		c-0.1-0.1-0.1-0.1-0.1-0.2c0.6-4.1,8.3-54.9,15.2-71.1c2.7-6.2,9.1-15.5,9.4-16.8c0.9-4.2,6.8-6.7,11.4-8.5
		c1.3-0.5,5.3,0.2,7.9,1.5C2967.4,964.5,2967.4,964.5,2967.4,964.5z"/>
	<path class="st28" d="M2968.5,1115.1c0,0,10.4,5.4,11.2,6.2c0.8,0.8,6.3,12.6,4.2,17.4c-0.9,2-13.3-9.3-13.3-9.3l-2.4-10.4
		L2968.5,1115.1z"/>
	<path class="st28" d="M2952.8,1111.9c0,0,7.3,21.7,8.9,25.5c1.1,2.6,16.7-3,17.4-4s-3.8-9.1-4.5-10.6c-0.7-1.6-10.9-14.1-10.9-14.1
		L2952.8,1111.9z"/>
	<path class="st28" d="M2971.1,1129.2c0,0,4.1-4.7,5.5-3s4.4,10.8,4.6,11.9c0.5,2.5,0.8,3.6,1.1,5.7s-3.5,3.5-4.1,1
		c-0.4-1.8-0.6-1.3-1.4-4.7c-1.4-3-2.4-4-3.9-6.9C2972.3,1131.9,2971.1,1129.2,2971.1,1129.2z"/>
	<path class="st28" d="M2969.1,1131.8l4.9,0.1c0,0,3,11.6,3.2,13.8s-3.1,3.8-4.2,1.5c-1.3-2.8-3.8-11.9-3.8-11.9L2969.1,1131.8z"/>
	<path class="st28" d="M2964.6,1134.9l4.9-1.4c0,0,3.2,11.9,3.2,13.8c0.1,1.8-4.2,3-4.6,0.6s-2.6-10.7-2.6-10.7L2964.6,1134.9z"/>
	<path class="st28" d="M2961.7,1137.4c-1.7-3.4,3.5-1,4.5,0s1.6,6.7,1.7,9.1c0.1,2.4-2.8,3.2-3.9,0.9
		C2962.7,1144.5,2961.7,1137.4,2961.7,1137.4z"/>
	<path class="st26" d="M3025,1054.4l-4.9-76.3c0.3-2.1-3.1-8.7-4.6-10.3l-6.2-6c0,0-4.1,7.5-3.3,8.2c4.1,3.6,7.3,21.5,8.4,26.6
		C3017.3,1009.6,3025,1054.4,3025,1054.4z"/>
	<path class="st52" d="M2988.1,927.5l2.3,1.4c0.8,0.5,1.7-0.2,1.6-1.2l-0.6-16.7c0-0.6-0.5-1.2-1-1.2l-2.5-0.1
		c-0.6,0-1.2,0.6-1.2,1.3l0.9,15.3C2987.5,926.9,2987.8,927.3,2988.1,927.5z"/>
	<path class="st30" d="M2964,1046.8c-0.1,0-0.2,0-0.3-0.1l-11-6.1c-0.3-0.2-0.4-0.5-0.2-0.8s0.5-0.4,0.8-0.2l11,6.1
		c0.3,0.2,0.4,0.5,0.2,0.8C2964.4,1046.6,2964.2,1046.8,2964,1046.8z"/>
	<path class="st30" d="M2962.1,1053.9c-0.1,0-0.1,0-0.1,0l-7.9-1.2c-0.3-0.1-0.6-0.3-0.5-0.7c0.1-0.3,0.3-0.6,0.7-0.5l7.9,1.2
		c0.3,0.1,0.6,0.3,0.5,0.7C2962.7,1053.7,2962.4,1053.9,2962.1,1053.9z"/>
	<path class="st41" d="M2985.1,959.7c-0.2,0-0.3-0.1-0.5-0.2l0,0c-0.1-0.1-4.5-5.4-12.7-6.4c-0.3-0.1-0.6-0.3-0.5-0.7
		c0.1-0.3,0.3-0.6,0.7-0.5c8.7,1,13.3,6.6,13.5,6.8c0.2,0.3,0.2,0.6-0.1,0.9C2985.3,959.7,2985.2,959.7,2985.1,959.7z"/>
	<path class="st36" d="M2987.6,1209.4c-0.1,0-0.1,0-0.2,0c-0.3-0.1-0.5-0.4-0.5-0.7c0.8-3.8,6.9-24.9,7.2-25.9
		c0.1-0.3,0.4-0.5,0.8-0.4c0.3,0.1,0.5,0.4,0.4,0.8c-0.1,0.2-6.4,22-7.2,25.8C2988.1,1209.2,2987.8,1209.4,2987.6,1209.4z"/>
	<path class="st31" d="M3030.9,1286.2c-0.2,0-0.5-0.2-0.6-0.4c-0.1-0.3,0.1-0.7,0.3-0.8c6.6-2.4,27.8-13.3,27.9-13.4
		c0.3-0.2,0.7-0.1,0.8,0.3c0.2,0.3,0.1,0.7-0.3,0.8C3058.1,1273.2,3037.5,1283.7,3030.9,1286.2
		C3031,1286.2,3030.9,1286.2,3030.9,1286.2z"/>
	<path class="st31" d="M3044.5,1281.2c-0.1-0.1-0.2-0.2-0.2-0.3c0-0.2,0.2-0.5,0.3-0.5c3.4-1,14.9-6.4,15-6.4
		c0.2-0.1,0.3,0.1,0.3,0.3c0,0.2-0.1,0.5-0.3,0.6C3059.1,1275,3048,1280.3,3044.5,1281.2L3044.5,1281.2z"/>
	<path class="st31" d="M2933.7,1273.5c-0.1,0-0.2,0-0.2-0.1c-0.6-0.3-13.5-7.7-19-12.7c-0.2-0.2-0.2-0.5-0.1-0.7
		c0.2-0.2,0.5-0.2,0.7-0.1c5.3,4.9,18.6,12.4,18.8,12.5s0.3,0.4,0.2,0.6C2934,1273.5,2933.8,1273.5,2933.7,1273.5z"/>
	<path class="st31" d="M2932.4,1276.3c-0.1,0-0.2,0-0.2-0.1c-0.6-0.3-13.5-7.7-19-12.7c-0.2-0.2-0.2-0.5-0.1-0.7
		c0.2-0.2,0.5-0.2,0.7-0.1c5.3,4.9,18.6,12.4,18.8,12.5s0.3,0.4,0.2,0.6C2932.7,1276.2,2932.6,1276.3,2932.4,1276.3z"/>
	<path class="st30" d="M2979,994c-0.3,0-0.6-0.2-0.6-0.6c0-0.1-0.6-12-3.5-15.5c-2.7-3.2-14.8-8.7-16.6-9.5l-5.8,2.4
		c-0.3,0.1-0.7,0-0.8-0.3s0-0.7,0.3-0.8l6.1-2.4c0.2-0.1,0.3-0.1,0.5,0c0.6,0.2,14.2,6.2,17.3,10s3.8,15.7,3.8,16.2
		C2979.7,993.7,2979.4,994,2979,994L2979,994z"/>
	<polygon class="st29" points="2971.1,1116.2 2976.7,1119.6 2958.4,1128.1 2956.5,1122.9 	"/>
	<path class="st53" d="M2949,1124.6l6.9,1c0.1,0,8.2-3.2,8.2-3.2l16.1-5.8c0.6-0.2,1.1-0.9,1-1.6l-0.6-9.8c-0.1-0.9-0.9-1.6-1.8-1.4
		l-22.7,4.5c-0.2,0.1-0.3,0.1-0.5,0.2l-10,5.6c-0.6,0.3-0.9,1.1-0.8,1.9l2.3,7.8C2947.6,1124.2,2948.3,1124.6,2949,1124.6z"/>
	<path class="st30" d="M2944.3,1111.7c-0.3,0-0.5-0.2-0.6-0.5c-0.5-1.7-11.9-42.9-12.3-44.6c-0.3-1.2-1.1-5.9-1.6-9
		c-0.2-1.1-0.3-2-0.4-2.4c-0.3-2,0.2-4.1,1.5-5.4c0.8-0.8,1.7-1.1,2.5-1c-0.2-0.3-0.5-0.9-0.8-1.3c-0.8-1.3-1.7-2.7-1.7-3.8
		c0-2,1.9-3.9,2.5-4.4c0.8-3.7,9-45.5,10.6-48.4c1.6-2.8,8.9-14.5,9-14.6c0.2-0.3,0.6-0.3,0.9-0.2s0.3,0.6,0.2,0.9
		c-0.1,0.1-7.3,11.8-8.9,14.6c-1.3,2.3-8,35.5-10.5,48.2c0,0.1-0.1,0.3-0.2,0.3c-0.6,0.5-2.2,2.1-2.2,3.6c0,0.8,0.9,2.1,1.5,3.1
		c0.9,1.4,1.4,2.2,1,2.8c-0.2,0.2-0.5,0.5-1.2,0.3c-0.6-0.1-1.2,0.1-1.8,0.7c-0.8,0.8-1.5,2.3-1.2,4.3c0.1,0.4,0.2,1.3,0.4,2.4
		c0.5,2.9,1.3,7.8,1.6,9c0.4,1.6,12.2,44.1,12.3,44.6c0.1,0.3-0.1,0.6-0.4,0.8C2944.4,1111.7,2944.3,1111.7,2944.3,1111.7z"/>
	<path class="st41" d="M2977.2,956.2c-0.2,0-0.4-0.1-0.5-0.3s-1.3-2.2-1.3-3.6c0-1.3,3.1-8.9,3.7-10.4c0.1-0.3,0.5-0.5,0.8-0.3
		c0.3,0.1,0.5,0.5,0.3,0.8c-1.8,4.3-3.6,9.3-3.6,10c0,0.9,0.8,2.4,1.2,3c0.2,0.3,0.1,0.6-0.2,0.8
		C2977.4,956.2,2977.3,956.2,2977.2,956.2z"/>
	<path class="st41" d="M2975.7,917.4c0,0-5.3-20.3,8.7-32c11.7-9.8,24.6-0.6,24.6-0.6s-11.2,4.2-20.9,13.7
		C2984.5,902,2976.1,917.2,2975.7,917.4z"/>
	<path class="st41" d="M2978.8,925.3c-1.2-2.7,1-7.6,6.2-15.9c6-9.4,16.6-17.2,24-20.5c3.2-1.4,7-0.6,7-0.6s-2.3-2.7-6.8-5.8
		c-4.6-3.1-18.2-1.7-28.4,14c-10.1,15.7-7.1,19-6.3,22.3C2976,925.9,2978.8,925.3,2978.8,925.3z"/>
	<path class="st54" d="M2995.9,883.6c-0.1,0.2-0.2,0.3-0.5,0.4c-0.1,0-3.8,0.9-9.7,7.2c-5.6,6-8,12.5-8,12.6
		c-0.1,0.4-0.5,0.6-0.9,0.4s-0.5-0.6-0.3-1c0.1-0.3,2.5-6.9,8.3-13.1c6.2-6.7,10.2-7.6,10.4-7.6c0.3-0.1,0.7,0.2,0.8,0.6
		C2996.1,883.3,2996,883.5,2995.9,883.6z"/>
	<path class="st54" d="M3007.2,888.3c-0.1,0.1-0.1,0.2-0.2,0.2c-0.3,0.3-0.7,0.2-0.9-0.1c-1.8-2.4-6.2-4.7-6.2-4.7
		c-0.3-0.2-0.5-0.6-0.3-1s0.5-0.6,0.9-0.4c0.2,0.1,4.7,2.5,6.7,5.2C3007.3,887.7,3007.3,888,3007.2,888.3z"/>
	<path class="st54" d="M2991.9,896.6c0,0.1-0.1,0.1-0.1,0.2c-0.2,0.3-0.7,0.3-0.9,0c-1.4-1.6-3.2-4.6-3.2-4.8
		c-0.2-0.3-0.1-0.8,0.2-1s0.7-0.1,0.9,0.2c0,0.1,1.7,3.1,3.1,4.5C2991.9,895.9,2992,896.3,2991.9,896.6z"/>
	<path class="st54" d="M2981.6,910.4c-0.1,0.1-0.1,0.2-0.2,0.2c-0.3,0.3-0.7,0.2-0.9-0.1c-0.1-0.1-2.1-2.8-2.8-4.5
		c-0.2-0.4,0-0.8,0.3-1s0.8,0,0.9,0.4c0.5,1.2,2,3.4,2.5,4.1C2981.8,909.8,2981.8,910.1,2981.6,910.4z"/>
	<path class="st54" d="M2979,915.1c-0.1,0.1-0.1,0.1-0.1,0.2c-0.2,0.3-0.7,0.3-0.9,0c-1-1.2-2.4-5.6-2.5-6s0.1-0.8,0.4-1
		c0.3-0.1,0.8,0.1,0.9,0.5c0.5,1.7,1.6,4.7,2.2,5.4C2979.1,914.5,2979.2,914.8,2979,915.1z"/>
	<path class="st54" d="M3001.8,890.5c-0.1,0.2-0.2,0.3-0.3,0.3c-0.3,0.2-0.8,0-0.9-0.4c-0.3-0.7-3.6-3.5-5.3-4.5
		c-0.3-0.2-0.5-0.6-0.3-1s0.6-0.5,0.9-0.3c1.3,0.8,5.4,3.8,6,5.2C3002,890,3002,890.2,3001.8,890.5z"/>
	<path class="st28" d="M2984.3,1221.7c0,0-0.5,1.5-1.3,3.2c-1.6,3.2-4.6,7.3-9.1,5c-4.9-2.5-7.3-9.1-8.3-12.8
		c-0.5-1.6-0.6-2.7-0.6-2.7S2978.1,1221.5,2984.3,1221.7z"/>
	<path class="st36" d="M2982.2,1226.6c-0.2,0.3-0.9,1.4-2,2.5c-0.1,0.1-0.1,0.1-0.2,0.2c-0.2,0.2-0.3,0.3-0.6,0.5
		c-0.5,0.4-1.1,0.8-1.7,1c-1,0.5-2.1,0.6-3.2,0.2c-0.3-0.1-0.7-0.3-1-0.5s-0.6-0.4-0.9-0.6c-0.2-0.2-0.5-0.3-0.6-0.6
		c-0.8-0.8-1.6-1.6-2.2-2.4c-1.8-2.4-2.9-5.2-3.6-7.5l0,0c-0.2-0.8-0.5-1.6-0.6-2.2c-0.3-1.4-0.5-2.4-0.5-2.6
		c0.1,0.2,0.3,1.2,0.7,2.6c1.2,3.9,4,11,8.9,13.1c0.4,0.2,0.8,0.3,1.3,0.3C2978.9,1230.7,2981.9,1227.1,2982.2,1226.6z"/>
	<path class="st29" d="M2984.3,1221.7c0,0-0.5,1.5-1.3,3.2c-0.6-0.3-1.6-0.9-3.3-1.6c-3.4-1.4-12.4-1.8-12.4-1.8l-1.7-4.3
		c-0.5-1.6-0.6-2.7-0.6-2.7S2978.1,1221.5,2984.3,1221.7z"/>
	<path class="st34" d="M2980.2,1229.2h-0.2l0.1,0.2l0.2,1.5l-0.8-1l-0.1,3.5l-1.6-2.5l-0.1-0.2l-3.1,0.3l-0.1,2.4l-1.9-3.6l-2.3,2
		l1.6-2.6l0,0l-2.2-2.4l0,0l-0.5,4.1l-2.8-8.3l-0.6,2.1l0.2-5.4l0,0l-2.3,0.5l1.7-1.6l-6.4,0.6l6.2-1.7l0.1-0.1l0.1,0.1
		c1.2,3.9,4.1,10.9,8.9,13c0.4,0.2,1.1,0.3,1.5,0.3c3.1,0.1,5.8-3.5,6.2-4l0.1-0.1l-0.1,2.8L2980.2,1229.2z"/>
	<path class="st31" d="M2982.2,1229.4l0.1-3.1l-0.3,0.5c-0.3,0.3-2,2.5-4.3,3.5c0.1,0.2,0.1,0.5,0.2,0.7c0,0.1,0,0.2,0,0.2l1.4,2.3
		l0.1-3.5l0.8,1l-0.2-1.5l-0.1-0.2h0.2L2982.2,1229.4z"/>
	<path class="st34" d="M2964.9,1214.6l2.4,4l-0.8-2l2.7,0.8l-0.4,0.9l1.2-0.9l-0.5,1.6l2-0.8l1,2.7l-0.4-2.3l3.8,2.5l-1.6-2.1
		l4.6,2.8l-0.7-0.9l2.9,1.9l0.1-1.4l1.3,1.9l0.1-1.1l1.9-0.3C2984.3,1221.7,2971.9,1218,2964.9,1214.6z"/>
	<path class="st28" d="M3048.5,1201c-1.9,0.6-4.5,0.3-6.1,0.3c-3.4-0.1-6.5-0.3-9.6-1.3c0.2,0.2,0.3,0.4,0.5,0.6
		c0.1,0.1,0.2,0.3,0.3,0.5c1,1.3,2.2,2.8,3.5,4.3l0,0c3.7,4.2,8.4,8.4,12.9,9.5L3048.5,1201z"/>
	<path class="st29" d="M3042.8,1201.4c-3.5,0.1-6.7-0.5-10-1.4c0.1,0.2,0.3,0.4,0.4,0.6c0.1,0.1,0.2,0.3,0.3,0.5
		c1.4,1.9,2.8,3.7,3.5,4.3l0,0c1.7,1.4,11.3,1.7,12.1,1.8l-0.6-5.9C3046.6,1201.5,3044.4,1201.4,3042.8,1201.4z"/>
	<path class="st34" d="M3032.5,1199.8c0,0,6,6,8.7,8.2s5.5,1,5.5,1l-1.9,2l4.5-1.4l-2.6,2.8l3.9-2.4l0.6,3.4l5-2l-3.1,3.1
		c0,0,0.9,1.4-5,0.5C3042.3,1214.1,3032.5,1199.8,3032.5,1199.8z"/>
	<path class="st34" d="M3032.5,1199.8c0,0,9.3,1.9,17.4,1l2.9,3.5l-3.4-1.4l-1,1.7l-0.2-1.6l-6.2,1.7l1.2-1.5
		C3043.3,1203.3,3036.5,1203.1,3032.5,1199.8z"/>
	<path class="st28" d="M3029.9,1193.4c-0.1,0.1-0.8,1.7,0.7,3.1c0.3,0.3,0.8,0.7,2.3,1.2c2.5,1,5.3,1.4,8.7,1.8
		c2.4,0.3,6.4,0.8,6.8-0.1c0.7-1.7-4.2-8.9-10.2-9.3C3034.8,1190,3030.8,1191.4,3029.9,1193.4z"/>
	<path class="st29" d="M3038.1,1190.3c-3.3-0.2-7.3,1.2-8.2,3.2c-0.1,0.1-0.6,1.4,0.3,2.7c1.1-1.3,2.1-2.4,3.9-3.4
		c1.5-0.8,3.2-1.3,4.9-1c2,0.3,3.4,1.8,4.8,3.1c1.7,1.5,3.1,2.9,4.3,4.9c0.1-0.1,0.2-0.1,0.2-0.2
		C3049.1,1197.8,3044.3,1190.6,3038.1,1190.3z"/>
	<path class="st34" d="M3029,1193.4c-0.2-1.3-0.6-2.2-0.5-2.3c0.2,0,0.9,1.6,1.2,1.5c0.2-0.1-0.1-0.9,0.6-1.2c0.4-0.2,0.8,0,1.3-0.2
		c1-0.3,1.1-1.3,1.4-1.3c0.2,0,0.2,0.5,0.5,0.5c0.5,0.1,1.2-2,1.6-2c0.3,0.1,0.1,1.4,0.6,1.5c0.4,0.1,0.8-0.5,1.4-0.4
		c0.3,0,0.3,0.2,0.7,0.3c2.4,0.2,2.9,0.8,2.9,0.9s-0.8-0.5-3.1-0.5s-3.1,0.3-3.6,0.4c-1.8,0.4-2.7,1.4-3.2,1.9
		c-1.9,1.8-0.7,3.2-1,3.2C3029.7,1195.9,3029.3,1194.6,3029,1193.4z"/>
	<path class="st34" d="M3042,1191.4c5.2,0.6,8.5,1.6,8.4,1.6c0,0.1-3.6-0.4-3.9,0.3c-0.2,0.8,3.5,2.5,3.3,3
		c-0.1,0.3-1.6-0.3-1.8,0.1c-0.3,0.6,2.1,2.5,1.9,2.8c-0.2,0.2-1.2,0.9-1.5-0.2c-0.8-2.8-1.4-3.2-3.4-5.3
		C3044.4,1193.1,3043.3,1192.1,3042,1191.4z"/>
	<path class="st3" d="M2906.5,1309.2c0,0,3.5-2.7,4.4-5.9c0,0,2.9-3.1,1.9-4.7s-4-2.3-5.8-3.7c-1.8-1.4-3.5-0.3-5.5,1.9
		L2906.5,1309.2z"/>
	<path class="st41" d="M2910.5,1346.5c0,0,0.6,1.4-0.5,2.2c-1,0.8-2,1.9-5.8-0.8c-3.8-2.7-10.9-11.6-15.7-19
		c-4.7-7.3-16.6-28-16.3-29.6s5-3.6,4.9-2.6c0,0,3.1-2.4,5.9-3.9c2.8-1.4,5.4-2,8.2-4.2s4.2-2.1,5.6,0.6c1.4,2.8,7.2,6,10.1,7.7
		c2.9,1.7,3,6.6,1.3,9.4s-2,10.3-2.4,15.5s2.3,13.1,4.6,16.3C2912.8,1341.4,2913.9,1344.2,2910.5,1346.5z"/>
	
		<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="5372.9614" y1="944.4346" x2="5387.3608" y2="958.8337" gradientTransform="matrix(-0.453 -0.7235 0.8476 -0.5307 4516.7256 5699.4482)">
		<stop  offset="0" style="stop-color:#FF57AB"/>
		<stop  offset="1" style="stop-color:#5A43B5"/>
	</linearGradient>
	<path class="st55" d="M2877.3,1296.6c0,0,3.1-2.4,5.9-3.9c0.5-0.2,0.9-0.4,1.3-0.6c1.7,0.7,3.6,1.6,5.4,2.4
		c2.5,1.1,5.1,2.1,7.5,3.5c0.7,0.3,1.3,0.8,2,1.2c0.1,0.1,0.2,0.1,0.2,0.2c0.1,0,0.1,0.1,0.1,0.1c0.2,0.2,0.5,0.4,0.8,0.6
		c0.1,0.1,0.3,0.3,0.4,0.4v0.1c0,0.2-0.1,0.5-0.1,0.6s-0.2,0.5-0.2,0.5c-0.1,0.3-0.3,0.6-0.4,0.9c-0.1,0.1-0.2,0.3-0.2,0.3
		c-0.1,0.2-0.3,0.3-0.5,0.5c0,0-0.1,0-0.1,0.1c-0.1,0-0.1,0.1-0.1,0.1l0,0c-0.4,0.1-0.8,0.2-1.2,0.3c-0.1,0-0.2,0-0.2,0.1
		c-0.1,0-0.1,0-0.2,0c-0.6,0.1-1.3,0.1-2,0.1c-1.4,0.1-2.9,0.3-4.3,0.5c-2.8,0.5-5.4,1.1-7.9,2.3c-1.2,0.5-2.3,1.2-3.4,1.8
		c-0.8,0.5-1.7,1-2.5,1.6c-3-5.5-5.4-10.1-5.2-10.8C2872.7,1297.6,2877.3,1295.6,2877.3,1296.6z"/>
	<path class="st54" d="M2877.3,1296.6c0,0,3.1-2.4,5.9-3.9c0.5-0.2,0.9-0.4,1.3-0.6c1.7,0.7,3.6,1.6,5.4,2.4
		c2.5,1.1,5.1,2.1,7.5,3.5c0.7,0.3,1.3,0.8,2,1.2c0.1,0.1,0.2,0.1,0.2,0.2c0.1,0,0.1,0.1,0.1,0.1c0.2,0.2,0.5,0.4,0.8,0.6
		c0.1,0.1,0.3,0.3,0.4,0.4v0.1c0,0.2-0.1,0.5-0.1,0.6s-0.2,0.5-0.2,0.5c-0.1,0.3-0.3,0.6-0.4,0.9c-0.1,0.1-0.2,0.3-0.2,0.3
		c-0.1,0.2-0.3,0.3-0.5,0.5c0,0-0.1,0-0.1,0.1c-0.1,0-0.1,0.1-0.1,0.1l0,0c-0.4,0.1-0.8,0.2-1.2,0.3c-0.1,0-0.2,0-0.2,0.1
		c-0.1,0-0.1,0-0.2,0c-0.6,0.1-1.3,0.1-2,0.1c-1.4,0.1-2.9,0.3-4.3,0.5c-2.8,0.5-5.4,1.1-7.9,2.3c-1.2,0.5-2.3,1.2-3.4,1.8
		c-0.8,0.5-1.7,1-2.5,1.6c-3-5.5-5.4-10.1-5.2-10.8C2872.7,1297.6,2877.3,1295.6,2877.3,1296.6z"/>
	<path class="st3" d="M2887.1,1324.6c0.1,0,0.1-0.1,0.1-0.1c0.3,0.3,0.6,0.6,0.9,0.8c0.9,0.5,1.9,0.5,2.7,0.1c0.1,0,0.1,0,0.1-0.1
		c0.1,0,0.1,0,0.1,0c0.9-0.1,1.8-0.2,2.7-0.4c1.9-0.4,3.9-1.1,5.2-2.6c1.9-2.1,2-4.9,1.3-7.6c-0.1-0.6-0.3-1.2-0.5-1.7
		c-0.1-0.2-0.1-0.3-0.1-0.5c0-0.1,0-0.1,0-0.2c0-0.2,0-0.3,0-0.5c0-0.1,0-0.1,0-0.1c0-0.1,0.1-0.2,0.1-0.3v-0.1c0.4-1,0.9-2.1,1-3.2
		c0.1-0.9,0-1.9-0.1-2.8c0.1,0,0.1,0,0.2,0c0.5,0.1,1,0.1,1.4,0.2c2,0.1,4.2,0.2,6.3-0.1c-0.1,0.3-0.3,0.6-0.5,0.9
		c-1.7,2.8-2,10.3-2.4,15.5s2.3,13.1,4.6,16.3s3.5,6,0.1,8.3c0,0,0.6,1.4-0.5,2.2c-1,0.8-2,1.9-5.8-0.8c-3.8-2.7-10.9-11.6-15.7-19
		c-0.7-1-1.5-2.3-2.4-3.8C2886.6,1324.9,2887,1324.7,2887.1,1324.6z"/>
	<path class="st41" d="M2911.5,1341.8c0.6-0.1-0.1,0-0.2,0s-0.2,0-0.2,0l0,0c-0.2-0.1-0.5-0.1-0.7-0.2c0,0,0,0-0.1,0
		c-0.4-0.2-0.9-0.4-1.2-0.7c0,0,0,0-0.1,0s-0.1-0.1-0.1-0.1c-0.1-0.1-0.3-0.2-0.4-0.3c-0.4-0.3-0.8-0.7-1.1-1.1
		c-0.1-0.1-0.4-0.5-0.3-0.4l-0.1-0.1c-0.8-1.1-1.7-1.9-2.8-2.7c-0.8-0.6-1.7-1-2.5-1.5c-0.5-0.2-0.9-0.5-1.4-0.8
		c-0.2-0.1-0.3-0.2-0.5-0.3c-0.1,0-0.1-0.1-0.1-0.1c-0.1-0.1-0.2-0.2-0.4-0.3c-0.1-0.1-0.2-0.3-0.3-0.4s-0.2-0.5-0.2-0.5
		c0-0.1-0.1-0.1-0.1-0.2c-0.1-0.2-0.1-0.4-0.2-0.6c0-0.1,0-0.1,0-0.1c0-0.3-0.1-0.5-0.1-0.8c0-0.1,0-0.1,0-0.1
		c0.1-0.2,0.1-0.5,0.1-0.7c0-0.1,0.1-0.2,0.1-0.2l0,0c0.1-0.2,0.2-0.5,0.3-0.7c0.1-0.1,0.2-0.2,0.3-0.4c0.1-0.1,0.3-0.2,0.3-0.3
		c0.1-0.1,0.2-0.1,0.2-0.1s0.1,0,0.1-0.1c0.2-0.1,0.4-0.1,0.6-0.2c1.9-0.4,3.7-0.6,5.5-1.2c0.8,4.5,2.7,9.3,4.3,11.6
		c0.9,1.2,1.6,2.4,2,3.5C2912.1,1341.6,2911.8,1341.7,2911.5,1341.8z"/>
	<path class="st56" d="M2877.1,1296.4c0.1,0.1,0.1,0.1,0.1,0.2v0.1l0,0c0.1,0.2,0.2,0.2,0.1,0.2c0.5,0.6,2.7,5.6,3.8,7.4
		c3.1,5.3,4.6,9.8,13.2,23.6c8.6,13.7,13.2,17,15.5,18.1c0.3,0.2,0.6,0.4,1,0.6c-0.1,0.1-0.1,0.1-0.2,0.1c0,0,0.6,1.4-0.5,2.2
		c-1,0.8-2,1.9-5.8-0.8c-3.8-2.7-10.9-11.6-15.7-19c-4.7-7.3-16.6-28-16.3-29.6C2872.6,1297.8,2876.4,1296,2877.1,1296.4z"/>
	<path class="st57" d="M2902.3,1322.7c-0.6,0.4-0.8,1.3-0.4,1.9c0.4,0.7,1.3,0.9,1.9,0.5c0.6-0.4,0.8-1.3,0.4-1.9
		C2903.8,1322.5,2902.9,1322.3,2902.3,1322.7z"/>
	<path class="st57" d="M2902.7,1317.4c-0.6,0.4-0.8,1.3-0.4,1.9c0.4,0.7,1.3,0.9,1.9,0.5c0.6-0.4,0.8-1.3,0.4-1.9
		C2904.2,1317.2,2903.3,1317,2902.7,1317.4z"/>
	<path class="st57" d="M2903.1,1311.9c-0.6,0.4-0.8,1.3-0.4,1.9c0.4,0.7,1.3,0.9,1.9,0.5c0.6-0.4,0.8-1.3,0.4-1.9
		C2904.6,1311.7,2903.7,1311.5,2903.1,1311.9z"/>
	<path class="st57" d="M2903.6,1307.3c-0.6,0.4-0.8,1.3-0.4,1.9c0.4,0.7,1.3,0.9,1.9,0.5c0.6-0.4,0.8-1.3,0.4-1.9
		C2905.1,1307.1,2904.2,1306.9,2903.6,1307.3z"/>
	<path class="st23" d="M2904.2,1309.1c0,0,3.1,1.4,3.4,1c0.6-0.7,0.4-1.5,0.2-2s-3.4-0.4-3.4-0.4L2904.2,1309.1z"/>
	<path class="st23" d="M2903.9,1313.8c0,0,3.2,1.2,3.5,0.7c0.5-0.8,0.3-1.5,0-2s-3.4-0.1-3.4-0.1L2903.9,1313.8z"/>
	<path class="st23" d="M2903.2,1319.3c0,0,3.2,1,3.5,0.6c0.5-0.8,0.2-1.6-0.1-2c-0.3-0.5-3.4,0.1-3.4,0.1V1319.3z"/>
	<path class="st23" d="M2903.3,1324.6c0,0,3.3,0.6,3.5,0.1c0.3-0.8,0-1.6-0.3-2s-3.4,0.5-3.4,0.5L2903.3,1324.6z"/>
	<path class="st3" d="M3070.4,1319.8c0,0-1.3-4.2-3.9-6.1c0,0-1.9-3.8-3.7-3.4c-1.9,0.3-3.5,2.9-5.4,4.1s-1.6,3.1-0.2,5.7
		L3070.4,1319.8z"/>
	<path class="st41" d="M3106.3,1329c0,0,1.5-0.1,1.9,1.2c0.4,1.2,1,2.5-2.8,5.1s-14.6,6.1-23,7.9c-8.4,1.9-31.7,5.7-33.1,4.7
		c-1.4-0.9-1.6-5.9-0.7-5.4c0,0-1.2-3.6-1.5-6.8c-0.3-3.2,0.1-5.7-1-9s-0.5-4.6,2.5-4.9c3.1-0.3,8-4.6,10.6-6.7
		c2.5-2.1,7.1-0.5,9.1,2s8.9,5.4,13.5,7.6c4.7,2.1,12.9,2.4,16.7,1.4C3102.4,1325.2,3105.4,1325,3106.3,1329z"/>
	
		<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="3540.4905" y1="2146.8977" x2="3554.7227" y2="2161.1296" gradientTransform="matrix(-0.8366 0.1698 -0.1989 -0.98 6452.9092 2844.6196)">
		<stop  offset="0" style="stop-color:#FF57AB"/>
		<stop  offset="1" style="stop-color:#5A43B5"/>
	</linearGradient>
	<path class="st58" d="M3048.6,1342.5c0,0-1.2-3.6-1.5-6.8c-0.1-0.5-0.1-0.9-0.1-1.4c1.2-1.3,2.7-2.8,4.1-4.2
		c1.9-1.9,3.8-3.9,5.8-5.7c0.6-0.5,1.2-1,1.8-1.4c0.1-0.1,0.2-0.1,0.2-0.2c0.1,0,0.1-0.1,0.1-0.1c0.3-0.2,0.6-0.3,0.9-0.5
		c0.2-0.1,0.3-0.2,0.5-0.2h0.1c0.1,0.1,0.5,0.2,0.6,0.3c0.1,0.1,0.4,0.3,0.4,0.3c0.2,0.2,0.5,0.5,0.6,0.7c0.1,0.1,0.2,0.3,0.2,0.3
		c0.1,0.2,0.2,0.3,0.3,0.6v0.1v0.1l0,0c0,0.4-0.1,0.8-0.1,1.2c0,0.1-0.1,0.2-0.1,0.2s-0.1,0.1-0.1,0.2c-0.2,0.6-0.3,1.3-0.6,1.9
		c-0.5,1.4-0.8,2.8-1,4.2c-0.5,2.7-0.8,5.4-0.6,8.1c0.1,1.3,0.3,2.5,0.5,3.8c0.2,0.9,0.3,1.9,0.6,2.8c-6.1,0.9-11.2,1.4-11.8,1
		C3047.9,1347,3047.7,1342.1,3048.6,1342.5z"/>
	<path class="st41" d="M3048.6,1342.5c0,0-1.2-3.6-1.5-6.8c-0.1-0.5-0.1-0.9-0.1-1.4c1.2-1.3,2.7-2.8,4.1-4.2
		c1.9-1.9,3.8-3.9,5.8-5.7c0.6-0.5,1.2-1,1.8-1.4c0.1-0.1,0.2-0.1,0.2-0.2c0.1,0,0.1-0.1,0.1-0.1c0.3-0.2,0.6-0.3,0.9-0.5
		c0.2-0.1,0.3-0.2,0.5-0.2h0.1c0.1,0.1,0.5,0.2,0.6,0.3c0.1,0.1,0.4,0.3,0.4,0.3c0.2,0.2,0.5,0.5,0.6,0.7c0.1,0.1,0.2,0.3,0.2,0.3
		c0.1,0.2,0.2,0.3,0.3,0.6v0.1v0.1l0,0c0,0.4-0.1,0.8-0.1,1.2c0,0.1-0.1,0.2-0.1,0.2s-0.1,0.1-0.1,0.2c-0.2,0.6-0.3,1.3-0.6,1.9
		c-0.5,1.4-0.8,2.8-1,4.2c-0.5,2.7-0.8,5.4-0.6,8.1c0.1,1.3,0.3,2.5,0.5,3.8c0.2,0.9,0.3,1.9,0.6,2.8c-6.1,0.9-11.2,1.4-11.8,1
		C3047.9,1347,3047.7,1342.1,3048.6,1342.5z"/>
	<path class="st3" d="M3077.9,1343.1c0-0.1,0-0.1,0-0.2c0.4-0.1,0.8-0.3,1-0.6c0.8-0.6,1.1-1.6,1-2.4c0-0.1,0-0.1,0-0.1
		c0-0.1,0-0.1,0-0.1c0.2-0.9,0.4-1.8,0.6-2.7c0.3-1.9,0.3-4-0.6-5.7c-1.3-2.4-3.8-3.5-6.5-3.9c-0.6-0.1-1.2-0.1-1.7-0.2
		c-0.2,0-0.3-0.1-0.6-0.1c-0.1,0-0.1,0-0.2-0.1c-0.2-0.1-0.3-0.1-0.5-0.1l-0.1-0.1c-0.1-0.1-0.2-0.1-0.2-0.2c0,0,0,0-0.1-0.1
		c-0.8-0.8-1.6-1.6-2.6-2.1c-0.9-0.4-1.7-0.7-2.7-0.9c0-0.1,0.1-0.1,0.1-0.1c0.2-0.4,0.5-0.9,0.6-1.3c0.9-1.9,1.7-3.8,2.1-5.8
		c0.3,0.2,0.5,0.5,0.7,0.8c2,2.5,8.9,5.4,13.5,7.6c4.7,2.1,12.9,2.4,16.7,1.4s6.8-1.1,7.7,2.8c0,0,1.5-0.1,1.9,1.2
		c0.4,1.2,1,2.5-2.8,5.1s-14.6,6.1-23,7.9c-1.2,0.3-2.7,0.6-4.3,0.9C3078,1343.7,3077.9,1343.2,3077.9,1343.1z"/>
	<path class="st41" d="M3102.2,1326.4c0.1-0.6-0.1,0.1-0.1,0.2c-0.1,0.1-0.1,0.1-0.1,0.2l0,0c-0.1,0.2-0.3,0.4-0.4,0.6l0,0
		c-0.3,0.3-0.7,0.6-1.1,0.9c0,0,0,0-0.1,0s-0.1,0.1-0.1,0.1c-0.2,0.1-0.3,0.2-0.5,0.2c-0.5,0.2-0.9,0.5-1.4,0.6
		c-0.1,0.1-0.6,0.2-0.5,0.2c-0.1,0-0.1,0-0.1,0.1c-1.3,0.4-2.4,0.9-3.5,1.6c-0.8,0.5-1.6,1.2-2.3,1.9c-0.4,0.3-0.8,0.7-1.2,1
		c-0.1,0.1-0.3,0.2-0.4,0.3c-0.1,0-0.1,0.1-0.2,0.1c-0.2,0.1-0.3,0.2-0.5,0.2c-0.1,0.1-0.3,0.1-0.5,0.1s-0.6,0.1-0.5,0.1
		c-0.1,0-0.1,0-0.2,0c-0.2,0-0.5,0-0.6-0.1c-0.1,0-0.1,0-0.1,0c-0.2-0.1-0.5-0.1-0.8-0.2c0,0-0.1,0-0.1-0.1
		c-0.2-0.1-0.4-0.2-0.6-0.3c-0.1-0.1-0.1-0.1-0.2-0.1l0,0c-0.2-0.2-0.3-0.3-0.5-0.5c-0.1-0.1-0.2-0.3-0.2-0.5
		c-0.1-0.1-0.1-0.3-0.1-0.5s-0.1-0.2-0.1-0.2c0-0.1,0-0.1,0-0.2c0-0.2,0-0.4,0.1-0.6c0.2-1.9,0.8-3.6,0.8-5.5
		c4.4,0.9,9.5,0.8,12.2,0.1c1.4-0.4,2.8-0.6,3.9-0.6C3102.4,1325.8,3102.3,1326.1,3102.2,1326.4z"/>
	<path class="st56" d="M3048.4,1342.6c0.1,0,0.1-0.1,0.2-0.1h0.1l0,0c0.2-0.1,0.3-0.1,0.2,0c0.7-0.2,6.1-0.5,8.2-0.9
		c6-1,10.6-0.9,26.4-4.1c15.7-3.2,20.3-6.3,22.1-8.1c0.3-0.2,0.6-0.5,0.9-0.7c0,0.1,0.1,0.1,0.1,0.2c0,0,1.5-0.1,1.9,1.2
		c0.4,1.2,1,2.5-2.8,5.1s-14.6,6.1-23,7.9c-8.4,1.9-31.7,5.7-33.1,4.7C3048,1347.1,3047.7,1343.1,3048.4,1342.6z"/>
	<path class="st57" d="M3081.4,1328.3c0.2,0.8,0.9,1.2,1.7,1s1.3-0.9,1.1-1.6s-0.9-1.2-1.7-1
		C3081.8,1326.9,3081.2,1327.6,3081.4,1328.3z"/>
	<path class="st57" d="M3076.7,1326.2c0.2,0.8,0.9,1.2,1.7,1s1.3-0.9,1.1-1.6s-0.9-1.2-1.7-1
		C3077,1324.7,3076.5,1325.4,3076.7,1326.2z"/>
	<path class="st57" d="M3071.7,1323.9c0.2,0.8,0.9,1.2,1.7,1s1.3-0.9,1.1-1.6c-0.2-0.8-0.9-1.2-1.7-1
		C3072.1,1322.4,3071.6,1323.2,3071.7,1323.9z"/>
	<path class="st57" d="M3067.6,1321.8c0.2,0.8,0.9,1.2,1.7,1s1.3-0.9,1.1-1.6c-0.2-0.8-0.9-1.2-1.7-1
		C3068,1320.4,3067.5,1321.1,3067.6,1321.8z"/>
	<path class="st23" d="M3069.5,1321.9c0,0,2.4-2.4,2.1-2.8c-0.4-0.8-1.2-0.9-1.7-0.9c-0.5,0.1-1.6,3-1.6,3L3069.5,1321.9z"/>
	<path class="st23" d="M3073.7,1323.8c0,0,2.1-2.5,1.9-3c-0.5-0.8-1.3-0.8-1.9-0.7s-1.3,3.1-1.3,3.1L3073.7,1323.8z"/>
	<path class="st23" d="M3078.6,1326.3c0,0,2.1-2.6,1.7-3.1c-0.5-0.7-1.3-0.8-1.9-0.6c-0.5,0.1-1.2,3.2-1.2,3.2L3078.6,1326.3z"/>
	<path class="st23" d="M3083.5,1328.1c0,0,1.7-2.8,1.3-3.2c-0.6-0.6-1.4-0.6-1.9-0.4s-0.7,3.3-0.7,3.3L3083.5,1328.1z"/>
	<path class="st59" d="M3011.9,897.9c0,0,7.8,6.2,9.1,12c0.7,3-0.3,8.7-0.3,8.7l1.2-0.2c0,0,0.8-6.2,0.3-10.3
		c-0.6-6.2-4.8-10.9-4.8-10.9L3011.9,897.9z"/>
	<path class="st60" d="M3023.7,899.1c1.2,1.9-0.4,4.5-3.4,8.7l-5.6-9.7C3014.8,898,3021.9,896,3023.7,899.1z"/>
	<path class="st61" d="M3022.3,917.7c0.2,14.5-3.4,32.1-14.7,29.8c-16-3.2-24.3-21.8-25.1-35
		C2981.1,889.8,3021.9,877.1,3022.3,917.7z"/>
	<path class="st62" d="M2995,920.4c-0.6,0-2.8,0.8-3.3,1c-0.1,0.2-0.1,0.5-0.1,0.6c1.1-0.5,3.5-1.2,4.1-1.2
		C2995.6,920.4,2995,920.4,2995,920.4z"/>
	<path class="st63" d="M2998.1,931.5c-5.4-2-6.1-9.3-6.1-9.3s-3.6,0.8-7.1,2.3c3.6,10.4,11.1,20.6,22.6,22.9
		c7.9,1.6,12-6.4,13.7-16.1C3014.6,923.3,3006.5,934.6,2998.1,931.5z M3016.7,934.4c-0.2,2.7-3.1,4-5.4,3.8c-3.1-0.2-6-1.9-7.6-4.3
		c-0.1-0.2-0.1-0.8,0.3-0.9c0,0,0-0.1,0.1-0.1c2.1-1.8,6.2-2.1,9-2C3014.9,931.1,3016.8,932.2,3016.7,934.4z"/>
	<path class="st61" d="M2989.6,923.5c-1.7-3.5-5.1-7.8-8.9-5.6c-2.3,1.4-1.6,5.9,1.2,8.9C2987.4,932.9,2991.3,927,2989.6,923.5z"/>
	<path class="st29" d="M2981.6,920.4c0,0,0.1,0,0.4,0c0.2,0,0.6,0.1,1,0.1c0.2,0.1,0.4,0.1,0.6,0.2s0.5,0.2,0.7,0.3
		c0.5,0.2,0.9,0.6,1.4,1c0.2,0.2,0.4,0.4,0.6,0.6c0.2,0.2,0.3,0.5,0.5,0.6c0.1,0.2,0.3,0.5,0.4,0.6c0.1,0.2,0.2,0.4,0.3,0.6
		c0.2,0.4,0.2,0.8,0.3,1s0.1,0.3,0.1,0.3s-0.1-0.1-0.2-0.3c-0.1-0.2-0.3-0.5-0.5-0.9c-0.1-0.2-0.2-0.3-0.3-0.6
		c-0.1-0.2-0.3-0.4-0.5-0.6c-0.2-0.2-0.3-0.4-0.5-0.6s-0.3-0.4-0.6-0.6c-0.2-0.2-0.4-0.3-0.6-0.5c-0.2-0.2-0.4-0.3-0.6-0.5
		c-0.4-0.3-0.9-0.5-1.2-0.6s-0.7-0.3-0.9-0.3C2981.8,920.4,2981.6,920.4,2981.6,920.4z"/>
	<path class="st29" d="M2986.7,923.5c0,0-0.2-0.1-0.6-0.2c-0.2-0.1-0.3-0.1-0.6-0.2c-0.1,0-0.2,0-0.3-0.1c-0.1,0-0.2,0-0.3,0
		c-0.2,0-0.4,0.1-0.6,0.2c-0.1,0.1-0.2,0.1-0.2,0.2s-0.1,0.1-0.2,0.2c-0.1,0.1-0.2,0.2-0.3,0.3s-0.1,0.1-0.1,0.1s0-0.1,0.1-0.2
		s0.1-0.3,0.2-0.5c0.1-0.1,0.1-0.2,0.2-0.3c0.1-0.1,0.2-0.2,0.3-0.3s0.2-0.2,0.3-0.2c0.1-0.1,0.3-0.1,0.4-0.1c0.1,0,0.3,0,0.4,0
		s0.3,0.1,0.4,0.1c0.2,0.1,0.4,0.2,0.6,0.3C2986.5,923.3,2986.7,923.5,2986.7,923.5z"/>
	<path class="st64" d="M3010.9,936.2c-4.2,0-5.8-3.2-5.9-3.2c-0.1-0.1,0-0.3,0.1-0.3s0.3,0,0.3,0.1c0.1,0.2,2,4,7.6,2.7
		c0.1-0.1,0.3,0.1,0.3,0.2c0.1,0.1-0.1,0.3-0.2,0.3C3012.3,936.1,3011.6,936.2,3010.9,936.2z"/>
	<path class="st38" d="M2998.6,916c0.1-0.2,0.2-0.6,0.5-1.1c0.5-0.9,1.2-1.9,2.4-2.4c0.2-0.1,0.5-0.2,0.8-0.3c0.5,0.1,1,0.1,1.5,0.3
		c-0.3-0.2-0.7-0.3-1.1-0.4c0.4-0.1,0.9-0.2,1.4-0.2c0.9,0.2,1.9,0.5,2.7,0.9c-0.6-0.4-1.2-0.7-1.8-1c0.3-0.1,0.5-0.1,0.8-0.1
		c0.9,0.4,1.7,0.9,2.4,1.6c-0.5-0.6-1.1-1.1-1.7-1.6c0.9,0,1.6,0.1,1.8,0.2c0.4,0.5,1,2.7,0.5,2.8c-0.6,0.1-6-0.2-7.3,0.3
		c-0.7,0.2-1.4,0.6-1.9,0.9l0,0C2999.2,916,2998.9,916,2998.6,916z"/>
	<path class="st38" d="M3023.5,916.4c0-0.2-0.1-0.5-0.3-0.9c-0.3-0.7-0.8-1.6-1.5-2c-0.2-0.1-0.3-0.2-0.5-0.2c-0.3,0-0.7,0.1-1,0.2
		c0.2-0.1,0.5-0.2,0.8-0.3c-0.3-0.1-0.6-0.2-0.9-0.3c-0.6,0.1-1.2,0.3-1.9,0.6c0.4-0.3,0.8-0.5,1.2-0.8c-0.2-0.1-0.3-0.1-0.5-0.1
		c-0.6,0.3-1.2,0.6-1.6,1.2c0.3-0.5,0.8-0.9,1.2-1.2c-0.6-0.1-1.1,0-1.2,0.1c-0.3,0.4-0.8,2.2-0.3,2.3s4,0.1,4.9,0.6
		c0.5,0.2,0.9,0.6,1.2,0.8l0,0C3023.1,916.4,3023.3,916.4,3023.5,916.4z"/>
	<path class="st28" d="M3018.7,927c0.2,1.3-0.1,1.9-1.4,2.1c-0.1,0-0.2,0.1-0.3,0.1s-0.1,0-0.1,0c-2,0.1-2.3-1.9-3-6.3
		c-0.2-1.6-0.5-3.1-0.7-4.5c1.3-0.6,2.8-0.8,3.3-0.4l0,0c0.1,0.2,0.1,0.3,0.2,0.5c0.3,1.1,0.8,2.4,1,3.6l0,0
		c0.1,0.2,0.1,0.3,0.1,0.5C3018.2,924.6,3018.6,926,3018.7,927z"/>
	<path class="st65" d="M3018.7,927c-0.2-1-0.5-2.4-0.9-4.3c-0.1-0.2-0.1-0.3-0.1-0.5l0,0c-0.3-1.3-0.8-3.1-1.1-4.2
		c-0.1-0.1-1.4-3.6-3-3.9c-0.2-0.1-0.4,0.2-0.5,0.4c0,0,0,0,0,0.1v0.1c0.5,0.8,1.6,2.6,2,3.4c1.5,3,3.4,10.1-0.2,9.8
		c0.4,1,1,1.4,2,1.4c0.1,0,0.1,0,0.1,0c0.1,0,0.2-0.1,0.3-0.1C3018.7,928.8,3018.9,928.3,3018.7,927z"/>
	<path class="st29" d="M3013.1,914.5c-0.2,0.5-0.1,3,0.1,4.2c-0.5,0.2-1.2,0.6-1.5,0.8l0.1-1.8
		C3011.9,916.4,3012.3,915.6,3013.1,914.5z"/>
	<path class="st29" d="M3013.9,922.9c0.6,4.5,0.9,6.4,3,6.3c-4,0.4-6.1-0.8-6.1-0.8c-0.8-2.8,1.3-2.4,1.3-2.4s-0.2-0.9-0.2-4.7
		c0-0.8,0-1.4,0-2c0.4-0.3,0.9-0.6,1.4-0.9C3013.4,919.7,3013.6,921.2,3013.9,922.9z"/>
	<path class="st38" d="M2991.3,898.6c-0.2,0.3-2.1,4.9-2.3,5.4c-0.1,0.2-0.1,0.4-0.2,0.6l0,0c0,0-4.9,0.8-8,5.5
		c-0.1-1.3,0.5-2.8,0.8-3.9C2990.2,889.6,2991.3,898.6,2991.3,898.6z"/>
	<path class="st38" d="M2996.7,900.5c0,0-4.7,2-6.2,6.2c-1.5,4.3,3.8,13.8-0.6,18.3c-0.5,0.3-2.8-6.7-8.4-7.5
		c-1.7-3.4-1.4-6.8-1.2-9.8C2985.6,893.3,2996.7,900.5,2996.7,900.5z"/>
	<path class="st66" d="M2995.5,917.6c0.5-0.2,0.7,2.7,0.5,2.8c-3,0.8-6.8,1.6-10.6,2c-0.1,0,0.8-0.3,0.3-1.1
		C2984.3,918.6,2993.3,918.3,2995.5,917.6z"/>
	<path class="st38" d="M3021.7,895.2c1,1.6,1.7,3.1,2.2,4.5c-0.8-0.7-1.7-1-2.7-1.2c-1.8-0.2-3.9,0.2-6,0.8
		c-5.6,1.7-13.6,4.1-16,1.4c-0.6-0.6-2.2-0.9-3.1-1.3l0.3-0.3c-1.8-2.2,4.6-3.2,9.8-4.9C3011.3,892.7,3018.3,891.4,3021.7,895.2z"/>
	<path class="st38" d="M3018.1,890.7c1.5,1.4,2.7,3,3.6,4.5c-3.4-3.8-10.4-2.5-15.6-0.9c-5.3,1.6-8.4,4.5-6.6,6.7
		c-1.6-0.8-3.5-1.6-5.5-2l0,0C2992.1,895.1,3006.2,886.5,3018.1,890.7z"/>
	<path class="st67" d="M3015.9,888.9c0.8,0.6,1.5,1.2,2.2,1.8c-11.9-4.3-26,4.5-24.1,8.3l0,0c-0.9-0.2-1.7-0.4-2.5-0.6
		c-3.1-3.2,6-13.1,23.7-10l0,0C3015.4,888.5,3015.7,888.7,3015.9,888.9z"/>
	<path class="st38" d="M3015.1,888.4c-17.6-3.1-26.7,6.8-23.7,10c-1.4-0.5-2.7-1-3.3-2.1c-0.1-0.1-0.1-0.2-0.2-0.2
		c0-0.1-0.1-0.1-0.1-0.2v-0.1c-1.6-3,4.5-9.6,19.2-10.3l0,0C3009.9,885.9,3012.7,886.9,3015.1,888.4z"/>
	<path class="st67" d="M2988.9,888.3c3.3-2.1,10.9-3.8,18.1-2.7c-14.7,0.7-20.7,7.3-19.2,10.3c-1.1-2-2.1-3.3-1.9-4.5
		C2986,890.4,2986.9,889.5,2988.9,888.3z"/>
	<path class="st68" d="M2989.8,893.5c-0.1-0.5,0.2-1,0.4-1.4c0.3-0.5,0.6-0.8,1-1.2c0.8-0.7,1.7-1.2,2.6-1.6c1.9-0.9,3.8-1.4,5.7-2
		v0.1c-1.9,0.7-3.8,1.4-5.5,2.4c-0.9,0.5-1.7,1-2.4,1.6C2990.8,892,2990.1,892.6,2989.8,893.5L2989.8,893.5z"/>
	<path class="st68" d="M2993,895c0.4-1,1.2-1.7,2-2.4s1.8-1.2,2.8-1.6c2-0.9,4.1-1.4,6.2-1.7v0.1c-2.1,0.5-4.1,1.1-5.9,2.1
		c-0.9,0.5-1.7,1.1-2.5,1.7c-0.8,0.6-1.6,1.2-2.4,2L2993,895z"/>
	<path class="st62" d="M3005.7,928h-2.5c-3.5,0-6.3-2.9-6.3-6.3l-0.3-0.6c0-3.5,4.2-5.6,7.6-5.6h1.5c3.5,0,6.2,2.8,6.2,6.2l0,0
		C3011.9,925.2,3009.1,928,3005.7,928z"/>
	<path class="st62" d="M3022.2,921.9c-0.1-2.4-0.6-3.5-2.8-4.2c-0.7-0.2-1.2-0.3-1.8-0.6c-1.1,0.9-1.8,2.1-1.8,3.6l0.3,0.6
		c0,3.5,2.4,6.3,5.8,6.3C3021.8,927.5,3022.2,923.7,3022.2,921.9z"/>
	<path class="st69" d="M3015.6,917c0.1,0.1,0.1,0.3,0,0.5c0-0.2-0.1-0.5-0.1-0.7C3015.5,917,3015.6,917,3015.6,917z"/>
	<path class="st62" d="M2997.2,920.4c-0.6,0-1.6,0.3-2.1,0.1c0,0.1,0,0.1,0,0.1c0.7,0.2,1.4,0.4,2.1,0.5
		C2997.2,920.7,2997.2,920.4,2997.2,920.4z"/>
	<path class="st69" d="M3029.7,917.9c-0.5-0.2-1-0.3-1.6-0.5c-0.3-0.1-0.5-0.1-0.8-0.2c-4.1-1-9.7-1.9-11.7-1.4
		c0-0.2-0.1-0.3-0.1-0.4c0,0,0.1,0.9,0.1,1.6c0.1,0.1,0.1,0.3,0,0.5c0.1,1.6,0.2,3.2,0.2,5l0,0c0.8,2.7,2.7,3.9,6.3,3.9
		c2.2,0.1,3.6-0.9,4.5-2l0,0c1.3-1.7,1.6-3.9,1.6-3.9c0.2,0,0.4,0.1,0.6,0.1c0.1,0,0.3,0.1,0.4,0.1
		C3029.7,919.9,3029.8,918.9,3029.7,917.9z M3021.1,925.1c-5.6-0.5-4.6-6.4-4.5-8c0,0,6.2,0.2,10.8,1.7
		C3026.8,922.1,3026.1,925.5,3021.1,925.1z"/>
	<path class="st66" d="M3029.7,917.9c-0.5-0.2-1-0.3-1.6-0.5c-0.3-0.1-0.5-0.1-0.8-0.2c-4.1-1-9.7-1.9-11.7-1.4
		c0-0.2-0.1-0.3-0.1-0.4c0,0,0.1,0.9,0.1,1.6c0.1,0.1,0.1,0.3,0,0.5c0.1,1.6,0.2,3.2,0.2,5l0,0c0.8,2.7,2.7,3.9,6.3,3.9
		c2.2,0.1,3.6-0.9,4.5-2l0,0c0.2-0.2,0.3-0.5,0.5-0.7c-0.6,0.6-1.2,1-1.8,1.4c0.6-0.4,1.2-0.9,1.8-1.4c0.9-1.6,1.1-3.2,1.1-3.2
		c0.2,0,0.4,0.1,0.6,0.1c0.1,0,0.3,0.1,0.4,0.1C3029.6,919.9,3029.8,918.9,3029.7,917.9z M3021.1,925.1c-5.6-0.5-4.6-6.4-4.5-8
		c0,0,6.2,0.2,10.8,1.7C3026.8,922.1,3026.1,925.5,3021.1,925.1z"/>
	<path class="st70" d="M3027.4,918.8c-0.6,3.4-1.2,6.8-6.2,6.4c-5.6-0.5-4.6-6.4-4.5-8C3016.6,917.1,3022.8,917.2,3027.4,918.8z"/>
	<path class="st71" d="M3026.1,918.4c-1.9,2.2-3.8,4.4-5.6,6.6c0.2,0,0.3,0.1,0.5,0.1s0.5,0,0.7,0.1c1.7-2.1,3.5-4.3,5.1-6.5
		C3026.7,918.6,3026.4,918.5,3026.1,918.4z"/>
	<path class="st71" d="M3020,924.9c1.8-2.3,3.6-4.5,5.6-6.7c-1.5-0.3-3-0.6-4.4-0.8c-1.4,1.6-2.7,3.4-4,5.2
		C3017.6,923.6,3018.5,924.5,3020,924.9z"/>
	<path class="st66" d="M3011.7,917.6c-0.1,0.1-0.2,0.2-0.2,0.3c0-0.7,0-1.4-0.1-2.1c0,0,0.2-0.1,0.6-0.2c0.3-0.1,0.6-0.2,1-0.3
		c0.9-0.2,1.9-0.3,2.3,0.1c0.1,0.1,0.1,0.1,0.1,0.2c0,0,0.1,0.9,0.1,1.6c0-0.1-0.1-0.1-0.1-0.2l0,0c-0.3-0.5-1.5-0.6-2.5-0.1
		C3012.5,917,3012,917.2,3011.7,917.6z"/>
	<path class="st72" d="M3015.6,917c0-0.7-0.1-1.6-0.1-1.6c-0.1-0.1-0.1-0.1-0.1-0.2c-0.3-0.3-0.9-0.3-1.5-0.2
		c0.1,0.5,0.2,0.9,0.2,1.4c0.7-0.1,1.3,0.1,1.5,0.4l0,0C3015.5,917,3015.6,917,3015.6,917z"/>
	<path class="st73" d="M3014,916.4c-0.1-0.5-0.1-0.9-0.2-1.4c-0.3,0.1-0.6,0.1-0.8,0.2s-0.5,0.1-0.7,0.2c0,0.6,0,1.1-0.1,1.7
		c0.2-0.2,0.5-0.3,0.7-0.4C3013.3,916.6,3013.6,916.5,3014,916.4z"/>
	<path class="st66" d="M2994.9,917.5c4-1.3,13.7-2.5,16.5-1.7c0,0.8,0.1,1.4,0.1,2.1l0,0c-0.1,7.1-2,9.6-7.9,9.5
		c-6.1-0.1-6.4-6.9-6.4-6.9c-0.6,0-1.6,0.3-2.1,0.1c-0.1-0.1-0.2-0.1-0.2-0.2C2994.1,919.3,2994.2,917.7,2994.9,917.5L2994.9,917.5z
		 M3004.7,925.8c6.2-0.2,5.4-6.8,5.4-8.7c0,0-6.9-0.1-12,1.3C2998.5,922.1,2999.1,926,3004.7,925.8z"/>
	<path class="st72" d="M3011.4,916c0-0.1,0-0.2,0-0.3c-2.8-0.8-12.5,0.4-16.5,1.7c0,0,0,0-0.1,0c-0.6,0.2-0.7,1.9-0.1,2.9
		c0.1,0.1,0.1,0.2,0.2,0.2c0.1,0.1,0.3,0.1,0.5,0.1c-0.4-0.4-0.8-2.5-0.4-2.5C3000.5,916.7,3005.9,915.5,3011.4,916z"/>
	<path class="st70" d="M3010.1,917.1c0,1.9,0.9,8.4-5.4,8.7c-5.6,0.2-6.2-3.6-6.7-7.4C3003.3,917,3010.1,917.1,3010.1,917.1z"/>
	<path class="st71" d="M3007.6,917.1c-1.2,0.1-2.7,0.1-4.3,0.3c-1.3,2-2.5,4.1-3.8,6.1c0.6,1,1.6,1.7,3.1,2
		C3004.2,922.7,3005.8,919.9,3007.6,917.1z"/>
	<path class="st71" d="M3010.1,917.1c0,0-0.3,0-1,0c-1.9,2.7-3.5,5.7-5.2,8.7c0.2,0,0.5,0,0.7,0c0.3,0,0.5-0.1,0.8-0.1
		C3007,922.9,3008.6,920.1,3010.1,917.1L3010.1,917.1z"/>
	<path class="st72" d="M2997.6,920.5c0,0-0.1,0-0.5,0c0.1,0.8,0.7,6.7,6.4,6.8c2.3,0.1,4-0.3,5.3-1.2c-1.2,0.7-2.7,1-4.8,0.9
		C2998.7,927,2997.8,921.9,2997.6,920.5z"/>
	<path class="st28" d="M3018.8,927c0.2,1.3,0.1,2-1.3,2.3c-0.1,0-0.9,0.1-0.9,0.1c-2.1,0.2-2-2-2.7-6.5c-0.2-1.6-0.7-4.9-0.9-6.1
		c1-0.5,2.3-0.6,3.1,0.3l0.5,1c0.1,0.2,0.1,0.3,0.2,0.5c0.3,1.1,0.8,2.4,1,3.6c0.1,0.2,0.1,0.3,0.1,0.5
		C3018.2,924.6,3018.6,926,3018.8,927z"/>
	<path class="st29" d="M3014,922.9c0.6,4.5,0.9,6.4,3,6.3c-4,0.4-6.1-0.8-6.1-0.8c-0.8-2.8,1.3-2.4,1.3-2.4s-0.2-0.9-0.2-4.7
		c0-0.8,0.1-2.8,0.1-3.4c0.4-0.3,0.6-0.8,1.2-0.9C3013.2,918.2,3013.7,921.2,3014,922.9z"/>
	<path class="st41" d="M2975.7,917.5c0,0-5.3-20.3,8.7-32c11.7-9.8,24.6-0.6,24.6-0.6s-11.2,4.2-20.9,13.7
		C2984.5,902,2976.1,917.2,2975.7,917.5z"/>
	<path class="st41" d="M2978.8,925.4c-1.2-2.7,1.2-7.5,6.2-15.9c5.6-9.3,6.4-16.6,24-20.5c3.5-0.8,7-0.6,7-0.6s-2.3-2.7-6.8-5.8
		c-4.6-3.1-18.2-1.7-28.4,14c-10.1,15.7-7.1,19-6.3,22.3C2976,925.9,2978.8,925.4,2978.8,925.4z"/>
	<path class="st54" d="M2995.9,883.7c-0.1,0.2-0.2,0.3-0.5,0.4c-0.1,0-3.8,0.9-9.7,7.2c-5.6,6-8,12.5-8,12.6
		c-0.1,0.4-0.5,0.6-0.9,0.4s-0.5-0.6-0.3-1c0.1-0.3,2.5-6.9,8.3-13.1c6.2-6.7,10.2-7.6,10.4-7.6c0.3-0.1,0.7,0.2,0.8,0.6
		C2996.1,883.4,2996,883.6,2995.9,883.7z"/>
	<path class="st54" d="M3007.2,888.4c-0.1,0.1-0.1,0.2-0.2,0.2c-0.3,0.3-0.7,0.2-0.9-0.1c-1.8-2.4-6.2-4.7-6.2-4.7
		c-0.3-0.2-0.5-0.6-0.3-1s0.5-0.6,0.9-0.4c0.2,0.1,4.7,2.5,6.7,5.2C3007.3,887.8,3007.3,888.1,3007.2,888.4z"/>
	<path class="st54" d="M2991.9,896.6c0,0.1-0.1,0.1-0.1,0.2c-0.2,0.3-0.7,0.3-0.9,0c-1.4-1.6-3.2-4.6-3.2-4.8
		c-0.2-0.3-0.1-0.8,0.2-1s0.7-0.1,0.9,0.2c0,0.1,1.7,3.1,3.1,4.5C2991.9,896,2992,896.4,2991.9,896.6z"/>
	<path class="st54" d="M2981.6,910.5c-0.1,0.1-0.1,0.2-0.2,0.2c-0.3,0.3-0.7,0.2-0.9-0.1c-0.1-0.1-2.1-2.8-2.8-4.5
		c-0.2-0.4,0-0.8,0.3-1s0.8,0,0.9,0.4c0.5,1.2,2,3.4,2.5,4.1C2981.8,909.9,2981.8,910.2,2981.6,910.5z"/>
	<path class="st54" d="M2979,915.2c-0.1,0.1-0.1,0.1-0.1,0.2c-0.2,0.3-0.7,0.3-0.9,0c-1-1.2-2.4-5.6-2.5-6s0.1-0.8,0.4-1
		c0.3-0.1,0.8,0.1,0.9,0.5c0.5,1.7,1.6,4.7,2.2,5.4C2979.1,914.5,2979.2,914.9,2979,915.2z"/>
	<path class="st54" d="M3001.8,890.5c-0.1,0.2-0.2,0.3-0.3,0.3c-0.3,0.2-0.8,0-0.9-0.4c-0.3-0.7-3.6-3.5-5.3-4.5
		c-0.3-0.2-0.5-0.6-0.3-1s0.6-0.5,0.9-0.3c1.3,0.8,5.4,3.8,6,5.2C3002,890.1,3002,890.3,3001.8,890.5z"/>
	<path class="st74" d="M3003.7,889.4c-5.9,1.2-13.8,7.6-15.2,10.1c-2.3,4.1-2.7,8.9-3,9.7c-0.2,1.2-2.8,2-3.5,1.3
		c-1.6-1.5,0.8-8,1.5-9.5c0.6-1.2,2.8-5.2,7.8-8.9c1.2-0.9,4.7-3.1,10-4.5c0.2-0.1,5-1.4,5.3-0.6
		C3006.6,887.6,3006.5,888.8,3003.7,889.4z"/>
	<path class="st75" d="M2991.1,894.7c-2.5,2.1-4.7,4.9-5.7,8.9c-0.5,2.1-0.8,4.3-0.8,6.7c0.5-0.3,0.8-0.6,0.9-1
		c0.2-0.8,0.6-5.6,3-9.7c1.4-2.6,9.3-9,15.2-10.1c1.9-0.3,2.7-1.9,2.8-2.4C3001.1,888.2,2995.6,891,2991.1,894.7z"/>
	<polygon class="st76" points="2985.5,912 2984.8,912 2984.8,912 2984,911.7 2983.1,911.6 2982.9,911.6 2982,911.7 2981.4,911.9 
		2981.4,911.5 2981.4,911.5 2981.4,911.4 2981.4,911.4 2984.8,911.4 2984.8,911.4 2984.9,911.5 2985,911.5 2985.1,911.5 
		2985.2,911.5 2985.2,911.5 2985.3,911.5 2985.4,911.5 2985.5,911.5 2985.5,911.5 2985.5,911.9 	"/>
	<polygon class="st76" points="2985.4,909.6 2985.3,909.5 2985.2,909.6 2985.2,909.5 2985.1,909.6 2985,909.6 2984.9,909.7 
		2984.8,909.7 2984.8,909.7 2981.4,909.7 2981.4,909.7 2981.4,909.7 2981.4,909.6 2981.4,908.7 2984.8,908.7 2985.5,908.7 
		2985.5,909.6 2985.5,909.6 	"/>
	<polygon class="st77" points="2986.9,930.4 2987.7,929.8 2988.4,929.2 2988.9,928.3 2989.5,927.4 2990,926.4 2990.3,925.3 
		2990.6,924.1 2990.7,922.9 2990.8,921.7 2990.7,920.4 2990.6,919.3 2990.3,918.1 2990,917 2989.5,916 2989.3,915.6 2989.3,915.6 
		2988.9,915 2988.7,914.6 2988.4,914.2 2988.1,913.8 2988.1,913.7 2987.9,913.5 2987.7,913.3 2987.5,913.2 2988.2,913.7 
		2988.3,913.8 2989,914.5 2989.6,915.3 2989.7,915.4 2990.2,916.3 2990.6,917.2 2990.7,917.3 2991,918.3 2991.3,919.4 2991.4,920.5 
		2991.4,921.7 2991.4,922.8 2991.3,924 2991,925 2990.7,926 2990.6,926.2 2990.2,927.1 2989.7,928 2989.6,928.1 2989,928.9 
		2988.3,929.6 2988.2,929.7 2987.5,930.2 2987.3,930.3 2986.5,930.7 2986.3,930.7 2986.3,930.7 2986.3,930.7 2985.8,930.9 
		2985.5,931 2985.3,931 2986.2,930.8 	"/>
	<polygon class="st78" points="2987.9,913.5 2988.1,913.7 2988.1,913.8 2988.4,914.2 2988.7,914.6 2988.9,915 2989.3,915.6 
		2989.3,915.6 2989.5,916 2989.7,916.7 2989.9,917 2990.2,917.8 2990.2,918.1 2990.4,919.1 2990.4,919.3 2990.6,920.4 2990.6,920.4 
		2990.7,921.7 2990.7,921.8 2990.6,921.9 2990.6,922 2990.6,922.1 2990.6,922.2 2990.5,922.3 2990.4,922.4 2990.4,922.5 
		2990.3,922.5 2990.2,922.5 2990.2,922.5 2990.1,922.5 2990,922.5 2989.9,922.5 2989.9,922.5 2989.8,922.5 2989.7,922.4 
		2989.7,922.3 2989.7,922.2 2989.6,922.1 2989.6,922 2989.6,921.9 2989.6,921.8 2989.6,921.7 2989.5,920.4 2989.3,919.1 
		2989.1,917.8 2988.7,916.7 2988.2,915.6 2987.6,914.6 2987,913.7 2986.2,913 2985.5,912.4 2984.6,912 2983.8,911.7 2982.9,911.6 
		2983.1,911.6 2984,911.7 2984.8,912 2984.8,912 2985.5,912 2985.5,912 2985.5,911.9 2985.7,912 2986.6,912.4 2987.3,913 
		2987.5,913.2 2987.7,913.3 	"/>
	<path class="st79" d="M2976.1,920.4l0.2-1.2l0.3-1.2l0.3-1.1l0.5-1l0.2-0.3v-0.1l0.6-1l0.6-0.9l0.8-0.8l0.8-0.6l0.8-0.4l0.2-0.1
		l0.6-0.2l0.9-0.1l0.9,0.1l0.9,0.2l0.8,0.4l0.8,0.6l0.8,0.8l0.6,0.9l0.6,1l0.5,1.1l0.4,1.2l0.3,1.2l0.2,1.3l0.1,1.3v0.2v0.1v0.1v0.1
		l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1l0.1,0.1h0.1l-0.4-0.1h-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1l-0.1-0.1v-0.1
		v-0.1v-0.1l0,0l-0.1-1.2l-0.2-1.2l-0.3-1.2l-0.3-1.1l-0.5-1l-0.5-0.9l-0.6-0.8l-0.7-0.7l-0.8-0.5l-0.8-0.4l-0.8-0.2l-0.8-0.1h-0.5
		l0.8,0.1l0.8,0.2l0.8,0.4l0.8,0.5l0.7,0.7l0.6,0.8l0.5,0.9l0.5,1l0.3,1.1l0.3,1.2l0.2,1.2l0.1,1.2l-0.1,1.2l-0.2,1.2l-0.3,1.2
		l-0.3,1.1l-0.5,1l-0.5,0.9l-0.6,0.8l-0.7,0.7l-0.8,0.5l-0.8,0.4l-0.8,0.2l-0.8,0.1l-0.8-0.1l-0.8-0.2l-0.8-0.4l-0.8-0.5l-0.7-0.7
		l-0.6-0.8l-0.5-0.9l-0.5-1l-0.3-1.1l-0.3-1.2l-0.2-1.2l-0.1-1.2L2976.1,920.4z M2977,922.3l0.1,0.7l0.2,0.6l0.2,0.6l0.2,0.6
		l0.3,0.5l0.3,0.5l0.4,0.4l0.4,0.3l0.4,0.2l0.5,0.1l0.5,0.1l0.5-0.1l0.5-0.1l0.4-0.2l0.4-0.3l0.4-0.4l0.3-0.5l0.3-0.5l0.2-0.6
		l0.2-0.6l0.2-0.6l0.1-0.7l0.1-0.7l-0.1-0.7l-0.1-0.7l-0.2-0.6l-0.2-0.6l-0.2-0.6l-0.3-0.5l-0.3-0.5l-0.4-0.4l-0.4-0.3l-0.4-0.2
		l-0.5-0.1l-0.5-0.1l-0.5,0.1l-0.5,0.1l-0.4,0.2l-0.4,0.3l-0.4,0.4l-0.3,0.5l-0.3,0.5l-0.2,0.6l-0.2,0.6l-0.2,0.6l-0.1,0.7l-0.1,0.7
		L2977,922.3z"/>
	<path class="st80" d="M2977.1,920.3l0.2-0.6l0.2-0.6l0.2-0.6l0.3-0.5l0.3-0.5l0.4-0.4l0.4-0.3l0.4-0.2l0.5-0.1l0.5-0.1l0.5,0.1
		l0.5,0.1l0.4,0.2l0.4,0.3l0.4,0.4l0.3,0.5l0.3,0.5l0.2,0.6l0.2,0.6l0.2,0.6l0.1,0.7l0.1,0.7l-0.1,0.7l-0.1,0.7l-0.2,0.6l-0.2,0.6
		l-0.2,0.6l-0.3,0.5l-0.3,0.5l-0.4,0.4l-0.4,0.3l-0.4,0.2l-0.5,0.1l-0.5,0.1l-0.5-0.1l-0.5-0.1l-0.4-0.2l-0.4-0.3l-0.4-0.4l-0.3-0.5
		l-0.3-0.5l-0.2-0.6l-0.2-0.6l-0.2-0.6l-0.1-0.7l-0.1-0.7l0.1-0.7L2977.1,920.3z M2977.4,922.3l0.1,0.6l0.1,0.6l0.2,0.5l0.2,0.5
		l0.3,0.5l0.3,0.4l0.3,0.3l0.3,0.3l0.4,0.2l0.4,0.1l0.4,0.1l0.4-0.1l0.4-0.1l0.4-0.2l0.3-0.3l0.3-0.3l0.3-0.4l0.3-0.5l0.2-0.5
		l0.2-0.5l0.1-0.6l0.1-0.6v-0.6v-0.6l-0.1-0.6l-0.1-0.6l-0.2-0.5l-0.2-0.5l-0.3-0.5l-0.3-0.4l-0.3-0.3l-0.3-0.3l-0.4-0.2l-0.4-0.1
		l-0.4-0.1l-0.4,0.1l-0.4,0.1l-0.4,0.2l-0.3,0.3l-0.3,0.3l-0.3,0.4l-0.3,0.5l-0.2,0.5l-0.2,0.5l-0.1,0.6l-0.1,0.6v0.6V922.3z"/>
	<polygon class="st76" points="2984,930.8 2984.8,930.4 2985.5,929.8 2986.2,929.2 2986.8,928.3 2987.3,927.4 2987.8,926.4 
		2988.1,925.3 2988.4,924.1 2988.6,922.9 2988.6,921.7 2988.6,920.4 2988.4,919.3 2988.1,918.1 2987.8,917 2987.3,916 2986.8,915 
		2986.2,914.2 2985.5,913.5 2984.8,913 2984,912.6 2983.2,912.4 2982.3,912.3 2982.9,912.3 2983.7,912.4 2984.5,912.6 2985.3,913 
		2986,913.5 2986.7,914.2 2987.3,915 2987.8,916 2988.3,917 2988.7,918.1 2988.9,919.3 2989.1,920.4 2989.2,921.7 2989.2,921.8 
		2989.2,921.9 2989.2,922 2989.2,922.1 2989.3,922.2 2989.3,922.3 2989.3,922.3 2989.4,922.4 2989.5,922.5 2989.5,922.5 
		2989.6,922.5 2990,922.5 2990.1,922.5 2990.2,922.5 2990.2,922.5 2990.3,922.5 2990.4,922.5 2990.4,922.4 2990.5,922.3 
		2990.6,922.2 2990.6,922.1 2990.6,922 2990.6,921.9 2990.7,921.8 2990.7,921.7 2990.6,920.4 2990.6,920.4 2990.4,919.3 
		2990.4,919.1 2990.2,918.1 2990.2,917.8 2989.9,917 2989.7,916.7 2989.5,916 2989.3,915.6 2989.5,916 2990,917 2990.3,918.1 
		2990.6,919.3 2990.7,920.4 2990.8,921.7 2990.7,922.9 2990.6,924.1 2990.3,925.3 2990,926.4 2989.5,927.4 2988.9,928.3 
		2988.4,929.2 2987.7,929.8 2986.9,930.4 2986.2,930.8 2985.3,931 2984.5,931.1 2982.3,931.1 2983.2,931 	"/>
	<polygon class="st79" points="2985.4,911.5 2985.3,911.5 2985.2,911.5 2985.2,911.5 2985.1,911.5 2985,911.5 2984.9,911.5 
		2984.8,911.4 2984.8,911.4 2981.4,911.4 2981.4,911.4 2981.4,911.5 2981.4,911.5 2981.3,911.5 2981.2,911.4 2981.1,911.3 
		2981.1,911.2 2981,911.2 2981,911.1 2981,910.9 2980.9,910.8 2980.9,910.7 2980.9,910.5 2980.9,910.4 2980.9,910.3 2981,910.2 
		2981,910.1 2981,910 2981.1,909.8 2981.1,909.8 2981.2,909.7 2981.3,909.7 2981.4,909.6 2981.4,909.7 2981.4,909.7 2981.4,909.7 
		2984.8,909.7 2984.8,909.7 2984.9,909.7 2985,909.6 2985.1,909.6 2985.2,909.5 2985.2,909.6 2985.3,909.5 2985.4,909.6 
		2985.5,909.6 2985.5,909.6 2985.6,909.7 2985.6,909.7 2985.7,909.8 2985.8,909.8 2985.8,910 2985.9,910.1 2985.9,910.2 
		2985.9,910.3 2986,910.4 2986,910.5 2986,910.7 2985.9,910.8 2985.9,910.9 2985.9,911.1 2985.8,911.2 2985.8,911.2 2985.7,911.3 
		2985.6,911.4 2985.6,911.5 2985.5,911.5 2985.5,911.5 	"/>
	<path class="st66" d="M2977.5,920.5l0.1-0.6l0.2-0.5l0.2-0.5l0.3-0.5l0.3-0.4l0.3-0.3l0.3-0.3l0.4-0.2l0.4-0.1l0.4-0.1l0.4,0.1
		l0.4,0.1l0.4,0.2l0.3,0.3l0.3,0.3l0.3,0.4l0.3,0.5l0.2,0.5l0.2,0.5l0.1,0.6l0.1,0.6v0.6v0.6l-0.1,0.6l-0.1,0.6l-0.2,0.5l-0.2,0.5
		l-0.3,0.5l-0.3,0.4l-0.3,0.3l-0.3,0.3l-0.4,0.2l-0.4,0.1l-0.4,0.1l-0.4-0.1l-0.4-0.1l-0.4-0.2l-0.3-0.3l-0.3-0.3l-0.3-0.4l-0.3-0.5
		l-0.2-0.5l-0.2-0.5l-0.1-0.6l-0.1-0.6v-0.6v-0.6L2977.5,920.5z M2978.5,922l0.1,0.3l0.1,0.3l0.1,0.3l0.1,0.3l0.2,0.3l0.2,0.2
		l0.2,0.2l0.2,0.2l0.2,0.1l0.2,0.1h0.2h0.2l0.2-0.1l0.2-0.1l0.2-0.2l0.2-0.2l0.2-0.2l0.2-0.3l0.1-0.3l0.1-0.3l0.1-0.3l0.1-0.3v-0.3
		v-0.3l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.1-0.3l-0.2-0.3l-0.2-0.2l-0.2-0.2l-0.2-0.2l-0.2-0.1l-0.2-0.1h-0.2h-0.2l-0.2,0.1l-0.2,0.1
		l-0.2,0.2l-0.2,0.2l-0.2,0.2l-0.2,0.3l-0.1,0.3l-0.1,0.3l-0.1,0.3l-0.1,0.3v0.3V922z"/>
	<polygon class="st80" points="2978.6,920.9 2978.7,920.6 2978.8,920.3 2978.9,920 2979.1,919.7 2979.3,919.4 2979.4,919.2 
		2979.7,919 2979.9,918.9 2980.2,918.9 2980.4,918.9 2980.7,918.9 2980.9,918.9 2981.1,919 2981.4,919.2 2981.6,919.4 2981.8,919.7 
		2981.9,920 2982.1,920.3 2982.2,920.6 2982.2,920.9 2982.3,921.3 2982.3,921.7 2982.3,922 2982.2,922.4 2982.2,922.7 2982.1,923.1 
		2981.9,923.4 2981.8,923.7 2981.6,923.9 2981.4,924.1 2981.1,924.3 2980.9,924.4 2980.7,924.5 2980.4,924.5 2980.2,924.5 
		2979.9,924.4 2979.7,924.3 2979.4,924.1 2979.3,923.9 2979.1,923.7 2978.9,923.4 2978.8,923.1 2978.7,922.7 2978.6,922.4 
		2978.5,922 2978.5,921.7 2978.5,921.3 	"/>
	<path class="st81" d="M2988.9,894.7L2988.9,894.7L2988.9,894.7z"/>
	<path class="st81" d="M3002.8,889.4c0.2,0.3,0.5,0.5,0.8,0.5h-1.4C3002.4,889.6,3002.5,889.5,3002.8,889.4z"/>
	<path class="st79" d="M3005.4,885.7c-1.6,0.5-2.4,1-2.4,1c-0.4,0.3-0.6,0.9-0.6,1.4l0,0l0,0h-3.1c0-0.6,0.2-1.2,0.6-1.4
		c0.1-0.1,2.5-1.7,7.3-1.7h3.1c-1.2,0-2.3,0.1-3.2,0.2c-0.2,0.1-0.5,0.1-0.6,0.1C3006.2,885.5,3005.8,885.6,3005.4,885.7z"/>
	<path class="st78" d="M3002.8,889.4c-0.1-0.1-0.1-0.1-0.1-0.2c-0.1-0.1-0.1-0.2-0.1-0.3c-0.1-0.2-0.1-0.5-0.1-0.7l0,0l0,0
		c0-0.6,0.2-1.2,0.6-1.4c0.1-0.1,0.9-0.6,2.4-1c0.3-0.1,0.7-0.2,1.2-0.3c0.2-0.1,0.4-0.1,0.6-0.1c0.9-0.2,2-0.2,3.2-0.2
		c4.8,0,7.2,1.6,7.3,1.7c0.4,0.3,0.6,0.9,0.6,1.4c0,0.2-0.1,0.5-0.1,0.7c-0.1,0.2-0.2,0.3-0.2,0.5c-0.2,0.3-0.5,0.5-0.8,0.5
		c-0.2,0-0.3-0.1-0.5-0.2c0,0-0.5-0.3-1.6-0.7c-0.1-0.1-0.2-0.1-0.4-0.1c0,0,0,0-0.1,0c-0.1-0.1-0.3-0.1-0.4-0.1h-0.1
		c-0.1-0.1-0.3-0.1-0.4-0.1c-0.1,0-0.1,0-0.1,0c-0.1,0-0.2-0.1-0.4-0.1c-0.1,0-0.1,0-0.2-0.1c-0.1,0-0.3-0.1-0.4-0.1
		c-0.1,0-0.1,0-0.2-0.1c-0.2,0-0.3-0.1-0.5-0.1c-0.1,0-0.1,0-0.2,0c-0.2,0-0.3,0-0.5-0.1c-0.1,0-0.2,0-0.2,0c-0.2,0-0.5,0-0.8,0l0,0
		c-0.6,0-1,0-1.6,0.1c-3.2,0.3-4.7,1.3-4.8,1.3c-0.2,0.1-0.3,0.2-0.5,0.2C3003.3,889.8,3003,889.6,3002.8,889.4z"/>
	<path class="st30" d="M2974.2,1116.8c-0.1,0.1-0.3,0.2-0.5,0.2c-0.5,0.1-0.9-0.2-1-0.7c-0.5-2.8-1.7-7.6-2.7-8.7
		c-0.3-0.3-0.3-0.9,0.1-1.2c0.3-0.3,0.9-0.3,1.2,0.1c1.7,1.9,3,8.7,3.1,9.5C2974.5,1116.3,2974.4,1116.6,2974.2,1116.8z"/>
	<path class="st30" d="M2957.7,1119.8c-0.1,0.1-0.3,0.2-0.5,0.2c-0.5,0.1-0.9-0.2-1-0.7l-1.3-7.8c-0.1-0.5,0.2-0.9,0.7-1
		s0.9,0.2,1,0.7l1.3,7.8C2958,1119.4,2957.9,1119.7,2957.7,1119.8z"/>
	<path class="st30" d="M2967.2,1117.8c-0.1,0.1-0.3,0.2-0.5,0.2c-0.5,0.1-0.9-0.2-1-0.7l-0.7-3.3c-0.1-0.5,0.2-0.9,0.7-1
		s0.9,0.2,1,0.7l0.7,3.3C2967.5,1117.3,2967.4,1117.6,2967.2,1117.8z"/>
	<path class="st53" d="M3096.9,981l-3.1-4.9c-0.1-0.1-6.5-3.1-6.7-3.1l-12.7-6.3c-0.5-0.3-1.2-0.1-1.7,0.3l-6.3,6.4
		c-0.6,0.6-0.6,1.6,0,2l15.3,11.2c0.1,0.1,0.2,0.1,0.3,0.2l9.3,2.7c0.6,0.2,1.3-0.1,1.6-0.7l4-6.1
		C3097.4,982.1,3097.4,981.4,3096.9,981z"/>
	<path class="st30" d="M3078.6,970.8c0.2,0,0.3,0.1,0.5,0.2c0.3,0.3,0.4,0.8,0.1,1.1c-1.6,2-4.1,5.7-4.2,7.1
		c-0.1,0.4-0.4,0.8-0.9,0.7c-0.4-0.1-0.8-0.4-0.7-0.9c0.2-2.3,4.1-7.3,4.6-7.9C3078.1,970.9,3078.3,970.8,3078.6,970.8z"/>
	<path class="st30" d="M3090.6,980c0.2,0,0.3,0.1,0.5,0.2c0.3,0.3,0.4,0.8,0.1,1.1l-4.5,5.6c-0.3,0.3-0.8,0.4-1.1,0.1
		c-0.3-0.3-0.4-0.8-0.1-1.1l4.5-5.6C3090.1,980.1,3090.4,980,3090.6,980z"/>
	<path class="st30" d="M3083.4,974.9c0.2,0,0.3,0.1,0.4,0.2c0.3,0.2,0.4,0.8,0.2,1.1l-1.8,2.4c-0.2,0.3-0.8,0.4-1.1,0.2
		s-0.4-0.8-0.2-1.1l1.8-2.4C3083,975,3083.2,974.9,3083.4,974.9z"/>
</g>
<g id="Layer_3">
	<path class="st82" d="M1341.3,1251.2c5-7.9,25.5-15.2,28.9-12.7c1.1,1.3-5.4,7.6-8.5,10.8c-2.4,2.4-4.4,5.4-6.1,8.4L1341.3,1251.2z
		"/>
	<path class="st83" d="M1345.8,1250.8c4-6.5,19.5-12.7,21.9-10.9c0.8,1-4.4,5.8-6.8,8.4c-1.8,2-4.2,4.4-5.5,6.9L1345.8,1250.8z"/>
	<path class="st84" d="M1352.9,1247.7c1.7-1.4,4.4-3.3,6.4-4.4c3-1.7,8.6-3.4,8.6-3.4c-2.4-1.7-18.1,4.4-21.9,10.9l2.4,1.1
		C1349.5,1250.2,1351.2,1248.9,1352.9,1247.7z"/>
	<path class="st82" d="M1322.7,1251.9c1.8-9.2,18.5-23.1,22.4-22.2c1.6,0.8-2.4,9.1-4.1,13c-1.4,3.1-2.3,6.7-2.8,10.1L1322.7,1251.9
		z"/>
	<path class="st83" d="M1326.8,1249.9c1.4-7.5,13.7-18.8,16.7-18c1.1,0.7-2.1,6.9-3.4,10.2c-1,2.5-2.4,5.7-2.8,8.4L1326.8,1249.9z"
		/>
	<path class="st84" d="M1332.4,1244.5c1.1-2,3-4.7,4.4-6.4c2.3-2.5,6.9-6.2,6.8-6.2c-3-0.7-15.3,10.6-16.7,18l2.7,0.1
		C1330.1,1248.1,1331.4,1246.4,1332.4,1244.5z"/>
	<path class="st82" d="M1415.2,1296.7c4.4-0.8,7.8-3,10.2-8.8c2.3,4.7,1.3,12.9-4.1,15.6c-1.6-1.4-4.1-4.2-5.1-6.1L1415.2,1296.7z"
		/>
	<path class="st82" d="M1389.3,1326.5c-1.1,3.7,4.4,12.5,6.7,15.6c0.8,1.1-3.3,0.4-3.5,5.2c3.4,0.1,4.1,0.1,7.4,0.1
		c2.5-4.7,4.7-15.6,4.7-21h-15.3L1389.3,1326.5L1389.3,1326.5z"/>
	<path class="st82" d="M1389.3,1326.5c-1.1,3.7,4.4,12.5,6.7,15.6c0.8,1.1-3.3,0.4-3.5,5.2c3.4,0.1,4.1,0.1,7.4,0.1
		c2.5-4.7,4.7-15.6,4.7-21h-15.3L1389.3,1326.5L1389.3,1326.5z"/>
	<path class="st82" d="M1353.7,1326.5c-1.1,3.7,4.4,12.5,6.7,15.6c0.8,1.1-3.3,0.4-3.5,5.2c3.4,0.1,4.1,0.1,7.4,0.1
		c2.5-4.7,4.7-15.6,4.7-21h-15.3L1353.7,1326.5L1353.7,1326.5z"/>
	<path class="st82" d="M1338.2,1326.5c-1.1,3.7,4.4,12.5,6.7,15.6c0.8,1.1-3.3,0.4-3.5,5.2c3.4,0.1,4.1,0.1,7.4,0.1
		c2.5-4.7,4.7-15.6,4.7-21h-15.3L1338.2,1326.5L1338.2,1326.5z"/>
	<path class="st82" d="M1403.9,1317.7c-5.1,8.9,3,21.7,5.4,24.8c0.8,1.1-2.5,0.1-2.8,5c3.4,0.1,4.2,0.1,7.5,0.1
		c3.8-4.8,9.1-24.9,8.8-32.7L1403.9,1317.7z"/>
	<path class="st3" d="M1331.1,1322.1c17.1,9.6,38.2,9.2,51.8,8.6c7.6-0.3,28.2,3,35.8-5.7c5.4-5.9,6.4-21,0.1-28
		c-6.5-7.2-16.3-7.8-24.9-10.1c-8.2-2.3-21.5-1.1-26.3-8.5c-3.8-5.9-7.6-17.8-13.2-22.9c-9.6-8.9-27.8-11.2-38.1,0.8
		c-3.7,4.2-3.4,9.6-7.2,13.5c-3.3,3.3-9.3,3.4-9.9,6.4c-1.4,7.8,13.6,11.3,16.4,16.3C1318.9,1297.9,1326,1319.3,1331.1,1322.1z"/>
	<path class="st84" d="M1359.5,1319.6c0-5.2-1.6-10.6-4.4-14.7c-3.1-4.5-7.8-7.5-10.6-12.2c-2.3-4.1-2.4-8.4-3.1-12.9
		c-0.7-4.2-1.6-10.1-8.1-9.1c-4.1,0.7-7.6,4-11.3,5.7c-5.8,2.5-15.4,2.7-20.8-1.1c-0.1-0.1-0.3-0.3-0.4-0.4c-0.4,0.6-1.3,1.1-1.3,2
		c-0.8,7.8,7.2,14.2,12.2,16.8c5.4,3,5.5,18,18.1,31c4.8,5,14.6,9.8,23.4,10.3c1.4,0.1,4.4-5.9,4.8-7.1
		C1359.1,1325.4,1359.5,1322.4,1359.5,1319.6z"/>
	<path class="st85" d="M1312.4,1277.4c0.7,2.7-4,5.5-5.2,6.2c-1.7,1-2.7,1.1-4.4-0.1c-1.4-1.1-4.7-5.5-3.5-7.6
		C1301.2,1272.6,1311.8,1275.3,1312.4,1277.4z"/>
	<path class="st86" d="M1328.2,1269.2c-0.1,0-0.4-0.1-0.4-0.3c-0.3-1-0.8-1.6-1.6-1.7c-0.7-0.1-1.6,0.1-2.3,0.8
		c-0.1,0.1-0.4,0.1-0.7,0c-0.1-0.1-0.1-0.4,0-0.7c0.8-0.8,2.1-1.3,3.1-1.1c1,0.3,1.8,1,2.3,2.3
		C1328.7,1268.8,1328.6,1269.1,1328.2,1269.2C1328.4,1269.2,1328.4,1269.2,1328.2,1269.2z"/>
	<path class="st86" d="M1318.3,1267.2c-0.1,0-0.4-0.1-0.4-0.3c-0.3-1-0.8-1.6-1.6-1.7s-1.6,0.1-2.3,0.8c-0.1,0.1-0.4,0.1-0.7,0
		c-0.1-0.1-0.1-0.4,0-0.7c0.8-0.8,2.1-1.3,3.1-1.1c1,0.3,1.8,1,2.3,2.3C1318.8,1266.8,1318.7,1267.1,1318.3,1267.2L1318.3,1267.2z"
		/>
	<path class="st86" d="M1310.1,1290.3c-0.4,0-0.7,0-1.1-0.1c-1.3-0.4-2.1-1.4-2.3-3c0-0.3,0.1-0.4,0.4-0.6c0.3,0,0.4,0.1,0.6,0.4
		c0.1,1.1,0.7,2,1.6,2.3c1.1,0.4,2.7-0.1,3.4-1c0.4-0.4,0.7-1.3,0.3-2.3c-0.1-0.3,0-0.6,0.1-0.6c0.3-0.1,0.6,0,0.6,0.1
		c0.6,1.1,0.4,2.4-0.4,3.3C1312.7,1289.7,1311.4,1290.3,1310.1,1290.3z"/>
	<path class="st87" d="M1306.3,1275.6c0.4,0.1,2.4,0.6,1.8,1.3c-0.4,0.6-2.3,0.3-2.8,0.3c-1-0.1-2-0.3-3-0.4c-0.7-0.1-2-0.7-0.8-1.1
		c0.7-0.3,1.4-0.1,2.1-0.1C1304.7,1275.3,1305.6,1275.4,1306.3,1275.6z"/>
</g>
<path class="st88" d="M1045.2,1348.6h5.5c1.9-0.3,3.2-0.8,5.1-1.1c2.9-0.4,4.2,0.8,4.5,1.1l0.1,0.1h23.5c0.6-0.8,0-2.8-0.5-4.2
	c-0.4-1-1.2-1.7-2.2-2c-2.5-0.7-7.4-1.4-11.9-5.4c-2.5-2.3-12.2-8.4-12.2-8.4h-0.1c-0.2,0-1.2,0.3-5.6,4c-2.3,1.9-6.2-2.7-6.2-2.7
	s-0.7,0.6-1.3,1.7c-0.4,0.9-0.8,2.1-0.5,3.6c0.4,2.1-0.8,6-1.7,8.7c-0.5,1.6-1,2.8-1,2.8S1040.4,1348,1045.2,1348.6z"/>
<path class="st88" d="M1005.5,1321.6l3.9,3.9c1.5,1.1,2.9,1.7,4.4,2.8c2.3,1.8,2.4,3.5,2.4,3.9v0.1l16.7,16.5c1-0.2,2-2,2.6-3.4
	c0.4-1,0.4-2.1-0.2-3c-1.3-2.3-4.3-6.2-4.6-12.2c-0.2-3.4-2.8-14.6-2.8-14.6l0,0c-0.2-0.1-1.1-0.6-6.8-1.1c-3-0.2-2.5-6.3-2.5-6.3
	s-0.9-0.1-2.1,0.3c-0.9,0.3-2,1-2.9,2.2c-1.2,1.8-4.8,3.8-7.3,5c-1.5,0.8-2.7,1.2-2.7,1.2S1002.5,1317.8,1005.5,1321.6z"/>
<g id="Layer_167">
	<path class="st89" d="M1778.3,974.1c0.1,0,19.4-7.4,31.8,0.5C1810.1,974.5,1797.1,990.2,1778.3,974.1z"/>
</g>
<g id="Layer_166">
	<path class="st90" d="M1813.8,968.9c-10.5,3.6-22.6-2.3-30.3-9.9c-0.5,6.7-2.2,23.9-7.6,27.5c-7.3,4.9,14.1,14,46-1.3
		C1821.9,985.3,1816.2,982.3,1813.8,968.9z"/>
</g>
<g id="Layer_165">
	<path class="st91" d="M1768.7,894.1c0,0,29.6-10,37.9,0.6c8.3,10.8,8.4,18.1,8.9,22.9c0.5,4.7,2.2,16.9,4,27.9s-5.1,20.6-18.3,17
		c-13.4-3.6-24.4-10.9-27-18.8C1771.6,935.9,1760.6,896.5,1768.7,894.1z"/>
</g>
<g id="Layer_164">
	<path class="st92" d="M1789.5,939.1c-0.1,2.6-2.9,4.5-6.1,4.4s-5.7-2.5-5.6-5.1s2.9-4.5,6.1-4.4
		C1787.1,934.3,1789.6,936.5,1789.5,939.1z"/>
</g>
<g id="Layer_163">
	<path class="st92" d="M1817.5,934.2c0.4,2.2-1.6,4.4-4.4,4.8c-2.7,0.4-5.3-1-5.6-3.2c-0.4-2.2,1.6-4.4,4.4-4.8
		C1814.5,930.4,1817.1,931.9,1817.5,934.2z"/>
</g>
<g id="Layer_162">
	<path class="st93" d="M1775.7,915.8c0,0-0.5,4.7,1.4,4.7s16.6-0.6,16.5-6.5c-0.3-6-3.9-4-6.5-2.7
		C1784.4,912.5,1777.3,914.9,1775.7,915.8z"/>
</g>
<g id="Layer_161">
	<path class="st93" d="M1814.2,917.7c0.4,0,0.9-0.1,1.2-0.4c0.6-0.9,1-3.4,0.4-4.4c-1.8-3-10.9-3.8-11.4-2.2c-0.5,1.4-0.5,6,1.7,6.2
		C1809,917.2,1811.4,917.7,1814.2,917.7z"/>
</g>
<g id="Layer_160">
	<path class="st91" d="M1774.2,940.4c0-0.3-0.1-0.6-0.1-0.9c-0.1-0.6-0.4-1.2-0.6-1.8c-0.5-1.3-1-2.6-1.3-3.9
		c-0.4-1.6-0.5-3.1-0.5-4.8c-1.6-2.5-6.4-8.3-12.3-0.5c-7.3,9.6,11.4,19.8,14.6,12.8C1774,941.1,1774.2,940.8,1774.2,940.4
		L1774.2,940.4z"/>
</g>
<g id="Layer_159">
	<path class="st94" d="M1760.6,930.3c0,0,6.7-1.6,8.6,3.9c1.2,3.5-0.4,7.8-3.1,6.2c-2.7-1.4-0.1-4.3-0.8-6.1
		C1764.6,932.2,1763.5,931.3,1760.6,930.3z"/>
</g>
<g id="Layer_158">
	<path class="st93" d="M1819.1,942.6c-1.4-0.5-11.3-1.3-13.7-0.8c-2.5,0.5-7.4,0.8-8.6-1s-11.3,4.4-14,5.7s-6.9-4.8-7-5.7
		s-2.2-15.6-4.4-17.1c-2.2-1.4-3.4,0.8-3.4,0.8s3,13.2,2.2,19.2s6.9,20.4,14.9,26.3c4.1,3.1,14.5,9.1,24,7.8
		c6.4-0.9,9.9-6.4,11.5-12.3c1.2-4.4,1.2-9.1,0.3-13.6L1819.1,942.6z"/>
</g>
<g id="Layer_157">
	<path class="st95" d="M1799.4,943.7c-1.2,0-2.1-0.4-2.9-0.9c-0.9-0.8-1.7-2.2-0.5-5.1c0.3-0.5,0.8-0.8,1.4-0.6
		c0.5,0.3,0.8,0.8,0.6,1.4c-0.4,0.9-0.6,2.2-0.1,2.7c1.3,1,5.7,0.1,7.4-0.9c0.5-1.2-2.2-8.7-5.1-15c-0.3-0.5,0-1.2,0.5-1.4
		s1.2,0,1.4,0.5c4.8,10.6,6.2,16.6,4.1,17.8C1805.3,942.7,1802.2,943.8,1799.4,943.7z"/>
</g>
<g id="Layer_156">
	<path class="st23" d="M1801.5,953.9c2.6,0,4.7-2.1,6.1-4.1c0.4-0.6,1-2.9,1.6-3.2c0,0-3.6,2.2-7.6,2.2c-4.7-0.1-9.7-1.9-9.7-1.9
		C1793.9,951.6,1796.8,953.9,1801.5,953.9z"/>
</g>
<g id="Layer_155">
	<path class="st23" d="M1793.6,928.5c0,0-5.3-7.4-13.5,0.4c0,0,2.7,4.9,8.7,3.4C1791.8,931.5,1793.2,929.8,1793.6,928.5z"/>
</g>
<g id="Layer_154">
	<path class="st96" d="M1792.2,928.9c0,2.2-1.8,4-4,4s-4-1.8-4-4s1.8-4,4-4S1792.2,926.7,1792.2,928.9z"/>
</g>
<g id="Layer_153">
	<path class="st23" d="M1789.2,928c0,0.5-0.5,1-1,1s-1-0.5-1-1s0.5-1,1-1S1789.2,927.3,1789.2,928z"/>
</g>
<g id="Layer_152">
	<path class="st97" d="M1794.1,927.3c0,0,0.6,5.4-6.2,6s-8.6-5.3-8.6-5.3l1.6,0.5c0,0,1.2,3.9,6.6,3.9c5.3,0,6.1-4.4,6.1-4.4
		L1794.1,927.3z"/>
</g>
<g id="Layer_151">
	<path class="st97" d="M1779.3,928.2c0,0,3.9-5.6,8.7-5.1c4.7,0.5,6.6,3.8,6.6,3.8l-0.5,1.9c0,0-2.5-3.4-6.9-3.1s-6.1,2.6-6.6,2.9
		S1779.3,928.2,1779.3,928.2z"/>
</g>
<g id="Layer_150">
	<path class="st23" d="M1805.3,926.8c0,0,3.4-7.3,11.1-1.6c0,0-1.4,4.9-6.7,4.3C1807.1,929.3,1805.7,927.8,1805.3,926.8z"/>
</g>
<g id="Layer_149">
	<path class="st96" d="M1814.5,926.5c0,1.9-1.7,3.4-3.5,3.4c-1.9,0-3.4-1.7-3.4-3.5c0-1.9,1.7-3.4,3.5-3.4
		S1814.5,924.6,1814.5,926.5z"/>
</g>
<g id="Layer_148">
	<path class="st23" d="M1812.7,925.6c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9s0.4-0.9,0.9-0.9S1812.7,925.1,1812.7,925.6z"/>
</g>
<g id="Layer_147">
	<path class="st97" d="M1816.4,925.2l-0.4,0.1c0,0-0.6,3.5-5.2,4s-5.6-3.1-5.6-3.1l-0.6-0.5c0,0,0,4.8,6,4.4
		c3.6-0.1,5.3-2.2,6.1-3.8C1816.6,926.1,1816.6,925.6,1816.4,925.2z"/>
</g>
<g id="Layer_146">
	<path class="st97" d="M1816.3,924.1c-1.4-1.2-4.1-3-6.7-2.3c-4,0.9-5.2,3.9-5.2,3.9l0.6,1.6c0,0,1.7-3.1,5.4-3.4s5.4,1.6,6,1.7
		c0.1,0,0.1,0,0.3,0C1816.4,925,1816.3,924.5,1816.3,924.1z"/>
</g>
<g id="Layer_145">
	<path class="st93" d="M1767.4,895c-0.8-1-2.1-1.3-3.4-1.4c-5.2-0.4-10.5,2.5-13.1,7s-2.2,10.6,0.8,14.9c1,1.6,2.6,3,2.9,4.8
		c0.3,1.4-0.4,2.9-0.6,4.4c-0.4,1.4-0.3,3.1,0.8,4.1c1.2,1,3,0.8,4.4,0.1s2.6-1.7,4-2.2c2.6-0.9,5.4,0,8,0.9
		c3.9-7.1,4-16.2,0.4-23.5c-1.2-2.3-2.7-4.5-3.4-7C1768.1,896.5,1767.9,895.7,1767.4,895z"/>
</g>
<g id="Layer_144">
	<path class="st93" d="M1763.7,904.6c-1.7-0.5-3.6-1.2-4.4-2.7c3.1-6.7,6.6-13.7,13.1-17.5c3-1.7,6.4-2.6,9.7-3.1
		c3.5-0.5,9.7,0.6,13,2.1c10.5,4.5,17,14,20,8.9c0.9-1.6-3.4-2.3-4.4-0.8c1.4-3.5,6.6-4.3,9.6-1.9c3,2.3,3.6,6.7,2.2,10.2
		s-4.7,6-8.2,7.4c-2.1,0.8-4.3,1.3-6.4,0.8c-2.6-0.6-4.4-2.7-6.5-4.5c-1.9-1.7-4.7-3.2-7.1-2.6c-3,0.8-4.4,4.4-7.1,6.1
		c-1.9,1.3-4.4,1.4-6.7,1.3C1774.8,907.7,1769.2,906.2,1763.7,904.6z"/>
</g>
<g id="Layer_143">
	<path class="st91" d="M1974.1,1087.9c0,0-0.3,0.1-0.8,0.4c0.5-0.4,0.9-0.9,1-1.4c0.1-1.4-1-1.4-3-1.2c0.6-0.4,1.2-0.9,1.2-1.6
		c0.1-3.1-2.9-1.8-7.5-0.6c-4.7,1.2-8.7,0.1-10.2-0.1c0,0,5.2-1.8,4.7-4.8s-2.6-4.4-4.1-3.8s-0.3,2.7-0.8,3.5s-3.9,1.3-5.8,4.9
		c0,0-36.4-11.8-48.6-12.7c-4.7-0.3-6.7-1-7.6-2.2c-3.6,3.6-7.9,6.5-12.2,9.7c-2.5,1.9-4.4,4.1-6.7,5.8c12.2,3.8,64.9,4.9,72.5,6.9
		s11,5.8,18,6.1c6.2,0.3,7.4-3,7.4-4c1.4-0.3,2.7-0.6,3.5-1.4C1977.6,1089,1974.1,1087.9,1974.1,1087.9z M1962.4,1093.1
		c0,0,2.5,0.3,5.3,0.1C1966,1093.5,1964,1093.6,1962.4,1093.1z M1963.8,1090.7c0,0,3-0.3,5.8-0.9
		C1967.6,1090.4,1965.4,1090.9,1963.8,1090.7z"/>
</g>
<g id="Layer_142">
	<path class="st98" d="M1872.4,1075.8c-1.9,1.3-2.7,3.8-1.7,5.8c0.6,1.4,1.7,3,3.5,3.6c4.3,1.8,20.7-12.6,18.9-15.9
		c-1.8-3.2-3.1-6.7-6.5-4C1884,1067.5,1876.7,1073,1872.4,1075.8z"/>
</g>
<g id="Layer_141">
	<path class="st99" d="M1818.4,986.6c0,0,41.5,1.8,71.2,73.4c0.8,1.7,0.4,3.8-0.9,5.2c-2.9,3.2-8.8,8.9-18.7,13.4
		c-1.9,0.9-4.3,0.4-5.7-1.3c-6.5-7.4-24.5-28.4-28.7-41.4C1830.6,1020,1818.4,986.6,1818.4,986.6z"/>
</g>
<g id="Layer_140">
	<path class="st98" d="M1860.6,1038.7c-8.8-17.1-23.1-31.8-38.9-42.9c4,11,10.6,29.6,14,40.2c4.1,13,22.2,34,28.7,41.4
		c1.4,1.6,3.8,2.1,5.7,1.3c2.3-1,4.5-2.2,6.5-3.4C1864.4,1071.7,1865.7,1048.4,1860.6,1038.7z"/>
</g>
<g id="Layer_139">
	<path class="st91" d="M2064.8,1193.6c0,0-3.5-0.3-7.9,0s-19.2-10.4-22-13.1c-5.4-5.2-16.9-23.9-17.2-25.9c0-0.1-0.3-0.4-0.4-0.8
		l0,0c-0.6-1.4-0.1-1.9-0.5-6.9c-0.5-6-3.8-7.9-4.8-7.3c-0.5,0.3-0.1,1.2,0.4,2.1c-1.6-1.6-3.8-2.7-4.7-2.1
		c-0.6,0.4-0.1,1.3,0.8,2.2c-1.9-1.2-3.9-1.3-4.7-0.6c-0.6,0.5,0.5,1.6,1.8,2.5c-3.8-1.4-6.6,0.6-2.6,2.9c5.1,2.7,6.7,6.1,6.1,6.2
		s-2.7-1.7-4.4-0.4c-3.6,2.7,3.5,4.5,9.5,6.6c1,1.7,9.5,25.2,14.3,30.3c5.7,5.8,25.3,23.5,25.3,23.5S2068.2,1206,2064.8,1193.6z"/>
</g>
<g id="Layer_138">
	<path class="st100" d="M2108,1172.5c0,0,19.8-6,9.3-24.9s-24.4-23.9-36.4-17.2C2068.7,1136.9,2091,1176,2108,1172.5z"/>
</g>
<g id="Layer_137">
	<path class="st100" d="M2098.6,1195.4c1.3,2.2,3.4,3.8,5.1,5.7c1.3,1.4,2.2,3.1,3,4.9c0.6,1.6,0.9,3.2,1.8,4.8
		c1.6,2.6,4.4,4,7.3,4.4c2.1,0.3,4.1,0.1,6-0.8c1.8-0.9,3.2-2.7,3.5-4.8s-1-4.3-2.9-4.9c0.8,1.4,0.6,3.4-0.5,4.4
		c-1.2,1.2-3.4,1-4.1-0.3c-0.6-0.9-0.4-2.2,0-3.2s1.3-1.8,1.9-2.7c4.3-5.6,5.1-13.4,2.5-20c-2.6-6.5-8.2-11.5-14.6-14.3
		c-2.3,2.7-4.3,5.8-6.1,8.9c-1.6,2.7-3.1,5.4-3.8,8.4C2097,1189.3,2097.1,1192.7,2098.6,1195.4z"/>
</g>
<g id="Layer_136">
	<path class="st101" d="M2082.1,1183.1c-0.3,0.1-0.5,0.3-0.9,0.4c-2.7,0.9-5.4,1-8.2,0.5c-0.9,4-3.5,8.8-11.1,10.8
		c0,0,1.3,17.2,13.1,14.4c11.8-2.9,13.5-11.3,13.5-11.3S2080.2,1191.9,2082.1,1183.1z"/>
</g>
<g id="Layer_135">
	<path class="st91" d="M2086.5,1132.5c0,0-20.2-9.6-32.3,12.2c0,0-0.1,3.6-1.2,6.5c-1,2.9-6.7,11.1-5.3,15.3s9.2,17.9,14.5,19.3
		c5.3,1.3,21.5,1.8,25.2,0s7.8-3.6,10.6-8.3C2100.9,1172.6,2121.1,1139.3,2086.5,1132.5z"/>
</g>
<g id="Layer_134">
	<path class="st91" d="M2096.4,1173.2c0,0,6.9-10.9,12.2-4.1s-6.2,17.4-13.9,9.7L2096.4,1173.2z"/>
</g>
<g id="Layer_133">
	<path class="st94" d="M2105.9,1170.6c0,0-4.7-1.2-6,2.7c-0.8,2.5,0.3,5.3,2.1,4.4c1.8-1,0.1-3,0.5-4.3
		C2103.2,1172.1,2104,1171.4,2105.9,1170.6z"/>
</g>
<g id="Layer_132">
	<path class="st100" d="M2086.5,1127.3c0,0-10.8-12.2-28.7,0c-18,12.2-4.4,22.2-4.4,22.2s2.7-8.8,5.6-11.5c2.7-2.7,9.9-4.7,14.1-5.1
		c0,0-3.8,3.4-0.4,8c3.4,4.7,7.5,1.4,8.9,0.4c0,0-5.8-1.3-4.8-4.3c1-2.9,4.8-4.4,4.8-4.4s-3.6,14.1,18.9,17.5c0,0,0,7.9-3.2,13.2
		s-6.7,10.6-2.5,12.6c0,0,1.8-7,8.3-8.7C2109.7,1165.6,2123.4,1135.3,2086.5,1127.3z"/>
</g>
<g id="Layer_131">
	<path class="st100" d="M2059.9,1145.8c0,0.4,0.3,0.8,0.6,0.9c0.5,0.4,1.3,0.5,1.9,0.6c3.2,0.6,6.4,1,9.6,1.4c0.3,0,0.5,0,0.8,0
		c0.4-0.1,0.5-0.6,0.6-0.9c0.4-1,0.6-2.5-0.1-3.2c-0.4-0.4-0.9-0.5-1.4-0.6c-3.4-0.8-6.9-0.8-10.2,0.1c-0.4,0.1-0.9,0.3-1.3,0.5
		C2060.1,1144.9,2059.9,1145.2,2059.9,1145.8z"/>
</g>
<g id="Layer_130">
	<path class="st100" d="M2083,1152.2c2.5,1.6,5.2,2.2,7.9,3.1c0.9,0.3,2.1,0.5,2.6-0.1c0.4-0.4,0.4-0.4,0.1-0.9
		c-0.3-0.5-0.6-0.9-1-1.4c-1.7-1.7-3.5-3.1-5.4-4.4c-1.2-0.8-2.3-1.4-3.6-1.4s-2.7,0.9-2.7,2.3
		C2080.8,1150.6,2081.9,1151.6,2083,1152.2z"/>
</g>
<g id="Layer_129">
	<path class="st100" d="M2069.5,1157.4c-0.4,0-0.8-0.3-1-0.6c-1.2-2.1-2.6-3.4-4.3-3.8c-2.9-0.6-5.7,1.3-5.7,1.3
		c-0.5,0.4-1.3,0.3-1.7-0.3c-0.4-0.5-0.3-1.3,0.3-1.6c0.1-0.1,3.6-2.6,7.6-1.7c2.3,0.5,4.4,2.2,5.8,5.1c0.3,0.5,0.1,1.3-0.5,1.6
		C2069.9,1157.4,2069.7,1157.4,2069.5,1157.4z"/>
</g>
<g id="Layer_128">
	<path class="st100" d="M2089.8,1165.6c-0.4,0-0.8-0.3-1-0.6c-1.9-3.6-4-5.7-6.2-6.1c-2.2-0.3-3.9,1.4-3.9,1.4
		c-0.4,0.5-1.2,0.5-1.7,0c-0.5-0.4-0.5-1.2,0-1.7c0.1-0.1,2.5-2.6,6-2.2c3,0.4,5.6,2.9,7.9,7.3c0.3,0.5,0.1,1.3-0.5,1.6
		C2090.2,1165.5,2090,1165.6,2089.8,1165.6z"/>
</g>
<g id="Layer_127">
	<path class="st95" d="M2067.8,1167.7C2067.7,1167.7,2067.7,1167.7,2067.8,1167.7c-0.1,0-1.9-0.4-3-1.3c-1-0.8-1.4-1.8-1-2.9
		c0.3-0.8,1.2-1.6,2.9-1.6c1.8,0.1,3.2-1.4,3.2-1.4c0.3-0.4,0.8-0.4,1-0.1c0.4,0.3,0.4,0.8,0.1,1c-0.1,0.1-1.9,2.2-4.5,2.1
		c-0.9,0-1.3,0.3-1.3,0.5c-0.1,0.3,0.1,0.6,0.5,1c0.6,0.5,1.9,0.9,2.3,1c0.4,0.1,0.6,0.5,0.6,0.9
		C2068.6,1167.5,2068.2,1167.8,2067.8,1167.7z"/>
</g>
<g id="Layer_126">
	<path class="st23" d="M2061.1,1165.3c0,0,2.6,4.8,6.4,5.2s9.5,0,9.5,0s-4.4,6.1-10.2,5.4C2060.7,1175.2,2062,1170.9,2061.1,1165.3z
		"/>
</g>
<g id="Layer_125">
	<path class="st102" d="M2061.2,1163.8c-1,1.7-4,1.8-6.5,0.3s-3.8-4.3-2.6-6c1-1.7,4-1.8,6.5-0.3
		C2061.1,1159.5,2062.2,1162.1,2061.2,1163.8z"/>
</g>
<g id="Layer_124">
	<path class="st102" d="M2091.8,1170.8c-0.3,2.1-3,3.6-6,3.2c-3.1-0.4-5.3-2.3-5.2-4.5c0.3-2.1,3-3.6,6-3.2
		C2089.7,1166.6,2092,1168.7,2091.8,1170.8z"/>
</g>
<g id="Layer_123">
	<path class="st91" d="M2071.3,1294.3L2071.3,1294.3c-3.5-0.1-6.2-1.6-9.5-2.6c-1.3-0.4-2.5-0.8-3.6-1.3
		c-3.9,6.5-13.4,23.9,7.6,53.2h4.3C2070,1343.6,2061.2,1309.6,2071.3,1294.3z"/>
</g>
<g id="Layer_122">
	<path class="st98" d="M2052.1,1345c-1.9,0-2.9-2.2-1.6-3.6c3-3.4,8.2-7.6,14.1-5.7c5.1,1.7,7.3,4.1,8.3,6.2
		c0.8,1.4-0.4,3.1-1.9,3.1C2067.1,1345,2059.8,1345.1,2052.1,1345z"/>
</g>
<g id="Layer_121">
	<path class="st91" d="M2079.3,1294.3L2079.3,1294.3c3.5-0.1,6.2-1.6,9.5-2.6c1.3-0.4,2.5-0.8,3.6-1.3c3.9,6.5,13.4,23.9-7.6,53.2
		h-4.3C2080.6,1343.6,2089.4,1309.6,2079.3,1294.3z"/>
</g>
<g id="Layer_120">
	<path class="st98" d="M2098.5,1345c1.9,0,2.9-2.2,1.6-3.6c-3-3.4-8.2-7.6-14.1-5.7c-5.1,1.7-7.3,4.1-8.3,6.2
		c-0.8,1.4,0.4,3.1,1.9,3.1C2083.5,1345,2090.9,1345.1,2098.5,1345z"/>
</g>
<g id="Layer_119">
	<path class="st91" d="M2123.8,1261.9c0,0-14.3-43.7-18.8-54.3s-18,4.9-10.8,16.9c7.4,11.9,24.8,32.3,24.4,38.8s-1.8,14.3,2.2,12.1
		c1.8-1,1-3.6,1.4-4.1c0.4-0.6,2.7,2.2,3.2,8s5.1,1.4,3.1-4.5c0,0,0.5,6.6,1.9,6s2.2-4.8,0-8.2c0,0,1.7,6.1,3.1,5.2
		c1.4-1,0.1-6-1.6-7.5c0,0,2.1,4.3,3.1,3.6s0.6-4.3-4.7-7.3C2125.4,1263.2,2125.5,1264.4,2123.8,1261.9z"/>
</g>
<g id="Layer_118">
	<path class="st3" d="M2065.3,1193.5c0,0-5.6-1-9.3,0.3c0,0,0.8,8.9-4.1,16.5c-2.6,3.8-4.5,7.9-5.2,12.4c-1,6.7-2.3,16.2-2.3,22.7
		c0.1,11.3,0,30.2-7.4,40.3c0,0,17.6,4.8,33.2,10.8c15.6,6.1,41.1-3,50.3-12.4c0,0-18.8-23.7-19.7-39.9c-0.3-4.4-0.4-10.9-1.7-12.7
		c-4.4-6.2-5.7-9.1-5.7-9.1s-0.1-15.3,10.6-16.6c0,0-11.3-7.3-17.4-9.3c0,0-4.5,7.3-12.1,5.8
		C2067,1200.7,2065.3,1193.5,2065.3,1193.5z"/>
</g>
<g id="Layer_117">
	<path class="st3" d="M2047.4,1288.8c-0.3-1.3-0.4-2.6-0.3-4c0.8-5.4,4.1-9.7,5.1-15c1.3-8,0-15.7-1.4-23.6
		c-1.9-10.6,2.7-17.6,4.5-27.7c1.4-8.2,1.3-16.5,1.2-24.8c-0.1,0-0.3,0-0.4,0.1c0,0,0.8,8.9-4.1,16.5c-2.6,3.8-4.5,7.9-5.2,12.4
		c-1,6.7-2.3,16.2-2.3,22.7c0.1,11.3,0,30.2-7.4,40.3C2036.8,1285.6,2041.2,1286.8,2047.4,1288.8z"/>
</g>
<g id="Layer_116">
	<path class="st103" d="M2051.1,1211.1c13.7,6,15.8,10,42.1,9.9c0.3-3.6,1.7-14.4,10.6-15.4c0,0-11.3-7.3-17.4-9.3
		c0,0-4.5,7.3-12.1,5.8c-7.4-1.4-9.2-8.7-9.2-8.7s-5.6-1-9.3,0.3C2056,1193.6,2056.9,1203.4,2051.1,1211.1z"/>
</g>
<g id="Layer_115">
	<path class="st104" d="M2055.6,1213.2c0.1-2.5,0.8-4.8,1.7-7.3c1.3-3.2,4.9-8.9,3.4-12.8c-1.6,0-3.2,0.1-4.7,0.6
		c0,0,0.9,9.7-4.9,17.5C2052.8,1211.9,2054.3,1212.5,2055.6,1213.2z"/>
</g>
<g id="Layer_114">
	<path class="st103" d="M2060.9,1227.4c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2S2060.9,1225.7,2060.9,1227.4z"/>
</g>
<g id="Layer_113">
	<path class="st103" d="M2075.7,1234.6c0,1.8-1.3,3.2-2.9,3.2c-1.6,0-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2074.4,1231.3,2075.7,1232.7,2075.7,1234.6z"/>
</g>
<g id="Layer_112">
	<path class="st103" d="M2091.1,1229.8c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2089.8,1226.7,2091.1,1228.1,2091.1,1229.8z"/>
</g>
<g id="Layer_111">
	<path class="st103" d="M2086.5,1249.3c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2085.2,1246.2,2086.5,1247.7,2086.5,1249.3z"/>
</g>
<g id="Layer_110">
	<path class="st103" d="M2064.6,1250c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2063.4,1246.7,2064.6,1248.2,2064.6,1250z"/>
</g>
<g id="Layer_109">
	<path class="st103" d="M2072.9,1269.4c0,1.8-1.3,3.2-2.9,3.2c-1.6,0-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2071.6,1266.2,2072.9,1267.6,2072.9,1269.4z"/>
</g>
<g id="Layer_108">
	<path class="st103" d="M2088.3,1274.6c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2S2088.3,1272.9,2088.3,1274.6z"/>
</g>
<g id="Layer_107">
	<path class="st103" d="M2078.9,1289.4c0,1.8-1.3,3.2-2.9,3.2c-1.6,0-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2
		C2077.6,1286.2,2078.9,1287.6,2078.9,1289.4z"/>
</g>
<g id="Layer_106">
	<path class="st103" d="M2105.1,1281.7c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2S2105.1,1279.9,2105.1,1281.7z"/>
</g>
<g id="Layer_105">
	<path class="st103" d="M2056,1277.9c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2C2054.8,1274.6,2056,1276,2056,1277.9z
		"/>
</g>
<g id="Layer_104">
	<path class="st103" d="M2100.2,1263.1c0,1.8-1.3,3.2-2.9,3.2s-2.9-1.4-2.9-3.2s1.3-3.2,2.9-3.2S2100.2,1261.3,2100.2,1263.1z"/>
</g>
<g id="Layer_103">
	<path class="st91" d="M1999.1,1134.2c0,0,2.2,1.7,2.7,4.3c0.6,2.6-0.3,7,1.2,8.8c1.4,1.8,5.1,6.5,6.5,8.8c1.6,2.5,3.2-2.1,0.3-5.2
		s-2.9-5.8-2.5-5.8c0.5,0.1,4.4,3.1,4.8,4.5c0.5,1.4,1.7,8.4,2.7,9.3c0.9,0.9,2.3,0.9,1.6-3.1s-0.6-4.7-1.2-6.1s-2.1-3.5-2.6-4.3
		c0,0,2.7,3,3.2,4.9c0.4,1.9,1,8.3,1.4,8.4s3.8,1.8,0.3-10.1c0,0-0.9-2.6-2.7-4.3c0,0,2.2,2.2,3.1,4.8c1.2,3.4,1.2,7.6,1.6,7.9
		c0.4,0.1,1.8-0.1,1.6-3.1c-0.1-1.3-0.6-3.2-1.6-5.8c0,0-1.6-3.6-2.5-4.4c0,0,2.2,3.1,2.7,4.7s1.2,4.5,1.7,4.5
		c0.8-0.1,0.9-1.3,0.4-3.9c-0.3-1-0.6-2.5-1.4-3.9c-2.5-4.7-2.7-3.6-3.4-5.1s-4.4-2.3-6.5-3.1s-5.3-4.7-6.9-7.1
		C2002.1,1127.7,1995.8,1132.8,1999.1,1134.2z"/>
</g>
<g id="Layer_102">
	<path class="st100" d="M1905.6,924.6c-7.3,2.2-12.7,8.3-17.1,14.4c-9.1,12.6-16.1,27.1-17.6,42.7c-0.5,4.9-0.4,10,1.9,14.4
		c3.6,6.7,12.3,10.5,13.7,18c0.8,4.3-1.4,9.1-5.3,11.1c-2.1,1.2-4.7,1.6-6.7,0.6c-2.2-0.9-3.8-3.2-3.4-5.6
		c-4.4,4.3-5.2,11.5-1.8,16.6c2.6,3.9,7,6.1,11.4,7.5c15.9,5.2,33.4,1.9,49-4.3c7.4-3,15-7.1,17.8-14.5c2.2-6,0.8-12.6,2.5-18.7
		c1.3-4.4,4-8,6.4-11.9c6.5-10.9,9.6-24,7.6-36.4c-2.1-12.6-9.5-24.2-20.5-30.6c-13-7.5-29.3-6.9-43.3-1.8L1905.6,924.6z"/>
</g>
<g id="Layer_101">
	<path class="st105" d="M1938.8,1014c-0.8-9.7,1.7-18.8,4.7-28c5.3-16.1,6.5-32.9-13.6-37.2c-15.6-3.4-24.8,7.3-28.7,20.7
		c-3,10.5-4.7,22.4-3.8,33.3c0.6,7.5,2.5,17.8-0.3,25.2c-2.7,7.5-7.8,13.4-14.3,16.9c15.3,4.1,32,1,46.8-4.9
		c5.7-2.3,11.5-5.3,15.2-10C1942.4,1024.9,1939.3,1020.3,1938.8,1014z"/>
</g>
<g id="Layer_100">
	<path class="st91" d="M1953.3,1210.4c0,0-12.8,75.7-9.5,112.9c0,0,4.5,8.4,12.7,17.1c0,0-10.6,2.6-12.4,0s-7.9-13.7-7.9-13.7
		s2.3-4.4,2.3-5.3s-8.6-49.1-13-68.7c-1.2-5.1,2.3-15.4,3.8-20.4c0.4-1.3,0.9-2.7,1.4-4.1c4.3-10.6,3.8-22.2,3.8-22.2L1953.3,1210.4
		z"/>
</g>
<g id="Layer_99">
	<path class="st91" d="M1934.7,1212.3c0,0-38.5,107.6-41.9,121.7c0,0-4.7,19.8-10.9,16.1c-7.5-4.5,7.6-20,7.6-20s6.4-84,9.1-89.6
		c3.2-6.6,17.2-22.7,17-27.2C1915.3,1208.8,1934.7,1212.3,1934.7,1212.3z"/>
</g>
<g id="Layer_98">
	<path class="st96" d="M1885.9,1334.8c0,0-6.2,4.7-7,7.3s-2.5,13.7-0.6,14.3c1.9,0.5,8.8-4.7,9.7-6.7s3.5-8.2,3.5-12.8
		c0,0-3.8,12.2-7.1,11.5C1876.7,1347,1883.6,1336.5,1885.9,1334.8z"/>
</g>
<g id="Layer_97">
	<path class="st96" d="M1936.2,1326.5c0,0,6.6,7,8,7.9c1.9,1,4,2.2,6.2,2.5c0.9,0.1,1.7,0,2.5,0c2.2,1.8,5.6,4.4,9.1,5.7
		c4,1.6,2.2,3.1,2.2,3.1l-22.9-2.7c0,0-1.8-7.1-3.4-7.6l-1.7,7.1l-0.9-0.1c0,0,0-7-0.4-7.8
		C1934.4,1333.6,1932.7,1330.4,1936.2,1326.5z"/>
</g>
<g id="Layer_96">
	<path class="st101" d="M1931.2,996c-1.2,0.8-2.5,1.3-4,1.7c-3.2,0.8-6.2-0.1-8.8-1.7c0.1,6.1-0.8,18-10.4,17.1
		c0,0,6.4,17.2,18.8,15.6c12.4-1.7,14.5-15.6,14.5-15.6S1930.5,1012.2,1931.2,996z"/>
</g>
<g id="Layer_95">
	<path class="st91" d="M1922.2,939c0,0-21.6,1.4-21.9,10s1.7,13.4,1,18.7c-0.8,5.1-7.4,21.1,23.9,33.3c2.1,0.8,4.3,0.4,6.2-0.6
		c5.2-2.7,15.6-10.5,17.6-18.7c3.1-12.3-2.3-16.7-0.4-30.5C1950.6,937.2,1930.4,936.1,1922.2,939z"/>
</g>
<g id="Layer_94">
	<path class="st106" d="M1961.1,1179.5c2.1-12.8,8.8-49.5-9.1-78.2c-4.4-7-9.1-14.3-8.7-22.4c0.6-10.6,4.8-25,6.6-31
		c3.4-10.6,5.1-29.6,5.1-29.6s-12.6-4.8-17.4-6.5c0,0-5.4,14-10.4,14.5c-6.5,0.8-13.7-14.5-13.7-14.5s-14.9,2.6-18.8,4.9
		c0,0,7.3,31.6,10.4,44.1c1.7,6.6,1.6,13.7,0.9,19.8c-0.6,5.8-2.7,11.4-5.7,16.5c-5.4,9.1-15.2,28.4-11.9,46
		c4.4,24.2,9.6,52.9-0.6,71.4c0,0,41.2,23.1,79.5,0C1967.1,1214.5,1958.9,1193.6,1961.1,1179.5z"/>
</g>
<g id="Layer_93">
	<path class="st106" d="M1943.6,1083c-0.1-1.3-0.3-2.7-0.3-4.1c0.6-10.6,4.8-25,6.6-31c1.6-4.8,2.7-11.4,3.5-17
		c-2.5,4.1-4.7,7.8-6.1,12.8c-1,3.5-1.6,8.7-4.5,11.1c-2.7,2.2-5.1,3-7.4,2.7c-3.4,0-6.9-2.1-9.6-4.9c-1.3,1.4-2.9,2.6-4.9,3.5
		c-4.5,1.9-10.6,3.2-14.4-1.2c-5.1-5.8-5.7-13.7-8.8-20.7c2.6,9.5,5.6,20.4,7.1,26.6c1.7,6.6,1.6,13.7,0.9,19.8
		c-0.6,5.8-2.7,11.4-5.7,16.5c-5.4,9.1-15.2,28.4-11.9,46c4.4,24.2,9.6,52.9-0.6,71.4c0,0,4.3,2.3,11.3,4.8
		c14.3-20.4,4.7-46.3,2.5-69c-1-10.9-2.9-23.1-0.4-33.8c2.5-10.8,7.1-20.7,10.2-31.2c0-0.8,0.1-1.6,0.3-2.3
		c1.3-10.2,2.6-18.3,12.7-21.9c2.6-0.8,8.7-0.4,11.4,2.6s3.6,5.6,4.1,8.8C1940.7,1074.7,1942.3,1079,1943.6,1083L1943.6,1083z"/>
</g>
<g id="Layer_92">
	<path class="st107" d="M1943.3,1080.9c-5.7,2.6-11.8,4.1-18.7,4.1c-6.9,0-13.2-1.9-18.7-5.6c0,0.4,0,0.8-0.1,1.2
		c-0.3,1.9-0.6,3.9-1.2,5.8c5.7,4.1,12.4,6.2,19.6,6.2c7.6,0,14.3-1.8,20.5-4.9C1944,1085.6,1943.5,1083.3,1943.3,1080.9z"/>
</g>
<g id="Layer_91">
	<path class="st107" d="M1911.5,1082.4c-1.9-0.8-3.8-1.8-5.4-3c0,0.4,0,0.8-0.1,1.2c-0.3,1.9-0.6,3.9-1.2,5.8c1.7,1.2,3.5,2.2,5.3,3
		C1909.8,1087,1910.2,1084.3,1911.5,1082.4z"/>
</g>
<g id="Layer_90">
	<path class="st106" d="M1955,1018.3c0,0,7.4,3.5,15.8,62c0,0,27.2,40.8,36.2,51.2l-8.6,8.6c0,0-38.1-35.4-40.2-41.1
		c-1.9-5.7-3.5-10.1-4.5-14.1c-1.2-4-6.2-28.1-6.2-28.1S1945.2,1026.7,1955,1018.3z"/>
</g>
<g id="Layer_89">
	<path class="st108" d="M1959.7,1095.2c-1.6-3.4-1.4-7.3-2.7-10.6c-2.6-6.5-3.6-29.2-5.3-35.7c-1.8-7-2.6-13.6-2.2-20
		c-4.8,12.1-2.3,27.2-2.3,27.2s5.4,25.1,6.5,29.2c1.2,4,2.6,8.4,4.5,14.1s40.2,41.1,40.2,41.1l1.6-1.6
		C1997.1,1137.6,1963.8,1104.5,1959.7,1095.2z"/>
</g>
<g id="Layer_88">
	<path class="st91" d="M1811.5,1055.8c0,0-2.7-0.5-4.4-2.6c-1.7-2.1-2.9-6.5-4.9-7.4c-2.1-0.9-7.4-3.5-9.7-5.1
		c-2.5-1.6-1.9,3.2,2.1,4.7s5.2,4,4.7,4.1s-5.3-0.9-6.4-1.9s-5.2-6.7-6.5-7.3c-1.3-0.4-2.5,0.1,0,3.5s2.7,3.9,3.8,4.9
		s3.4,2.3,4.1,2.6c0,0-3.8-1.4-5.1-3s-4.7-6.9-5.1-6.9s-4.1,0,4.3,9.2c0,0,1.9,1.9,4.3,2.6c0,0-3-1-4.9-3c-2.6-2.6-4.4-6.4-4.9-6.4
		c-0.4,0-1.6,0.9,0,3.5c0.6,1.2,1.9,2.6,4,4.5c0,0,3,2.6,4.1,2.9c0,0-3.4-1.8-4.5-3c-1.2-1.2-3-3.6-3.5-3.4
		c-0.6,0.4-0.3,1.6,1.3,3.6c0.6,0.9,1.7,1.9,3,2.9c4.3,3.1,4,2.1,5.3,3c1.3,1,5.1,0.1,7.1-0.1c2.2-0.3,6.9,1.9,9.3,3.4
		C1811.6,1062.9,1815,1055.5,1811.5,1055.8z"/>
</g>
<g id="Layer_87">
	<path class="st106" d="M1804.5,1061l3.5-9.7c0,0,40.4,15,45,10s27.9-27.1,41.5-44.2c0,0,17,8.7,6.9,30.7c0,0-32,21.1-37.7,28.4
		C1857.7,1083.4,1804.5,1061,1804.5,1061z"/>
</g>
<g id="Layer_86">
	<path class="st108" d="M1899.9,1036.7c-3.2,3.2-7,6-10.9,8.7c-0.8,0.9-27.5,24.9-28.4,25.7c-8.4,7.9-42.1-7.5-55.5-11.8l-0.8,1.7
		v0.1c0,0,50.2,21.8,57.6,16.1c7.8-6.1,39.3-29.3,39.3-29.3c2.6-5.7,2.5-10.8,2.1-15.3C1902.4,1033.9,1901.3,1035.3,1899.9,1036.7z"
		/>
</g>
<g id="Layer_85">
	<path class="st109" d="M1930.5,957.5c-0.1-0.6-0.1-1.3,0.1-1.9c0.4-1,1.4-1.6,2.3-1.9c4.5-1.8,10-1,13.9,1.9
		c0.9,0.6,1.7,1.4,2.1,2.5c-2.2-1.6-5.1-1.7-7.8-1.3c-2.6,0.5-5.2,1.6-7.8,2.2c-0.8,0.3-1.7,0.4-2.3-0.1
		C1930.8,958.4,1930.6,957.9,1930.5,957.5z"/>
</g>
<g id="Layer_84">
	<path class="st109" d="M1909.2,959.2c2.5-0.1,4.9,0.1,7.4,0.4c1,0.1,2.1,0.3,3,0c1-0.3,1.9-0.9,2.2-1.9c0.3-0.9-0.3-1.9-0.9-2.6
		c-0.8-0.6-1.7-1-2.6-1.3c-3.6-1.2-8.3-0.4-11.8,0.8c-3.6,1.2-6,3.1-6.9,6.7C1902.6,960,1906,959.3,1909.2,959.2z"/>
</g>
<g id="Layer_83">
	<path class="st110" d="M1928,982.7c-1.4,0-2.9-0.3-3.8-0.8c-0.5-0.3-0.8-0.9-0.5-1.4s0.9-0.8,1.4-0.5c1.6,0.8,4.3,0.8,4.8,0.1
		c0.3-0.3-0.1-1.2-0.4-1.4c-2.5-4.1-3.8-10.9-3.9-11.1c-0.1-0.5,0.3-1.2,0.8-1.2c0.6-0.1,1.2,0.3,1.2,0.8c0,0.1,1.3,6.6,3.6,10.5
		c1.2,2.1,0.6,3.2,0.1,3.9C1930.6,982.4,1929.3,982.7,1928,982.7z"/>
</g>
<g id="Layer_82">
	<path class="st111" d="M1918.1,985.4c0,0,3.4,5.7,8.4,6.9c1.7,0.4,3.8,0.3,5.2-0.6c1.7-1,3.6-3,5.8-6.9c0,0-2.9,0.9-4.5-0.1
		c-1.9-1.2-3.4-0.6-4.1,0.8c0,0-1.4-2.2-3.5-1C1923.9,985.3,1922.3,986.6,1918.1,985.4z"/>
</g>
<g id="Layer_81">
	<path class="st112" d="M1918.8,986.6c2.3,1.7,5.8,2.2,8.6,2.1c3.5-0.1,6.6-0.5,9.5-2.5c0.1-0.3,0.4-0.5,0.5-0.8
		c-2.9,2.3-6.2,2.7-9.9,2.9c-3,0.1-6.9-0.5-9.2-2.6h-0.1C1918.1,985.4,1918.3,985.9,1918.8,986.6z"/>
</g>
<g id="Layer_80">
	<path class="st92" d="M1947.9,976.3c0,2.3-2.7,4.4-5.8,4.7c-3.2,0.3-5.8-1.3-5.8-3.6s2.7-4.4,5.8-4.7
		C1945.3,972.3,1947.9,974,1947.9,976.3z"/>
</g>
<g id="Layer_79">
	<path class="st92" d="M1916.5,980.5c-0.8,2.2-3.9,3.2-7,2.5s-5.1-3.1-4.3-5.3s3.9-3.2,7-2.5S1917.3,978.3,1916.5,980.5z"/>
</g>
<g id="Layer_78">
	<path class="st23" d="M1932.8,968.4c0,0,6.2-7.3,12.8-0.9c0,0-1.2,6.2-7.4,5.2C1933.5,972,1932.8,968.4,1932.8,968.4z"/>
</g>
<g id="Layer_77">
	<circle class="st96" cx="1939.7" cy="967.5" r="3.6"/>
</g>
<g id="Layer_76">
	<path class="st23" d="M1942,967.2c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9s0.4-0.9,0.9-0.9C1941.5,966.3,1942,966.7,1942,967.2z"/>
</g>
<g id="Layer_75">
	<path class="st113" d="M1938.5,971.4c-3.1-0.4-5.2-2.2-5.6-3.2c-0.1,0.1-0.1,0.1-0.1,0.1s0.6,3.6,5.4,4.4c6.4,0.9,7.4-5.2,7.4-5.2
		l-0.1-0.1C1945,968.9,1943.2,971.9,1938.5,971.4z"/>
</g>
<g id="Layer_74">
	<path class="st109" d="M1932.8,968.4l-0.4-1.4c0,0,2.6-4.7,7.6-3.8s5.4,1.4,6.4,1.7c1.2,0.3,2.1-0.8,2.1-0.8s0.3,4-2.7,3.5
		c0,0-1.4-1.8-6-1.8C1935.3,965.8,1932.8,968.4,1932.8,968.4z"/>
</g>
<g id="Layer_73">
	<path class="st23" d="M1920.1,970.1c0,0-6.2-7.3-12.8-0.9c0,0,1.2,6.2,7.4,5.2C1919.4,973.7,1920.1,970.1,1920.1,970.1z"/>
</g>
<g id="Layer_72">
	<circle class="st96" cx="1914.2" cy="969.3" r="3.6"/>
</g>
<g id="Layer_71">
	<path class="st23" d="M1916.5,969.1c0,0.5-0.4,0.9-0.9,0.9s-0.9-0.4-0.9-0.9s0.4-0.9,0.9-0.9
		C1916.1,968.2,1916.5,968.5,1916.5,969.1z"/>
</g>
<g id="Layer_70">
	<path class="st113" d="M1914.3,973.1c3.1-0.4,5.2-2.2,5.6-3.2c0.1,0.1,0.1,0.1,0.1,0.1s-0.6,3.6-5.4,4.4c-6.4,0.9-7.4-5.2-7.4-5.2
		l0.1-0.1C1907.8,970.6,1909.6,973.6,1914.3,973.1z"/>
</g>
<g id="Layer_69">
	<path class="st109" d="M1920.1,970.1l0.4-1.4c0,0-2.6-4.7-7.6-3.8s-5.4,1.4-6.4,1.7c-1.2,0.3-2.1-0.8-2.1-0.8s-0.3,4,2.7,3.5
		c0,0,1.4-1.8,6-1.8C1917.5,967.4,1920.1,970.1,1920.1,970.1z"/>
</g>
<g id="Layer_68">
	<path class="st100" d="M1916,932c0,0,2.6,23.5-18.9,31.6C1897.1,963.6,1882.5,934.2,1916,932z"/>
</g>
<g id="Layer_67">
	<path class="st100" d="M1950,957.1c0,0-30.9-2.1-36.6-24.9C1913.4,932.2,1956.2,923.8,1950,957.1z"/>
</g>
<g id="Layer_66">
	<path class="st96" d="M1834.8,1337c0,0-1,11.1,2.9,11.3c3.9,0.3,29.8,2.3,30.3,0c0.4-2.3-10.6-8.6-18-10.2
		c-2.9-0.6-3.8-1.7-4.8-1.8C1838.9,1335.3,1834.8,1337,1834.8,1337z"/>
</g>
<g id="Layer_65">
	<path class="st96" d="M1774.9,1340.2c0,0-13.1,7.3-13.2,12.3c0,2.7,1.3,5.4,3.8,5.7c3.1,0.4,7.3-1,9.2-3.6c3-4,7-8.8,8.9-11
		C1789.8,1336.3,1774.9,1340.2,1774.9,1340.2z"/>
</g>
<g id="Layer_64">
	<path class="st34" d="M1833.5,1106.1c-2.5,0.9-5.1,1.4-7.9,1.7c-5.3,0.4-10.8,0.1-16.1,0.1c-8.2,0-26.2-1.8-33.8-3.2
		c0,0-4.9,6.1-12.4,34.7c-2.6,9.9,5.8,55.7,3.5,92.4c-0.5,8.8-8.9,22.7,4.8,109.4l16.3-0.3c0,0-0.8-27.2,3.2-71.2
		c1.6-16.3,3.1-27.6,4.3-38.2c1.4-12.7,7.6-56.7,9.1-71.9c0-0.6,1-0.8,1.2,0c1.8,15.4,6.9,53.4,5.8,69.5c-0.5,8.3-3.9,15-1.6,33.4
		c3.4,27.2,24.1,76,24.1,76h16.5c0,0-12.8-76.1-12.4-108.5C1838.3,1175.3,1856.5,1134.2,1833.5,1106.1z"/>
</g>
<g id="Layer_63">
	<path class="st114" d="M1783.2,1151.7c9.6-3.2-1.2-14.8,2.2-21c3.6-6.9,15.2-6.4,21.6-6.6c13-0.6,22.6-3.5,32.3-8.9
		c-1.6-3.1-3.5-6.2-5.8-9.1c-2.5,0.9-5.1,1.4-7.9,1.7c-5.3,0.4-10.8,0.1-16.1,0.1c-8.2,0-26.2-1.8-33.8-3.2c0,0-4.9,6.1-12.4,34.7
		c-0.8,2.9-0.6,8.6,0,16.1C1769.9,1154.4,1776.5,1154.1,1783.2,1151.7z"/>
</g>
<g id="Layer_62">
	<path class="st114" d="M1817.5,1247.3c-0.3-19.3,0.9-38.6-1-57.8c-1.2-12.6-4.7-23.6-5.6-36c-2.2,1-7.8,0.9-10.4,0.1
		c-5.8,25.7-8.4,51.9-10.5,77.9c0.9,8,1.8,15.9,2.6,23.9c1-9.2,2.1-16.7,2.9-23.9c1.4-12.7,7.6-56.7,9.1-71.9c0-0.6,1-0.8,1.2,0
		c1.8,15.4,6.9,53.4,5.8,69.5c-0.5,8.3-3.9,15-1.6,33.4c3.4,27.2,24.1,76,24.1,76h5.6C1828.9,1308.8,1817.7,1278.6,1817.5,1247.3z"
		/>
</g>
<g id="Layer_61">
	<path class="st114" d="M1775.5,1230.8c5.4-25-0.4-49.9,2.6-75.1c1.9-15.7,6.9-34.1,3.6-50.3c-2.3-0.3-4.4-0.6-6.1-0.9
		c0,0-4.9,6.1-12.4,34.7c-2.6,9.9,5.8,55.7,3.5,92.4c-0.5,8.8-8.9,22.7,4.8,109.4l5.4-0.1
		C1769.9,1304.6,1767.4,1267.2,1775.5,1230.8z"/>
</g>
<g id="Layer_60">
	<path class="st99" d="M1778.2,981.2c0,0-32.2,10.2-39.4,20.2c0,0,39.9,68.4,37.1,103.1c0,0,26.4,21.8,58.6,4.3
		c0,0,30.6-51.5-1-117.3c0,0-14.9-6.4-18.3-8.6c0,0-5.6,3.9-13.5,5.6C1794.9,989.9,1786.9,990.3,1778.2,981.2z"/>
</g>
<g id="Layer_58">
	<path class="st98" d="M1813.6,1113.2c-11.1-1.2-22.9-5.3-26.4-17.2c-1.7-6-3-12.8-1.4-18.9c-0.8-1.9-1.7-3.9-2.6-5.7
		c-2.9-5.6-6-11-8.6-16.7c-5.8-13.2-9.1-24.9-21.9-32.9c-1.6-0.9-3-1.8-4.5-2.9c11.7,22.7,29.6,62,27.6,85.6c0,0,26.4,21.8,58.6,4.3
		c0,0,0.3-0.4,0.5-1C1828.6,1111.8,1820.7,1114,1813.6,1113.2z"/>
</g>
<g id="Layer_57">
	<path class="st99" d="M1750.8,992.5c0,0-38.8,22.7-55.4,77.4c-0.5,1.7-1.6,7.3-1.6,10.9c0.1,5.6,4.1,15.9,22.9,6.5
		c1.7-0.8,3.6-0.6,4.7-2.1c4.3-6.2,17.5-24.4,32.5-31.6C1754.1,1053.6,1765.3,1015.6,1750.8,992.5z"/>
</g>
<g id="Layer_56">
	<path class="st99" d="M1750.8,992.5c0,0-38.8,22.7-55.4,77.4c-0.5,1.7-1.6,7.3-1.6,10.9c0.1,5.6,4.1,15.9,22.9,6.5
		c1.7-0.8,3.6-0.6,4.7-2.1c4.3-6.2,17.5-24.4,32.5-31.6C1754.1,1053.6,1765.3,1015.6,1750.8,992.5z"/>
</g>
<g id="Layer_55">
	<path class="st98" d="M1744.9,996.7c-3.6,2.9-8.7,7-14.4,12.8C1735.4,1005.5,1740.7,1001.5,1744.9,996.7z"/>
</g>
<g id="Layer_53">
	<path class="st98" d="M1750.8,992.5c0,0-38.8,22.7-55.4,77.4c-0.5,1.7-1.6,7.3-1.6,10.9c0,3.5,1.7,8.8,7.5,10
		c3.1-1.8,6.4-3.4,10-4.3c0.4-0.1,0.8-0.3,1.3-0.3c-0.5-0.5-0.9-1.4-1.2-2.5c-4.9-36,17.2-63.4,42.3-85.7
		C1753,996.3,1752,994.3,1750.8,992.5z"/>
</g>
<g id="Layer_52">
	<path class="st98" d="M1801.4,996.8c0,0,22.8,62.6,10,111.1c0,0,8.9-21,5.1-55.7C1814.6,1036.2,1812.1,1017.8,1801.4,996.8z"/>
</g>
<g id="Layer_51">
	<path class="st98" d="M1800.6,1009.2c0.4,1.2,0,2.3-0.8,2.6s-1.7-0.6-1.9-1.8c-0.4-1.2,0-2.3,0.8-2.6
		C1799.3,1007.2,1800.2,1008,1800.6,1009.2z"/>
</g>
<g id="Layer_50">
	<path class="st98" d="M1805.7,1033.7c0.4,1.2,0,2.3-0.8,2.6s-1.7-0.6-1.9-1.8c-0.4-1.2,0-2.3,0.8-2.6S1805.4,1032.6,1805.7,1033.7z
		"/>
</g>
<g id="Layer_49">
	<path class="st98" d="M1809.4,1055c0.1,1.2-0.4,2.3-1.2,2.5c-0.8,0.1-1.6-0.8-1.7-2.1c-0.1-1.2,0.4-2.3,1.2-2.5
		C1808.4,1052.9,1809.2,1053.8,1809.4,1055z"/>
</g>
<g id="Layer_48">
	<path class="st98" d="M1810.9,1075.6c0.1,1.2-0.4,2.3-1.2,2.5s-1.6-0.8-1.7-2.1c-0.1-1.2,0.4-2.3,1.2-2.5
		C1809.9,1073.5,1810.7,1074.5,1810.9,1075.6z"/>
</g>
<g id="Layer_47">
	<path class="st98" d="M1809.8,1098.4c0,1.3-0.8,2.2-1.6,2.2s-1.4-1-1.4-2.3s0.8-2.2,1.6-2.2S1809.9,1097.3,1809.8,1098.4z"/>
</g>
<g id="Layer_46">
	<path class="st98" d="M1804.1,990.5l-12.4,13c0.3-0.5-20.7-18.5-20.7-18.5l7.3-7.6l23.5,11.4L1804.1,990.5z"/>
</g>
<g id="Layer_45">
	<polygon class="st98" points="1813.2,1001.2 1801.1,991.6 1814.4,980.2 1824.1,987.7 	"/>
</g>
<g id="Layer_44">
	<path class="st98" d="M1801.4,988.5l-9.6,11.8c0.3-0.5-19.6-17.1-19.6-17.1l6-9.1L1801.4,988.5z"/>
</g>
<g id="Layer_43">
	<polygon class="st98" points="1813.6,998.2 1801.4,988.5 1814.6,977.1 1823.4,987.5 	"/>
</g>
<g id="Layer_42">
	<path class="st115" d="M1753,1120c0,0-10.2,7-4.8,10.4s21.6,10.8,19.2,5.8s-4.9-9.9-5.1-10.8C1762.2,1124.4,1753,1120,1753,1120z"
		/>
</g>
<g id="Layer_41">
	<path class="st116" d="M1750.2,1119.4c4,3.8,9.1,6.2,14.5,6.5c24.6-16.6,22.7-23.6,23.1-30.2s-36.3-25.9-36.3-25.9
		c-2.9,1.4-20.2,0.4-20.2,0.4c8.8,11.7,23.7,23.3,28,27.9C1762.2,1101.6,1754.3,1113.9,1750.2,1119.4z"/>
</g>
<g id="Layer_39">
	<path class="st90" d="M1744.7,987.9c0,0,3.1,13.5-1.7,19.2c0,0,5.1,4.9,14.5,0.6c9.3-4.1,10.2-4.4,10.2-4.4s-7.8-7.6-7.3-19.8
		C1760.4,983.4,1755.9,989.7,1744.7,987.9z"/>
</g>
<g id="Layer_38">
	<path class="st117" d="M1760.8,1126.8c0,0-6.9,7.6,0.3,11.5c7.3,3.9,26.4,8,22.8,1.9s-8.8-5.3-9.5-11.8
		C1774.4,1127.2,1760.8,1126.8,1760.8,1126.8z"/>
</g>
<g id="Layer_37">
	<path class="st116" d="M1743.7,1057c0,0-26.4,25.1-0.8,29.7c25.7,4.5,31.8,5.2,31.8,5.2s-8.6,1.8-16.3,37.9c0,0,11.8,3,17.6,2.7
		c0,0,27.6-31.6,23.3-50c-4.4-18.7-23.1-17.6-30.2-20.2C1762,1059.4,1743.7,1057,1743.7,1057z"/>
</g>
<g id="Layer_36" class="st118">
	<path class="st119" d="M1758.3,1129.7c0,0,3,1.3,7.3,1.6c-4.3-9.7,3-23.7,10.1-31.8c2.7-3,17-14.4,6.2-18.8c-5.2-2.2-10-4.7-15-7
		c-7.6-3.5-14.4-6.2-19.7-13c-0.9-1.2-1.4-2.3-1.8-3.5c-1-0.1-1.7-0.3-1.7-0.3s-26.4,25.1-0.8,29.7c25.7,4.4,31.8,5.2,31.8,5.2
		S1766,1093.6,1758.3,1129.7z"/>
</g>
<g id="Layer_35">
	<path class="st3" d="M1767.7,1000.3c0,0-1.3-0.4-3.4-0.9c-2.6,2.1-5.6,3.4-9.3,3.5c-2.9,0.1-5.6-0.1-8.2-1.4
		c-0.5-0.3-0.9-0.5-1.4-0.9c-6.2,6.6-20.5,25.5-13,56c0,0,0.3,5.8-1,13.7c0,0,15,2.1,30.9-2.7c15.6-4.7,20.2-2.2,20.2-2.2
		S1791,1013.3,1767.7,1000.3z"/>
</g>
<g id="Layer_34">
	<path class="st3" d="M1782.7,1063.6c-9.5-4.5-23.5-6.6-26.4-20.1s15.3-29.7-5.8-41c-1.2-0.3-2.3-0.5-3.5-1
		c-0.5-0.3-0.9-0.5-1.4-0.9c-6.2,6.6-20.5,25.5-13,56c0,0,0.3,5.8-1,13.7c0,0,15,2.1,30.9-2.7c15.6-4.7,20.2-2.2,20.2-2.2
		S1782.6,1064.6,1782.7,1063.6L1782.7,1063.6z"/>
</g>
<g id="Layer_33">
	<path class="st91" d="M1825.5,1035.2c0,0,2.7-2.1-3.6-4.9c-6.4-3-13.7,8.3-13.7,8.3c-0.5,0.6-0.9,1.3-1.3,1.9l0,0
		c-0.3,0.5-1.3,1.8-1.9,2.1c-1.4,0.5-16.6-1.4-24.4-9.5c-7.8-8-4-20.9-14.9-25c0,0-16.7-1.3-12.7,14.4c4,15.7,9.1,19.1,15,23.9
		c6,4.8,38.4,3.5,38.8,2.9c0,0,2.2-0.3,4-2.3c5.1-5.4,4.8-0.6,7.1-0.4c2.5,0.3,3.4-2.6,3.4-2.6c3.6-1,3.4-3.9,3.4-3.9
		C1828.1,1037.9,1825.5,1035.2,1825.5,1035.2z"/>
</g>
<g id="Layer_32">
	<path class="st120" d="M1818.2,1033.5c0,0,3.2-2.6,7.1,1.7C1825.5,1035.2,1822.1,1032.5,1818.2,1033.5z"/>
</g>
<g id="Layer_31">
	<path class="st120" d="M1818.1,1037.8c0,0,2.3-2.2,6.5,2.1C1824.6,1039.8,1821,1036.9,1818.1,1037.8z"/>
</g>
<g id="Layer_30">
	<path class="st120" d="M1814.7,1041.8c0,0,2.3-2.2,6.5,2.1C1821.2,1043.9,1817.6,1040.9,1814.7,1041.8z"/>
</g>
<g id="Layer_29">
	<path class="st93" d="M1718.3,940.8c0,0-11.3,3.9-10-0.8C1709.6,935.5,1718.3,940.8,1718.3,940.8z"/>
</g>
<g id="Layer_28">
	<path class="st93" d="M1718.8,940.5c0,0-5.2-11.3-9.5-8.2C1705.1,935.2,1713,939,1718.8,940.5z"/>
</g>
<g id="Layer_27">
	<path class="st91" d="M1733.6,930.4c0,0,21.5-14.8,39.3,9.2c0,0,0.6,11.4,2.3,14.6c1.7,3.2,5.2,8.6,5.6,15.2
		c0.4,7.6-10.5,21.8-13.7,23.9c-5.4,3.4-20.9,2.2-25.4,0.6c-4.5-1.6-9.5-3.1-13.6-8.2C1723.9,980.7,1695,944.2,1733.6,930.4z"/>
</g>
<g id="Layer_26">
	<path class="st91" d="M1726.6,974.1c0,0-8.2-13.2-14.8-5.1c-6.5,8.2,7.3,21,16.7,11.8L1726.6,974.1z"/>
</g>
<g id="Layer_25">
	<path class="st94" d="M1713.2,972.2c0,0,5.7-1.3,7.3,3.4c1,3-0.4,6.5-2.6,5.3s-0.1-3.6-0.6-5.1
		C1716.6,974,1715.7,973.2,1713.2,972.2z"/>
</g>
<g id="Layer_24">
	<path class="st93" d="M1757.1,929.8c0,0-0.4,15.7-27.2,23.7c0,0-4,10.4,1.6,21c0,0-1.3,4.8-5.2,7.1c0,0-21.6-20.4-11.8-38.6
		C1724.3,924.7,1747.5,921.7,1757.1,929.8z"/>
</g>
<g id="Layer_23">
	<path class="st93" d="M1719.3,948.1c0,0,16.6,18.1,50.2-9.5c0,0,2.6,0,3.9,7.3c0,0,11.8-21.6-28.4-24.1
		C1704.8,919.1,1719.3,948.1,1719.3,948.1z"/>
</g>
<g id="Layer_22">
	<path class="st95" d="M1759,977.6L1759,977.6c-1.4-0.4-2.3-0.8-3.2-1.2c-0.3-0.1-0.6-0.4-0.6-0.8v-0.4l0.3-0.4
		c0.3-0.3,0.6-0.3,0.9,0.1c0.1,0.1,1.9,1.2,3,1.4c0.6,0.1,1.7-0.1,2.6-0.8c0.4-0.3,0.6-0.6,0.5-1c-0.1-0.3-0.4-0.5-0.6-0.6
		c-1.9-1.6-3.2-3.6-3.8-6c-0.1-0.4,0.1-0.6,0.5-0.8c0.4,0,0.6,0.1,0.8,0.5c0.4,1.9,1.6,3.9,3.1,5.1c0.5,0.4,1,0.8,1.3,1.4
		c0.3,0.9-0.4,1.9-1.2,2.3C1761.5,977.2,1760.3,977.9,1759,977.6z"/>
</g>
<g id="Layer_21">
	<path class="st23" d="M1754.3,967.6c0,0-9.2-6.4-14,3c0,0,3.1,4.9,8.7,2.6C1753.9,971.4,1754.3,967.6,1754.3,967.6z"/>
</g>
<g id="Layer_20">
	<path class="st121" d="M1745.9,973.7c0,0-3.5,0-5.4-3.2l-1.4-0.1C1738.9,970.4,1740.8,973.2,1745.9,973.7z"/>
</g>
<g id="Layer_19">
	<path class="st96" d="M1751.2,967.6c0.4,2.6-1.3,4.9-3.8,5.3s-4.7-1.4-5.1-4s1.3-4.9,3.8-5.3S1751,965,1751.2,967.6z"/>
</g>
<g id="Layer_18">
	<path class="st23" d="M1749.1,967.9c0.1-0.8-0.5-1.6-1.3-1.6c-0.8-0.1-1.4,0.5-1.6,1.3s0.5,1.6,1.3,1.6
		C1748.4,969.3,1749,968.8,1749.1,967.9z"/>
</g>
<g id="Layer_17">
	<path class="st121" d="M1754.3,967.5c0,0-2.6-5.1-8.9-4c-6.4,1-6.5,7-6.5,7l1.4,0.1c0,0,2.3-4.9,6.5-5.1
		C1751.1,965.4,1754.3,967.5,1754.3,967.5z"/>
</g>
<g id="Layer_16">
	<path class="st23" d="M1760.9,966.1c0,0,4.5-9.2,12.4-4.1c0,0-0.3,5.2-5.8,6.1C1763,968.8,1760.9,966.1,1760.9,966.1z"/>
</g>
<g id="Layer_15">
	<path class="st121" d="M1770.5,967c0,0,2.7-1.6,3-5.1l1.2-0.8C1774.6,961,1774.3,964.1,1770.5,967z"/>
</g>
<g id="Layer_14">
	<path class="st96" d="M1772,962.3c0.4,2.3-1.2,4.4-3.5,4.8c-2.2,0.3-4.3-1.3-4.7-3.6s1.2-4.4,3.5-4.8
		C1769.5,958.3,1771.6,960,1772,962.3z"/>
</g>
<g id="Layer_13">
	<path class="st23" d="M1770.3,962.4c0-0.8-0.5-1.4-1.2-1.4c-0.6-0.1-1.3,0.5-1.4,1.2c0,0.8,0.5,1.4,1.2,1.4
		C1769.6,963.7,1770.3,963.2,1770.3,962.4z"/>
</g>
<g id="Layer_12">
	<path class="st121" d="M1760.9,965.9c0,0-0.1-5.2,5.4-7.3c5.6-2.2,8.3,2.5,8.3,2.5l-1.2,0.8c0,0-3.6-3.6-8-1
		C1762.1,962.7,1760.9,965.9,1760.9,965.9z"/>
</g>
<g id="Layer_11">
	<path class="st102" d="M1745.9,978.9c-0.4,1.8-3.2,2.7-6.2,1.9c-3-0.6-5.2-2.7-4.7-4.5c0.4-1.8,3.2-2.7,6.2-1.9
		C1744.2,975,1746.4,977.1,1745.9,978.9z"/>
</g>
<g id="Layer_10">
	<path class="st102" d="M1778.4,968.9c0.9,1.4-0.1,3.8-2.3,5.2c-2.2,1.4-4.8,1.4-5.7,0s0.1-3.8,2.3-5.2
		C1774.9,967.5,1777.4,967.5,1778.4,968.9z"/>
</g>
<g id="Layer_9">
	<path class="st23" d="M1765.6,977.7c0,0-6.9,7.1-14.8,1.8c0,0,1.2,7,8.4,7C1765.1,986.6,1762.4,981.2,1765.6,977.7z"/>
</g>
<g id="Layer_8">
	<path class="st93" d="M1738,957.3c-0.5,0.4-1,0.8-1.3,1.3s-0.4,1.3-0.1,1.8c0.5,1,1.9,1,3,0.8c0.8-0.1,1.4-0.5,2.2-0.9
		c0.9-0.5,1.8-1.2,2.9-1.6c1.2-0.4,2.5,0,3.8,0c0.6,0,1.3,0,1.9-0.1c0.6-0.3,1.2-0.8,1.3-1.3c0.3-1-0.8-1.9-1.8-2.3
		c-0.6-0.3-1.3-0.4-1.9-0.4C1744.2,954.3,1740.7,955.3,1738,957.3z"/>
</g>
<g id="Layer_7">
	<path class="st93" d="M1771.3,950.9c-1.9-1-4.3-1.4-6.5-1s-4.1,1.8-5.3,3.8c-0.3,0.4-0.4,0.8-0.3,1.2c0.1,0.1,0.3,0.4,0.4,0.4
		c0.9,0.5,1.9,0.3,3-0.1c0.9-0.5,1.7-1.2,2.7-1.4c2.1-0.6,4.3,0.5,6.4,0c0.6-0.1,1.3-0.5,1.3-1.2c0.1-0.6-0.6-1.2-1.3-1.6
		C1771.2,950.9,1772,951.3,1771.3,950.9z"/>
</g>
<g id="Layer_6">
	<path class="st91" d="M1804.6,1097.4c0,0-0.3,0.1-0.8,0.4c0.5-0.4,0.9-0.9,1-1.4c0.1-1.4-1-1.4-3-1.2c0.6-0.4,1.2-0.9,1.2-1.6
		c0.1-3.1-2.9-1.8-7.5-0.6s-8.7,0.1-10.2-0.1c0,0,5.2-1.8,4.7-4.8s-2.6-4.4-4.1-3.8s-0.3,2.7-0.8,3.5s-3.9,1.3-5.8,4.9
		c0,0-36.4-11.8-48.6-12.7c-4.7-0.3-6.7-1-7.6-2.2c-3.6,3.6-7.9,6.5-12.2,9.7c-2.5,1.9-4.4,4.1-6.7,5.8c12.2,3.8,64.9,4.9,72.5,6.9
		c7.5,1.9,11,5.8,18,6.1c6.2,0.3,7.4-3,7.4-4c1.4-0.3,2.7-0.6,3.5-1.4C1808.1,1098.4,1804.6,1097.4,1804.6,1097.4z M1793.1,1102.7
		c0,0,2.5,0.3,5.3,0.1C1796.6,1103,1794.5,1103.1,1793.1,1102.7z M1794.4,1100.1c0,0,3-0.3,5.8-0.9
		C1798.1,1099.9,1795.9,1100.4,1794.4,1100.1z"/>
</g>
<g id="Layer_5">
	<path class="st98" d="M1698.7,1085.2c-1.2,0.4-3,2.1-2.9,3.2c0.4,2.2,2.6,4.9,5.7,7c4.9,3.1,25.4-12.7,24.6-15.4
		c0,0,2.3-4.8-1.6-3.4C1721.3,1077.8,1708.8,1082,1698.7,1085.2z"/>
</g>
</svg>

'''
'''--- src/frontend/public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *

'''
'''--- src/frontend/public/telegram.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 214 214"><defs><style>.cls-1{fill:#fff;}</style></defs><path class="cls-1" d="M144.348,77.618l-61.872,39.5,8.738,28.809,1.944-18.243S126.89,97.252,146.132,79.91a1.449,1.449,0,0,0,.169-1.962A1.471,1.471,0,0,0,144.348,77.618Z" transform="translate(-4 -2.905)"/><path class="cls-1" d="M111,2.905a107,107,0,1,0,107,107A107,107,0,0,0,111,2.905Zm57.869,61.409c-4.11,19.314-15.078,73.081-19.6,94.321a6.048,6.048,0,0,1-3.763,4.378,6.208,6.208,0,0,1-5.76-.758c-10.539-7.508-29.122-21.124-29.122-21.124s-9.772,9.229-16.094,15.194A4.5,4.5,0,0,1,90.3,157.4a4.559,4.559,0,0,1-3.138-3c-3.932-11.591-11.485-34.4-11.485-34.4s-16.157-5.127-28.471-8.81a4.279,4.279,0,0,1-.267-8.132C74.4,92.91,141.566,67.711,163.376,59.633a4.194,4.194,0,0,1,4.147.731A4.073,4.073,0,0,1,168.869,64.314Z" transform="translate(-4 -2.905)"/></svg>
'''
'''--- src/frontend/public/twitter.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 217.489 179.01"><defs><style>.cls-1{fill:#fff;}</style></defs><path class="cls-1" d="M217.107,40.457a89.774,89.774,0,0,1-22,6.271c3.538-.595,8.731-7,10.815-9.588a40.32,40.32,0,0,0,7.3-13.312c.189-.38.33-.857-.049-1.145a1.253,1.253,0,0,0-1.166.1,112.212,112.212,0,0,1-26.078,9.977,1.744,1.744,0,0,1-1.8-.476,21.29,21.29,0,0,0-2.279-2.33,46.116,46.116,0,0,0-12.634-7.74,43.966,43.966,0,0,0-19.373-3.121,46.33,46.33,0,0,0-18.382,5.192A47.373,47.373,0,0,0,116.64,36.4a45.537,45.537,0,0,0-8.855,17.737,48.027,48.027,0,0,0-.469,18.726c.14,1.046.048,1.188-.9,1.046C70.6,68.574,40.91,55.758,16.808,28.294c-1.046-1.192-1.613-1.192-2.471.092C3.791,44.194,8.908,69.591,22.082,82.073c1.757,1.664,3.563,3.328,5.508,4.846-.71.146-9.478-.8-17.291-4.846-1.046-.661-1.571-.282-1.664.905a27.278,27.278,0,0,0,.284,5.133c2.024,16.024,13.121,30.846,28.318,36.629a26.755,26.755,0,0,0,5.746,1.756c-3.462.76-7.029,1.3-16.959.526-1.236-.238-1.708.38-1.236,1.567,7.462,20.339,23.57,26.39,35.632,29.838,1.615.282,3.231.282,4.851.661-.1.146-.2.146-.288.287-4,6.1-17.873,10.64-24.333,12.9A87.152,87.152,0,0,1,3.692,177c-1.987-.292-2.4-.27-2.943,0-.545.337-.069.812.569,1.327,2.52,1.664,5.084,3.139,7.7,4.564a121.979,121.979,0,0,0,24.705,9.882c44.4,12.261,94.407,3.252,127.743-29.869,26.178-26.01,35.354-61.879,35.354-97.793,0-1.407,1.661-2.183,2.647-2.925a86.353,86.353,0,0,0,17.385-18.079A5.492,5.492,0,0,0,218,40.645v-.188C218,39.883,217.99,40.055,217.107,40.457Z" transform="translate(-0.511 -19)"/></svg>
'''
'''--- src/frontend/src/custom-sw.js ---
window.addEventListener('message', (event) => {
  if (event.data === 'skipWaiting') {
    console.info('skipWaiting')
    window.skipWaiting()
    window.location.reload()
  }
})

'''
'''--- src/frontend/src/helpers/dayjs.ts ---
import dayjs from 'dayjs'

export const DayJs = dayjs

'''
'''--- src/frontend/src/helpers/domlistener.js ---
  var last = +new Date()
  var delay = 100 // default delay

  // Manage event queue
  var stack = []

  function callback() {
    var now = +new Date()
    if (now - last > delay) {
      for (var i = 0; i < stack.length; i++) {
        stack[i]()
      }
      last = now
    }
  }

  // Public interface
  var onDomChange = function (fn, newdelay) {
    if (newdelay) delay = newdelay
    stack.push(fn)
  }

  // Naive approach for compatibility
  function naive() {
    var last = document.getElementsByTagName('*')
    var lastlen = last.length
    var timer = setTimeout(function check() {
      // get current state of the document
      var current = document.getElementsByTagName('*')
      var len = current.length

      // if the length is different
      // it's fairly obvious
      if (len != lastlen) {
        // just make sure the loop finishes early
        last = []
      }

      // go check every element in order
      for (var i = 0; i < len; i++) {
        if (current[i] !== last[i]) {
          callback()
          last = current
          lastlen = len
          break
        }
      }

      // over, and over, and over again
      setTimeout(check, delay)
    }, delay)
  }

  //
  //  Check for mutation events support
  //

  var support = {}

  var el = document.documentElement
  var remain = 3

  // callback for the tests
  function decide() {
    if (support.DOMNodeInserted) {
      window.addEventListener(
        'DOMContentLoaded',
        function () {
          if (support.DOMSubtreeModified) {
            // for FF 3+, Chrome
            el.addEventListener('DOMSubtreeModified', callback, false)
          } else {
            // for FF 2, Safari, Opera 9.6+
            el.addEventListener('DOMNodeInserted', callback, false)
            el.addEventListener('DOMNodeRemoved', callback, false)
          }
        },
        false,
      )
    } else if (document.onpropertychange) {
      // for IE 5.5+
      document.onpropertychange = callback
    } else {
      // fallback
      naive()
    }
  }

  // checks a particular event
  function test(event) {
    el.addEventListener(
      event,
      function fn() {
        support[event] = true
        el.removeEventListener(event, fn, false)
        if (--remain === 0) decide()
      },
      false,
    )
  }

  // attach test events
  if (window.addEventListener) {
    test('DOMSubtreeModified')
    test('DOMNodeInserted')
    test('DOMNodeRemoved')
  } else {
    decide()
  }

  // do the dummy test
  var dummy = document.createElement('div')
  el.appendChild(dummy)
  el.removeChild(dummy)

  export {onDomChange}
'''
'''--- src/frontend/src/helpers/form.ts ---
import { validateSync, ValidationError } from 'class-validator'
import { ChangeEvent, SyntheticEvent } from 'react'

export interface FormInput {
  value: string
  error?: string
  blurred?: boolean
}

export interface FormInputs {
  [key: string]: FormInput
}

export const updateFormFromChange = (
  event: ChangeEvent<HTMLInputElement>,
  form: FormInputs,
  FormInputClass: any,
): FormInputs => {
  event.persist()

  let value = event.target.value;

  if (event.target.name === 'referral') {
    const indexQuestionMark = value.indexOf('?');
    if (indexQuestionMark) {
      const urlParams = new URLSearchParams(value.slice(indexQuestionMark));
      const myParam = urlParams.get('referral');
      if (myParam) {
        value = myParam
      }
    }
  }
  const updatedForm: FormInputs = {
    ...form,
    [event.target.name]: {
      value,
    },
  }

  let formInputs: any = new FormInputClass() as any

  for (var key in updatedForm) {
    if (updatedForm.hasOwnProperty(key)) {
      formInputs[key] = updatedForm[key].value
    }
  }

  validateSync(formInputs).forEach((error: ValidationError) => {
    const firstConstraint = error && error.constraints
    if (firstConstraint && updatedForm[error.property])
      updatedForm[error.property].error = firstConstraint[Object.keys(firstConstraint)[0]]
  })

  return updatedForm
}

export const updateFormFromBlur = (event: ChangeEvent<HTMLInputElement>, form: FormInputs) => {
  const updatedForm = {
    ...form,
    [event.target.name]: {
      ...form[event.target.name],
      blurred: true,
    },
  }
  return updatedForm
}

export const updateFormFromSubmit = (
  event: SyntheticEvent,
  form: FormInputs,
  FormInputClass: any,
): FormInputs => {
  event?.preventDefault()

  const updatedForm: FormInputs = JSON.parse(JSON.stringify(form))

  let formInputs: any = new FormInputClass() as any

  for (var key in updatedForm) {
    updatedForm[key].blurred = true
    if (updatedForm.hasOwnProperty(key)) {
      formInputs[key] = updatedForm[key].value
    }
  }

  validateSync(formInputs).forEach((error: ValidationError) => {
    const firstConstraint = error && error.constraints
    if (firstConstraint && updatedForm[error.property])
      updatedForm[error.property].error = firstConstraint[Object.keys(firstConstraint)[0]]
  })

  return updatedForm
}

export const getInputStatus = (inputObject: FormInput): 'error' | 'success' | undefined => {
  if (!inputObject.blurred) return undefined
  else return inputObject.error ? 'error' : 'success'
}

export const getErrorMessage = (inputObject: FormInput): string | undefined => {
  return inputObject.blurred ? inputObject.error : undefined
}

'''
'''--- src/frontend/src/helpers/typegoose.ts ---
function dummyFn(..._: any) {
}

function dummyDecorator(..._: any) {
  return dummyFn
}

export const Property = dummyDecorator
export const ArrayProp = dummyDecorator
export const Index = dummyDecorator
export const getModel = dummyFn
'''
'''--- src/frontend/src/helpers/usePrevious.ts ---
import { useEffect, useRef } from "react";

export const usePrevious = (value: any) => {
    const ref = useRef(value);
    useEffect(() => {
      ref.current = value;
    });
    return ref.current;
  }
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-1/course.md ---
<ChapterContainer>
<div>Chapter 1</div><div className="imgCheckedBox" />
</ChapterContainer>

<Difficulty>Difficulty: 2/5 | Estimated reading time: 5 min</Difficulty>

# Welcome to the Internet of Value

## New way to exhange value

The rise of the first blockchain application started in 2009 with Bitcoin, an independent network powering a global digital currency. Since then, blockchain technology has been used across many new applications forming a new open internet called Web3. In 2021, over 7,000 companies are building the internet infrastructure of Web3.
<Spacer />

The boom of blockchain and Web3 projects has fueled tremendous demand for web developers, software engineers, testers, UX and web designers, project and community managers. Opportunities are everywhere.

<Spacer />

<QuoteContainer>
    <img alt="story_image_1_0" src="/images/chapter/light.png">
    <div class="quote">Unlike Bitcoin, the “value” managed by blockchain networks is not necessarily “money”;
    in fact most Web3 projects provide a more human-centric definition of “value” called “utility.”</div>
</QuoteContainer>

<Spacer />
Blockchain isn’t just about financial transactions. Social and community tokens power new types of blockchain applications centered around human networks and the growth of these networks. They can be designed to create shared value for communities with their own rules around adoption, viral marketing, and ownership.

<Spacer />
Creators and influencers can launch their own **social tokens**. These tokens may or may not carry monetary value; they are simply used within the creator’s community. Fans can get, transfer, donate, transact or hold these tokens. In this emerging space, we see tokens being used to drive various forms of engagement with fans, from personal reputation to active governance of the community.

## New way to store changes

These social tokens are just one of the multiple new primitives from Web3, shifting the internet away from an attention economy to engagement and shared value one.
<Spacer />

Before Web3, the internet was a native mechanism to transfer what computer science refers to as **state – the status of who is who, who owns what, and who has the right to do what**.

<Spacer />
State is a key property for enabling human ecosystems. The ability to quickly and efficiently transfer value independently has been at the heart of exchanges between humans for centuries. When Alice gives 1 shell to Bob, their states change.

<Spacer />
Without a native mechanism to save states on the internet, exchanges could be recorded only through institutions acting as clearing entities that require our unconditional trust.

<Spacer />

**Blockchain technology has introduced a decentralized method to store changes to the state of the network in an irrefutable way**, without the need for intermediaries. Each participant in these networks is able to keep track, hold and transfer value independently. The network stores the history of all preceding events or user interactions, its successive states.

## New way to control your data

While cloud services enable businesses to focus more on their business logic and care less about infrastructure, it did not solve another fundamental problem of web2: siloed data controlled by platforms. It is not in platforms’ interest to give unrestricted access to their network to anyone; rather they focus on increasing adoption and loyalty, even if that means creating a dependency for users. User identity, created value, and history are only available in the platforms’ walled-gardens.

<Spacer />
<QuoteContainer>
    <img alt="story_image_1_0" src="/images/chapter/light.png">
    <div class="quote">In Web3, middlemen are removed from the equation. Users are no longer tied to a specific platform, but can change platforms while maintaining their identity and history. Web developers can compose new applications by using existing code or creating their own. There is no gatekeeper to prevent someone from creating a new application on top of another.</div>
</QuoteContainer>

<Spacer />
In contrast, Web3 networking protocols treat Identity and Monetary Assets as native primitives that can be transferred over the network.

<Spacer />
There are many advantages that a typical centralized architecture cannot provide:

<Spacer />

**Trust** <br/>
Value transfers are operated in a peer-to-peer fashion, without trusted third-parties. That way, users are not dependent on a central entity or platform.
<Spacer />

**Censorship resistance** <br/>
Because a central entity does not operate the network, it cannot be shut down by one particular entity. Reaching a Consensus is required to change the state of the network.

<Spacer />

**Availability** <br/>
A decentralized system is more robust as there is no central point of failure.

<Spacer />

**Transparency** <br/>
All interactions and states are stored immutably on the blockchain and publicly available for anyone to review.

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>

Here is your easy win to get started: integrate the payment gateway in line 18 of the app code in the exercise code box.

<Spacer />

adding a payment gateway with NEAR is seamless:

<Highlight class="language-javascript" style="background-color: rgb(0, 0, 0);">
    await sender.sendMoney(receiver, amount);
</Highlight>

</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-1/exercise.md ---
// Integrate the payment gateway in line 18 to start accepting payments in NEAR.
// Make sure you do not add extra spaces for code validation purposes.
const nearAPI = require("near-api-js");
const { connect, utils } = nearAPI;
const { config } = require('./config'); // loads config settings

// configure accounts, network, and amount of NEAR to send
const sender = "sender.testnet";
const receiver = "receiver.testnet";
const networkId = "testnet";
const amount = utils.format.parseNearAmount("1.5");

async function main() {
  const near = await connect(config);
  const sender = await near.account(sender);

  // TODO send those tokens here
  const result =
  console.log("Transaction Results: ", result.transaction);
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-1/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import exercise from '!raw-loader!./exercise.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import solution from '!raw-loader!./solution.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import { Data } from 'pages/Chapter/Chapter.controller'

export const data: Data = { course, splash, exercise, solution, supports: { }, questions: [] }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-1/solution.md ---
// Integrate the payment gateway in line 20 to start accepting payments in NEAR.
// Make sure you do not add extra spaces for code validation purposes.
const nearAPI = require("near-api-js");
const { connect, utils } = nearAPI;
const { config } = require('./config'); // loads config settings

// configure accounts, network, and amount of NEAR to send
const sender = "sender.testnet";
const receiver = "receiver.testnet";
const networkId = "testnet";
const amount = utils.format.parseNearAmount("1.5");

async function main() {
  const near = await connect(config);
  const sender = await near.account(sender);

  // TODO send those tokens here
  const result = await sender.sendMoney(receiver, amount);
  console.log("Transaction Results: ", result.transaction);
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-1/splash.md ---
# It’s year 2029

The new internet is running on top of public interoperable blockchains. It seems crazy to think how the perception towards these technologies has drastically changed. The Internet of Value is more tangible than ever. Knowing how blockchain works is not considered a competitive advantage nowadays. It is a must-have.

<Spacer />
This chain of thoughts makes you remember when you originally discovered you could add a payment gateway with a 1-liner of code to your app via the NEAR blockchain. This was such a game-changer back then...
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-2/course.md ---
<ChapterContainer>
<div>Chapter 2</div><div className="imgCheckedBox" />
</ChapterContainer>

<Difficulty>Difficulty: 2/5 | Estimated reading time: 5 min</Difficulty>

# Key Concepts of Web3
<Spacer />
We'll start by looking at the main components of Web3, it's a helpful reference to have when you write code.
<Spacer />

- Distributed ledger. The distributed ledger, or blockchain, is the backbone of the network. This is where states are publicly stored.
- Validator nodes. Validator nodes are servers that provide computation services and security to the network. In permissionless networks, **anyone is free to run a Validator node**, following a set of requirements that are specific to this network.

## Execution capabilities

Custom code is directly deployed to the blockchain and can be called by users. Validator nodes take care of the execution, and any interactions with the code are then saved on the blockchain.

Permissionless protocols allow anyone to use the network as they want: run a validator node, create an account and interact with the network. Users of these networks cannot be barred on account of geography, income, gender, orientation, or a host of other sociological and demographic factors. Value and digital assets can be transferred cross-border, quickly and efficiently, anywhere in the world. **The power of permissionless access cannot be overstated.**

Permissionless blockchains like NEAR use rules that are programmatically open and fair rather than subjectively imposed by a single entity. Everything is fully verifiable through the blockchain.

No central entity or government has the ability to shut down sites and services because these are operated through a network of independent participants via consensus.

## New Mental Models

A typical web application is programmed using a client–server structure. The user ("client") is provided services through an off-site server hosted by a third-party.

Applications are usually broken into logical chunks called "tiers", where every tier is assigned a role. Though many variations are possible, the most common structure is the three-tiered representation: presentation (front-end), application (back-end) and storage (database).

**Decentralized applications** (or **dApps**) follow the same structure overall. The only difference is that the back-end gets enhanced by connecting it to public Web3 infrastructure. The front-end and the storage can be integrated in dApps just like in any other Apps.

<Spacer />

In a dApp, security and access are provided by cryptography (public/private keys) rather than username and password or oAuth. This approach is also called **passwordless identification**. **Users keep their identity through dApps** rather than having a different one in each or rely on third-party identity management.

For users, access to the open web is based only on a private key, which is used to unlock all dApps and services on the blockchain.

Users access and interact with dApps with a web browser just like any other App; this makes it easy for them to switch. And dApps offer many improvements to the user experience:

<Spacer />

- Identification is done only once for access across dApps
- Ownership of personal data remains in users’ hands at all times
- Interactions are opt-in by default
- Payment and exchanges are handled just like any other action

<Spacer />

Behind the scenes, the framework connecting users with digital services is slightly different with a dApp. Consider all the possible aspects of an application that may be decentralized:

<Spacer />

- Backend software (application logic)
- Frontend software
- Data storage

## Backend (application logic)

The backend of a dApp is just the same as any other app, except that it’s **connected to the blockchain for at least some of its services**, like access control, storage of transactions and balances, or programmatic guarantee of agreements between users.

## Frontend (Web User Interface)

**The client-side interface of a dApp can use standard web technologies** (HTML, CSS, JavaScript, etc.). This allows a traditional web developer to use familiar tools, libraries, and frameworks.

Interactions with the blockchain, such as signing messages, sending transactions, and managing keys, are often conducted through the web browser via an extension such as the NEAR Wallet. It is also possible to create native mobile dApps.

## Data Storage

**Data storage can be handled the same in dApps as in other Apps**, with the extra ability to store information into the blockchain. That is handy when one wants to verifiably and permanently save actions or transactions.

Storing and distributing significant static assets on a blockchain would be inefficient as the cost would be too high. This is why images, videos, and resources of the application’s frontend web interface (HTML, CSS, JavaScript, etc.) are generally not stored on the blockchain itself.

Besides cloud databases and other centralized solutions, data can be stored on P2P platforms such as the InterPlanetary File System (IPFS); P2P storage is an excellent alternative while maintaining a trustless environment for the dApp.

## Check it for yourself with a Block Explorer!

The NEAR blockchain is public, so anyone can query it to get any data stored in it. Everyone can query the blockchain through a NEAR client, but a dedicated interface is easier to use, and is accessible by anyone regardless of whether they are running the NEAR software or not. Blockchain explorers, as these interfaces are called, can display blockchain data in a more user-friendly way and enhance the entries with off-chain data like current dollar value of a token.

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>
To find the job offer on Decentrajob. Visit the <a target="_blank" rel="noopener noreferrer" href="https://explorer.testnet.near.org/">testnet explorer</a> and search for the “decentrajob.testnet” account. Here you see an overview of all transactions that happened on that account. Look for the latest transaction set\_open\_job called by museum\_director.testnet and click on the link that looks something like "G8xp5V6...". This will display the details about the transaction, including all arguments that were used to call the function. Select the correct answer.
</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-2/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'

import { Data } from 'pages/Chapter/Chapter.controller'
import { questions } from './questions'

export const data: Data = { 
    course, 
    splash,
    exercise: undefined, 
    solution: undefined, 
    supports: {}, 
    questions 
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-2/questions.ts ---
export const questions = [
    {
        question: "Select all available jobs from decentrajob.testnet",
        selectedText: "",
        answers: [
            "Account Manager (senior)",
            "Full Stack Web3 Developer (junior)",
            "NFT token engineer (junior)",
            "Janitor (senior)",
            "meme Specialist (senior)"
        ],
        responses: ["Full Stack Web3 Developer (junior)"],
    }
]

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-2/splash.md ---
<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-2.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
      My dear friend, i’ve known you for a long time. Aren’t you bored of your job at Soga? These social gaming companies are so 2020, lol. 
    </div>
    <div class="item-text">
      <img alt="story_image_2_0" src="/images/splash/miniLogo.png">

      I heard from Marco there was a job opening at the new Meme Museum in Rio de Janeiro, what an awesome opportunity. Memes are such a fascinating form of collective expression, this is so the future of anarchivism 
    </div>
  </div>
</ContentWrapp>

<Spacer />
That looks cool! The Museum is new, and you’d like to learn more about them. Nowadays, most jobs are filled and found via a decentralized marketplace, Decentrajob, the dApp that replaced Upwork back in 2025.

<Spacer />
Let’s have a closer look…
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-3/course.md ---
# What is NEAR?

<Difficulty>Difficulty: 2/5 | Estimated reading time: 8 min</Difficulty>

<Spacer />

**NEAR is an open-source platform that accelerates the development of decentralized applications.**

What is the reason why NEAR was created?

None of the original blockchain networks nor any of those that followed have managed to bridge the gap towards mainstream adoption of the applications built on top of them nor provide the kind of scale needed **to support an entire Web**.

Early blockchain platforms' technical architecture creates substantial problems with both usability and scalability, which are crucial for mainstream adoption. Fixing these problems in existing living networks would require significant and complex changes to entire living ecosystems.

**The NEAR platform and organization have been explicitly designed to solve the usability and scalability problems.**

The organization and governance structure were designed to rapidly ship and continuously evolve the Network so it will always keep an edge.

The core platform, which is made up of the cloud of community-operated validator nodes, is the most fundamental piece of infrastructure provided. Developers can interact with this cloud and users can use the applications they power, all in a permissionless fashion. dApp ranging from consumer-facing games to digital currencies can store their code and state securely on the platform.

## Native Primitives

To clearly understand the NEAR platform, we may start to highlight these primitives:

**1. Assets.** Assets of all types (from money to data) are now digitally native, meaning they are verifiably unique, individually owned and completely programmable.
**2. Accounts.** Every actor in the ecosystem has an account that gives them secure storage for their assets, an easy way to verify their identity to applications, and an accumulation of reputation over time
**3. Transactions.** Because assets are digitally native and accounts are part of the global pool, programmable transactions between parties are simple, cheap, secure and near-instant.
**4. Verification.** Because NEAR’s storage is an immutable public ledger, data and code that are saved to the platform are publicly verifiable.

## The NEAR token

The NEAR platform uses a token — called “NEAR.” This token allows cloud resources, regardless of where they are in the world, to be fairly compensated for their services. Validator nodes get compensated in tokens for their service.
The NEAR token is also used for voting and governance of the network. Token holders govern the network; updates about the future of the network are generated from the community and subject to a token-based governance process.

To summarize, Everyone can use each NEAR token to:
Pay the system for processing transactions and data storage.
Run a validating node by participating in token staking.
Govern how network resources are allocated and where its future technical direction will go.

## NEAR in Protocol in Numbers

The NEAR network has been processing over 1.5M transactions at time of writing, at a super high speed of 1 second per block on average. These are definitely encouraging numbers for a protocol that is so young.

The network is supported by 60 validator nodes and a large community, with already over 50’000 active accounts.

<ImageContainer>
    <img alt="story_image_3_1" src="/images/chap_3_1.png">
</ImageContainer>
<Spacer />

<ImageContainer>
    <img alt="story_image_3_2" src="/images/chap_3_2.png">
</ImageContainer>
<Spacer />

The NEAR ecosystem is attracting developers and founders from all over the world. The network is production-ready, enabling the development of high-quality apps and services in record time.

## Interoperability & The bridge with Ethereum

With NEAR, developers should not have to choose between different blockchains like NEAR and Ethereum networks and commit to only one. Developers have the same asset on both blockchains and even have apps that seamlessly communicate across the boundary. This has been enabled by a bridge, called <a target="_blank" rel="noreferrer" href="https://github.com/near/rainbow-bridge" >Rainbow Bridge</a>, that requires the lowest possible trust level one can have for an interoperability solution.

<Spacer />

## NEAR Account Overview and Set Up

NEAR uses readable account IDs similar to Twitter handles. In addition, account IDs work like website domains; they can have sub-domains. For example, only the account "alice" can create a sub-account like "work.alice", and now just "work.alice" can create "dayjob.work.alice".
Each of these subaccounts has its public key, so one account can have multiple public keys representing various profiles.

These public keys, also called access keys grant permission to act on behalf of the account. There are 2 types of permissions: full-permission and function-call limited permission.

Full-permissions allow the keys owners to fully interact with the NEAR platform, from deploying code to sending a transaction.
Function call permission of access keys is the most potent usability feature of NEAR. It allows limited permission for other accounts to call methods of a script.
Imagine a NEAR-based platform that registers new user roles that can perform actions that regular users couldn't.

## Create your NEAR Test Network account

1\. Visit <a target="_blank" rel="noreferrer" href="https://wallet.testnet.near.org/">https:\/\/wallet.testnet.near.org/</a>
<ImageContainer>
<img class="chapterImage" alt="story_image_3_4" src="/images/chap_3_4.png">
</ImageContainer>

2\. Choose your personal nickname (i.e. Account ID). The cool thing about NEAR is that it offers the option to personalize your wallet. If the nickname is available, you are ready to join the protocol!

<ImageContainer>
    <img class="chapterImage" alt="story_image_3_5" src="/images/chap_3_5.png">
</ImageContainer>

3\. Now it is the time to choose the security method to secure and recover your account.
4\. For simplicity, using Email Recovery is OK on the test network as it is simpler and quicker. This is however not very secure and wouldn’t be advised for the main network.
5\. You are now part of the NEAR test network.

From now, you have the possibility to interact with the NEAR testnet and do your first transaction. Your test account comes with 200 NEAR, which come quite handy to experiment.

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>

Create your NEAR testnet account and report it back for validation.

</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>

<!-- <FormWrapper>
    <Button text="Submit" color="primary" invertIcon />
</FormWrapper> -->

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-3/exercise.md ---
// Get your new account on NEAR testnet.
// Replace the placeholder it with your id.
YOUR_ID_HERE.testnet
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-3/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import exercise from '!raw-loader!./exercise.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import solution from '!raw-loader!./solution.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import { Data } from 'pages/Chapter/Chapter.controller'

export const data: Data = { course, exercise, splash, solution, supports: { }, questions: [] }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-3/solution.md ---
// Get your new account on NEAR testnet and replace the placeholder it with your id
^[a-z0-9_-]*.testnet

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-3/splash.md ---
Lucky you! Your application was accepted. You’ve landed in Rio de Janeiro and head towards the beach where the museum is located.
This is your first working day in the Meme Museum. You meet the director of the museum, who gets you set up.

<Spacer />

<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-3.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
     Today we're going to bring you up to speed with the latest stack from NEAR, and get you your work account which you will use for everything from now on.
    </div>
  </div>
</ContentWrapp>

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-4/course.md ---
# NEAR Environment

<Difficulty> Difficulty: 2/5 | Estimated reading time: 6 min </Difficulty>

<Spacer />

You can think of NEAR as an additional truth service that you add to your web application.
The benefits of adding such a truth service to an App include handling money, ownership and global user identity without banks, lawyers or any other traditional intermediaries.

Backend development usually happens on a local machine and is deployed on a controlled server. Access to others is given through APIs and the code and access are completely controlled by the server owner.

<ImageContainer>
    <img alt="story_image_4_1" src="/images/chap_4_1.png">
</ImageContainer>

## Layer 3 — App Layer (Your App BackEnd + FrontEnd)

This is effectively the services and the UI that people interact with.

Front end and Back End include all the high-level libraries to interact with NEAR. The components enable communication with the NEAR Virtual Machine to execute code.

The App layer interacts with the protocol in a standardized way, which we will cover in the next chapter. Communication between the App layer and the protocol layer is channeled through an RPC interface in NEAR.

## Layer 2 — Protocol Layer (P2P Network Components)

Transactions and data storage are validated here via the NEAR consensus mechanism and added to the public ledger. This is done by the validator nodes in this layer. NEAR sits in between the app layer and the runtime layer and communicates with both other layers.

## Layer 1 - Runtime Layer (VM, Storage )

Layer 1 can be considered at the same level as the protocol layer. Every time a NEAR Validator Node validates a transaction they read and write in the State Storage and on the VM. Layer 1 is often referred to as the resource layer because the "real computations" occur here.

## The NEAR VM

NEAR VM is a modified WebAssembly Virtual Machine to execute Wasm bytecode instructions. All code running on NEAR must be compiled to WebAssembly, or simply Wasm.

Currently, two languages are supported with custom SDKs to compile code into Wasm: AssemblyScript and Rust. Any language that can be compiled into Wasm could be used here as long it meets specific requirements that can be added through an SDK. AssemblyScript is excellent for prototyping and quick results, while Rust is better suited for applications that might secure a lot of value.

## Transactions Processing

Validator nodes run the VM and execute the operations. They take incoming transactions or storage requests and validate if they meet the requirements to be executed (access control). If an account wants to call a function in a contract it will send a request, the validator will check if the contract and the function exist, if they can be called, and if the account owner signed the transaction. If these requirements are met it will spin up a VM and execute the called function and return the results. After the computation occurs, the VM is quit.

Validators also store each processed transaction in the network. Validators are selected by the network for a certain time period, and are required to be online for that period to process operations on the network. This ensures continuous operation for the protocol.

Validator nodes rewards are adjusted based on the amount of stake and participation (uptime). The rewards of the validator nodes come from programmed new token emission (currently capped at 5%) and transaction fees from network users, referred to as ‘gas’.

Validator nodes are pseudonymous, and game theory is used to ensure that they run the code with good behavior with a staking process called "Proof of Stake". In this process, they make a guarantee deposit, a stake in NEAR, which they will forfeit if they have operated improperly.

## Transaction Gas

Each transaction takes some amount of bandwidth to be included in the network ledger and some computation to be executed. These operations have a cost paid in gas, a small fee in NEAR paid to the validator nodes. It is no different from a user perspective to paying a cloud subscription or AWS Lambda for each execution.

The goal for gas is to represent a unified measure of resources spent to receive, execute, and propagate a transaction on default hardware. Computation (CPU) is a momentary resource spent on executing a transaction.

The cost of each instruction is denominated in "gas" units. Bandwidth is usually measured in bytes, but in the NEAR platform it is converted into gas units using a simple coefficient of overhead which has been estimated on reference hardware.

<Spacer />

## Interact with the Network from your Command Line

If we take this one step further, we can see some advantages emerging from this new service type. Since everyone can deploy scripts on NEAR services that everyone can use, there is no need to register anywhere or ask for awkward API keys to get connected. You pay as you go or if your users wish to let them directly interact with the codes and pay the execution costs.
Let us call the Meme Museum Contract and see how many memes there are registered for exhibition.

Since we are interested in calling a simple function and getting a quick answer, there is no need to build any interface. We use the nodejs based NEAR CLI that provides a set of command-line tools to easily create, test, deploy scripts on the NEAR Network.

1\. Install NEAR CLI: <AnimatedCode>npm install -g near-cli</AnimatedCode> 

2\. Typing <AnimatedCode>near</AnimatedCode> prints a list of all available commands. We are interested in near login (to login with our account) and near view to make call our code and get the amount of memes in the museum 

3\. Type <AnimatedCode>near login</AnimatedCode> this will open your browser and ask you to login into your account 

4\. Now the contract name is "museum.testnet" and the method is called get\_meme\_count. So type: <AnimatedCode>near view museum.testnet get\_meme\_count</AnimatedCode>. This will return you the amount of memes that are registered in the museum. 

5\. Congratulations. You just called a contract on NEAR.

 <ImageContainer>
     <img alt="story_image_4_3" src="/images/chap_4_3.png">
 </ImageContainer>

<Spacer />

## Now, what happens when someone interacts with your contract on the blockchain?

Invoking a contract method from your dApp will trigger a sequence of actions locally as well as on the NEAR protocol:

1\. Your dApp uses near-cli to compose and sign the transaction that represents a Function Call transaction. 

2\. The transaction is sent to the NEAR platform through the RPC interface, which validates and verifies the transaction before routing it (based on the contract account) to the correct validator for processing. 

3\. The runtime layer launches a Wasm virtual machine. 

4\. The VM loads the contract code to invoke the function identified in the transaction, reading and writing to state storage as needed and returning the result of the function call. 

5\. The blockchain layer routes the result back through the RPC interface to your dApp.

<Spacer />

<BackgroundContainer>
<p>
At the museum, each meme is created by a contributor and can receive comments, votes and donations. The contributor can call a release function to release the donations to any given address. The meme museum has an expert team that curates the most interesting memes and presents them in their museum. Yes, this is part of the job!
</p>
</BackgroundContainer>

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>

Now that you have installed it, get familiar with the NEAR CLI and check out the Museum contract to see how many memes have been added to it so far.

</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>

<!-- <FormWrapper>
    <Input placeholder="Placeholder" type="text"/>
    <Button text="Submit" color="primary" invertIcon />
</FormWrapper> -->

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-4/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'

import { Data } from '../../../../Chapter/Chapter.controller'
import { questions } from './questions'

export const data: Data = { course, splash, exercise: undefined, solution: undefined, supports: {}, questions }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-4/questions.ts ---
export const questions = [
    {
        question: "Use the NEAR CLI view method to query the museum contract and report back the number of memes in the museum",
        answers: [
            "just 1",
            "2",
            "3",
            "More than 3"
        ],
        responses: ["More than 3"],
    }
]

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-4/splash.md ---
It’s always exciting to start in a new environment. And you’ve decided to make the best of it.

<Spacer />

<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-3.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
      You’re all set now. Let’s get to work!
    </div>
    <div class="item-text">
      You’ve got your first opportunity to show you know your stuff. Ethan is on vacation, and he deals with the meme inventory. Could you cover for him? Start by getting familiar with the registry…
    </div>
  </div>
</ContentWrapp>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-5/course.md ---
# NEAR Contracts

<Difficulty> Difficulty: 4/5 | Estimated reading time: 6 min </Difficulty>

## Contracts

Contracts are a set of functions that can read or alter the state of the NEAR Network. They are executed on the NEAR Virtual Machine (VM). A minimal “Hello, World!” code written in AssemblyScript looks like this:

<Highlight class="language-typescript">
export function hello(): string {
  return 'Hello, World!'
}
</Highlight>

After it was compiled to Wasm, the contract can be deployed to the NEAR blockchain. Deploying a contract means that it is uploaded and stored in the NEAR blockchain.

Once deployed, the contract can be called in the NEAR VM like a script, served by Nodes on the NEAR blockchain. Anyone connected to the network can see and interact with the code. If a user provides a valid input, the contract will deterministically produce its expected output. In this case “Hello, World!”.

The contract can be called using the NEAR CLI: <AnimatedCode>near view hello-world-contract.testnet hello</AnimatedCode>

## Functions

The hello-world contract is the most basic type of contract as no state alteration is required by the NEAR Network when the contract is called. It simply displays a static string stored on the blockchain. Calling such contracts does not involve gas cost in NEAR; gas is incurred only when a computation is required.
Let’s look at hello\_you() now. This contract invokes more than just a simple “view” function on something that was stored on the blockchain. It requires a call of context.

<Highlight class="language-typescript">
export function hello\_you(): string {
  return 'Hello, ' + context.sender + '!'
}
</Highlight>

Contract hello\_you() does not alter the blockchain state. Still, it requires a call of context, an operation that validator nodes have to carry, and therefore gas to be paid.

Other "call" functions may alter the state of the blockchain. Gas must be paid to the network when invoking these functions.

Consider the function register\_me(). It takes a name and stores it on the blockchain, altering its state, and requiring an action.

<Highlight class="language-typescript">
export function register\_me(): void {
  logging.log('saveMyName() was called')
  storage.setString('sender', context.sender)
}
</Highlight>

Note that this time, the function does not return anything to view. This is what is indicated by “void”. The null output must be specified in the functions run on NEAR.

## Action

An action is a composable unit of operation that, together with zero or more other actions, defines a transaction. You can think of an action as a valid message to be executed at the destination (receiver).

There are currently 8 supported action types:

**1. CreateAccount** to make a new account (for a person, contract, refrigerator, etc)

**2. DeleteAccount** to delete an account (and transfer balance to a beneficiary account)

**3. AddKey** to add a key to an account (either FullAccess or FunctionCall access)

**4. DeleteKey** to delete an existing key from an account

**5. Transfer** to move tokens from one account to another

**6. Stake** to express interest in becoming a validator at the next available opportunity

**7. DeployContract** to deploy a contract on the NEAR blockchain

**8. FunctionCall** to invoke a method on a contract (including the budget for computing and storage)

## Deployment

Deployment of a contract typically follows just four steps.

Step 1: **Compile contract bytecode**
The given Rust or AssemblyScript code is compiled into wasm bytecode.

Step 2: **Compose transaction using DeployContract with attached bytecode.**
A transaction is constructed that contains all the necessary values for NEAR to deploy a smart contract. A transaction alters the VM state and can include more than one action like CreateAccount, AddKey, Transfer as well.

Step 3: **Sign and send a transaction to deploy your code**
Everyone can create a transaction. But only a signed transaction (with valid keys) is correct. The signed transaction is broadcasted to NEAR, validated by the validators and eventually the code gets deployed on the network.

Step 4: **Redeployment and trustless operation**
As long as FullAccess private keys are available, you can redeploy. Remove these keys for trustless operation. Congratulations.

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-5/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'

import { Data } from '../../../../Chapter/Chapter.controller'
import { questions } from './questions'

export const data: Data = { course, splash, exercise: undefined, solution: undefined, supports: {}, questions }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-5/questions.ts ---
export const questions = [
    {
        question: "Answer a simple question: What is a NEAR contract? Wrong answers only.",
        answers: [
            "A legal agreement for storing financial assets on the NEAR network",
            "A script that is deployed and operates on the NEAR network",
            "A fee perceived by contractors of the NEAR network",
            "A transaction involving more than one party in the NEAR network"
        ],
        responses: [],
    }
]

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-5/splash.md ---
When you checked the meme collection status, you interacted with a contract on the NEAR Network. The museum is orchestrated mostly automatically via many codes deployed on NEAR that interact with each other.

<Spacer />

<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-4.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
     I’m so glad to be back at work, digital detox was a bad idea! Imagine living without the internet for a week?! My god, I’m so much better with my smart contracts code. I see the beauty in their rules, like an invisible chaos behind the face of order. My name is Ethan. Let's get some work done.
    </div>
  </div>
</ContentWrapp>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-6/course.md ---
# The Meme and Museum Contracts

<Difficulty>Difficulty: 5/5 | Estimated reading time: 15 min</Difficulty>

<Spacer />

<Highlight class="language-bash">
git clone https://github.com/oceanByte/near-academy-contracts
</Highlight>

**Now that you are more familiar with NEAR infrastructure and contracts, you are ready to learn how contracts may be used to orchestrate a meme museum.**

Technically two contracts are used: the museum contract and the meme contract. The museum contract gives an overview of all available memes, and takes care of curation and governance.

## The Museum Contract

Everyone can register to the museum as a contributor. Registration ensures that all the memes deployed have the same properties and behave the same because they use the same meme code from the museum contract. If everyone could register their own meme contract to the museum, it would be impossible to know if a given contract does what it is intended to do.

The museum contract offers a function to deploy a new meme contract to those who have registered at the museum.

<Highlight class="language-typescript">
export function add\_meme(meme: AccountId, title: string, data: string, category: Category): void
</Highlight>

The first argument, **AccountId**, is simply a string that is used to create a new address for the new meme. If you provide the string “alice” it will deploy the contract to _alice.museum.testnet._ This also means that whitespace and “.” are not allowed for a valid name.

The second argument sets the **title** of the meme. It’s just an ordinary string.

Since the meme museum is cooperating with 9gag the **data** field must be a URL pointing to 9gag. 9gag is a centralized service that was chosen as a partner for storage because it does not allow offensive and inappropriate content. The meme museum could quickly expand to other services and enable different URLs.

The **category** parameter allows a value from 1 to 4 (inclusive). The meme museum uses these categories to rate the meme quality. 1 is very low quality while 4 might go viral.

With that, you are ready to create your first meme. It is done in just three simple steps.

1\. Prepare your account. You need to make sure your NEAR CLI has access to the account supposed to interact with the contract. Simply use the NEAR CLI and type <AnimatedCode>near login</AnimatedCode> and follow the instructions.

2\. Register yourself as a contributor to the museum contract. Make sure to use the accountId that you used when you called near login:

<Highlight class="language-bash">
near call museum.testnet add\_myself\_as\_contributor --accountId YOUR\_ACCOUNT\_NAME.testnet
</Highlight>

3\. Register your meme. Make sure to use a custom name for the meme. Contracts that already exist cannot be overwritten. Deploying your meme will cost you at least 3 NEAR. You may send more NEAR as a signal of the quality of your meme, of course.

<Highlight class="language-bash">
near call museum.testnet add\_meme \
'{"meme" : "bob", "title" : "god", "data" : "https://9gag.com/gag/ad8K0vj", "category" : 4}' \
--accountId YOUR\_ACCOUNT\_NAME.testnet --amount 3 --gas=75000000000000
</Highlight>

Once the meme contract is deployed, you can verify that it was created by returning the list of all available memes: <AnimatedCode>near view museum.testnet get\_meme\_list</AnimatedCode>. You may now also find it on the blockchain explorer, it is in the public domain now.

## The Meme Contract

As we just learned each meme contract lives on a newly created account that was created through the museum.testnet account. In fact, the only way to get a museum.testnet id is through interacting with the museum contract.

The meme contract contains 12 functions:

<Highlight class="language-typescript">
export function init(title: string, data: string, category: Category): void;

export function get\_meme(): Meme;

export function vote(value: i8): void;

export function batch\_vote(value: i8, is\_batch: bool = true): void;

export function get\_recent\_votes(): Array;

export function get\_vote\_score(): i32;

export function add\_comment(text: string): void;

export function get\_recent\_comments(): Array;

export function donate(): void;

export function get\_donations\_total(): u128;

export function get\_recent\_donations(): Array;

export function release\_donations(account: AccountId): void;
</Highlight>

The given functions are written in AssemblyScript. But they could also have been written in Rust or any other language that compiles to Wasm. But it is easier to understand and saves some compiling time than Rust, which is excellent for prototyping and simple contracts.

You can see that all functions are exported so that they can be called from other accounts. Every function has a name and optional arguments that must be of a specific type (custom types included). Every function needs to return something: void or another data type.

We can classify these functions into two different kinds of functions: view functions and call functions.

View functions do NOT alter contract state. As we’ve seen before the execution of these functions do not cost any gas. They just read a value from a variable and return it. In this example the vote\_score is returned, which represents the total vote score for this specific meme:

<Highlight class="language-typescript">
export function get\_vote\_score(): i32 {
  assert\_contract\_is\_initialized()
  return Meme.get().vote\_score
}
</Highlight>
Call functions are the ones that alter a contract state. This means that something is saved on the blockchain. These operations have a gas cost attached to them that is proportional to the complexity of the computation. Remember validators are working for you behind the scene, and they must be rewarded for their validation work.

<Highlight class="language-typescript">
export function add\_comment(text: string): void {
  assert\_contract\_is\_initialized()
  assert(context.sender == context.predecessor, 'Users must comment directly')
  assert\_reasonable\_comment\_length(text)
  Meme.add\_comment(text)
}
</Highlight>
This function add\_comment takes a string and saves it in the contract. When done, it does not return anything. First, it makes sure the contract is actually initialized to provide necessary fields and functions. It also enforces the user to use their account to write a comment, so you can not call another contract to write a comment.

The contract checks if the comment has a short enough length (a maximum length of 500 chars was chosen). The final line adds the comment to the Meme.

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>

Check out the add\_comment function in the code snippet of the exercise code box, there are 3 bugs in lines 11 and 12 that need to be fixed.

</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-6/exercise.md ---
// Fix the bugs in function add_comment
@nearBindgen
export class Comment {
    created_at: Timestamp = context.blockTimestamp;
    author: AccountId = context.predecessor;

    constructor(public text: string) { }
}

const comments = new Vector < Comment > ("c");
static add_comment(text: i32): string {
    comments.push(new Comment());
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-6/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import exercise from '!raw-loader!./exercise.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import solution from '!raw-loader!./solution.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import { Data } from 'pages/Chapter/Chapter.controller'

export const data: Data = { course, splash, exercise, solution, supports: { }, questions: [] }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-6/solution.md ---
// Fix the bugs in function add_comment
@nearBindgen
export class Comment {
    created_at: Timestamp = context.blockTimestamp;
    author: AccountId = context.predecessor;

    constructor(public text: string) { }
}

const comments = new Vector < Comment > ("c");
static add_comment(text: string): void {
    comments.push(new Comment(text));
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-6/splash.md ---
Every day is different. You’re already working with Ethan on the next museum feature: an app for visitors to create their memes and add to the museum.

<Spacer />

<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-4.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
      We’re all artists, after all!
    </div>
  </div>
</ContentWrapp>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-7/course.md ---
# Build your Interface

<Difficulty> Difficulty: 1/5 | Estimated reading time: 4 min </Difficulty>
<Spacer />

The contracts have been deployed, you don’t really have to worry about them anymore. Now is the time to focus on the interface and connecting it with the contracts backend. The designs are not available yet but we can keep working on functionality.

<Highlight class="language-bash">
git clone https://github.com/oceanByte/near-academy-museum-frontend
</Highlight>

You see there is a src folder that contains the files to interact with NEAR and to display the results. It looks just like an ordinary web app. We are using the near-api-js library here which provides an easy way to interact with NEAR. Like with every other library, many details will become more clear when you really need them, so let’s focus on what’s needed now: **We want to display a list of all available memes and interact with them by writing a comment.**

As we know there is the museum contract with a function get\_meme\_list. We called it via the NEAR CLI before and we can do the same now with the near-api-js. You see that it does not matter how you connect to NEAR as long as it follows a specific protocol. The setup to get connected to NEAR is just a few lines.

<ImageContainer>
    <img alt="story_image_7_1" src="/images/chap_7_1.png">
</ImageContainer>

<Highlight class="language-javascript">
import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'
import getConfig from './config'

const nearConfig = getConfig(process.env.NODE\_ENV || 'development')

// Initialize contract & set global variables
export async function initContract() {
// Initialize connection to the NEAR testnet.
// Note that the keys are saved in local storage and never leave the client!
const near = await connect(
Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig),
)

// Initializing Wallet based Account. It can work with NEAR testnet wallet that
// is hosted at https://wallet.testnet.near.org
window.walletConnection = new WalletConnection(near)

// Getting the Account ID. If still unauthorized, it's just empty string
window.accountId = window.walletConnection.getAccountId()

// Initializing our contract APIs by contract name and configuration
window.contract = await new Contract(window.walletConnection.account(), nearConfig.contractName, {
// View methods are read only. They don't modify the state, but usually return some value.
viewMethods: ['get\_meme\_list'],
// Change (“call”) methods can modify the state. But you don't receive the returned value when called.
changeMethods: ['create\_meme'],
})
}
</Highlight>
This initContract function initializes our contract APIs by using a contract name and configuration. You should recognize viewMethods and changeMethods (also known as callMethods). We can list all functions here that we want to use in our application.

That's all you need to know about configuration to get started. The rest works just like any other function calling an API.

Looking at index.js, we see that we can achieve our goal with four short functions.

**1. Get the list of all Memes in the Museum**
We just use the name that was defined for the function in the contract to call it.

<Highlight class="language-javascript">
let memeList = []
async function getMemeList() {
  memeList = await window.contract.get\_meme\_list()
  // ... DOM manipulation here
}
</Highlight>
Since we need to send our query through the network we need to await the answer. Just like an ordinary API call to a server. This will return an array with all the names for the accounts that contain the meme contracts.

**2. Get all memes**
We are almost there. With the full memeList we can start to call the individual contracts and read the details. From the previous chapter we know that each contract is deployed on it’s own account. We need to call different contracts but all of the same kind (meme contracts). So we fill an array with new contracts to use them in the next step.

<Highlight class="language-javascript">
const memeContracts = [];
async function setupMemeContracts() {
   memeList.forEach(meme => {
memeContracts.push(await new Contract(window.walletConnection.account(),
meme + “.” + nearConfig.contractName,
{ viewMethods: ['get\_meme', ‘get\_recent\_comments’],
  changeMethods: [‘set\_comment’]}))
   })

await Promise.all(memeContracts)
console.log(memeContracts)
// ... DOM manipulation here
}
</Highlight>
**3. Display all memes**
Here we go. We have all the contracts ready and call the get\_meme function for each of them to display the results.

<Highlight class="language-javascript">
const memes = []
async function showMemes() {
  memeContracts.forEach(async (memeContract) => {
    memes.push(memeContract.get\_meme())
  })
  await Promise.all(memes)
  console.log(memes)
  // ... DOM manipulation here
}
</Highlight>
**4. Write a comment**

Adding a comment to a Meme is just as easy as calling the function set\_comment and providing your text.

<Highlight class="language-javascript">
async function setComment(memeIndex, text) {
  const result = await memes[memeIndex].set\_comment(text)
  console.log(result)
  // ... DOM manipulation here
}
</Highlight>
The message is saved in the meme contract on the NEAR testnet. In other words: calling this function alters the state of the blockchain and costs gas. The costs are a fraction of a cent but keep this in mind when writing more complex functions.

## What to look for when writing a dApp

As we learned, each call of a change function costs gas. So it might not be desirable to ask the users to call the contracts directly. Instead, your server would call it for them. So effectively, you would pay for them. You see how you can give your users an advantage by using your platform: they get comments for free. But at the same time, you keep the ecosystem open as others could offer the same service or just let the users pay the fees.

The given example is written in plain javascript to keep it simple. But you could also use the latest frameworks like React, Vue and Angular.

## How to enhance your contract(s) and what's next?

Have a look here to get started: <a target="_blank" rel="noreferrer" href="https://github.com/near/create-near-app">https:\/\/github.com/near/create-near-app</a>. Many extra features could be developed on top of the museum and meme contracts. The only limit is imagination. Consider for instance:

- Use a voting system to remove memes from the museum
- Design an improved system to curate the list of memes in the contract
- Implement a royalty system for meme-makers based on likes and comments
- Turn the museum into a fully decentralized autonomous organization (DAO)

<Spacer />

<BackgroundContainer>

<div class="exerciseTitle">Exercise</div>

Use the getRecentComments function via the NEAR cli or use the web app and the near-api-js library to retrieve the latest comment made on the “bob33” meme contract.
Copy/paste the very latest comment that was made for exercise validation.

</BackgroundContainer>

<Spacer />

<SubTitleMobile>Time to practice:</SubTitleMobile>

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-7/exercise.md ---
// Implement the missing function to display the recent comments

async function setupMemeContracts() {
   memeList.forEach(meme => {
   memeContracts.push(await new Contract(
         window.walletConnection.account(),
         meme + “.” + nearConfig.contractName,
         { viewMethods: ['get_meme', ‘get_recent_comments’],
         changeMethods: [‘set_comment’]}))
      })

   await Promise.all(memeContracts)
}

const memeContracts = [];
setupMemeContracts();

async function getRecentComments(index) {
   // TODO implement me
   const recentComments = ;
   return recentComments;
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-7/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import exercise from '!raw-loader!./exercise.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import solution from '!raw-loader!./solution.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import { Data } from 'pages/Chapter/Chapter.controller'

export const data: Data = { course, splash, exercise, solution, supports: { }, questions: [] }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-7/solution.md ---
// Implement the missing function to display the recent comments

async function setupMemeContracts() {
   memeList.forEach(meme => {
   memeContracts.push(await new Contract(
         window.walletConnection.account(),
         meme + “.” + nearConfig.contractName,
         { viewMethods: ['get_meme', ‘get_recent_comments’],
         changeMethods: [‘set_comment’]}))
      })

   await Promise.all(memeContracts)
}

const memeContracts = [];
setupMemeContracts();

async function getRecentComments(index) {
   // TODO implement me
   const recentComments = await memeContracts[index].get_recent_comments();
   return recentComments;
}

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-7/splash.md ---
People from all over the world can be connected through memes they like. Oh wait,... not quite! Before this all works, you have to provide them an easy interface to interact with the contracts, of course. Even in 2029 not everyone is a bash ninja. Ethan has started to create an application already.

<Spacer />

<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-4.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
      I also prefer to work in the terminal. But we also need to think of all the noobs out there…
    </div>
  </div>
</ContentWrapp>
'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-8/course.md ---
# Certificates!

<Spacer />

Congratulations. You've reached the end of this NEAR Academy course, so you can now claim your own unique NEAR Academy certificate!

## Ready for the next level?

<Spacer />

Speaking of certificates, the next level for you to earn (now that you've completed NEAR Academy) is called NEAR Certified Developer.

<Spacer />

Join the **<a target="_blank" rel="noreferrer" href="https://www.near.university/courses/near-certified-developer?utm_source=NA&utm_medium=banner&utm_campaign=NANCD&utm_id=NA">NEAR Certified Developer</a>** course and get certified to start your web3 career within a week.

<Spacer />

Upon successful completion, your certificate will give you an edge when applying for jobs, grants, or fellowships.

<Spacer />

<a target="_blank" rel="noreferrer" href="https://www.near.university/courses/near-certified-developer?utm_source=NA&utm_medium=banner&utm_campaign=NANCD&utm_id=NA">
<img alt="Enroll Now in NEAR Certified Developer" src="/images/NCD_enroll_now.png"/>
</a>

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-8/exercise.md ---
// 👈 First, enroll in NEAR Certified Developer (which will be the next certificate that you'll want to earn).

// Then, click "Submit answer" below 👇 to finish NEAR Academy and claim your NEAR Academy certificate.

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-8/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import course from '!raw-loader!./course.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import splash from '!raw-loader!./splash.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import exercise from '!raw-loader!./exercise.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import solution from '!raw-loader!./solution.md'
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import { Data } from 'pages/Chapter/Chapter.controller'

export const data: Data = { course, splash, exercise, solution, supports: { }, questions: [] }

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-8/solution.md ---
// 👈 First, enroll in NEAR Certified Developer (which will be the next certificate that you'll want to earn).

// Then, click "Submit answer" below 👇 to finish NEAR Academy and claim your NEAR Academy certificate.

'''
'''--- src/frontend/src/pages/Courses/near101/Chapters/Chapter-8/splash.md ---
<ContentWrapp>
  <div class="imgContainer">
    <img alt="story_image_2_0" src="/images/splash/splash-3.png">
  </div>

  <div class="itemsContainer">
    <div class="item-text">
     Oh it’s great i bump into you now. I meant to tell you, everyone at the museum is delighted with your work. We’re so lucky to have you onboard!
    </div>
    <div class="item-text">
     I’d like you to meet everyone you haven’t met yet. Join us for afterwork, that’s where everyone hangs out at this time!
    </div>
  </div>
</ContentWrapp>
'''
'''--- src/frontend/src/pages/Courses/near101/index.ts ---
/* eslint import/no-webpack-loader-syntax: off */
// @ts-ignore
import data from '!raw-loader!./module.md'

import { Course } from '../../Course/Course.controller'

export const course: Course = {
    path: "near101",
    description: data
}

'''
'''--- src/frontend/src/pages/Courses/near101/module.md ---
# Near101

A summary of Near101

'''
'''--- src/frontend/src/react-app-env.d.ts ---
/// <reference types="react-scripts" />

'''
'''--- src/frontend/src/reducers/auth.ts ---
import { RESET, RESTORE } from 'app/App.actions'
import { FORGOT_PASSWORD_COMMIT } from 'pages/ForgotPassword/ForgotPassword.actions'
import { LOGIN_COMMIT, LOGIN_ROLLBACK, LOGOUT } from 'pages/Login/Login.actions'
import { SIGN_UP_COMMIT, SIGN_UP_ROLLBACK } from 'pages/SignUp/SignUp.actions'
import { GET_USER_COMMIT, SET_NAME_COMMIT, SET_ACCOUNT_NAME_ROLLBACK, SET_ACCOUNT_NAME_COMMIT } from 'pages/User/User.actions'
import { Jwt } from 'shared/user/Jwt'
import { PublicUser } from 'shared/user/PublicUser'

export interface AuthState {
  jwt?: Jwt
  user?: PublicUser
  resetPasswordToken?:string
}

const authDefaultState: AuthState = {
  jwt: undefined,
  user: undefined,
  resetPasswordToken: undefined
}

export function auth(state = authDefaultState, action: any): AuthState {
  switch (action.type) {
    case RESET: {
      return authDefaultState
    }
    case RESTORE: {
      return {
        ...state,
        resetPasswordToken: undefined
      }
    }
    case SIGN_UP_COMMIT: {
      return {
        ...state,
        jwt: action.payload.jwt,
        user: action.payload.user,
      }
    }
    case SIGN_UP_ROLLBACK: {
      return {
        ...state,
        jwt: undefined,
        user: undefined,
      }
    }
    case LOGOUT:
      return {
        ...state,
        jwt: undefined,
        user: undefined,
      }
    case LOGIN_COMMIT: {
      return {
        ...state,
        jwt: action.payload.jwt,
        user: action.payload.user,
      }
    }
    case LOGIN_ROLLBACK: {
      return {
        ...state,
        jwt: undefined,
        user: undefined,
      }
    }
    case FORGOT_PASSWORD_COMMIT: {
      return {
        ...state,
        resetPasswordToken: action.payload.token,
      }
    }
    case SET_NAME_COMMIT: {
      return {
        ...state,
        user: action.payload.user,
      }
    }
    case GET_USER_COMMIT: {
      if(state.user?.username === action.payload.user?.username)
      return {
        ...state,
        user: action.payload.user,
      }
      else return state
    }
    case SET_ACCOUNT_NAME_COMMIT: {
      return {
        ...state,
        user: action.payload.user,
      }
    }
    case SET_ACCOUNT_NAME_ROLLBACK: {
      if(state.user?.accountName === action.payload.user?.accountName)
      return {
        ...state,
        user: action.payload.user,
      }
      else return state
    }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/chapterDrawer.ts ---
import { RESET, RESTORE } from 'app/App.actions'
import { HIDE_CHAPTER_DRAWER, SHOW_CHAPTER_DRAWER } from '../app/App.components/Drawer/Drawer.actions'

export interface ChapterDrawerState {
  showingChapter: boolean
}

const chapterDrawerDefaultState: ChapterDrawerState = {
  showingChapter: false,
}

export function chapterDrawer(state = chapterDrawerDefaultState, action: any): ChapterDrawerState {
  switch (action.type) {
    case RESET: {
      return chapterDrawerDefaultState
    }
    case RESTORE: {
      return chapterDrawerDefaultState
    }
    case SHOW_CHAPTER_DRAWER:
      return {
        showingChapter: true,
      }
    case HIDE_CHAPTER_DRAWER:
      return {
        showingChapter: false,
      }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/gdpr.ts ---
import { RESET, RESTORE } from 'app/App.actions'

import { HIDE_GDPR } from '../app/App.components/Gdpr/Gdpr.actions'

export interface GdprState {
  showing: boolean
}

const drawerDefaultState: GdprState = {
  showing: true,
}

export function gdpr(state = drawerDefaultState, action: any): GdprState {
  switch (action.type) {
    case RESET: {
      return drawerDefaultState
    }
    case RESTORE: {
      return state
    }
    case HIDE_GDPR:
      return {
        showing: false,
      }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/index.ts ---
import { connectRouter } from 'connected-react-router'
import { combineReducers } from 'redux'

import { auth, AuthState } from './auth'

// Drawers
import { loginDrawer, LoginDrawerState } from './loginDrawer'
import { chapterDrawer, ChapterDrawerState } from './chapterDrawer'

import { gdpr, GdprState } from './gdpr'
import { loading, LoadingState } from './loading'
import { progressBar, ProgressBarState } from './progressBar'
import { progressChapter, ProgressChapterState } from './progressChapter'
import { serviceWorker, ServiceWorkerState } from './serviceWorker'
import { toaster, ToasterState } from './toaster'
import { users, UsersState } from './users'

export const reducers = (history: any) =>
  combineReducers({
    router: connectRouter(history),
    auth,
    loading,
    users,
    toaster,
    chapterDrawer,
    loginDrawer,
    progressBar,
    progressChapter,
    serviceWorker,
    gdpr,
  })

export interface State {
  auth: AuthState
  loading: LoadingState
  users: UsersState
  toaster: ToasterState
  loginDrawer: LoginDrawerState
  chapterDrawer: ChapterDrawerState
  progressBar: ProgressBarState
  progressChapter: ProgressChapterState
  serviceWorker: ServiceWorkerState
  gdpr: GdprState
}

'''
'''--- src/frontend/src/reducers/loading.ts ---
export type LoadingState = boolean

const loadingInitialState: LoadingState =  false

export function loading(state = loadingInitialState, action: any): LoadingState {
  switch (true) {
    case /RESET/.test(action.type): {
      return false
    }
    case /RESTORE/.test(action.type): {
      return false
    }
    case /_REQUEST/.test(action.type): {
      return true
    }
    case /_COMMIT/.test(action.type): {
      return false
    }
    case /_ROLLBACK/.test(action.type): {
      return false
    }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/loginDrawer.ts ---
import { RESET, RESTORE } from 'app/App.actions'

export interface LoginDrawerState {
    showingMenu: boolean
}
  
const loginDrawerDefaultState: LoginDrawerState = {
    showingMenu: false,
}

export function loginDrawer(state = loginDrawerDefaultState, action: any): LoginDrawerState {
    switch (action.type) {
        case RESET: {
            return loginDrawerDefaultState
        }
        case RESTORE: {
            return loginDrawerDefaultState
        }
        default:
            return state
    }
}

'''
'''--- src/frontend/src/reducers/progressBar.ts ---
import { RESET, RESTORE } from 'app/App.actions'

import { HIDE_PROGRESS_BAR, SHOW_PROGRESS_BAR } from '../app/App.components/ProgressBar/ProgressBar.actions'

export interface ProgressBarState {
  showing: boolean
}

const progressBarDefaultState: ProgressBarState = {
  showing: false,
}

export function progressBar(state = progressBarDefaultState, action: any): ProgressBarState {
  switch (action.type) {
    case RESET: {
      return progressBarDefaultState
    }
    case RESTORE: {
      return progressBarDefaultState
    }
    case SHOW_PROGRESS_BAR:
      return {
        showing: true,
      }
    case HIDE_PROGRESS_BAR:
      return {
        showing: false,
      }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/progressChapter.ts ---
import { ADD_LOCAL_PROGRESS } from './../pages/Chapter/Chapter.actions';

export interface ProgressChapterState {
  progressUserChapter: string[]
}

const progressChapterDefaultState: ProgressChapterState = {
  progressUserChapter: [],
}

export function progressChapter(state = progressChapterDefaultState, action: any): ProgressChapterState {
  switch (action.type) {
    case ADD_LOCAL_PROGRESS: {
      const prevState = [...state.progressUserChapter]
      if (prevState.indexOf(action.payload.chapterDone) === -1) {
        prevState.push(action.payload.chapterDone);
      }
      return {
        progressUserChapter: prevState,
      }
    }
    default:
      return state
  }
}
'''
'''--- src/frontend/src/reducers/serviceWorker.ts ---
export const SW_INIT = 'SW_INIT'
export const SW_UPDATE = 'SW_UPDATE'

export interface ServiceWorkerState {
  serviceWorkerInitialized: boolean
  serviceWorkerUpdated: boolean
  serviceWorkerRegistration: any
}

const serviceWorkerState: ServiceWorkerState = {
  serviceWorkerInitialized: false,
  serviceWorkerUpdated: false,
  serviceWorkerRegistration: null,
}

export function serviceWorker(state = serviceWorkerState, action: any): ServiceWorkerState {
  switch (action.type) {
    case SW_INIT: {
      return {
        ...state,
      }
    }
    case SW_UPDATE: {
      return {
        ...state,
      }
    }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/toaster.ts ---
import { RESET, RESTORE } from 'app/App.actions'

import { HIDE_TOASTER, SHOW_TOASTER } from '../app/App.components/Toaster/Toaster.actions'
import { ERROR } from '../app/App.components/Toaster/Toaster.constants'

export interface ToasterState {
  showing: boolean
  status?: string
  title?: string
  message?: string
}

const toasterDefaultState: ToasterState = {
  showing: false,
  status: ERROR,
  title: undefined,
  message: undefined,
}

export function toaster(state = toasterDefaultState, action: any): ToasterState {
  switch (action.type) {
    case RESET: {
      return toasterDefaultState
    }
    case RESTORE: {
      return toasterDefaultState
    }
    case SHOW_TOASTER:
      return {
        showing: true,
        status: action.status,
        title: action.title,
        message: action.message,
      }
    case HIDE_TOASTER:
      return {
        ...state,
        showing: false,
      }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/reducers/users.ts ---
import { RESET, RESTORE } from 'app/App.actions'
import { GET_USER_COMMIT } from 'pages/User/User.actions'
import { PublicUser } from 'shared/user/PublicUser'

export type UsersState = Record<string, PublicUser>

const usersInitialState: UsersState = {}

export function users(state = usersInitialState, action: any): UsersState {
  switch (action.type) {
    case RESET: {
      return usersInitialState
    }
    case RESTORE: {
      return state
    }
    case GET_USER_COMMIT: {
      return {
        ...state,
        [action.payload.user.username]: action.payload.user,
      }
    }
    default:
      return state
  }
}

'''
'''--- src/frontend/src/serviceWorker.ts ---
// This optional code is used to register a service worker.
// register() is not called by default.

// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, since previously cached
// resources are updated in the background.

// To learn more about the benefits of this model and instructions on how to
// opt-in, read https://bit.ly/CRA-PWA

const isLocalhost = Boolean(
  window.location.hostname === 'localhost' ||
    // [::1] is the IPv6 localhost address.
    window.location.hostname === '[::1]' ||
    // 127.0.0.0/8 are considered localhost for IPv4.
    window.location.hostname.match(
      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
    )
);

type Config = {
  onSuccess?: (registration: ServiceWorkerRegistration) => void;
  onUpdate?: (registration: ServiceWorkerRegistration) => void;
};

export function register(config?: Config) {
  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
    // The URL constructor is available in all browsers that support SW.
    const publicUrl = new URL(
      process.env.PUBLIC_URL,
      window.location.href
    );
    if (publicUrl.origin !== window.location.origin) {
      // Our service worker won't work if PUBLIC_URL is on a different origin
      // from what our page is served on. This might happen if a CDN is used to
      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
      return;
    }

    window.addEventListener('load', () => {
      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;

      if (isLocalhost) {
        // This is running on localhost. Let's check if a service worker still exists or not.
        checkValidServiceWorker(swUrl, config);

        // Add some additional logging to localhost, pointing developers to the
        // service worker/PWA documentation.
        navigator.serviceWorker.ready.then(() => {
          console.log(
            'This web app is being served cache-first by a service ' +
              'worker. To learn more, visit https://bit.ly/CRA-PWA'
          );
        });
      } else {
        // Is not localhost. Just register service worker
        registerValidSW(swUrl, config);
      }
    });
  }
}

function registerValidSW(swUrl: string, config?: Config) {
  navigator.serviceWorker
    .register(swUrl)
    .then(registration => {
      registration.onupdatefound = () => {
        const installingWorker = registration.installing;
        if (installingWorker == null) {
          return;
        }
        installingWorker.onstatechange = () => {
          if (installingWorker.state === 'installed') {
            if (navigator.serviceWorker.controller) {
              // At this point, the updated precached content has been fetched,
              // but the previous service worker will still serve the older
              // content until all client tabs are closed.
              console.log(
                'New content is available and will be used when all ' +
                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'
              );

              // Execute callback
              if (config && config.onUpdate) {
                config.onUpdate(registration);
              }
            } else {
              // At this point, everything has been precached.
              // It's the perfect time to display a
              // "Content is cached for offline use." message.
              console.log('Content is cached for offline use.');

              // Execute callback
              if (config && config.onSuccess) {
                config.onSuccess(registration);
              }
            }
          }
        };
      };
    })
    .catch(error => {
      console.error('Error during service worker registration:', error);
    });
}

function checkValidServiceWorker(swUrl: string, config?: Config) {
  // Check if the service worker can be found. If it can't reload the page.
  fetch(swUrl, {
    headers: { 'Service-Worker': 'script' }
  })
    .then(response => {
      // Ensure service worker exists, and that we really are getting a JS file.
      const contentType = response.headers.get('content-type');
      if (
        response.status === 404 ||
        (contentType != null && contentType.indexOf('javascript') === -1)
      ) {
        // No service worker found. Probably a different app. Reload the page.
        navigator.serviceWorker.ready.then(registration => {
          registration.unregister().then(() => {
            window.location.reload();
          });
        });
      } else {
        // Service worker found. Proceed as normal.
        registerValidSW(swUrl, config);
      }
    })
    .catch(() => {
      console.log(
        'No internet connection found. App is running in offline mode.'
      );
    });
}

export function unregister() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.ready
      .then(registration => {
        registration.unregister();
      })
      .catch(error => {
        console.error(error.message);
      });
  }
}

'''
'''--- src/frontend/src/setupTests.ts ---
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom/extend-expect';

'''
'''--- src/frontend/src/shared/captcha/Captcha.ts ---
import * as crypto from 'crypto'
import { IsDate, IsEnum, IsMongoId, Length, IsInt, IsOptional } from 'class-validator'

import { ObjectId } from 'mongodb'
import { DayJs } from '../../helpers/dayjs'
import { Property, Index, getModel } from '../../helpers/typegoose'
import { CaptchaFor } from './CaptchaFor'

@Index({ userId: 1, captchaFor: 1 }, { unique: true })
@Index({ expireAt: 1 }, { expireAfterSeconds: 0 })
export class Captcha {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, ref: 'User' })
  @IsMongoId()
  userId!: ObjectId

  @Property({ required: true })
  @IsInt()
  index!: number

  @Property({ required: true })
  @Length(4, 4)
  solution!: string

  @Property({ required: true })
  @IsEnum(CaptchaFor)
  captchaFor!: CaptchaFor

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsInt()
  attempts?: number

  @Property({
    required: true,
    default: crypto.randomBytes(16).toString('hex'),
  })
  @Length(16, 16)
  token!: string

  @Property({
    required: true,
    default: DayJs().add(1, 'hour').toDate(),
  })
  @IsDate()
  expiresAt!: Date

  @IsDate()
  createdAt!: Date

  @IsDate()
  updatedAt!: Date
}

export const CaptchaModel = getModel(Captcha, { schemaOptions: { timestamps: true } })

'''
'''--- src/frontend/src/shared/captcha/CaptchaFor.ts ---
export enum CaptchaFor {
  CAPTCHA_FOR_RESET_PASSWORD = 'CAPTCHA_FOR_RESET_PASSWORD',
  CAPTCHA_FOR_VERIFY_EMAIL = 'CAPTCHA_FOR_VERIFY_EMAIL'
}

'''
'''--- src/frontend/src/shared/captcha/CaptchaPair.ts ---
import { CaptchaSolution } from './CaptchaSolution'

export interface CaptchaPair {
  captchaIndex: number
  captchaSolution: CaptchaSolution
}

'''
'''--- src/frontend/src/shared/captcha/CaptchaSolution.ts ---
export type CaptchaSolution = string

'''
'''--- src/frontend/src/shared/meme/SevenChapterForm.ts ---
import { Expose } from 'class-transformer'
import { Length, Matches } from 'class-validator'

export class SevenChapterForm {
    @Expose()
    @Length(1, 20)
    meme!: string

    @Expose()
    @Length(1, 100)
    title!: string

    @Expose()
    @Length(1, 100)
    @Matches(/https:\/\/9gag\.com\/gag\/([a-zA-Z0-9]{7})/, { message: 'Web Site should be https://9gag.com'})
    url!: string

    @Expose()
    @Length(1, 1)
    @Matches(/^([1-4])$/, { message: 'Category should be from 1 to 4' })
    category!: number
}

'''
'''--- src/frontend/src/shared/mongo/DeleteRes.ts ---
export interface DeleteRes {
  ok: number
  n: number
  deletedCount: number
}

'''
'''--- src/frontend/src/shared/mongo/ResponseError.ts ---
export class ResponseError extends Error {
  status: number
  expose: boolean

  constructor(status: number, m: string) {
    super(m)
    this.status = status
    this.expose = status < 500

    Object.setPrototypeOf(this, ResponseError.prototype)
  }
}

'''
'''--- src/frontend/src/shared/mongo/UpdateRes.ts ---
import { ObjectId } from 'mongodb'

type upsertedObject = {
  index: number
  _id: ObjectId
}

export interface UpdateRes {
  ok: number
  n: number
  upserted?: upsertedObject[]
  nModified: number
}

'''
'''--- src/frontend/src/shared/page/GetPublicUser.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'
import { PublicUser } from '../user/PublicUser'

export class GetPublicUserInputs {
  @Expose()
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string
}

export class GetPublicUserOutputs {
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/page/SetAccountName.ts ---
import { Expose } from 'class-transformer'
import { Length, Matches } from 'class-validator'

import { PublicUser } from '../user/PublicUser'

export class SetAccountNameInputs {
  @Expose()
  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.testnet$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName!: string
}

export class SetNameOutputs {
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/page/SetName.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'
import { PublicUser } from '../user/PublicUser'

export class SetNameInputs {
  @Expose()
  @Length(2, 40)
  name!: string
}

export class SetNameOutputs {
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/quota/Quota.ts ---
import { IsDate, IsMongoId, IsInt, IsOptional, IsEnum } from 'class-validator'

import { ObjectId } from 'mongodb'
import { DayJs } from '../../helpers/dayjs'
import { Property, Index, getModel } from '../../helpers/typegoose'
import { QuotaType } from './QuotaType'

@Index({ userId: 1, quotaType: 1 }, { unique: true })
@Index({ expireAt: 1 }, { expireAfterSeconds: 0 })
export class Quota {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, ref: 'User' })
  @IsMongoId()
  userId!: ObjectId

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsEnum(QuotaType)
  quotaType?: QuotaType

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsInt()
  count?: number

  @Property({
    required: true,
    default: DayJs().add(24, 'hour').toDate(),
  })
  @IsDate()
  expiresAt!: Date
}

export const QuotaModel = getModel(Quota, { schemaOptions: { timestamps: false } })

'''
'''--- src/frontend/src/shared/quota/QuotaRates.ts ---
// Per hour
export const QuotaRates = {
  DEFAULT_LIMIT: 100,
  COMMENTS: 3,
  UPVOTES: 3,
  DOWNVOTES: 3,
  NEW_CAPTCHA: 3,
  LOGIN: 10,
}

'''
'''--- src/frontend/src/shared/quota/QuotaType.ts ---
export enum QuotaType {
  DEFAULT_LIMIT = 'DEFAULT_LIMIT',
  NEW_CAPTCHA = 'NEW_CAPTCHA',
  LOGIN = 'LOGIN',
}

'''
'''--- src/frontend/src/shared/referral/Referral.ts ---
import { IsEnum, Length, Matches } from 'class-validator'
import { ReferralStatus } from './ReferralStatus'

export class Referral {
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @IsEnum(ReferralStatus)
  status!: ReferralStatus
}

'''
'''--- src/frontend/src/shared/referral/ReferralStatus.ts ---
export enum ReferralStatus {
    PENDING = 'PENDING',
    COMPLETED = 'COMPLETED',
    REWARDED = 'REWARDED'
  }
  
'''
'''--- src/frontend/src/shared/user/AddProgress.ts ---
import { Expose } from 'class-transformer'
import { Length, Matches } from 'class-validator'

import { PublicUser } from '../user/PublicUser'

export class AddProgressInputs {
  @Expose()
  @Length(2, 100)
  @Matches(/^[a-zA-Z0-9-\/]*$/, { message: 'Chapter slug can only contain letters, numbers, dashes and slashes' })
  chapterDone!: string
}

export class AddProgressOutputs {
  @Expose()
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/user/ChangePassword.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'

export class ChangePasswordInputs {
  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  password!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  newPassword!: string
}

export class ChangePasswordOutputs {}

'''
'''--- src/frontend/src/shared/user/ForgotPassword.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'

export class ForgotPasswordInputs {
  @Expose()
  @Length(2, 50)
  usernameOrEmail!: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class ForgotPasswordOutputs {
  @Expose()
  @Length(16, 16)
  token!: string
}

'''
'''--- src/frontend/src/shared/user/IsCertified.ts ---
import { Expose } from 'class-transformer'
import { IsBoolean, Length } from 'class-validator'

export class IsCertifiedInputs {
  @Expose()
  @Length(2, 100)
  name!: string
}

export class IsCertifiedOutputs {
  @Expose()
  @IsBoolean()
  userFound!: boolean

  @Expose()
  @IsBoolean()
  isCertified!: boolean
}

'''
'''--- src/frontend/src/shared/user/IsEqualTo.ts ---
import { registerDecorator, ValidationArguments, ValidationOptions } from 'class-validator'

export function IsEqualTo(property: string, validationOptions?: ValidationOptions) {
  return (object: any, propertyName: string): any => {
    registerDecorator({
      name: 'isEqualTo',
      target: object.constructor,
      propertyName,
      constraints: [property],
      options: validationOptions,
      validator: {
        validate(value: any, args: ValidationArguments): boolean {
          const [relatedPropertyName] = args.constraints
          const relatedValue = (args.object as any)[relatedPropertyName]
          return value === relatedValue
        },

        defaultMessage(args: ValidationArguments): string {
          const [relatedPropertyName] = args.constraints
          return `$property must match ${relatedPropertyName} exactly`
        },
      },
    })
  }
}

'''
'''--- src/frontend/src/shared/user/Jwt.ts ---
export type Jwt = string

'''
'''--- src/frontend/src/shared/user/JwtDecoded.ts ---
import { JwtPayload } from './JwtPayload'

export class JwtDecoded extends JwtPayload {
  iat!: number
  exp!: number
  aud!: string
  iss!: string
  sub!: string
}

'''
'''--- src/frontend/src/shared/user/JwtPayload.ts ---
import { UserRole } from './UserRole'

export class JwtPayload {
  _id!: string
  username!: string
  userRole?: UserRole
  expiresAt!: Date
}

'''
'''--- src/frontend/src/shared/user/Login.ts ---
import { Expose } from 'class-transformer'
import { IsJWT, Length, Matches } from 'class-validator'

import { Jwt } from './Jwt'
import { PublicUser } from './PublicUser'

export class LoginInputs {
  @Expose()
  @Length(2, 50)
  usernameOrEmail!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must be longer than or equal to 8 characters' })
  password!: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class LoginOutputs {
  @Expose()
  @IsJWT()
  jwt!: Jwt

  @Expose()
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/user/PublicUser.ts ---
import { IsArray, IsDate, IsEmail, IsMongoId, Length, Matches } from 'class-validator'
import { ObjectId } from 'mongodb'

import { Referral } from '../referral/Referral'

export class PublicUser {
  @IsMongoId()
  readonly _id!: ObjectId

  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.testnet$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName!: string

  @Length(2, 40)
  name!: string

  @IsEmail()
  emailVerified?: boolean

  @IsArray()
  progress?: string[]

  @IsDate()
  createdAt!: Date

  @IsArray()
  referral?: Referral[]

  @IsDate()
  certifiedAt?: Date

  stats?: Object
}

'''
'''--- src/frontend/src/shared/user/ResetPassword.ts ---
import { Length, Matches } from 'class-validator'
import { Expose } from 'class-transformer'

export class ResetPasswordInputs {
  @Expose()
  @Length(4, 4)
  solution!: string

  @Expose()
  @Length(16, 32)
  token!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must have at least one letter and one digit' })
  newPassword!: string
}

export class ResetPasswordOutputs {}

'''
'''--- src/frontend/src/shared/user/SignUp.ts ---
import { Expose } from 'class-transformer'
import { IsEmail, IsJWT, Length, Matches } from 'class-validator'

import { IsEqualTo } from './IsEqualTo'
import { Jwt } from './Jwt'
import { PublicUser } from './PublicUser'

export class SignUpInputs {
  @Expose()
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Expose()
  @IsEmail()
  email!: string

  @Expose()
  @Length(8, 50)
  @Matches(/^(?=.*[0-9])(?=.*[a-zA-Z])(.+)$/, { message: 'Password must be longer than or equal to 8 characters' })
  password!: string

  @Expose()
  @Length(8, 50)
  @IsEqualTo('password')
  confirmPassword!: string

  @Expose()
  @Length(0, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Referral can only contain letters, numbers and underscores' })
  referral?: string

  @Expose()
  @Length(100, 1000)
  recaptchaToken!: string
}

export class SignUpOutputs {
  @Expose()
  @IsJWT()
  jwt!: Jwt

  @Expose()
  user!: PublicUser
}

'''
'''--- src/frontend/src/shared/user/User.ts ---
// prettier-ignore
import { IsBoolean, IsDate, IsEmail, IsMongoId, IsOptional, Length, Matches } from 'class-validator'
import { ObjectId } from 'mongodb'

import { getModel, Property } from '../../helpers/typegoose'

export class User {
  @IsMongoId()
  readonly _id!: ObjectId

  @Property({ required: true, unique: true, index: true })
  @Length(2, 20)
  @Matches(/^[a-zA-Z0-9_]*$/, { message: 'Username can only contain letters, numbers and underscores' })
  username!: string

  @Property()
  @Length(3, 40)
  @Matches(/^[a-zA-Z0-9_]*.(testnet|near)$/, { message: 'Account name can only contain letters, numbers and underscores and needs to end with .testnet' })
  accountName?: string

  @Property()
  @Length(2, 40)
  name!: string

  @Property({ required: true, unique: true, index: true })
  @IsEmail()
  email!: string

  @Property({ nullable: true, optional: true })
  @IsOptional()
  @IsBoolean()
  emailVerified?: boolean

  @Property({ required: true })
  hashedPassword!: string

  @Property({ nullable: true, optional: true })
  progress?: string[]

  @Property({ nullable: true, optional: true })
  @IsOptional()
  // provide a match decorator
  referral?: string[]

  @IsDate()
  createdAt!: Date

  @IsDate()
  updatedAt!: Date

  @IsDate()
  certifiedAt?: Date

}

export const UserModel = getModel(User, { schemaOptions: { timestamps: true } })

'''
'''--- src/frontend/src/shared/user/UserRole.ts ---
export enum UserRole {
  MODERATOR = 'MODERATOR',
  ADMIN = 'ADMIN',
}

'''
'''--- src/frontend/src/shared/user/VerifyEmail.ts ---
import { Length } from 'class-validator'
import { Expose } from 'class-transformer'

export class VerifyEmailInputs {
  @Expose()
  @Length(4, 4)
  solution!: string
}

export class VerifyEmailOutputs {}

'''
'''--- src/frontend/src/styles/animations.ts ---
import { keyframes, css } from 'styled-components/macro'

// Formula: https://www.wolframalpha.com/input/?i=%60f%27%27%28t%29+%3D+-180%28f%28t%29+-+1%29+-+12%28f%27%28t%29%29%3B+f%27%280%29+%3D+0%3B+f%280%29+%3D+0%60
export const springWobbly = (t: number) =>
  -1 * Math.pow(2.71828, -6 * t) * Math.sin(12 * t) - 1 * Math.pow(2.71828, -6 * t) * Math.cos(12 * t) + 1

// Formula: https://www.wolframalpha.com/input/?i=%60f%27%27%28t%29+%3D+-174%28f%28t%29+-+1%29+-+19%28f%27%28t%29%29%3B+f%27%280%29+%3D+0%3B+f%280%29+%3D+0%60
export const springStiff = (t: number) =>
  -1 * Math.pow(2.71828, -9.5 * t) * Math.sin(9.1515 * t) - 1 * Math.pow(2.71828, -9.5 * t) * Math.cos(9.1515 * t) + 1

function hamburgerBottomForward() {
  let styles = ''
  for (let i = 0; i <= 100; i += 1) {
    styles += `
          ${i}% {
            transform: translate3d(${springWobbly(i / 50) * -8}px, ${springWobbly(i / 50) * -2}px, 0) rotate(${springWobbly(i / 50) * 45}deg) scaleX(${1 - springWobbly(i / 50) * 0.5});
          }
          `
  }
  return css`
      ${styles}
    `
}
export const HamburgerBottomForward = keyframes`
    ${hamburgerBottomForward()};
  `

function hamburgerTopForward() {
  let styles = ''
  for (let i = 0; i <= 100; i += 1) {
    styles += `
        ${i}% {
          transform: translate3d(${springWobbly(i / 50) * -8}px, ${springWobbly(i / 50) * 2}px, 0) rotate(${springWobbly(i / 50) * -45}deg) scaleX(${1 - springWobbly(i / 50) * 0.5});
        }
        `
  }
  return css`
    ${styles}
  `
}
export const HamburgerTopForward = keyframes`
  ${hamburgerTopForward()};
`

function hamburgerBottomBackward() {
  let styles = ''
  for (let i = 0; i <= 100; i += 1) {
    styles += `
          ${i}% {
            transform: translate3d(${-8 - springWobbly(i / 50) * -8}px, ${-2 - springWobbly(i / 50) * -2}px, 0) rotate(${45 - springWobbly(i / 50) * 45}deg) scaleX(${0.5 + springWobbly(i / 50) * 0.5});
          }
          `
  }
  return css`
      ${styles}
    `
}
export const HamburgerBottomBackward = keyframes`
    ${hamburgerBottomBackward()};
  `

function hamburgerTopBackward() {
  let styles = ''
  for (let i = 0; i <= 100; i += 1) {
    styles += `
        ${i}% {
          transform: translate3d(${-8 - springWobbly(i / 50) * -8}px, ${2 - springWobbly(i / 50) * 2}px, 0) rotate(${-45 - springWobbly(i / 50) * -45}deg) scaleX(${0.5 + springWobbly(i / 50) * 0.5});
        }
        `
  }
  return css`
    ${styles}
  `
}
export const HamburgerTopBackward = keyframes`
  ${hamburgerTopBackward()};
`

// function slideRightEnterKeyframes() {
//   let styles = ''
//   for (let i = 0; i <= 100; i += 1) {
//     styles += `
//         ${i}% {
//           transform: translate3d(${-200 + springStiff(i / 100) * 200}px, 0, 0);
//           opacity: ${springStiff(i / 100)};
//         }
//        `
//   }
//   return css`
//     ${styles}
//   `
// }
// export const slideRightEnter = keyframes`
//   ${slideRightEnterKeyframes()};
// `
export const slideRightEnter = keyframes`
from {
  transform: translate3d(-200px, 0, 0);
  opacity: 0;
}
to {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}
`

// function slideRightExitKeyframes() {
//   let styles = ''
//   for (let i = 0; i <= 100; i += 1) {
//     styles += `
//         ${i}% {
//           transform: translate3d(${springStiff(i / 100) * 100}px, 0, 0);
//           opacity: ${1 - springStiff(i / 100)};
//         }
//        `
//   }
//   return css`
//     ${styles}
//   `
// }
// export const slideRightExit = keyframes`
//   ${slideRightExitKeyframes()};
// `
export const slideRightExit = keyframes`
from {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}
to {
  transform: translate3d(100px, 0, 0);
  opacity: 0;
}
`

// function slideLeftEnterKeyframes() {
//   let styles = ''
//   for (let i = 0; i <= 100; i += 1) {
//     styles += `
//         ${i}% {
//           transform: translate3d(${200 - springStiff(i / 100) * 200}px, 0, 0);
//           opacity: ${springStiff(i / 100)};
//         }
//        `
//   }
//   return css`
//     ${styles}
//   `
// }
// export const slideLeftEnter = keyframes`
//   ${slideLeftEnterKeyframes()};
// `
export const slideLeftEnter = keyframes`
from {
  transform: translate3d(200px, 0, 0);
  opacity: 0;
}
to {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}
`

// function slideLeftExitKeyframes() {
//   let styles = ''
//   for (let i = 0; i <= 100; i += 1) {
//     styles += `
//         ${i}% {
//           transform: translate3d(${springStiff(i / 100) * -100}px, 0, 0);
//           opacity: ${1 - springStiff(i / 100)};
//         }
//        `
//   }
//   return css`
//     ${styles}
//   `
// }
// export const slideLeftExit = keyframes`
//   ${slideLeftExitKeyframes()};
// `
export const slideLeftExit = keyframes`
from {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}
to {
  transform: translate3d(-100px, 0, 0);
  opacity: 0;
}
`

export const fadeIn = keyframes`
from {
  opacity: 0;
}
to {
  opacity: 1;
}
`

export const fadeInFromLeft = keyframes`
from {
  opacity: 0;
  transform: translate3d(-50px, 0, 0);
}
to {
  opacity: 1;
  transform: translate3d(0px, 0, 0);
}
`

export const fadeInFromRight = keyframes`
from {
  opacity: 0;
  transform: translate3d(50px, 0, 0);
}
to {
  opacity: 1;
  transform: translate3d(0px, 0, 0);
}`

export const fadeInFromTop = keyframes`
  from {
    opacity: 0;
    transform: translate3d(0, -50px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0px, 0);
  }
`

export const fadeInFromBottom = keyframes`
  from {
    opacity: 0;
    transform: translate3d(0, 50px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0px, 0);
  }
`

'''
'''--- src/frontend/src/styles/colors.ts ---
export const backgroundColorBody = '#DBEAFE'
export const backgroundColorDark = '#FFF'
export const backgroundColorLight = '#FFF'
export const backgroundColorChapter = '#071C43'
export const backgroundColorInput = '#1F3255'
export const progressColor = '#22C55E'
export const shadowColor = '#00000040'
export const borderColor = '#272B40'
export const textColor = '#64748B'
export const textColorBlue = '#4338CA'
export const textColorWhite = '#FFF'
export const textColorBlack = '#000'
export const textColorGreen = '#22C55E'
export const textColorMenuItem = '#071C43'
export const textColorMenuItemNumber = '#94A3B8'
export const buttonColor = '#FFF'
export const subTextColor = '#071C43'
export const backgroundTextColor = '#3F4468'
export const bgTextColor = '#000'
export const placeholderColor = '#9090A0'
export const primaryColor = '#2563EB;'
export const secondaryColor = '#00E205'
export const tertiaryColor = '#9013FE'
export const upColor = '#00E205'
export const downColor = '#F90021'
export const headerColor = '#10122399'
export const inactiveColor = '#242649'
export const counterColor = '#6D728F'
export const okColor = '#12650a'

export const near1 = '#FF585D'
export const near2 = '#FFB259'
export const near3 = '#2563EB;'
export const near4 = '#00C1DE'
export const near5 = '#0072CE'
export const near6 = '#F2F2F2'

'''
'''--- src/frontend/src/styles/components.ts ---
import styled from 'styled-components/macro'

import { fadeIn, fadeInFromBottom, fadeInFromLeft, fadeInFromRight, fadeInFromTop } from './animations'
import { backgroundColorLight, primaryColor, upColor } from './colors'

export const Ellipsis = styled.div`
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
`

export const CardPage = styled.div`
  margin: 100px auto 20px auto;
  width: 400px;
  max-width: 90vw;
`

export const FullPage = styled.div`
  width: 100%;
  max-width: 1534px;
  margin: 0 auto;
`

export const BannerPage = styled.div`
  width: 100vw;
  margin: 100px auto 20px auto;
`

export const GridTitle = styled.div`
  display: grid;
  grid-template-columns: auto auto;
`

export const GreenDot = styled.div`
  display: inline-block;
  margin-bottom: 1px;
  margin-right: 8px;
  border-radius: 12px;
  width: 6px;
  height: 6px;
  background-color: ${upColor};
  animation: flickerAnimation 3s infinite;

  @keyframes flickerAnimation {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.1;
    }
    100% {
      opacity: 1;
    }
  }
`

export const PrimaryText = styled.div`
  color: ${primaryColor};
  display: inline-block;
`

export const Card = styled.div`
  background: ${backgroundColorLight};
  border-radius: 10px;
  box-shadow: 0 1px 10px ${backgroundColorLight}19;
`

export const AnimatedCard = styled(Card)`
  will-change: opacity, transform;
  animation: ${fadeInFromLeft} 500ms;
`

export const FadeIn = styled.div`
  will-change: opacity;
  animation: ${fadeIn} 500ms;
`

export const FadeInFromTop = styled.div`
  will-change: opacity, transform;
  animation: ${fadeInFromTop} 500ms;
`

export const FadeInFromRight = styled.div`
  will-change: opacity, transform;
  animation: ${fadeInFromRight} 500ms;
`

export const FadeInFromBottom = styled.div`
  will-change: opacity, transform;
  animation: ${fadeInFromBottom} 500ms;
`

export const FadeInFromLeft = styled.div`
  will-change: opacity, transform;
  animation: ${fadeInFromLeft} 500ms;
`

'''
'''--- src/frontend/src/styles/constants.ts ---
export const HURME_GEOMETRIC = 'Hurme Geometric Sans 4'
export const PROXIMA_NOVA = 'Proxima Nova'
'''
'''--- src/frontend/src/styles/fonts.css ---
@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/ProximaNova-Thin.woff2') format('woff2'), url('/fonts/ProximaNova-Thin.woff') format('woff');
  font-weight: 100;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/ProximaNova-Light.woff2') format('woff2'), url('/fonts/ProximaNova-Light.woff') format('woff');
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/ProximaNova-Regular.woff2') format('woff2'), url('/fonts/ProximaNova-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/ProximaNova-Semibold.woff2') format('woff2'), url('/fonts/ProximaNova-Semibold.woff') format('woff');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Proxima Nova';
  src: url('/fonts/ProximaNova-Bold.woff2') format('woff2'), url('/fonts/ProximaNova-Bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Poppins';
  src: url('/fonts/Poppins-Regular.woff2') format('woff2'), url('/fonts/Poppins-Regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Poppins';
  src: url('/fonts/Poppins-Medium.woff2') format('woff2'), url('/fonts/Poppins-Medium.woff') format('woff');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Poppins';
  src: url('/fonts/Poppins-SemiBold.woff2') format('woff2'), url('/fonts/Poppins-SemiBold.woff') format('woff');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Poppins';
  src: url('/fonts/Poppins-Bold.woff2') format('woff2'), url('/fonts/Poppins-Bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'DB Mono';
  src: url('/fonts/DBMono-Regular.woff2') format('woff2'), url('/fonts/DBMono-Regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Comic Neue';
  src: url('/fonts/ComicNeue-BoldItalic.woff2') format('woff2'), url('/fonts/ComicNeue-BoldItalic.woff') format('woff');
  font-weight: 700;
  font-style: italic;
  font-display: swap;
}

'''
'''--- src/frontend/src/styles/global.ts ---
import { createGlobalStyle } from 'styled-components/macro'

import { fadeInFromLeft, slideLeftEnter, slideLeftExit, slideRightEnter, slideRightExit } from './animations'
import { backgroundColorDark, placeholderColor, textColor } from './colors'

export const GlobalStyle = createGlobalStyle`
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Poppins', sans-serif;
  /* font-family: 'Inter', sans-serif;; */
  font-display: optional;
  background-color: ${backgroundColorDark};
  color: ${textColor};
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  
  ._hj-3ZiaL__MinimizedWidgetBottom__container {
            bottom: 40% !important;
        }
}

h1 {
  font-size: 40px;
  font-weight: 700;
  display: inline-block;
  margin: 20px 0px;
  // margin-top: 70px;
}

h2 {
  font-size: 20px;
  font-weight: normal;
  display: block;
  margin: 0;
}

h3 {
  font-size: 30px;
  font-weight: normal;
  display: block;
  margin: 0;
}

input {
  color: ${textColor};
  font-size: 14px;
}

::placeholder {
  color: ${placeholderColor};
  font-size: 14px;
}

*:focus {
  outline: none;
}

a {
  color: #42edf8;
  text-decoration: none !important;
  opacity: 1;
  transition: opacity 0.15s ease-in-out-out;
  will-change: opacity;
}

a:visited {
  color: inherit;
}

a:hover {
  opacity: 0.9;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

@keyframes autofill {
    0%,100% {
        color: ${textColor};
        background: ${backgroundColorDark};
    }
}

/* Change Autocomplete styles in Chrome*/
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
    animation-delay: 300ms;
    animation-name: autofill;
    animation-fill-mode: both;
}

.appear {
  opacity: 0;
  will-change: transform, opacity;
  animation: ${fadeInFromLeft} ease-in-out 1;
  animation-fill-mode: forwards;
  animation-duration: 0.3s;
}

.slide-right-enter {
  opacity: 0;
}
.slide-right-enter-active {
  opacity: 1;
  transition: opacity 200ms;
}
.slide-right-exit {
  opacity: 1;
}
.slide-right-exit-active {
  opacity: 0;
  transition: opacity 200ms;
}

.slide-left-enter {
  opacity: 0;
}
.slide-left-enter-active {
  opacity: 1;
  transition: opacity 200ms;
}
.slide-left-exit {
  opacity: 1;
}
.slide-left-exit-active {
  opacity: 0;
  transition: opacity 200ms;
}

/* .slide-right-enter-active {
  animation-name: ${slideRightEnter};
  animation-duration: 300ms;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

.slide-right-exit-active {
  animation-name: ${slideRightExit};
  animation-duration: 300ms;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

.slide-left-enter-active {
  animation-name: ${slideLeftEnter};
  animation-duration: 300ms;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

.slide-left-exit-active {
  animation-name: ${slideLeftExit};
  animation-duration: 300ms;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
} */

.grecaptcha-badge {
  visibility: hidden;
}

*::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
  background: transparent;
}

*::-webkit-scrollbar-track, ::-webkit-scrollbar-corner, ::-webkit-scrollbar-track-piece {
  background: #00000000;
}

*::-webkit-scrollbar-thumb {
  background: #08658b;
}

*::-webkit-scrollbar-thumb:hover {
  background: #08658b;
}

.rc-slider {
  margin: 10px 0 23px 5px;
}

.rc-slider-handle {
  background-color: #0a456d !important;
}

.rc-slider-rail {
  background-color: #0a456d !important;
}

.rc-slider-track {
  background-color: #42edf8 !important;
  box-shadow: 0px 0px 25px rgba(11, 183, 226, 0.65), 0px 0px 15px rgba(0, 112, 202, 0.6);
}

.rc-slider-dot {
  background-color: #0a456d !important;
  border: 2px solid #0a456d !important;
}

.rc-slider-dot-active {
  background-color: #42edf8 !important;
  border-color: #42edf8 !important;
  drop-shadow: 0px 0px 25px rgba(11, 183, 226, 0.65), 0px 0px 15px rgba(0, 112, 202, 0.6);
}

.rc-slider-mark-text {
  display: none !important;
}
`

'''
'''--- src/frontend/src/styles/index.ts ---
export * from './global'
export * from './colors'
export * from './animations'
export * from './components'
export * from './constants'

'''
'''--- src/frontend/tsconfig.json ---
{
  "compilerOptions": {
    "target": "ESNext",
    "lib": ["dom", "dom.iterable", "ESNext"],
    "module": "esnext",
    "moduleResolution": "node",
    "jsx": "react",
    "isolatedModules": true,
    "sourceMap": true,
    //"noUnusedLocals": true,
    //"noUnusedParameters": true,
    "strict": true,
    "alwaysStrict": true,
    "removeComments": true,
    //"noImplicitAny": true,
    "noImplicitThis": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "forceConsistentCasingInFileNames": true,
    "downlevelIteration": true,
    "allowSyntheticDefaultImports": true,
    "rootDir": "src",
    "allowJs": true,
    "skipLibCheck": true,
    "resolveJsonModule": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "noEmit": true,
    "esModuleInterop": true,
    "baseUrl": "src/"
  },
  "include": ["src", "**/*.spec.ts"],
  "exclude": ["node_modules", "./node_modules", "./node_modules/*", "./node_modules/@types/node/index.d.ts"]
}

'''