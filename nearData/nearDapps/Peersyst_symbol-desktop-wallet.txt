*GitHub Repository "Peersyst/symbol-desktop-wallet"*

'''--- .eslintrc.js ---
module.exports = {
  root: true,
  env: {
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:vue/recommended',
    '@vue/typescript',
    'prettier/vue',
    'prettier/@typescript-eslint',
    'plugin:prettier/recommended',
  ],
  plugins: ['vue', '@typescript-eslint'],
  rules: {
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    curly: 2,
    'no-extra-boolean-cast': 0,
    // @TODO: remove v-html
    'vue/no-v-html': 'off',
    'no-useless-escape': 'off',
  },
}

'''
'''--- .prettierrc.js ---
module.exports = {
    semi: true,
    trailingComma: 'all',
    singleQuote: true,
    printWidth: 140,
    tabWidth: 4,
};

'''
'''--- .travis.yml ---
language: node_js
services:
  - docker
node_js:
  - 12
os:
  - linux
  - osx
osx_image: xcode11.3
env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine
script:
  - npm run build:web
jobs:
  include:
    - stage: test
      name: lint tests
      script: npm run lint
      os: linux

    - name: unit tests
      script: npm run test
      os: osx

    - stage: alpha
      name: publish alpha docker
      script: /bin/sh travis/docker.sh
      if: branch = env(DEV_BRANCH) AND type != pull_request AND (commit_message != release OR env(RELEASE_BRANCH) != env(DEV_BRANCH))
      os: linux

    - script: npm run release:all
      name: build desktop artifacts
      if:  branch = env(DEV_BRANCH) AND type != pull_request AND (commit_message != release OR env(RELEASE_BRANCH) != env(DEV_BRANCH))
      os: osx

    - stage: release
      name: release docker
      script: /bin/sh travis/docker.sh
      if: branch = env(RELEASE_BRANCH) AND type != pull_request AND (commit_message = release OR env(RELEASE_BRANCH) != env(DEV_BRANCH))
      os: linux

    - name: release desktop artifacts, tag and update version
      script: /bin/sh travis/release.sh
      if: branch = env(RELEASE_BRANCH) AND type != pull_request AND (commit_message = release OR env(RELEASE_BRANCH) != env(DEV_BRANCH))
      os: osx

'''
'''--- CHANGELOG.md ---
# CHANGELOG
All notable changes to this project will be documented in this file.

The changelog format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).

## [0.13.0][v0.13.0] - 25-Sep-2020

### Milestone: [catapult-server@v0.10.x](https://github.com/nemtech/catapult-server/releases/tag/v0.10.0)

#### Changes

- Upgraded symbol-hd-wallets and symbol-qr-library to use `next` tag
- Upgraded symbol-sdk to latest v0.20.8 alpha (0.10.x compat)
- Added new testnet nodes in config/network.conf.json

#### Fixed

- Multiple fixes on breaking changes of upcoming 0.21 SDK
- Updated block height reader to use /chain/info
- Fixed a WebSocket CLOSED state due to invalid UNSUBSCRIBE order

## [0.12.0][v0.12.0] - 16-Jul-2020

### Milestone: [catapult-server@v0.9.6.3](https://github.com/nemtech/catapult-server/releases/tag/v0.9.6.3)

#### Added

- Added compatibility for 0.9.6.3 server transactions and blocks(fixes #415)
- Added compatibility for 0.9.6.3 server entities changes from public key to addresses(fixes #414)
- Added database migrations for 0.9.6.3 testnet network reset including profiles and accounts table (**BREAKING CHANGE**)
- Added new **signerAddress** storage instead of signerPublicKey where necessary
- Added more japanese translations (Thanks @44uk)

#### Fixed

- Fixed settings screen not appeaering on MacOS (fixes #448)
- Fixed Add mosaic button on FormTransferTransaction (fixes #437)
- Aligned all language files to prepare adding further translated languages

## [0.11.0][v0.11.0] - 24-Jun-2020

### Milestone: [catapult-server@v0.9.5.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.5.1)

#### Added

- Added first implementation of Harvesting setup wizard for HD Profiles (fixes #326)
- Added AccountKeyLink transaction wrapping with PersistentDelegationRequestTransaction
- Added possibility to create unlimited duration mosaics (fixes #413)
- Added settings modal box with new custom node selector (fixes #348)
- Separated mosaic configuration for different accounts (fixes #379, #380)
- Improved news module and added several bugfixes related to news
- Removed duplicate menu actions on menu clicks

#### Fixed

- Fixed namespace name validator to use same as SDK (fixes #412)
- Fixed login page visual bug (fixes #431)
- Fixed selector fields consistency to use iView's Select component (fixes #388, #347)
- Fixed private key display replication bug (fixes #403)
- Several wording and UI fixes on languages files (fixes #390, #391, #404, #252)

## [0.10.0][v0.10.0] - 27-May-2020

### Milestone: [catapult-server@v0.9.5.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.5.1)

#### Added

- Upgrade to testnet 0.9.5.1 with SDK v0.19.2 (fixes #385)
- Added **recommended fees** feature using transaction size and network median fees
- Added transaction command to replace staged transactions
- Added TransactionAnnouncerService to cope with transaction timeouts and errors
- Improved components styling with scoped less (fixes #307, #273)
- Removed duplicate cancel actions on modals (fixes #367)

#### Fixed

- Fixed reactivity of locale for custom validation messages (fixes #374)
- Fixed invalid profile listing in login (fixes #341, #353)
- Fixed multisig edition form deleting accounts (fixes #384)
- Fixed wording on multisig form (fixes #366)

## [v0.9.9][v0.9.9]

### Milestone: [catapult-server@v0.9.4.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.4.1)

#### Added

- Added release process compliant with NIP14
- Added Apache v2 license (fixes #209)
- upgrade SDK to v0.18.0, (fixes #276)
- remove AESEncryptionService, (fixes #277)
- Testnet upgrade, (fixes #292)
- Move user data storage folder to /home/.symbol-desktop-wallet
- Rename accounts to profiles, wallets to accounts (fixes #304)

#### Fixed

- Fixed mosaic namespace resolution inside transfers (fixes #275)
- Fixed hardcoded network configuration properties (fixes #140) (fixes #139)
- Fixed private key import of duplicates (fixes #214) 
- Fixed vue-router error logs (fixes #252)

## [v0.9.8][v0.9.8] -

### Milestone: [catapult-server@v0.9.3.2](https://github.com/nemtech/catapult-server/releases/tag/v0.9.3.2)

### [v0.9.8-beta1][v0.9.8-beta1] - 17-Apr-2020

#### Added

- Added transaction status filters and multisig account selector (fixes #183)

#### Fixed

- Fixed wallet import in subwallet creation (fixes #214)

## [v0.9.7][v0.9.7] - 06-Apr-2020 

### Milestone: [catapult-server@v0.9.3.2](https://github.com/nemtech/catapult-server/releases/tag/v0.9.3.2)

### [v0.9.7-beta1][v0.9.7-beta1] - 06-Apr-2020

#### Added

- Added refresh button for namespace list (fixes #186)
- Added refresh button for mosaics list (fixes #146)
- Added automatic generation of QR Code for Invoices (fixes #168)
- Added eslint and linter configuration (fixes #166)

#### Fixed

- SignerSelector address format bug starting with A (fixes #205)
- Password change related bug fixes (fixes #195)
- Fix incorrect max fee display (fixes #188)
- Fixed mosaic balance panel list Close button (fixes #151)

## [v0.9.6][v0.9.6] - 21-Mar-2020

### Milestone: [catapult-server@v0.9.3.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.3.1)

### [v0.9.6-beta2][v0.9.6-beta2] - 21-Mar-2020

#### Added

- Added aliases to wallet details (fixes #26)
- Added multisig accounts transaction list link (fixes #84)

#### Changed

- Added usage of repository factory for REST (fixes #131)

#### Fixed

- Fixed account import cancellation (fixes #135)
- Fixed transaction pagination (fixes #112)
- Fixed dashboard CSS (fixes #111)
- Fixed SignerSelector mutation (fixes #115)
- Fixed form submit behaviour (fixes #98)

### [v0.9.6-beta1][v0.9.6-beta1] - 17-Mar-2020

#### Added

- Permit to query partial transactions of multisig accounts (fixes #68)
- Skip expired mosaics in transfer form (fixes #61)

#### Changed

- Changed navigation bar logos to use Symbol branding (fixes #72)
- Add reactivity to confirmed transaction events (fixes #69)

#### Fixed

- Fixed sub wallet creation form (fixes #103)
- Added unsubscription from websocket channels (fixes #99)
- Fixed duplicate words in mnemonic passphrases (fixes #87)
- Reset cosignatories from multisig form (fixes #85)
- Fix reactivity of account balance panel (fixes #79)

## [v0.9.5][v0.9.5] - 11-Mar-2020

### Milestone: [catapult-server@v0.9.3.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.3.1)

### [v0.9.5-beta6][v0.9.5-beta6] - 11-Mar-2020

#### Fixed

- Fixed password field input validation (fixes #57)
- Added new Symbol icons (fixes #72)
- Fixed child account creation (fixes #64)
- Fixed namespace state updates (fixes #67)
- Fixed MosaicBalanceList reactivity

### [v0.9.5-beta5][v0.9.5-beta5] - 10-Mar-2020

#### Fixed

- Fixed namespaces and mosaics database schema to hold hex instead of UInt64 (fixes #59)
- Hide expired mosaics in transfer inputs, (fixes #61)
- Fix mosaic balance list, (fixes #65)
- Type store / mosaic state
- Persist mosaic hidden state to database

### [v0.9.5-beta4][v0.9.5-beta4] - 09-Mar-2020

#### Fixed

- Patched windows build postcss properties
- Fixed PeerSelector component with loading state (fixes #23)
- Fixed transaction list layout for better readability
- Added beautified empty messages for table displays
- Fixed FormAliasTransaction for mosaic aliases
- Fixed pagination component layout
- Fixed mnemonic import wallet selection screen

### [v0.9.5-beta2][v0.9.5-beta2] - 06-Mar-2020

#### Fixed

- Fixed WalletSelectorPanel balances listing (fixes #27)
- Fixed account import pages (fixes #54)
- Fixed newly added transfer mosaic attachments

### [v0.9.5-beta1][v0.9.5-beta1] - 06-Mar-2020

#### Added

- Added TransactionService methods handling transaction signature
- Added TransactionService methods handling transaction broadcast
- Added store actions for better reactivity across components
- Added endpoints database table
- Improved `FormTransactionBase` to make use of `isCosignatoryMode` state change
- Added automatic **funds lock** creation for multi-signature transactions (aggregate bonded)
- Added possibility to _aggregate transactions_ that are _signed_ and _on-stage_ (used in `FormMosaicDefinitionTransaction`)
- Added rebranded account creation pages
- Added and fixed account import pages
- Fixed unconfirmed and partial transaction removal from lists
- Added `FormMultisigAccountModificationTransaction` with common form for conversion and modifications

#### Known Issues

- Missing harvesting setup (account link & persistent delegation requests)
- Some missing UI fixes for Symbol rebrand

## [v0.9.4-beta][v0.9.4-beta] - 25-Feb-2020

### Milestone: [catapult-server@v0.9.2.1](https://github.com/nemtech/catapult-server/releases/tag/v0.9.2.1)

#### Added

- `FormAccountUnlock`: standardize practice of unlocking account across app
- `FormTransactionBase`: base abstraction layer for transaction forms
- `SignerSelector`: generic transaction signer selector, works with multisig to change owned assets states
- General change of views files (*.vue) paths with result :
    * Components in src/components/
    * Modal Dialogs in src/views/modals/
    * Pages in src/views/pages/
    * Layouts in src/components/
    * Forms in src/views/forms/
- Added namespaced vuex Store managing application state changes
- Added namespaces vuex Store managing REST requests changing state (action REST_*)
- Added src/core/database/ with LocalStorageBackend, models and tables schemas
- Added repository abstraction layer to work with persistent storage
- Added business layer implementations in src/services/*
- Rewrote all route names and use route names instead of paths for redirects

#### Known Issues

- Missing harvesting setup (account link & persistent delegation requests)
- Some missing UI fixes for Symbol rebrand

[v0.13.0]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.11.0...v0.13.0
[v0.12.0]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.11.0...v0.12.0
[v0.11.0]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.10.0...v0.11.0
[v0.10.0]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.9...v0.10.0
[v0.9.9]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.8-beta1...v0.9.9
[v0.9.8]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.8-beta1
[v0.9.8-beta1]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.7-beta1...v0.9.8-beta1
[v0.9.7]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.7-beta1
[v0.9.7-beta1]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.6...v0.9.7-beta1
[v0.9.6]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.6-beta2
[v0.9.6-beta2]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.6-beta1...v0.9.6-beta2
[v0.9.6-beta1]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.5-beta6...v0.9.6-beta1
[v0.9.5]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.5-beta6
[v0.9.5-beta6]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.5-beta5...v0.9.5-beta6
[v0.9.5-beta5]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.5-beta4...v0.9.5-beta5
[v0.9.5-beta4]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.5-beta2...v0.9.5-beta4
[v0.9.5-beta2]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.5-beta1...v0.9.5-beta2
[v0.9.5-beta1]: https://github.com/nemfoundation/symbol-desktop-wallet/compare/v0.9.4-beta...v0.9.5-beta1
[v0.9.4-beta]: https://github.com/nemfoundation/symbol-desktop-wallet/releases/tag/v0.9.4-beta

'''
'''--- CODE_OF_CONDUCT.md ---
# Contributor Covenant Code of Conduct

## Our Pledge

In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

## Our Standards

Examples of behavior that contributes to creating a positive environment include:

* Using welcoming and inclusive language
* Being respectful of differing viewpoints and experiences
* Gracefully accepting constructive criticism
* Focusing on what is best for the community
* Showing empathy towards other community members

Examples of unacceptable behavior by participants include:

* The use of sexualized language or imagery and unwelcome sexual attention or advances
* Trolling, insulting/derogatory comments, and personal or political attacks
* Public or private harassment
* Publishing others' private information, such as a physical or electronic address, without explicit permission
* Other conduct which could reasonably be considered inappropriate in a professional setting

## Our Responsibilities

Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.

Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

## Scope

This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

## Enforcement

Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at greg@nem.foundation. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

## Attribution

This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

[homepage]: http://contributor-covenant.org
[version]: http://contributor-covenant.org/version/1/4/

'''
'''--- CONTRIBUTING.md ---
# Contributing to symbol-desktop-wallet

First off, thank you for considering contributing to symbol-desktop-wallet.

The symbol-desktop-wallet is an open source project and we love to receive contributions from our community — you!

Following these guidelines helps to communicate that you respect the time of
the developers managing and developing this open source project. In return,
they should reciprocate that respect in addressing your issue, assessing changes,
and help you finalize your pull requests.

## Error reports

If you think you have found an error in the symbol-desktop-wallet, first make sure that you
are testing against the latest version of symbol-desktop-wallet - your issue may already
have been fixed. If not, search our issues list on GitHub in case a similar
issue has already been opened.

It is very helpful if you can prepare a reproduction of the error. It makes it easier to
find the problem and to fix it.

Please, take into consideration the next template to report your issue:

    **Describe the error**
    A clear and concise description of what the error is.

    **To Reproduce**
    Steps to reproduce the behavior:
    1. Go to '...'
    2. Click on '....'
    3. Scroll down to '....'
    4. See error

    **Expected behavior**
    A clear and concise description of what you expected to happen.

    **Screenshots**
    If applicable, add screenshots to help explain your problem.

Open a new issue [here][github-issues].

## Contributing code and documentation changes

To expand and improve the symbol-desktop-wallet, please find or open an issue about it first.

Talk about what you would like to do. It may be that somebody is already working on it,
or that there are particular issues that you should know about before implementing the change.

We enjoy working with contributors to get their pull-requests accepted.

### Contributing License Notice

When you contribute code, you affirm that the contribution is your original work and that you license the work to the project under the project's open source license.

Whether or not you state this explicitly, by submitting any copyrighted material via pull request, email, or other means you agree to license the material under the project's open source license and warrant that you have the legal authority to do so.

### Submitting your changes

Once your changes and tests are ready to submit for review:

1. Test your changes.

    ``npm run dev``

    Make sure that nothing is broken.

2. Submit a pull request.

    Push your local changes to your forked copy of the repository and [submit a pull request](https://help.github.com/articles/about-pull-requests/) targeting the **master branch**. In the pull request, choose a title which sums up the changes that you have made, and in the body provide more details about what your changes do. Also mention the number of the issue where discussion has taken place, eg "Closes #123".

Then sit back and wait. There will probably be a discussion about the pull request and, if any changes are needed, we would love to work with you to get your pull request merged into symbol-desktop-wallet.

*CONTRIBUTING.md is based on [CONTRIBUTING-template.md](https://github.com/nayafia/contributing-template/blob/master/CONTRIBUTING-template.md)* , [elasticsearch/CONTRIBUTING](https://github.com/elastic/elasticsearch/blob/master/CONTRIBUTING.md) and [spark/CONTRIBUTING](https://github.com/apache/spark/blob/master/CONTRIBUTING.md)

[pull-request]: https://help.github.com/articles/about-pull-requests/
[github-issues]: https://github.com/nemfoundation/symbol-desktop-wallet/issues

'''
'''--- README.md ---
# Symbol Desktop Wallet

[![Build Status](https://travis-ci.com/nemgrouplimited/symbol-desktop-wallet.svg?branch=main)](https://travis-ci.com/nemgrouplimited/symbol-desktop-wallet)
[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)

Cross-platform client for Symbol to manage accounts, mosaics, namespaces, and issue transactions.

## Installation

Symbol Desktop Wallet is available for Mac, Windows, and as a web application.

1. Download Symbol Desktop Wallet from the [releases section](https://github.com/nemgrouplimited/symbol-desktop-wallet/releases).

2. Launch the executable file and follow the installation instructions.

3. Create a profile. Remember to save the mnemonic somewhere safe (offline).

**NOTE**: This program is currently in development and only available for the Symbol test network. Do not use it for other purposes.

## Building instructions

Symbol CLI require **Node.js 10 or 12 LTS** to execute.

1. Clone the project.

```
git clone https://github.com/nemgrouplimited/symbol-desktop-wallet.git
```

2. Install the dependencies.
```
cd symbol-desktop-wallet
npm install 
```

3. Start the development server.

```
npm run dev 
```

4. Visit http://localhost:8080/#/ in your browser.

## Getting help

Use the following available resources to get help:

- [Symbol Documentation][docs]
- Join the community [slack group (#sig-client)][slack] 
- If you found a bug, [open a new issue][issues]

## Contributing

Contributions are welcome and appreciated. 
Check [CONTRIBUTING](CONTRIBUTING.md) for information on how to contribute.

## License

Copyright 2018-present NEM

Licensed under the [Apache License 2.0](LICENSE)

[self]: https://github.com/nemgrouplimited/symbol-desktop-wallet
[docs]: https://nemtech.github.io
[issues]: https://github.com/nemgrouplimited/symbol-desktop-wallet/issues
[slack]: https://join.slack.com/t/nem2/shared_invite/enQtMzY4MDc2NTg0ODgyLWZmZWRiMjViYTVhZjEzOTA0MzUyMTA1NTA5OWQ0MWUzNTA4NjM5OTJhOGViOTBhNjkxYWVhMWRiZDRkOTE0YmU

'''
'''--- Vue.config-back.js ---
const path = require('path')

// WAS THIS FILE WITH CAPITAL V USED????? NOTHING BELOW IS CONSOLED OUT!!

const packageVersion = JSON.stringify(require('./package.json').version);
const web = process.env.WEB || false;

console.log(`Building package ${packageVersion} for Web: ${web}`);

module.exports = {
  // base url
  publicPath: process.env.NODE_ENV === 'production'
      ? './'
      : '/',
  // output dir
  outputDir: './dist',
  assetsDir: 'static',
  // eslint-loader check
  lintOnSave: true,
  // webpack
  // see https://github.com/vuejs/vue-cli/blob/dev/docs/webpack.md
  chainWebpack: config => {},
  // generate map
  productionSourceMap: true,
  //use template in vue
  runtimeCompiler: true,
  // css
  css: {
    // ExtractTextPlugin
    extract: false,
    //  CSS source maps?
    sourceMap: false,
    // css loader
    loaderOptions: {
      postcss: {
        config: {
          path: '.postcss.config.js'
        }
      }
    },
    // CSS modules for all css / pre-processor files.
    requireModuleExtension: true
  },
  // use thread-loader for babel & TS in production build
  // enabled by default if the machine has more than 1 cores
  parallel: require('os').cpus().length > 1,
  // webpack-dev-server
  devServer: {
    host: '0.0.0.0',
    port: 8080,
    before: app => {
    },
    proxy: {
      '/nemflash': {
        target: 'http://rssmix.com/u/11801188/rss.xml',
        ws: true,
        changeOrigin: true,
        pathRewrite: { '^/nemflash': '' }
      },
    }
  },
  // plugins
  pluginOptions: {
    "process.env": {
      NODE_ENV: '"development"'
    }
  }
}

'''
'''--- __mocks__/Accounts.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { SimpleWallet, Account, NetworkType, Password } from 'symbol-sdk';

// internal dependencies
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';

export const account1Params = {
    accountName: 'account_name',
    privateKey: '145160ba92878447cb45d6cb147d2ade035b0b47cab1b9e1551aa5679d92b314',
    networkType: NetworkType.MIJIN_TEST,
    password: new Password('password1'),
};

export const account1 = Account.createFromPrivateKey(account1Params.privateKey, account1Params.networkType);

export const simpleWallet1 = SimpleWallet.createFromPrivateKey(
    account1Params.accountName,
    account1Params.password,
    account1Params.privateKey,
    account1Params.networkType,
);

export const WalletsModel1: AccountModel = {
    id: 'someId',
    node: '',
    profileName: 'profile_name',
    name: account1Params.accountName,
    type: AccountType.PRIVATE_KEY,
    address: simpleWallet1.address.plain(),
    publicKey: account1.publicKey,
    encryptedPrivateKey: simpleWallet1.encryptedPrivateKey,
    path: '',
    isMultisig: false,
};

export const WalletsModel2: AccountModel = {
    id: 'someId2',
    node: '',
    profileName: 'profile1',
    name: account1Params.accountName,
    type: AccountType.SEED,
    address: simpleWallet1.address.plain(),
    publicKey: account1.publicKey,
    encryptedPrivateKey: simpleWallet1.encryptedPrivateKey,
    path: "m/44'/4343'/1'/0'/0'",
    isMultisig: false,
};

const TEST_ACCOUNTS = {
    cosigner1: {
        networkType: NetworkType.MIJIN_TEST,
        privateKey: '27002B109810E4C25E8E6AE964FAF129CC3BFD1A95CB99062E0205060041D0C9',
    },
    remoteTestnet: {
        networkType: NetworkType.TEST_NET,
        privateKey: '803040D4A33983C4B233C6C2054A24B9C655E8CAC6C06AECCED56B8FE424FF2B',
    },
    remoteMijin: {
        networkType: NetworkType.MIJIN_TEST,
        privateKey: '803040D4A33983C4B233C6C2054A24B9C655E8CAC6C06AECCED56B8FE424FF2B',
    },
    cosigner2: {
        networkType: NetworkType.MIJIN_TEST,
        privateKey: '8472FA74A64A97C85F0A285299D9FD2D44D71CB5698FE9C7E88C33001F9DD83F',
    },
    multisig1: {
        networkType: NetworkType.MIJIN_TEST,
        privateKey: 'CAD57FEC0C7F2106AD8A6203DA67EE675A1A3C232C676945306448DF5B4124F8',
    },
    multisig2: {
        networkType: NetworkType.MIJIN_TEST,
        privateKey: '72B08ACF80558B285EADA206BB1226A44038C65AC4649108B2284591641657B5',
    },
};

export const getTestAccount = (name: string): Account => {
    if (!(name in TEST_ACCOUNTS)) {
        throw new Error('Test account with name: ' + name + ' could not be found in __mocks__/accounts.ts');
    }

    const spec = TEST_ACCOUNTS[name];
    return Account.createFromPrivateKey(spec.privateKey, spec.networkType);
};

'''
'''--- __mocks__/Components.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { shallowMount, createLocalVue } from '@vue/test-utils';
import Vuex from 'vuex';
import { createStore } from '@MOCKS/Store';
import i18n from '@/language/index';

/// region globals
const localVue = createLocalVue();
localVue.use(Vuex);
/// end-region globals

/// region helpers
/**
 * Create and *shallow* mount a component injecting
 * store \a modules and \a state (namespaced).
 * @param component
 * @param modules
 * @param state
 */
export const getComponent = (
    component,
    storeModules: { [name: string]: any },
    stateChanges?: { [field: string]: any },
    propsData?: { [field: string]: any },
    stubsData?: { [field: string]: any },
) => {
    // - format store module overwrites
    const modules = Object.keys(storeModules)
        .map((k) => ({
            [k]: Object.assign({}, storeModules[k], {
                // - map state overwrites to store module
                state: Object.assign({}, storeModules[k].state, stateChanges),
                // - map unmodified getters
                getters: storeModules[k].getters,
            }),
        }))
        .reduce((obj, item) => {
            // - reducer to get {profile: x, account: y} format
            const key = Object.keys(item).shift();
            obj[key] = item[key];
            return obj;
        }, {});

    // - create fake store
    const store = createStore({ modules });
    const params = {
        store,
        i18n,
        localVue,
    };

    if (propsData && Object.keys(propsData).length) {
        params['propsData'] = propsData;
    }

    if (stubsData && Object.keys(stubsData).length) {
        params['stubs'] = stubsData;
    }

    // - mount component
    const wrapper = shallowMount(component, params);
    return wrapper;
};
/// end-region helpers

'''
'''--- __mocks__/MosaicConfigurations.ts ---
export const mosaicConfigurations = {
    B147F63C31CE2347: {
        '05D6A80DE3C9ADCA': {
            hidden: false,
        },
        '31774AAAC74F9A86': {
            hidden: false,
        },
        '63B8C5F8A30F8F89': {
            hidden: false,
        },
        '3B18F8E49D1536D6': {
            hidden: false,
        },
    },
    D0413A4634C85190: {
        '05D6A80DE3C9ADCA': {
            hidden: false,
        },
    },
    '14113BE4FDA661C3': {
        '5C981B3D74C23BD3': {
            hidden: false,
        },
    },
};

'''
'''--- __mocks__/Store.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { createLocalVue } from '@vue/test-utils';
import Vuex from 'vuex';

const localVue = createLocalVue();
localVue.use(Vuex);

/**
 * Create a fake store
 * @internal
 * @param {any} storeOptions
 */
export const createStore = (storeOptions?: any) => {
    const store = new Vuex.Store(storeOptions);
    store.dispatch = jest.fn();
    store.commit = jest.fn();
    return store;
};

'''
'''--- __mocks__/mosaics.ts ---
export const mosaicsMock = [
    {
        addressRawPlain: 'TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'symbol.xym',
        isCurrencyMosaic: true,
        balance: 15000000,
        mosaicIdHex: '519FC24B9223E0B4',
        divisibility: 6,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 0,
        height: 1,
        supply: 7841148552567058,
    },
    {
        addressRawPlain: 'TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '2C56C7D764F17B09',
        divisibility: 0,
        transferable: true,
        supplyMutable: true,
        restrictable: true,
        duration: 0,
        height: 66506,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'root-name-space',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '534CD11F6D984B4B',
        divisibility: 5,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 82104,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '119C8A107ACADD5F',
        divisibility: 3,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 94672,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TDARSPFSZVLYGBOHGOVWIKAZ4FGGDPGZ3DSS7CQ',
        ownerRawPlain: 'TCEPWMC37ZGXOGOXQOAGDYPI7YH65HLXIMLKNOQ',
        name: 'symbol.xym',
        isCurrencyMosaic: true,
        balance: 958700624,
        mosaicIdHex: '519FC24B9223E0B4',
        divisibility: 6,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 0,
        height: 1,
        supply: 7841148552567058,
    },
    {
        addressRawPlain: 'TDARSPFSZVLYGBOHGOVWIKAZ4FGGDPGZ3DSS7CQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '2C56C7D764F17B09',
        divisibility: 0,
        transferable: true,
        supplyMutable: true,
        restrictable: true,
        duration: 0,
        height: 66506,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TDARSPFSZVLYGBOHGOVWIKAZ4FGGDPGZ3DSS7CQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'root-name-space',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '534CD11F6D984B4B',
        divisibility: 5,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 82104,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TDARSPFSZVLYGBOHGOVWIKAZ4FGGDPGZ3DSS7CQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '119C8A107ACADD5F',
        divisibility: 3,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 94672,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        ownerRawPlain: 'TCEPWMC37ZGXOGOXQOAGDYPI7YH65HLXIMLKNOQ',
        name: 'symbol.xym',
        isCurrencyMosaic: true,
        balance: 1819951406,
        mosaicIdHex: '519FC24B9223E0B4',
        divisibility: 6,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 0,
        height: 1,
        supply: 7841148552567058,
    },
    {
        addressRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 500000000,
        mosaicIdHex: '2C56C7D764F17B09',
        divisibility: 0,
        transferable: true,
        supplyMutable: true,
        restrictable: true,
        duration: 0,
        height: 66506,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'root-name-space',
        isCurrencyMosaic: false,
        balance: 500000000,
        mosaicIdHex: '534CD11F6D984B4B',
        divisibility: 5,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 82104,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 500000000,
        mosaicIdHex: '119C8A107ACADD5F',
        divisibility: 3,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 94672,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TCEPWMC37ZGXOGOXQOAGDYPI7YH65HLXIMLKNOQ',
        name: 'symbol.xym',
        isCurrencyMosaic: true,
        balance: 979900272,
        mosaicIdHex: '519FC24B9223E0B4',
        divisibility: 6,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 0,
        height: 1,
        supply: 7841148552567058,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '2C56C7D764F17B09',
        divisibility: 0,
        transferable: true,
        supplyMutable: true,
        restrictable: true,
        duration: 0,
        height: 66506,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'root-name-space',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '534CD11F6D984B4B',
        divisibility: 5,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 82104,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '119C8A107ACADD5F',
        divisibility: 3,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 94672,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TCEPWMC37ZGXOGOXQOAGDYPI7YH65HLXIMLKNOQ',
        name: 'symbol.xym',
        isCurrencyMosaic: true,
        balance: 998000304,
        mosaicIdHex: '519FC24B9223E0B4',
        divisibility: 6,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 0,
        height: 1,
        supply: 7841148552567058,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '2C56C7D764F17B09',
        divisibility: 0,
        transferable: true,
        supplyMutable: true,
        restrictable: true,
        duration: 0,
        height: 66506,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        name: 'root-name-space',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '534CD11F6D984B4B',
        divisibility: 5,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 82104,
        supply: 500000000,
    },
    {
        addressRawPlain: 'TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY',
        ownerRawPlain: 'TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ',
        isCurrencyMosaic: false,
        balance: 0,
        mosaicIdHex: '119C8A107ACADD5F',
        divisibility: 3,
        transferable: true,
        supplyMutable: false,
        restrictable: false,
        duration: 10000,
        height: 94672,
        supply: 500000000,
    },
];

'''
'''--- __mocks__/multisigGraphInfo.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { MultisigAccountGraphInfo, MultisigAccountInfo, NetworkType, PublicAccount } from 'symbol-sdk';

export const multisigGraphInfoPublicAccount1 = PublicAccount.createFromPublicKey(
    'B694186EE4AB0558CA4AFCFDD43B42114AE71094F5A1FC4A913FE9971CACD21D',
    NetworkType.MIJIN_TEST,
);
export const multisigGraphInfoPublicAccount2 = PublicAccount.createFromPublicKey(
    'CF893FFCC47C33E7F68AB1DB56365C156B0736824A0C1E273F9E00B8DF8F01EB',
    NetworkType.MIJIN_TEST,
);
export const multisigGraphInfoPublicAccount3 = PublicAccount.createFromPublicKey(
    '68B3FBB18729C1FDE225C57F8CE080FA828F0067E451A3FD81FA628842B0B763',
    NetworkType.MIJIN_TEST,
);
export const multisigGraphInfoPublicAccount4 = PublicAccount.createFromPublicKey(
    'DAB1C38C3E1642494FCCB33138B95E81867B5FB59FC4277A1D53761C8B9F6D14',
    NetworkType.MIJIN_TEST,
);
export const multisigGraphInfoPublicAccount5 = PublicAccount.createFromPublicKey(
    '1674016C27FE2C2EB5DFA73996FA54A183B38AED0AA64F756A3918BAF08E061B',
    NetworkType.MIJIN_TEST,
);

export const multisigGraphInfoPublicAccounts = [
    multisigGraphInfoPublicAccount1,
    multisigGraphInfoPublicAccount2,
    multisigGraphInfoPublicAccount3,
    multisigGraphInfoPublicAccount4,
    multisigGraphInfoPublicAccount5,
];

const multisigAccountGraphInfoDTO = {
    level: -1,
    multisigEntries: [
        {
            multisig: {
                accountAddress: multisigGraphInfoPublicAccount1.address,
                cosignatoryAddresses: [
                    multisigGraphInfoPublicAccount2.address,
                    multisigGraphInfoPublicAccount3.address,
                    multisigGraphInfoPublicAccount4.address,
                ],
                minApproval: 3,
                minRemoval: 3,
                multisigAddresses: [multisigGraphInfoPublicAccount5.address],
            },
        },
    ],
};

export const multisigEntries1 = multisigAccountGraphInfoDTO.multisigEntries.map(
    (multisigAccountInfoDTO) =>
        new MultisigAccountInfo(
            multisigAccountInfoDTO.multisig.accountAddress,
            multisigAccountInfoDTO.multisig.minApproval,
            multisigAccountInfoDTO.multisig.minRemoval,
            multisigAccountInfoDTO.multisig.cosignatoryAddresses,
            multisigAccountInfoDTO.multisig.multisigAddresses,
        ),
);

const multisigAccountGraphInfoDTO2 = {
    level: -2,
    multisigEntries: [
        {
            multisig: {
                accountAddress: multisigGraphInfoPublicAccount5.address,
                cosignatoryAddresses: [multisigGraphInfoPublicAccount1.address],
                minApproval: 1,
                minRemoval: 1,
                multisigAddresses: [],
            },
        },
    ],
};

export const multisigEntries2 = multisigAccountGraphInfoDTO2.multisigEntries.map(
    (multisigAccountInfoDTO) =>
        new MultisigAccountInfo(
            multisigAccountInfoDTO.multisig.accountAddress,
            multisigAccountInfoDTO.multisig.minApproval,
            multisigAccountInfoDTO.multisig.minRemoval,
            multisigAccountInfoDTO.multisig.cosignatoryAddresses,
            multisigAccountInfoDTO.multisig.multisigAddresses,
        ),
);

const multisigAccounts = new Map<number, MultisigAccountInfo[]>();
multisigAccounts.set(multisigAccountGraphInfoDTO.level, multisigEntries1);

multisigAccounts.set(multisigAccountGraphInfoDTO2.level, multisigEntries2);

export const multisigGraphInfo1 = new MultisigAccountGraphInfo(multisigAccounts);

'''
'''--- __mocks__/profiles.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType } from 'symbol-sdk';
import { ProfileModel } from '@/core/database/entities/ProfileModel';

const TEST_PROFILES = {
    profile1: {
        generationHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
        profileName: 'profile1',
        hint: 'password is password',
        networkType: NetworkType.MIJIN_TEST,
        password: '0b831096cf25adbd7324ad2dbb3d99a829b40b53c6f76dd50fb2ef56fceded2f2kixTXdr/q/ci5PPwWVCiA==',
        accounts: "['WalletsModel2']",
        seed:
            '4fcd1e1b896551f68c3d5314be1f8d2fad48d7b492e65ecf4ac1ac2dfc9749a08CyBF9Q5APg07qXEMWQzQIcN+/KBekkw0T2hBPfdAd5VxXkdzWikv46dIaYxyHCn9hdr839ITfgIWYnAiE54jRWfFKkDvyEZL4pchX6mAqCcc0Ew9VGFfHjKStHWFeBezrhp/MlNeSw/EbxiCFo5C2pmeSuGz5NABUXT+BoDi62gB8r6gyF9hjB8J7Lz6D4SBf6J4cvj9krCXzkkWX1jqg==',
    },
};

export const getTestProfile = (name: string): ProfileModel => {
    if (!(name in TEST_PROFILES)) {
        throw new Error('Test account with name: ' + name + ' could not be found in __mocks__/accounts.ts');
    }

    return TEST_PROFILES[name];
};

'''
'''--- __tests__/components/AccountSelectorField.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { getComponent } from '@MOCKS/Components';
import AccountStore from '@/store/Account';
// @ts-ignore
import AccountSelectorField from '@/components/AccountSelectorField/AccountSelectorField.vue';
import { AccountModel } from '@/core/database/entities/AccountModel';

describe('components/AccountSelectorField', () => {
    describe('getter for property "currentAccountIdentifier" should', () => {
        test('return empty string given no currentAccount and no value', () => {
            // prepare
            const wrapper = getComponent(
                AccountSelectorField,
                { account: AccountStore },
                {
                    currentAccount: null,
                },
            );
            const component = wrapper.vm as AccountSelectorField;

            // act
            const actual = component.currentAccountIdentifier;

            // assert
            expect(actual).toBeDefined();
            expect(actual.length).toBe(0);
        });

        test('return account identifier given value', () => {
            // prepare
            const account = { id: '5678' } as AccountModel;
            const wrapper = getComponent(
                AccountSelectorField,
                { account: AccountStore },
                {},
                {
                    value: account.id,
                },
            );
            const component = wrapper.vm as AccountSelectorField;

            // act
            const actual = component.currentAccountIdentifier;

            // assert
            expect(actual).toBeDefined();
            expect(actual.length).toBe(4);
            expect(actual).toBe('5678');
        });
    });

    describe('setter for property "currentAccountIdentifier" should', () => {
        test('do nothing given empty identifier', () => {
            // prepare
            const wrapper = getComponent(AccountSelectorField, { account: AccountStore }, {});
            const component = wrapper.vm as AccountSelectorField;

            // act
            component.currentAccountIdentifier = '';
            expect(wrapper.vm.$store.dispatch).not.toHaveBeenCalled();
        });
    });

    describe('getter for property "currentAccounts" should', () => {
        test('return empty array given no knownAccounts', () => {
            // prepare
            const wrapper = getComponent(
                AccountSelectorField,
                { account: AccountStore },
                {
                    knownAccounts: [],
                },
            );
            const component = wrapper.vm as AccountSelectorField;

            // act
            const actual = component.currentAccounts;

            // assert
            expect(actual).toBeDefined();
            expect(actual.length).toBe(0);
        });
    });
});

'''
'''--- __tests__/components/AmountInput.spec.ts ---
//@ts-ignore
import AmountInput from '@/components/AmountInput/AmountInput.vue';
import { ValidationProvider, extend, validate } from 'vee-validate';

import { mosaicsMock } from '@MOCKS/mosaics';
import Vuex from 'vuex';
import { mount, createLocalVue } from '@vue/test-utils';
import flushPromises from 'flush-promises';
import VueI18n, { Values } from 'vue-i18n';
import i18n from '@/language/index';
import { StandardValidationRules } from '@/core/validation/StandardValidationRules';
import { MaxDecimalsValidator } from '@/core/validation/validators';

StandardValidationRules.register();
extend('maxDecimals', {
    validate: (value, args: any) => {
        const { maxDecimalNumber } = args;
        return MaxDecimalsValidator.validate(value, maxDecimalNumber);
    },
    message: (fieldName: string, values: Values) => `${i18n.t('max_decimal_number_error', values)}`,
    params: ['maxDecimalNumber'],
});
const localVue = createLocalVue();
localVue.component('ValidationProvider', ValidationProvider);
localVue.use(Vuex);
localVue.use(VueI18n);
const mosaicModule = {
    namespaced: true,
    getters: {
        mosaics: () => {
            return mosaicsMock;
        },
    },
};
const store = new Vuex.Store({
    modules: {
        mosaic: mosaicModule,
    },
});
const options = {
    localVue,
    i18n,
    store,
    propsData: {
        mosaicHex: '519FC24B9223E0B4',
    },
    stubs: ['Tooltip'],
    sync: false,
};
const options2 = {
    localVue,
    i18n,
    store,
    propsData: {
        mosaicHex: '534CD11F6D984B4B',
    },
    stubs: ['Tooltip'],
    sync: false,
};
let wrapper;
let wrapper2;

describe('AmountInput', () => {
    beforeEach(() => {
        wrapper = mount(AmountInput, options);
        wrapper2 = mount(AmountInput, options2);
    });
    afterEach(() => {
        wrapper.destroy();
        wrapper2 = mount(AmountInput, options2);
    });
    test.skip('input correctly', async () => {
        wrapper.setProps({
            value: '10.12345678',
        });
        await flushPromises();
        expect((wrapper.vm as AmountInput).relativeValue).toBe('10.12345678');
    });
    test.skip('output correctly', async () => {
        wrapper.find('.input-style').setValue('10.1234567');
        await flushPromises();
        expect(wrapper.emitted().input[0]).toEqual(['10.1234567']);
    });
    test("divisibility of the mosaic '519FC24B9223E0B4' is 6", async () => {
        const rule = wrapper.vm.validationRules.amount;
        const falseResult = await validate('10.1234567', rule);
        expect(falseResult.valid).toBeFalsy();
        const rightResult = await validate('10.123456', rule);
        expect(rightResult.valid).toBeTruthy();
    });
    test("divisibility of the mosaic '534CD11F6D984B4B' is 5 ", async () => {
        wrapper2.setProps({
            mosaicHex: '534CD11F6D984B4B',
        });
        await flushPromises();
        const rule = wrapper2.vm.validationRules.amount;
        const falseResult = await validate('10.123456', rule);
        expect(falseResult.valid).toBeFalsy();
        const rightResult = await validate('10.12345', rule);
        expect(rightResult.valid).toBeTruthy();
    });
});

'''
'''--- __tests__/components/ButtonCopyToClipboard.spec.ts ---
import i18n from '@/language/index';
import Vuex from 'vuex';
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
import { shallowMount, createLocalVue } from '@vue/test-utils';
import { UIHelpers } from '@/core/utils/UIHelpers';
const localVue = createLocalVue();

const options = {
    localVue,
    Vuex,
    i18n,
    propsData: {
        value: '123',
    },
    mocks: {
        $store: {
            dispatch: jest.fn(),
        },
    },
};
const wrapper = shallowMount(ButtonCopyToClipboard, options);

const vm = wrapper.vm as ButtonCopyToClipboard;
describe('ButtonCopyToClipboard', () => {
    test('receive a property "value" correctly', () => {
        expect(vm.value).toBe('123');
    });
    test('Click on Button should call method "copyToClipboard" when prop "value" exists', () => {
        UIHelpers.copyToClipboard = jest.fn();
        wrapper.find('Button').trigger('click');
        expect(UIHelpers.copyToClipboard).toBeCalledWith('123');
    });
    test('Click on Button should call method "copyToClipboard" when prop "value" does not exists', () => {
        UIHelpers.copyToClipboard = jest.fn();
        wrapper.setProps({ value: null });
        wrapper.find('Button').trigger('click');
        expect(UIHelpers.copyToClipboard).not.toBeCalled();
    });
});

'''
'''--- __tests__/components/FormLabel.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { shallowMount } from '@vue/test-utils';
// @ts-ignore
import FormLabel from '@/components/FormLabel/FormLabel';

describe('FormLabel', () => {
    test('default slot should be load', () => {
        const defaultSlot = '<div>this is a test slot</div>';
        const wrapper = shallowMount(FormLabel, {
            slots: {
                default: defaultSlot,
            },
        });
        expect(wrapper.vm.$el.textContent).toMatch('this is a test slot');
        wrapper.destroy();
    });
});

'''
'''--- __tests__/components/FormRow.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { shallowMount } from '@vue/test-utils';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow';

describe('FormRow', () => {
    test('default slot should be load', () => {
        const defaultSlot = '<div>this is a test label</div>';
        const wrapper = shallowMount(FormRow, {
            slots: {
                label: defaultSlot,
            },
        });
        expect(wrapper.vm.$el.textContent).toMatch('this is a test label');
        wrapper.destroy();
    });

    test('inputs slot should be laod', () => {
        const inputs = '<input type="text" name="name" value ="1" />';
        const wrapper = shallowMount(FormRow, {
            propsData: {
                whitelisted: true,
            },
            slots: {
                inputs: inputs,
            },
        });
        expect(wrapper.vm.$el.querySelector('input').value).toBe('1');
        wrapper.destroy();
    });
});

'''
'''--- __tests__/components/FormWrapper.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { shallowMount, createLocalVue } from '@vue/test-utils';
import i18n from 'vue-i18n';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper';
// @ts-ignore
import DisabledFormOverlay from '@/components/DisabledFormOverlay/DisabledFormOverlay';
const localVue = createLocalVue();
localVue.use(i18n);

describe('FormWrapper', () => {
    test('default slot should be load', () => {
        const defaultSlot = '<div>this is a test slot</div>';
        const wrapper = shallowMount(FormWrapper, {
            slots: {
                default: defaultSlot,
            },
        });
        expect(wrapper.vm.$el.textContent).toMatch('this is a test slot');
        wrapper.destroy();
    });

    test('DisabledFormOverlay should be laod when whitelisted is true', () => {
        const wrapper = shallowMount(FormWrapper, {
            localVue,
            propsData: {
                whitelisted: true,
            },
            slots: {
                DisabledFormOverlay,
            },
        });
        expect(wrapper.find('whitelisted').selector).toBe('whitelisted');
        wrapper.destroy();
    });
});

'''
'''--- __tests__/components/MosaicInputManager.spec.ts ---
import { MosaicInputsManager } from '@/views/forms/FormTransferTransaction/MosaicInputsManager.ts';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

export const mockMosaic1: MosaicModel = {
    mosaicIdHex: '619CE7E50DB644DE',
    balance: 1,
} as MosaicModel;

export const mockMosaic2: MosaicModel = {
    mosaicIdHex: '28A59CC8B0C9E4DD',
    balance: 1,
} as MosaicModel;

export const mockMosaic3: MosaicModel = {
    mosaicIdHex: '2D58F9BF5F8C014D',
    balance: 1,
} as MosaicModel;

const mockMosaics = [mockMosaic1, mockMosaic2, mockMosaic3];
const mockMosaicHexIds = mockMosaics.map(({ mosaicIdHex }) => mosaicIdHex);

describe('components/MosaicInputManager', () => {
    describe('initialize() should', () => {
        test('return an instantiated object', () => {
            expect(MosaicInputsManager.initialize(mockMosaics)).toBeInstanceOf(MosaicInputsManager);
        });
    });

    describe('hasFreeSlots() should', () => {
        test('return true after initialization with mosaics provided', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize(mockMosaics);
            expect(mosaicInputsManager.hasFreeSlots()).toBeTruthy();
        });

        test('return false after initialization with empty array', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize([]);
            expect(mosaicInputsManager.hasFreeSlots()).toBeFalsy();
        });
    });

    describe('setSlot() should', () => {
        test('throw if a an unknown id is provided', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize([]);
            expect(() => mosaicInputsManager.setSlot('wrongHexId', 1)).toThrowError();
        });

        test('throw if a mosaic is already affected to the slot', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize(mockMosaics);
            mosaicInputsManager.setSlot(mockMosaicHexIds[1], 2);
            expect(() => mosaicInputsManager.setSlot(mockMosaicHexIds[1], 1)).toThrowError();
        });
    });

    describe('getMosaicsBySlot() should', () => {
        test('return all mosaics after initialization with mosaics provided, for any slot', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize(mockMosaics);
            expect(mosaicInputsManager.getMosaicsBySlot(0)).toStrictEqual(mockMosaicHexIds);
            expect(mosaicInputsManager.getMosaicsBySlot(1)).toStrictEqual(mockMosaicHexIds);
            expect(mosaicInputsManager.getMosaicsBySlot(2)).toStrictEqual(mockMosaicHexIds);
        });

        test('return an empty array after after initialization with empty array, for any slot', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize([]);
            expect(mosaicInputsManager.getMosaicsBySlot(0)).toStrictEqual([]);
            expect(mosaicInputsManager.getMosaicsBySlot(1)).toStrictEqual([]);
            expect(mosaicInputsManager.getMosaicsBySlot(2)).toStrictEqual([]);
        });

        describe('contain expected mosaics after affectations', () => {
            const mosaicInputsManager = MosaicInputsManager.initialize(mockMosaics);
            mosaicInputsManager.setSlot(mockMosaicHexIds[1], 2);

            const slot1Mosaics = mosaicInputsManager.getMosaicsBySlot(1);
            const slot2Mosaics = mosaicInputsManager.getMosaicsBySlot(2);

            expect(slot1Mosaics).toStrictEqual([mockMosaicHexIds[0], mockMosaicHexIds[2]]);
            expect(slot2Mosaics).toStrictEqual([mockMosaicHexIds[1], mockMosaicHexIds[0], mockMosaicHexIds[2]]);

            mosaicInputsManager.unsetSlot(2);
            mosaicInputsManager.setSlot(mockMosaicHexIds[1], 1);
            const slot1Mosaics2 = mosaicInputsManager.getMosaicsBySlot(1);
            const slot2Mosaics2 = mosaicInputsManager.getMosaicsBySlot(2);

            expect(slot1Mosaics2).toStrictEqual([mockMosaicHexIds[1], mockMosaicHexIds[0], mockMosaicHexIds[2]]);
            expect(slot2Mosaics2).toStrictEqual([mockMosaicHexIds[0], mockMosaicHexIds[2]]);
        });
    });
});

'''
'''--- __tests__/components/MultisigCosignatoriesDisplay.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { shallowMount } from '@vue/test-utils';
// @ts-ignore
import MultisigCosignatoriesDisplay from '@/components/MultisigCosignatoriesDisplay/MultisigCosignatoriesDisplay';
import { MultisigAccountInfo, NetworkType, PublicAccount } from 'symbol-sdk';
import i18n from '@/language/index';

const networkType = NetworkType.MAIN_NET;
const account1 = PublicAccount.createFromPublicKey('B694186EE4AB0558CA4AFCFDD43B42114AE71094F5A1FC4A913FE9971CACD21D', networkType);
const account2 = PublicAccount.createFromPublicKey('CF893FFCC47C33E7F68AB1DB56365C156B0736824A0C1E273F9E00B8DF8F01EB', networkType);
const account3 = PublicAccount.createFromPublicKey('DAB1C38C3E1642494FCCB33138B95E81867B5FB59FC4277A1D53761C8B9F6D14', networkType);
const account4 = PublicAccount.createFromPublicKey('1674016C27FE2C2EB5DFA73996FA54A183B38AED0AA64F756A3918BAF08E061B', networkType);
const multisigInfo = new MultisigAccountInfo(account1.address, 1, 1, [account2.address, account3.address], []);

describe('MultisigCosignatoriesDisplay', () => {
    test('Getters should return correct values when no modifications', () => {
        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {},
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        expect(component.addModifications).toEqual([]);
        expect(component.removeModifications).toEqual([]);
        expect(component.cosignatories).toEqual([{ address: account2.address }, { address: account3.address }]);

        wrapper.destroy();
    });

    test('Getters should return correct values when there are modifications', () => {
        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {
                    [account4.address.plain()]: { cosignatory: account4.address, addOrRemove: 'add' },
                    [account3.address.plain()]: { cosignatory: account3.address, addOrRemove: 'remove' },
                },
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        expect(component.addModifications).toEqual([{ address: account4.address }]);
        expect(component.removeModifications).toEqual([{ address: account3.address }]);
        expect(component.cosignatories).toEqual([{ address: account2.address }]);

        wrapper.destroy();
    });

    test('Should dispatch an error when adding a cosigner that is already one', () => {
        const mockStoreDispatch = jest.fn();

        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {},
            },
            mocks: {
                $store: {
                    dispatch: mockStoreDispatch,
                },
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        component.onAddCosignatory(account2.address);

        expect(mockStoreDispatch).toHaveBeenCalledWith('notification/ADD_WARNING', 'warning_already_a_cosignatory');
        wrapper.destroy();
    });

    test('Should dispatch an error when adding a cosigner has already been added', () => {
        const mockStoreDispatch = jest.fn();

        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {
                    [account4.address.plain()]: { cosignatory: account4.address, addOrRemove: 'add' },
                },
            },
            mocks: {
                $store: {
                    dispatch: mockStoreDispatch,
                },
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        component.onAddCosignatory(account4.address);

        expect(mockStoreDispatch).toHaveBeenCalledWith('notification/ADD_WARNING', 'warning_already_a_cosignatory');
        wrapper.destroy();
    });

    test('Should emit when adding a cosigner', () => {
        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {},
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        component.onAddCosignatory(account4.address);
        expect(wrapper.emitted('add')).toBeTruthy();
        expect(wrapper.emitted().add[0]).toEqual([account4.address]);
        wrapper.destroy();
    });

    test('Should emit when removing a cosigner', () => {
        const wrapper = shallowMount(MultisigCosignatoriesDisplay, {
            i18n,
            propsData: {
                multisig: multisigInfo,
                modifiable: true,
                cosignatoryModifications: {},
            },
        });

        const component = wrapper.vm as MultisigCosignatoriesDisplay;

        component.onRemoveCosignatory(account2.address);
        expect(wrapper.emitted('remove')).toBeTruthy();
        expect(wrapper.emitted().remove[0]).toEqual([account2.address]);
        wrapper.destroy();
    });
});

'''
'''--- __tests__/components/NavigationLinks/NavigationLinks.spec.ts ---
//@ts-ignore
import NavigationLinks from '@/components/NavigationLinks/NavigationLinks.vue';
import { shallowMount, createLocalVue, ThisTypedShallowMountOptions } from '@vue/test-utils';
import { Vue } from 'vue-property-decorator';
const localVue = createLocalVue();
const options: ThisTypedShallowMountOptions<Vue> = {
    localVue,
    propsData: {
        direction: 'horizontal',
    },
};
let wrapper;
beforeEach(() => {
    wrapper = shallowMount(NavigationLinks, options);
});
afterEach(() => {
    wrapper.destroy();
});
describe('NavigationLinks should be rendered correctly with', () => {
    it("prop 'horizontal'", () => {
        expect(wrapper.find('.symbol-tab-container').classes()).toEqual(['symbol-tab-container', 'horizontal']);
    });
    it("with prop 'vertical'", async () => {
        wrapper.setProps({ direction: 'vertical' });
        await Vue.nextTick();
        expect(wrapper.find('.symbol-tab-container').classes()).toEqual(['symbol-tab-container', 'vertical']);
    });
});

'''
'''--- __tests__/components/PeerSelector.spec.ts ---
//@ts-ignore
import PeerSelector from '@/components/PeerSelector/PeerSelector.vue';
import { createLocalVue, ThisTypedShallowMountOptions, mount } from '@vue/test-utils';
import Vuex from 'vuex';
import i18n from '@/language';
import VueI18n from 'vue-i18n';
import { NetworkService } from '@/services/NetworkService';
import { networkConfig } from '@/config';
// configuration
let wrapper;
let vm;
let options: ThisTypedShallowMountOptions<Vue>;
const localVue = createLocalVue();
localVue.use(Vuex);
localVue.use(VueI18n);
localVue.directive('auto-scroll', {
    componentUpdated: function (el, { value }) {
        if (value && value.length) {
            const className = value.charAt(0) === '.' ? value : '.' + value;
            if (el.querySelector(className)) {
                const offsetTop = (el.querySelector(className) as HTMLElement).offsetTop;
                el.scrollTo(0, offsetTop);
            }
        }
    },
});
beforeEach(() => {
    const networkModule = {
        namespaced: true,
        getters: {
            currentPeerInfo: () => {
                return { url: 'www.google.com', friendlyName: 'google' };
            },
            isConnected: () => true,
            networkType: () => null,
            repositoryFactory: () => NetworkService.createRepositoryFactory(networkConfig.defaultNodeUrl),
            generationHash: () => 123,
            knowNodes: () => [
                { url: 'http://api-01.us-west-1.0941-v1.symboldev.network:3000', friendlyName: '614084b4', isDefault: true },
                {
                    url: 'http://api-01.ap-southeast-1.0941-v1.symboldev.network:3000',
                    friendlyName: '08b0274c',
                    isDefault: true,
                },
                { url: 'http://api-01.eu-west-1.0941-v1.symboldev.network:3000', friendlyName: 'c44a95bd', isDefault: true },
                { url: 'http://api-02.eu-central-1.0941-v1.symboldev.network:3000', friendlyName: '7a26944a', isDefault: true },
                {
                    url: 'http://api-02.ap-northeast-1.0941-v1.symboldev.network:3000',
                    friendlyName: '4d08a4d9',
                    isDefault: true,
                },
                { url: 'http://api-01.eu-central-1.0941-v1.symboldev.network:3000', friendlyName: 'a08950e0', isDefault: true },
                {
                    url: 'http://api-01.ap-northeast-1.0941-v1.symboldev.network:3000',
                    friendlyName: 'API AP North-East 1',
                    isDefault: true,
                },
            ],
        },
    };
    const store = new Vuex.Store({
        modules: {
            network: networkModule,
        },
    });
    options = {
        localVue,
        i18n,
        store,
        stubs: ['Poptip', 'i-col', 'Row', 'Icon'],
    };
    wrapper = mount(PeerSelector, options);
    vm = wrapper.vm;
});
describe('PeerSelector should', () => {
    it("correctly get value of 'networkTypeText' ", () => {
        expect(vm.isConnected).toBeTruthy();
        expect(vm.networkType).toBeFalsy();
        expect(vm.networkTypeText).toBe('Loading...');
    });
    it("correctly get value of 'peersList'", () => {
        expect(vm.peersList.length).toBe(7);
    });
});

'''
'''--- __tests__/components/Settings.spec.ts ---
import { createLocalVue, shallowMount, ThisTypedShallowMountOptions } from '@vue/test-utils';
import Vuex from 'vuex';
import { Icon } from 'view-design';
//@ts-ignore
import Settings from '@/components/Settings/Settings.vue';
const localVue = createLocalVue();
localVue.use(Vuex);
/* fake module */
const profileModule = {
    namespaced: true,
    getters: {
        isSettingsVisible: () => true,
    },
};
const store = new Vuex.Store({
    modules: {
        profile: profileModule,
    },
});
store.commit = jest.fn();
const options: ThisTypedShallowMountOptions<Vue> = {
    localVue,
    store,
    stubs: { Icon },
};

describe('Settings', () => {
    test('trigger commit', () => {
        const wrapper = shallowMount(Settings, options);
        wrapper.find('.ivu-icon-ios-settings').trigger('click');
        expect(wrapper.vm.$store.commit).toBeCalledWith('profile/toggleSettings');
        wrapper.destroy();
    });
});

'''
'''--- __tests__/components/TransactionList/TransactionListFilters/TransactionListFilter.spec.ts ---
import { Address } from 'symbol-sdk';
//@ts-ignore
import TransactionListFilters from '@/components/TransactionList/TransactionListFilters/TransactionListFilters.vue';
import { getComponent } from '@MOCKS/Components';
import AccountStore from '@/store/Account';
import TransactionStore from '@/store/Transaction';
let wrapper;
let vm;
beforeEach(() => {
    wrapper = getComponent(
        TransactionListFilters,
        { account: AccountStore, transaction: TransactionStore },
        { currentAccount: null, signers: [] },
        {},
        {},
    );
    vm = wrapper.vm as TransactionListFilters;
});
afterEach(() => {
    wrapper.destroy();
});
const addr = Address.createFromRawAddress('TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY');
describe('TransactionListFilters', () => {
    test("should call the 'account/SET_CURRENT_SIGNER' with address", () => {
        vm.onSignerSelectorChange('TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY');
        expect(vm.$store.dispatch).toBeCalledWith('account/SET_CURRENT_SIGNER', { address: addr });
    });
    test("should not call the 'account/SET_CURRENT_SIGNER' without address", () => {
        vm.onSignerSelectorChange();
        expect(vm.$store.dispatch).not.toBeCalled();
    });
});

'''
'''--- __tests__/core/validation/validators/UrlValidator.spec.ts ---
import { UrlValidator } from '@/core/validation/validators';

describe('UrlValidator.validate should', () => {
    describe('return false when passing in', () => {
        test('http://', () => {
            expect(UrlValidator.validate('http')).toBeFalsy();
        });
        test('https://', () => {
            expect(UrlValidator.validate('http://')).toBeFalsy();
        });
        test('https://foo', () => {
            expect(UrlValidator.validate('https://q')).toBeFalsy();
        });
        test('https://foo..', () => {
            expect(UrlValidator.validate('https://foo..')).toBeFalsy();
        });
        test('https://foo.-', () => {
            expect(UrlValidator.validate('https://foo.-')).toBeFalsy();
        });
        test('https://foo--', () => {
            expect(UrlValidator.validate('https://foo--')).toBeFalsy();
        });
        test('https://192.0.0', () => {
            expect(UrlValidator.validate('https://192.0.0')).toBeFalsy();
        });
        test('https://goo_gle.com', () => {
            expect(UrlValidator.validate('https://goo_gle.com')).toBeFalsy();
        });
        test('localhost', () => {
            expect(UrlValidator.validate('localhost')).toBeFalsy();
        });
    });
    describe('return true when passing in', () => {
        test('google.com', () => {
            expect(UrlValidator.validate('google.com')).toBeTruthy();
        });
        test('http://google.com', () => {
            expect(UrlValidator.validate('http://google.com')).toBeTruthy();
        });
        test('https://google.com', () => {
            expect(UrlValidator.validate('https://google.com')).toBeTruthy();
        });
        test('https://goo-gle.com', () => {
            expect(UrlValidator.validate('https://goo-gle.com')).toBeTruthy();
        });
        test('https://goo.gle.com', () => {
            expect(UrlValidator.validate('https://goo.gle.com')).toBeTruthy();
        });
        test('192.0.0.1:8080', () => {
            expect(UrlValidator.validate('192.0.0.1:8080')).toBeTruthy();
        });
        test('localhost:8080', () => {
            expect(UrlValidator.validate('localhost:8080')).toBeTruthy();
        });
        test('http://api-01.eu-west-1.0941-v1.symboldev.network:3000', () => {
            expect(UrlValidator.validate('http://api-01.eu-west-1.0941-v1.symboldev.network:3000')).toBeTruthy();
        });
    });
});

'''
'''--- __tests__/database/backends/NetworkBasedObjectStorage.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkBasedObjectStorage } from '@/core/database/backends/NetworkBasedObjectStorage';
import { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';

const getStorage = () => new NetworkBasedObjectStorage<number>(new SimpleObjectStorage('SomeStorageKey'));

describe('database/NetworkBasedObjectStorage.spec ==>', () => {
    describe('constructor() should', () => {
        test('create instance given no data', () => {
            const storage = getStorage();
            expect(storage).toBeDefined();
        });

        test('Get/Set/Delete same generation hash', () => {
            const storage = getStorage();
            const generationHash = 'abc';
            expect(storage.get(generationHash)).toBeUndefined();
            storage.set(generationHash, 123);
            expect(storage.get(generationHash)).toBe(123);
            storage.set(generationHash, 456);
            expect(storage.get(generationHash)).toBe(456);
            storage.remove(generationHash);
            storage.remove(generationHash);
            storage.remove(generationHash);
            expect(storage.get(generationHash)).toBeUndefined();
        });
    });

    function delay(ms: number) {
        return new Promise((resolve) => setTimeout(resolve, ms));
    }

    test('Get/Set/Delete same generation hash different generation hash', async () => {
        const storage = getStorage();
        const generationHash1 = 'abc1';
        const generationHash2 = 'abc2';
        expect(storage.get(generationHash1)).toBeUndefined();
        expect(storage.get(generationHash2)).toBeUndefined();
        storage.set(generationHash1, 123);
        await delay(1);
        expect(storage.getLatest()).toBe(123);
        expect(storage.get(generationHash1)).toBe(123);
        storage.set(generationHash2, 345);

        await delay(1);
        expect(storage.getLatest()).toBe(345);

        expect(storage.get(generationHash2)).toBe(345);
        expect(storage.get(generationHash1)).toBe(123);
        storage.set(generationHash1, 456);
        await delay(1);
        expect(storage.getLatest()).toBe(456);
        expect(storage.get(generationHash1)).toBe(456);
        storage.remove(generationHash1);
        storage.remove(generationHash1);
        storage.remove(generationHash1);
        expect(storage.get(generationHash1)).toBeUndefined();

        storage.set(generationHash2, 456);
        await delay(1);
        expect(storage.get(generationHash2)).toBe(456);
        storage.remove(generationHash2);
        storage.remove(generationHash2);
        storage.remove(generationHash2);
        expect(storage.get(generationHash2)).toBeUndefined();
    });
});

'''
'''--- __tests__/database/backends/SimpleObjectStorage.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';

const getStorage = () => new SimpleObjectStorage<number>('SomeStorageKey');

describe('database/SimpleObjectStorage.spec ==>', () => {
    describe('constructor() should', () => {
        test('create instance given no data', () => {
            const storage = getStorage();
            expect(storage).toBeDefined();
        });

        test('Get/Set/Delete', () => {
            const storage = getStorage();
            expect(storage.get()).toBeUndefined();
            storage.set(123);
            expect(storage.get()).toBe(123);
            storage.set(456);
            expect(storage.get()).toBe(456);
            storage.remove();
            expect(storage.get()).toBeUndefined();
        });
    });
});

'''
'''--- __tests__/database/backends/VersionedObjectStorage.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { Migration, VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';

describe('database/SimpleObjectStorage.spec ==>', () => {
    describe('constructor() should', () => {
        test('Get/Set/Delete', () => {
            const storageKey = 'someTable';
            const storage1 = new VersionedObjectStorage<number>(storageKey);
            expect(storage1.get()).toBeUndefined();
            expect(storage1.getVersion()).toBeUndefined();
            storage1.set(123);
            expect(storage1.get()).toBe(123);
            storage1.set(456);
            expect(storage1.getVersion()).toBe(1);
            expect(storage1.get()).toBe(456);
            storage1.remove();
            expect(storage1.get()).toBeUndefined();
            expect(storage1.getVersion()).toBeUndefined();
        });

        test('Get/Set/Delete Migration', () => {
            const storageKey = 'someTable';
            const storage1 = new VersionedObjectStorage<number>(storageKey);
            storage1.set(123);
            expect(storage1.getVersion()).toBe(1);
            expect(storage1.get()).toBe(123);

            const migration1: Migration = {
                description: 'toString',
                migrate(from: any): any {
                    return from.toString();
                },
            };

            const migration2: Migration = {
                description: 'add A',
                migrate(from: any): any {
                    return from + 'A';
                },
            };

            const migration3: Migration = {
                description: 'add Z',
                migrate(from: any): any {
                    return from + 'Z';
                },
            };
            // Migrate to string
            const storage2 = new VersionedObjectStorage<string>(storageKey, [migration1]);
            expect(storage2.get()).toBe('123');
            expect(storage2.getVersion()).toBe(2);

            // No Migration
            const storage3 = new VersionedObjectStorage<string>(storageKey, [migration1]);
            expect(storage3.get()).toBe('123');
            expect(storage3.getVersion()).toBe(2);

            // Double Migration (append A and append Z)
            const storage4 = new VersionedObjectStorage<string>(storageKey, [migration1, migration2, migration3]);
            expect(storage4.get()).toBe('123AZ');
            expect(storage4.getVersion()).toBe(4);
        });
    });
});

'''
'''--- __tests__/e2e/MosaicServiceIntegrationTest.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    Address,
    RepositoryFactoryHttp,
    MosaicRepository,
    Page,
    MosaicInfo,
    MosaicId,
    UInt64,
    NetworkType,
    MosaicFlags,
    AccountRepository,
    AccountInfo,
} from 'symbol-sdk';
import { MosaicService } from '@/services/MosaicService';
import { Observable, of } from 'rxjs';
import { WalletsModel2 } from '@MOCKS/Accounts';
import { networkConfig } from '@/config';

const address1 = Address.createFromRawAddress('TAD5BAHLOIXCRRB6GU2H72HPXMBBVAEUQRYPHBY');
const address2 = Address.createFromRawAddress('TAWJ2M7BGKWGBPOUGD5NDKHYDDQ7OQD26HJMMQQ');
const address3 = Address.createFromRawAddress('TDARSPFSZVLYGBOHGOVWIKAZ4FGGDPGZ3DSS7CQ');
const address4 = Address.createFromRawAddress('TCEPWMC37ZGXOGOXQOAGDYPI7YH65HLXIMLKNOQ');
const address5 = Address.createFromRawAddress('TAUDGSA7IEFH6MRGXO26SUU3W5ICF7OLLI3O7CY');

const mosaicService = new MosaicService();
const realUrl = 'http://api-01.us-west-1.symboldev.network:3000';

const fakeMosaicInfo = new MosaicInfo(
    '59FDA0733F17CF0001772CBC',
    new MosaicId([3646934825, 3576016193]),
    new UInt64([3403414400, 2095475]),
    new UInt64([1, 0]),
    Address.createFromPublicKey('B4F12E7C9F6946091E2CB8B6D3A12B50D17CCBBF646386EA27CE2946A7423DCF', NetworkType.MIJIN_TEST),
    1,
    new MosaicFlags(7),
    3,
    UInt64.fromNumericString('1000'),
);
const repositoryFactory = new (class RepositoryFactoryHttpForTest extends RepositoryFactoryHttp {
    createMosaicRepository(): MosaicRepository {
        return new (class MosaicRepositoryForTest implements MosaicRepository {
            getMosaic(): Observable<MosaicInfo> {
                return of(fakeMosaicInfo);
            }
            getMosaics(): Observable<MosaicInfo[]> {
                return of([fakeMosaicInfo]);
            }
            // XXX MosaicSearchCriteria not exported
            search(): Observable<Page<MosaicInfo>> {
                return of(new Page([fakeMosaicInfo], 1, 1));
            }
        })();
    }
    createAccountRepository(): AccountRepository {
        return new (class AccountRepositoryForTest implements AccountRepository {
            getAccountInfo(): Observable<AccountInfo> {
                return of({ address: Address.createFromRawAddress(WalletsModel2.address) } as AccountInfo);
            }

            getAccountsInfo(): Observable<AccountInfo[]> {
                return of([{ address: Address.createFromRawAddress(WalletsModel2.address) } as AccountInfo]);
            }

            search(): Observable<Page<AccountInfo>> {
                return of(new Page([{ address: Address.createFromRawAddress(WalletsModel2.address) } as AccountInfo], 1, 1));
            }
        })();
    }
})(realUrl, {
    networkType: NetworkType.TEST_NET,
    generationHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
});
repositoryFactory.getNetworkType = jest.fn(() => of(NetworkType.MIJIN_TEST));
repositoryFactory.getGenerationHash = jest.fn(() => of('Some Gen Hash'));

describe.skip('services/MosaicService', () => {
    test('getMosaics all addresses', async () => {
        const generationHash = await repositoryFactory.getGenerationHash().toPromise();
        const { networkCurrency } = await mosaicService
            .getNetworkCurrencies(repositoryFactory, generationHash, networkConfig.networkConfigurationDefaults)
            .toPromise();
        const addresses: Address[] = [address1, address2, address3, address4, address5];
        const accountInfos = await repositoryFactory.createAccountRepository().getAccountsInfo(addresses).toPromise();
        const result = await mosaicService.getMosaics(repositoryFactory, generationHash, networkCurrency, accountInfos).toPromise();
        console.log(JSON.stringify(result, null, 2));
    });

    test('getMosaics account 1 addresses', async () => {
        const generationHash = await repositoryFactory.getGenerationHash().toPromise();
        const { networkCurrency } = await mosaicService
            .getNetworkCurrencies(repositoryFactory, generationHash, networkConfig.networkConfigurationDefaults)
            .toPromise();
        const addresses: Address[] = [address1];
        const accountInfos = await repositoryFactory.createAccountRepository().getAccountsInfo(addresses).toPromise();
        const result = await mosaicService.getMosaics(repositoryFactory, generationHash, networkCurrency, accountInfos).toPromise();
        console.log(JSON.stringify(result, null, 2));
    });

    test('getMosaics account 3 addresses', async () => {
        const generationHash = await repositoryFactory.getGenerationHash().toPromise();
        const { networkCurrency } = await mosaicService
            .getNetworkCurrencies(repositoryFactory, generationHash, networkConfig.networkConfigurationDefaults)
            .toPromise();
        const addresses: Address[] = [address3];
        const accountInfos = await repositoryFactory.createAccountRepository().getAccountsInfo(addresses).toPromise();
        const result = await mosaicService.getMosaics(repositoryFactory, generationHash, networkCurrency, accountInfos).toPromise();
        console.log(JSON.stringify(result, null, 2));
    });
});

'''
'''--- __tests__/e2e/NetworkServiceIntegrationTest.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkService } from '@/services/NetworkService';
import { networkConfig } from '@/config';

const networkService = new NetworkService();
describe.skip('services/NetworkService', () => {
    test('getNetworkModel when default', async () => {
        const data = await networkService.getNetworkModel(undefined).toPromise();
        expect(data.networkModel.url).toBe(networkConfig.defaultNodeUrl);
        expect(data.fallback).toBe(false);
    });

    test('getNetworkModel when custom', async () => {
        const candidate = 'http://api-01.eu-central-1.symboldev.network:3000';
        const data = await networkService.getNetworkModel(candidate).toPromise();
        expect(data.networkModel.url).toBe(candidate);
        expect(data.fallback).toBe(false);
    });

    test('getNetworkModel when broken', async () => {
        const candidate = 'http://localhost:3000';

        const data = await networkService.getNetworkModel(candidate).toPromise();
        expect(data.networkModel.url).toBe(networkConfig.defaultNodeUrl);
        expect(data.fallback).toBe(true);
    });
});

'''
'''--- __tests__/e2e/NodeServiceIntegrationTest.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    RepositoryFactoryHttp,
    NodeRepository,
    NetworkType,
    NodeInfo,
    RoleType,
    NodeTime,
    NodeHealth,
    StorageInfo,
    ServerInfo,
} from 'symbol-sdk';
import { NodeService } from '@/services/NodeService';
import { toArray } from 'rxjs/operators';
import { Observable, of } from 'rxjs';

const nodeService = new NodeService();
const realUrl = 'http://api-01.us-west-1.symboldev.network:3000';
const fakeNodeInfo = new NodeInfo(
    'Some Public Key',
    'Some Gen Hash',
    1234,
    NetworkType.TEST_NET,
    4567,
    [RoleType.ApiNode],
    'Some Host',
    'Some Friendly Name',
);
const repositoryFactory = new (class RepositoryFactoryHttpForTest extends RepositoryFactoryHttp {
    createNodeRepository(): NodeRepository {
        return new (class NodeRepositoryForTest implements NodeRepository {
            getNodeInfo(): Observable<NodeInfo> {
                return of(fakeNodeInfo);
            }
            getNodePeers(): Observable<NodeInfo[]> {
                return of([fakeNodeInfo]);
            }
            getNodeTime(): Observable<NodeTime> {
                return of(new NodeTime());
            }
            getNodeHealth(): Observable<NodeHealth> {
                return of(new NodeHealth(undefined, undefined));
            }
            getStorageInfo(): Observable<StorageInfo> {
                return of(new StorageInfo(0, 0, 0));
            }
            getServerInfo(): Observable<ServerInfo> {
                return of(new ServerInfo('1.0.0', '1.0.0'));
            }
        })();
    }
})('http://localhost:3000', {
    networkType: NetworkType.TEST_NET,
    generationHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
});
repositoryFactory.getNetworkType = jest.fn(() => of(NetworkType.MIJIN_TEST));

describe.skip('services/NodeService', () => {
    test('getNodes', async () => {
        const peers = await nodeService.getNodes(repositoryFactory, realUrl).pipe(toArray()).toPromise();
        console.log(JSON.stringify(peers, null, 2));
    });
});

'''
'''--- __tests__/services/AccountService.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType, Account, Password, Crypto } from 'symbol-sdk';
import { AccountService } from '@/services/AccountService';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
import { account1Params, WalletsModel1 } from '@MOCKS/Accounts';

// Sample mnemonic passphrase
const mnemonic = new MnemonicPassPhrase(
    'limit sing post cross matrix pizza topple rack cigar skirt girl hurt outer humble fancy elegant bunker pipe ensure grain regret bulk renew trim',
);

// Standard account paths
const standardPaths = {
    1: "m/44'/4343'/0'/0'/0'",
    2: "m/44'/4343'/1'/0'/0'",
    3: "m/44'/4343'/2'/0'/0'",
};

// Expected private keys from derivation of mnemonic with standard account paths
const expectedPrivateKeys = {
    1: '017210E314BE6543480C2BB176F7047D6EEB04C2CEBEE5A80C44970858434E98',
    2: '82B4F074F64E35D889E5754A6063DAB8F0F2B23A91039E79EBBBA47C18BA304B',
    3: '2C4795674D21D3BEED4229FBD76FF6F41D8BF11F1F5A880EF8132160DC787BEC',
};

// Accounts from private keys
const expectedAccounts = Object.values(expectedPrivateKeys).map((key) => Account.createFromPrivateKey(key, NetworkType.TEST_NET));

// max 2+2 generations
const generatedAccounts = new AccountService().generateAccountsFromMnemonic(mnemonic, NetworkType.TEST_NET, 2);
const generatedAddresses = new AccountService().getAddressesFromMnemonic(mnemonic, NetworkType.TEST_NET, 2);

describe('services/AccountService', () => {
    describe('generateAccountsFromMnemonic() should', () => {
        test('generate correct child account given mnemonic', () => {
            expect(generatedAccounts).toBeDefined();
            expect(generatedAccounts.length).toBe(2);
            expect(generatedAccounts[0].privateKey).toBe(expectedAccounts[0].privateKey);
            expect(generatedAccounts[0].publicKey).toBe(expectedAccounts[0].publicKey);
            expect(generatedAccounts[0].address.plain()).toBe(expectedAccounts[0].address.plain());
        });

        test('generate multiple correct children accounts given mnemonic and count', () => {
            expect(generatedAccounts).toBeDefined();
            expect(generatedAccounts.length).toBe(2);
            expect(generatedAccounts[0].privateKey).toBe(expectedAccounts[0].privateKey);
            expect(generatedAccounts[1].privateKey).toBe(expectedAccounts[1].privateKey);
        });
    });

    describe('generateAccountsFromPaths() should', () => {
        test('generate correct account given mnemonic and paths', () => {
            const accounts = new AccountService().generateAccountsFromPaths(
                mnemonic,
                NetworkType.TEST_NET,
                Object.values(standardPaths).slice(0, 1),
            );

            expect(accounts).toBeDefined();
            expect(accounts.length).toBe(1);
            expect(accounts[0].privateKey).toBe(expectedAccounts[0].privateKey);
            expect(accounts[0].publicKey).toBe(expectedAccounts[0].publicKey);
            expect(accounts[0].address.plain()).toBe(expectedAccounts[0].address.plain());
        });
    });

    describe('getAddressesFromMnemonic() should', () => {
        test('generate correct address given mnemonic', () => {
            expect(generatedAddresses).toBeDefined();
            expect(generatedAddresses.length).toBe(2);
            expect(generatedAddresses[0].plain()).toBe(expectedAccounts[0].address.plain());
        });

        test('generate multiple correct addresses given mnemonic and count', () => {
            expect(generatedAddresses).toBeDefined();
            expect(generatedAddresses.length).toBe(2);
            expect(generatedAddresses[0].plain()).toBe(expectedAccounts[0].address.plain());
            expect(generatedAddresses[1].plain()).toBe(expectedAccounts[1].address.plain());
        });
    });

    describe('getAccountByPath() should', () => {
        test('generate correct account given mnemonic and path', () => {
            const account_3 = new AccountService().getAccountByPath(mnemonic, NetworkType.TEST_NET, standardPaths[3]);

            expect(account_3.privateKey).toBe(expectedAccounts[2].privateKey);
        });
    });

    describe('updateWalletPassword', () => {
        test('should update an account password', () => {
            // initialize account service
            const service = new AccountService();

            // get initial encrypted private key values
            const initialEncPrivate = WalletsModel1.encryptedPrivateKey;

            // update the model
            const updatedWallet = service.updateWalletPassword(WalletsModel1, account1Params.password, new Password('password2'));

            // decrypt the new model's private key
            const newEncPrivate = updatedWallet.encryptedPrivateKey;
            const privateKey = Crypto.decrypt(newEncPrivate, 'password2');

            // assert the encrypted private key changed
            expect(newEncPrivate).not.toBe(initialEncPrivate);

            // assert the plain private key did not change
            expect(privateKey).toBe(account1Params.privateKey);
        });

        test('should throw if provided with an incorrect password', () => {
            const service = new AccountService();
            expect(() => {
                service.updateWalletPassword(WalletsModel1, new Password('wrong_password'), new Password('password2'));
            }).toThrow();
        });
    });
});

'''
'''--- __tests__/services/DerivationService.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { DerivationPathLevels, DerivationService } from '@/services/DerivationService';
import { AccountService } from '@/services/AccountService';

const { DEFAULT_ACCOUNT_PATH } = AccountService;

// Standard profile paths
const standardPaths = {
    // the path number one is the DEFAULT_ACCOUNT_PATH
    2: "m/44'/4343'/1'/0'/0'",
    3: "m/44'/4343'/2'/0'/0'",
    4: "m/44'/4343'/3'/0'/0'",
    5: "m/44'/4343'/4'/0'/0'",
    6: "m/44'/4343'/5'/0'/0'",
    7: "m/44'/4343'/6'/0'/0'",
    8: "m/44'/4343'/7'/0'/0'",
    9: "m/44'/4343'/8'/0'/0'",
    10: "m/44'/4343'/9'/0'/0'",
};

describe('services/DerivationService ==>', () => {
    describe('incrementPathLevel() should', () => {
        test('increase standard paths as expected', () => {
            expect(
                [...Array(9).keys()].map((index) =>
                    new DerivationService().incrementPathLevel(DEFAULT_ACCOUNT_PATH, DerivationPathLevels.Profile, index + 1),
                ),
            ).toEqual(Object.values(standardPaths));
        });
    });

    describe('decrementPathLevel() should', () => {
        test('decrease standard paths as expected', () => {
            expect(
                [...Array(9).keys()].map((index) =>
                    new DerivationService().decrementPathLevel(standardPaths[10], DerivationPathLevels.Profile, index + 1),
                ),
            ).toEqual([DEFAULT_ACCOUNT_PATH, ...Object.values(standardPaths).slice(0, 8)].reverse());
        });
    });

    describe('getNextAccountPath() should', () => {
        test('return default path when provided an empty array', () => {
            expect(new DerivationService().getNextAccountPath([])).toBe(DEFAULT_ACCOUNT_PATH);
        });

        test('return the first missing consecutive path when it is the default one', () => {
            const paths = [standardPaths[2], standardPaths[3]];
            expect(new DerivationService().getNextAccountPath(paths)).toBe(DEFAULT_ACCOUNT_PATH);
        });

        test('return the first missing consecutive path when it is the second one', () => {
            const paths = [standardPaths[3], standardPaths[5], DEFAULT_ACCOUNT_PATH];
            expect(new DerivationService().getNextAccountPath(paths)).toBe(standardPaths[2]);
        });

        test('return the first missing consecutive path when it is in the middle', () => {
            const paths = [standardPaths[2], DEFAULT_ACCOUNT_PATH, standardPaths[4]];
            expect(new DerivationService().getNextAccountPath(paths)).toBe(standardPaths[3]);
        });

        test('return the next path when all paths are consecutive', () => {
            const paths = [standardPaths[2], standardPaths[3], DEFAULT_ACCOUNT_PATH];
            expect(new DerivationService().getNextAccountPath(paths)).toBe(standardPaths[4]);
        });
    });
});

'''
'''--- __tests__/services/MosaicModel.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address, MosaicFlags, MosaicId, MosaicInfo, NetworkType, PublicAccount, UInt64 } from 'symbol-sdk';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

describe('services/MosaicData', () => {
    describe('serialization', () => {
        test('canSerializeDeserialize', () => {
            // act
            const address = Address.createFromEncoded('917E7E29A01014C2F3000000000000000000000000000000');

            const id = new MosaicId('85BBEA6CC462B244');
            const mosaicInfo = new MosaicInfo(
                '85BBEA6CC462B244',
                id, // mosaicId
                new UInt64([3403414400, 2095475]), // supply
                new UInt64([1, 0]), // height
                PublicAccount.createFromPublicKey(
                    'B4F12E7C9F6946091E2CB8B6D3A12B50D17CCBBF646386EA27CE2946A7423DCF',
                    NetworkType.MIJIN_TEST,
                ).address,
                1, // revision
                MosaicFlags.create(true, true, true),
                3,
                UInt64.fromUint(1000),
            );
            const expected = new MosaicModel(address.plain(), address.plain(), 'someName', true, 1234, mosaicInfo);

            // assert
            expect(expected).not.toBeNull();
            expect(expected.mosaicIdHex).toBe('85BBEA6CC462B244');
            expect(expected.addressRawPlain).toBe(address.plain());

            const deserialized: MosaicModel = JSON.parse(JSON.stringify(expected));
            expect(deserialized).not.toBeNull();
            expect(deserialized.mosaicIdHex).toBe('85BBEA6CC462B244');
            expect(deserialized.addressRawPlain).toBe(address.plain());
            expect(JSON.stringify(expected)).toBe(JSON.stringify(deserialized));

            const deserializedMosaicInfo: MosaicInfo = JSON.parse(JSON.stringify(mosaicInfo));
            // NOTE I lose the methods!
            expect(deserializedMosaicInfo).not.toBeNull();
            expect(deserializedMosaicInfo.id.toHex).toBe(undefined);
            expect(deserializedMosaicInfo.duration.compact).toBe(undefined);
        });
    });
});

'''
'''--- __tests__/services/MosaicService.spec.ts ---
import { MosaicId } from 'symbol-sdk';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { MosaicService } from '@/services/MosaicService';
import { mosaicConfigurations } from '@MOCKS/MosaicConfigurations';

const mosaicId = new MosaicId('05D6A80DE3C9ADCA');
const account1: AccountModel = {
    address: 'TD2UU6EY4G4WSV5NJMVLVVNRKZOKEZIBYXBFZ4U2',
    encryptedPrivateKey:
        '5730f8e71484dc0cc8ff8a206552080dcbcfc244e1294bf1cc303198561c916ciDHHCOVVjNm3qx5xY6wLXpDjqV8iTiR7,+FlJdiMZYUKIX79aBeyqmJcUsEHW011ZGKSg7WJXobtua6y5VutCq8qm1yBBcRlVdTEFBSjHjGg=',
    id: 'B147F63C31CE2347',
    isMultisig: false,
    name: 'Seed Account 6',
    node: '',
    path: "m/44'/4343'/5'/0'/0'",
    profileName: 'test',
    publicKey: '82D539A540E89EC5848BBE6CF95F2001CDE8A6DEB904D0ADA86D613A4FD0CACB',
    type: 1,
};
const account2: AccountModel = {
    address: 'TD2UU6EY4G4WSV5NJMVLVVNRKZOKEZIBYXBFZ4U2',
    encryptedPrivateKey:
        '5730f8e71484dc0cc8ff8a206552080dcbcfc244e1294bf1cc303198561c916ciDHHCOVVjNm3qx5xY6wLXpDjqV8iTiR7,+FlJdiMZYUKIX79aBeyqmJcUsEHW011ZGKSg7WJXobtua6y5VutCq8qm1yBBcRlVdTEFBSjHjGg=',
    id: 'D27115119E1DD723',
    isMultisig: false,
    name: 'Seed Account 6',
    node: '',
    path: "m/44'/4343'/5'/0'/0'",
    profileName: 'test',
    publicKey: '82D539A540E89EC5848BBE6CF95F2001CDE8A6DEB904D0ADA86D613A4FD0CACB',
    type: 1,
};

const mosaicService = new MosaicService();
mosaicService.getMosaicConfigurations = jest.fn().mockImplementation(() => {
    return mosaicConfigurations;
});
describe('MosaicService', () => {
    describe('configurations of different account should be separated', () => {
        test('account1 which exist in the data', () => {
            const newConfigs = {
                hidden: false,
            };
            const mosaicConfigurations = mosaicService.changeMosaicConfiguration(mosaicId, account1, newConfigs);
            expect(mosaicConfigurations['05D6A80DE3C9ADCA'].hidden).toBe(false);
        });
        test("account2 which doesn't exist in the data", () => {
            const newConfigs = {
                hidden: true,
            };
            const mosaicConfigurations = mosaicService.changeMosaicConfiguration(mosaicId, account2, newConfigs);
            expect(mosaicConfigurations['05D6A80DE3C9ADCA'].hidden).toBe(true);
        });
    });
});

'''
'''--- __tests__/services/MultisigService.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { multisigEntries1, multisigEntries2, multisigGraphInfo1 } from '@MOCKS/multisigGraphInfo';
import { MultisigService } from '@/services/MultisigService';

describe('services/MultisigService', () => {
    describe('getMultisigInfoFromMultisigGraphInfo() should', () => {
        test('return multisig info contained in a multisig graph', () => {
            const multisigsInfo = MultisigService.getMultisigInfoFromMultisigGraphInfo(multisigGraphInfo1);
            expect(multisigsInfo).toStrictEqual([...multisigEntries1, ...multisigEntries2]);
        });
    });
});

'''
'''--- __tests__/services/ProfileService.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { ProfileService } from '@/services/ProfileService';
import { Password } from 'symbol-sdk';

// prepare all

describe('services/ProfileService', () => {
    describe('getPasswordHash() should', () => {
        test('create 64 bytes hash of password', () => {
            // act
            const hash = ProfileService.getPasswordHash(new Password('1234567a'));

            // assert
            expect(hash).toBeDefined();
            expect(hash.length).toBe(128);
        });
    });
});

'''
'''--- __tests__/services/RemoteAccountService.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    NetworkType,
    Password,
    RepositoryFactoryHttp,
    Address,
    AccountInfo,
    AccountRepository,
    PublicAccount,
    Page,
    AccountType as sdkAccountType,
} from 'symbol-sdk';
import { RemoteAccountService } from '@/services/RemoteAccountService';
import { WalletsModel2 } from '@MOCKS/Accounts';
import { getTestProfile } from '@MOCKS/profiles';
import { Observable, of } from 'rxjs';

const repositoryFactory = new (class RepositoryFactoryHttpForTest extends RepositoryFactoryHttp {
    createAccountRepository(): AccountRepository {
        return new (class AccountRepositoryForTest implements AccountRepository {
            getAccountInfo(): Observable<AccountInfo> {
                return of({ address: Address.createFromRawAddress(WalletsModel2.address) } as AccountInfo);
            }

            getAccountsInfo(): Observable<AccountInfo[]> {
                return of([
                    {
                        address: Address.createFromRawAddress(WalletsModel2.address),
                        accountType: sdkAccountType.Main,
                    } as AccountInfo,
                    {
                        address: PublicAccount.createFromPublicKey(
                            'FA0939C5F11FC89A8EB997329C64AC785CDD23AE9D73C3E060D3B5FF0BABC2A4',
                            NetworkType.TEST_NET,
                        ).address,
                        accountType: sdkAccountType.Remote_Unlinked,
                    } as AccountInfo,
                ]);
            }

            search(): Observable<Page<AccountInfo>> {
                return of(new Page([{ address: Address.createFromRawAddress(WalletsModel2.address) } as AccountInfo], 1, 1));
            }
        })();
    }
})('http://localhost:3000', {
    networkType: NetworkType.TEST_NET,
    generationHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
});
repositoryFactory.getNetworkType = jest.fn(() => of(NetworkType.MIJIN_TEST));

describe('services/RemoteAccountService', () => {
    describe('getAvailableRemotePublicKey()', () => {
        test('should return the first linkable public key', async (done) => {
            // prepare

            // act
            const remoteAccount = await new RemoteAccountService(
                WalletsModel2,
                getTestProfile('profile1'),
                repositoryFactory.createAccountRepository(),
            ).getAvailableRemoteAccount(new Password('password'));

            expect(remoteAccount.publicKey).toBe('BB6FF99C52B3C9D880D5E59C10AD696D90CF84A8E825CCA16F584A8BCE4D17E6');
            done();
        });
    });
});

'''
'''--- __tests__/store/Diagnostic.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { LogLevels } from '@/core/utils/LogLevels';
import DiagnosticStore from '@/store/Diagnostic';

describe('store/Diagnostic', () => {
    describe('action "ADD_LOG" should', () => {
        test('mutate logs given debug level and message', () => {
            // prepare
            const commit = jest.fn();

            // act
            DiagnosticStore.actions.ADD_LOG(
                { commit },
                {
                    level: LogLevels.DEBUG,
                    message: 'debug message',
                },
            );

            // assert
            expect(commit).toHaveBeenCalledTimes(1);
        });
    });

    describe('specialized actions should', () => {
        test('mutate logs with correct log level given message', () => {
            // prepare
            const commit = jest.fn();

            // act
            const message = 'info message';
            const time1 = DiagnosticStore.actions.ADD_INFO({ commit }, message);
            const time2 = DiagnosticStore.actions.ADD_DEBUG({ commit }, message);
            const time3 = DiagnosticStore.actions.ADD_WARNING({ commit }, message);
            const time4 = DiagnosticStore.actions.ADD_ERROR({ commit }, message);

            // assert
            expect(commit).toHaveBeenCalledTimes(4);
            expect(commit).toHaveBeenNthCalledWith(1, 'addLog', {
                level: LogLevels.INFO,
                message,
                time: time1,
            });
            expect(commit).toHaveBeenNthCalledWith(2, 'addLog', {
                level: LogLevels.DEBUG,
                message,
                time: time2,
            });
            expect(commit).toHaveBeenNthCalledWith(3, 'addLog', {
                level: LogLevels.WARNING,
                message,
                time: time3,
            });
            expect(commit).toHaveBeenNthCalledWith(4, 'addLog', {
                level: LogLevels.ERROR,
                message,
                time: time4,
            });
        });
    });
});

'''
'''--- __tests__/store/Profile.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import ProfileStore from '@/store/Profile';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import flushPromises from 'flush-promises';

describe('store/Profile', () => {
    describe('action "RESET_STATE" should', () => {
        test('mutate currentProfile and isAuthenticated', () => {
            // prepare
            const commit = jest.fn();

            // act
            ProfileStore.actions.RESET_STATE({ commit });

            // assert
            expect(commit).toHaveBeenCalledTimes(2);
            expect(commit).toHaveBeenNthCalledWith(1, 'currentProfile', null);
            expect(commit).toHaveBeenNthCalledWith(2, 'setAuthenticated', false);
        });
    });

    describe('action "LOG_OUT" should', () => {
        test('dispatch "RESET_STATE"', async (done) => {
            // prepare
            const dispatch = jest.fn();
            const rootGetters = { 'account/currentAccount': {} };

            // act
            ProfileStore.actions.LOG_OUT({ dispatch, rootGetters });
            await flushPromises();

            // assert
            expect(dispatch).toHaveBeenCalled();
            expect(dispatch).toHaveBeenCalledWith('account/uninitialize', { address: undefined }, { root: true });
            expect(dispatch).toHaveBeenCalledWith('account/SET_KNOWN_ACCOUNTS', [], { root: true });
            expect(dispatch).toHaveBeenCalledWith('account/RESET_CURRENT_ACCOUNT', undefined, { root: true });
            expect(dispatch).toHaveBeenCalledWith('RESET_STATE');
            done();
        });
    });

    describe('action "SET_CURRENT_PROFILE" should', () => {
        test('mutate currentProfile and isAuthenticated', async () => {
            // prepare
            const commit = jest.fn();
            const dispatch = jest.fn();
            const model = new ProfileModel();

            // act
            await ProfileStore.actions.SET_CURRENT_PROFILE({ commit, dispatch }, model);

            // assert
            expect(commit).toHaveBeenCalledTimes(2);
            expect(commit).toHaveBeenNthCalledWith(1, 'currentProfile', model);
            expect(commit).toHaveBeenNthCalledWith(2, 'setAuthenticated', true);
        });
    });
});

'''
'''--- __tests__/store/Temporary.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import TemporaryStore from '@/store/Temporary';
import { Password } from 'symbol-sdk';

describe('store/Profile', () => {
    describe('action "RESET_STATE" should', () => {
        test('mutate password and mnemonic', () => {
            // prepare
            const commit = jest.fn();

            // act
            TemporaryStore.actions.RESET_STATE({ commit });

            // assert
            expect(commit).toHaveBeenCalledTimes(2);
            expect(commit).toHaveBeenNthCalledWith(1, 'setPassword', null);
            expect(commit).toHaveBeenNthCalledWith(2, 'setMnemonic', null);
        });
    });

    describe('action "SET_PASSWORD" should', () => {
        test('mutate password', () => {
            // prepare
            const commit = jest.fn();

            // act
            TemporaryStore.actions.SET_PASSWORD({ commit }, '1234567a');

            // assert
            expect(commit).toHaveBeenCalledTimes(1);
            expect(commit).toHaveBeenNthCalledWith(1, 'setPassword', new Password('1234567a'));
        });

        test('throw password error if less than 8 characters', () => {
            // prepare
            const commit = jest.fn();

            // act + assert
            expect(() => TemporaryStore.actions.SET_PASSWORD({ commit }, '1234567')).toThrowError();
        });
    });
});

'''
'''--- __tests__/transactions/TransactionView.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Deadline, NamespaceId, NetworkType, PlainMessage, TransferTransaction } from 'symbol-sdk';
import { createStore } from '@MOCKS/Store';
import { ViewUnknownTransaction } from '@/core/transactions/ViewUnknownTransaction';

const store = createStore({});
const transfer = TransferTransaction.create(
    Deadline.create(),
    new NamespaceId('alias'),
    [],
    PlainMessage.create('test-message'),
    NetworkType.MIJIN_TEST,
);

describe('transactions/TransactionView', () => {
    describe('use() should', () => {
        test('set transaction property', () => {
            // prepare
            const view = new ViewUnknownTransaction(store, transfer);

            // assert
            expect(view).toBeDefined();
            expect(view.transaction).toBeDefined();
        });
    });

    describe('initialize() should', () => {
        test('set common transaction fields', () => {
            // prepare + act
            const view = new ViewUnknownTransaction(store, transfer);

            // assert
            expect(view).toBeDefined();
            expect(view.detailItems.length).toBe(0);
            expect(view.headerItems.length).toBe(4);
        });
    });
});

'''
'''--- __tests__/transactions/ViewAliasTransaction.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { AliasAction, Deadline, MosaicAliasTransaction, MosaicId, NamespaceId, NetworkType } from 'symbol-sdk';
import { createStore } from '@MOCKS/Store';
import { ViewAliasTransaction } from '@/core/transactions/ViewAliasTransaction';

const store = createStore({});

describe('transactions/ViewAliasTransaction', () => {
    describe('use() should', () => {
        test('populate mosaic alias transaction fields', () => {
            const namespaceId = new NamespaceId('alias');
            const mosaicId = new MosaicId('747B276C30626442');
            const alias = MosaicAliasTransaction.create(Deadline.create(), AliasAction.Link, namespaceId, mosaicId, NetworkType.MIJIN_TEST);

            const view = new ViewAliasTransaction(store, alias);

            // assert
            expect(view).toBeDefined();
            expect(view.transaction).toBeDefined();
            expect(view.detailItems.length).toBe(3);
        });

        // XXX test recognition of Namespace vs Address for recipient
        // XXX test recognition of Namespace vs MosaicId for mosaics
    });
});

'''
'''--- __tests__/transactions/ViewHashLockTransaction.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { AggregateTransaction, Deadline, LockFundsTransaction, NetworkCurrencyLocal, NetworkType, UInt64 } from 'symbol-sdk';
import { createStore } from '@MOCKS/Store';
import { getTestAccount } from '@MOCKS/Accounts';
import { ViewHashLockTransaction } from '@/core/transactions/ViewHashLockTransaction';

const store = createStore({});

describe('transactions/ViewHashLockTransaction', () => {
    describe('use() should', () => {
        test('populate hash lock transaction fields', () => {
            const generationHash = '57F7DA205008026C776CB6AED843393F04CD458E0AA2D9F1D5F31A402072B2D6';
            const aggregateTransaction = AggregateTransaction.createBonded(Deadline.create(), [], NetworkType.MIJIN_TEST, []);
            const signedTransaction = getTestAccount('cosigner1').sign(aggregateTransaction, generationHash);
            const hashLock = LockFundsTransaction.create(
                Deadline.create(),
                NetworkCurrencyLocal.createRelative(10),
                UInt64.fromUint(10),
                signedTransaction,
                NetworkType.MIJIN_TEST,
            );

            // act
            const view = new ViewHashLockTransaction(store, hashLock);

            // assert
            expect(view).toBeDefined();
            expect(view.transaction).toBeDefined();
            expect(view.detailItems.length).toBe(3);
        });
    });
});

'''
'''--- __tests__/transactions/ViewTransferTransaction.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Account, Deadline, NamespaceId, NetworkType, PlainMessage, TransferTransaction } from 'symbol-sdk';
import { createStore } from '@MOCKS/Store';
import { ViewTransferTransaction } from '@/core/transactions/ViewTransferTransaction';

const store = createStore({});

describe('transactions/ViewTransferTransaction', () => {
    describe('use() should', () => {
        test('populate transfer transaction fields', () => {
            // prepare
            const alias = new NamespaceId('test');

            const transferTransaction = TransferTransaction.create(
                Deadline.create(),
                alias,
                [],
                PlainMessage.create('test-message'),
                NetworkType.MIJIN_TEST,
            );

            store.getters['account/currentSignerAddress'] = Account.generateNewAccount(NetworkType.MAIN_NET).address;

            // act
            const view = new ViewTransferTransaction(store, transferTransaction);

            // assert
            expect(view).toBeDefined();
            expect(view.transaction).toBeDefined();

            expect(view.detailItems.length).toBe(3);
        });
    });
});

'''
'''--- __tests__/utils/FilterHelpers.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { FilterHelpers } from '@/core/utils/FilterHelpers';

describe('stripFilter', () => {
    // should return a string without tags
    test.each([
        ['no tags', 'no tags'],
        ['no tags;\'"#!?%&/8{}', 'no tags;\'"#!?%&/8{}'],
        ['<script>/>good', '/>good'],
        ['<>>', '<>>'],
        ['<a>>', '>'],
        ['test <img src="" /> another', 'test  another'],
        ['<img src="" />', ''],
        ['<parent <child <sub />></child>></parent>', '>>'],
        ['<script>alert("abc");</script>', 'alert("abc");'],
        ['/><script>alert("abc");</script>', '/>alert("abc");'],
        ['This is a normal text <img src="nothing" onerror="alert("abc");" />', 'This is a normal text '],
    ])('FilterHelpers.stripFilter(%s)', (a, expected) => {
        expect(FilterHelpers.stripFilter(a)).toBe(expected);
    });
});

'''
'''--- __tests__/utils/Formatters.spec.ts ---
import { Formatters } from '@/core/utils/Formatters';

describe('splitArrayByDelimiter', () => {
    test('should throw a error when pass in Array, one of its element is not an string ', () => {
        const testArr = ['1', {}];
        expect(() => Formatters.splitArrayByDelimiter(testArr as Array<string>)).toThrow();
    });
    test('should return a string when pass in Array without delimiter', () => {
        const testArr = ['1', '2'];
        expect(Formatters.splitArrayByDelimiter(testArr)).toBe(testArr.join(' '));
    });
    test('should return a string which is joined the delimiter when pass in Array with a delimiter', () => {
        const testArr = ['1', '2'];
        expect(Formatters.splitArrayByDelimiter(testArr, '?')).toBe(testArr.join('?'));
    });
});

'''
'''--- __tests__/utils/TimeHelpers.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { TimeHelpers } from '@/core/utils/TimeHelpers';

describe('utils/TimeHelpers', () => {
    describe('durationStringToSeconds', () => {
        test('returns how many seconds there is in a duration string', () => {
            // assert
            expect(TimeHelpers.durationStringToSeconds('1m')).toBe(60);
            expect(TimeHelpers.durationStringToSeconds('2m')).toBe(60 * 2);
            expect(TimeHelpers.durationStringToSeconds('1s')).toBe(1);
            expect(TimeHelpers.durationStringToSeconds('50s')).toBe(50);
            expect(TimeHelpers.durationStringToSeconds('1h')).toBe(60 * 60);
            expect(TimeHelpers.durationStringToSeconds('2h')).toBe(60 * 60 * 2);
            expect(TimeHelpers.durationStringToSeconds('1d')).toBe(24 * 60 * 60);
            expect(TimeHelpers.durationStringToSeconds('2d')).toBe(24 * 60 * 60 * 2);
            expect(TimeHelpers.durationStringToSeconds('20ms')).toBe(0);
            expect(TimeHelpers.durationStringToSeconds('2010ms')).toBe(2);
            expect(TimeHelpers.durationStringToSeconds('2d 2h 10m 50s 20ms')).toBe(24 * 60 * 60 * 2 + 60 * 60 * 2 + 60 * 10 + 50);
        });
    });

    describe('durationStringToMilliseconds', () => {
        test('returns how many milliseconds there is in a duration string', () => {
            // assert
            expect(TimeHelpers.durationStringToMilliseconds('1m')).toBe(1000 * 60);
            expect(TimeHelpers.durationStringToMilliseconds('2m')).toBe(1000 * 60 * 2);
            expect(TimeHelpers.durationStringToMilliseconds('1s')).toBe(1000);
            expect(TimeHelpers.durationStringToMilliseconds('50s')).toBe(1000 * 50);
            expect(TimeHelpers.durationStringToMilliseconds('1h')).toBe(1000 * 60 * 60);
            expect(TimeHelpers.durationStringToMilliseconds('2h')).toBe(1000 * 60 * 60 * 2);
            expect(TimeHelpers.durationStringToMilliseconds('1d')).toBe(1000 * 24 * 60 * 60);
            expect(TimeHelpers.durationStringToMilliseconds('2d')).toBe(1000 * 24 * 60 * 60 * 2);
            expect(TimeHelpers.durationStringToMilliseconds('20ms')).toBe(20);
            expect(TimeHelpers.durationStringToMilliseconds('2010ms')).toBe(2010);
            expect(TimeHelpers.durationStringToMilliseconds('2d 2h 10m 50s 20ms')).toBe(
                1000 * (24 * 60 * 60 * 2 + 60 * 60 * 2 + 60 * 10 + 50) + 20,
            );
        });
    });
});

'''
'''--- __tests__/utils/URLHelpers.spec.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { URLHelpers } from '@/core/utils/URLHelpers';

describe('utils/URLHelpers', () => {
    describe('formatUrl() should', () => {
        test('return correctly shaped object', () => {
            // act
            const payload = URLHelpers.formatUrl('http://localhost:3000');

            // assert
            expect(payload).toBeDefined();
            expect(payload.protocol).toBeDefined();
            expect(payload.hostname).toBeDefined();
            expect(payload.port).toBeDefined();
            expect(payload.url).toBeDefined();
        });
    });

    describe('httpToWsUrl() should', () => {
        test('should replace http by ws protocol', () => {
            // act
            const wsEndpoint = URLHelpers.httpToWsUrl('http://localhost:3000');
            const wssEndpoint = URLHelpers.httpToWsUrl('https://localhost:3000');

            // assert
            expect(wsEndpoint).toBeDefined();
            expect(wssEndpoint).toBeDefined();
            expect(wsEndpoint).toBe('ws://localhost:3000');
            expect(wssEndpoint).toBe('wss://localhost:3000');
        });
    });

    describe('completeUrlWithHostAndProtocol() should', () => {
        test('add protocol and port given hostname only', () => {
            // act
            const url = URLHelpers.getNodeUrl('localhost');

            // assert
            expect(url).toBeDefined();
            expect(url).toBe('http://localhost:3000');
        });

        test('add port given protocol and hostname', () => {
            // act
            const url = URLHelpers.getNodeUrl('http://localhost');

            // assert
            expect(url).toBeDefined();
            expect(url).toBe('http://localhost:3000');
        });

        test('add protocol given hostname and port', () => {
            // act
            const url = URLHelpers.getNodeUrl('localhost:3000');

            // assert
            expect(url).toBeDefined();
            expect(url).toBe('http://localhost:3000');
        });
    });
});

'''
'''--- __tests__/views/forms/FormNodeEdit.spec.ts ---
import { createLocalVue, shallowMount } from '@vue/test-utils';
import Vuex from 'vuex';
import i18n from '@/language';
import VueI18n, { Values } from 'vue-i18n';
import { Vue } from 'vue-property-decorator';
import { NotificationType } from '@/core/utils/NotificationType';
import flushPromises from 'flush-promises';
//@ts-ignore
import FormNodeEdit from '@/views/forms/FormNodeEdit/FormNodeEdit.vue';
import { NetworkType } from 'symbol-sdk';
import { StandardValidationRules } from '@/core/validation/StandardValidationRules';
import { extend } from 'vee-validate';
import { UrlValidator } from '@/core/validation/validators';
StandardValidationRules.register();
extend('url', {
    validate: (value) => {
        return UrlValidator.validate(value);
    },
    message: (fieldName: string, values: Values) => `${i18n.t('error_incorrect_url', values)}`,
});
const localVue = createLocalVue();
localVue.use(Vuex);
localVue.use(VueI18n);

/* fake store */
const networkModule = {
    namespaced: true,
    getters: {
        knowNodes: () => [
            { url: 'http://api-01.us-west-1.0941-v1.symboldev.network:3000', friendlyName: '614084b4', isDefault: true },
            {
                url: 'http://api-01.ap-southeast-1.0941-v1.symboldev.network:3000',
                friendlyName: '08b0274c',
                isDefault: true,
            },
            { url: 'http://api-01.eu-west-1.0941-v1.symboldev.network:3000', friendlyName: 'c44a95bd', isDefault: true },
            { url: 'http://api-02.eu-central-1.0941-v1.symboldev.network:3000', friendlyName: '7a26944a', isDefault: true },
            {
                url: 'http://api-02.ap-northeast-1.0941-v1.symboldev.network:3000',
                friendlyName: '4d08a4d9',
                isDefault: true,
            },
            { url: 'http://api-01.eu-central-1.0941-v1.symboldev.network:3000', friendlyName: 'a08950e0', isDefault: true },
            {
                url: 'http://api-01.ap-northeast-1.0941-v1.symboldev.network:3000',
                friendlyName: 'API AP North-East 1',
                isDefault: true,
            },
        ],
        currentProfile: () => {
            return {
                netWorkType: NetworkType,
            };
        },
    },
};
const store = new Vuex.Store({
    modules: {
        network: networkModule,
    },
});
store.commit = jest.fn();
store.dispatch = jest.fn();

const options = {
    localVue,
    i18n,
    store,
};
let wrapper;
let vm;
beforeEach(() => {
    wrapper = shallowMount(FormNodeEdit, options);
    vm = wrapper.vm;
});
afterEach(() => {
    wrapper.destroy();
    vm = undefined;
});
describe('FormNodeEdit', () => {
    it('successfully submitted', async () => {
        wrapper.setData({
            formItems: {
                nodeUrl: '',
                networkType: '',
                networkHash: '',
            },
        });
        wrapper.setMethods({
            addPeer: jest.fn(),
        });
        await Vue.nextTick();
        vm.onSubmit();
        expect(vm.addPeer).toBeCalled();
    });
    it('successfully add custom node', async () => {
        wrapper.setData({
            formItems: {
                nodeUrl: 'http://api-01.us-west-1.0941-v1.symboldev.network:3000',
                networkType: 'TEST_NET',
                networkHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
            },
        });
        vm.addPeer();
        expect(vm.$store.dispatch).toBeCalledWith('notification/ADD_ERROR', NotificationType.NODE_EXISTS_ERROR);
        wrapper.setData({
            formItems: {
                nodeUrl: 'http://dual-001.symbol.ninja:3000',
                networkType: 'TEST_NET',
                networkHash: 'ACECD90E7B248E012803228ADB4424F0D966D24149B72E58987D2BF2F2AF03C4',
            },
        });
        await flushPromises();
        vm.addPeer();
        expect(vm.$store.dispatch).toBeCalledWith('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
    });
    it('provide the right choices', async () => {
        await vm.handleInput('http://api-01.us-west-1.0941-v1.symboldev.network:8000');
        expect(vm.customNodeData).toContain('http://api-01.us-west-1.0941-v1.symboldev.network:8000');
    });
});

'''
'''--- babel.config.js ---
module.exports = {
  presets: [["@vue/app", {useBuiltIns: "entry"}]]
};

'''
'''--- jest.config.js ---
const path = require('path')
module.exports = {
  rootDir: path.join(__dirname),
  moduleFileExtensions: [
    'js',
    'jsx',
    'json',
    'vue',
    'ts',
    'tsx',
    'node'
  ],
  moduleDirectories: ['node_modules', 'src'],
  modulePaths: ['<rootDir>/src', '<rootDir>/node_modules'],
  transform: {
    "^.+\\.js$": "babel-jest",
    '^.+\\.vue$': 'vue-jest',
    '.+\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$': 'jest-transform-stub',
    "^.+\\.ts$": "ts-jest",
  },
  transformIgnorePatterns: [
    '<rootDir>/node_modules/?!(vee-validate/dist/rules)',
  ],
  moduleNameMapper: {
    "^@/(.*)$": "<rootDir>/src/$1",
    "^@MOCKS/(.*)$": "<rootDir>/__mocks__/$1",
    "\\.(css|less)$": "identity-obj-proxy"
  },
  snapshotSerializers: [
    'jest-serializer-vue'
  ],
  testMatch: [
    '**/__tests__/**/**/*.spec.ts',
  ],
  testURL: 'http://localhost/',
  globals: {
    'ts-jest': {
      babelConfig: true,
    },
  },
  coverageDirectory: "coverage",
  collectCoverageFrom: [
    "**/*.ts",
    "**/*.vue",
    "!**/node_modules/**",
    "!**/__mocks__/**",
    "!**/*.png",
    "!**/*.d.ts",
    "!**/*.less",
  ],
}

'''
'''--- package-lock.json ---
{
  "name": "symbol-desktop-wallet",
  "version": "0.13.1",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "7zip-bin": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/7zip-bin/-/7zip-bin-5.0.3.tgz",
      "integrity": "sha512-GLyWIFBbGvpKPGo55JyRZAo4lVbnBiD52cKlw/0Vt+wnmKvWJkpZvsjVoaIolyBXDeAQKSicRtqFNPem9w0WYA==",
      "dev": true
    },
    "@babel/code-frame": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.8.3.tgz",
      "integrity": "sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0jhss4cPP93EW7s+uC5bikET2twEF3KV+7rDblJcmNvTR7VJejqd2C2g==",
      "dev": true,
      "requires": {
        "@babel/highlight": "^7.8.3"
      }
    },
    "@babel/compat-data": {
      "version": "7.9.6",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.9.6.tgz",
      "integrity": "sha512-5QPTrNen2bm7RBc7dsOmcA5hbrS4O2Vhmk5XOL4zWW/zD/hV0iinpefDlkm+tBBy8kDtFaaeEvmAqt+nURAV2g==",
      "dev": true,
      "requires": {
        "browserslist": "^4.11.1",
        "invariant": "^2.2.4",
        "semver": "^5.5.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.12.0.tgz",
          "integrity": "sha512-UH2GkcEDSI0k/lRkuDSzFl9ZZ87skSy9w2XAn1MsZnL+4c4rqbBd3e82UWHbYDpztABrPBhZsTEeuxVfHppqDg==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001043",
            "electron-to-chromium": "^1.3.413",
            "node-releases": "^1.1.53",
            "pkg-up": "^2.0.0"
          }
        },
        "caniuse-lite": {
          "version": "1.0.30001066",
          "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001066.tgz",
          "integrity": "sha512-Gfj/WAastBtfxLws0RCh2sDbTK/8rJuSeZMecrSkNGYxPcv7EzblmDGfWQCFEQcSqYE2BRgQiJh8HOD07N5hIw==",
          "dev": true
        },
        "electron-to-chromium": {
          "version": "1.3.452",
          "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.452.tgz",
          "integrity": "sha512-IdbjgCEqDvcU/1kUQa6C49I2NZOY3SBmU9Eus7mdFdJJBqn0Lg1Epfi/T4nqVcxTNBEGhcjwMhY1EysMBsXZrw==",
          "dev": true
        },
        "node-releases": {
          "version": "1.1.56",
          "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.56.tgz",
          "integrity": "sha512-EVo605FhWLygH8a64TjgpjyHYOihkxECwX1bHHr8tETJKWEiWS2YJjPbvsX2jFjnjTNEgBCmk9mLjKG1Mf11cw==",
          "dev": true
        }
      }
    },
    "@babel/core": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.8.6.tgz",
      "integrity": "sha512-Sheg7yEJD51YHAvLEV/7Uvw95AeWqYPL3Vk3zGujJKIhJ+8oLw2ALaf3hbucILhKsgSoADOvtKRJuNVdcJkOrg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "@babel/generator": "^7.8.6",
        "@babel/helpers": "^7.8.4",
        "@babel/parser": "^7.8.6",
        "@babel/template": "^7.8.6",
        "@babel/traverse": "^7.8.6",
        "@babel/types": "^7.8.6",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.1",
        "json5": "^2.1.0",
        "lodash": "^4.17.13",
        "resolve": "^1.3.2",
        "semver": "^5.4.1",
        "source-map": "^0.5.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "json5": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.1.tgz",
          "integrity": "sha512-l+3HXD0GEI3huGq1njuqtzYK8OYJyXMkOLtQ53pjWh89tvWS2h6l+1zMkYWqlb57+SiQodKZyvMEFb2X+KrFhQ==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "@babel/generator": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.8.6.tgz",
      "integrity": "sha512-4bpOR5ZBz+wWcMeVtcf7FbjcFzCp+817z2/gHNncIRcM9MmKzUhtWCYAq27RAfUrAFwb+OCG1s9WEaVxfi6cjg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.6",
        "jsesc": "^2.5.1",
        "lodash": "^4.17.13",
        "source-map": "^0.5.0"
      },
      "dependencies": {
        "jsesc": {
          "version": "2.5.2",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
          "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
          "dev": true
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.8.3.tgz",
      "integrity": "sha512-6o+mJrZBxOoEX77Ezv9zwW7WV8DdluouRKNY/IR5u/YTMuKHgugHOzYWlYvYLpLA9nPsQCAAASpCIbjI9Mv+Uw==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.8.3.tgz",
      "integrity": "sha512-5eFOm2SyFPK4Rh3XMMRDjN7lBH0orh3ss0g3rTYZnBQ+r6YPj7lgDyCvPphynHvUrobJmeMignBr6Acw9mAPlw==",
      "dev": true,
      "requires": {
        "@babel/helper-explode-assignable-expression": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-compilation-targets": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.8.6.tgz",
      "integrity": "sha512-UrJdk27hKVJSnibFcUWYLkCL0ZywTUoot8yii1lsHJcvwrypagmYKjHLMWivQPm4s6GdyygCL8fiH5EYLxhQwQ==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.8.6",
        "browserslist": "^4.8.5",
        "invariant": "^2.2.4",
        "levenary": "^1.1.1",
        "semver": "^5.5.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        }
      }
    },
    "@babel/helper-create-class-features-plugin": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.8.6.tgz",
      "integrity": "sha512-klTBDdsr+VFFqaDHm5rR69OpEQtO2Qv8ECxHS1mNhJJvaHArR6a1xTf5K/eZW7eZpJbhCx3NW1Yt/sKsLXLblg==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-member-expression-to-functions": "^7.8.3",
        "@babel/helper-optimise-call-expression": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.6",
        "@babel/helper-split-export-declaration": "^7.8.3"
      }
    },
    "@babel/helper-create-regexp-features-plugin": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.8.8.tgz",
      "integrity": "sha512-LYVPdwkrQEiX9+1R29Ld/wTrmQu1SSKYnuOk3g0CkcZMA1p0gsNxJFj/3gBdaJ7Cg0Fnek5z0DsMULePP7Lrqg==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-regex": "^7.8.3",
        "regexpu-core": "^4.7.0"
      },
      "dependencies": {
        "regexpu-core": {
          "version": "4.7.0",
          "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.7.0.tgz",
          "integrity": "sha512-TQ4KXRnIn6tz6tjnrXEkD/sshygKH/j5KzK86X8MkeHyZ8qst/LZ89j3X4/8HEIfHANTFIP/AbXakeRhWIl5YQ==",
          "dev": true,
          "requires": {
            "regenerate": "^1.4.0",
            "regenerate-unicode-properties": "^8.2.0",
            "regjsgen": "^0.5.1",
            "regjsparser": "^0.6.4",
            "unicode-match-property-ecmascript": "^1.0.4",
            "unicode-match-property-value-ecmascript": "^1.2.0"
          }
        },
        "regjsgen": {
          "version": "0.5.2",
          "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.2.tgz",
          "integrity": "sha512-OFFT3MfrH90xIW8OOSyUrk6QHD5E9JOTeGodiJeBS3J6IwlgzJMNE/1bZklWz5oTg+9dCMyEetclvCVXOPoN3A==",
          "dev": true
        },
        "regjsparser": {
          "version": "0.6.4",
          "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.4.tgz",
          "integrity": "sha512-64O87/dPDgfk8/RQqC4gkZoGyyWFIEUTTh80CU6CWuK5vkCGyekIx+oKcEIYtP/RAxSQltCZHCNu/mdd7fqlJw==",
          "dev": true,
          "requires": {
            "jsesc": "~0.5.0"
          }
        }
      }
    },
    "@babel/helper-define-map": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-map/-/helper-define-map-7.8.3.tgz",
      "integrity": "sha512-PoeBYtxoZGtct3md6xZOCWPcKuMuk3IHhgxsRRNtnNShebf4C8YonTSblsK4tvDbm+eJAw2HAPOfCr+Q/YRG/g==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/types": "^7.8.3",
        "lodash": "^4.17.13"
      }
    },
    "@babel/helper-explode-assignable-expression": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.8.3.tgz",
      "integrity": "sha512-N+8eW86/Kj147bO9G2uclsg5pwfs/fqqY5rwgIL7eTBklgXjcOJ3btzS5iM6AitJcftnY7pm2lGsrJVYLGjzIw==",
      "dev": true,
      "requires": {
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-function-name": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.8.3.tgz",
      "integrity": "sha512-BCxgX1BC2hD/oBlIFUgOCQDOPV8nSINxCwM3o93xP4P9Fq6aV5sgv2cOOITDMtCfQ+3PvHp3l689XZvAM9QyOA==",
      "dev": true,
      "requires": {
        "@babel/helper-get-function-arity": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-get-function-arity": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.8.3.tgz",
      "integrity": "sha512-FVDR+Gd9iLjUMY1fzE2SR0IuaJToR4RkCDARVfsBBPSP53GEqSFjD8gNyxg246VUyc/ALRxFaAK8rVG7UT7xRA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.8.3.tgz",
      "integrity": "sha512-ky1JLOjcDUtSc+xkt0xhYff7Z6ILTAHKmZLHPxAhOP0Nd77O+3nCsd6uSVYur6nJnCI029CrNbYlc0LoPfAPQg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.8.3.tgz",
      "integrity": "sha512-fO4Egq88utkQFjbPrSHGmGLFqmrshs11d46WI+WZDESt7Wu7wN2G2Iu+NMMZJFDOVRHAMIkB5SNh30NtwCA7RA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.8.3.tgz",
      "integrity": "sha512-R0Bx3jippsbAEtzkpZ/6FIiuzOURPcMjHp+Z6xPe6DtApDJx+w7UYyOLanZqO8+wKR9G10s/FmHXvxaMd9s6Kg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.8.6.tgz",
      "integrity": "sha512-RDnGJSR5EFBJjG3deY0NiL0K9TO8SXxS9n/MPsbPK/s9LbQymuLNtlzvDiNS7IpecuL45cMeLVkA+HfmlrnkRg==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.6",
        "@babel/helper-simple-access": "^7.8.3",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "@babel/template": "^7.8.6",
        "@babel/types": "^7.8.6",
        "lodash": "^4.17.13"
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.8.3.tgz",
      "integrity": "sha512-Kag20n86cbO2AvHca6EJsvqAd82gc6VMGule4HwebwMlwkpXuVqrNRj6CkCV2sKxgi9MyAUnZVnZ6lJ1/vKhHQ==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.8.3.tgz",
      "integrity": "sha512-j+fq49Xds2smCUNYmEHF9kGNkhbet6yVIBp4e6oeQpH1RUs/Ir06xUKzDjDkGcaaokPiTNs2JBWHjaE4csUkZQ==",
      "dev": true
    },
    "@babel/helper-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-regex/-/helper-regex-7.8.3.tgz",
      "integrity": "sha512-BWt0QtYv/cg/NecOAZMdcn/waj/5P26DR4mVLXfFtDokSR6fyuG0Pj+e2FqtSME+MqED1khnSMulkmGl8qWiUQ==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.13"
      }
    },
    "@babel/helper-remap-async-to-generator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.8.3.tgz",
      "integrity": "sha512-kgwDmw4fCg7AVgS4DukQR/roGp+jP+XluJE5hsRZwxCYGg+Rv9wSGErDWhlI90FODdYfd4xG4AQRiMDjjN0GzA==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-wrap-function": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-replace-supers": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.8.6.tgz",
      "integrity": "sha512-PeMArdA4Sv/Wf4zXwBKPqVj7n9UF/xg6slNRtZW84FM7JpE1CbG8B612FyM4cxrf4fMAMGO0kR7voy1ForHHFA==",
      "dev": true,
      "requires": {
        "@babel/helper-member-expression-to-functions": "^7.8.3",
        "@babel/helper-optimise-call-expression": "^7.8.3",
        "@babel/traverse": "^7.8.6",
        "@babel/types": "^7.8.6"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.8.3.tgz",
      "integrity": "sha512-VNGUDjx5cCWg4vvCTR8qQ7YJYZ+HBjxOgXEl7ounz+4Sn7+LMD3CFrCTEU6/qXKbA2nKg21CwhhBzO0RpRbdCw==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.8.3.tgz",
      "integrity": "sha512-3x3yOeyBhW851hroze7ElzdkeRXQYQbFIb7gLK1WQYsw2GWDay5gAJNw1sWJ0VFP6z5J1whqeXH/WCdCjZv6dA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.9.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.9.5.tgz",
      "integrity": "sha512-/8arLKUFq882w4tWGj9JYzRpAlZgiWUJ+dtteNTDqrRBz9Iguck9Rn3ykuBDoUwh2TO4tSAJlrxDUOXWklJe4g==",
      "dev": true
    },
    "@babel/helper-wrap-function": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.8.3.tgz",
      "integrity": "sha512-LACJrbUET9cQDzb6kG7EeD7+7doC3JNvUgTEQOx2qaO1fKlzE/Bf05qs9w1oXQMmXlPO65lC3Tq9S6gZpTErEQ==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helpers": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.8.4.tgz",
      "integrity": "sha512-VPbe7wcQ4chu4TDQjimHv/5tj73qz88o12EPkO2ValS2QiQS/1F2SsjyIGNnAD0vF/nZS6Cf9i+vW6HIlnaR8w==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.8.4",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/highlight": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.8.3.tgz",
      "integrity": "sha512-PX4y5xQUvy0fnEVHrYOarRPXVWafSjTW9T0Hab8gVIawpl2Sj0ORyrygANq+KjcNlSSTw0YCLSNA8OyZ1I4yEg==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.0",
        "esutils": "^2.0.2",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "js-tokens": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
          "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@babel/parser": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.8.6.tgz",
      "integrity": "sha512-trGNYSfwq5s0SgM1BMEB8hX3NDmO7EP2wsDGDexiaKMB92BaRpS+qZfpkMqUBhcsOTBwNy9B/jieo4ad/t/z2g==",
      "dev": true
    },
    "@babel/plugin-proposal-async-generator-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.8.3.tgz",
      "integrity": "sha512-NZ9zLv848JsV3hs8ryEh7Uaz/0KsmPLqv0+PdkDJL1cJy0K4kOCFa8zc1E3mp+RHPQcpdfb/6GovEsW4VDrOMw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-remap-async-to-generator": "^7.8.3",
        "@babel/plugin-syntax-async-generators": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-class-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.8.3.tgz",
      "integrity": "sha512-EqFhbo7IosdgPgZggHaNObkmO1kNUe3slaKu54d5OWvy+p9QIKOzK1GAEpAIsZtWVtPXUHSMcT4smvDrCfY4AA==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-decorators": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.8.3.tgz",
      "integrity": "sha512-e3RvdvS4qPJVTe288DlXjwKflpfy1hr0j5dz5WpIYYeP7vQZg2WfAEIp8k5/Lwis/m5REXEteIz6rrcDtXXG7w==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-decorators": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-NyaBbyLFXFLT9FP+zk0kYlUlA8XtCUbehs67F0nnEg7KICgMc2mNkIeu9TYhKzyXMkrapZFwAhXLdnt4IYHy1w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-dynamic-import": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-json-strings": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.10.0.tgz",
      "integrity": "sha512-n4oQLAAXTFj0OusjIbr6bcvVQf8oH6QziwAK8QNtKhjJAg71+hnU2rZDZYkYMmfOZ46dCWf+ybbHJ7hxfrzFlw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-json-strings": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-TS9MlfzXpXKt6YYomudb/KU7nQI6/xnapG6in1uZxoxDghuSMZsPb6D2fyUwNYSAp4l1iR7QtFOjkqcRYcUsfw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-numeric-separator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.8.3.tgz",
      "integrity": "sha512-jWioO1s6R/R+wEHizfaScNsAx+xKgwTLNXSh7tTC4Usj3ItsPEhYkEpU4h+lpnBwq7NBVOJXfO6cRFYcX69JUQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-numeric-separator": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-object-rest-spread": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.10.0.tgz",
      "integrity": "sha512-DOD+4TqMcRKJdAfN08+v9cciK5d0HW5hwTndOoKZEfEzU/mRrKboheD5mnWU4Q96VOnDdAj86kKjZhoQyG6s+A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.0",
        "@babel/plugin-transform-parameters": "^7.9.5"
      }
    },
    "@babel/plugin-proposal-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-0gkX7J7E+AtAw9fcwlVQj8peP61qhdg/89D5swOkjYbkboA2CVckn3kiyum1DE0wskGb7KJJxBdyEBApDLLVdw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-optional-chaining": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.10.0.tgz",
      "integrity": "sha512-bn+9XT8Y6FJCO37ewj4E1gIirR35nDm+mGcqQV4dM3LKSVp3QTAU3f65Z0ld4y6jdfAlv2VKzCh4mezhRnl+6Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-optional-chaining": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-private-methods": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.8.3.tgz",
      "integrity": "sha512-ysLAper960yy1TVXa2lMYdCQIGqtUXo8sVb+zYE7UTiZSLs6/wbZ0PrrXEKESJcK3SgFWrF8WpsaDzdslhuoZA==",
      "dev": true,
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.8.8.tgz",
      "integrity": "sha512-EVhjVsMpbhLw9ZfHWSx2iy13Q8Z/eg8e8ccVWt23sWQK5l1UdkoLJPN5w69UA4uITGBnEZD2JOe4QOHycYKv8A==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.8",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-bigint": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz",
      "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-class-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.8.3.tgz",
      "integrity": "sha512-UcAyQWg2bAN647Q+O811tG9MrJ38Z10jjhQdKNAL8fsyPzE3cCN/uT+f55cFVY4aGO4jqJAvmqsuY3GQDwAoXg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-decorators": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.8.3.tgz",
      "integrity": "sha512-8Hg4dNNT9/LcA1zQlfwuKR8BUc/if7Q7NkTam9sGTcJphLwpf2g4S42uhspQrIrR+dpzE0dtTqBVFoHl8GtnnQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-jsx": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.8.3.tgz",
      "integrity": "sha512-WxdW9xyLgBdefoo0Ynn3MRSkhe5tFVxxKNVdnZSh318WrG2e2jH+E9wd/++JsqcLJZPfz87njQJ8j2Upjm0M0A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-nullish-coalescing-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-numeric-separator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.8.3.tgz",
      "integrity": "sha512-H7dCMAdN83PcCmqmkHB5dtp+Xa9a6LKSvA2hiFBC/5alSHxM5VgWZXFqDi0YFe8XNGT6iCa+z4V4zSt/PdZ7Dw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-chaining": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-top-level-await": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.8.3.tgz",
      "integrity": "sha512-kwj1j9lL/6Wd0hROD3b/OZZ7MSrZLqqn9RAZ5+cYYsflQ9HZBIKCUkr3+uL1MEJ1NePiUbf98jjiMQSv0NMR9g==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-arrow-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.8.3.tgz",
      "integrity": "sha512-0MRF+KC8EqH4dbuITCWwPSzsyO3HIWWlm30v8BbbpOrS1B++isGxPnnuq/IZvOX5J2D/p7DQalQm+/2PnlKGxg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-async-to-generator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.8.3.tgz",
      "integrity": "sha512-imt9tFLD9ogt56Dd5CI/6XgpukMwd/fLGSrix2httihVe7LOGVPhyhMh1BU5kDM7iHD08i8uUtmV2sWaBFlHVQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-remap-async-to-generator": "^7.8.3"
      }
    },
    "@babel/plugin-transform-block-scoped-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.8.3.tgz",
      "integrity": "sha512-vo4F2OewqjbB1+yaJ7k2EJFHlTP3jR634Z9Cj9itpqNjuLXvhlVxgnjsHsdRgASR8xYDrx6onw4vW5H6We0Jmg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-block-scoping": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.10.0.tgz",
      "integrity": "sha512-AoMn0D3nLG9i71useuBrZZTnHbjnhcaTXCckUtOx3JPuhGGJdOUYMwOV9niPJ+nZCk52dfLLqbmV3pBMCRQLNw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "lodash": "^4.17.13"
      }
    },
    "@babel/plugin-transform-classes": {
      "version": "7.9.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.9.5.tgz",
      "integrity": "sha512-x2kZoIuLC//O5iA7PEvecB105o7TLzZo8ofBVhP79N+DO3jaX+KYfww9TQcfBEZD0nikNyYcGB1IKtRq36rdmg==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-define-map": "^7.8.3",
        "@babel/helper-function-name": "^7.9.5",
        "@babel/helper-optimise-call-expression": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.6",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "globals": "^11.1.0"
      },
      "dependencies": {
        "@babel/helper-function-name": {
          "version": "7.9.5",
          "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.9.5.tgz",
          "integrity": "sha512-JVcQZeXM59Cd1qanDUxv9fgJpt3NeKUaqBqUEvfmQ+BCOKq2xUgaWZW2hr0dkbyJgezYuplEoh5knmrnS68efw==",
          "dev": true,
          "requires": {
            "@babel/helper-get-function-arity": "^7.8.3",
            "@babel/template": "^7.8.3",
            "@babel/types": "^7.9.5"
          }
        },
        "@babel/types": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.10.0.tgz",
          "integrity": "sha512-t41W8yWFyQFPOAAvPvjyRhejcLGnJTA3iRpFcDbEKwVJ3UnHQePFzLk8GagTsucJlImyNwrGikGsYURrWbQG8w==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.5",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "globals": {
          "version": "11.12.0",
          "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
          "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
          "dev": true
        },
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@babel/plugin-transform-computed-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.8.3.tgz",
      "integrity": "sha512-O5hiIpSyOGdrQZRQ2ccwtTVkgUDBBiCuK//4RJ6UfePllUTCENOzKxfh6ulckXKc0DixTFLCfb2HVkNA7aDpzA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-destructuring": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.10.0.tgz",
      "integrity": "sha512-yKoghHpYbC0eM+6o6arPUJT9BQBvOOn8iOCEHwFvkJ5gjAxYmoUaAuLwaoA9h2YvC6dzcRI0KPQOpRXr8qQTxQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-dotall-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.8.3.tgz",
      "integrity": "sha512-kLs1j9Nn4MQoBYdRXH6AeaXMbEJFaFu/v1nQkvib6QzTj8MZI5OQzqmD83/2jEM1z0DLilra5aWO5YpyC0ALIw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-duplicate-keys": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.8.3.tgz",
      "integrity": "sha512-s8dHiBUbcbSgipS4SMFuWGqCvyge5V2ZeAWzR6INTVC3Ltjig/Vw1G2Gztv0vU/hRG9X8IvKvYdoksnUfgXOEQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-exponentiation-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.8.3.tgz",
      "integrity": "sha512-zwIpuIymb3ACcInbksHaNcR12S++0MDLKkiqXHl3AzpgdKlFNhog+z/K0+TGW+b0w5pgTq4H6IwV/WhxbGYSjQ==",
      "dev": true,
      "requires": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-for-of": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.10.0.tgz",
      "integrity": "sha512-0ldl5xEe9kbuhB1cDqs17JiBPEm1+6/LH7loo29+MAJOyB/xbpLI/u6mRzDPjr0nYL7z0S14FPT4hs2gH8Im9Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-function-name": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.8.3.tgz",
      "integrity": "sha512-rO/OnDS78Eifbjn5Py9v8y0aR+aSYhDhqAwVfsTl0ERuMZyr05L1aFSCJnbv2mmsLkit/4ReeQ9N2BgLnOcPCQ==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.8.3.tgz",
      "integrity": "sha512-3Tqf8JJ/qB7TeldGl+TT55+uQei9JfYaregDcEAyBZ7akutriFrt6C/wLYIer6OYhleVQvH/ntEhjE/xMmy10A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-member-expression-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.8.3.tgz",
      "integrity": "sha512-3Wk2EXhnw+rP+IDkK6BdtPKsUE5IeZ6QOGrPYvw52NwBStw9V1ZVzxgK6fSKSxqUvH9eQPR3tm3cOq79HlsKYA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-modules-amd": {
      "version": "7.9.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.9.6.tgz",
      "integrity": "sha512-zoT0kgC3EixAyIAU+9vfaUVKTv9IxBDSabgHoUCBP6FqEJ+iNiN7ip7NBKcYqbfUDfuC2mFCbM7vbu4qJgOnDw==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      },
      "dependencies": {
        "@babel/helper-module-transforms": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
          "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
          "dev": true,
          "requires": {
            "@babel/helper-module-imports": "^7.8.3",
            "@babel/helper-replace-supers": "^7.8.6",
            "@babel/helper-simple-access": "^7.8.3",
            "@babel/helper-split-export-declaration": "^7.8.3",
            "@babel/template": "^7.8.6",
            "@babel/types": "^7.9.0",
            "lodash": "^4.17.13"
          }
        },
        "@babel/types": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.10.0.tgz",
          "integrity": "sha512-t41W8yWFyQFPOAAvPvjyRhejcLGnJTA3iRpFcDbEKwVJ3UnHQePFzLk8GagTsucJlImyNwrGikGsYURrWbQG8w==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.5",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "babel-plugin-dynamic-import-node": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
          "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
          "dev": true,
          "requires": {
            "object.assign": "^4.1.0"
          }
        },
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@babel/plugin-transform-modules-commonjs": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.8.3.tgz",
      "integrity": "sha512-JpdMEfA15HZ/1gNuB9XEDlZM1h/gF/YOH7zaZzQu2xCFRfwc01NXBMHHSTT6hRjlXJJs5x/bfODM3LiCk94Sxg==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-simple-access": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.0"
      }
    },
    "@babel/plugin-transform-modules-systemjs": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.10.0.tgz",
      "integrity": "sha512-L/1xADoyJeb01fqKiHhl4ghAJOnFcHvx2JQA7bc8zdaDFDU4k62CJmXqDtNtJUNiOwlHZLWg1l7/Twf1aWARQw==",
      "dev": true,
      "requires": {
        "@babel/helper-hoist-variables": "^7.8.3",
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.3"
      },
      "dependencies": {
        "@babel/helper-module-transforms": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
          "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
          "dev": true,
          "requires": {
            "@babel/helper-module-imports": "^7.8.3",
            "@babel/helper-replace-supers": "^7.8.6",
            "@babel/helper-simple-access": "^7.8.3",
            "@babel/helper-split-export-declaration": "^7.8.3",
            "@babel/template": "^7.8.6",
            "@babel/types": "^7.9.0",
            "lodash": "^4.17.13"
          }
        },
        "@babel/types": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.10.0.tgz",
          "integrity": "sha512-t41W8yWFyQFPOAAvPvjyRhejcLGnJTA3iRpFcDbEKwVJ3UnHQePFzLk8GagTsucJlImyNwrGikGsYURrWbQG8w==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.5",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "babel-plugin-dynamic-import-node": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
          "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
          "dev": true,
          "requires": {
            "object.assign": "^4.1.0"
          }
        },
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@babel/plugin-transform-modules-umd": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.9.0.tgz",
      "integrity": "sha512-uTWkXkIVtg/JGRSIABdBoMsoIeoHQHPTL0Y2E7xf5Oj7sLqwVsNXOkNk0VJc7vF0IMBsPeikHxFjGe+qmwPtTQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3"
      },
      "dependencies": {
        "@babel/helper-module-transforms": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
          "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
          "dev": true,
          "requires": {
            "@babel/helper-module-imports": "^7.8.3",
            "@babel/helper-replace-supers": "^7.8.6",
            "@babel/helper-simple-access": "^7.8.3",
            "@babel/helper-split-export-declaration": "^7.8.3",
            "@babel/template": "^7.8.6",
            "@babel/types": "^7.9.0",
            "lodash": "^4.17.13"
          }
        },
        "@babel/types": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.10.0.tgz",
          "integrity": "sha512-t41W8yWFyQFPOAAvPvjyRhejcLGnJTA3iRpFcDbEKwVJ3UnHQePFzLk8GagTsucJlImyNwrGikGsYURrWbQG8w==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.5",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.8.3.tgz",
      "integrity": "sha512-f+tF/8UVPU86TrCb06JoPWIdDpTNSGGcAtaD9mLP0aYGA0OS0j7j7DHJR0GTFrUZPUU6loZhbsVZgTh0N+Qdnw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3"
      }
    },
    "@babel/plugin-transform-new-target": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.8.3.tgz",
      "integrity": "sha512-QuSGysibQpyxexRyui2vca+Cmbljo8bcRckgzYV4kRIsHpVeyeC3JDO63pY+xFZ6bWOBn7pfKZTqV4o/ix9sFw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-object-super": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.8.3.tgz",
      "integrity": "sha512-57FXk+gItG/GejofIyLIgBKTas4+pEU47IXKDBWFTxdPd7F80H8zybyAY7UoblVfBhBGs2EKM+bJUu2+iUYPDQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.3"
      }
    },
    "@babel/plugin-transform-parameters": {
      "version": "7.9.5",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.9.5.tgz",
      "integrity": "sha512-0+1FhHnMfj6lIIhVvS4KGQJeuhe1GI//h5uptK4PvLt+BGBxsoUJbd3/IW002yk//6sZPlFgsG1hY6OHLcy6kA==",
      "dev": true,
      "requires": {
        "@babel/helper-get-function-arity": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-property-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.8.3.tgz",
      "integrity": "sha512-uGiiXAZMqEoQhRWMK17VospMZh5sXWg+dlh2soffpkAl96KAm+WZuJfa6lcELotSRmooLqg0MWdH6UUq85nmmg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-regenerator": {
      "version": "7.8.7",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.8.7.tgz",
      "integrity": "sha512-TIg+gAl4Z0a3WmD3mbYSk+J9ZUH6n/Yc57rtKRnlA/7rcCvpekHXe0CMZHP1gYp7/KLe9GHTuIba0vXmls6drA==",
      "dev": true,
      "requires": {
        "regenerator-transform": "^0.14.2"
      },
      "dependencies": {
        "regenerator-transform": {
          "version": "0.14.4",
          "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.14.4.tgz",
          "integrity": "sha512-EaJaKPBI9GvKpvUz2mz4fhx7WPgvwRLY9v3hlNHWmAuJHI13T4nwKnNvm5RWJzEdnI5g5UwtOww+S8IdoUC2bw==",
          "dev": true,
          "requires": {
            "@babel/runtime": "^7.8.4",
            "private": "^0.1.8"
          }
        }
      }
    },
    "@babel/plugin-transform-reserved-words": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.8.3.tgz",
      "integrity": "sha512-mwMxcycN3omKFDjDQUl+8zyMsBfjRFr0Zn/64I41pmjv4NJuqcYlEtezwYtw9TFd9WR1vN5kiM+O0gMZzO6L0A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-runtime": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.8.3.tgz",
      "integrity": "sha512-/vqUt5Yh+cgPZXXjmaG9NT8aVfThKk7G4OqkVhrXqwsC5soMn/qTCxs36rZ2QFhpfTJcjw4SNDIZ4RUb8OL4jQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "resolve": "^1.8.1",
        "semver": "^5.5.1"
      }
    },
    "@babel/plugin-transform-shorthand-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.8.3.tgz",
      "integrity": "sha512-I9DI6Odg0JJwxCHzbzW08ggMdCezoWcuQRz3ptdudgwaHxTjxw5HgdFJmZIkIMlRymL6YiZcped4TTCB0JcC8w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-spread": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.10.0.tgz",
      "integrity": "sha512-P3Zj04ylqumJBjmjylNl05ZHRo4j4gFNG7P70loys0//q5BTe30E8xIj6PnqEWAfsPYu2sdIPcJeeQdclqlM6A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-sticky-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.8.3.tgz",
      "integrity": "sha512-9Spq0vGCD5Bb4Z/ZXXSK5wbbLFMG085qd2vhL1JYu1WcQ5bXqZBAYRzU1d+p79GcHs2szYv5pVQCX13QgldaWw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-regex": "^7.8.3"
      }
    },
    "@babel/plugin-transform-template-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.8.3.tgz",
      "integrity": "sha512-820QBtykIQOLFT8NZOcTRJ1UNuztIELe4p9DCgvj4NK+PwluSJ49we7s9FB1HIGNIYT7wFUJ0ar2QpCDj0escQ==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-typeof-symbol": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.8.4.tgz",
      "integrity": "sha512-2QKyfjGdvuNfHsb7qnBBlKclbD4CfshH2KvDabiijLMGXPHJXGxtDzwIF7bQP+T0ysw8fYTtxPafgfs/c1Lrqg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-unicode-escapes": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.10.0.tgz",
      "integrity": "sha512-6DwSPQzJ9kSRI1kNFfVAeYdeH7sUH0c1NOYSBGnpJ1ZUZ7mxPY1hxeAqzcrO5NKlOx7ghcy4nAbfFWTPx5IVEg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-unicode-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.8.3.tgz",
      "integrity": "sha512-+ufgJjYdmWfSQ+6NS9VGUR2ns8cjJjYbrbi11mZBTaWm+Fui/ncTLFF28Ei1okavY+xkojGr1eJxNsWYeA5aZw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/preset-env": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.10.0.tgz",
      "integrity": "sha512-UOZNyiZRvIGvIudjCB8Y8OVkpAvlslec4qgwC73yEvx3Puz0c/xc28Yru36y5K+StOkPPM+VldTsmXPht5LpSg==",
      "dev": true,
      "requires": {
        "@babel/compat-data": "^7.10.0",
        "@babel/helper-compilation-targets": "^7.10.0",
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-proposal-async-generator-functions": "^7.8.3",
        "@babel/plugin-proposal-class-properties": "^7.8.3",
        "@babel/plugin-proposal-dynamic-import": "^7.8.3",
        "@babel/plugin-proposal-json-strings": "^7.10.0",
        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.8.3",
        "@babel/plugin-proposal-numeric-separator": "^7.8.3",
        "@babel/plugin-proposal-object-rest-spread": "^7.10.0",
        "@babel/plugin-proposal-optional-catch-binding": "^7.8.3",
        "@babel/plugin-proposal-optional-chaining": "^7.10.0",
        "@babel/plugin-proposal-private-methods": "^7.8.3",
        "@babel/plugin-proposal-unicode-property-regex": "^7.8.3",
        "@babel/plugin-syntax-async-generators": "^7.8.0",
        "@babel/plugin-syntax-class-properties": "^7.8.3",
        "@babel/plugin-syntax-dynamic-import": "^7.8.0",
        "@babel/plugin-syntax-json-strings": "^7.8.0",
        "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0",
        "@babel/plugin-syntax-numeric-separator": "^7.8.0",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.0",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.0",
        "@babel/plugin-syntax-optional-chaining": "^7.8.0",
        "@babel/plugin-syntax-top-level-await": "^7.8.3",
        "@babel/plugin-transform-arrow-functions": "^7.8.3",
        "@babel/plugin-transform-async-to-generator": "^7.8.3",
        "@babel/plugin-transform-block-scoped-functions": "^7.8.3",
        "@babel/plugin-transform-block-scoping": "^7.10.0",
        "@babel/plugin-transform-classes": "^7.9.5",
        "@babel/plugin-transform-computed-properties": "^7.8.3",
        "@babel/plugin-transform-destructuring": "^7.10.0",
        "@babel/plugin-transform-dotall-regex": "^7.8.3",
        "@babel/plugin-transform-duplicate-keys": "^7.8.3",
        "@babel/plugin-transform-exponentiation-operator": "^7.8.3",
        "@babel/plugin-transform-for-of": "^7.10.0",
        "@babel/plugin-transform-function-name": "^7.8.3",
        "@babel/plugin-transform-literals": "^7.8.3",
        "@babel/plugin-transform-member-expression-literals": "^7.8.3",
        "@babel/plugin-transform-modules-amd": "^7.9.6",
        "@babel/plugin-transform-modules-commonjs": "^7.9.6",
        "@babel/plugin-transform-modules-systemjs": "^7.10.0",
        "@babel/plugin-transform-modules-umd": "^7.9.0",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.8.3",
        "@babel/plugin-transform-new-target": "^7.8.3",
        "@babel/plugin-transform-object-super": "^7.8.3",
        "@babel/plugin-transform-parameters": "^7.9.5",
        "@babel/plugin-transform-property-literals": "^7.8.3",
        "@babel/plugin-transform-regenerator": "^7.8.7",
        "@babel/plugin-transform-reserved-words": "^7.8.3",
        "@babel/plugin-transform-shorthand-properties": "^7.8.3",
        "@babel/plugin-transform-spread": "^7.10.0",
        "@babel/plugin-transform-sticky-regex": "^7.8.3",
        "@babel/plugin-transform-template-literals": "^7.8.3",
        "@babel/plugin-transform-typeof-symbol": "^7.8.4",
        "@babel/plugin-transform-unicode-escapes": "^7.10.0",
        "@babel/plugin-transform-unicode-regex": "^7.8.3",
        "@babel/preset-modules": "^0.1.3",
        "@babel/types": "^7.10.0",
        "browserslist": "^4.12.0",
        "core-js-compat": "^3.6.2",
        "invariant": "^2.2.2",
        "levenary": "^1.1.1",
        "semver": "^5.5.0"
      },
      "dependencies": {
        "@babel/compat-data": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.10.0.tgz",
          "integrity": "sha512-H59nKm/7ATMfocMobbSk4PkeAerKqoxk+EYBT0kV5sol0e8GBpGNHseZNNYX0VOItKngIf6GgUpEOAlOLIUvDA==",
          "dev": true,
          "requires": {
            "browserslist": "^4.12.0",
            "invariant": "^2.2.4",
            "semver": "^5.5.0"
          }
        },
        "@babel/helper-compilation-targets": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.10.0.tgz",
          "integrity": "sha512-PW5Hlc1cQ8bLzY7YsLJP6PQ7GR6ZD8Av4JlP3DZk6QaZJvptsXNDn4Su64EjKAetLTJhVPDp8AEC+j2O6b/Gpg==",
          "dev": true,
          "requires": {
            "@babel/compat-data": "^7.10.0",
            "browserslist": "^4.12.0",
            "invariant": "^2.2.4",
            "levenary": "^1.1.1",
            "semver": "^5.5.0"
          }
        },
        "@babel/helper-module-transforms": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
          "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
          "dev": true,
          "requires": {
            "@babel/helper-module-imports": "^7.8.3",
            "@babel/helper-replace-supers": "^7.8.6",
            "@babel/helper-simple-access": "^7.8.3",
            "@babel/helper-split-export-declaration": "^7.8.3",
            "@babel/template": "^7.8.6",
            "@babel/types": "^7.9.0",
            "lodash": "^4.17.13"
          }
        },
        "@babel/plugin-transform-modules-commonjs": {
          "version": "7.9.6",
          "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.9.6.tgz",
          "integrity": "sha512-7H25fSlLcn+iYimmsNe3uK1at79IE6SKW9q0/QeEHTMC9MdOZ+4bA+T1VFB5fgOqBWoqlifXRzYD0JPdmIrgSQ==",
          "dev": true,
          "requires": {
            "@babel/helper-module-transforms": "^7.9.0",
            "@babel/helper-plugin-utils": "^7.8.3",
            "@babel/helper-simple-access": "^7.8.3",
            "babel-plugin-dynamic-import-node": "^2.3.3"
          }
        },
        "@babel/types": {
          "version": "7.10.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.10.0.tgz",
          "integrity": "sha512-t41W8yWFyQFPOAAvPvjyRhejcLGnJTA3iRpFcDbEKwVJ3UnHQePFzLk8GagTsucJlImyNwrGikGsYURrWbQG8w==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.5",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "babel-plugin-dynamic-import-node": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
          "integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
          "dev": true,
          "requires": {
            "object.assign": "^4.1.0"
          }
        },
        "browserslist": {
          "version": "4.12.0",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.12.0.tgz",
          "integrity": "sha512-UH2GkcEDSI0k/lRkuDSzFl9ZZ87skSy9w2XAn1MsZnL+4c4rqbBd3e82UWHbYDpztABrPBhZsTEeuxVfHppqDg==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001043",
            "electron-to-chromium": "^1.3.413",
            "node-releases": "^1.1.53",
            "pkg-up": "^2.0.0"
          }
        },
        "caniuse-lite": {
          "version": "1.0.30001066",
          "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001066.tgz",
          "integrity": "sha512-Gfj/WAastBtfxLws0RCh2sDbTK/8rJuSeZMecrSkNGYxPcv7EzblmDGfWQCFEQcSqYE2BRgQiJh8HOD07N5hIw==",
          "dev": true
        },
        "electron-to-chromium": {
          "version": "1.3.453",
          "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.453.tgz",
          "integrity": "sha512-IQbCfjJR0NDDn/+vojTlq7fPSREcALtF8M1n01gw7nQghCtfFYrJ2dfhsp8APr8bANoFC8vRTFVXMOGpT0eetw==",
          "dev": true
        },
        "node-releases": {
          "version": "1.1.57",
          "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.57.tgz",
          "integrity": "sha512-ZQmnWS7adi61A9JsllJ2gdj2PauElcjnOwTp2O011iGzoakTxUsDGSe+6vD7wXbKdqhSFymC0OSx35aAMhrSdw==",
          "dev": true
        },
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@babel/preset-modules": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.3.tgz",
      "integrity": "sha512-Ra3JXOHBq2xd56xSF7lMKXdjBn3T772Y1Wet3yWnkDly9zHvJki029tAFzvAAK5cf4YV3yoxuP61crYRol6SVg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
        "@babel/plugin-transform-dotall-regex": "^7.4.4",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      }
    },
    "@babel/runtime": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.8.4.tgz",
      "integrity": "sha512-neAp3zt80trRVBI1x0azq6c57aNBqYZH8KhMm3TaB7wEI5Q4A2SHfBHE8w9gOhI/lrqxtEbXZgQIrHP+wvSGwQ==",
      "requires": {
        "regenerator-runtime": "^0.13.2"
      },
      "dependencies": {
        "regenerator-runtime": {
          "version": "0.13.3",
          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.3.tgz",
          "integrity": "sha512-naKIZz2GQ8JWh///G7L3X6LaQUAMp2lvb1rvwwsURe/VXwD6VMfr+/1NuNw3ag8v2kY1aQ/go5SNn79O9JU7yw=="
        }
      }
    },
    "@babel/template": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.8.6.tgz",
      "integrity": "sha512-zbMsPMy/v0PWFZEhQJ66bqjhH+z0JgMoBWuikXybgG3Gkd/3t5oQ1Rw2WQhnSrsOmsKXnZOx15tkC4qON/+JPg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "@babel/parser": "^7.8.6",
        "@babel/types": "^7.8.6"
      }
    },
    "@babel/traverse": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.8.6.tgz",
      "integrity": "sha512-2B8l0db/DPi8iinITKuo7cbPznLCEk0kCxDoB9/N6gGNg/gxOXiR/IcymAFPiBwk5w6TtQ27w4wpElgp9btR9A==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "@babel/generator": "^7.8.6",
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "@babel/parser": "^7.8.6",
        "@babel/types": "^7.8.6",
        "debug": "^4.1.0",
        "globals": "^11.1.0",
        "lodash": "^4.17.13"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "globals": {
          "version": "11.12.0",
          "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
          "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
          "dev": true
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "@babel/types": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.8.6.tgz",
      "integrity": "sha512-wqz7pgWMIrht3gquyEFPVXeXCti72Rm8ep9b5tQKz9Yg9LzJA3HxosF1SB3Kc81KD1A3XBkkVYtJvCKS2Z/QrA==",
      "dev": true,
      "requires": {
        "esutils": "^2.0.2",
        "lodash": "^4.17.13",
        "to-fast-properties": "^2.0.0"
      },
      "dependencies": {
        "to-fast-properties": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
          "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
          "dev": true
        }
      }
    },
    "@bcoe/v8-coverage": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz",
      "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==",
      "dev": true
    },
    "@cnakazawa/watch": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.4.tgz",
      "integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw/N3rWOYy9zkV66ursAoVr0mV15bL8g0c4QZUE6cdDoQ==",
      "dev": true,
      "requires": {
        "exec-sh": "^0.3.2",
        "minimist": "^1.2.0"
      }
    },
    "@develar/schema-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@develar/schema-utils/-/schema-utils-2.1.0.tgz",
      "integrity": "sha512-qjCqB4ctMig9Gz5bd6lkdFr3bO6arOdQqptdBSpF1ZpCnjofieCciEzkoS9ujY9cMGyllYSCSmBJ3x9OKHXzoA==",
      "dev": true,
      "requires": {
        "ajv": "^6.1.0",
        "ajv-keywords": "^3.1.0"
      }
    },
    "@electron/get": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@electron/get/-/get-1.9.0.tgz",
      "integrity": "sha512-OBIKtF6ttIJotDXe4KJMUyTBO4xMii+mFjlA8R4CORuD4HvCUaCK3lPjhdTRCvuEv6gzWNbAvd9DNBv0v780lw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "env-paths": "^2.2.0",
        "fs-extra": "^8.1.0",
        "global-agent": "^2.0.2",
        "global-tunnel-ng": "^2.7.1",
        "got": "^9.6.0",
        "progress": "^2.0.3",
        "sanitize-filename": "^1.6.2",
        "sumchecker": "^3.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "env-paths": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.0.tgz",
          "integrity": "sha512-6u0VYSCo/OW6IoD5WCLLy9JUGARbamfSavcNXry/eu8aHVFei6CD3Sw+VGX5alea1i9pgPHW0mbu6Xj0uBh7gA==",
          "dev": true
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "sumchecker": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/sumchecker/-/sumchecker-3.0.1.tgz",
          "integrity": "sha512-MvjXzkz/BOfyVDkG0oFOtBxHX2u3gKbMHIF/dXblZsgD3BWOFLmHovIpZY7BykJdAjcqRCBi1WYBNdEC9yI7vg==",
          "dev": true,
          "requires": {
            "debug": "^4.1.0"
          }
        }
      }
    },
    "@hapi/address": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/@hapi/address/-/address-2.1.4.tgz",
      "integrity": "sha512-QD1PhQk+s31P1ixsX0H0Suoupp3VMXzIVMSwobR3F3MSUO2YCV0B7xqLcUw/Bh8yuvd3LhpyqLQWTNcRmp6IdQ==",
      "dev": true
    },
    "@hapi/bourne": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/@hapi/bourne/-/bourne-1.3.2.tgz",
      "integrity": "sha512-1dVNHT76Uu5N3eJNTYcvxee+jzX4Z9lfciqRRHCU27ihbUcYi+iSc2iml5Ke1LXe1SyJCLA0+14Jh4tXJgOppA==",
      "dev": true
    },
    "@hapi/hoek": {
      "version": "8.5.1",
      "resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-8.5.1.tgz",
      "integrity": "sha512-yN7kbciD87WzLGc5539Tn0sApjyiGHAJgKvG9W8C7O+6c7qmoQMfVs0W4bX17eqz6C78QJqqFrtgdK5EWf6Qow==",
      "dev": true
    },
    "@hapi/joi": {
      "version": "15.1.1",
      "resolved": "https://registry.npmjs.org/@hapi/joi/-/joi-15.1.1.tgz",
      "integrity": "sha512-entf8ZMOK8sc+8YfeOlM8pCfg3b5+WZIKBfUaaJT8UsjAAPjartzxIYm3TIbjvA4u+u++KbcXD38k682nVHDAQ==",
      "dev": true,
      "requires": {
        "@hapi/address": "2.x.x",
        "@hapi/bourne": "1.x.x",
        "@hapi/hoek": "8.x.x",
        "@hapi/topo": "3.x.x"
      }
    },
    "@hapi/topo": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/@hapi/topo/-/topo-3.1.6.tgz",
      "integrity": "sha512-tAag0jEcjwH+P2quUfipd7liWCNX2F8NvYjQp2wtInsZxnMlypdw0FtAOLxtvvkO+GSRRbmNi8m/5y42PQJYCQ==",
      "dev": true,
      "requires": {
        "@hapi/hoek": "^8.3.0"
      }
    },
    "@intervolga/optimize-cssnano-plugin": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@intervolga/optimize-cssnano-plugin/-/optimize-cssnano-plugin-1.0.6.tgz",
      "integrity": "sha512-zN69TnSr0viRSU6cEDIcuPcP67QcpQ6uHACg58FiN9PDrU6SLyGW3MR4tiISbYxy1kDWAVPwD+XwQTWE5cigAA==",
      "dev": true,
      "requires": {
        "cssnano": "^4.0.0",
        "cssnano-preset-default": "^4.0.0",
        "postcss": "^7.0.0"
      }
    },
    "@istanbuljs/load-nyc-config": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.0.0.tgz",
      "integrity": "sha512-ZR0rq/f/E4f4XcgnDvtMWXCUJpi8eO0rssVhmztsZqLIEFA9UUP9zmpE0VxlM+kv/E1ul2I876Fwil2ayptDVg==",
      "dev": true,
      "requires": {
        "camelcase": "^5.3.1",
        "find-up": "^4.1.0",
        "js-yaml": "^3.13.1",
        "resolve-from": "^5.0.0"
      },
      "dependencies": {
        "resolve-from": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
          "dev": true
        }
      }
    },
    "@istanbuljs/schema": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.2.tgz",
      "integrity": "sha512-tsAQNx32a8CoFhjhijUIhI4kccIAgmGhy8LZMZgGfmXcpMbPRUqn5LWmgRttILi6yeGmBJd2xsPkFMs0PzgPCw==",
      "dev": true
    },
    "@jest/console": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/console/-/console-24.9.0.tgz",
      "integrity": "sha512-Zuj6b8TnKXi3q4ymac8EQfc3ea/uhLeCGThFqXeC8H9/raaH8ARPUTdId+XyGd03Z4In0/VjD2OYFcBF09fNLQ==",
      "dev": true,
      "requires": {
        "@jest/source-map": "^24.9.0",
        "chalk": "^2.0.1",
        "slash": "^2.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@jest/core": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/@jest/core/-/core-25.2.6.tgz",
      "integrity": "sha512-uMwUtpS4CWc7SadHcHEQ3VdrZ8A5u+UVbHIVUqhXcxlQ/bBC5+/T9IJGSu0o8e+/EXmFrTtl4zGr1nRPFq0Wlg==",
      "dev": true,
      "requires": {
        "@jest/console": "^25.2.6",
        "@jest/reporters": "^25.2.6",
        "@jest/test-result": "^25.2.6",
        "@jest/transform": "^25.2.6",
        "@jest/types": "^25.2.6",
        "ansi-escapes": "^4.2.1",
        "chalk": "^3.0.0",
        "exit": "^0.1.2",
        "graceful-fs": "^4.2.3",
        "jest-changed-files": "^25.2.6",
        "jest-config": "^25.2.6",
        "jest-haste-map": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-regex-util": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "jest-resolve-dependencies": "^25.2.6",
        "jest-runner": "^25.2.6",
        "jest-runtime": "^25.2.6",
        "jest-snapshot": "^25.2.6",
        "jest-util": "^25.2.6",
        "jest-validate": "^25.2.6",
        "jest-watcher": "^25.2.6",
        "micromatch": "^4.0.2",
        "p-each-series": "^2.1.0",
        "realpath-native": "^2.0.0",
        "rimraf": "^3.0.0",
        "slash": "^3.0.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/transform": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-25.2.6.tgz",
          "integrity": "sha512-rZnjCjZf9avPOf9q/w9RUZ9Uc29JmB53uIXNJmNz04QbDMD5cR/VjfikiMKajBsXe2vnFl5sJ4RTt+9HPicauQ==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.1.0",
            "@jest/types": "^25.2.6",
            "babel-plugin-istanbul": "^6.0.0",
            "chalk": "^3.0.0",
            "convert-source-map": "^1.4.0",
            "fast-json-stable-stringify": "^2.0.0",
            "graceful-fs": "^4.2.3",
            "jest-haste-map": "^25.2.6",
            "jest-regex-util": "^25.2.6",
            "jest-util": "^25.2.6",
            "micromatch": "^4.0.2",
            "pirates": "^4.0.1",
            "realpath-native": "^2.0.0",
            "slash": "^3.0.0",
            "source-map": "^0.6.1",
            "write-file-atomic": "^3.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "babel-plugin-istanbul": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.0.0.tgz",
          "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE/QtHmqtP8SWlTENqbK8GCSQ==",
          "dev": true,
          "requires": {
            "@babel/helper-plugin-utils": "^7.0.0",
            "@istanbuljs/load-nyc-config": "^1.0.0",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-instrument": "^4.0.0",
            "test-exclude": "^6.0.0"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "istanbul-lib-instrument": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.1.tgz",
          "integrity": "sha512-imIchxnodll7pvQBYOqUu88EufLCU56LMeFPZZM/fJZ1irYcYdqroaV+ACK1Ila8ls09iEYArp+nqyC6lW1Vfg==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.7.5",
            "@babel/parser": "^7.7.5",
            "@babel/template": "^7.7.4",
            "@babel/traverse": "^7.7.4",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-coverage": "^3.0.0",
            "semver": "^6.3.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-watcher": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-25.2.6.tgz",
          "integrity": "sha512-yzv5DBeo03dQnSsSrn1mdOU1LSDd1tZaCTvSE5JYfcv6Z66PdDNhO9MNDdLKA/oQlJNj0S6TiYgLdOY5wL5cMA==",
          "dev": true,
          "requires": {
            "@jest/test-result": "^25.2.6",
            "@jest/types": "^25.2.6",
            "ansi-escapes": "^4.2.1",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "string-length": "^3.1.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "string-length": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-length/-/string-length-3.1.0.tgz",
          "integrity": "sha512-Ttp5YvkGm5v9Ijagtaz1BnN+k9ObpvS0eIBblPMp2YWL8FBmi9qblQ9fexc2k/CXFgrTIteU3jAw3payCnwSTA==",
          "dev": true,
          "requires": {
            "astral-regex": "^1.0.0",
            "strip-ansi": "^5.2.0"
          },
          "dependencies": {
            "strip-ansi": {
              "version": "5.2.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
              "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
              "dev": true,
              "requires": {
                "ansi-regex": "^4.1.0"
              }
            }
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "5.0.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
              "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
              "dev": true
            }
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "test-exclude": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
          "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
          "dev": true,
          "requires": {
            "@istanbuljs/schema": "^0.1.2",
            "glob": "^7.1.4",
            "minimatch": "^3.0.4"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        }
      }
    },
    "@jest/environment": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-24.9.0.tgz",
      "integrity": "sha512-5A1QluTPhvdIPFYnO3sZC3smkNeXPVELz7ikPbhUj0bQjB07EoE9qtLrem14ZUYWdVayYbsjVwIiL4WBIMV4aQ==",
      "dev": true,
      "requires": {
        "@jest/fake-timers": "^24.9.0",
        "@jest/transform": "^24.9.0",
        "@jest/types": "^24.9.0",
        "jest-mock": "^24.9.0"
      }
    },
    "@jest/fake-timers": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-24.9.0.tgz",
      "integrity": "sha512-eWQcNa2YSwzXWIMC5KufBh3oWRIijrQFROsIqt6v/NS9Io/gknw1jsAC9c+ih/RQX4A3O7SeWAhQeN0goKhT9A==",
      "dev": true,
      "requires": {
        "@jest/types": "^24.9.0",
        "jest-message-util": "^24.9.0",
        "jest-mock": "^24.9.0"
      }
    },
    "@jest/reporters": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-25.2.6.tgz",
      "integrity": "sha512-DRMyjaxcd6ZKctiXNcuVObnPwB1eUs7xrUVu0J2V0p5/aZJei5UM9GL3s/bmN4hRV8Mt3zXh+/9X2o0Q4ClZIA==",
      "dev": true,
      "requires": {
        "@bcoe/v8-coverage": "^0.2.3",
        "@jest/console": "^25.2.6",
        "@jest/test-result": "^25.2.6",
        "@jest/transform": "^25.2.6",
        "@jest/types": "^25.2.6",
        "chalk": "^3.0.0",
        "collect-v8-coverage": "^1.0.0",
        "exit": "^0.1.2",
        "glob": "^7.1.2",
        "istanbul-lib-coverage": "^3.0.0",
        "istanbul-lib-instrument": "^4.0.0",
        "istanbul-lib-report": "^3.0.0",
        "istanbul-lib-source-maps": "^4.0.0",
        "istanbul-reports": "^3.0.0",
        "jest-haste-map": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "jest-util": "^25.2.6",
        "jest-worker": "^25.2.6",
        "node-notifier": "^6.0.0",
        "slash": "^3.0.0",
        "source-map": "^0.6.0",
        "string-length": "^3.1.0",
        "terminal-link": "^2.0.0",
        "v8-to-istanbul": "^4.0.1"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/transform": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-25.2.6.tgz",
          "integrity": "sha512-rZnjCjZf9avPOf9q/w9RUZ9Uc29JmB53uIXNJmNz04QbDMD5cR/VjfikiMKajBsXe2vnFl5sJ4RTt+9HPicauQ==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.1.0",
            "@jest/types": "^25.2.6",
            "babel-plugin-istanbul": "^6.0.0",
            "chalk": "^3.0.0",
            "convert-source-map": "^1.4.0",
            "fast-json-stable-stringify": "^2.0.0",
            "graceful-fs": "^4.2.3",
            "jest-haste-map": "^25.2.6",
            "jest-regex-util": "^25.2.6",
            "jest-util": "^25.2.6",
            "micromatch": "^4.0.2",
            "pirates": "^4.0.1",
            "realpath-native": "^2.0.0",
            "slash": "^3.0.0",
            "source-map": "^0.6.1",
            "write-file-atomic": "^3.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "babel-plugin-istanbul": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.0.0.tgz",
          "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE/QtHmqtP8SWlTENqbK8GCSQ==",
          "dev": true,
          "requires": {
            "@babel/helper-plugin-utils": "^7.0.0",
            "@istanbuljs/load-nyc-config": "^1.0.0",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-instrument": "^4.0.0",
            "test-exclude": "^6.0.0"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "istanbul-lib-instrument": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.1.tgz",
          "integrity": "sha512-imIchxnodll7pvQBYOqUu88EufLCU56LMeFPZZM/fJZ1irYcYdqroaV+ACK1Ila8ls09iEYArp+nqyC6lW1Vfg==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.7.5",
            "@babel/parser": "^7.7.5",
            "@babel/template": "^7.7.4",
            "@babel/traverse": "^7.7.4",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-coverage": "^3.0.0",
            "semver": "^6.3.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "string-length": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-length/-/string-length-3.1.0.tgz",
          "integrity": "sha512-Ttp5YvkGm5v9Ijagtaz1BnN+k9ObpvS0eIBblPMp2YWL8FBmi9qblQ9fexc2k/CXFgrTIteU3jAw3payCnwSTA==",
          "dev": true,
          "requires": {
            "astral-regex": "^1.0.0",
            "strip-ansi": "^5.2.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "test-exclude": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
          "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
          "dev": true,
          "requires": {
            "@istanbuljs/schema": "^0.1.2",
            "glob": "^7.1.4",
            "minimatch": "^3.0.4"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        }
      }
    },
    "@jest/source-map": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-24.9.0.tgz",
      "integrity": "sha512-/Xw7xGlsZb4MJzNDgB7PW5crou5JqWiBQaz6xyPd3ArOg2nfn/PunV8+olXbbEZzNl591o5rWKE9BRDaFAuIBg==",
      "dev": true,
      "requires": {
        "callsites": "^3.0.0",
        "graceful-fs": "^4.1.15",
        "source-map": "^0.6.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "@jest/test-result": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-24.9.0.tgz",
      "integrity": "sha512-XEFrHbBonBJ8dGp2JmF8kP/nQI/ImPpygKHwQ/SY+es59Z3L5PI4Qb9TQQMAEeYsThG1xF0k6tmG0tIKATNiiA==",
      "dev": true,
      "requires": {
        "@jest/console": "^24.9.0",
        "@jest/types": "^24.9.0",
        "@types/istanbul-lib-coverage": "^2.0.0"
      }
    },
    "@jest/test-sequencer": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-25.2.6.tgz",
      "integrity": "sha512-6sHqVeXbEapfxoGb77NKCywNn9jc4WlIPtFqhwCKGhigGnpl42AuyLxclRWxbFx+V63ozzfjnemYxqHlkcoikQ==",
      "dev": true,
      "requires": {
        "@jest/test-result": "^25.2.6",
        "jest-haste-map": "^25.2.6",
        "jest-runner": "^25.2.6",
        "jest-runtime": "^25.2.6"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        }
      }
    },
    "@jest/transform": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-24.9.0.tgz",
      "integrity": "sha512-TcQUmyNRxV94S0QpMOnZl0++6RMiqpbH/ZMccFB/amku6Uwvyb1cjYX7xkp5nGNkbX4QPH/FcB6q1HBTHynLmQ==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.1.0",
        "@jest/types": "^24.9.0",
        "babel-plugin-istanbul": "^5.1.0",
        "chalk": "^2.0.1",
        "convert-source-map": "^1.4.0",
        "fast-json-stable-stringify": "^2.0.0",
        "graceful-fs": "^4.1.15",
        "jest-haste-map": "^24.9.0",
        "jest-regex-util": "^24.9.0",
        "jest-util": "^24.9.0",
        "micromatch": "^3.1.10",
        "pirates": "^4.0.1",
        "realpath-native": "^1.1.0",
        "slash": "^2.0.0",
        "source-map": "^0.6.1",
        "write-file-atomic": "2.4.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@jest/types": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/@jest/types/-/types-24.9.0.tgz",
      "integrity": "sha512-XKK7ze1apu5JWQ5eZjHITP66AX+QsLlbaJRBGYr8pNzwcAE2JVkwnf0yqjHTsDRcjR0mujy/NmZMXw5kl+kGBw==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "^2.0.0",
        "@types/istanbul-reports": "^1.1.1",
        "@types/yargs": "^13.0.0"
      }
    },
    "@mrmlnc/readdir-enhanced": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",
      "integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",
      "dev": true,
      "requires": {
        "call-me-maybe": "^1.0.1",
        "glob-to-regexp": "^0.3.0"
      }
    },
    "@nodelib/fs.stat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
      "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==",
      "dev": true
    },
    "@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
      "dev": true
    },
    "@sinonjs/commons": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.7.1.tgz",
      "integrity": "sha512-Debi3Baff1Qu1Unc3mjJ96MgpbwTn43S1+9yJ0llWygPwDNu2aaWBD6yc9y/Z8XDRNhx7U+u2UDg2OGQXkclUQ==",
      "dev": true,
      "requires": {
        "type-detect": "4.0.8"
      }
    },
    "@soda/friendly-errors-webpack-plugin": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/@soda/friendly-errors-webpack-plugin/-/friendly-errors-webpack-plugin-1.7.1.tgz",
      "integrity": "sha512-cWKrGaFX+rfbMrAxVv56DzhPNqOJPZuNIS2HGMELtgGzb+vsMzyig9mml5gZ/hr2BGtSLV+dP2LUEuAL8aG2mQ==",
      "dev": true,
      "requires": {
        "chalk": "^1.1.3",
        "error-stack-parser": "^2.0.0",
        "string-width": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          }
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "dev": true,
      "requires": {
        "defer-to-connect": "^1.0.1"
      }
    },
    "@types/babel__core": {
      "version": "7.1.7",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.7.tgz",
      "integrity": "sha512-RL62NqSFPCDK2FM1pSDH0scHpJvsXtZNiYlMB73DgPBaG1E38ZYVL+ei5EkWRbr+KC4YNiAUNBnRj+bgwpgjMw==",
      "dev": true,
      "requires": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "@types/babel__generator": {
      "version": "7.6.1",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.1.tgz",
      "integrity": "sha512-bBKm+2VPJcMRVwNhxKu8W+5/zT7pwNEqeokFOmbvVSqGzFneNxYcEBro9Ac7/N9tlsaPYnZLK8J1LWKkMsLAew==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.0.0"
      }
    },
    "@types/babel__template": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.0.2.tgz",
      "integrity": "sha512-/K6zCpeW7Imzgab2bLkLEbz0+1JlFSrUMdw7KoIIu+IUdu51GWaBZpd3y1VXGVXzynvGa4DaIaxNZHiON3GXUg==",
      "dev": true,
      "requires": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "@types/babel__traverse": {
      "version": "7.0.9",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.0.9.tgz",
      "integrity": "sha512-jEFQ8L1tuvPjOI8lnpaf73oCJe+aoxL6ygqSy6c8LcW98zaC+4mzWuQIRCEvKeCOu+lbqdXcg4Uqmm1S8AP1tw==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.3.0"
      }
    },
    "@types/bip32": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@types/bip32/-/bip32-1.0.2.tgz",
      "integrity": "sha512-gqkz3Jq2OA3s5QOHe7de9tUzW7Xjoct6ImCbt0KQnF0ParqDSvLo5Fu+mKQykFF1fgIcdzEmm0CO6HN+xG2SAA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/caseless": {
      "version": "0.12.2",
      "resolved": "https://registry.npmjs.org/@types/caseless/-/caseless-0.12.2.tgz",
      "integrity": "sha512-6ckxMjBBD8URvjB6J3NcnuAn5Pkl7t3TizAg+xdlzzQGSPSmBcXf8KoIH0ua/i+tio+ZRUHEXp0HEmvaR4kt0w==",
      "dev": true
    },
    "@types/color-name": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@types/color-name/-/color-name-1.1.1.tgz",
      "integrity": "sha512-rr+OQyAjxze7GgWrSaJwydHStIhHq2lvY3BOC2Mj7KnzI7XK0Uw1TOOdI9lDoajEbSWLiYgoo4f1R51erQfhPQ==",
      "dev": true
    },
    "@types/debug": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/@types/debug/-/debug-4.1.5.tgz",
      "integrity": "sha512-Q1y515GcOdTHgagaVFhHnIFQ38ygs/kmxdNpvpou+raI9UO3YZcHDngBSYKQklcKlvA7iuQlmIKbzvmxcOE9CQ==",
      "dev": true
    },
    "@types/eslint-visitor-keys": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",
      "integrity": "sha512-OCutwjDZ4aFS6PB1UZ988C4YgwlBHJd6wCeQqaLdmadZ/7e+w79+hbMUFC1QXDNCmdyoRfAFdm0RypzwR+Qpag==",
      "dev": true
    },
    "@types/events": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/events/-/events-3.0.0.tgz",
      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXRvQAYPrHwya1/UFt9g==",
      "dev": true
    },
    "@types/file-saver": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/file-saver/-/file-saver-2.0.1.tgz",
      "integrity": "sha512-g1QUuhYVVAamfCifK7oB7G3aIl4BbOyzDOqVyUfEr4tfBKrXfeH+M+Tg7HKCXSrbzxYdhyCP7z9WbKo0R2hBCw==",
      "dev": true
    },
    "@types/fs-extra": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/@types/fs-extra/-/fs-extra-8.1.0.tgz",
      "integrity": "sha512-UoOfVEzAUpeSPmjm7h1uk5MH6KZma2z2O7a75onTGjnNvAvMVrPzPL/vBbT65iIGHWj6rokwfmYcmxmlSf2uwg==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/glob": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.1.tgz",
      "integrity": "sha512-1Bh06cbWJUHMC97acuD6UMG29nMt0Aqz1vF3guLfG+kHHJhy3AyohZFFxYk2f7Q1SQIrNwvncxAE0N/9s70F2w==",
      "dev": true,
      "requires": {
        "@types/events": "*",
        "@types/minimatch": "*",
        "@types/node": "*"
      }
    },
    "@types/istanbul-lib-coverage": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.1.tgz",
      "integrity": "sha512-hRJD2ahnnpLgsj6KWMYSrmXkM3rm2Dl1qkx6IOFD5FnuNPXJIG5L0dhgKXCYTRMGzU4n0wImQ/xfmRc4POUFlg==",
      "dev": true
    },
    "@types/istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "*"
      }
    },
    "@types/istanbul-reports": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-1.1.1.tgz",
      "integrity": "sha512-UpYjBi8xefVChsCoBpKShdxTllC9pwISirfoZsUa2AAdQg/Jd2KQGtSbw+ya7GPo7x/wAPlH6JBhKhAsXUEZNA==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "*",
        "@types/istanbul-lib-report": "*"
      }
    },
    "@types/jest": {
      "version": "23.3.14",
      "resolved": "https://registry.npmjs.org/@types/jest/-/jest-23.3.14.tgz",
      "integrity": "sha512-Q5hTcfdudEL2yOmluA1zaSyPbzWPmJ3XfSWeP3RyoYvS9hnje1ZyagrZOuQ6+1nQC1Gw+7gap3pLNL3xL6UBug==",
      "dev": true
    },
    "@types/json-schema": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.4.tgz",
      "integrity": "sha512-8+KAKzEvSUdeo+kmqnKrqgeE+LcA0tjYWFY7RPProVYwnqDjukzO+3b6dLD56rYX5TdWejnEOLJYOIeh4CXKuA==",
      "dev": true
    },
    "@types/json2csv": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/@types/json2csv/-/json2csv-5.0.1.tgz",
      "integrity": "sha512-1r5GCTyFtdQ53CRSIctzWZCmtDXvxtzM77SzOqPB4woMeGcc3rhUMzPqEQH3rokG1k/QLzlC5Qe5Ih8NuFN70Q==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/lodash": {
      "version": "4.14.149",
      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.149.tgz",
      "integrity": "sha512-ijGqzZt/b7BfzcK9vTrS6MFljQRPn5BFWOx8oE0GYxribu6uV+aA9zZuXI1zc/etK9E8nrgdoF2+LgUw7+9tJQ==",
      "dev": true
    },
    "@types/minimatch": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz",
      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==",
      "dev": true
    },
    "@types/node": {
      "version": "9.6.55",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-9.6.55.tgz",
      "integrity": "sha512-e/5tg8Ok0gSrN6pvHphnwTK0/CD9VPZrtZqpvvpEFAtfs+ZntusgGaWkf2lSEq1OFe2EDPeUMiMVpy4nZpJ4AQ==",
      "dev": true
    },
    "@types/normalize-package-data": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.0.tgz",
      "integrity": "sha512-f5j5b/Gf71L+dbqxIpQ4Z2WlmI/mPJ0fOkGGmFgtb6sAu97EPczzbS3/tJKxmcYDj55OX6ssqwDAWOHIYDRDGA==",
      "dev": true
    },
    "@types/prettier": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/@types/prettier/-/prettier-1.19.1.tgz",
      "integrity": "sha512-5qOlnZscTn4xxM5MeGXAMOsIOIKIbh9e85zJWfBRVPlRMEVawzoPhINYbRGkBZCI8LxvBe7tJCdWiarA99OZfQ==",
      "dev": true
    },
    "@types/q": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.2.tgz",
      "integrity": "sha512-ce5d3q03Ex0sy4R14722Rmt6MT07Ua+k4FwDfdcToYJcMKNtRVQvJ6JCAPdAmAnbRb6CsX6aYb9m96NGod9uTw==",
      "dev": true
    },
    "@types/request": {
      "version": "2.48.4",
      "resolved": "https://registry.npmjs.org/@types/request/-/request-2.48.4.tgz",
      "integrity": "sha512-W1t1MTKYR8PxICH+A4HgEIPuAC3sbljoEVfyZbeFJJDbr30guDspJri2XOaM2E+Un7ZjrihaDi7cf6fPa2tbgw==",
      "dev": true,
      "requires": {
        "@types/caseless": "*",
        "@types/node": "*",
        "@types/tough-cookie": "*",
        "form-data": "^2.5.0"
      },
      "dependencies": {
        "@types/node": {
          "version": "13.7.7",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-13.7.7.tgz",
          "integrity": "sha512-Uo4chgKbnPNlxQwoFmYIwctkQVkMMmsAoGGU4JKwLuvBefF0pCq4FybNSnfkfRCpC7ZW7kttcC/TrRtAJsvGtg==",
          "dev": true
        },
        "form-data": {
          "version": "2.5.1",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.5.1.tgz",
          "integrity": "sha512-m21N3WOmEEURgk6B9GLOE4RuWOFf28Lhh9qGYeNlGq4VDXUlJy2th2slBNU8Gp8EzloYZOibZJ7t5ecIrFSjVA==",
          "dev": true,
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        }
      }
    },
    "@types/semver": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@types/semver/-/semver-7.1.0.tgz",
      "integrity": "sha512-pOKLaubrAEMUItGNpgwl0HMFPrSAFic8oSVIvfu1UwcgGNmNyK9gyhBHKmBnUTwwVvpZfkzUC0GaMgnL6P86uA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/stack-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-1.0.1.tgz",
      "integrity": "sha512-l42BggppR6zLmpfU6fq9HEa2oGPEI8yrSPL3GITjfRInppYFahObbIQOQK3UGxEnyQpltZLaPe75046NOZQikw==",
      "dev": true
    },
    "@types/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha1-FKjsOVbC6B7bdSB5CuzyHCkK69I=",
      "dev": true
    },
    "@types/strip-json-comments": {
      "version": "0.0.30",
      "resolved": "https://registry.npmjs.org/@types/strip-json-comments/-/strip-json-comments-0.0.30.tgz",
      "integrity": "sha512-7NQmHra/JILCd1QqpSzl8+mJRc8ZHz3uDm8YV1Ks9IhK0epEiTw8aIErbvH9PI+6XbqhyIQy3462nEsn7UVzjQ==",
      "dev": true
    },
    "@types/tough-cookie": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-2.3.6.tgz",
      "integrity": "sha512-wHNBMnkoEBiRAd3s8KTKwIuO9biFtTf0LehITzBhSco+HQI0xkXZbLOD55SW3Aqw3oUkHstkm5SPv58yaAdFPQ==",
      "dev": true
    },
    "@types/vue-moment": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@types/vue-moment/-/vue-moment-4.0.0.tgz",
      "integrity": "sha512-29S5LD5gmQFvkhoKCAseKE036CVOKQGij1QWHCBmTzJwCb4SXvKGbrY1QIn9cAFtnxzkM55+wyjjo/apAfrdTQ==",
      "dev": true,
      "requires": {
        "moment": ">=2.24.0",
        "vue": ">=2.6.10"
      }
    },
    "@types/webpack-env": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.15.1.tgz",
      "integrity": "sha512-eWN5ElDTeBc5lRDh95SqA8x18D0ll2pWudU3uWiyfsRmIZcmUXpEsxPU+7+BsdCrO2vfLRC629u/MmjbmF+2tA==",
      "dev": true
    },
    "@types/yargs": {
      "version": "13.0.8",
      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-13.0.8.tgz",
      "integrity": "sha512-XAvHLwG7UQ+8M4caKIH0ZozIOYay5fQkAgyIXegXT9jPtdIGdhga+sUEdAr1CiG46aB+c64xQEYyEzlwWVTNzA==",
      "dev": true,
      "requires": {
        "@types/yargs-parser": "*"
      }
    },
    "@types/yargs-parser": {
      "version": "15.0.0",
      "resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-15.0.0.tgz",
      "integrity": "sha512-FA/BWv8t8ZWJ+gEOnLLd8ygxH/2UFbAvgEonyfN6yWGLKc7zVjbpl2Y4CTjid9h2RfgPP6SEt6uHwEOply00yw==",
      "dev": true
    },
    "@typescript-eslint/eslint-plugin": {
      "version": "2.22.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-2.22.0.tgz",
      "integrity": "sha512-BvxRLaTDVQ3N+Qq8BivLiE9akQLAOUfxNHIEhedOcg8B2+jY8Rc4/D+iVprvuMX1AdezFYautuGDwr9QxqSxBQ==",
      "dev": true,
      "requires": {
        "@typescript-eslint/experimental-utils": "2.22.0",
        "eslint-utils": "^1.4.3",
        "functional-red-black-tree": "^1.0.1",
        "regexpp": "^3.0.0",
        "tsutils": "^3.17.1"
      },
      "dependencies": {
        "regexpp": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-3.0.0.tgz",
          "integrity": "sha512-Z+hNr7RAVWxznLPuA7DIh8UNX1j9CDrUQxskw9IrBE1Dxue2lyXT+shqEIeLUjrokxIP8CMy1WkjgG3rTsd5/g==",
          "dev": true
        }
      }
    },
    "@typescript-eslint/experimental-utils": {
      "version": "2.22.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/experimental-utils/-/experimental-utils-2.22.0.tgz",
      "integrity": "sha512-sJt1GYBe6yC0dWOQzXlp+tiuGglNhJC9eXZeC8GBVH98Zv9jtatccuhz0OF5kC/DwChqsNfghHx7OlIDQjNYAQ==",
      "dev": true,
      "requires": {
        "@types/json-schema": "^7.0.3",
        "@typescript-eslint/typescript-estree": "2.22.0",
        "eslint-scope": "^5.0.0"
      }
    },
    "@typescript-eslint/parser": {
      "version": "2.22.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-2.22.0.tgz",
      "integrity": "sha512-FaZKC1X+nvD7qMPqKFUYHz3H0TAioSVFGvG29f796Nc5tBluoqfHgLbSFKsh7mKjRoeTm8J9WX2Wo9EyZWjG7w==",
      "dev": true,
      "requires": {
        "@types/eslint-visitor-keys": "^1.0.0",
        "@typescript-eslint/experimental-utils": "2.22.0",
        "@typescript-eslint/typescript-estree": "2.22.0",
        "eslint-visitor-keys": "^1.1.0"
      }
    },
    "@typescript-eslint/typescript-estree": {
      "version": "2.22.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-2.22.0.tgz",
      "integrity": "sha512-2HFZW2FQc4MhIBB8WhDm9lVFaBDy6h9jGrJ4V2Uzxe/ON29HCHBTj3GkgcsgMWfsl2U5as+pTOr30Nibaw7qRQ==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "eslint-visitor-keys": "^1.1.0",
        "glob": "^7.1.6",
        "is-glob": "^4.0.1",
        "lodash": "^4.17.15",
        "semver": "^6.3.0",
        "tsutils": "^3.17.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "@vue/babel-helper-vue-jsx-merge-props": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@vue/babel-helper-vue-jsx-merge-props/-/babel-helper-vue-jsx-merge-props-1.0.0.tgz",
      "integrity": "sha512-6tyf5Cqm4m6v7buITuwS+jHzPlIPxbFzEhXR5JGZpbrvOcp1hiQKckd305/3C7C36wFekNTQSxAtgeM0j0yoUw==",
      "dev": true
    },
    "@vue/babel-plugin-transform-vue-jsx": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-plugin-transform-vue-jsx/-/babel-plugin-transform-vue-jsx-1.1.2.tgz",
      "integrity": "sha512-YfdaoSMvD1nj7+DsrwfTvTnhDXI7bsuh+Y5qWwvQXlD24uLgnsoww3qbiZvWf/EoviZMrvqkqN4CBw0W3BWUTQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.0.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@vue/babel-helper-vue-jsx-merge-props": "^1.0.0",
        "html-tags": "^2.0.0",
        "lodash.kebabcase": "^4.1.1",
        "svg-tags": "^1.0.0"
      }
    },
    "@vue/babel-preset-app": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/babel-preset-app/-/babel-preset-app-4.2.3.tgz",
      "integrity": "sha512-Xlc8d9Ebgu9pNZMUxKZWVP2CctVZzfX3LAxjBDWAAIiVpdXX4IkQQCevDhgiANFzlmE3KXtiSgPGs57Sso2g7Q==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.8.4",
        "@babel/helper-compilation-targets": "^7.8.4",
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/plugin-proposal-class-properties": "^7.8.3",
        "@babel/plugin-proposal-decorators": "^7.8.3",
        "@babel/plugin-syntax-dynamic-import": "^7.8.3",
        "@babel/plugin-syntax-jsx": "^7.8.3",
        "@babel/plugin-transform-runtime": "^7.8.3",
        "@babel/preset-env": "^7.8.4",
        "@babel/runtime": "^7.8.4",
        "@vue/babel-preset-jsx": "^1.1.2",
        "babel-plugin-dynamic-import-node": "^2.3.0",
        "core-js": "^3.6.4",
        "core-js-compat": "^3.6.4"
      },
      "dependencies": {
        "core-js": {
          "version": "3.6.4",
          "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.6.4.tgz",
          "integrity": "sha512-4paDGScNgZP2IXXilaffL9X7968RuvwlkK3xWtZRVqgd8SYNiVKRJvkFd1aqqEuPfN7E68ZHEp9hDj6lHj4Hyw==",
          "dev": true
        }
      }
    },
    "@vue/babel-preset-jsx": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-preset-jsx/-/babel-preset-jsx-1.1.2.tgz",
      "integrity": "sha512-zDpVnFpeC9YXmvGIDSsKNdL7qCG2rA3gjywLYHPCKDT10erjxF4U+6ay9X6TW5fl4GsDlJp9bVfAVQAAVzxxvQ==",
      "dev": true,
      "requires": {
        "@vue/babel-helper-vue-jsx-merge-props": "^1.0.0",
        "@vue/babel-plugin-transform-vue-jsx": "^1.1.2",
        "@vue/babel-sugar-functional-vue": "^1.1.2",
        "@vue/babel-sugar-inject-h": "^1.1.2",
        "@vue/babel-sugar-v-model": "^1.1.2",
        "@vue/babel-sugar-v-on": "^1.1.2"
      }
    },
    "@vue/babel-sugar-functional-vue": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-sugar-functional-vue/-/babel-sugar-functional-vue-1.1.2.tgz",
      "integrity": "sha512-YhmdJQSVEFF5ETJXzrMpj0nkCXEa39TvVxJTuVjzvP2rgKhdMmQzlJuMv/HpadhZaRVMCCF3AEjjJcK5q/cYzQ==",
      "dev": true,
      "requires": {
        "@babel/plugin-syntax-jsx": "^7.2.0"
      }
    },
    "@vue/babel-sugar-inject-h": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-sugar-inject-h/-/babel-sugar-inject-h-1.1.2.tgz",
      "integrity": "sha512-VRSENdTvD5htpnVp7i7DNuChR5rVMcORdXjvv5HVvpdKHzDZAYiLSD+GhnhxLm3/dMuk8pSzV+k28ECkiN5m8w==",
      "dev": true,
      "requires": {
        "@babel/plugin-syntax-jsx": "^7.2.0"
      }
    },
    "@vue/babel-sugar-v-model": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-sugar-v-model/-/babel-sugar-v-model-1.1.2.tgz",
      "integrity": "sha512-vLXPvNq8vDtt0u9LqFdpGM9W9IWDmCmCyJXuozlq4F4UYVleXJ2Fa+3JsnTZNJcG+pLjjfnEGHci2339Kj5sGg==",
      "dev": true,
      "requires": {
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@vue/babel-helper-vue-jsx-merge-props": "^1.0.0",
        "@vue/babel-plugin-transform-vue-jsx": "^1.1.2",
        "camelcase": "^5.0.0",
        "html-tags": "^2.0.0",
        "svg-tags": "^1.0.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        }
      }
    },
    "@vue/babel-sugar-v-on": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@vue/babel-sugar-v-on/-/babel-sugar-v-on-1.1.2.tgz",
      "integrity": "sha512-T8ZCwC8Jp2uRtcZ88YwZtZXe7eQrJcfRq0uTFy6ShbwYJyz5qWskRFoVsdTi9o0WEhmQXxhQUewodOSCUPVmsQ==",
      "dev": true,
      "requires": {
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@vue/babel-plugin-transform-vue-jsx": "^1.1.2",
        "camelcase": "^5.0.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        }
      }
    },
    "@vue/cli-overlay": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-overlay/-/cli-overlay-4.2.3.tgz",
      "integrity": "sha512-V51eS7NIsK/rv19oK0+B5Yl/VNWCJTTkjibreIXDknOLSH3MKTOJamUI1BEYo5FOXBWw+7DLmaNF3XKemQ5Y/w==",
      "dev": true
    },
    "@vue/cli-plugin-babel": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-plugin-babel/-/cli-plugin-babel-4.2.3.tgz",
      "integrity": "sha512-vbK6f7dN4gj+6xyhTZkvjjbz1vsTwX+ObRD0ElaaipXo2oVSBAAPPGHkLjnH8C2brDLPeLHdUCzERzx2kc2lmQ==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.8.4",
        "@vue/babel-preset-app": "^4.2.3",
        "@vue/cli-shared-utils": "^4.2.3",
        "babel-loader": "^8.0.6",
        "cache-loader": "^4.1.0",
        "thread-loader": "^2.1.3",
        "webpack": "^4.0.0"
      }
    },
    "@vue/cli-plugin-router": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-plugin-router/-/cli-plugin-router-4.2.3.tgz",
      "integrity": "sha512-RGtgFQCTMS1X1wtFt752RMgr/LlF9cfpH37MkwjhF2wpnyTp+hkKl/09QORAKW91I8iFpZFH7xZKMBS3r1WbCw==",
      "dev": true,
      "requires": {
        "@vue/cli-shared-utils": "^4.2.3"
      }
    },
    "@vue/cli-plugin-typescript": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/@vue/cli-plugin-typescript/-/cli-plugin-typescript-4.3.0.tgz",
      "integrity": "sha512-uXfqUoFl3pJjMS9voO2KGtTlaEG57Qe8hLEILAb3OBgWns+vykjuv8QoB4L4Ry+qSlhxuG9owL7HC5gLPo2hmw==",
      "dev": true,
      "requires": {
        "@types/webpack-env": "^1.15.1",
        "@vue/cli-shared-utils": "^4.3.0",
        "cache-loader": "^4.1.0",
        "fork-ts-checker-webpack-plugin": "^3.1.1",
        "globby": "^9.2.0",
        "thread-loader": "^2.1.3",
        "ts-loader": "^6.2.2",
        "tslint": "^5.20.1",
        "webpack": "^4.0.0",
        "yorkie": "^2.0.0"
      },
      "dependencies": {
        "@vue/cli-shared-utils": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/@vue/cli-shared-utils/-/cli-shared-utils-4.3.0.tgz",
          "integrity": "sha512-iGWoYvPZvsJqIeXfaJcf5LgsaiqyYSnXEHkW+52ELfniw6NZAr1mdn4vPzppAElhFd87TY3rq0DFXP8UBr+/6w==",
          "dev": true,
          "requires": {
            "@hapi/joi": "^15.0.1",
            "chalk": "^2.4.2",
            "execa": "^1.0.0",
            "launch-editor": "^2.2.1",
            "lru-cache": "^5.1.1",
            "node-ipc": "^9.1.1",
            "open": "^6.3.0",
            "ora": "^3.4.0",
            "read-pkg": "^5.1.1",
            "request": "^2.88.2",
            "request-promise-native": "^1.0.8",
            "semver": "^6.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "open": {
          "version": "6.4.0",
          "resolved": "https://registry.npmjs.org/open/-/open-6.4.0.tgz",
          "integrity": "sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==",
          "dev": true,
          "requires": {
            "is-wsl": "^1.1.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "@vue/cli-plugin-unit-jest": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-plugin-unit-jest/-/cli-plugin-unit-jest-4.2.3.tgz",
      "integrity": "sha512-i/UC7aV5W4yBOj/UiFw2icgErT6/60vvatNSs0AgQ2dawqcyX6JVP0o8c7em7UUrBaQGWfGVkpjSZHWBM5ZDTg==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.8.4",
        "@babel/plugin-transform-modules-commonjs": "^7.8.3",
        "@types/jest": "^24.0.19",
        "@vue/cli-shared-utils": "^4.2.3",
        "babel-core": "^7.0.0-bridge.0",
        "babel-jest": "^24.9.0",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
        "deepmerge": "^4.2.2",
        "jest": "^24.9.0",
        "jest-environment-jsdom-fifteen": "^1.0.2",
        "jest-serializer-vue": "^2.0.2",
        "jest-transform-stub": "^2.0.0",
        "jest-watch-typeahead": "^0.4.2",
        "ts-jest": "^24.2.0",
        "vue-jest": "^3.0.5"
      },
      "dependencies": {
        "@jest/core": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/@jest/core/-/core-24.9.0.tgz",
          "integrity": "sha512-Fogg3s4wlAr1VX7q+rhV9RVnUv5tD7VuWfYy1+whMiWUrvl7U3QJSJyWcDio9Lq2prqYsZaeTv2Rz24pWGkJ2A==",
          "dev": true,
          "requires": {
            "@jest/console": "^24.7.1",
            "@jest/reporters": "^24.9.0",
            "@jest/test-result": "^24.9.0",
            "@jest/transform": "^24.9.0",
            "@jest/types": "^24.9.0",
            "ansi-escapes": "^3.0.0",
            "chalk": "^2.0.1",
            "exit": "^0.1.2",
            "graceful-fs": "^4.1.15",
            "jest-changed-files": "^24.9.0",
            "jest-config": "^24.9.0",
            "jest-haste-map": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-regex-util": "^24.3.0",
            "jest-resolve": "^24.9.0",
            "jest-resolve-dependencies": "^24.9.0",
            "jest-runner": "^24.9.0",
            "jest-runtime": "^24.9.0",
            "jest-snapshot": "^24.9.0",
            "jest-util": "^24.9.0",
            "jest-validate": "^24.9.0",
            "jest-watcher": "^24.9.0",
            "micromatch": "^3.1.10",
            "p-each-series": "^1.0.0",
            "realpath-native": "^1.1.0",
            "rimraf": "^2.5.4",
            "slash": "^2.0.0",
            "strip-ansi": "^5.0.0"
          }
        },
        "@jest/reporters": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-24.9.0.tgz",
          "integrity": "sha512-mu4X0yjaHrffOsWmVLzitKmmmWSQ3GGuefgNscUSWNiUNcEOSEQk9k3pERKEQVBb0Cnn88+UESIsZEMH3o88Gw==",
          "dev": true,
          "requires": {
            "@jest/environment": "^24.9.0",
            "@jest/test-result": "^24.9.0",
            "@jest/transform": "^24.9.0",
            "@jest/types": "^24.9.0",
            "chalk": "^2.0.1",
            "exit": "^0.1.2",
            "glob": "^7.1.2",
            "istanbul-lib-coverage": "^2.0.2",
            "istanbul-lib-instrument": "^3.0.1",
            "istanbul-lib-report": "^2.0.4",
            "istanbul-lib-source-maps": "^3.0.1",
            "istanbul-reports": "^2.2.6",
            "jest-haste-map": "^24.9.0",
            "jest-resolve": "^24.9.0",
            "jest-runtime": "^24.9.0",
            "jest-util": "^24.9.0",
            "jest-worker": "^24.6.0",
            "node-notifier": "^5.4.2",
            "slash": "^2.0.0",
            "source-map": "^0.6.0",
            "string-length": "^2.0.0"
          }
        },
        "@jest/test-sequencer": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-24.9.0.tgz",
          "integrity": "sha512-6qqsU4o0kW1dvA95qfNog8v8gkRN9ph6Lz7r96IvZpHdNipP2cBcb07J1Z45mz/VIS01OHJ3pY8T5fUY38tg4A==",
          "dev": true,
          "requires": {
            "@jest/test-result": "^24.9.0",
            "jest-haste-map": "^24.9.0",
            "jest-runner": "^24.9.0",
            "jest-runtime": "^24.9.0"
          }
        },
        "@types/jest": {
          "version": "24.9.1",
          "resolved": "https://registry.npmjs.org/@types/jest/-/jest-24.9.1.tgz",
          "integrity": "sha512-Fb38HkXSVA4L8fGKEZ6le5bB8r6MRWlOCZbVuWZcmOMSCd2wCYOwN1ibj8daIoV9naq7aaOZjrLCoCMptKU/4Q==",
          "dev": true,
          "requires": {
            "jest-diff": "^24.3.0"
          }
        },
        "acorn": {
          "version": "5.7.4",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.4.tgz",
          "integrity": "sha512-1D++VG7BhrtvQpNbBzovKNc1FLGGEE/oGe7b9xJm/RFHMBeUaUGpluV9RLjZa47YFdPcDAenEYuq9pQPcMdLJg==",
          "dev": true
        },
        "ansi-escapes": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
          "dev": true
        },
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "babel-jest": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-24.9.0.tgz",
          "integrity": "sha512-ntuddfyiN+EhMw58PTNL1ph4C9rECiQXjI4nMMBKBaNjXvqLdkXpPRcMSr4iyBrJg/+wz9brFUD6RhOAT6r4Iw==",
          "dev": true,
          "requires": {
            "@jest/transform": "^24.9.0",
            "@jest/types": "^24.9.0",
            "@types/babel__core": "^7.1.0",
            "babel-plugin-istanbul": "^5.1.0",
            "babel-preset-jest": "^24.9.0",
            "chalk": "^2.4.2",
            "slash": "^2.0.0"
          }
        },
        "babel-plugin-jest-hoist": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-24.9.0.tgz",
          "integrity": "sha512-2EMA2P8Vp7lG0RAzr4HXqtYwacfMErOuv1U3wrvxHX6rD1sV6xS3WXG3r8TRQ2r6w8OhvSdWt+z41hQNwNm3Xw==",
          "dev": true,
          "requires": {
            "@types/babel__traverse": "^7.0.6"
          }
        },
        "babel-preset-jest": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-24.9.0.tgz",
          "integrity": "sha512-izTUuhE4TMfTRPF92fFwD2QfdXaZW08qvWTFCI51V8rW5x00UuPgc3ajRoWofXOuxjfcOM5zzSYsQS3H8KGCAg==",
          "dev": true,
          "requires": {
            "@babel/plugin-syntax-object-rest-spread": "^7.0.0",
            "babel-plugin-jest-hoist": "^24.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "cssom": {
          "version": "0.3.8",
          "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
          "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
          "dev": true
        },
        "cssstyle": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.4.0.tgz",
          "integrity": "sha512-GBrLZYZ4X4x6/QEoBnIrqb8B/f5l4+8me2dkom/j1Gtbxy0kBv6OGzKuAsGM75bkGwGAFkt56Iwg28S3XTZgSA==",
          "dev": true,
          "requires": {
            "cssom": "0.3.x"
          }
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "deepmerge": {
          "version": "4.2.2",
          "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
          "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==",
          "dev": true
        },
        "detect-newline": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz",
          "integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I=",
          "dev": true
        },
        "expect": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/expect/-/expect-24.9.0.tgz",
          "integrity": "sha512-wvVAx8XIol3Z5m9zvZXiyZOQ+sRJqNTIm6sGjdWlaZIeupQGO3WbYI+15D/AmEwZywL6wtJkbAbJtzkOfBuR0Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "ansi-styles": "^3.2.0",
            "jest-get-type": "^24.9.0",
            "jest-matcher-utils": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-regex-util": "^24.9.0"
          }
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "istanbul-lib-report": {
          "version": "2.0.8",
          "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.8.tgz",
          "integrity": "sha512-fHBeG573EIihhAblwgxrSenp0Dby6tJMFR/HvlerBsrCTD5bkUuoNtn3gVh29ZCS824cGGBPn7Sg7cNk+2xUsQ==",
          "dev": true,
          "requires": {
            "istanbul-lib-coverage": "^2.0.5",
            "make-dir": "^2.1.0",
            "supports-color": "^6.1.0"
          },
          "dependencies": {
            "supports-color": {
              "version": "6.1.0",
              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
              "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
              "dev": true,
              "requires": {
                "has-flag": "^3.0.0"
              }
            }
          }
        },
        "istanbul-lib-source-maps": {
          "version": "3.0.6",
          "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.6.tgz",
          "integrity": "sha512-R47KzMtDJH6X4/YW9XTx+jrLnZnscW4VpNN+1PViSYTejLVPWv7oov+Duf8YQSPyVRUvueQqz1TcsC6mooZTXw==",
          "dev": true,
          "requires": {
            "debug": "^4.1.1",
            "istanbul-lib-coverage": "^2.0.5",
            "make-dir": "^2.1.0",
            "rimraf": "^2.6.3",
            "source-map": "^0.6.1"
          }
        },
        "istanbul-reports": {
          "version": "2.2.7",
          "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.7.tgz",
          "integrity": "sha512-uu1F/L1o5Y6LzPVSVZXNOoD/KXpJue9aeLRd0sM9uMXfZvzomB0WxVamWb5ue8kA2vVWEmW7EG+A5n3f1kqHKg==",
          "dev": true,
          "requires": {
            "html-escaper": "^2.0.0"
          }
        },
        "jest": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest/-/jest-24.9.0.tgz",
          "integrity": "sha512-YvkBL1Zm7d2B1+h5fHEOdyjCG+sGMz4f8D86/0HiqJ6MB4MnDc8FgP5vdWsGnemOQro7lnYo8UakZ3+5A0jxGw==",
          "dev": true,
          "requires": {
            "import-local": "^2.0.0",
            "jest-cli": "^24.9.0"
          },
          "dependencies": {
            "jest-cli": {
              "version": "24.9.0",
              "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-24.9.0.tgz",
              "integrity": "sha512-+VLRKyitT3BWoMeSUIHRxV/2g8y9gw91Jh5z2UmXZzkZKpbC08CSehVxgHUwTpy+HwGcns/tqafQDJW7imYvGg==",
              "dev": true,
              "requires": {
                "@jest/core": "^24.9.0",
                "@jest/test-result": "^24.9.0",
                "@jest/types": "^24.9.0",
                "chalk": "^2.0.1",
                "exit": "^0.1.2",
                "import-local": "^2.0.0",
                "is-ci": "^2.0.0",
                "jest-config": "^24.9.0",
                "jest-util": "^24.9.0",
                "jest-validate": "^24.9.0",
                "prompts": "^2.0.1",
                "realpath-native": "^1.1.0",
                "yargs": "^13.3.0"
              }
            }
          }
        },
        "jest-changed-files": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-24.9.0.tgz",
          "integrity": "sha512-6aTWpe2mHF0DhL28WjdkO8LyGjs3zItPET4bMSeXU6T3ub4FPMw+mcOcbdGXQOAfmLcxofD23/5Bl9Z4AkFwqg==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "execa": "^1.0.0",
            "throat": "^4.0.0"
          }
        },
        "jest-config": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-24.9.0.tgz",
          "integrity": "sha512-RATtQJtVYQrp7fvWg6f5y3pEFj9I+H8sWw4aKxnDZ96mob5i5SD6ZEGWgMLXQ4LE8UurrjbdlLWdUeo+28QpfQ==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.1.0",
            "@jest/test-sequencer": "^24.9.0",
            "@jest/types": "^24.9.0",
            "babel-jest": "^24.9.0",
            "chalk": "^2.0.1",
            "glob": "^7.1.1",
            "jest-environment-jsdom": "^24.9.0",
            "jest-environment-node": "^24.9.0",
            "jest-get-type": "^24.9.0",
            "jest-jasmine2": "^24.9.0",
            "jest-regex-util": "^24.3.0",
            "jest-resolve": "^24.9.0",
            "jest-util": "^24.9.0",
            "jest-validate": "^24.9.0",
            "micromatch": "^3.1.10",
            "pretty-format": "^24.9.0",
            "realpath-native": "^1.1.0"
          }
        },
        "jest-docblock": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-24.9.0.tgz",
          "integrity": "sha512-F1DjdpDMJMA1cN6He0FNYNZlo3yYmOtRUnktrT9Q37njYzC5WEaDdmbynIgy0L/IvXvvgsG8OsqhLPXTpfmZAA==",
          "dev": true,
          "requires": {
            "detect-newline": "^2.1.0"
          }
        },
        "jest-each": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-24.9.0.tgz",
          "integrity": "sha512-ONi0R4BvW45cw8s2Lrx8YgbeXL1oCQ/wIDwmsM3CqM/nlblNCPmnC3IPQlMbRFZu3wKdQ2U8BqM6lh3LJ5Bsog==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "chalk": "^2.0.1",
            "jest-get-type": "^24.9.0",
            "jest-util": "^24.9.0",
            "pretty-format": "^24.9.0"
          }
        },
        "jest-environment-jsdom": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-24.9.0.tgz",
          "integrity": "sha512-Zv9FV9NBRzLuALXjvRijO2351DRQeLYXtpD4xNvfoVFw21IOKNhZAEUKcbiEtjTkm2GsJ3boMVgkaR7rN8qetA==",
          "dev": true,
          "requires": {
            "@jest/environment": "^24.9.0",
            "@jest/fake-timers": "^24.9.0",
            "@jest/types": "^24.9.0",
            "jest-mock": "^24.9.0",
            "jest-util": "^24.9.0",
            "jsdom": "^11.5.1"
          }
        },
        "jest-environment-node": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-24.9.0.tgz",
          "integrity": "sha512-6d4V2f4nxzIzwendo27Tr0aFm+IXWa0XEUnaH6nU0FMaozxovt+sfRvh4J47wL1OvF83I3SSTu0XK+i4Bqe7uA==",
          "dev": true,
          "requires": {
            "@jest/environment": "^24.9.0",
            "@jest/fake-timers": "^24.9.0",
            "@jest/types": "^24.9.0",
            "jest-mock": "^24.9.0",
            "jest-util": "^24.9.0"
          }
        },
        "jest-jasmine2": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-24.9.0.tgz",
          "integrity": "sha512-Cq7vkAgaYKp+PsX+2/JbTarrk0DmNhsEtqBXNwUHkdlbrTBLtMJINADf2mf5FkowNsq8evbPc07/qFO0AdKTzw==",
          "dev": true,
          "requires": {
            "@babel/traverse": "^7.1.0",
            "@jest/environment": "^24.9.0",
            "@jest/test-result": "^24.9.0",
            "@jest/types": "^24.9.0",
            "chalk": "^2.0.1",
            "co": "^4.6.0",
            "expect": "^24.9.0",
            "is-generator-fn": "^2.0.0",
            "jest-each": "^24.9.0",
            "jest-matcher-utils": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-runtime": "^24.9.0",
            "jest-snapshot": "^24.9.0",
            "jest-util": "^24.9.0",
            "pretty-format": "^24.9.0",
            "throat": "^4.0.0"
          }
        },
        "jest-leak-detector": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-24.9.0.tgz",
          "integrity": "sha512-tYkFIDsiKTGwb2FG1w8hX9V0aUb2ot8zY/2nFg087dUageonw1zrLMP4W6zsRO59dPkTSKie+D4rhMuP9nRmrA==",
          "dev": true,
          "requires": {
            "jest-get-type": "^24.9.0",
            "pretty-format": "^24.9.0"
          }
        },
        "jest-matcher-utils": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-24.9.0.tgz",
          "integrity": "sha512-OZz2IXsu6eaiMAwe67c1T+5tUAtQyQx27/EMEkbFAGiw52tB9em+uGbzpcgYVpA8wl0hlxKPZxrly4CXU/GjHA==",
          "dev": true,
          "requires": {
            "chalk": "^2.0.1",
            "jest-diff": "^24.9.0",
            "jest-get-type": "^24.9.0",
            "pretty-format": "^24.9.0"
          }
        },
        "jest-resolve": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-24.9.0.tgz",
          "integrity": "sha512-TaLeLVL1l08YFZAt3zaPtjiVvyy4oSA6CRe+0AFPPVX3Q/VI0giIWWoAvoS5L96vj9Dqxj4fB5p2qrHCmTU/MQ==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "browser-resolve": "^1.11.3",
            "chalk": "^2.0.1",
            "jest-pnp-resolver": "^1.2.1",
            "realpath-native": "^1.1.0"
          }
        },
        "jest-resolve-dependencies": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-24.9.0.tgz",
          "integrity": "sha512-Fm7b6AlWnYhT0BXy4hXpactHIqER7erNgIsIozDXWl5dVm+k8XdGVe1oTg1JyaFnOxarMEbax3wyRJqGP2Pq+g==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "jest-regex-util": "^24.3.0",
            "jest-snapshot": "^24.9.0"
          }
        },
        "jest-runner": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-24.9.0.tgz",
          "integrity": "sha512-KksJQyI3/0mhcfspnxxEOBueGrd5E4vV7ADQLT9ESaCzz02WnbdbKWIf5Mkaucoaj7obQckYPVX6JJhgUcoWWg==",
          "dev": true,
          "requires": {
            "@jest/console": "^24.7.1",
            "@jest/environment": "^24.9.0",
            "@jest/test-result": "^24.9.0",
            "@jest/types": "^24.9.0",
            "chalk": "^2.4.2",
            "exit": "^0.1.2",
            "graceful-fs": "^4.1.15",
            "jest-config": "^24.9.0",
            "jest-docblock": "^24.3.0",
            "jest-haste-map": "^24.9.0",
            "jest-jasmine2": "^24.9.0",
            "jest-leak-detector": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-resolve": "^24.9.0",
            "jest-runtime": "^24.9.0",
            "jest-util": "^24.9.0",
            "jest-worker": "^24.6.0",
            "source-map-support": "^0.5.6",
            "throat": "^4.0.0"
          }
        },
        "jest-runtime": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-24.9.0.tgz",
          "integrity": "sha512-8oNqgnmF3v2J6PVRM2Jfuj8oX3syKmaynlDMMKQ4iyzbQzIG6th5ub/lM2bCMTmoTKM3ykcUYI2Pw9xwNtjMnw==",
          "dev": true,
          "requires": {
            "@jest/console": "^24.7.1",
            "@jest/environment": "^24.9.0",
            "@jest/source-map": "^24.3.0",
            "@jest/transform": "^24.9.0",
            "@jest/types": "^24.9.0",
            "@types/yargs": "^13.0.0",
            "chalk": "^2.0.1",
            "exit": "^0.1.2",
            "glob": "^7.1.3",
            "graceful-fs": "^4.1.15",
            "jest-config": "^24.9.0",
            "jest-haste-map": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-mock": "^24.9.0",
            "jest-regex-util": "^24.3.0",
            "jest-resolve": "^24.9.0",
            "jest-snapshot": "^24.9.0",
            "jest-util": "^24.9.0",
            "jest-validate": "^24.9.0",
            "realpath-native": "^1.1.0",
            "slash": "^2.0.0",
            "strip-bom": "^3.0.0",
            "yargs": "^13.3.0"
          }
        },
        "jest-snapshot": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-24.9.0.tgz",
          "integrity": "sha512-uI/rszGSs73xCM0l+up7O7a40o90cnrk429LOiK3aeTvfC0HHmldbd81/B7Ix81KSFe1lwkbl7GnBGG4UfuDew==",
          "dev": true,
          "requires": {
            "@babel/types": "^7.0.0",
            "@jest/types": "^24.9.0",
            "chalk": "^2.0.1",
            "expect": "^24.9.0",
            "jest-diff": "^24.9.0",
            "jest-get-type": "^24.9.0",
            "jest-matcher-utils": "^24.9.0",
            "jest-message-util": "^24.9.0",
            "jest-resolve": "^24.9.0",
            "mkdirp": "^0.5.1",
            "natural-compare": "^1.4.0",
            "pretty-format": "^24.9.0",
            "semver": "^6.2.0"
          }
        },
        "jest-validate": {
          "version": "24.9.0",
          "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-24.9.0.tgz",
          "integrity": "sha512-HPIt6C5ACwiqSiwi+OfSSHbK8sG7akG8eATl+IPKaeIjtPOeBUd/g3J7DghugzxrGjI93qS/+RPKe1H6PqvhRQ==",
          "dev": true,
          "requires": {
            "@jest/types": "^24.9.0",
            "camelcase": "^5.3.1",
            "chalk": "^2.0.1",
            "jest-get-type": "^24.9.0",
            "leven": "^3.1.0",
            "pretty-format": "^24.9.0"
          }
        },
        "jsdom": {
          "version": "11.12.0",
          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-11.12.0.tgz",
          "integrity": "sha512-y8Px43oyiBM13Zc1z780FrfNLJCXTL40EWlty/LXUtcjykRBNgLlCjWXpfSPBl2iv+N7koQN+dvqszHZgT/Fjw==",
          "dev": true,
          "requires": {
            "abab": "^2.0.0",
            "acorn": "^5.5.3",
            "acorn-globals": "^4.1.0",
            "array-equal": "^1.0.0",
            "cssom": ">= 0.3.2 < 0.4.0",
            "cssstyle": "^1.0.0",
            "data-urls": "^1.0.0",
            "domexception": "^1.0.1",
            "escodegen": "^1.9.1",
            "html-encoding-sniffer": "^1.0.2",
            "left-pad": "^1.3.0",
            "nwsapi": "^2.0.7",
            "parse5": "4.0.0",
            "pn": "^1.1.0",
            "request": "^2.87.0",
            "request-promise-native": "^1.0.5",
            "sax": "^1.2.4",
            "symbol-tree": "^3.2.2",
            "tough-cookie": "^2.3.4",
            "w3c-hr-time": "^1.0.1",
            "webidl-conversions": "^4.0.2",
            "whatwg-encoding": "^1.0.3",
            "whatwg-mimetype": "^2.1.0",
            "whatwg-url": "^6.4.1",
            "ws": "^5.2.0",
            "xml-name-validator": "^3.0.0"
          }
        },
        "json5": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.2.tgz",
          "integrity": "sha512-MoUOQ4WdiN3yxhm7NEVJSJrieAo5hNSLQ5sj05OTRHPL9HOBy8u4Bu88jsC1jvqAdN+E1bJmsUcZH+1HQxliqQ==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "node-notifier": {
          "version": "5.4.3",
          "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.4.3.tgz",
          "integrity": "sha512-M4UBGcs4jeOK9CjTsYwkvH6/MzuUmGCyTW+kCY7uO+1ZVr0+FHGdPdIf5CCLqAaxnRrWidyoQlNkMIIVwbKB8Q==",
          "dev": true,
          "requires": {
            "growly": "^1.3.0",
            "is-wsl": "^1.1.0",
            "semver": "^5.5.0",
            "shellwords": "^0.1.1",
            "which": "^1.3.0"
          },
          "dependencies": {
            "semver": {
              "version": "5.7.1",
              "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
              "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
              "dev": true
            }
          }
        },
        "p-each-series": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-1.0.0.tgz",
          "integrity": "sha1-kw89Et0fUOdDRFeiLNbwSsatf3E=",
          "dev": true,
          "requires": {
            "p-reduce": "^1.0.0"
          }
        },
        "parse5": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",
          "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA==",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "source-map-support": {
          "version": "0.5.16",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.16.tgz",
          "integrity": "sha512-efyLRJDr68D9hBBNIPWFjhpFzURh+KJykQwvMyW5UiZzYwoF6l4YMMDIJJEyFWxWCqfyxLzz6tSfUFR+kXXsVQ==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "source-map": "^0.6.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "throat": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/throat/-/throat-4.1.0.tgz",
          "integrity": "sha1-iQN8vJLFarGJJua6TLsgDhVnKmo=",
          "dev": true
        },
        "ts-jest": {
          "version": "24.3.0",
          "resolved": "https://registry.npmjs.org/ts-jest/-/ts-jest-24.3.0.tgz",
          "integrity": "sha512-Hb94C/+QRIgjVZlJyiWwouYUF+siNJHJHknyspaOcZ+OQAIdFG/UrdQVXw/0B8Z3No34xkUXZJpOTy9alOWdVQ==",
          "dev": true,
          "requires": {
            "bs-logger": "0.x",
            "buffer-from": "1.x",
            "fast-json-stable-stringify": "2.x",
            "json5": "2.x",
            "lodash.memoize": "4.x",
            "make-error": "1.x",
            "mkdirp": "0.x",
            "resolve": "1.x",
            "semver": "^5.5",
            "yargs-parser": "10.x"
          },
          "dependencies": {
            "semver": {
              "version": "5.7.1",
              "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
              "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
              "dev": true
            }
          }
        },
        "whatwg-url": {
          "version": "6.5.0",
          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-6.5.0.tgz",
          "integrity": "sha512-rhRZRqx/TLJQWUpQ6bmrt2UV4f0HCQ463yQuONJqC6fO2VoEb1pTYddbe59SkYq87aoM5A3bdhMZiUiVws+fzQ==",
          "dev": true,
          "requires": {
            "lodash.sortby": "^4.7.0",
            "tr46": "^1.0.1",
            "webidl-conversions": "^4.0.2"
          }
        },
        "yargs-parser": {
          "version": "10.1.0",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-10.1.0.tgz",
          "integrity": "sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==",
          "dev": true,
          "requires": {
            "camelcase": "^4.1.0"
          },
          "dependencies": {
            "camelcase": {
              "version": "4.1.0",
              "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",
              "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=",
              "dev": true
            }
          }
        }
      }
    },
    "@vue/cli-plugin-vuex": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-plugin-vuex/-/cli-plugin-vuex-4.2.3.tgz",
      "integrity": "sha512-7M4CaoAD4W/GdiDI4+Gh2tATPFBnb/u7bCiLLDsuL9ztypv7l3p4cu43zkDpTCCuufkZFYtZwysOAY8SbGqOjg==",
      "dev": true
    },
    "@vue/cli-service": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-service/-/cli-service-4.2.3.tgz",
      "integrity": "sha512-eSsmrt7nIZInmEvVW5x7eQLdEywBin79nKduB2PgYx0Me82wRfKDa8JpkCM6jZV0AxIuaF7N4RkPOtlkrBKX9Q==",
      "dev": true,
      "requires": {
        "@intervolga/optimize-cssnano-plugin": "^1.0.5",
        "@soda/friendly-errors-webpack-plugin": "^1.7.1",
        "@vue/cli-overlay": "^4.2.3",
        "@vue/cli-plugin-router": "^4.2.3",
        "@vue/cli-plugin-vuex": "^4.2.3",
        "@vue/cli-shared-utils": "^4.2.3",
        "@vue/component-compiler-utils": "^3.0.2",
        "@vue/preload-webpack-plugin": "^1.1.0",
        "@vue/web-component-wrapper": "^1.2.0",
        "acorn": "^7.1.0",
        "acorn-walk": "^7.0.0",
        "address": "^1.1.2",
        "autoprefixer": "^9.7.4",
        "browserslist": "^4.8.6",
        "cache-loader": "^4.1.0",
        "case-sensitive-paths-webpack-plugin": "^2.3.0",
        "cli-highlight": "^2.1.4",
        "clipboardy": "^2.1.0",
        "cliui": "^6.0.0",
        "copy-webpack-plugin": "^5.1.1",
        "css-loader": "^3.4.2",
        "cssnano": "^4.1.10",
        "current-script-polyfill": "^1.0.0",
        "debug": "^4.1.1",
        "default-gateway": "^5.0.5",
        "dotenv": "^8.2.0",
        "dotenv-expand": "^5.1.0",
        "file-loader": "^4.2.0",
        "fs-extra": "^7.0.1",
        "globby": "^9.2.0",
        "hash-sum": "^2.0.0",
        "html-webpack-plugin": "^3.2.0",
        "launch-editor-middleware": "^2.2.1",
        "lodash.defaultsdeep": "^4.6.1",
        "lodash.mapvalues": "^4.6.0",
        "lodash.transform": "^4.6.0",
        "mini-css-extract-plugin": "^0.9.0",
        "minimist": "^1.2.0",
        "pnp-webpack-plugin": "^1.6.0",
        "portfinder": "^1.0.25",
        "postcss-loader": "^3.0.0",
        "ssri": "^7.1.0",
        "terser-webpack-plugin": "^2.3.4",
        "thread-loader": "^2.1.3",
        "url-loader": "^2.2.0",
        "vue-loader": "^15.8.3",
        "vue-style-loader": "^4.1.2",
        "webpack": "^4.0.0",
        "webpack-bundle-analyzer": "^3.6.0",
        "webpack-chain": "^6.3.1",
        "webpack-dev-server": "^3.10.2",
        "webpack-merge": "^4.2.2"
      },
      "dependencies": {
        "acorn-walk": {
          "version": "7.1.1",
          "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.1.1.tgz",
          "integrity": "sha512-wdlPY2tm/9XBr7QkKlq0WQVgiuGTX6YWPyRyBviSoScBuLfTVQhvwg6wJ369GJ/1nPfTLMfnrFIfjqVg6d+jQQ==",
          "dev": true
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "cacache": {
          "version": "13.0.1",
          "resolved": "https://registry.npmjs.org/cacache/-/cacache-13.0.1.tgz",
          "integrity": "sha512-5ZvAxd05HDDU+y9BVvcqYu2LLXmPnQ0hW62h32g4xBTgL/MppR4/04NHfj/ycM2y6lmTnbw6HVi+1eN0Psba6w==",
          "dev": true,
          "requires": {
            "chownr": "^1.1.2",
            "figgy-pudding": "^3.5.1",
            "fs-minipass": "^2.0.0",
            "glob": "^7.1.4",
            "graceful-fs": "^4.2.2",
            "infer-owner": "^1.0.4",
            "lru-cache": "^5.1.1",
            "minipass": "^3.0.0",
            "minipass-collect": "^1.0.2",
            "minipass-flush": "^1.0.5",
            "minipass-pipeline": "^1.2.2",
            "mkdirp": "^0.5.1",
            "move-concurrently": "^1.0.1",
            "p-map": "^3.0.0",
            "promise-inflight": "^1.0.1",
            "rimraf": "^2.7.1",
            "ssri": "^7.0.0",
            "unique-filename": "^1.1.1"
          }
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "find-cache-dir": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.0.tgz",
          "integrity": "sha512-PtXtQb7IrD8O+h6Cq1dbpJH5NzD8+9keN1zZ0YlpDzl1PwXEJEBj6u1Xa92t1Hwluoozd9TNKul5Hi2iqpsWwg==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^3.0.2",
            "pkg-dir": "^4.1.0"
          }
        },
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "fs-extra": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
          "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "fs-minipass": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
          "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
          "dev": true,
          "requires": {
            "minipass": "^3.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "jest-worker": {
          "version": "25.1.0",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.1.0.tgz",
          "integrity": "sha512-ZHhHtlxOWSxCoNOKHGbiLzXnl42ga9CxDr27H36Qn+15pQZd3R/F24jrmjDelw9j/iHUIWMWs08/u2QN50HHOg==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "minipass": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
          "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "pkg-dir": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
          "dev": true,
          "requires": {
            "find-up": "^4.0.0"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "ssri": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/ssri/-/ssri-7.1.0.tgz",
          "integrity": "sha512-77/WrDZUWocK0mvA5NTRQyveUf+wsrIc6vyrxpS8tVvYBcX215QbafrJR3KtkpskIzoFLqqNuuYQvxaMjXJ/0g==",
          "dev": true,
          "requires": {
            "figgy-pudding": "^3.5.1",
            "minipass": "^3.1.1"
          }
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "terser-webpack-plugin": {
          "version": "2.3.5",
          "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-2.3.5.tgz",
          "integrity": "sha512-WlWksUoq+E4+JlJ+h+U+QUzXpcsMSSNXkDy9lBVkSqDn1w23Gg29L/ary9GeJVYCGiNJJX7LnVc4bwL1N3/g1w==",
          "dev": true,
          "requires": {
            "cacache": "^13.0.1",
            "find-cache-dir": "^3.2.0",
            "jest-worker": "^25.1.0",
            "p-limit": "^2.2.2",
            "schema-utils": "^2.6.4",
            "serialize-javascript": "^2.1.2",
            "source-map": "^0.6.1",
            "terser": "^4.4.3",
            "webpack-sources": "^1.4.3"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "@vue/cli-shared-utils": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@vue/cli-shared-utils/-/cli-shared-utils-4.2.3.tgz",
      "integrity": "sha512-GCoTB6vMZsi9z/Bmn8/C9IlnUw8eeHONOGE+48TJkZyulftVFhlwVWjTFp5GuDAlwpTWarHchW9IoVu3pIIGfA==",
      "dev": true,
      "requires": {
        "@hapi/joi": "^15.0.1",
        "chalk": "^2.4.2",
        "execa": "^1.0.0",
        "launch-editor": "^2.2.1",
        "lru-cache": "^5.1.1",
        "node-ipc": "^9.1.1",
        "open": "^6.3.0",
        "ora": "^3.4.0",
        "read-pkg": "^5.1.1",
        "request": "^2.87.0",
        "request-promise-native": "^1.0.8",
        "semver": "^6.1.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "open": {
          "version": "6.4.0",
          "resolved": "https://registry.npmjs.org/open/-/open-6.4.0.tgz",
          "integrity": "sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==",
          "dev": true,
          "requires": {
            "is-wsl": "^1.1.0"
          }
        },
        "parse-json": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.0.0.tgz",
          "integrity": "sha512-OOY5b7PAEFV0E2Fir1KOkxchnZNCdowAJgQ5NuxjpBKTRP3pQhwkrkxqQjeoKJ+fO7bCpmIZaogI4eZGDMEGOw==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "error-ex": "^1.3.1",
            "json-parse-better-errors": "^1.0.1",
            "lines-and-columns": "^1.1.6"
          }
        },
        "read-pkg": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz",
          "integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==",
          "dev": true,
          "requires": {
            "@types/normalize-package-data": "^2.4.0",
            "normalize-package-data": "^2.5.0",
            "parse-json": "^5.0.0",
            "type-fest": "^0.6.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "type-fest": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
          "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==",
          "dev": true
        }
      }
    },
    "@vue/component-compiler-utils": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@vue/component-compiler-utils/-/component-compiler-utils-3.1.1.tgz",
      "integrity": "sha512-+lN3nsfJJDGMNz7fCpcoYIORrXo0K3OTsdr8jCM7FuqdI4+70TY6gxY6viJ2Xi1clqyPg7LpeOWwjF31vSMmUw==",
      "dev": true,
      "requires": {
        "consolidate": "^0.15.1",
        "hash-sum": "^1.0.2",
        "lru-cache": "^4.1.2",
        "merge-source-map": "^1.1.0",
        "postcss": "^7.0.14",
        "postcss-selector-parser": "^6.0.2",
        "prettier": "^1.18.2",
        "source-map": "~0.6.1",
        "vue-template-es2015-compiler": "^1.9.0"
      },
      "dependencies": {
        "hash-sum": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/hash-sum/-/hash-sum-1.0.2.tgz",
          "integrity": "sha1-M7QHd3VMZDJXPBIMw4CLvRDUfwQ=",
          "dev": true
        },
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "prettier": {
          "version": "1.19.1",
          "resolved": "https://registry.npmjs.org/prettier/-/prettier-1.19.1.tgz",
          "integrity": "sha512-s7PoyDv/II1ObgQunCbB9PdLmUcBZcnWOcxDh7O0N/UwDEsHyqkW+Qh28jW+mVuCdx7gLB0BotYI1Y6uI9iyew==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        }
      }
    },
    "@vue/eslint-config-typescript": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@vue/eslint-config-typescript/-/eslint-config-typescript-5.0.2.tgz",
      "integrity": "sha512-GEZOHKOnelgQf5npA+6VNuhJZu9xEJaics3SYUyRjaSay+2SCpEINHhEpt6fXoNy/aIFt8CkDlt9CaEb+QPIcg==",
      "dev": true,
      "requires": {
        "vue-eslint-parser": "^7.0.0"
      }
    },
    "@vue/preload-webpack-plugin": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@vue/preload-webpack-plugin/-/preload-webpack-plugin-1.1.1.tgz",
      "integrity": "sha512-8VCoJeeH8tCkzhkpfOkt+abALQkS11OIHhte5MBzYaKMTqK0A3ZAKEUVAffsOklhEv7t0yrQt696Opnu9oAx+w==",
      "dev": true
    },
    "@vue/test-utils": {
      "version": "1.0.0-beta.31",
      "resolved": "https://registry.npmjs.org/@vue/test-utils/-/test-utils-1.0.0-beta.31.tgz",
      "integrity": "sha512-IlhSx5hyEVnbvDZ3P98R1jNmy88QAd/y66Upn4EcvxSD5D4hwOutl3dIdfmSTSXs4b9DIMDnEVjX7t00cvOnvg==",
      "dev": true,
      "requires": {
        "dom-event-types": "^1.0.0",
        "lodash": "^4.17.15",
        "pretty": "^2.0.0"
      }
    },
    "@vue/web-component-wrapper": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@vue/web-component-wrapper/-/web-component-wrapper-1.2.0.tgz",
      "integrity": "sha512-Xn/+vdm9CjuC9p3Ae+lTClNutrVhsXpzxvoTXXtoys6kVRX9FkueSUAqSWAyZntmVLlR4DosBV4pH8y5Z/HbUw==",
      "dev": true
    },
    "@webassemblyjs/ast": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.9.0.tgz",
      "integrity": "sha512-C6wW5L+b7ogSDVqymbkkvuW9kruN//YisMED04xzeBBqjHa2FYnmvOlS6Xj68xWQRgWvI9cIglsjFowH/RJyEA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/helper-module-context": "1.9.0",
        "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
        "@webassemblyjs/wast-parser": "1.9.0"
      }
    },
    "@webassemblyjs/floating-point-hex-parser": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.9.0.tgz",
      "integrity": "sha512-TG5qcFsS8QB4g4MhrxK5TqfdNe7Ey/7YL/xN+36rRjl/BlGE/NcBvJcqsRgCP6Z92mRE+7N50pRIi8SmKUbcQA==",
      "dev": true
    },
    "@webassemblyjs/helper-api-error": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.9.0.tgz",
      "integrity": "sha512-NcMLjoFMXpsASZFxJ5h2HZRcEhDkvnNFOAKneP5RbKRzaWJN36NC4jqQHKwStIhGXu5mUWlUUk7ygdtrO8lbmw==",
      "dev": true
    },
    "@webassemblyjs/helper-buffer": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.9.0.tgz",
      "integrity": "sha512-qZol43oqhq6yBPx7YM3m9Bv7WMV9Eevj6kMi6InKOuZxhw+q9hOkvq5e/PpKSiLfyetpaBnogSbNCfBwyB00CA==",
      "dev": true
    },
    "@webassemblyjs/helper-code-frame": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-code-frame/-/helper-code-frame-1.9.0.tgz",
      "integrity": "sha512-ERCYdJBkD9Vu4vtjUYe8LZruWuNIToYq/ME22igL+2vj2dQ2OOujIZr3MEFvfEaqKoVqpsFKAGsRdBSBjrIvZA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/wast-printer": "1.9.0"
      }
    },
    "@webassemblyjs/helper-fsm": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-fsm/-/helper-fsm-1.9.0.tgz",
      "integrity": "sha512-OPRowhGbshCb5PxJ8LocpdX9Kl0uB4XsAjl6jH/dWKlk/mzsANvhwbiULsaiqT5GZGT9qinTICdj6PLuM5gslw==",
      "dev": true
    },
    "@webassemblyjs/helper-module-context": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-module-context/-/helper-module-context-1.9.0.tgz",
      "integrity": "sha512-MJCW8iGC08tMk2enck1aPW+BE5Cw8/7ph/VGZxwyvGbJwjktKkDK7vy7gAmMDx88D7mhDTCNKAW5tED+gZ0W8g==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0"
      }
    },
    "@webassemblyjs/helper-wasm-bytecode": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.9.0.tgz",
      "integrity": "sha512-R7FStIzyNcd7xKxCZH5lE0Bqy+hGTwS3LJjuv1ZVxd9O7eHCedSdrId/hMOd20I+v8wDXEn+bjfKDLzTepoaUw==",
      "dev": true
    },
    "@webassemblyjs/helper-wasm-section": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.9.0.tgz",
      "integrity": "sha512-XnMB8l3ek4tvrKUUku+IVaXNHz2YsJyOOmz+MMkZvh8h1uSJpSen6vYnw3IoQ7WwEuAhL8Efjms1ZWjqh2agvw==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-buffer": "1.9.0",
        "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
        "@webassemblyjs/wasm-gen": "1.9.0"
      }
    },
    "@webassemblyjs/ieee754": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.9.0.tgz",
      "integrity": "sha512-dcX8JuYU/gvymzIHc9DgxTzUUTLexWwt8uCTWP3otys596io0L5aW02Gb1RjYpx2+0Jus1h4ZFqjla7umFniTg==",
      "dev": true,
      "requires": {
        "@xtuc/ieee754": "^1.2.0"
      }
    },
    "@webassemblyjs/leb128": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.9.0.tgz",
      "integrity": "sha512-ENVzM5VwV1ojs9jam6vPys97B/S65YQtv/aanqnU7D8aSoHFX8GyhGg0CMfyKNIHBuAVjy3tlzd5QMMINa7wpw==",
      "dev": true,
      "requires": {
        "@xtuc/long": "4.2.2"
      }
    },
    "@webassemblyjs/utf8": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.9.0.tgz",
      "integrity": "sha512-GZbQlWtopBTP0u7cHrEx+73yZKrQoBMpwkGEIqlacljhXCkVM1kMQge/Mf+csMJAjEdSwhOyLAS0AoR3AG5P8w==",
      "dev": true
    },
    "@webassemblyjs/wasm-edit": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.9.0.tgz",
      "integrity": "sha512-FgHzBm80uwz5M8WKnMTn6j/sVbqilPdQXTWraSjBwFXSYGirpkSWE2R9Qvz9tNiTKQvoKILpCuTjBKzOIm0nxw==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-buffer": "1.9.0",
        "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
        "@webassemblyjs/helper-wasm-section": "1.9.0",
        "@webassemblyjs/wasm-gen": "1.9.0",
        "@webassemblyjs/wasm-opt": "1.9.0",
        "@webassemblyjs/wasm-parser": "1.9.0",
        "@webassemblyjs/wast-printer": "1.9.0"
      }
    },
    "@webassemblyjs/wasm-gen": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.9.0.tgz",
      "integrity": "sha512-cPE3o44YzOOHvlsb4+E9qSqjc9Qf9Na1OO/BHFy4OI91XDE14MjFN4lTMezzaIWdPqHnsTodGGNP+iRSYfGkjA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
        "@webassemblyjs/ieee754": "1.9.0",
        "@webassemblyjs/leb128": "1.9.0",
        "@webassemblyjs/utf8": "1.9.0"
      }
    },
    "@webassemblyjs/wasm-opt": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.9.0.tgz",
      "integrity": "sha512-Qkjgm6Anhm+OMbIL0iokO7meajkzQD71ioelnfPEj6r4eOFuqm4YC3VBPqXjFyyNwowzbMD+hizmprP/Fwkl2A==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-buffer": "1.9.0",
        "@webassemblyjs/wasm-gen": "1.9.0",
        "@webassemblyjs/wasm-parser": "1.9.0"
      }
    },
    "@webassemblyjs/wasm-parser": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.9.0.tgz",
      "integrity": "sha512-9+wkMowR2AmdSWQzsPEjFU7njh8HTO5MqO8vjwEHuM+AMHioNqSBONRdr0NQQ3dVQrzp0s8lTcYqzUdb7YgELA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-api-error": "1.9.0",
        "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
        "@webassemblyjs/ieee754": "1.9.0",
        "@webassemblyjs/leb128": "1.9.0",
        "@webassemblyjs/utf8": "1.9.0"
      }
    },
    "@webassemblyjs/wast-parser": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-parser/-/wast-parser-1.9.0.tgz",
      "integrity": "sha512-qsqSAP3QQ3LyZjNC/0jBJ/ToSxfYJ8kYyuiGvtn/8MK89VrNEfwj7BPQzJVHi0jGTRK2dGdJ5PRqhtjzoww+bw==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/floating-point-hex-parser": "1.9.0",
        "@webassemblyjs/helper-api-error": "1.9.0",
        "@webassemblyjs/helper-code-frame": "1.9.0",
        "@webassemblyjs/helper-fsm": "1.9.0",
        "@xtuc/long": "4.2.2"
      }
    },
    "@webassemblyjs/wast-printer": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.9.0.tgz",
      "integrity": "sha512-2J0nE95rHXHyQ24cWjMKJ1tqB/ds8z/cyeOZxJhcb+rW+SQASVjuznUSmdz5GpVJTzU8JkhYut0D3siFDD6wsA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/wast-parser": "1.9.0",
        "@xtuc/long": "4.2.2"
      }
    },
    "@xtuc/ieee754": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
      "dev": true
    },
    "@xtuc/long": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
      "dev": true
    },
    "abab": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.3.tgz",
      "integrity": "sha512-tsFzPpcttalNjFBCFMqsKYQcWxxen1pgJR56by//QwvJc4/OUS3kPOOttx2tSIfjsylB0pYu7f5D3K1RCxUnUg==",
      "dev": true
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
      "dev": true
    },
    "accepts": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
      "integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
      "dev": true,
      "requires": {
        "mime-types": "~2.1.24",
        "negotiator": "0.6.2"
      }
    },
    "acorn": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.1.1.tgz",
      "integrity": "sha512-add7dgA5ppRPxCFJoAGfMDi7PIBXq1RtGo7BhbLaxwrXPOmw8gq48Y9ozT01hUKy9byMjlR20EJhu5zlkErEkg==",
      "dev": true
    },
    "acorn-globals": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.4.tgz",
      "integrity": "sha512-clfQEh21R+D0leSbUdWf3OcfqyaCSAQ8Ryq00bofSekfr9W8u1jyYZo6ir0xu9Gtcf7BjcHJpnbZH7JOCpP60A==",
      "dev": true,
      "requires": {
        "acorn": "^6.0.1",
        "acorn-walk": "^6.0.1"
      },
      "dependencies": {
        "acorn": {
          "version": "6.4.1",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA==",
          "dev": true
        }
      }
    },
    "acorn-jsx": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.2.0.tgz",
      "integrity": "sha512-HiUX/+K2YpkpJ+SzBffkM/AQ2YE03S0U1kjTLVpoJdhZMOWy8qvXVN9JdLqv2QsaQ6MPYQIuNmwD8zOiYUofLQ==",
      "dev": true
    },
    "acorn-walk": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.2.0.tgz",
      "integrity": "sha512-7evsyfH1cLOCdAzZAd43Cic04yKydNx0cF+7tiA19p1XnLLPU4dpCQOqpjqwokFe//vS0QqfqqjCS2JkiIs0cA==",
      "dev": true
    },
    "address": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/address/-/address-1.1.2.tgz",
      "integrity": "sha512-aT6camzM4xEA54YVJYSqxz1kv4IHnQZRtThJJHhUMRExaU5spC7jX5ugSwTaTgJliIgs4VhZOk7htClvQ/LmRA==",
      "dev": true
    },
    "aggregate-error": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.0.1.tgz",
      "integrity": "sha512-quoaXsZ9/BLNae5yiNoUz+Nhkwz83GhWwtYFglcjEQB2NDHCIpApbqXxIFnm4Pq/Nvhrsq5sYJFyohrrxnTGAA==",
      "dev": true,
      "requires": {
        "clean-stack": "^2.0.0",
        "indent-string": "^4.0.0"
      },
      "dependencies": {
        "indent-string": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
          "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
          "dev": true
        }
      }
    },
    "ajv": {
      "version": "6.12.0",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
      "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ajv-errors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ajv-errors/-/ajv-errors-1.0.1.tgz",
      "integrity": "sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ==",
      "dev": true
    },
    "ajv-keywords": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.4.1.tgz",
      "integrity": "sha512-RO1ibKvd27e6FEShVFfPALuHI3WjSVNeK5FIsmme/LYRNxjKuNj+Dt7bucLa6NdSv3JcVTyMlm9kGR84z1XpaQ==",
      "dev": true
    },
    "alphanum-sort": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",
      "integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM=",
      "dev": true
    },
    "animate.css": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/animate.css/-/animate.css-3.7.2.tgz",
      "integrity": "sha512-0bE8zYo7C0KvgOYrSVfrzkbYk6IOTVPNqkiHg2cbyF4Pq/PXzilz4BRWA3hwEUBoMp5VBgrC29lQIZyhRWdBTw=="
    },
    "ansi-align": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.0.tgz",
      "integrity": "sha512-ZpClVKqXN3RGBmKibdfWzqCY4lnjEuoNzU5T0oEFpfd/z5qJHVarukridD4juLO2FXMiwUQxr9WqQtaYa8XRYw==",
      "dev": true,
      "requires": {
        "string-width": "^3.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "ansi-colors": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.2.4.tgz",
      "integrity": "sha512-hHUXGagefjN2iRrID63xckIvotOXOojhQKWIPUZ4mNUZ9nLZW+7FMNoE1lOkEhNWYsx/7ysGIuJYCiMAA9FnrA==",
      "dev": true
    },
    "ansi-escapes": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.1.tgz",
      "integrity": "sha512-JWF7ocqNrp8u9oqpgV+wH5ftbt+cfvv+PTjOvKLT3AdYly/LmORARfEVT1iyjwN+4MqE5UmVKoAdIBqeoCHgLA==",
      "dev": true,
      "requires": {
        "type-fest": "^0.11.0"
      },
      "dependencies": {
        "type-fest": {
          "version": "0.11.0",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.11.0.tgz",
          "integrity": "sha512-OdjXJxnCN1AvyLSzeKIgXTXxV+99ZuXl3Hpo9XpJAv9MBcHrrJOQ5kV7ypXOuQie+AmWG25hLbiKdwYTifzcfQ==",
          "dev": true
        }
      }
    },
    "ansi-html": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/ansi-html/-/ansi-html-0.0.7.tgz",
      "integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4=",
      "dev": true
    },
    "ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
      "dev": true
    },
    "ansi-styles": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
      "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
      "dev": true
    },
    "any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha1-q8av7tzqUugJzcA3au0845Y10X8=",
      "dev": true
    },
    "anymatch": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
      "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
      "dev": true,
      "requires": {
        "micromatch": "^3.1.4",
        "normalize-path": "^2.1.1"
      },
      "dependencies": {
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        }
      }
    },
    "app-builder-bin": {
      "version": "3.5.5",
      "resolved": "https://registry.npmjs.org/app-builder-bin/-/app-builder-bin-3.5.5.tgz",
      "integrity": "sha512-ZcHzJ9Xl+azPqdKzXZKdRZmkNmbxHHZyl4cbobNf8qMQpoPChpcov8riVrZSbu/0cT/JqJ8LOwJjy1OAwbChaQ==",
      "dev": true
    },
    "app-builder-lib": {
      "version": "22.4.1",
      "resolved": "https://registry.npmjs.org/app-builder-lib/-/app-builder-lib-22.4.1.tgz",
      "integrity": "sha512-epwUzIM+2pcdy/If9koTP74CKx4v7xGPj75a2Z5cM4rrGN9yVZ3eDUBbfF0e0qE4Qmcv5pd0BAZJ26bGm8NWsQ==",
      "dev": true,
      "requires": {
        "7zip-bin": "~5.0.3",
        "@develar/schema-utils": "~2.1.0",
        "async-exit-hook": "^2.0.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "22.4.1",
        "builder-util-runtime": "8.6.2",
        "chromium-pickle-js": "^0.2.0",
        "debug": "^4.1.1",
        "ejs": "^3.0.1",
        "electron-publish": "22.4.1",
        "fs-extra": "^8.1.0",
        "hosted-git-info": "^3.0.4",
        "is-ci": "^2.0.0",
        "isbinaryfile": "^4.0.4",
        "js-yaml": "^3.13.1",
        "lazy-val": "^1.0.4",
        "minimatch": "^3.0.4",
        "normalize-package-data": "^2.5.0",
        "read-config-file": "5.0.2",
        "sanitize-filename": "^1.6.3",
        "semver": "^7.1.3",
        "temp-file": "^3.3.7"
      },
      "dependencies": {
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ejs": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/ejs/-/ejs-3.0.2.tgz",
          "integrity": "sha512-IncmUpn1yN84hy2shb0POJ80FWrfGNY0cxO9f4v+/sG7qcBvAtVWUA1IdzY/8EYUmOVhoKJVdJjNd3AZcnxOjA==",
          "dev": true
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "hosted-git-info": {
          "version": "3.0.4",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-3.0.4.tgz",
          "integrity": "sha512-4oT62d2jwSDBbLLFLZE+1vPuQ1h8p9wjrJ8Mqx5TjsyWmBMV5B13eJqn8pvluqubLf3cJPTfiYCIwNwDNmzScQ==",
          "dev": true,
          "requires": {
            "lru-cache": "^5.1.1"
          }
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "semver": {
          "version": "7.1.3",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.1.3.tgz",
          "integrity": "sha512-ekM0zfiA9SCBlsKa2X1hxyxiI4L3B6EbVJkkdgQXnSEEaHlGdvyodMruTiulSRWMMB4NeIuYNMC9rTKTz97GxA==",
          "dev": true
        }
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "dev": true
    },
    "arch": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/arch/-/arch-2.1.1.tgz",
      "integrity": "sha512-BLM56aPo9vLLFVa8+/+pJLnrZ7QGGTVHWsCwieAWT9o9K8UeGaQbzZbGoabWLOo2ksBCztoXdqBZBplqLDDCSg==",
      "dev": true
    },
    "are-we-there-yet": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
      "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
      "dev": true,
      "requires": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "arr-diff": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
      "dev": true
    },
    "arr-flatten": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
      "dev": true
    },
    "arr-union": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",
      "dev": true
    },
    "array-equal": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",
      "integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM=",
      "dev": true
    },
    "array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=",
      "dev": true
    },
    "array-union": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
      "dev": true,
      "requires": {
        "array-uniq": "^1.0.1"
      }
    },
    "array-uniq": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
      "dev": true
    },
    "array-unique": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
      "dev": true
    },
    "asap": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
      "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY=",
      "dev": true,
      "optional": true
    },
    "asar": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/asar/-/asar-2.1.0.tgz",
      "integrity": "sha512-d2Ovma+bfqNpvBzY/KU8oPY67ZworixTpkjSx0PCXnQi67c2cXmssaTxpFDUM0ttopXoGx/KRxNg/GDThYbXQA==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "chromium-pickle-js": "^0.2.0",
        "commander": "^2.20.0",
        "cuint": "^0.2.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "tmp-promise": "^1.0.5"
      }
    },
    "asn1": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "asn1.js": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
      "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
      "dev": true,
      "requires": {
        "bn.js": "^4.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "assert": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/assert/-/assert-1.5.0.tgz",
      "integrity": "sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.1",
        "util": "0.10.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=",
          "dev": true
        },
        "util": {
          "version": "0.10.3",
          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
          "dev": true,
          "requires": {
            "inherits": "2.0.1"
          }
        }
      }
    },
    "assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
    },
    "assign-symbols": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
      "dev": true
    },
    "astral-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",
      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==",
      "dev": true
    },
    "async": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
      "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.14"
      }
    },
    "async-each": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",
      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==",
      "dev": true
    },
    "async-exit-hook": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/async-exit-hook/-/async-exit-hook-2.0.1.tgz",
      "integrity": "sha512-NW2cX8m1Q7KPA7a5M2ULQeZ2wR5qI5PAbw5L0UOMxdioVk9PMZ0h1TmyZEkPYrCvYjDlFICusOu1dlEKAAeXBw==",
      "dev": true
    },
    "async-limiter": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==",
      "dev": true
    },
    "async-validator": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/async-validator/-/async-validator-1.12.2.tgz",
      "integrity": "sha512-57EETfCPFiB7M4QscvQzWSGNsmtkjjzZv318SK1CBlstk+hycV72ocjriMOOM48HjvmoAoJGpJNjC7Z76RlnZA=="
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
    },
    "atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "dev": true
    },
    "author-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/author-regex/-/author-regex-1.0.0.tgz",
      "integrity": "sha1-0IiFvmubv5Q5/gh8dihyRfCoFFA=",
      "dev": true
    },
    "autoprefixer": {
      "version": "9.7.4",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.7.4.tgz",
      "integrity": "sha512-g0Ya30YrMBAEZk60lp+qfX5YQllG+S5W3GYCFvyHTvhOki0AEQJLPEcIuGRsqVwLi8FvXPVtwTGhfr38hVpm0g==",
      "dev": true,
      "requires": {
        "browserslist": "^4.8.3",
        "caniuse-lite": "^1.0.30001020",
        "chalk": "^2.4.2",
        "normalize-range": "^0.1.2",
        "num2fraction": "^1.2.2",
        "postcss": "^7.0.26",
        "postcss-value-parser": "^4.0.2"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "await-lock": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/await-lock/-/await-lock-2.0.1.tgz",
      "integrity": "sha512-ntLi9fzlMT/vWjC1wwVI11/cSRJ3nTS35qVekNc9WnaoMOP2eWH0RvIqwLQkDjX4a4YynsKEv+Ere2VONp9wxg=="
    },
    "aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
    },
    "aws4": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
      "integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug=="
    },
    "axios": {
      "version": "0.19.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.19.2.tgz",
      "integrity": "sha512-fjgm5MvRHLhx+osE2xoekY70AhARk3a6hkN+3Io1jc00jtquGvxYlKlsFUhmUET0V5te6CcZI7lcv2Ym61mjHA==",
      "requires": {
        "follow-redirects": "1.5.10"
      }
    },
    "babel-code-frame": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
      "dev": true,
      "requires": {
        "chalk": "^1.1.3",
        "esutils": "^2.0.2",
        "js-tokens": "^3.0.2"
      }
    },
    "babel-core": {
      "version": "7.0.0-bridge.0",
      "resolved": "https://registry.npmjs.org/babel-core/-/babel-core-7.0.0-bridge.0.tgz",
      "integrity": "sha512-poPX9mZH/5CSanm50Q+1toVci6pv5KSRv/5TWCwtzQS5XEwn40BcCrgIeMFWP9CKKIniKXNxoIOnOq4VVlGXhg==",
      "dev": true
    },
    "babel-helper-builder-binary-assignment-operator-visitor": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-builder-binary-assignment-operator-visitor/-/babel-helper-builder-binary-assignment-operator-visitor-6.24.1.tgz",
      "integrity": "sha1-zORReto1b0IgvK6KAsKzRvmlZmQ=",
      "dev": true,
      "requires": {
        "babel-helper-explode-assignable-expression": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-call-delegate": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-call-delegate/-/babel-helper-call-delegate-6.24.1.tgz",
      "integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
      "dev": true,
      "requires": {
        "babel-helper-hoist-variables": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-define-map": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-helper-define-map/-/babel-helper-define-map-6.26.0.tgz",
      "integrity": "sha1-pfVtq0GiX5fstJjH66ypgZ+Vvl8=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-helper-explode-assignable-expression": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-explode-assignable-expression/-/babel-helper-explode-assignable-expression-6.24.1.tgz",
      "integrity": "sha1-8luCz33BBDPFX3BZLVdGQArCLKo=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-function-name": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-function-name/-/babel-helper-function-name-6.24.1.tgz",
      "integrity": "sha1-00dbjAPtmCQqJbSDUasYOZ01gKk=",
      "dev": true,
      "requires": {
        "babel-helper-get-function-arity": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-get-function-arity": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-get-function-arity/-/babel-helper-get-function-arity-6.24.1.tgz",
      "integrity": "sha1-j3eCqpNAfEHTqlCQj4mwMbG2hT0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-hoist-variables": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-hoist-variables/-/babel-helper-hoist-variables-6.24.1.tgz",
      "integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-optimise-call-expression": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-optimise-call-expression/-/babel-helper-optimise-call-expression-6.24.1.tgz",
      "integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-regex": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-helper-regex/-/babel-helper-regex-6.26.0.tgz",
      "integrity": "sha1-MlxZ+QL4LyS3T6zu0DY5VPZJXnI=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-helper-remap-async-to-generator": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-remap-async-to-generator/-/babel-helper-remap-async-to-generator-6.24.1.tgz",
      "integrity": "sha1-XsWBgnrXI/7N04HxySg5BnbkVRs=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-helper-replace-supers": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-helper-replace-supers/-/babel-helper-replace-supers-6.24.1.tgz",
      "integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
      "dev": true,
      "requires": {
        "babel-helper-optimise-call-expression": "^6.24.1",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-jest": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-25.2.6.tgz",
      "integrity": "sha512-MDJOAlwtIeIQiGshyX0d2PxTbV73xZMpNji40ivVTPQOm59OdRR9nYCkffqI7ugtsK4JR98HgNKbDbuVf4k5QQ==",
      "dev": true,
      "requires": {
        "@jest/transform": "^25.2.6",
        "@jest/types": "^25.2.6",
        "@types/babel__core": "^7.1.0",
        "babel-plugin-istanbul": "^6.0.0",
        "babel-preset-jest": "^25.2.6",
        "chalk": "^3.0.0",
        "slash": "^3.0.0"
      },
      "dependencies": {
        "@jest/transform": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-25.2.6.tgz",
          "integrity": "sha512-rZnjCjZf9avPOf9q/w9RUZ9Uc29JmB53uIXNJmNz04QbDMD5cR/VjfikiMKajBsXe2vnFl5sJ4RTt+9HPicauQ==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.1.0",
            "@jest/types": "^25.2.6",
            "babel-plugin-istanbul": "^6.0.0",
            "chalk": "^3.0.0",
            "convert-source-map": "^1.4.0",
            "fast-json-stable-stringify": "^2.0.0",
            "graceful-fs": "^4.2.3",
            "jest-haste-map": "^25.2.6",
            "jest-regex-util": "^25.2.6",
            "jest-util": "^25.2.6",
            "micromatch": "^4.0.2",
            "pirates": "^4.0.1",
            "realpath-native": "^2.0.0",
            "slash": "^3.0.0",
            "source-map": "^0.6.1",
            "write-file-atomic": "^3.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "babel-plugin-istanbul": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.0.0.tgz",
          "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE/QtHmqtP8SWlTENqbK8GCSQ==",
          "dev": true,
          "requires": {
            "@babel/helper-plugin-utils": "^7.0.0",
            "@istanbuljs/load-nyc-config": "^1.0.0",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-instrument": "^4.0.0",
            "test-exclude": "^6.0.0"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "istanbul-lib-instrument": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.1.tgz",
          "integrity": "sha512-imIchxnodll7pvQBYOqUu88EufLCU56LMeFPZZM/fJZ1irYcYdqroaV+ACK1Ila8ls09iEYArp+nqyC6lW1Vfg==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.7.5",
            "@babel/parser": "^7.7.5",
            "@babel/template": "^7.7.4",
            "@babel/traverse": "^7.7.4",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-coverage": "^3.0.0",
            "semver": "^6.3.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "test-exclude": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
          "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
          "dev": true,
          "requires": {
            "@istanbuljs/schema": "^0.1.2",
            "glob": "^7.1.4",
            "minimatch": "^3.0.4"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        }
      }
    },
    "babel-loader": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.1.0.tgz",
      "integrity": "sha512-7q7nC1tYOrqvUrN3LQK4GwSk/TQorZSOlO9C+RZDZpODgyN4ZlCqE5q9cDsyWOliN+aU9B4JX01xK9eJXowJLw==",
      "dev": true,
      "requires": {
        "find-cache-dir": "^2.1.0",
        "loader-utils": "^1.4.0",
        "mkdirp": "^0.5.3",
        "pify": "^4.0.1",
        "schema-utils": "^2.6.5"
      },
      "dependencies": {
        "pify": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.6",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.6.tgz",
          "integrity": "sha512-wHutF/WPSbIi9x6ctjGGk2Hvl0VOz5l3EKEuKbjPlB30mKZUzb9A5k9yEXRX3pwyqVLPvpfZZEllaFq/M718hA==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "babel-messages": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
      "integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-check-es2015-constants": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-check-es2015-constants/-/babel-plugin-check-es2015-constants-6.22.0.tgz",
      "integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-dynamic-import-node": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.0.tgz",
      "integrity": "sha512-o6qFkpeQEBxcqt0XYlWzAVxNCSCZdUgcR8IRlhD/8DylxjjO4foPcvTW0GGKa/cVt3rvxZ7o5ippJ+/0nvLhlQ==",
      "dev": true,
      "requires": {
        "object.assign": "^4.1.0"
      }
    },
    "babel-plugin-istanbul": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-5.2.0.tgz",
      "integrity": "sha512-5LphC0USA8t4i1zCtjbbNb6jJj/9+X6P37Qfirc/70EQ34xKlMW+a1RHGwxGI+SwWpNwZ27HqvzAobeqaXwiZw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "find-up": "^3.0.0",
        "istanbul-lib-instrument": "^3.3.0",
        "test-exclude": "^5.2.3"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        }
      }
    },
    "babel-plugin-jest-hoist": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-25.2.6.tgz",
      "integrity": "sha512-qE2xjMathybYxjiGFJg0mLFrz0qNp83aNZycWDY/SuHiZNq+vQfRQtuINqyXyue1ELd8Rd+1OhFSLjms8msMbw==",
      "dev": true,
      "requires": {
        "@types/babel__traverse": "^7.0.6"
      }
    },
    "babel-plugin-syntax-async-functions": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-async-functions/-/babel-plugin-syntax-async-functions-6.13.0.tgz",
      "integrity": "sha1-ytnK0RkbWtY0vzCuCHI5HgZHvpU=",
      "dev": true
    },
    "babel-plugin-syntax-dynamic-import": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-dynamic-import/-/babel-plugin-syntax-dynamic-import-6.18.0.tgz",
      "integrity": "sha1-jWomIpyDdFqZgqRBBRVyyqF5sdo=",
      "dev": true
    },
    "babel-plugin-syntax-exponentiation-operator": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-exponentiation-operator/-/babel-plugin-syntax-exponentiation-operator-6.13.0.tgz",
      "integrity": "sha1-nufoM3KQ2pUoggGmpX9BcDF4MN4=",
      "dev": true
    },
    "babel-plugin-syntax-trailing-function-commas": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-trailing-function-commas/-/babel-plugin-syntax-trailing-function-commas-6.22.0.tgz",
      "integrity": "sha1-ugNgk3+NBuQBgKQ/4NVhb/9TLPM=",
      "dev": true
    },
    "babel-plugin-transform-async-to-generator": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-async-to-generator/-/babel-plugin-transform-async-to-generator-6.24.1.tgz",
      "integrity": "sha1-ZTbjeK/2yx1VF6wOQOs+n8jQh2E=",
      "dev": true,
      "requires": {
        "babel-helper-remap-async-to-generator": "^6.24.1",
        "babel-plugin-syntax-async-functions": "^6.8.0",
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-arrow-functions": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-arrow-functions/-/babel-plugin-transform-es2015-arrow-functions-6.22.0.tgz",
      "integrity": "sha1-RSaSy3EdX3ncf4XkQM5BufJE0iE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-block-scoped-functions": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoped-functions/-/babel-plugin-transform-es2015-block-scoped-functions-6.22.0.tgz",
      "integrity": "sha1-u8UbSflk1wy42OC5ToICRs46YUE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-block-scoping": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.26.0.tgz",
      "integrity": "sha1-1w9SmcEwjQXBL0Y4E7CgnnOxiV8=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-template": "^6.26.0",
        "babel-traverse": "^6.26.0",
        "babel-types": "^6.26.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-plugin-transform-es2015-classes": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-classes/-/babel-plugin-transform-es2015-classes-6.24.1.tgz",
      "integrity": "sha1-WkxYpQyclGHlZLSyo7+ryXolhNs=",
      "dev": true,
      "requires": {
        "babel-helper-define-map": "^6.24.1",
        "babel-helper-function-name": "^6.24.1",
        "babel-helper-optimise-call-expression": "^6.24.1",
        "babel-helper-replace-supers": "^6.24.1",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-computed-properties": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-computed-properties/-/babel-plugin-transform-es2015-computed-properties-6.24.1.tgz",
      "integrity": "sha1-b+Ko0WiV1WNPTNmZttNICjCBWbM=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-destructuring": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-destructuring/-/babel-plugin-transform-es2015-destructuring-6.23.0.tgz",
      "integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-duplicate-keys": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-duplicate-keys/-/babel-plugin-transform-es2015-duplicate-keys-6.24.1.tgz",
      "integrity": "sha1-c+s9MQypaePvnskcU3QabxV2Qj4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-for-of": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-for-of/-/babel-plugin-transform-es2015-for-of-6.23.0.tgz",
      "integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-function-name": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-function-name/-/babel-plugin-transform-es2015-function-name-6.24.1.tgz",
      "integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
      "dev": true,
      "requires": {
        "babel-helper-function-name": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-literals": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-literals/-/babel-plugin-transform-es2015-literals-6.22.0.tgz",
      "integrity": "sha1-T1SgLWzWbPkVKAAZox0xklN3yi4=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-modules-amd": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-amd/-/babel-plugin-transform-es2015-modules-amd-6.24.1.tgz",
      "integrity": "sha1-Oz5UAXI5hC1tGcMBHEvS8AoA0VQ=",
      "dev": true,
      "requires": {
        "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-modules-commonjs": {
      "version": "6.26.2",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-commonjs/-/babel-plugin-transform-es2015-modules-commonjs-6.26.2.tgz",
      "integrity": "sha512-CV9ROOHEdrjcwhIaJNBGMBCodN+1cfkwtM1SbUHmvyy35KGT7fohbpOxkE2uLz1o6odKK2Ck/tz47z+VqQfi9Q==",
      "dev": true,
      "requires": {
        "babel-plugin-transform-strict-mode": "^6.24.1",
        "babel-runtime": "^6.26.0",
        "babel-template": "^6.26.0",
        "babel-types": "^6.26.0"
      }
    },
    "babel-plugin-transform-es2015-modules-systemjs": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-systemjs/-/babel-plugin-transform-es2015-modules-systemjs-6.24.1.tgz",
      "integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
      "dev": true,
      "requires": {
        "babel-helper-hoist-variables": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-modules-umd": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-umd/-/babel-plugin-transform-es2015-modules-umd-6.24.1.tgz",
      "integrity": "sha1-rJl+YoXNGO1hdq22B9YCNErThGg=",
      "dev": true,
      "requires": {
        "babel-plugin-transform-es2015-modules-amd": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-object-super": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-object-super/-/babel-plugin-transform-es2015-object-super-6.24.1.tgz",
      "integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
      "dev": true,
      "requires": {
        "babel-helper-replace-supers": "^6.24.1",
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-parameters": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-parameters/-/babel-plugin-transform-es2015-parameters-6.24.1.tgz",
      "integrity": "sha1-V6w1GrScrxSpfNE7CfZv3wpiXys=",
      "dev": true,
      "requires": {
        "babel-helper-call-delegate": "^6.24.1",
        "babel-helper-get-function-arity": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-template": "^6.24.1",
        "babel-traverse": "^6.24.1",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-shorthand-properties": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-shorthand-properties/-/babel-plugin-transform-es2015-shorthand-properties-6.24.1.tgz",
      "integrity": "sha1-JPh11nIch2YbvZmkYi5R8U3jiqA=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-spread": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-spread/-/babel-plugin-transform-es2015-spread-6.22.0.tgz",
      "integrity": "sha1-1taKmfia7cRTbIGlQujdnxdG+NE=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-sticky-regex": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-sticky-regex/-/babel-plugin-transform-es2015-sticky-regex-6.24.1.tgz",
      "integrity": "sha1-AMHNsaynERLN8M9hJsLta0V8zbw=",
      "dev": true,
      "requires": {
        "babel-helper-regex": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-plugin-transform-es2015-template-literals": {
      "version": "6.22.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-template-literals/-/babel-plugin-transform-es2015-template-literals-6.22.0.tgz",
      "integrity": "sha1-qEs0UPfp+PH2g51taH2oS7EjbY0=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-typeof-symbol": {
      "version": "6.23.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-typeof-symbol/-/babel-plugin-transform-es2015-typeof-symbol-6.23.0.tgz",
      "integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-es2015-unicode-regex": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-unicode-regex/-/babel-plugin-transform-es2015-unicode-regex-6.24.1.tgz",
      "integrity": "sha1-04sS9C6nMj9yk4fxinxa4frrNek=",
      "dev": true,
      "requires": {
        "babel-helper-regex": "^6.24.1",
        "babel-runtime": "^6.22.0",
        "regexpu-core": "^2.0.0"
      }
    },
    "babel-plugin-transform-exponentiation-operator": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-exponentiation-operator/-/babel-plugin-transform-exponentiation-operator-6.24.1.tgz",
      "integrity": "sha1-KrDJx/MJj6SJB3cruBP+QejeOg4=",
      "dev": true,
      "requires": {
        "babel-helper-builder-binary-assignment-operator-visitor": "^6.24.1",
        "babel-plugin-syntax-exponentiation-operator": "^6.8.0",
        "babel-runtime": "^6.22.0"
      }
    },
    "babel-plugin-transform-regenerator": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-regenerator/-/babel-plugin-transform-regenerator-6.26.0.tgz",
      "integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
      "dev": true,
      "requires": {
        "regenerator-transform": "^0.10.0"
      }
    },
    "babel-plugin-transform-strict-mode": {
      "version": "6.24.1",
      "resolved": "https://registry.npmjs.org/babel-plugin-transform-strict-mode/-/babel-plugin-transform-strict-mode-6.24.1.tgz",
      "integrity": "sha1-1fr3qleKZbvlkc9e2uBKDGcCB1g=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.22.0",
        "babel-types": "^6.24.1"
      }
    },
    "babel-preset-env": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/babel-preset-env/-/babel-preset-env-1.7.0.tgz",
      "integrity": "sha512-9OR2afuKDneX2/q2EurSftUYM0xGu4O2D9adAhVfADDhrYDaxXV0rBbevVYoY9n6nyX1PmQW/0jtpJvUNr9CHg==",
      "dev": true,
      "requires": {
        "babel-plugin-check-es2015-constants": "^6.22.0",
        "babel-plugin-syntax-trailing-function-commas": "^6.22.0",
        "babel-plugin-transform-async-to-generator": "^6.22.0",
        "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
        "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0",
        "babel-plugin-transform-es2015-block-scoping": "^6.23.0",
        "babel-plugin-transform-es2015-classes": "^6.23.0",
        "babel-plugin-transform-es2015-computed-properties": "^6.22.0",
        "babel-plugin-transform-es2015-destructuring": "^6.23.0",
        "babel-plugin-transform-es2015-duplicate-keys": "^6.22.0",
        "babel-plugin-transform-es2015-for-of": "^6.23.0",
        "babel-plugin-transform-es2015-function-name": "^6.22.0",
        "babel-plugin-transform-es2015-literals": "^6.22.0",
        "babel-plugin-transform-es2015-modules-amd": "^6.22.0",
        "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0",
        "babel-plugin-transform-es2015-modules-systemjs": "^6.23.0",
        "babel-plugin-transform-es2015-modules-umd": "^6.23.0",
        "babel-plugin-transform-es2015-object-super": "^6.22.0",
        "babel-plugin-transform-es2015-parameters": "^6.23.0",
        "babel-plugin-transform-es2015-shorthand-properties": "^6.22.0",
        "babel-plugin-transform-es2015-spread": "^6.22.0",
        "babel-plugin-transform-es2015-sticky-regex": "^6.22.0",
        "babel-plugin-transform-es2015-template-literals": "^6.22.0",
        "babel-plugin-transform-es2015-typeof-symbol": "^6.23.0",
        "babel-plugin-transform-es2015-unicode-regex": "^6.22.0",
        "babel-plugin-transform-exponentiation-operator": "^6.22.0",
        "babel-plugin-transform-regenerator": "^6.22.0",
        "browserslist": "^3.2.6",
        "invariant": "^2.2.2",
        "semver": "^5.3.0"
      }
    },
    "babel-preset-jest": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-25.2.6.tgz",
      "integrity": "sha512-Xh2eEAwaLY9+SyMt/xmGZDnXTW/7pSaBPG0EMo7EuhvosFKVWYB6CqwYD31DaEQuoTL090oDZ0FEqygffGRaSQ==",
      "dev": true,
      "requires": {
        "@babel/plugin-syntax-bigint": "^7.0.0",
        "@babel/plugin-syntax-object-rest-spread": "^7.0.0",
        "babel-plugin-jest-hoist": "^25.2.6"
      }
    },
    "babel-runtime": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
      "dev": true,
      "requires": {
        "core-js": "^2.4.0",
        "regenerator-runtime": "^0.11.0"
      }
    },
    "babel-template": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.26.0.tgz",
      "integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "babel-traverse": "^6.26.0",
        "babel-types": "^6.26.0",
        "babylon": "^6.18.0",
        "lodash": "^4.17.4"
      }
    },
    "babel-traverse": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.26.0.tgz",
      "integrity": "sha1-RqnL1+3MYsjlwGTi0tjQ9ANXZu4=",
      "dev": true,
      "requires": {
        "babel-code-frame": "^6.26.0",
        "babel-messages": "^6.23.0",
        "babel-runtime": "^6.26.0",
        "babel-types": "^6.26.0",
        "babylon": "^6.18.0",
        "debug": "^2.6.8",
        "globals": "^9.18.0",
        "invariant": "^2.2.2",
        "lodash": "^4.17.4"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "babel-types": {
      "version": "6.26.0",
      "resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
      "integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.26.0",
        "esutils": "^2.0.2",
        "lodash": "^4.17.4",
        "to-fast-properties": "^1.0.3"
      }
    },
    "babylon": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",
      "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ==",
      "dev": true
    },
    "balanced-match": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
      "dev": true
    },
    "base": {
      "version": "0.11.2",
      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
      "dev": true,
      "requires": {
        "cache-base": "^1.0.1",
        "class-utils": "^0.3.5",
        "component-emitter": "^1.2.1",
        "define-property": "^1.0.0",
        "isobject": "^3.0.1",
        "mixin-deep": "^1.2.0",
        "pascalcase": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "base-x": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.8.tgz",
      "integrity": "sha512-Rl/1AWP4J/zRrk54hhlxH4drNxPJXYUaKffODVI53/dAsV4t9fBxyxYKAVPU1XBHxYwOWP9h9H0hM2MVw4YfJA==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-js": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
      "integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g==",
      "dev": true
    },
    "batch": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",
      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=",
      "dev": true
    },
    "batch-processor": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/batch-processor/-/batch-processor-1.0.0.tgz",
      "integrity": "sha1-dclcMrdI4IUNEMKxaPa9vpiRrOg="
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "bfj": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/bfj/-/bfj-6.1.2.tgz",
      "integrity": "sha512-BmBJa4Lip6BPRINSZ0BPEIfB1wUY/9rwbwvIHQA1KjX9om29B6id0wnWXq7m3bn5JrUVjeOTnVuhPT1FiHwPGw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.5",
        "check-types": "^8.0.3",
        "hoopy": "^0.1.4",
        "tryer": "^1.0.1"
      }
    },
    "big.js": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",
      "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==",
      "dev": true
    },
    "binary-extensions": {
      "version": "1.13.1",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
      "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
      "dev": true
    },
    "bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "dev": true,
      "requires": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "bip32": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/bip32/-/bip32-1.0.4.tgz",
      "integrity": "sha512-8T21eLWylZETolyqCPgia+MNp+kY37zFr7PTFDTPObHeNi9JlfG4qGIh8WzerIJidtwoK+NsWq2I5i66YfHoIw==",
      "dev": true,
      "requires": {
        "bs58check": "^2.1.1",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "tiny-secp256k1": "^1.0.0",
        "typeforce": "^1.11.5",
        "wif": "^2.0.6"
      }
    },
    "bip39": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
      "integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
      "dev": true,
      "requires": {
        "@types/node": "11.11.6",
        "create-hash": "^1.1.0",
        "pbkdf2": "^3.0.9",
        "randombytes": "^2.0.1"
      },
      "dependencies": {
        "@types/node": {
          "version": "11.11.6",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
          "integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ==",
          "dev": true
        }
      }
    },
    "bip44-constants": {
      "version": "8.0.52",
      "resolved": "https://registry.npmjs.org/bip44-constants/-/bip44-constants-8.0.52.tgz",
      "integrity": "sha512-jUCLOe6fAc2wRSKad8cSqHKHcqA3u/yKf3V0jyM9vcUKQda1j7ArlykKnMiD9OgJC/s0CXruDLWuEQV5j+4+JA==",
      "dev": true
    },
    "bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "bluebird-lst": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/bluebird-lst/-/bluebird-lst-1.0.9.tgz",
      "integrity": "sha512-7B1Rtx82hjnSD4PGLAjVWeYH3tHAcVUmChh85a3lltKQm6FresXh9ErQo6oAv6CqxttczC3/kEg8SY5NluPuUw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.5"
      }
    },
    "bn.js": {
      "version": "4.11.8",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA==",
      "dev": true
    },
    "body-parser": {
      "version": "1.19.0",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
      "integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
      "dev": true,
      "requires": {
        "bytes": "3.1.0",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "on-finished": "~2.3.0",
        "qs": "6.7.0",
        "raw-body": "2.4.0",
        "type-is": "~1.6.17"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
          "dev": true
        }
      }
    },
    "bonjour": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz",
      "integrity": "sha1-jokKGD2O6aI5OzhExpGkK897yfU=",
      "dev": true,
      "requires": {
        "array-flatten": "^2.1.0",
        "deep-equal": "^1.0.1",
        "dns-equal": "^1.0.0",
        "dns-txt": "^2.0.2",
        "multicast-dns": "^6.0.1",
        "multicast-dns-service-types": "^1.1.0"
      },
      "dependencies": {
        "array-flatten": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz",
          "integrity": "sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ==",
          "dev": true
        }
      }
    },
    "boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
      "dev": true
    },
    "boolean": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/boolean/-/boolean-3.0.1.tgz",
      "integrity": "sha512-HRZPIjPcbwAVQvOTxR4YE3o8Xs98NqbbL1iEZDCz7CL8ql0Lt5iOyJFxfnAB0oFs8Oh02F/lLlg30Mexv46LjA==",
      "dev": true,
      "optional": true
    },
    "boxen": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-4.2.0.tgz",
      "integrity": "sha512-eB4uT9RGzg2odpER62bBwSLvUeGC+WbRjjyyFhGsKnc8wp/m0+hQsMUvUe3H2V0D5vw0nBdO1hCJoZo5mKeuIQ==",
      "dev": true,
      "requires": {
        "ansi-align": "^3.0.0",
        "camelcase": "^5.3.1",
        "chalk": "^3.0.0",
        "cli-boxes": "^2.2.0",
        "string-width": "^4.1.0",
        "term-size": "^2.1.0",
        "type-fest": "^0.8.1",
        "widest-line": "^3.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "brorand": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
      "dev": true
    },
    "browser-process-hrtime": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-0.1.3.tgz",
      "integrity": "sha512-bRFnI4NnjO6cnyLmOV/7PVoDEMJChlcfN0z4s1YMBY989/SvlfMI1lgCnkFUs53e9gQF+w7qu7XdllSTiSl8Aw==",
      "dev": true
    },
    "browser-resolve": {
      "version": "1.11.3",
      "resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",
      "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",
      "dev": true,
      "requires": {
        "resolve": "1.1.7"
      },
      "dependencies": {
        "resolve": {
          "version": "1.1.7",
          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",
          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=",
          "dev": true
        }
      }
    },
    "browserify-aes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
      "dev": true,
      "requires": {
        "buffer-xor": "^1.0.3",
        "cipher-base": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.3",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "browserify-cipher": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",
      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",
      "dev": true,
      "requires": {
        "browserify-aes": "^1.0.4",
        "browserify-des": "^1.0.0",
        "evp_bytestokey": "^1.0.0"
      }
    },
    "browserify-des": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",
      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.1",
        "des.js": "^1.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "browserify-rsa": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",
      "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "randombytes": "^2.0.1"
      }
    },
    "browserify-sign": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",
      "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.1",
        "browserify-rsa": "^4.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.2",
        "elliptic": "^6.0.0",
        "inherits": "^2.0.1",
        "parse-asn1": "^5.0.0"
      }
    },
    "browserify-zlib": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",
      "integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",
      "dev": true,
      "requires": {
        "pako": "~1.0.5"
      }
    },
    "browserslist": {
      "version": "3.2.8",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-3.2.8.tgz",
      "integrity": "sha512-WHVocJYavUwVgVViC0ORikPHQquXwVh939TaelZ4WDqpWgTX/FsGhl/+P4qBUAGcRvtOgDgC+xftNWWp2RUTAQ==",
      "dev": true,
      "requires": {
        "caniuse-lite": "^1.0.30000844",
        "electron-to-chromium": "^1.3.47"
      }
    },
    "bs-logger": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/bs-logger/-/bs-logger-0.2.6.tgz",
      "integrity": "sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==",
      "dev": true,
      "requires": {
        "fast-json-stable-stringify": "2.x"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha1-vhYedsNU9veIrkBx9j806MTwpCo=",
      "dev": true,
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "bs58check": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/bs58check/-/bs58check-2.1.2.tgz",
      "integrity": "sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==",
      "dev": true,
      "requires": {
        "bs58": "^4.0.0",
        "create-hash": "^1.1.0",
        "safe-buffer": "^5.1.2"
      }
    },
    "bser": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/bser/-/bser-2.1.1.tgz",
      "integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
      "dev": true,
      "requires": {
        "node-int64": "^0.4.0"
      }
    },
    "buffer": {
      "version": "5.6.0",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.6.0.tgz",
      "integrity": "sha512-/gDYp/UtU0eA1ys8bOs9J6a+E/KWIY+DZ+Q2WESNUA0jFRsJOc0SNUO6xJ5SGA1xueg3NL65W6s+NY5l9cunuw==",
      "dev": true,
      "requires": {
        "base64-js": "^1.0.2",
        "ieee754": "^1.1.4"
      }
    },
    "buffer-alloc": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
      "integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
      "dev": true,
      "requires": {
        "buffer-alloc-unsafe": "^1.1.0",
        "buffer-fill": "^1.0.0"
      }
    },
    "buffer-alloc-unsafe": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
      "integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg==",
      "dev": true
    },
    "buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha1-DTM+PwDqxQqhRUq9MO+MKl2ackI=",
      "dev": true
    },
    "buffer-fill": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
      "integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw=",
      "dev": true
    },
    "buffer-from": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
      "dev": true
    },
    "buffer-indexof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz",
      "integrity": "sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g==",
      "dev": true
    },
    "buffer-json": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/buffer-json/-/buffer-json-2.0.0.tgz",
      "integrity": "sha512-+jjPFVqyfF1esi9fvfUs3NqM0pH1ziZ36VP4hmA/y/Ssfo/5w5xHKfTw9BwQjoJ1w/oVtpLomqwUHKdefGyuHw==",
      "dev": true
    },
    "buffer-reverse": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-reverse/-/buffer-reverse-1.0.1.tgz",
      "integrity": "sha1-SSg8jvpvkBvAH6MwTQYCeXGuL2A="
    },
    "buffer-xor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=",
      "dev": true
    },
    "bufferutil": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.1.tgz",
      "integrity": "sha512-xowrxvpxojqkagPcWRQVXZl0YXhRhAtBEIq3VoER1NH5Mw1n1o0ojdspp+GS2J//2gCVyrzQDApQ4unGF+QOoA==",
      "dev": true,
      "requires": {
        "node-gyp-build": "~3.7.0"
      }
    },
    "builder-util": {
      "version": "22.4.1",
      "resolved": "https://registry.npmjs.org/builder-util/-/builder-util-22.4.1.tgz",
      "integrity": "sha512-+ysLc7cC4w6P7rBxmZ5X2aU3QvcwFoWCl1us+mcUKdsGmJAtFUMPJqueeptdxjyPrPShIUOKHzA8uk5A3d1fHg==",
      "dev": true,
      "requires": {
        "7zip-bin": "~5.0.3",
        "@types/debug": "^4.1.5",
        "@types/fs-extra": "^8.1.0",
        "app-builder-bin": "3.5.5",
        "bluebird-lst": "^1.0.9",
        "builder-util-runtime": "8.6.2",
        "chalk": "^3.0.0",
        "debug": "^4.1.1",
        "fs-extra": "^8.1.0",
        "is-ci": "^2.0.0",
        "js-yaml": "^3.13.1",
        "source-map-support": "^0.5.16",
        "stat-mode": "^1.0.0",
        "temp-file": "^3.3.7"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "source-map-support": {
          "version": "0.5.16",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.16.tgz",
          "integrity": "sha512-efyLRJDr68D9hBBNIPWFjhpFzURh+KJykQwvMyW5UiZzYwoF6l4YMMDIJJEyFWxWCqfyxLzz6tSfUFR+kXXsVQ==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "source-map": "^0.6.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "builder-util-runtime": {
      "version": "8.6.2",
      "resolved": "https://registry.npmjs.org/builder-util-runtime/-/builder-util-runtime-8.6.2.tgz",
      "integrity": "sha512-9QnIBISfhgQ2BxtRLidVqf/v5HD73vSKZDllpUmGd2L6VORGQk7cZAPmPtw4HQM3gPBelyVJ5yIjMNZ8xjmd1A==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "sax": "^1.2.4"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "builtin-modules": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
      "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
      "dev": true
    },
    "builtin-status-codes": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",
      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=",
      "dev": true
    },
    "bytes": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==",
      "dev": true
    },
    "cacache": {
      "version": "12.0.3",
      "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.3.tgz",
      "integrity": "sha512-kqdmfXEGFepesTuROHMs3MpFLWrPkSSpRqOw80RCflZXy/khxaArvFrQ7uJxSUduzAufc6G0g1VUCOZXxWavPw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.5",
        "chownr": "^1.1.1",
        "figgy-pudding": "^3.5.1",
        "glob": "^7.1.4",
        "graceful-fs": "^4.1.15",
        "infer-owner": "^1.0.3",
        "lru-cache": "^5.1.1",
        "mississippi": "^3.0.0",
        "mkdirp": "^0.5.1",
        "move-concurrently": "^1.0.1",
        "promise-inflight": "^1.0.1",
        "rimraf": "^2.6.3",
        "ssri": "^6.0.1",
        "unique-filename": "^1.1.1",
        "y18n": "^4.0.0"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "cache-base": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
      "dev": true,
      "requires": {
        "collection-visit": "^1.0.0",
        "component-emitter": "^1.2.1",
        "get-value": "^2.0.6",
        "has-value": "^1.0.0",
        "isobject": "^3.0.1",
        "set-value": "^2.0.0",
        "to-object-path": "^0.3.0",
        "union-value": "^1.0.0",
        "unset-value": "^1.0.0"
      }
    },
    "cache-loader": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/cache-loader/-/cache-loader-4.1.0.tgz",
      "integrity": "sha512-ftOayxve0PwKzBF/GLsZNC9fJBXl8lkZE3TOsjkboHfVHVkL39iUEs1FO07A33mizmci5Dudt38UZrrYXDtbhw==",
      "dev": true,
      "requires": {
        "buffer-json": "^2.0.0",
        "find-cache-dir": "^3.0.0",
        "loader-utils": "^1.2.3",
        "mkdirp": "^0.5.1",
        "neo-async": "^2.6.1",
        "schema-utils": "^2.0.0"
      },
      "dependencies": {
        "find-cache-dir": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.0.tgz",
          "integrity": "sha512-PtXtQb7IrD8O+h6Cq1dbpJH5NzD8+9keN1zZ0YlpDzl1PwXEJEBj6u1Xa92t1Hwluoozd9TNKul5Hi2iqpsWwg==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^3.0.2",
            "pkg-dir": "^4.1.0"
          }
        },
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "pkg-dir": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
          "dev": true,
          "requires": {
            "find-up": "^4.0.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "dev": true,
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "dependencies": {
        "get-stream": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
          "integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
          "dev": true
        },
        "normalize-url": {
          "version": "4.5.0",
          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.0.tgz",
          "integrity": "sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==",
          "dev": true
        }
      }
    },
    "call-me-maybe": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",
      "integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms=",
      "dev": true
    },
    "caller-callsite": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",
      "integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",
      "dev": true,
      "requires": {
        "callsites": "^2.0.0"
      },
      "dependencies": {
        "callsites": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",
          "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA=",
          "dev": true
        }
      }
    },
    "caller-path": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",
      "integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",
      "dev": true,
      "requires": {
        "caller-callsite": "^2.0.0"
      }
    },
    "callforth": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/callforth/-/callforth-0.3.1.tgz",
      "integrity": "sha512-Q2zPfqnwoKsb1DTVCr4lmhe49wKNBsMmNlbudjleu3/co+Nw1pOqFHYJHrW3VZ253ou9AAr+xauQR0C55NPdzA=="
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true
    },
    "camel-case": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-3.0.0.tgz",
      "integrity": "sha1-yjw2iKTpzzpM2nd9xNy8cTJJz3M=",
      "dev": true,
      "requires": {
        "no-case": "^2.2.0",
        "upper-case": "^1.1.1"
      }
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true
    },
    "caniuse-api": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",
      "integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-lite": "^1.0.0",
        "lodash.memoize": "^4.1.2",
        "lodash.uniq": "^4.5.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        }
      }
    },
    "caniuse-lite": {
      "version": "1.0.30001031",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001031.tgz",
      "integrity": "sha512-DpAP5a1NGRLgYfaNCaXIRyGARi+3tJA2quZXNNA1Du26VyVkqvy2tznNu5ANyN1Y5aX44QDotZSVSUSi2uMGjg==",
      "dev": true
    },
    "canvas": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/canvas/-/canvas-2.6.1.tgz",
      "integrity": "sha512-S98rKsPcuhfTcYbtF53UIJhcbgIAK533d1kJKMwsMwAIFgfd58MOyxRud3kktlzWiEkFliaJtvyZCBtud/XVEA==",
      "dev": true,
      "requires": {
        "nan": "^2.14.0",
        "node-pre-gyp": "^0.11.0",
        "simple-get": "^3.0.3"
      },
      "dependencies": {
        "node-pre-gyp": {
          "version": "0.11.0",
          "resolved": "https://registry.npmjs.org/node-pre-gyp/-/node-pre-gyp-0.11.0.tgz",
          "integrity": "sha512-TwWAOZb0j7e9eGaf9esRx3ZcLaE5tQ2lvYy1pb5IAaG1a2e2Kv5Lms1Y4hpj+ciXJRofIxxlt5haeQ/2ANeE0Q==",
          "dev": true,
          "requires": {
            "detect-libc": "^1.0.2",
            "mkdirp": "^0.5.1",
            "needle": "^2.2.1",
            "nopt": "^4.0.1",
            "npm-packlist": "^1.1.6",
            "npmlog": "^4.0.2",
            "rc": "^1.2.7",
            "rimraf": "^2.6.1",
            "semver": "^5.3.0",
            "tar": "^4"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "capture-exit": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/capture-exit/-/capture-exit-2.0.0.tgz",
      "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",
      "dev": true,
      "requires": {
        "rsvp": "^4.8.4"
      }
    },
    "case-sensitive-paths-webpack-plugin": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.3.0.tgz",
      "integrity": "sha512-/4YgnZS8y1UXXmC02xD5rRrBEu6T5ub+mQHLNRj0fzTRbgdBYhsNo2V5EqwgqrExjxsjtF/OpAKAMkKsxbD5XQ==",
      "dev": true
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
    },
    "catbuffer-typescript": {
      "version": "0.0.22",
      "resolved": "https://registry.npmjs.org/catbuffer-typescript/-/catbuffer-typescript-0.0.22.tgz",
      "integrity": "sha512-Wip3kJFnXrsMRF+4yJSE/F+aEqrTYLPPXdNuVftHNl9oFaKwQ9si8oI2ruSu53QIR+/ohOlY4QYtOagRpHnrFg==",
      "dev": true
    },
    "chalk": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
      "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
      "dev": true,
      "requires": {
        "ansi-styles": "^2.2.1",
        "escape-string-regexp": "^1.0.2",
        "has-ansi": "^2.0.0",
        "strip-ansi": "^3.0.0",
        "supports-color": "^2.0.0"
      }
    },
    "chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
      "dev": true
    },
    "check-types": {
      "version": "8.0.3",
      "resolved": "https://registry.npmjs.org/check-types/-/check-types-8.0.3.tgz",
      "integrity": "sha512-YpeKZngUmG65rLudJ4taU7VLkOCTMhNl/u4ctNC56LQS/zJTyNH0Lrtwm1tfTsbLlwvlfsA2d1c8vCf/Kh2KwQ==",
      "dev": true
    },
    "chokidar": {
      "version": "2.1.8",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
      "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
      "dev": true,
      "requires": {
        "anymatch": "^2.0.0",
        "async-each": "^1.0.1",
        "braces": "^2.3.2",
        "fsevents": "^1.2.7",
        "glob-parent": "^3.1.0",
        "inherits": "^2.0.3",
        "is-binary-path": "^1.0.0",
        "is-glob": "^4.0.0",
        "normalize-path": "^3.0.0",
        "path-is-absolute": "^1.0.0",
        "readdirp": "^2.2.1",
        "upath": "^1.1.1"
      },
      "dependencies": {
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          }
        },
        "glob-parent": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
          "dev": true,
          "requires": {
            "is-glob": "^3.1.0",
            "path-dirname": "^1.0.0"
          },
          "dependencies": {
            "is-glob": {
              "version": "3.1.0",
              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
              "dev": true,
              "requires": {
                "is-extglob": "^2.1.0"
              }
            }
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "dev": true
    },
    "chrome-trace-event": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.2.tgz",
      "integrity": "sha512-9e/zx1jw7B4CO+c/RXoCsfg/x1AfUBioy4owYH0bJprEYAx5hRFLRhWBqHAG57D0ZM4H7vxbP7bPe0VwhQRYDQ==",
      "dev": true,
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "chromium-pickle-js": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/chromium-pickle-js/-/chromium-pickle-js-0.2.0.tgz",
      "integrity": "sha1-BKEGZywYsIWrd02YPfo+oTjyIgU=",
      "dev": true
    },
    "ci-info": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-1.6.0.tgz",
      "integrity": "sha512-vsGdkwSCDpWmP80ncATX7iea5DWQemg1UgCW5J8tqjU3lYw4FBYuj89J0CTVomA7BEfvSZd84GmHko+MxFQU2A==",
      "dev": true
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "class-utils": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "define-property": "^0.2.5",
        "isobject": "^3.0.0",
        "static-extend": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "clean-css": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.3.tgz",
      "integrity": "sha512-VcMWDN54ZN/DS+g58HYL5/n4Zrqe8vHJpGA8KdgUXFU4fuP/aHNw8eld9SyEIyabIMJX/0RaY/fplOo5hYLSFA==",
      "dev": true,
      "requires": {
        "source-map": "~0.6.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "clean-stack": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
      "dev": true
    },
    "cli-boxes": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.0.tgz",
      "integrity": "sha512-gpaBrMAizVEANOpfZp/EEUixTXDyGt7DFzdK5hU+UbWt/J0lB0w20ncZj59Z9a93xHb9u12zF5BS6i9RKbtg4w==",
      "dev": true
    },
    "cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "dev": true,
      "requires": {
        "restore-cursor": "^3.1.0"
      }
    },
    "cli-highlight": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/cli-highlight/-/cli-highlight-2.1.4.tgz",
      "integrity": "sha512-s7Zofobm20qriqDoU9sXptQx0t2R9PEgac92mENNm7xaEe1hn71IIMsXMK+6encA6WRCWWxIGQbipr3q998tlQ==",
      "dev": true,
      "requires": {
        "chalk": "^3.0.0",
        "highlight.js": "^9.6.0",
        "mz": "^2.4.0",
        "parse5": "^5.1.1",
        "parse5-htmlparser2-tree-adapter": "^5.1.1",
        "yargs": "^15.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "parse5": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.1.tgz",
          "integrity": "sha512-ugq4DFI0Ptb+WWjAdOK16+u/nHfiIrcE+sh8kZMaM0WllQKLI9rOUq6c2b7cwPkXdzfQESqvoqK6ug7U/Yyzug==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "yargs": {
          "version": "15.3.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.3.1.tgz",
          "integrity": "sha512-92O1HWEjw27sBfgmXiixJWT5hRBp2eobqXicLtPBIDBhYB+1HpwZlXmbW2luivBJHBzki+7VyCLRtAkScbTBQA==",
          "dev": true,
          "requires": {
            "cliui": "^6.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^4.1.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^4.2.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^18.1.1"
          }
        },
        "yargs-parser": {
          "version": "18.1.3",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
          "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "cli-spinners": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.2.0.tgz",
      "integrity": "sha512-tgU3fKwzYjiLEQgPMD9Jt+JjHVL9kW93FiIMX/l7rivvOD4/LL0Mf7gda3+4U2KJBloybwgj5KEoQgGRioMiKQ==",
      "dev": true
    },
    "cli-width": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
      "dev": true
    },
    "clipboardy": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clipboardy/-/clipboardy-2.2.0.tgz",
      "integrity": "sha512-9ry9nC3VFULNmoEIqvuRwCIQ9M7wjnm4O+yvk7xkmhR+7FAUWaeX751oeYJbORg0h0zmqW1EVDoZK8f7yapwbg==",
      "dev": true,
      "requires": {
        "arch": "^2.1.1",
        "execa": "^1.0.0",
        "is-wsl": "^2.1.1"
      }
    },
    "cliui": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-5.0.0.tgz",
      "integrity": "sha512-PYeGSEmmHM6zvoef2w8TPzlrnNpXIjTipYK780YswmIP9vjxmd6Y2a3CB2Ks6/AU8NHjZugXvo8w3oWM2qnwXA==",
      "dev": true,
      "requires": {
        "string-width": "^3.1.0",
        "strip-ansi": "^5.2.0",
        "wrap-ansi": "^5.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "clone": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
      "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
      "dev": true
    },
    "clone-response": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
      "integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
      "dev": true,
      "requires": {
        "mimic-response": "^1.0.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        }
      }
    },
    "co": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
      "dev": true
    },
    "coa": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",
      "integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",
      "dev": true,
      "requires": {
        "@types/q": "^1.5.1",
        "chalk": "^2.4.1",
        "q": "^1.1.2"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
      "dev": true
    },
    "collect-v8-coverage": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.1.tgz",
      "integrity": "sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWejX64o+yPGxhWSTzfg==",
      "dev": true
    },
    "collection-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
      "dev": true,
      "requires": {
        "map-visit": "^1.0.0",
        "object-visit": "^1.0.0"
      }
    },
    "color": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/color/-/color-3.1.2.tgz",
      "integrity": "sha512-vXTJhHebByxZn3lDvDJYw4lR5+uB3vuoHsuYA5AKuxRVn5wzzIfQKGLBmgdVRHKTJYeK5rvJcHnrd0Li49CFpg==",
      "dev": true,
      "requires": {
        "color-convert": "^1.9.1",
        "color-string": "^1.5.2"
      }
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
      "dev": true
    },
    "color-string": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
      "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
      "dev": true,
      "requires": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=",
      "dev": true
    },
    "compare-version": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/compare-version/-/compare-version-0.1.2.tgz",
      "integrity": "sha1-AWLsLZNR9d3VmpICy6k1NmpyUIA=",
      "dev": true
    },
    "component-emitter": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==",
      "dev": true
    },
    "compressible": {
      "version": "2.0.18",
      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz",
      "integrity": "sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==",
      "dev": true,
      "requires": {
        "mime-db": ">= 1.43.0 < 2"
      }
    },
    "compression": {
      "version": "1.7.4",
      "resolved": "https://registry.npmjs.org/compression/-/compression-1.7.4.tgz",
      "integrity": "sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==",
      "dev": true,
      "requires": {
        "accepts": "~1.3.5",
        "bytes": "3.0.0",
        "compressible": "~2.0.16",
        "debug": "2.6.9",
        "on-headers": "~1.0.2",
        "safe-buffer": "5.1.2",
        "vary": "~1.1.2"
      },
      "dependencies": {
        "bytes": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
          "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=",
          "dev": true
        },
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        }
      }
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
      "dev": true
    },
    "concat-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^2.2.2",
        "typedarray": "^0.0.6"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "condense-newlines": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/condense-newlines/-/condense-newlines-0.2.1.tgz",
      "integrity": "sha1-PemFVTE5R10yUCyDsC9gaE0kxV8=",
      "dev": true,
      "requires": {
        "extend-shallow": "^2.0.1",
        "is-whitespace": "^0.3.0",
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "config-chain": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/config-chain/-/config-chain-1.1.12.tgz",
      "integrity": "sha512-a1eOIcu8+7lUInge4Rpf/n4Krkf3Dd9lqhljRzII1/Zno/kRtUWnznPO3jOKBmTEktkt3fkxisUcivoj0ebzoA==",
      "dev": true,
      "requires": {
        "ini": "^1.3.4",
        "proto-list": "~1.2.1"
      }
    },
    "configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "dev": true,
      "requires": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      },
      "dependencies": {
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        }
      }
    },
    "connect-history-api-fallback": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==",
      "dev": true
    },
    "console-browserify": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz",
      "integrity": "sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==",
      "dev": true
    },
    "console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=",
      "dev": true
    },
    "consolidate": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/consolidate/-/consolidate-0.15.1.tgz",
      "integrity": "sha512-DW46nrsMJgy9kqAbPt5rKaCr7uFtpo4mSUvLHIUbJEjm0vo+aY5QLwBUq3FK4tRnJr/X0Psc0C4jf/h+HtXSMw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.1.1"
      }
    },
    "constants-browserify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
      "dev": true
    },
    "content-disposition": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
      "dev": true,
      "requires": {
        "safe-buffer": "5.1.2"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        }
      }
    },
    "content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==",
      "dev": true
    },
    "convert-source-map": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.7.0.tgz",
      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2biUaEH5065UnMeR33oA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.1.1"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        }
      }
    },
    "cookie": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
      "integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg==",
      "dev": true
    },
    "cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw=",
      "dev": true
    },
    "copy-concurrently": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/copy-concurrently/-/copy-concurrently-1.0.5.tgz",
      "integrity": "sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1",
        "fs-write-stream-atomic": "^1.0.8",
        "iferr": "^0.1.5",
        "mkdirp": "^0.5.1",
        "rimraf": "^2.5.4",
        "run-queue": "^1.0.0"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "copy-descriptor": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",
      "dev": true
    },
    "copy-webpack-plugin": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/copy-webpack-plugin/-/copy-webpack-plugin-5.1.1.tgz",
      "integrity": "sha512-P15M5ZC8dyCjQHWwd4Ia/dm0SgVvZJMYeykVIVYXbGyqO4dWB5oyPHp9i7wjwo5LhtlhKbiBCdS2NvM07Wlybg==",
      "dev": true,
      "requires": {
        "cacache": "^12.0.3",
        "find-cache-dir": "^2.1.0",
        "glob-parent": "^3.1.0",
        "globby": "^7.1.1",
        "is-glob": "^4.0.1",
        "loader-utils": "^1.2.3",
        "minimatch": "^3.0.4",
        "normalize-path": "^3.0.0",
        "p-limit": "^2.2.1",
        "schema-utils": "^1.0.0",
        "serialize-javascript": "^2.1.2",
        "webpack-log": "^2.0.0"
      },
      "dependencies": {
        "glob-parent": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
          "dev": true,
          "requires": {
            "is-glob": "^3.1.0",
            "path-dirname": "^1.0.0"
          },
          "dependencies": {
            "is-glob": {
              "version": "3.1.0",
              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
              "dev": true,
              "requires": {
                "is-extglob": "^2.1.0"
              }
            }
          }
        },
        "globby": {
          "version": "7.1.1",
          "resolved": "https://registry.npmjs.org/globby/-/globby-7.1.1.tgz",
          "integrity": "sha1-+yzP+UAfhgCUXfral0QMypcrhoA=",
          "dev": true,
          "requires": {
            "array-union": "^1.0.1",
            "dir-glob": "^2.0.0",
            "glob": "^7.1.2",
            "ignore": "^3.3.5",
            "pify": "^3.0.0",
            "slash": "^1.0.0"
          }
        },
        "ignore": {
          "version": "3.3.10",
          "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
          "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug==",
          "dev": true
        },
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        },
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        }
      }
    },
    "core-js": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.11.tgz",
      "integrity": "sha512-5wjnpaT/3dV+XB4borEsnAYQchn00XSgTAWKDkEqv+K8KevjbzmofK6hfJ9TZIlpj2N0xQpazy7PiRQiWHqzWg==",
      "dev": true
    },
    "core-js-compat": {
      "version": "3.6.4",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.6.4.tgz",
      "integrity": "sha512-zAa3IZPvsJ0slViBQ2z+vgyyTuhd3MFn1rBQjZSKVEgB0UMYhUkCj9jJUVPgGTGqWvsBVmfnruXgTcNyTlEiSA==",
      "dev": true,
      "requires": {
        "browserslist": "^4.8.3",
        "semver": "7.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
          "dev": true
        }
      }
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
    },
    "cosmiconfig": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.1.tgz",
      "integrity": "sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==",
      "dev": true,
      "requires": {
        "import-fresh": "^2.0.0",
        "is-directory": "^0.3.1",
        "js-yaml": "^3.13.1",
        "parse-json": "^4.0.0"
      },
      "dependencies": {
        "import-fresh": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",
          "integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",
          "dev": true,
          "requires": {
            "caller-path": "^2.0.0",
            "resolve-from": "^3.0.0"
          }
        },
        "parse-json": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
          "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
          "dev": true,
          "requires": {
            "error-ex": "^1.3.1",
            "json-parse-better-errors": "^1.0.1"
          }
        },
        "resolve-from": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
          "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=",
          "dev": true
        }
      }
    },
    "create-ecdh": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",
      "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "elliptic": "^6.0.0"
      }
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "dev": true,
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "cross-env": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-5.2.1.tgz",
      "integrity": "sha512-1yHhtcfAd1r4nwQgknowuUNfIT9E8dOMMspC36g45dN+iD1blloi7xp8X/xAIDnjHWyt1uQ8PHk2fkNaym7soQ==",
      "dev": true,
      "requires": {
        "cross-spawn": "^6.0.5"
      }
    },
    "cross-spawn": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
      "dev": true,
      "requires": {
        "nice-try": "^1.0.4",
        "path-key": "^2.0.1",
        "semver": "^5.5.0",
        "shebang-command": "^1.2.0",
        "which": "^1.2.9"
      }
    },
    "cross-zip": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cross-zip/-/cross-zip-3.0.0.tgz",
      "integrity": "sha512-cm+l8PJ6WiSQmKZ/x8DGvUm2u/3FX2JFs1AFd18gdHaVhP5Lf4oE6Jrj2Jd05JYSioz5x+nIRVp0zBQuzuCRcQ==",
      "dev": true,
      "requires": {
        "rimraf": "^3.0.0"
      },
      "dependencies": {
        "rimraf": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
          "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "crypto-browserify": {
      "version": "3.12.0",
      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
      "dev": true,
      "requires": {
        "browserify-cipher": "^1.0.0",
        "browserify-sign": "^4.0.0",
        "create-ecdh": "^4.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.0",
        "diffie-hellman": "^5.0.0",
        "inherits": "^2.0.1",
        "pbkdf2": "^3.0.3",
        "public-encrypt": "^4.0.0",
        "randombytes": "^2.0.0",
        "randomfill": "^1.0.3"
      }
    },
    "crypto-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.0.0.tgz",
      "integrity": "sha512-bzHZN8Pn+gS7DQA6n+iUmBfl0hO5DJq++QP3U6uTucDtk/0iGpXd/Gg7CGR0p8tJhofJyaKoWBuJI4eAO00BBg=="
    },
    "crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "dev": true
    },
    "css": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",
      "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "source-map": "^0.6.1",
        "source-map-resolve": "^0.5.2",
        "urix": "^0.1.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "css-color-names": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",
      "integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA=",
      "dev": true
    },
    "css-declaration-sorter": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",
      "integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.1",
        "timsort": "^0.3.0"
      }
    },
    "css-loader": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-3.4.2.tgz",
      "integrity": "sha512-jYq4zdZT0oS0Iykt+fqnzVLRIeiPWhka+7BqPn+oSIpWJAHak5tmB/WZrJ2a21JhCeFyNnnlroSl8c+MtVndzA==",
      "dev": true,
      "requires": {
        "camelcase": "^5.3.1",
        "cssesc": "^3.0.0",
        "icss-utils": "^4.1.1",
        "loader-utils": "^1.2.3",
        "normalize-path": "^3.0.0",
        "postcss": "^7.0.23",
        "postcss-modules-extract-imports": "^2.0.0",
        "postcss-modules-local-by-default": "^3.0.2",
        "postcss-modules-scope": "^2.1.1",
        "postcss-modules-values": "^3.0.0",
        "postcss-value-parser": "^4.0.2",
        "schema-utils": "^2.6.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        }
      }
    },
    "css-select": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-2.1.0.tgz",
      "integrity": "sha512-Dqk7LQKpwLoH3VovzZnkzegqNSuAziQyNZUcrdDM401iY+R5NkGBXGmtO05/yaXQziALuPogeG0b7UAgjnTJTQ==",
      "dev": true,
      "requires": {
        "boolbase": "^1.0.0",
        "css-what": "^3.2.1",
        "domutils": "^1.7.0",
        "nth-check": "^1.0.2"
      }
    },
    "css-select-base-adapter": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",
      "integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w==",
      "dev": true
    },
    "css-tree": {
      "version": "1.0.0-alpha.37",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.37.tgz",
      "integrity": "sha512-DMxWJg0rnz7UgxKT0Q1HU/L9BeJI0M6ksor0OgqOnF+aRCDWg/N2641HmVyU9KVIu0OVVWOb2IpC9A+BJRnejg==",
      "dev": true,
      "requires": {
        "mdn-data": "2.0.4",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "css-what": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-3.2.1.tgz",
      "integrity": "sha512-WwOrosiQTvyms+Ti5ZC5vGEK0Vod3FTt1ca+payZqvKuGJF+dq7bG63DstxtN0dpm6FxY27a/zS3Wten+gEtGw==",
      "dev": true
    },
    "cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true
    },
    "cssnano": {
      "version": "4.1.10",
      "resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.10.tgz",
      "integrity": "sha512-5wny+F6H4/8RgNlaqab4ktc3e0/blKutmq8yNlBFXA//nSFFAqAngjNVRzUvCgYROULmZZUoosL/KSoZo5aUaQ==",
      "dev": true,
      "requires": {
        "cosmiconfig": "^5.0.0",
        "cssnano-preset-default": "^4.0.7",
        "is-resolvable": "^1.0.0",
        "postcss": "^7.0.0"
      }
    },
    "cssnano-preset-default": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.7.tgz",
      "integrity": "sha512-x0YHHx2h6p0fCl1zY9L9roD7rnlltugGu7zXSKQx6k2rYw0Hi3IqxcoAGF7u9Q5w1nt7vK0ulxV8Lo+EvllGsA==",
      "dev": true,
      "requires": {
        "css-declaration-sorter": "^4.0.1",
        "cssnano-util-raw-cache": "^4.0.1",
        "postcss": "^7.0.0",
        "postcss-calc": "^7.0.1",
        "postcss-colormin": "^4.0.3",
        "postcss-convert-values": "^4.0.1",
        "postcss-discard-comments": "^4.0.2",
        "postcss-discard-duplicates": "^4.0.2",
        "postcss-discard-empty": "^4.0.1",
        "postcss-discard-overridden": "^4.0.1",
        "postcss-merge-longhand": "^4.0.11",
        "postcss-merge-rules": "^4.0.3",
        "postcss-minify-font-values": "^4.0.2",
        "postcss-minify-gradients": "^4.0.2",
        "postcss-minify-params": "^4.0.2",
        "postcss-minify-selectors": "^4.0.2",
        "postcss-normalize-charset": "^4.0.1",
        "postcss-normalize-display-values": "^4.0.2",
        "postcss-normalize-positions": "^4.0.2",
        "postcss-normalize-repeat-style": "^4.0.2",
        "postcss-normalize-string": "^4.0.2",
        "postcss-normalize-timing-functions": "^4.0.2",
        "postcss-normalize-unicode": "^4.0.1",
        "postcss-normalize-url": "^4.0.1",
        "postcss-normalize-whitespace": "^4.0.2",
        "postcss-ordered-values": "^4.1.2",
        "postcss-reduce-initial": "^4.0.3",
        "postcss-reduce-transforms": "^4.0.2",
        "postcss-svgo": "^4.0.2",
        "postcss-unique-selectors": "^4.0.1"
      }
    },
    "cssnano-util-get-arguments": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",
      "integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8=",
      "dev": true
    },
    "cssnano-util-get-match": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",
      "integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0=",
      "dev": true
    },
    "cssnano-util-raw-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",
      "integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "cssnano-util-same-parent": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",
      "integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q==",
      "dev": true
    },
    "csso": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.0.2.tgz",
      "integrity": "sha512-kS7/oeNVXkHWxby5tHVxlhjizRCSv8QdU7hB2FpdAibDU8FjTAolhNjKNTiLzXtUrKT6HwClE81yXwEk1309wg==",
      "dev": true,
      "requires": {
        "css-tree": "1.0.0-alpha.37"
      }
    },
    "cssom": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.4.4.tgz",
      "integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR/NS6otuzveI7+7BBq3SjBS2mw==",
      "dev": true
    },
    "cssstyle": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-2.2.0.tgz",
      "integrity": "sha512-sEb3XFPx3jNnCAMtqrXPDeSgQr+jojtCeNf8cvMNMh1cG970+lljssvQDzPq6lmmJu2Vhqood/gtEomBiHOGnA==",
      "dev": true,
      "requires": {
        "cssom": "~0.3.6"
      },
      "dependencies": {
        "cssom": {
          "version": "0.3.8",
          "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
          "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
          "dev": true
        }
      }
    },
    "cuint": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/cuint/-/cuint-0.2.2.tgz",
      "integrity": "sha1-QICG1AlVDCYxFVYZ6fp7ytw7mRs=",
      "dev": true
    },
    "current-script-polyfill": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/current-script-polyfill/-/current-script-polyfill-1.0.0.tgz",
      "integrity": "sha1-8xz35PPiGLBybnOMqSoC00iO9hU=",
      "dev": true
    },
    "cyclist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/cyclist/-/cyclist-1.0.1.tgz",
      "integrity": "sha1-WW6WmP0MgOEgOMK4LW6xs1tiJNk=",
      "dev": true
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "data-urls": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",
      "integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",
      "dev": true,
      "requires": {
        "abab": "^2.0.0",
        "whatwg-mimetype": "^2.2.0",
        "whatwg-url": "^7.0.0"
      },
      "dependencies": {
        "whatwg-url": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
          "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
          "dev": true,
          "requires": {
            "lodash.sortby": "^4.7.0",
            "tr46": "^1.0.1",
            "webidl-conversions": "^4.0.2"
          }
        }
      }
    },
    "de-indent": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/de-indent/-/de-indent-1.0.2.tgz",
      "integrity": "sha1-sgOOhG3DO6pXlhKNCAS0VbjB4h0=",
      "dev": true
    },
    "debug": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
      "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
      "requires": {
        "ms": "2.0.0"
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
      "dev": true
    },
    "decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",
      "dev": true
    },
    "decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "dev": true,
      "requires": {
        "mimic-response": "^2.0.0"
      }
    },
    "deep-equal": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
      "integrity": "sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==",
      "dev": true,
      "requires": {
        "is-arguments": "^1.0.4",
        "is-date-object": "^1.0.1",
        "is-regex": "^1.0.4",
        "object-is": "^1.0.1",
        "object-keys": "^1.1.1",
        "regexp.prototype.flags": "^1.2.0"
      },
      "dependencies": {
        "object-keys": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
          "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
          "dev": true
        }
      }
    },
    "deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "dev": true
    },
    "deep-is": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
      "dev": true
    },
    "deepmerge": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-2.2.1.tgz",
      "integrity": "sha512-R9hc1Xa/NOBi9WRVUWg19rl1UB7Tt4kuPd+thNJgFZoxXsTz7ncaPaeIm+40oSGuP33DfMb4sZt1QIGiJzC4EA=="
    },
    "default-gateway": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-5.0.5.tgz",
      "integrity": "sha512-z2RnruVmj8hVMmAnEJMTIJNijhKCDiGjbLP+BHJFOT7ld3Bo5qcIBpVYDniqhbMIIf+jZDlkP2MkPXiQy/DBLA==",
      "dev": true,
      "requires": {
        "execa": "^3.3.0"
      },
      "dependencies": {
        "cross-spawn": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.1.tgz",
          "integrity": "sha512-u7v4o84SwFpD32Z8IIcPZ6z1/ie24O6RU3RbtL5Y316l3KuHVPx9ItBgWQ6VlfAFnRnTtMUrsQ9MUUTuEZjogg==",
          "dev": true,
          "requires": {
            "path-key": "^3.1.0",
            "shebang-command": "^2.0.0",
            "which": "^2.0.1"
          }
        },
        "execa": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/execa/-/execa-3.4.0.tgz",
          "integrity": "sha512-r9vdGQk4bmCuK1yKQu1KTwcT2zwfWdbdaXfCtAh+5nU/4fSX+JAb7vZGvI5naJrQlvONrEB20jeruESI69530g==",
          "dev": true,
          "requires": {
            "cross-spawn": "^7.0.0",
            "get-stream": "^5.0.0",
            "human-signals": "^1.1.1",
            "is-stream": "^2.0.0",
            "merge-stream": "^2.0.0",
            "npm-run-path": "^4.0.0",
            "onetime": "^5.1.0",
            "p-finally": "^2.0.0",
            "signal-exit": "^3.0.2",
            "strip-final-newline": "^2.0.0"
          }
        },
        "get-stream": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
          "integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "is-stream": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
          "integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
          "dev": true
        },
        "npm-run-path": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
          "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
          "dev": true,
          "requires": {
            "path-key": "^3.0.0"
          }
        },
        "p-finally": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-2.0.1.tgz",
          "integrity": "sha512-vpm09aKwq6H9phqRQzecoDpD8TmVyGw70qmWlyq5onxY7tqyTTFVvxMykxQSQKILBSFlbXpypIw2T1Ml7+DDtw==",
          "dev": true
        },
        "path-key": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
          "dev": true
        },
        "shebang-command": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
          "dev": true,
          "requires": {
            "shebang-regex": "^3.0.0"
          }
        },
        "shebang-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
          "dev": true
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        }
      }
    },
    "defaults": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
      "dev": true,
      "requires": {
        "clone": "^1.0.2"
      }
    },
    "defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
      "dev": true
    },
    "define-properties": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
      "dev": true,
      "requires": {
        "object-keys": "^1.0.12"
      },
      "dependencies": {
        "object-keys": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
          "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
          "dev": true
        }
      }
    },
    "define-property": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
      "dev": true,
      "requires": {
        "is-descriptor": "^1.0.2",
        "isobject": "^3.0.1"
      },
      "dependencies": {
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "del": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-4.1.1.tgz",
      "integrity": "sha512-QwGuEUouP2kVwQenAsOof5Fv8K9t3D8Ca8NxcXKrIpEHjTXK5J2nXLdP+ALI1cgv8wj7KuwBhTwBkOZSJKM5XQ==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "globby": "^6.1.0",
        "is-path-cwd": "^2.0.0",
        "is-path-in-cwd": "^2.0.0",
        "p-map": "^2.0.0",
        "pify": "^4.0.1",
        "rimraf": "^2.6.3"
      },
      "dependencies": {
        "globby": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
          "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
          "dev": true,
          "requires": {
            "array-union": "^1.0.1",
            "glob": "^7.0.3",
            "object-assign": "^4.0.1",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          },
          "dependencies": {
            "pify": {
              "version": "2.3.0",
              "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
              "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
              "dev": true
            }
          }
        },
        "p-map": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/p-map/-/p-map-2.1.0.tgz",
          "integrity": "sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==",
          "dev": true
        },
        "pify": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
    },
    "delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=",
      "dev": true
    },
    "depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
      "dev": true
    },
    "des.js": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz",
      "integrity": "sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "destroy": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=",
      "dev": true
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha1-+hN8S9aY7fVc1c0CrFWfkaTEups=",
      "dev": true
    },
    "detect-newline": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz",
      "integrity": "sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
      "dev": true
    },
    "detect-node": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",
      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw==",
      "dev": true
    },
    "diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A=="
    },
    "diff-sequences": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-24.9.0.tgz",
      "integrity": "sha512-Dj6Wk3tWyTE+Fo1rW8v0Xhwk80um6yFYKbuAxc9c3EZxIHFDYwbi34Uk42u1CdnIiVorvt4RmlSDjIPyzGC2ew==",
      "dev": true
    },
    "diffie-hellman": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "miller-rabin": "^4.0.0",
        "randombytes": "^2.0.0"
      }
    },
    "dijkstrajs": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.1.tgz",
      "integrity": "sha1-082BIh4+pAdCz83lVtTpnpjdxxs=",
      "dev": true
    },
    "dir-glob": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz",
      "integrity": "sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==",
      "dev": true,
      "requires": {
        "path-type": "^3.0.0"
      },
      "dependencies": {
        "path-type": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
          "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
          "dev": true,
          "requires": {
            "pify": "^3.0.0"
          }
        },
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "dmg-builder": {
      "version": "22.4.1",
      "resolved": "https://registry.npmjs.org/dmg-builder/-/dmg-builder-22.4.1.tgz",
      "integrity": "sha512-hEemh7n0zoVt7zPPwvn7iOttP03oENjJ4ApttPmt8oDnX8T4q42MjGWyDlLkPMplMJfoTxkkNqmm296f0OYM8Q==",
      "dev": true,
      "requires": {
        "app-builder-lib": "~22.4.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "~22.4.1",
        "fs-extra": "^8.1.0",
        "iconv-lite": "^0.5.1",
        "js-yaml": "^3.13.1",
        "sanitize-filename": "^1.6.3"
      },
      "dependencies": {
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "iconv-lite": {
          "version": "0.5.1",
          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.5.1.tgz",
          "integrity": "sha512-ONHr16SQvKZNSqjQT9gy5z24Jw+uqfO02/ngBSBoqChZ+W8qXX7GPRa1RoUnzGADw8K63R1BXUMzarCVQBpY8Q==",
          "dev": true,
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3"
          }
        }
      }
    },
    "dns-equal": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz",
      "integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0=",
      "dev": true
    },
    "dns-packet": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.1.tgz",
      "integrity": "sha512-0UxfQkMhYAUaZI+xrNZOz/as5KgDU0M/fQ9b6SpkyLbk3GEswDi6PADJVaYJradtRVsRIlF1zLyOodbcTCDzUg==",
      "dev": true,
      "requires": {
        "ip": "^1.1.0",
        "safe-buffer": "^5.0.1"
      }
    },
    "dns-txt": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz",
      "integrity": "sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=",
      "dev": true,
      "requires": {
        "buffer-indexof": "^1.0.0"
      }
    },
    "doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dev": true,
      "requires": {
        "esutils": "^2.0.2"
      }
    },
    "dom-converter": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/dom-converter/-/dom-converter-0.2.0.tgz",
      "integrity": "sha512-gd3ypIPfOMr9h5jIKq8E3sHOTCjeirnl0WK5ZdS1AW0Odt0b1PaWaHdJ4Qk4klv+YB9aJBS7mESXjFoDQPu6DA==",
      "dev": true,
      "requires": {
        "utila": "~0.4"
      }
    },
    "dom-event-types": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/dom-event-types/-/dom-event-types-1.0.0.tgz",
      "integrity": "sha512-2G2Vwi2zXTHBGqXHsJ4+ak/iP0N8Ar+G8a7LiD2oup5o4sQWytwqqrZu/O6hIMV0KMID2PL69OhpshLO0n7UJQ==",
      "dev": true
    },
    "dom-serializer": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
      "integrity": "sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==",
      "dev": true,
      "requires": {
        "domelementtype": "^2.0.1",
        "entities": "^2.0.0"
      },
      "dependencies": {
        "domelementtype": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.0.1.tgz",
          "integrity": "sha512-5HOHUDsYZWV8FGWN0Njbr/Rn7f/eWSQi1v7+HsUVwXgn8nWWlL64zKDkS0n8ZmQ3mlWOMuXOnR+7Nx/5tMO5AQ==",
          "dev": true
        },
        "entities": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/entities/-/entities-2.0.0.tgz",
          "integrity": "sha512-D9f7V0JSRwIxlRI2mjMqufDrRDnx8p+eEOz7aUM9SuvF8gsBzra0/6tbjl1m8eQHrZlYj6PxqE00hZ1SAIKPLw==",
          "dev": true
        }
      }
    },
    "domain-browser": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",
      "integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==",
      "dev": true
    },
    "domelementtype": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==",
      "dev": true
    },
    "domexception": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",
      "integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",
      "dev": true,
      "requires": {
        "webidl-conversions": "^4.0.2"
      }
    },
    "domhandler": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
      "dev": true,
      "requires": {
        "domelementtype": "1"
      }
    },
    "domutils": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
      "dev": true,
      "requires": {
        "dom-serializer": "0",
        "domelementtype": "1"
      }
    },
    "dot-prop": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.2.0.tgz",
      "integrity": "sha512-uEUyaDKoSQ1M4Oq8l45hSE26SnTxL6snNnqvK/VWx5wJhmff5z0FUVJDKDanor/6w3kzE3i7XZOk+7wC0EXr1A==",
      "dev": true,
      "requires": {
        "is-obj": "^2.0.0"
      }
    },
    "dotenv": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-8.2.0.tgz",
      "integrity": "sha512-8sJ78ElpbDJBHNeBzUbUVLsqKdccaa/BXF1uPTw3GrvQTBgrQrtObr2mUrE38vzYd8cEv+m/JBfDLioYcfXoaw==",
      "dev": true
    },
    "dotenv-expand": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
      "integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==",
      "dev": true
    },
    "duplexer": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",
      "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=",
      "dev": true
    },
    "duplexer3": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
      "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=",
      "dev": true
    },
    "duplexify": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",
      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0",
        "stream-shift": "^1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "easy-stack": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/easy-stack/-/easy-stack-1.0.0.tgz",
      "integrity": "sha1-EskbMIWjfwuqM26UhurEv5Tj54g=",
      "dev": true
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "editorconfig": {
      "version": "0.15.3",
      "resolved": "https://registry.npmjs.org/editorconfig/-/editorconfig-0.15.3.tgz",
      "integrity": "sha512-M9wIMFx96vq0R4F+gRpY3o2exzb8hEj/n9S8unZtHSvYjibBp/iMufSzvmOcV/laG0ZtuTVGtiJggPOSW2r93g==",
      "dev": true,
      "requires": {
        "commander": "^2.19.0",
        "lru-cache": "^4.1.5",
        "semver": "^5.6.0",
        "sigmund": "^1.0.1"
      },
      "dependencies": {
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        }
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=",
      "dev": true
    },
    "ejs": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/ejs/-/ejs-2.7.4.tgz",
      "integrity": "sha512-7vmuyh5+kuUyJKePhQfRQBhXV5Ce+RnaeeQArKu1EAMpL3WbgMt5WG6uQZpEVvYSSsxMXRKOewtDk9RaTKXRlA==",
      "dev": true
    },
    "electron": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/electron/-/electron-8.2.0.tgz",
      "integrity": "sha512-mnV43gKCrCUMHLmGws/DU/l8LhaxrFD53A4ofwtthdCqOZWGIdk1+eMphiVumXR5a3lC64XVvmXQ2k28i7F/zw==",
      "dev": true,
      "requires": {
        "@electron/get": "^1.0.1",
        "@types/node": "^12.0.12",
        "extract-zip": "^1.0.3"
      },
      "dependencies": {
        "@types/node": {
          "version": "12.12.34",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-12.12.34.tgz",
          "integrity": "sha512-BneGN0J9ke24lBRn44hVHNeDlrXRYF+VRp0HbSUNnEZahXGAysHZIqnf/hER6aabdBgzM4YOV4jrR8gj4Zfi0g==",
          "dev": true
        }
      }
    },
    "electron-builder": {
      "version": "22.4.1",
      "resolved": "https://registry.npmjs.org/electron-builder/-/electron-builder-22.4.1.tgz",
      "integrity": "sha512-13CjZcGeJS+c3EKRwFT/Oty5Niif5g1FwDioBLEbjkPCPQgxdtDsr+rJtCu9qxkiKDYpAoPS+t/clNk0efONvQ==",
      "dev": true,
      "requires": {
        "@types/yargs": "^15.0.4",
        "app-builder-lib": "22.4.1",
        "bluebird-lst": "^1.0.9",
        "builder-util": "22.4.1",
        "builder-util-runtime": "8.6.2",
        "chalk": "^3.0.0",
        "dmg-builder": "22.4.1",
        "fs-extra": "^8.1.0",
        "is-ci": "^2.0.0",
        "lazy-val": "^1.0.4",
        "read-config-file": "5.0.2",
        "sanitize-filename": "^1.6.3",
        "update-notifier": "^4.1.0",
        "yargs": "^15.1.0"
      },
      "dependencies": {
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "yargs": {
          "version": "15.3.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.3.1.tgz",
          "integrity": "sha512-92O1HWEjw27sBfgmXiixJWT5hRBp2eobqXicLtPBIDBhYB+1HpwZlXmbW2luivBJHBzki+7VyCLRtAkScbTBQA==",
          "dev": true,
          "requires": {
            "cliui": "^6.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^4.1.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^4.2.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^18.1.1"
          }
        },
        "yargs-parser": {
          "version": "18.1.2",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.2.tgz",
          "integrity": "sha512-hlIPNR3IzC1YuL1c2UwwDKpXlNFBqD1Fswwh1khz5+d8Cq/8yc/Mn0i+rQXduu8hcrFKvO7Eryk+09NecTQAAQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "electron-notarize": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/electron-notarize/-/electron-notarize-0.3.0.tgz",
      "integrity": "sha512-tuDw8H0gcDOalNLv6RM2CwGvUXU60MPGZRDEmd0ppX+yP5XqL8Ec2DuXyz9J7WQSA3aRCfzIgH8C5CAivDYWMw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "fs-extra": "^8.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "electron-osx-sign": {
      "version": "0.4.15",
      "resolved": "https://registry.npmjs.org/electron-osx-sign/-/electron-osx-sign-0.4.15.tgz",
      "integrity": "sha512-1QtPNpjIji9bGZ0VRFwtJUyU1uHi7q3XUAOG0qFsvAUfs5H0T8hbgUfyg3xvPzmF1ruV8T8pQmQ86vNfLrcRiA==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.0",
        "compare-version": "^0.1.2",
        "debug": "^2.6.8",
        "isbinaryfile": "^3.0.2",
        "minimist": "^1.2.0",
        "plist": "^3.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "isbinaryfile": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.3.tgz",
          "integrity": "sha512-8cJBL5tTd2OS0dM4jz07wQd5g0dCCqIhUxPIGtZfa5L6hWlvV5MHTITy/DBAsF+Oe2LS1X3krBUhNwaGUWpWxw==",
          "dev": true,
          "requires": {
            "buffer-alloc": "^1.2.0"
          }
        }
      }
    },
    "electron-packager": {
      "version": "14.2.1",
      "resolved": "https://registry.npmjs.org/electron-packager/-/electron-packager-14.2.1.tgz",
      "integrity": "sha512-g6y3BVrAOz/iavKD+VMFbehrQcwCWuA3CZvVbmmbQuCfegGA1ytwWn0BNIDDrEdbuz31Fti7mnNHhb5L+3Wq9A==",
      "dev": true,
      "requires": {
        "@electron/get": "^1.6.0",
        "asar": "^2.0.1",
        "cross-zip": "^3.0.0",
        "debug": "^4.0.1",
        "electron-notarize": "^0.2.0",
        "electron-osx-sign": "^0.4.11",
        "fs-extra": "^8.1.0",
        "galactus": "^0.2.1",
        "get-package-info": "^1.0.0",
        "junk": "^3.1.0",
        "parse-author": "^2.0.0",
        "plist": "^3.0.0",
        "rcedit": "^2.0.0",
        "resolve": "^1.1.6",
        "sanitize-filename": "^1.6.0",
        "semver": "^6.0.0",
        "yargs-parser": "^16.0.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "electron-notarize": {
          "version": "0.2.1",
          "resolved": "https://registry.npmjs.org/electron-notarize/-/electron-notarize-0.2.1.tgz",
          "integrity": "sha512-oZ6/NhKeXmEKNROiFmRNfytqu3cxqC95sjooG7kBXQVEUSQkZnbiAhxVh5jXngL881G197pbwpeVPJyM7Ikmxw==",
          "dev": true,
          "requires": {
            "debug": "^4.1.1",
            "fs-extra": "^8.1.0"
          }
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "yargs-parser": {
          "version": "16.1.0",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-16.1.0.tgz",
          "integrity": "sha512-H/V41UNZQPkUMIT5h5hiwg4QKIY1RPvoBV4XcjUbRM8Bk2oKqqyZ0DIEbTFZB0XjbtSPG8SAa/0DxCQmiRgzKg==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "electron-publish": {
      "version": "22.4.1",
      "resolved": "https://registry.npmjs.org/electron-publish/-/electron-publish-22.4.1.tgz",
      "integrity": "sha512-nwKNum3KXm+01rtWX2pc1jhazdzDy2zYnQx+zmXphZchjd6UOMX3ZN0xyZUCKugw5ZliflT6LkgbrcBXBtYD3A==",
      "dev": true,
      "requires": {
        "@types/fs-extra": "^8.1.0",
        "bluebird-lst": "^1.0.9",
        "builder-util": "~22.4.1",
        "builder-util-runtime": "8.6.2",
        "chalk": "^3.0.0",
        "fs-extra": "^8.1.0",
        "lazy-val": "^1.0.4",
        "mime": "^2.4.4"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "electron-to-chromium": {
      "version": "1.3.367",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.367.tgz",
      "integrity": "sha512-GCHQreWs4zhKA48FNXCjvpV4kTnKoLu2PSAfKX394g34NPvTs2pPh1+jzWitNwhmOYI8zIqt36ulRVRZUgqlfA==",
      "dev": true
    },
    "electron-updater": {
      "version": "4.2.5",
      "resolved": "https://registry.npmjs.org/electron-updater/-/electron-updater-4.2.5.tgz",
      "integrity": "sha512-ir8SI3capF5pN4LTQY79bP7oqiBKjgtdDW378xVId5VcGUZ+Toei2j+fgx1mq3y4Qg19z4HqLxEZ9FqMD0T0RA==",
      "dev": true,
      "requires": {
        "@types/semver": "^7.1.0",
        "builder-util-runtime": "8.6.2",
        "fs-extra": "^8.1.0",
        "js-yaml": "^3.13.1",
        "lazy-val": "^1.0.4",
        "lodash.isequal": "^4.5.0",
        "pako": "^1.0.11",
        "semver": "^7.1.3"
      },
      "dependencies": {
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "semver": {
          "version": "7.1.3",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.1.3.tgz",
          "integrity": "sha512-ekM0zfiA9SCBlsKa2X1hxyxiI4L3B6EbVJkkdgQXnSEEaHlGdvyodMruTiulSRWMMB4NeIuYNMC9rTKTz97GxA==",
          "dev": true
        }
      }
    },
    "element-resize-detector": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/element-resize-detector/-/element-resize-detector-1.2.1.tgz",
      "integrity": "sha512-BdFsPepnQr9fznNPF9nF4vQ457U/ZJXQDSNF1zBe7yaga8v9AdZf3/NElYxFdUh7SitSGt040QygiTo6dtatIw==",
      "requires": {
        "batch-processor": "1.0.0"
      }
    },
    "elliptic": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.2.tgz",
      "integrity": "sha512-f4x70okzZbIQl/NSRLkI/+tteV/9WqL98zx+SQ69KbXxmVrmjwsNUPn/gYJJ0sHvEak24cZgHIPegRePAtA/xw==",
      "dev": true,
      "requires": {
        "bn.js": "^4.4.0",
        "brorand": "^1.0.1",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.0"
      }
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "emojis-list": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-3.0.0.tgz",
      "integrity": "sha512-/kyM18EfinwXZbno9FyUGeFh87KC8HRQBQGildHZbEuRyWFOmv1U10o9BBp8XVZDVNNuQKyIGIu5ZYAAXJ0V2Q==",
      "dev": true
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
      "dev": true
    },
    "encoding": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",
      "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",
      "dev": true,
      "requires": {
        "iconv-lite": "~0.4.13"
      }
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "requires": {
        "once": "^1.4.0"
      }
    },
    "enhanced-resolve": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.1.tgz",
      "integrity": "sha512-98p2zE+rL7/g/DzMHMTF4zZlCgeVdJ7yr6xzEpJRYwFYrGi9ANdn5DnJURg6RpBkyk60XYDnWIv51VfIhfNGuA==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.5.0",
        "tapable": "^1.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "memory-fs": {
          "version": "0.5.0",
          "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.5.0.tgz",
          "integrity": "sha512-jA0rdU5KoQMC0e6ppoNRtpp6vjFq6+NY7r8hywnC7V+1Xj/MtHwGIbB1QaK/dunyjWteJzmkpd7ooeWg10T7GA==",
          "dev": true,
          "requires": {
            "errno": "^0.1.3",
            "readable-stream": "^2.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "entities": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
      "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w=="
    },
    "errno": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/errno/-/errno-0.1.7.tgz",
      "integrity": "sha512-MfrRBDWzIWifgq6tJj60gkAwtLNb6sQPlcFrSOflcP1aFmmruKQ2wRnze/8V6kgyz7H3FF8Npzv78mZ7XLLflg==",
      "dev": true,
      "requires": {
        "prr": "~1.0.1"
      }
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "error-stack-parser": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/error-stack-parser/-/error-stack-parser-2.0.6.tgz",
      "integrity": "sha512-d51brTeqC+BHlwF0BhPtcYgF5nlzf9ZZ0ZIUQNZpc9ZB9qw5IJ2diTrBY9jlCJkTLITYPjmiX6OWCwH+fuyNgQ==",
      "dev": true,
      "requires": {
        "stackframe": "^1.1.1"
      }
    },
    "es-abstract": {
      "version": "1.17.4",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.17.4.tgz",
      "integrity": "sha512-Ae3um/gb8F0mui/jPL+QiqmglkUsaQf7FwBEHYIFkztkneosu9imhqHpBzQ3h1vit8t5iQ74t6PEVvphBZiuiQ==",
      "dev": true,
      "requires": {
        "es-to-primitive": "^1.2.1",
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.1",
        "is-callable": "^1.1.5",
        "is-regex": "^1.0.5",
        "object-inspect": "^1.7.0",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.0",
        "string.prototype.trimleft": "^2.1.1",
        "string.prototype.trimright": "^2.1.1"
      },
      "dependencies": {
        "object-keys": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
          "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
          "dev": true
        }
      }
    },
    "es-to-primitive": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
      "dev": true,
      "requires": {
        "is-callable": "^1.1.4",
        "is-date-object": "^1.0.1",
        "is-symbol": "^1.0.2"
      }
    },
    "es6-error": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz",
      "integrity": "sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==",
      "dev": true,
      "optional": true
    },
    "escape-goat": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
      "integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
      "dev": true
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
      "dev": true
    },
    "escodegen": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.14.1.tgz",
      "integrity": "sha512-Bmt7NcRySdIfNPfU2ZoXDrrXsG9ZjvDxcAlMfDUgRBjLOWTuIACXPBFJH7Z+cLb40JeQco5toikyc9t9P8E9SQ==",
      "dev": true,
      "requires": {
        "esprima": "^4.0.1",
        "estraverse": "^4.2.0",
        "esutils": "^2.0.2",
        "optionator": "^0.8.1",
        "source-map": "~0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true,
          "optional": true
        }
      }
    },
    "eslint": {
      "version": "6.8.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-6.8.0.tgz",
      "integrity": "sha512-K+Iayyo2LtyYhDSYwz5D5QdWw0hCacNzyq1Y821Xna2xSJj7cijoLLYmLxTQgcgZ9mC61nryMy9S7GRbYpI5Ig==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "ajv": "^6.10.0",
        "chalk": "^2.1.0",
        "cross-spawn": "^6.0.5",
        "debug": "^4.0.1",
        "doctrine": "^3.0.0",
        "eslint-scope": "^5.0.0",
        "eslint-utils": "^1.4.3",
        "eslint-visitor-keys": "^1.1.0",
        "espree": "^6.1.2",
        "esquery": "^1.0.1",
        "esutils": "^2.0.2",
        "file-entry-cache": "^5.0.1",
        "functional-red-black-tree": "^1.0.1",
        "glob-parent": "^5.0.0",
        "globals": "^12.1.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.0.0",
        "imurmurhash": "^0.1.4",
        "inquirer": "^7.0.0",
        "is-glob": "^4.0.0",
        "js-yaml": "^3.13.1",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.3.0",
        "lodash": "^4.17.14",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "natural-compare": "^1.4.0",
        "optionator": "^0.8.3",
        "progress": "^2.0.0",
        "regexpp": "^2.0.1",
        "semver": "^6.1.2",
        "strip-ansi": "^5.2.0",
        "strip-json-comments": "^3.0.1",
        "table": "^5.2.3",
        "text-table": "^0.2.0",
        "v8-compile-cache": "^2.0.3"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "globals": {
          "version": "12.3.0",
          "resolved": "https://registry.npmjs.org/globals/-/globals-12.3.0.tgz",
          "integrity": "sha512-wAfjdLgFsPZsklLJvOBUBmzYE8/CwhEqSBEMRXA3qxIiNtyqvjYurAtIfDh6chlEPUfmTY3MnZh5Hfh4q0UlIw==",
          "dev": true,
          "requires": {
            "type-fest": "^0.8.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "strip-json-comments": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.0.1.tgz",
          "integrity": "sha512-VTyMAUfdm047mwKl+u79WIdrZxtFtn+nBxHeb844XBQ9uMNTuTHdx2hc5RiAJYqwTj3wc/xe5HLSdJSkJ+WfZw==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "eslint-config-prettier": {
      "version": "6.11.0",
      "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-6.11.0.tgz",
      "integrity": "sha512-oB8cpLWSAjOVFEJhhyMZh6NOEOtBVziaqdDQ86+qhDHFbZXoRTM7pNSvFRfW/W/L/LrQ38C99J5CGuRBBzBsdA==",
      "dev": true,
      "requires": {
        "get-stdin": "^6.0.0"
      }
    },
    "eslint-plugin-prettier": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-3.1.3.tgz",
      "integrity": "sha512-+HG5jmu/dN3ZV3T6eCD7a4BlAySdN7mLIbJYo0z1cFQuI+r2DiTJEFeF68ots93PsnrMxbzIZ2S/ieX+mkrBeQ==",
      "dev": true,
      "requires": {
        "prettier-linter-helpers": "^1.0.0"
      }
    },
    "eslint-plugin-vue": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-vue/-/eslint-plugin-vue-6.2.1.tgz",
      "integrity": "sha512-MiIDOotoWseIfLIfGeDzF6sDvHkVvGd2JgkvjyHtN3q4RoxdAXrAMuI3SXTOKatljgacKwpNAYShmcKZa4yZzw==",
      "dev": true,
      "requires": {
        "natural-compare": "^1.4.0",
        "semver": "^5.6.0",
        "vue-eslint-parser": "^7.0.0"
      }
    },
    "eslint-scope": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.0.0.tgz",
      "integrity": "sha512-oYrhJW7S0bxAFDvWqzvMPRm6pcgcnWc4QnofCAqRTRfQC0JcwenzGglTtsLyIuuWFfkqDG9vz67cnttSd53djw==",
      "dev": true,
      "requires": {
        "esrecurse": "^4.1.0",
        "estraverse": "^4.1.1"
      }
    },
    "eslint-utils": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.4.3.tgz",
      "integrity": "sha512-fbBN5W2xdY45KulGXmLHZ3c3FHfVYmKg0IrAKGOkT/464PQsx2UeIzfz1RmEci+KLm1bBaAzZAh8+/E+XAeZ8Q==",
      "dev": true,
      "requires": {
        "eslint-visitor-keys": "^1.1.0"
      }
    },
    "eslint-visitor-keys": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.1.0.tgz",
      "integrity": "sha512-8y9YjtM1JBJU/A9Kc+SbaOV4y29sSWckBwMHa+FGtVj5gN/sbnKDf6xJUl+8g7FAij9LVaP8C24DUiH/f/2Z9A==",
      "dev": true
    },
    "espree": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-6.2.0.tgz",
      "integrity": "sha512-Xs8airJ7RQolnDIbLtRutmfvSsAe0xqMMAantCN/GMoqf81TFbeI1T7Jpd56qYu1uuh32dOG5W/X9uO+ghPXzA==",
      "dev": true,
      "requires": {
        "acorn": "^7.1.0",
        "acorn-jsx": "^5.2.0",
        "eslint-visitor-keys": "^1.1.0"
      }
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "esquery": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.1.0.tgz",
      "integrity": "sha512-MxYW9xKmROWF672KqjO75sszsA8Mxhw06YFeS5VHlB98KDHbOSurm3ArsjO60Eaf3QmGMCP1yn+0JQkNLo/97Q==",
      "dev": true,
      "requires": {
        "estraverse": "^4.0.0"
      }
    },
    "esrecurse": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
      "dev": true,
      "requires": {
        "estraverse": "^4.1.0"
      }
    },
    "estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
      "dev": true
    },
    "event-pubsub": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/event-pubsub/-/event-pubsub-4.3.0.tgz",
      "integrity": "sha512-z7IyloorXvKbFx9Bpie2+vMJKKx1fH1EN5yiTfp8CiLOTptSYy1g8H4yDpGlEdshL1PBiFtBHepF2cNsqeEeFQ==",
      "dev": true
    },
    "eventemitter3": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
      "integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ==",
      "dev": true
    },
    "events": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.1.0.tgz",
      "integrity": "sha512-Rv+u8MLHNOdMjTAFeT3nCjHn2aGlx435FP/sDHNaRhDEMwyI/aB22Kj2qIN8R0cw3z28psEQLYwxVKLsKrMgWg=="
    },
    "eventsource": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",
      "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",
      "dev": true,
      "requires": {
        "original": "^1.0.0"
      }
    },
    "evp_bytestokey": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
      "dev": true,
      "requires": {
        "md5.js": "^1.3.4",
        "safe-buffer": "^5.1.1"
      }
    },
    "exec-sh": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.4.tgz",
      "integrity": "sha512-sEFIkc61v75sWeOe72qyrqg2Qg0OuLESziUDk/O/z2qgS15y2gWVFrI6f2Qn/qw/0/NCfCEsmNA4zOjkwEZT1A==",
      "dev": true
    },
    "execa": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",
      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",
      "dev": true,
      "requires": {
        "cross-spawn": "^6.0.0",
        "get-stream": "^4.0.0",
        "is-stream": "^1.1.0",
        "npm-run-path": "^2.0.0",
        "p-finally": "^1.0.0",
        "signal-exit": "^3.0.0",
        "strip-eof": "^1.0.0"
      }
    },
    "exit": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",
      "integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
      "dev": true
    },
    "expand-brackets": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
      "dev": true,
      "requires": {
        "debug": "^2.3.3",
        "define-property": "^0.2.5",
        "extend-shallow": "^2.0.1",
        "posix-character-classes": "^0.1.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "expect": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/expect/-/expect-25.2.6.tgz",
      "integrity": "sha512-hMqqX3OX5Erw7CLoXXcawqi6xThhz/rYk+vEufhoCAyzDC2PW99ypYc/pvcgKjyuwbOB1wjqqClmwvlOL36Inw==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "ansi-styles": "^4.0.0",
        "jest-get-type": "^25.2.6",
        "jest-matcher-utils": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-regex-util": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "express": {
      "version": "4.17.1",
      "resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
      "integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
      "dev": true,
      "requires": {
        "accepts": "~1.3.7",
        "array-flatten": "1.1.1",
        "body-parser": "1.19.0",
        "content-disposition": "0.5.3",
        "content-type": "~1.0.4",
        "cookie": "0.4.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "~1.1.2",
        "fresh": "0.5.2",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.5",
        "qs": "6.7.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.1.2",
        "send": "0.17.1",
        "serve-static": "1.14.1",
        "setprototypeof": "1.1.1",
        "statuses": "~1.5.0",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
          "dev": true
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        }
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "extend-shallow": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
      "dev": true,
      "requires": {
        "assign-symbols": "^1.0.0",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "dev": true,
      "requires": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      }
    },
    "extglob": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
      "dev": true,
      "requires": {
        "array-unique": "^0.3.2",
        "define-property": "^1.0.0",
        "expand-brackets": "^2.1.4",
        "extend-shallow": "^2.0.1",
        "fragment-cache": "^0.2.1",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "extract-from-css": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/extract-from-css/-/extract-from-css-0.4.4.tgz",
      "integrity": "sha1-HqffLnx8brmSL6COitrqSG9vj5I=",
      "dev": true,
      "requires": {
        "css": "^2.1.0"
      }
    },
    "extract-zip": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-1.7.0.tgz",
      "integrity": "sha512-xoh5G1W/PB0/27lXgMQyIhP5DSY/LhoCsOyZgb+6iMmRtCwVBo55uKaMoEYrDCKQhWvqEip5ZPKAc6eFNyf/MA==",
      "dev": true,
      "requires": {
        "concat-stream": "^1.6.2",
        "debug": "^2.6.9",
        "mkdirp": "^0.5.4",
        "yauzl": "^2.10.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "mkdirp": {
          "version": "0.5.4",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.4.tgz",
          "integrity": "sha512-iG9AK/dJLtJ0XNgTuDbSyNS3zECqDlAhnQW4CsNxBG3LQJBbHmRX1egw39DmtOdCAqY+dKXV+sgPgilNWUKMVw==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        }
      }
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
    },
    "fast-deep-equal": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
      "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA=="
    },
    "fast-diff": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.2.0.tgz",
      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==",
      "dev": true
    },
    "fast-glob": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
      "integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
      "dev": true,
      "requires": {
        "@mrmlnc/readdir-enhanced": "^2.2.1",
        "@nodelib/fs.stat": "^1.1.2",
        "glob-parent": "^3.1.0",
        "is-glob": "^4.0.0",
        "merge2": "^1.2.3",
        "micromatch": "^3.1.10"
      },
      "dependencies": {
        "glob-parent": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
          "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
          "dev": true,
          "requires": {
            "is-glob": "^3.1.0",
            "path-dirname": "^1.0.0"
          },
          "dependencies": {
            "is-glob": {
              "version": "3.1.0",
              "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
              "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
              "dev": true,
              "requires": {
                "is-extglob": "^2.1.0"
              }
            }
          }
        }
      }
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
      "dev": true
    },
    "faye-websocket": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz",
      "integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
      "dev": true,
      "requires": {
        "websocket-driver": ">=0.5.1"
      }
    },
    "fb-watchman": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.1.tgz",
      "integrity": "sha512-DkPJKQeY6kKwmuMretBhr7G6Vodr7bFwDYTXIkfG1gjvNpaxBTQV3PbXg6bR1c1UP4jPOX0jHUbbHANL9vRjVg==",
      "dev": true,
      "requires": {
        "bser": "2.1.1"
      }
    },
    "fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=",
      "dev": true,
      "requires": {
        "pend": "~1.2.0"
      }
    },
    "figgy-pudding": {
      "version": "3.5.1",
      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.1.tgz",
      "integrity": "sha512-vNKxJHTEKNThjfrdJwHc7brvM6eVevuO5nTj6ez8ZQ1qbXTvGthucRF7S4vf2cr71QVnT70V34v0S1DyQsti0w==",
      "dev": true
    },
    "figures": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
      "integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.5"
      }
    },
    "file-entry-cache": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",
      "integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",
      "dev": true,
      "requires": {
        "flat-cache": "^2.0.1"
      }
    },
    "file-loader": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-4.3.0.tgz",
      "integrity": "sha512-aKrYPYjF1yG3oX0kWRrqrSMfgftm7oJW5M+m4owoldH5C51C0RkIwB++JbRvEW3IU6/ZG5n8UvEcdgwOt2UOWA==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.2.3",
        "schema-utils": "^2.5.0"
      }
    },
    "file-saver": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/file-saver/-/file-saver-2.0.2.tgz",
      "integrity": "sha512-Wz3c3XQ5xroCxd1G8b7yL0Ehkf0TC9oYC6buPFkNnU9EnaPlifeAFCyCh+iewXTyFRcg0a6j3J7FmJsIhlhBdw=="
    },
    "file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
      "dev": true
    },
    "filesize": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",
      "integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg==",
      "dev": true
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "finalhandler": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
      "integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "statuses": "~1.5.0",
        "unpipe": "~1.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "find-babel-config": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/find-babel-config/-/find-babel-config-1.2.0.tgz",
      "integrity": "sha512-jB2CHJeqy6a820ssiqwrKMeyC6nNdmrcgkKWJWmpoxpE8RKciYJXCcXRq1h2AzCo5I5BJeN2tkGEO3hLTuePRA==",
      "dev": true,
      "requires": {
        "json5": "^0.5.1",
        "path-exists": "^3.0.0"
      }
    },
    "find-cache-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
      "dev": true,
      "requires": {
        "commondir": "^1.0.1",
        "make-dir": "^2.0.0",
        "pkg-dir": "^3.0.0"
      }
    },
    "find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "requires": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "dependencies": {
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        }
      }
    },
    "flat-cache": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",
      "integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",
      "dev": true,
      "requires": {
        "flatted": "^2.0.0",
        "rimraf": "2.6.3",
        "write": "1.0.3"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.6.3",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
          "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "flatted": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.1.tgz",
      "integrity": "sha512-a1hQMktqW9Nmqr5aktAux3JMNqaucxGcjtjWnZLHX7yyPCmlSV3M54nGYbqT8K+0GhF3NBgmJCc3ma+WOgX8Jg==",
      "dev": true
    },
    "flora-colossus": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/flora-colossus/-/flora-colossus-1.0.1.tgz",
      "integrity": "sha512-d+9na7t9FyH8gBJoNDSi28mE4NgQVGGvxQ4aHtFRetjyh5SXjuus+V5EZaxFmFdXVemSOrx0lsgEl/ZMjnOWJA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "fs-extra": "^7.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "fs-extra": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
          "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "flush-promises": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/flush-promises/-/flush-promises-1.0.2.tgz",
      "integrity": "sha512-G0sYfLQERwKz4+4iOZYQEZVpOt9zQrlItIxQAAYAWpfby3gbHrx0osCHz5RLl/XoXevXk0xoN4hDFky/VV9TrA==",
      "dev": true
    },
    "flush-write-stream": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.1.1.tgz",
      "integrity": "sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "readable-stream": "^2.3.6"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "follow-redirects": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
      "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
      "requires": {
        "debug": "=3.1.0"
      }
    },
    "for-in": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
      "dev": true
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
    },
    "fork-ts-checker-webpack-plugin": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-3.1.1.tgz",
      "integrity": "sha512-DuVkPNrM12jR41KM2e+N+styka0EgLkTnXmNcXdgOM37vtGeY+oCBK/Jx0hzSeEU6memFCtWb4htrHPMDfwwUQ==",
      "dev": true,
      "requires": {
        "babel-code-frame": "^6.22.0",
        "chalk": "^2.4.1",
        "chokidar": "^3.3.0",
        "micromatch": "^3.1.10",
        "minimatch": "^3.0.4",
        "semver": "^5.6.0",
        "tapable": "^1.0.0",
        "worker-rpc": "^0.1.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "binary-extensions": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.0.0.tgz",
          "integrity": "sha512-Phlt0plgpIIBOGTT/ehfFnbNlfsDEiqmzE2KRXoX1bLIlir4X/MR+zSyBEkL05ffWgnRSf/DXv+WrUAVr93/ow==",
          "dev": true
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "chokidar": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.3.1.tgz",
          "integrity": "sha512-4QYCEWOcK3OJrxwvyyAOxFuhpvOVCYkr33LPfFNBjAD/w3sEzWsp2BUOkI4l9bHvWioAd0rc6NlHUOEaWkTeqg==",
          "dev": true,
          "requires": {
            "anymatch": "~3.1.1",
            "braces": "~3.0.2",
            "fsevents": "~2.1.2",
            "glob-parent": "~5.1.0",
            "is-binary-path": "~2.1.0",
            "is-glob": "~4.0.1",
            "normalize-path": "~3.0.0",
            "readdirp": "~3.3.0"
          }
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "is-binary-path": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
          "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
          "dev": true,
          "requires": {
            "binary-extensions": "^2.0.0"
          }
        },
        "readdirp": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.3.0.tgz",
          "integrity": "sha512-zz0pAkSPOXXm1viEwygWIPSPkcBYjW1xU5j/JBh5t9bGCJwa6f9+BJa6VaB2g+b55yVrmXzqkyLf4xaWYM0IkQ==",
          "dev": true,
          "requires": {
            "picomatch": "^2.0.7"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      }
    },
    "forwarded": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",
      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=",
      "dev": true
    },
    "fragment-cache": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
      "dev": true,
      "requires": {
        "map-cache": "^0.2.2"
      }
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=",
      "dev": true
    },
    "from2": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",
      "integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "fs-extra": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
      "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs-minipass": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
      "dev": true,
      "requires": {
        "minipass": "^2.6.0"
      }
    },
    "fs-write-stream-atomic": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/fs-write-stream-atomic/-/fs-write-stream-atomic-1.0.10.tgz",
      "integrity": "sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "iferr": "^0.1.5",
        "imurmurhash": "^0.1.4",
        "readable-stream": "1 || 2"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
      "dev": true
    },
    "fsevents": {
      "version": "1.2.11",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.11.tgz",
      "integrity": "sha512-+ux3lx6peh0BpvY0JebGyZoiR4D+oYzdPZMKJwkZ+sFkNJzpL7tXc/wehS49gUAxg3tmMHPHZkA8JU2rhhgDHw==",
      "dev": true,
      "optional": true,
      "requires": {
        "bindings": "^1.5.0",
        "nan": "^2.12.1",
        "node-pre-gyp": "*"
      },
      "dependencies": {
        "abbrev": {
          "version": "1.1.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "ansi-regex": {
          "version": "2.1.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "aproba": {
          "version": "1.2.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "are-we-there-yet": {
          "version": "1.1.5",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "delegates": "^1.0.0",
            "readable-stream": "^2.0.6"
          }
        },
        "balanced-match": {
          "version": "1.0.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "brace-expansion": {
          "version": "1.1.11",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "balanced-match": "^1.0.0",
            "concat-map": "0.0.1"
          }
        },
        "chownr": {
          "version": "1.1.3",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "code-point-at": {
          "version": "1.1.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "concat-map": {
          "version": "0.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "console-control-strings": {
          "version": "1.1.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "core-util-is": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "debug": {
          "version": "3.2.6",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "deep-extend": {
          "version": "0.6.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "delegates": {
          "version": "1.0.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "detect-libc": {
          "version": "1.0.3",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "fs-minipass": {
          "version": "1.2.7",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "minipass": "^2.6.0"
          }
        },
        "fs.realpath": {
          "version": "1.0.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "gauge": {
          "version": "2.7.4",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "aproba": "^1.0.3",
            "console-control-strings": "^1.0.0",
            "has-unicode": "^2.0.0",
            "object-assign": "^4.1.0",
            "signal-exit": "^3.0.0",
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wide-align": "^1.1.0"
          }
        },
        "glob": {
          "version": "7.1.6",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "has-unicode": {
          "version": "2.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "iconv-lite": {
          "version": "0.4.24",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3"
          }
        },
        "ignore-walk": {
          "version": "3.0.3",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "minimatch": "^3.0.4"
          }
        },
        "inflight": {
          "version": "1.0.6",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "once": "^1.3.0",
            "wrappy": "1"
          }
        },
        "inherits": {
          "version": "2.0.4",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "ini": {
          "version": "1.3.5",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "minimatch": {
          "version": "3.0.4",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "brace-expansion": "^1.1.7"
          }
        },
        "minimist": {
          "version": "0.0.8",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "minipass": {
          "version": "2.9.0",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.0"
          }
        },
        "minizlib": {
          "version": "1.3.3",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "minipass": "^2.9.0"
          }
        },
        "mkdirp": {
          "version": "0.5.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "minimist": "0.0.8"
          }
        },
        "ms": {
          "version": "2.1.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "needle": {
          "version": "2.4.0",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "debug": "^3.2.6",
            "iconv-lite": "^0.4.4",
            "sax": "^1.2.4"
          }
        },
        "node-pre-gyp": {
          "version": "0.14.0",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "detect-libc": "^1.0.2",
            "mkdirp": "^0.5.1",
            "needle": "^2.2.1",
            "nopt": "^4.0.1",
            "npm-packlist": "^1.1.6",
            "npmlog": "^4.0.2",
            "rc": "^1.2.7",
            "rimraf": "^2.6.1",
            "semver": "^5.3.0",
            "tar": "^4.4.2"
          }
        },
        "nopt": {
          "version": "4.0.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "abbrev": "1",
            "osenv": "^0.1.4"
          }
        },
        "npm-bundled": {
          "version": "1.1.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "npm-normalize-package-bin": "^1.0.1"
          }
        },
        "npm-normalize-package-bin": {
          "version": "1.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "npm-packlist": {
          "version": "1.4.7",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "ignore-walk": "^3.0.1",
            "npm-bundled": "^1.0.1"
          }
        },
        "npmlog": {
          "version": "4.1.2",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "are-we-there-yet": "~1.1.2",
            "console-control-strings": "~1.1.0",
            "gauge": "~2.7.3",
            "set-blocking": "~2.0.0"
          }
        },
        "number-is-nan": {
          "version": "1.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "object-assign": {
          "version": "4.1.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "once": {
          "version": "1.4.0",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "wrappy": "1"
          }
        },
        "os-homedir": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "os-tmpdir": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "osenv": {
          "version": "0.1.5",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "os-homedir": "^1.0.0",
            "os-tmpdir": "^1.0.0"
          }
        },
        "path-is-absolute": {
          "version": "1.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "process-nextick-args": {
          "version": "2.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "rc": {
          "version": "1.2.8",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "deep-extend": "^0.6.0",
            "ini": "~1.3.0",
            "minimist": "^1.2.0",
            "strip-json-comments": "~2.0.1"
          },
          "dependencies": {
            "minimist": {
              "version": "1.2.0",
              "bundled": true,
              "dev": true,
              "optional": true
            }
          }
        },
        "readable-stream": {
          "version": "2.3.6",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "safer-buffer": {
          "version": "2.1.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "sax": {
          "version": "1.2.4",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "semver": {
          "version": "5.7.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "set-blocking": {
          "version": "2.0.0",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "signal-exit": {
          "version": "3.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "string-width": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "strip-ansi": {
          "version": "3.0.1",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "ansi-regex": "^2.0.0"
          }
        },
        "strip-json-comments": {
          "version": "2.0.1",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "tar": {
          "version": "4.4.13",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "chownr": "^1.1.1",
            "fs-minipass": "^1.2.5",
            "minipass": "^2.8.6",
            "minizlib": "^1.2.1",
            "mkdirp": "^0.5.0",
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.3"
          }
        },
        "util-deprecate": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "wide-align": {
          "version": "1.1.3",
          "bundled": true,
          "dev": true,
          "optional": true,
          "requires": {
            "string-width": "^1.0.2 || 2"
          }
        },
        "wrappy": {
          "version": "1.0.2",
          "bundled": true,
          "dev": true,
          "optional": true
        },
        "yallist": {
          "version": "3.1.1",
          "bundled": true,
          "dev": true,
          "optional": true
        }
      }
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",
      "dev": true
    },
    "futoin-hkdf": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/futoin-hkdf/-/futoin-hkdf-1.3.2.tgz",
      "integrity": "sha512-3EVi3ETTyJg5PSXlxLCaUVVn0pSbDf62L3Gwxne7Uq+d8adOSNWQAad4gg7WToHkcgnCJb3Wlb1P8r4Evj4GPw=="
    },
    "galactus": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/galactus/-/galactus-0.2.1.tgz",
      "integrity": "sha1-y+0tIKQMH1Z5o1kI4rlBVzPnjbk=",
      "dev": true,
      "requires": {
        "debug": "^3.1.0",
        "flora-colossus": "^1.0.0",
        "fs-extra": "^4.0.0"
      }
    },
    "gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
      "dev": true,
      "requires": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "gensync": {
      "version": "1.0.0-beta.1",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.1.tgz",
      "integrity": "sha512-r8EC6NO1sngH/zdD9fiRDLdcgnbayXah+mLgManTaIZJqEC1MZstmnox8KpnI2/fxQwrp5OpCOYWLp4rBl4Jcg==",
      "dev": true
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true
    },
    "get-package-info": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/get-package-info/-/get-package-info-1.0.0.tgz",
      "integrity": "sha1-ZDJ5ZWPigRPNlHTbvQAFKYWkmZw=",
      "dev": true,
      "requires": {
        "bluebird": "^3.1.1",
        "debug": "^2.2.0",
        "lodash.get": "^4.0.0",
        "read-pkg-up": "^2.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "find-up": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
          "dev": true,
          "requires": {
            "locate-path": "^2.0.0"
          }
        },
        "load-json-file": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",
          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "parse-json": "^2.2.0",
            "pify": "^2.0.0",
            "strip-bom": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
          "dev": true,
          "requires": {
            "p-locate": "^2.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-limit": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
          "dev": true,
          "requires": {
            "p-try": "^1.0.0"
          }
        },
        "p-locate": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
          "dev": true,
          "requires": {
            "p-limit": "^1.1.0"
          }
        },
        "p-try": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
          "dev": true
        },
        "path-type": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",
          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",
          "dev": true,
          "requires": {
            "pify": "^2.0.0"
          }
        },
        "read-pkg": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",
          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",
          "dev": true,
          "requires": {
            "load-json-file": "^2.0.0",
            "normalize-package-data": "^2.3.2",
            "path-type": "^2.0.0"
          }
        },
        "read-pkg-up": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",
          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",
          "dev": true,
          "requires": {
            "find-up": "^2.0.0",
            "read-pkg": "^2.0.0"
          }
        },
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "get-stdin": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-6.0.0.tgz",
      "integrity": "sha512-jp4tHawyV7+fkkSKyvjuLZswblUtz+SQKzSWnBbii16BuZksJlU1wuBYXY75r+duh/llF1ur6oNwi+2ZzjKZ7g==",
      "dev": true
    },
    "get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "dev": true,
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "get-value": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",
      "dev": true
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "glob": {
      "version": "7.1.6",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.0.tgz",
      "integrity": "sha512-qjtRgnIVmOfnKUE3NJAQEdk+lKrxfw8t5ke7SXtfMTHcjsBfOfWXCQfdb30zfDoZQ2IRSIiidmjtbHZPZ++Ihw==",
      "dev": true,
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "glob-to-regexp": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",
      "integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs=",
      "dev": true
    },
    "global-agent": {
      "version": "2.1.8",
      "resolved": "https://registry.npmjs.org/global-agent/-/global-agent-2.1.8.tgz",
      "integrity": "sha512-VpBe/rhY6Rw2VDOTszAMNambg+4Qv8j0yiTNDYEXXXxkUNGWLHp8A3ztK4YDBbFNcWF4rgsec6/5gPyryya/+A==",
      "dev": true,
      "optional": true,
      "requires": {
        "boolean": "^3.0.0",
        "core-js": "^3.6.4",
        "es6-error": "^4.1.1",
        "matcher": "^2.1.0",
        "roarr": "^2.15.2",
        "semver": "^7.1.2",
        "serialize-error": "^5.0.0"
      },
      "dependencies": {
        "core-js": {
          "version": "3.6.4",
          "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.6.4.tgz",
          "integrity": "sha512-4paDGScNgZP2IXXilaffL9X7968RuvwlkK3xWtZRVqgd8SYNiVKRJvkFd1aqqEuPfN7E68ZHEp9hDj6lHj4Hyw==",
          "dev": true,
          "optional": true
        },
        "semver": {
          "version": "7.1.3",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.1.3.tgz",
          "integrity": "sha512-ekM0zfiA9SCBlsKa2X1hxyxiI4L3B6EbVJkkdgQXnSEEaHlGdvyodMruTiulSRWMMB4NeIuYNMC9rTKTz97GxA==",
          "dev": true,
          "optional": true
        }
      }
    },
    "global-dirs": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-2.0.1.tgz",
      "integrity": "sha512-5HqUqdhkEovj2Of/ms3IeS/EekcO54ytHRLV4PEY2rhRwrHXLQjeVEES0Lhka0xwNDtGYn58wyC4s5+MHsOO6A==",
      "dev": true,
      "requires": {
        "ini": "^1.3.5"
      }
    },
    "global-tunnel-ng": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/global-tunnel-ng/-/global-tunnel-ng-2.7.1.tgz",
      "integrity": "sha512-4s+DyciWBV0eK148wqXxcmVAbFVPqtc3sEtUE/GTQfuU80rySLcMhUmHKSHI7/LDj8q0gDYI1lIhRRB7ieRAqg==",
      "dev": true,
      "optional": true,
      "requires": {
        "encodeurl": "^1.0.2",
        "lodash": "^4.17.10",
        "npm-conf": "^1.1.3",
        "tunnel": "^0.0.6"
      }
    },
    "globals": {
      "version": "9.18.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
      "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
      "dev": true
    },
    "globalthis": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.1.tgz",
      "integrity": "sha512-mJPRTc/P39NH/iNG4mXa9aIhNymaQikTrnspeCa2ZuJ+mH2QN/rXwtX3XwKrHqWgUQFbNZKtHM105aHzJalElw==",
      "dev": true,
      "optional": true,
      "requires": {
        "define-properties": "^1.1.3"
      }
    },
    "globby": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-9.2.0.tgz",
      "integrity": "sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "array-union": "^1.0.2",
        "dir-glob": "^2.2.2",
        "fast-glob": "^2.2.6",
        "glob": "^7.1.3",
        "ignore": "^4.0.3",
        "pify": "^4.0.1",
        "slash": "^2.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
          "dev": true
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        }
      }
    },
    "google-fonts-webpack-plugin": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/google-fonts-webpack-plugin/-/google-fonts-webpack-plugin-0.4.4.tgz",
      "integrity": "sha512-+e2D9/DVBG9EDydRovzoqMZ658SsTBGbC0c65GyZqkwNvdj8vRSYQKXqbz7/yt7QaXsCPT1MpH45r3ivWOitcw==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.4",
        "node-fetch": "^1.6.3",
        "webpack-sources": "^0.2.0",
        "yauzl": "^2.8.0"
      },
      "dependencies": {
        "fd-slicer": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
          "integrity": "sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=",
          "dev": true,
          "requires": {
            "pend": "~1.2.0"
          }
        },
        "source-list-map": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-1.1.2.tgz",
          "integrity": "sha1-mIkBnRAkzOVc3AaUmDN+9hhqEaE=",
          "dev": true
        },
        "webpack-sources": {
          "version": "0.2.3",
          "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-0.2.3.tgz",
          "integrity": "sha1-F8Yr+vE8cH+dAsR54Nzd6DgGl/s=",
          "dev": true,
          "requires": {
            "source-list-map": "^1.1.1",
            "source-map": "~0.5.3"
          }
        },
        "yauzl": {
          "version": "2.10.0",
          "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
          "integrity": "sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=",
          "dev": true,
          "requires": {
            "buffer-crc32": "~0.2.3",
            "fd-slicer": "~1.1.0"
          }
        }
      }
    },
    "got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "dev": true,
      "requires": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      },
      "dependencies": {
        "decompress-response": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
          "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
          "dev": true,
          "requires": {
            "mimic-response": "^1.0.0"
          }
        },
        "mimic-response": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
          "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
          "dev": true
        }
      }
    },
    "graceful-fs": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz",
      "integrity": "sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ==",
      "dev": true
    },
    "growly": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",
      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=",
      "dev": true
    },
    "gsap": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/gsap/-/gsap-2.1.3.tgz",
      "integrity": "sha512-8RFASCqi2FOCBuv7X4o7M6bLdy+1hbR0azg+MG7zz+EVsI+OmJblYsTk0GEepQd2Jg/ItMPiVTibF7r3EVxjZQ=="
    },
    "gzip-size": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/gzip-size/-/gzip-size-5.1.1.tgz",
      "integrity": "sha512-FNHi6mmoHvs1mxZAds4PpdCS6QG8B4C1krxJsMutgxl5t3+GlRTzzI3NEkifXx2pVsOvJdOGSmIgDhQ55FwdPA==",
      "dev": true,
      "requires": {
        "duplexer": "^0.1.1",
        "pify": "^4.0.1"
      },
      "dependencies": {
        "pify": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
          "dev": true
        }
      }
    },
    "handle-thing": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.0.tgz",
      "integrity": "sha512-d4sze1JNC454Wdo2fkuyzCr6aHcbL6PGGuFAz0Li/NcOm1tCHGnWDRmJP85dh9IhQErTc2svWFEX5xHIOo//kQ==",
      "dev": true
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
    },
    "har-validator": {
      "version": "5.1.3",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
      "requires": {
        "ajv": "^6.5.5",
        "har-schema": "^2.0.0"
      }
    },
    "harmony-reflect": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/harmony-reflect/-/harmony-reflect-1.6.1.tgz",
      "integrity": "sha512-WJTeyp0JzGtHcuMsi7rw2VwtkvLa+JyfEKJCFyfcS0+CDkjQ5lHPu7zEhFZP+PDSRrEgXa5Ah0l1MbgbE41XjA==",
      "dev": true
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-ansi": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
      "dev": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
      "dev": true
    },
    "has-symbols": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.1.tgz",
      "integrity": "sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg==",
      "dev": true
    },
    "has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=",
      "dev": true
    },
    "has-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
      "dev": true,
      "requires": {
        "get-value": "^2.0.6",
        "has-values": "^1.0.0",
        "isobject": "^3.0.0"
      }
    },
    "has-values": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
      "dev": true,
      "requires": {
        "is-number": "^3.0.0",
        "kind-of": "^4.0.0"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "kind-of": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "has-yarn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
      "integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
      "dev": true
    },
    "hash-base": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",
      "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "hash-sum": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/hash-sum/-/hash-sum-2.0.0.tgz",
      "integrity": "sha512-WdZTbAByD+pHfl/g9QSsBIIwy8IT+EsPiKDs0KNX+zSHhdDLFKdZu0BQHljvO+0QI/BasbMSUa8wYNCZTvhslg==",
      "dev": true
    },
    "hash.js": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "minimalistic-assert": "^1.0.1"
      }
    },
    "he": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/he/-/he-1.2.0.tgz",
      "integrity": "sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==",
      "dev": true
    },
    "hex-color-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",
      "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ==",
      "dev": true
    },
    "highlight.js": {
      "version": "9.18.1",
      "resolved": "https://registry.npmjs.org/highlight.js/-/highlight.js-9.18.1.tgz",
      "integrity": "sha512-OrVKYz70LHsnCgmbXctv/bfuvntIKDz177h0Co37DQ5jamGZLVmoCVMtjMtNZY3X9DrCcKfklHPNeA0uPZhSJg==",
      "dev": true
    },
    "hmac-drbg": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
      "dev": true,
      "requires": {
        "hash.js": "^1.0.3",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "hoopy": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/hoopy/-/hoopy-0.1.4.tgz",
      "integrity": "sha512-HRcs+2mr52W0K+x8RzcLzuPPmVIKMSv97RGHy0Ea9y/mpcaK+xTrjICA04KAHi4GRzxliNqNJEFYWHghy3rSfQ==",
      "dev": true
    },
    "hosted-git-info": {
      "version": "2.8.8",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
      "integrity": "sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg==",
      "dev": true
    },
    "hpack.js": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz",
      "integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "obuf": "^1.0.0",
        "readable-stream": "^2.0.1",
        "wbuf": "^1.1.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "hsl-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",
      "integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4=",
      "dev": true
    },
    "hsla-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",
      "integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg=",
      "dev": true
    },
    "html-comment-regex": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/html-comment-regex/-/html-comment-regex-1.1.2.tgz",
      "integrity": "sha512-P+M65QY2JQ5Y0G9KKdlDpo0zK+/OHptU5AaBwUfAIDJZk1MYf32Frm84EcOytfJE0t5JvkAnKlmjsXDnWzCJmQ==",
      "dev": true
    },
    "html-encoding-sniffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
      "integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",
      "dev": true,
      "requires": {
        "whatwg-encoding": "^1.0.1"
      }
    },
    "html-entities": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz",
      "integrity": "sha1-DfKTUfByEWNRXfueVUPl9u7VFi8=",
      "dev": true
    },
    "html-escaper": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
      "dev": true
    },
    "html-minifier": {
      "version": "3.5.21",
      "resolved": "https://registry.npmjs.org/html-minifier/-/html-minifier-3.5.21.tgz",
      "integrity": "sha512-LKUKwuJDhxNa3uf/LPR/KVjm/l3rBqtYeCOAekvG8F1vItxMUpueGd94i/asDDr8/1u7InxzFA5EeGjhhG5mMA==",
      "dev": true,
      "requires": {
        "camel-case": "3.0.x",
        "clean-css": "4.2.x",
        "commander": "2.17.x",
        "he": "1.2.x",
        "param-case": "2.1.x",
        "relateurl": "0.2.x",
        "uglify-js": "3.4.x"
      },
      "dependencies": {
        "commander": {
          "version": "2.17.1",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.17.1.tgz",
          "integrity": "sha512-wPMUt6FnH2yzG95SA6mzjQOEKUU3aLaDEmzs1ti+1E9h+CsrZghRlqEM/EJ4KscsQVG8uNN4uVreUeT8+drlgg==",
          "dev": true
        }
      }
    },
    "html-tags": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/html-tags/-/html-tags-2.0.0.tgz",
      "integrity": "sha1-ELMKOGCF9Dzt41PMj6fLDe7qZos=",
      "dev": true
    },
    "html-webpack-plugin": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-3.2.0.tgz",
      "integrity": "sha1-sBq71yOsqqeze2r0SS69oD2d03s=",
      "dev": true,
      "requires": {
        "html-minifier": "^3.2.3",
        "loader-utils": "^0.2.16",
        "lodash": "^4.17.3",
        "pretty-error": "^2.0.2",
        "tapable": "^1.0.0",
        "toposort": "^1.0.0",
        "util.promisify": "1.0.0"
      },
      "dependencies": {
        "big.js": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/big.js/-/big.js-3.2.0.tgz",
          "integrity": "sha512-+hN/Zh2D08Mx65pZ/4g5bsmNiZUuChDiQfTUQ7qJr4/kuopCr88xZsAXv6mBoZEsUI4OuGHlX59qE94K2mMW8Q==",
          "dev": true
        },
        "emojis-list": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
          "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k=",
          "dev": true
        },
        "loader-utils": {
          "version": "0.2.17",
          "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-0.2.17.tgz",
          "integrity": "sha1-+G5jdNQyBabmxg6RlvF8Apm/s0g=",
          "dev": true,
          "requires": {
            "big.js": "^3.1.3",
            "emojis-list": "^2.0.0",
            "json5": "^0.5.0",
            "object-assign": "^4.0.1"
          }
        },
        "util.promisify": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.0.tgz",
          "integrity": "sha512-i+6qA2MPhvoKLuxnJNpXAGhg7HphQOSUq2LKMZD0m15EiskXUkMvKdF4Uui0WYeCUGea+o2cw/ZuwehtfsrNkA==",
          "dev": true,
          "requires": {
            "define-properties": "^1.1.2",
            "object.getownpropertydescriptors": "^2.0.3"
          }
        }
      }
    },
    "htmlparser2": {
      "version": "3.10.1",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",
      "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",
      "dev": true,
      "requires": {
        "domelementtype": "^1.3.1",
        "domhandler": "^2.3.0",
        "domutils": "^1.5.1",
        "entities": "^1.1.1",
        "inherits": "^2.0.1",
        "readable-stream": "^3.1.1"
      },
      "dependencies": {
        "readable-stream": {
          "version": "3.6.0",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
          "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
          "dev": true,
          "requires": {
            "inherits": "^2.0.3",
            "string_decoder": "^1.1.1",
            "util-deprecate": "^1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
          "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.2.0"
          }
        }
      }
    },
    "http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "http-deceiver": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz",
      "integrity": "sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc=",
      "dev": true
    },
    "http-errors": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
      "integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
      "dev": true,
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.3",
        "setprototypeof": "1.1.1",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        }
      }
    },
    "http-parser-js": {
      "version": "0.4.10",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.4.10.tgz",
      "integrity": "sha1-ksnBN0w1CF912zWexWzCV8u5P6Q=",
      "dev": true
    },
    "http-proxy": {
      "version": "1.18.1",
      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz",
      "integrity": "sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ==",
      "dev": true,
      "requires": {
        "eventemitter3": "^4.0.0",
        "follow-redirects": "^1.0.0",
        "requires-port": "^1.0.0"
      }
    },
    "http-proxy-middleware": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-0.19.1.tgz",
      "integrity": "sha512-yHYTgWMQO8VvwNS22eLLloAkvungsKdKTLO8AJlftYIKNfJr3GK3zK0ZCfzDDGUBttdGc8xFy1mCitvNKQtC3Q==",
      "dev": true,
      "requires": {
        "http-proxy": "^1.17.0",
        "is-glob": "^4.0.0",
        "lodash": "^4.17.11",
        "micromatch": "^3.1.10"
      }
    },
    "http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
      "requires": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "https-browserify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",
      "integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
      "dev": true
    },
    "human-signals": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-1.1.1.tgz",
      "integrity": "sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw==",
      "dev": true
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dev": true,
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "icss-utils": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/icss-utils/-/icss-utils-4.1.1.tgz",
      "integrity": "sha512-4aFq7wvWyMHKgxsH8QQtGpvbASCf+eM3wPRLI6R+MgAnTCZ6STYsRvttLvRWK0Nfif5piF394St3HeJDaljGPA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.14"
      }
    },
    "identity-obj-proxy": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/identity-obj-proxy/-/identity-obj-proxy-3.0.0.tgz",
      "integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
      "dev": true,
      "requires": {
        "harmony-reflect": "^1.4.6"
      }
    },
    "ieee754": {
      "version": "1.1.13",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
      "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg==",
      "dev": true
    },
    "iferr": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/iferr/-/iferr-0.1.5.tgz",
      "integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE=",
      "dev": true
    },
    "ignore": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
      "dev": true
    },
    "ignore-walk": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.3.tgz",
      "integrity": "sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==",
      "dev": true,
      "requires": {
        "minimatch": "^3.0.4"
      }
    },
    "image-size": {
      "version": "0.5.5",
      "resolved": "https://registry.npmjs.org/image-size/-/image-size-0.5.5.tgz",
      "integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",
      "dev": true,
      "optional": true
    },
    "import-cwd": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-cwd/-/import-cwd-2.1.0.tgz",
      "integrity": "sha1-qmzzbnInYShcs3HsZRn1PiQ1sKk=",
      "dev": true,
      "requires": {
        "import-from": "^2.1.0"
      }
    },
    "import-fresh": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.2.1.tgz",
      "integrity": "sha512-6e1q1cnWP2RXD9/keSkxHScg508CdXqXWgWBaETNhyuBFz+kUZlKboh+ISK+bU++DmbHimVBrOz/zzPe0sZ3sQ==",
      "dev": true,
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "import-from": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-from/-/import-from-2.1.0.tgz",
      "integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
      "dev": true,
      "requires": {
        "resolve-from": "^3.0.0"
      },
      "dependencies": {
        "resolve-from": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
          "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=",
          "dev": true
        }
      }
    },
    "import-lazy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
      "integrity": "sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=",
      "dev": true
    },
    "import-local": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/import-local/-/import-local-2.0.0.tgz",
      "integrity": "sha512-b6s04m3O+s3CGSbqDIyP4R6aAwAeYlVq9+WUWep6iHa8ETRf9yei1U48C5MmfJmV9AiLYYBKPMq/W+/WRpQmCQ==",
      "dev": true,
      "requires": {
        "pkg-dir": "^3.0.0",
        "resolve-cwd": "^2.0.0"
      }
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
      "dev": true
    },
    "indexes-of": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",
      "integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc=",
      "dev": true
    },
    "infer-owner": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
      "integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
      "dev": true
    },
    "inquirer": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-7.0.6.tgz",
      "integrity": "sha512-7SVO4h+QIdMq6XcqIqrNte3gS5MzCCKZdsq9DO4PJziBFNYzP3PGFbDjgadDb//MCahzgjCxvQ/O2wa7kx9o4w==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^4.2.1",
        "chalk": "^3.0.0",
        "cli-cursor": "^3.1.0",
        "cli-width": "^2.0.0",
        "external-editor": "^3.0.3",
        "figures": "^3.0.0",
        "lodash": "^4.17.15",
        "mute-stream": "0.0.8",
        "run-async": "^2.4.0",
        "rxjs": "^6.5.3",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0",
        "through": "^2.3.6"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "internal-ip": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/internal-ip/-/internal-ip-4.3.0.tgz",
      "integrity": "sha512-S1zBo1D6zcsyuC6PMmY5+55YMILQ9av8lotMx447Bq6SAgo/sDK6y6uUKmuYhW7eacnIhFfsPmCNYdDzsnnDCg==",
      "dev": true,
      "requires": {
        "default-gateway": "^4.2.0",
        "ipaddr.js": "^1.9.0"
      },
      "dependencies": {
        "default-gateway": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-4.2.0.tgz",
          "integrity": "sha512-h6sMrVB1VMWVrW13mSc6ia/DwYYw5MN6+exNu1OaJeFac5aSAvwM7lZ0NVfTABuSkQelr4h5oebg3KB1XPdjgA==",
          "dev": true,
          "requires": {
            "execa": "^1.0.0",
            "ip-regex": "^2.1.0"
          }
        }
      }
    },
    "invariant": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
      "dev": true,
      "requires": {
        "loose-envify": "^1.0.0"
      }
    },
    "invert-kv": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz",
      "integrity": "sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA==",
      "dev": true
    },
    "ip": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
      "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo=",
      "dev": true
    },
    "ip-regex": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",
      "integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk=",
      "dev": true
    },
    "ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "dev": true
    },
    "is-absolute-url": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",
      "integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY=",
      "dev": true
    },
    "is-accessor-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "is-arguments": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.0.4.tgz",
      "integrity": "sha512-xPh0Rmt8NE65sNzvyUmWgI1tz3mKq74lGA0mL8LYZcoIzKOzDh6HmrYm3d18k60nHerC8A9Km8kYu87zfSFnLA==",
      "dev": true
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
      "dev": true
    },
    "is-binary-path": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
      "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
      "dev": true,
      "requires": {
        "binary-extensions": "^1.0.0"
      }
    },
    "is-buffer": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.4.tgz",
      "integrity": "sha512-Kq1rokWXOPXWuaMAqZiJW4XxsmD9zGx9q4aePabbn3qCRGedtH7Cm+zV8WETitMfu1wdh+Rvd6w5egwSngUX2A=="
    },
    "is-callable": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.5.tgz",
      "integrity": "sha512-ESKv5sMCJB2jnHTWZ3O5itG+O128Hsus4K4Qh1h2/cgn2vbgnLSVqfV46AeJA9D5EeeLa9w81KUXMtn34zhX+Q==",
      "dev": true
    },
    "is-ci": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-1.2.1.tgz",
      "integrity": "sha512-s6tfsaQaQi3JNciBH6shVqEDvhGut0SUXr31ag8Pd8BBbVVlcGfWhpPmEOoM6RJ5TFhbypvf5yyRw/VXW1IiWg==",
      "dev": true,
      "requires": {
        "ci-info": "^1.5.0"
      }
    },
    "is-color-stop": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",
      "integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
      "dev": true,
      "requires": {
        "css-color-names": "^0.0.4",
        "hex-color-regex": "^1.1.0",
        "hsl-regex": "^1.0.0",
        "hsla-regex": "^1.0.0",
        "rgb-regex": "^1.0.1",
        "rgba-regex": "^1.0.0"
      }
    },
    "is-data-descriptor": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "is-date-object": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.2.tgz",
      "integrity": "sha512-USlDT524woQ08aoZFzh3/Z6ch9Y/EWXEHQ/AaRN0SkKq4t2Jw2R2339tSXmwuVoY7LLlBCbOIlx2myP/L5zk0g==",
      "dev": true
    },
    "is-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
      "dev": true,
      "requires": {
        "is-accessor-descriptor": "^0.1.6",
        "is-data-descriptor": "^0.1.4",
        "kind-of": "^5.0.0"
      },
      "dependencies": {
        "kind-of": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
          "dev": true
        }
      }
    },
    "is-directory": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",
      "integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=",
      "dev": true
    },
    "is-docker": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.1.1.tgz",
      "integrity": "sha512-ZOoqiXfEwtGknTiuDEy8pN2CfE3TxMHprvNer1mXiqwkOT77Rw3YVrUQ52EqAOU3QAWDQ+bQdx7HJzrv7LS2Hw==",
      "dev": true
    },
    "is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",
      "dev": true
    },
    "is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
      "dev": true,
      "requires": {
        "number-is-nan": "^1.0.0"
      }
    },
    "is-generator-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==",
      "dev": true
    },
    "is-glob": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
      "dev": true,
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-installed-globally": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.3.1.tgz",
      "integrity": "sha512-oiEcGoQbGc+3/iijAijrK2qFpkNoNjsHOm/5V5iaeydyrS/hnwaRCEgH5cpW0P3T1lSjV5piB7S5b5lEugNLhg==",
      "dev": true,
      "requires": {
        "global-dirs": "^2.0.1",
        "is-path-inside": "^3.0.1"
      },
      "dependencies": {
        "is-path-inside": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.2.tgz",
          "integrity": "sha512-/2UGPSgmtqwo1ktx8NDHjuPwZWmHhO+gj0f93EkhLB5RgW9RZevWYYlIkS6zePc6U2WpOdQYIwHe9YC4DWEBVg==",
          "dev": true
        }
      }
    },
    "is-npm": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-npm/-/is-npm-4.0.0.tgz",
      "integrity": "sha512-96ECIfh9xtDDlPylNPXhzjsykHsMJZ18ASpaWzQyBr4YRTcVjUvzaHayDAES2oU/3KpljhHUjtSRNiDwi0F0ig==",
      "dev": true
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true
    },
    "is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "dev": true
    },
    "is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true
    },
    "is-path-in-cwd": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-2.1.0.tgz",
      "integrity": "sha512-rNocXHgipO+rvnP6dk3zI20RpOtrAM/kzbB258Uw5BWr3TpXi861yzjo16Dn4hUox07iw5AyeMLHWsujkjzvRQ==",
      "dev": true,
      "requires": {
        "is-path-inside": "^2.1.0"
      }
    },
    "is-path-inside": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-2.1.0.tgz",
      "integrity": "sha512-wiyhTzfDWsvwAW53OBWF5zuvaOGlZ6PwYxAbPVDhpm+gM09xKQGjBq/8uYN12aDvMxnAnq3dxTyoSoRNmg5YFg==",
      "dev": true,
      "requires": {
        "path-is-inside": "^1.0.2"
      }
    },
    "is-plain-obj": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
      "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4=",
      "dev": true
    },
    "is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      }
    },
    "is-promise": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
      "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o=",
      "dev": true
    },
    "is-regex": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.5.tgz",
      "integrity": "sha512-vlKW17SNq44owv5AQR3Cq0bQPEb8+kF3UKZ2fiZNOWtztYE5i0CzCZxFDwO58qAOWtxdBRVO/V5Qin1wjCqFYQ==",
      "dev": true,
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-resolvable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==",
      "dev": true
    },
    "is-stream": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
      "dev": true
    },
    "is-svg": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-svg/-/is-svg-3.0.0.tgz",
      "integrity": "sha512-gi4iHK53LR2ujhLVVj+37Ykh9GLqYHX6JOVXbLAucaG/Cqw9xwdFOjDM2qeifLs1sF1npXXFvDu0r5HNgCMrzQ==",
      "dev": true,
      "requires": {
        "html-comment-regex": "^1.1.0"
      }
    },
    "is-symbol": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.3.tgz",
      "integrity": "sha512-OwijhaRSgqvhm/0ZdAcXNZt9lYdKFpcRDT5ULUuYXPoT794UNOdU+gpT6Rzo7b4V2HUl/op6GqY894AZwv9faQ==",
      "dev": true,
      "requires": {
        "has-symbols": "^1.0.1"
      }
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
    },
    "is-whitespace": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-whitespace/-/is-whitespace-0.3.0.tgz",
      "integrity": "sha1-Fjnssb4DauxppUy7QBz77XEUq38=",
      "dev": true
    },
    "is-windows": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==",
      "dev": true
    },
    "is-wsl": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.1.1.tgz",
      "integrity": "sha512-umZHcSrwlDHo2TGMXv0DZ8dIUGunZ2Iv68YZnrmCiBPkZ4aaOhtv7pXJKeki9k3qJ3RJr0cDyitcl5wEH3AYog==",
      "dev": true
    },
    "is-yarn-global": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
      "integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
      "dev": true
    },
    "isarray": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
      "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
      "dev": true
    },
    "isbinaryfile": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-4.0.5.tgz",
      "integrity": "sha512-Jvz0gpTh1AILHMCBUyqq7xv1ZOQrxTDwyp1/QUq1xFpOBvp4AH5uEobPePJht8KnBGqQIH7We6OR73mXsjG0cA==",
      "dev": true
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
      "dev": true
    },
    "isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
      "dev": true
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
    },
    "istanbul-lib-coverage": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
      "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==",
      "dev": true
    },
    "istanbul-lib-instrument": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.3.0.tgz",
      "integrity": "sha512-5nnIN4vo5xQZHdXno/YDXJ0G+I3dAm4XgzfSVTPLQpj/zAV2dV6Juy0yaf10/zrJOJeHoN3fraFe+XRq2bFVZA==",
      "dev": true,
      "requires": {
        "@babel/generator": "^7.4.0",
        "@babel/parser": "^7.4.3",
        "@babel/template": "^7.4.0",
        "@babel/traverse": "^7.4.3",
        "@babel/types": "^7.4.0",
        "istanbul-lib-coverage": "^2.0.5",
        "semver": "^6.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "istanbul-lib-report": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
      "integrity": "sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5yuydOLINXsfbus9ROw==",
      "dev": true,
      "requires": {
        "istanbul-lib-coverage": "^3.0.0",
        "make-dir": "^3.0.0",
        "supports-color": "^7.1.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "istanbul-lib-source-maps": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.0.tgz",
      "integrity": "sha512-c16LpFRkR8vQXyHZ5nLpY35JZtzj1PQY1iZmesUbf1FZHbIupcWfjgOXBY9YHkLEQ6puz1u4Dgj6qmU/DisrZg==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "istanbul-lib-coverage": "^3.0.0",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "istanbul-reports": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
      "integrity": "sha512-Vm9xwCiQ8t2cNNnckyeAV0UdxKpcQUz4nMxsBvIu8n2kmPSiyb5uaF/8LpmKr+yqL/MdOXaX2Nmdo4Qyxium9Q==",
      "dev": true,
      "requires": {
        "html-escaper": "^2.0.0",
        "istanbul-lib-report": "^3.0.0"
      }
    },
    "javascript-stringify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/javascript-stringify/-/javascript-stringify-2.0.1.tgz",
      "integrity": "sha512-yV+gqbd5vaOYjqlbk16EG89xB5udgjqQF3C5FAORDg4f/IS1Yc5ERCv5e/57yBcfJYw05V5JyIXabhwb75Xxow==",
      "dev": true
    },
    "jest": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest/-/jest-25.2.6.tgz",
      "integrity": "sha512-AA9U1qmYViBTfoKWzQBbBmck53Tsw8av7zRYdE4EUBU6r04mddPQaflpPBy/KC308HF7u8fLLxEJFt/LiFzYFQ==",
      "dev": true,
      "requires": {
        "@jest/core": "^25.2.6",
        "import-local": "^3.0.2",
        "jest-cli": "^25.2.6"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "import-local": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/import-local/-/import-local-3.0.2.tgz",
          "integrity": "sha512-vjL3+w0oulAVZ0hBHnxa/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9XfJTOoHwU0B71S557gA==",
          "dev": true,
          "requires": {
            "pkg-dir": "^4.2.0",
            "resolve-cwd": "^3.0.0"
          }
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "jest-cli": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-25.2.6.tgz",
          "integrity": "sha512-i31HkagK5veFOUg1ZqxxfP+ZeKDggmI5qZhK6/Cp0ohuaKFQdtS43AqqnXg13JWKCV0E38Nu/K0W4NsFlXLNEA==",
          "dev": true,
          "requires": {
            "@jest/core": "^25.2.6",
            "@jest/test-result": "^25.2.6",
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "exit": "^0.1.2",
            "import-local": "^3.0.2",
            "is-ci": "^2.0.0",
            "jest-config": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-validate": "^25.2.6",
            "prompts": "^2.0.1",
            "realpath-native": "^2.0.0",
            "yargs": "^15.3.1"
          }
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "pkg-dir": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
          "dev": true,
          "requires": {
            "find-up": "^4.0.0"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "resolve-cwd": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
          "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
          "dev": true,
          "requires": {
            "resolve-from": "^5.0.0"
          }
        },
        "resolve-from": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "yargs": {
          "version": "15.3.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.3.1.tgz",
          "integrity": "sha512-92O1HWEjw27sBfgmXiixJWT5hRBp2eobqXicLtPBIDBhYB+1HpwZlXmbW2luivBJHBzki+7VyCLRtAkScbTBQA==",
          "dev": true,
          "requires": {
            "cliui": "^6.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^4.1.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^4.2.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^18.1.1"
          }
        },
        "yargs-parser": {
          "version": "18.1.2",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.2.tgz",
          "integrity": "sha512-hlIPNR3IzC1YuL1c2UwwDKpXlNFBqD1Fswwh1khz5+d8Cq/8yc/Mn0i+rQXduu8hcrFKvO7Eryk+09NecTQAAQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "jest-changed-files": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-25.2.6.tgz",
      "integrity": "sha512-F7l2m5n55jFnJj4ItB9XbAlgO+6umgvz/mdK76BfTd2NGkvGf9x96hUXP/15a1K0k14QtVOoutwpRKl360msvg==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "execa": "^3.2.0",
        "throat": "^5.0.0"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "cross-spawn": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.1.tgz",
          "integrity": "sha512-u7v4o84SwFpD32Z8IIcPZ6z1/ie24O6RU3RbtL5Y316l3KuHVPx9ItBgWQ6VlfAFnRnTtMUrsQ9MUUTuEZjogg==",
          "dev": true,
          "requires": {
            "path-key": "^3.1.0",
            "shebang-command": "^2.0.0",
            "which": "^2.0.1"
          }
        },
        "execa": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/execa/-/execa-3.4.0.tgz",
          "integrity": "sha512-r9vdGQk4bmCuK1yKQu1KTwcT2zwfWdbdaXfCtAh+5nU/4fSX+JAb7vZGvI5naJrQlvONrEB20jeruESI69530g==",
          "dev": true,
          "requires": {
            "cross-spawn": "^7.0.0",
            "get-stream": "^5.0.0",
            "human-signals": "^1.1.1",
            "is-stream": "^2.0.0",
            "merge-stream": "^2.0.0",
            "npm-run-path": "^4.0.0",
            "onetime": "^5.1.0",
            "p-finally": "^2.0.0",
            "signal-exit": "^3.0.2",
            "strip-final-newline": "^2.0.0"
          }
        },
        "get-stream": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
          "integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
          "dev": true,
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-stream": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
          "integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
          "dev": true
        },
        "npm-run-path": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
          "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
          "dev": true,
          "requires": {
            "path-key": "^3.0.0"
          }
        },
        "p-finally": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-2.0.1.tgz",
          "integrity": "sha512-vpm09aKwq6H9phqRQzecoDpD8TmVyGw70qmWlyq5onxY7tqyTTFVvxMykxQSQKILBSFlbXpypIw2T1Ml7+DDtw==",
          "dev": true
        },
        "path-key": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
          "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
          "dev": true
        },
        "shebang-command": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
          "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
          "dev": true,
          "requires": {
            "shebang-regex": "^3.0.0"
          }
        },
        "shebang-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
          "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        }
      }
    },
    "jest-config": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-25.2.6.tgz",
      "integrity": "sha512-R82bUaOHU/2nPSXmvrwLZtQRRr5x1V7qEXE0i4Pybv55XDqVl2/yKNBkYPneG3uSL3n5f6EJeP0/9HNxQu/SZg==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.1.0",
        "@jest/test-sequencer": "^25.2.6",
        "@jest/types": "^25.2.6",
        "babel-jest": "^25.2.6",
        "chalk": "^3.0.0",
        "deepmerge": "^4.2.2",
        "glob": "^7.1.1",
        "jest-environment-jsdom": "^25.2.6",
        "jest-environment-node": "^25.2.6",
        "jest-get-type": "^25.2.6",
        "jest-jasmine2": "^25.2.6",
        "jest-regex-util": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "jest-util": "^25.2.6",
        "jest-validate": "^25.2.6",
        "micromatch": "^4.0.2",
        "pretty-format": "^25.2.6",
        "realpath-native": "^2.0.0"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "deepmerge": {
          "version": "4.2.2",
          "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
          "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-diff": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-24.9.0.tgz",
      "integrity": "sha512-qMfrTs8AdJE2iqrTp0hzh7kTd2PQWrsFyj9tORoKmu32xjPjeE4NyjVRDz8ybYwqS2ik8N4hsIpiVTyFeo2lBQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.1",
        "diff-sequences": "^24.9.0",
        "jest-get-type": "^24.9.0",
        "pretty-format": "^24.9.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jest-docblock": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-25.2.6.tgz",
      "integrity": "sha512-VAYrljEq0upq0oERfIaaNf28gC6p9gORndhHstCYF8NWGNQJnzoaU//S475IxfWMk4UjjVmS9rJKLe5Jjjbixw==",
      "dev": true,
      "requires": {
        "detect-newline": "^3.0.0"
      }
    },
    "jest-each": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-25.2.6.tgz",
      "integrity": "sha512-OgQ01VINaRD6idWJOhCYwUc5EcgHBiFlJuw+ON2VgYr7HLtMFyCcuo+3mmBvuLUH4QudREZN7cDCZviknzsaJQ==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "chalk": "^3.0.0",
        "jest-get-type": "^25.2.6",
        "jest-util": "^25.2.6",
        "pretty-format": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-environment-jsdom": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-25.2.6.tgz",
      "integrity": "sha512-/o7MZIhGmLGIEG5j7r5B5Az0umWLCHU+F5crwfbm0BzC4ybHTJZOQTFQWhohBg+kbTCNOuftMcqHlVkVduJCQQ==",
      "dev": true,
      "requires": {
        "@jest/environment": "^25.2.6",
        "@jest/fake-timers": "^25.2.6",
        "@jest/types": "^25.2.6",
        "jest-mock": "^25.2.6",
        "jest-util": "^25.2.6",
        "jsdom": "^15.2.1"
      },
      "dependencies": {
        "@jest/environment": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-25.2.6.tgz",
          "integrity": "sha512-17WIw+wCb9drRNFw1hi8CHah38dXVdOk7ga9exThhGtXlZ9mK8xH4DjSB9uGDGXIWYSHmrxoyS6KJ7ywGr7bzg==",
          "dev": true,
          "requires": {
            "@jest/fake-timers": "^25.2.6",
            "@jest/types": "^25.2.6",
            "jest-mock": "^25.2.6"
          }
        },
        "@jest/fake-timers": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-25.2.6.tgz",
          "integrity": "sha512-A6qtDIA2zg/hVgUJJYzQSHFBIp25vHdSxW/s4XmTJAYxER6eL0NQdQhe4+232uUSviKitubHGXXirt5M7blPiA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "jest-message-util": "^25.2.6",
            "jest-mock": "^25.2.6",
            "jest-util": "^25.2.6",
            "lolex": "^5.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-mock": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-25.2.6.tgz",
          "integrity": "sha512-vc4nibavi2RGPdj/MyZy/azuDjZhpYZLvpfgq1fxkhbyTpKVdG7CgmRVKJ7zgLpY5kuMjTzDYA6QnRwhsCU+tA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6"
          }
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-environment-jsdom-fifteen": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/jest-environment-jsdom-fifteen/-/jest-environment-jsdom-fifteen-1.0.2.tgz",
      "integrity": "sha512-nfrnAfwklE1872LIB31HcjM65cWTh1wzvMSp10IYtPJjLDUbTTvDpajZgIxUnhRmzGvogdHDayCIlerLK0OBBg==",
      "dev": true,
      "requires": {
        "@jest/environment": "^24.3.0",
        "@jest/fake-timers": "^24.3.0",
        "@jest/types": "^24.3.0",
        "jest-mock": "^24.0.0",
        "jest-util": "^24.0.0",
        "jsdom": "^15.2.1"
      },
      "dependencies": {
        "cssom": {
          "version": "0.4.4",
          "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.4.4.tgz",
          "integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR/NS6otuzveI7+7BBq3SjBS2mw==",
          "dev": true
        },
        "cssstyle": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-2.2.0.tgz",
          "integrity": "sha512-sEb3XFPx3jNnCAMtqrXPDeSgQr+jojtCeNf8cvMNMh1cG970+lljssvQDzPq6lmmJu2Vhqood/gtEomBiHOGnA==",
          "dev": true,
          "requires": {
            "cssom": "~0.3.6"
          },
          "dependencies": {
            "cssom": {
              "version": "0.3.8",
              "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
              "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
              "dev": true
            }
          }
        },
        "jsdom": {
          "version": "15.2.1",
          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-15.2.1.tgz",
          "integrity": "sha512-fAl1W0/7T2G5vURSyxBzrJ1LSdQn6Tr5UX/xD4PXDx/PDgwygedfW6El/KIj3xJ7FU61TTYnc/l/B7P49Eqt6g==",
          "dev": true,
          "requires": {
            "abab": "^2.0.0",
            "acorn": "^7.1.0",
            "acorn-globals": "^4.3.2",
            "array-equal": "^1.0.0",
            "cssom": "^0.4.1",
            "cssstyle": "^2.0.0",
            "data-urls": "^1.1.0",
            "domexception": "^1.0.1",
            "escodegen": "^1.11.1",
            "html-encoding-sniffer": "^1.0.2",
            "nwsapi": "^2.2.0",
            "parse5": "5.1.0",
            "pn": "^1.1.0",
            "request": "^2.88.0",
            "request-promise-native": "^1.0.7",
            "saxes": "^3.1.9",
            "symbol-tree": "^3.2.2",
            "tough-cookie": "^3.0.1",
            "w3c-hr-time": "^1.0.1",
            "w3c-xmlserializer": "^1.1.2",
            "webidl-conversions": "^4.0.2",
            "whatwg-encoding": "^1.0.5",
            "whatwg-mimetype": "^2.3.0",
            "whatwg-url": "^7.0.0",
            "ws": "^7.0.0",
            "xml-name-validator": "^3.0.0"
          }
        },
        "parse5": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",
          "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ==",
          "dev": true
        },
        "tough-cookie": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-3.0.1.tgz",
          "integrity": "sha512-yQyJ0u4pZsv9D4clxO69OEjLWYw+jbgspjTue4lTQZLfV0c5l1VmK2y1JK8E9ahdpltPOaAThPcp5nKPUgSnsg==",
          "dev": true,
          "requires": {
            "ip-regex": "^2.1.0",
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "whatwg-url": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
          "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
          "dev": true,
          "requires": {
            "lodash.sortby": "^4.7.0",
            "tr46": "^1.0.1",
            "webidl-conversions": "^4.0.2"
          }
        },
        "ws": {
          "version": "7.2.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.2.1.tgz",
          "integrity": "sha512-sucePNSafamSKoOqoNfBd8V0StlkzJKL2ZAhGQinCfNQ+oacw+Pk7lcdAElecBF2VkLNZRiIb5Oi1Q5lVUVt2A==",
          "dev": true
        }
      }
    },
    "jest-environment-node": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-25.2.6.tgz",
      "integrity": "sha512-D1Ihj14fxZiMHGeTtU/LunhzSI+UeBvlr/rcXMTNyRMUMSz2PEhuqGbB78brBY6Dk3FhJDk7Ta+8reVaGjLWhA==",
      "dev": true,
      "requires": {
        "@jest/environment": "^25.2.6",
        "@jest/fake-timers": "^25.2.6",
        "@jest/types": "^25.2.6",
        "jest-mock": "^25.2.6",
        "jest-util": "^25.2.6",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "@jest/environment": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-25.2.6.tgz",
          "integrity": "sha512-17WIw+wCb9drRNFw1hi8CHah38dXVdOk7ga9exThhGtXlZ9mK8xH4DjSB9uGDGXIWYSHmrxoyS6KJ7ywGr7bzg==",
          "dev": true,
          "requires": {
            "@jest/fake-timers": "^25.2.6",
            "@jest/types": "^25.2.6",
            "jest-mock": "^25.2.6"
          }
        },
        "@jest/fake-timers": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-25.2.6.tgz",
          "integrity": "sha512-A6qtDIA2zg/hVgUJJYzQSHFBIp25vHdSxW/s4XmTJAYxER6eL0NQdQhe4+232uUSviKitubHGXXirt5M7blPiA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "jest-message-util": "^25.2.6",
            "jest-mock": "^25.2.6",
            "jest-util": "^25.2.6",
            "lolex": "^5.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-mock": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-25.2.6.tgz",
          "integrity": "sha512-vc4nibavi2RGPdj/MyZy/azuDjZhpYZLvpfgq1fxkhbyTpKVdG7CgmRVKJ7zgLpY5kuMjTzDYA6QnRwhsCU+tA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6"
          }
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-get-type": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-24.9.0.tgz",
      "integrity": "sha512-lUseMzAley4LhIcpSP9Jf+fTrQ4a1yHQwLNeeVa2cEmbCGeoZAtYPOIv8JaxLD/sUpKxetKGP+gsHl8f8TSj8Q==",
      "dev": true
    },
    "jest-haste-map": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-24.9.0.tgz",
      "integrity": "sha512-kfVFmsuWui2Sj1Rp1AJ4D9HqJwE4uwTlS/vO+eRUaMmd54BFpli2XhMQnPC2k4cHFVbB2Q2C+jtI1AGLgEnCjQ==",
      "dev": true,
      "requires": {
        "@jest/types": "^24.9.0",
        "anymatch": "^2.0.0",
        "fb-watchman": "^2.0.0",
        "fsevents": "^1.2.7",
        "graceful-fs": "^4.1.15",
        "invariant": "^2.2.4",
        "jest-serializer": "^24.9.0",
        "jest-util": "^24.9.0",
        "jest-worker": "^24.9.0",
        "micromatch": "^3.1.10",
        "sane": "^4.0.3",
        "walker": "^1.0.7"
      }
    },
    "jest-jasmine2": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-25.2.6.tgz",
      "integrity": "sha512-0429YtThQjol9EElh0mLMsfMBB++yFCjWuGv3xNK4QPrvralJRlpHbuhfSVaOsHC91RrRBbKfM7jSA+FiVG+Jg==",
      "dev": true,
      "requires": {
        "@babel/traverse": "^7.1.0",
        "@jest/environment": "^25.2.6",
        "@jest/source-map": "^25.2.6",
        "@jest/test-result": "^25.2.6",
        "@jest/types": "^25.2.6",
        "chalk": "^3.0.0",
        "co": "^4.6.0",
        "expect": "^25.2.6",
        "is-generator-fn": "^2.0.0",
        "jest-each": "^25.2.6",
        "jest-matcher-utils": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-runtime": "^25.2.6",
        "jest-snapshot": "^25.2.6",
        "jest-util": "^25.2.6",
        "pretty-format": "^25.2.6",
        "throat": "^5.0.0"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/environment": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-25.2.6.tgz",
          "integrity": "sha512-17WIw+wCb9drRNFw1hi8CHah38dXVdOk7ga9exThhGtXlZ9mK8xH4DjSB9uGDGXIWYSHmrxoyS6KJ7ywGr7bzg==",
          "dev": true,
          "requires": {
            "@jest/fake-timers": "^25.2.6",
            "@jest/types": "^25.2.6",
            "jest-mock": "^25.2.6"
          }
        },
        "@jest/fake-timers": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-25.2.6.tgz",
          "integrity": "sha512-A6qtDIA2zg/hVgUJJYzQSHFBIp25vHdSxW/s4XmTJAYxER6eL0NQdQhe4+232uUSviKitubHGXXirt5M7blPiA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "jest-message-util": "^25.2.6",
            "jest-mock": "^25.2.6",
            "jest-util": "^25.2.6",
            "lolex": "^5.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-mock": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-25.2.6.tgz",
          "integrity": "sha512-vc4nibavi2RGPdj/MyZy/azuDjZhpYZLvpfgq1fxkhbyTpKVdG7CgmRVKJ7zgLpY5kuMjTzDYA6QnRwhsCU+tA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6"
          }
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-leak-detector": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-25.2.6.tgz",
      "integrity": "sha512-n+aJUM+j/x1kIaPVxzerMqhAUuqTU1PL5kup46rXh+l9SP8H6LqECT/qD1GrnylE1L463/0StSPkH4fUpkuEjA==",
      "dev": true,
      "requires": {
        "jest-get-type": "^25.2.6",
        "pretty-format": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-matcher-utils": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-25.2.6.tgz",
      "integrity": "sha512-+6IbC98ZBw3X7hsfUvt+7VIYBdI0FEvhSBjWo9XTHOc1KAAHDsrSHdeyHH/Su0r/pf4OEGuWRRLPnjkhS2S19A==",
      "dev": true,
      "requires": {
        "chalk": "^3.0.0",
        "jest-diff": "^25.2.6",
        "jest-get-type": "^25.2.6",
        "pretty-format": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "diff-sequences": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-25.2.6.tgz",
          "integrity": "sha512-Hq8o7+6GaZeoFjtpgvRBUknSXNeJiCx7V9Fr94ZMljNiCr9n9L8H8aJqgWOQiDDGdyn29fRNcDdRVJ5fdyihfg==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-diff": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-25.2.6.tgz",
          "integrity": "sha512-KuadXImtRghTFga+/adnNrv9s61HudRMR7gVSbP35UKZdn4IK2/0N0PpGZIqtmllK9aUyye54I3nu28OYSnqOg==",
          "dev": true,
          "requires": {
            "chalk": "^3.0.0",
            "diff-sequences": "^25.2.6",
            "jest-get-type": "^25.2.6",
            "pretty-format": "^25.2.6"
          }
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-message-util": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-24.9.0.tgz",
      "integrity": "sha512-oCj8FiZ3U0hTP4aSui87P4L4jC37BtQwUMqk+zk/b11FR19BJDeZsZAvIHutWnmtw7r85UmR3CEWZ0HWU2mAlw==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "@jest/test-result": "^24.9.0",
        "@jest/types": "^24.9.0",
        "@types/stack-utils": "^1.0.1",
        "chalk": "^2.0.1",
        "micromatch": "^3.1.10",
        "slash": "^2.0.0",
        "stack-utils": "^1.0.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jest-mock": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-24.9.0.tgz",
      "integrity": "sha512-3BEYN5WbSq9wd+SyLDES7AHnjH9A/ROBwmz7l2y+ol+NtSFO8DYiEBzoO1CeFc9a8DYy10EO4dDFVv/wN3zl1w==",
      "dev": true,
      "requires": {
        "@jest/types": "^24.9.0"
      }
    },
    "jest-pnp-resolver": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.1.tgz",
      "integrity": "sha512-pgFw2tm54fzgYvc/OHrnysABEObZCUNFnhjoRjaVOCN8NYc032/gVjPaHD4Aq6ApkSieWtfKAFQtmDKAmhupnQ==",
      "dev": true
    },
    "jest-regex-util": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-24.9.0.tgz",
      "integrity": "sha512-05Cmb6CuxaA+Ys6fjr3PhvV3bGQmO+2p2La4hFbU+W5uOc479f7FdLXUWXw4pYMAhhSZIuKHwSXSu6CsSBAXQA==",
      "dev": true
    },
    "jest-resolve": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-25.2.6.tgz",
      "integrity": "sha512-7O61GVdcAXkLz/vNGKdF+00A80/fKEAA47AEXVNcZwj75vEjPfZbXDaWFmAQCyXj4oo9y9dC9D+CLA11t8ieGw==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "browser-resolve": "^1.11.3",
        "chalk": "^3.0.0",
        "jest-pnp-resolver": "^1.2.1",
        "realpath-native": "^2.0.0",
        "resolve": "^1.15.1"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-resolve-dependencies": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-25.2.6.tgz",
      "integrity": "sha512-SJeRBCDZzXVy/DjbwBH3KzjxPw5Q/j3foDkWZYu2GIa6SHqy34qVaw1mL7SJg9r6GApwjIoKP6fGwU6c/afg0A==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "jest-regex-util": "^25.2.6",
        "jest-snapshot": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-runner": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-25.2.6.tgz",
      "integrity": "sha512-sN45p3jxvpsG7UjeQFqyC+JR5+THLrIT9oXAHwQQIDWfpmZBFko2RROn1fvdQNWhuPzDeUf/oHykbhNRGo9eWg==",
      "dev": true,
      "requires": {
        "@jest/console": "^25.2.6",
        "@jest/environment": "^25.2.6",
        "@jest/test-result": "^25.2.6",
        "@jest/types": "^25.2.6",
        "chalk": "^3.0.0",
        "exit": "^0.1.2",
        "graceful-fs": "^4.2.3",
        "jest-config": "^25.2.6",
        "jest-docblock": "^25.2.6",
        "jest-haste-map": "^25.2.6",
        "jest-jasmine2": "^25.2.6",
        "jest-leak-detector": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "jest-runtime": "^25.2.6",
        "jest-util": "^25.2.6",
        "jest-worker": "^25.2.6",
        "source-map-support": "^0.5.6",
        "throat": "^5.0.0"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/environment": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-25.2.6.tgz",
          "integrity": "sha512-17WIw+wCb9drRNFw1hi8CHah38dXVdOk7ga9exThhGtXlZ9mK8xH4DjSB9uGDGXIWYSHmrxoyS6KJ7ywGr7bzg==",
          "dev": true,
          "requires": {
            "@jest/fake-timers": "^25.2.6",
            "@jest/types": "^25.2.6",
            "jest-mock": "^25.2.6"
          }
        },
        "@jest/fake-timers": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-25.2.6.tgz",
          "integrity": "sha512-A6qtDIA2zg/hVgUJJYzQSHFBIp25vHdSxW/s4XmTJAYxER6eL0NQdQhe4+232uUSviKitubHGXXirt5M7blPiA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "jest-message-util": "^25.2.6",
            "jest-mock": "^25.2.6",
            "jest-util": "^25.2.6",
            "lolex": "^5.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-mock": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-25.2.6.tgz",
          "integrity": "sha512-vc4nibavi2RGPdj/MyZy/azuDjZhpYZLvpfgq1fxkhbyTpKVdG7CgmRVKJ7zgLpY5kuMjTzDYA6QnRwhsCU+tA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6"
          }
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "source-map-support": {
          "version": "0.5.16",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.16.tgz",
          "integrity": "sha512-efyLRJDr68D9hBBNIPWFjhpFzURh+KJykQwvMyW5UiZzYwoF6l4YMMDIJJEyFWxWCqfyxLzz6tSfUFR+kXXsVQ==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "source-map": "^0.6.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        }
      }
    },
    "jest-runtime": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-25.2.6.tgz",
      "integrity": "sha512-u0iNjO7VvI46341igiQP/bnm1TwdXV6IjVEo7DMVqRbTDTz4teTNOUXChuSMdoyjQcfJ3zmI7/jVktUpjnZhYw==",
      "dev": true,
      "requires": {
        "@jest/console": "^25.2.6",
        "@jest/environment": "^25.2.6",
        "@jest/source-map": "^25.2.6",
        "@jest/test-result": "^25.2.6",
        "@jest/transform": "^25.2.6",
        "@jest/types": "^25.2.6",
        "@types/yargs": "^15.0.0",
        "chalk": "^3.0.0",
        "collect-v8-coverage": "^1.0.0",
        "exit": "^0.1.2",
        "glob": "^7.1.3",
        "graceful-fs": "^4.2.3",
        "jest-config": "^25.2.6",
        "jest-haste-map": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-mock": "^25.2.6",
        "jest-regex-util": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "jest-snapshot": "^25.2.6",
        "jest-util": "^25.2.6",
        "jest-validate": "^25.2.6",
        "realpath-native": "^2.0.0",
        "slash": "^3.0.0",
        "strip-bom": "^4.0.0",
        "yargs": "^15.3.1"
      },
      "dependencies": {
        "@jest/console": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/console/-/console-25.2.6.tgz",
          "integrity": "sha512-bGp+0PicZVCEhb+ifnW9wpKWONNdkhtJsRE7ap729hiAfTvCN6VhGx0s/l/V/skA2pnyqq+N/7xl9ZWfykDpsg==",
          "dev": true,
          "requires": {
            "@jest/source-map": "^25.2.6",
            "chalk": "^3.0.0",
            "jest-util": "^25.2.6",
            "slash": "^3.0.0"
          }
        },
        "@jest/environment": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-25.2.6.tgz",
          "integrity": "sha512-17WIw+wCb9drRNFw1hi8CHah38dXVdOk7ga9exThhGtXlZ9mK8xH4DjSB9uGDGXIWYSHmrxoyS6KJ7ywGr7bzg==",
          "dev": true,
          "requires": {
            "@jest/fake-timers": "^25.2.6",
            "@jest/types": "^25.2.6",
            "jest-mock": "^25.2.6"
          }
        },
        "@jest/fake-timers": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-25.2.6.tgz",
          "integrity": "sha512-A6qtDIA2zg/hVgUJJYzQSHFBIp25vHdSxW/s4XmTJAYxER6eL0NQdQhe4+232uUSviKitubHGXXirt5M7blPiA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "jest-message-util": "^25.2.6",
            "jest-mock": "^25.2.6",
            "jest-util": "^25.2.6",
            "lolex": "^5.0.0"
          }
        },
        "@jest/source-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-25.2.6.tgz",
          "integrity": "sha512-VuIRZF8M2zxYFGTEhkNSvQkUKafQro4y+mwUxy5ewRqs5N/ynSFUODYp3fy1zCnbCMy1pz3k+u57uCqx8QRSQQ==",
          "dev": true,
          "requires": {
            "callsites": "^3.0.0",
            "graceful-fs": "^4.2.3",
            "source-map": "^0.6.0"
          }
        },
        "@jest/test-result": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-25.2.6.tgz",
          "integrity": "sha512-gmGgcF4qz/pkBzyfJuVHo2DA24kIgVQ5Pf/VpW4QbyMLSegi8z+9foSZABfIt5se6k0fFj/3p/vrQXdaOgit0w==",
          "dev": true,
          "requires": {
            "@jest/console": "^25.2.6",
            "@jest/types": "^25.2.6",
            "@types/istanbul-lib-coverage": "^2.0.0",
            "collect-v8-coverage": "^1.0.0"
          }
        },
        "@jest/transform": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-25.2.6.tgz",
          "integrity": "sha512-rZnjCjZf9avPOf9q/w9RUZ9Uc29JmB53uIXNJmNz04QbDMD5cR/VjfikiMKajBsXe2vnFl5sJ4RTt+9HPicauQ==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.1.0",
            "@jest/types": "^25.2.6",
            "babel-plugin-istanbul": "^6.0.0",
            "chalk": "^3.0.0",
            "convert-source-map": "^1.4.0",
            "fast-json-stable-stringify": "^2.0.0",
            "graceful-fs": "^4.2.3",
            "jest-haste-map": "^25.2.6",
            "jest-regex-util": "^25.2.6",
            "jest-util": "^25.2.6",
            "micromatch": "^4.0.2",
            "pirates": "^4.0.1",
            "realpath-native": "^2.0.0",
            "slash": "^3.0.0",
            "source-map": "^0.6.1",
            "write-file-atomic": "^3.0.0"
          }
        },
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "babel-plugin-istanbul": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.0.0.tgz",
          "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE/QtHmqtP8SWlTENqbK8GCSQ==",
          "dev": true,
          "requires": {
            "@babel/helper-plugin-utils": "^7.0.0",
            "@istanbuljs/load-nyc-config": "^1.0.0",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-instrument": "^4.0.0",
            "test-exclude": "^6.0.0"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "cliui": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
          "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
          "dev": true,
          "requires": {
            "string-width": "^4.2.0",
            "strip-ansi": "^6.0.0",
            "wrap-ansi": "^6.2.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "fsevents": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
          "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
          "dev": true,
          "optional": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "istanbul-lib-coverage": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
          "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
          "dev": true
        },
        "istanbul-lib-instrument": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.1.tgz",
          "integrity": "sha512-imIchxnodll7pvQBYOqUu88EufLCU56LMeFPZZM/fJZ1irYcYdqroaV+ACK1Ila8ls09iEYArp+nqyC6lW1Vfg==",
          "dev": true,
          "requires": {
            "@babel/core": "^7.7.5",
            "@babel/parser": "^7.7.5",
            "@babel/template": "^7.7.4",
            "@babel/traverse": "^7.7.4",
            "@istanbuljs/schema": "^0.1.2",
            "istanbul-lib-coverage": "^3.0.0",
            "semver": "^6.3.0"
          }
        },
        "jest-haste-map": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-25.2.6.tgz",
          "integrity": "sha512-nom0+fnY8jwzelSDQnrqaKAcDZczYQvMEwcBjeL3PQ4MlcsqeB7dmrsAniUw/9eLkngT5DE6FhnenypilQFsgA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "anymatch": "^3.0.3",
            "fb-watchman": "^2.0.0",
            "fsevents": "^2.1.2",
            "graceful-fs": "^4.2.3",
            "jest-serializer": "^25.2.6",
            "jest-util": "^25.2.6",
            "jest-worker": "^25.2.6",
            "micromatch": "^4.0.2",
            "sane": "^4.0.3",
            "walker": "^1.0.7",
            "which": "^2.0.2"
          }
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "jest-mock": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-25.2.6.tgz",
          "integrity": "sha512-vc4nibavi2RGPdj/MyZy/azuDjZhpYZLvpfgq1fxkhbyTpKVdG7CgmRVKJ7zgLpY5kuMjTzDYA6QnRwhsCU+tA==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6"
          }
        },
        "jest-regex-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-25.2.6.tgz",
          "integrity": "sha512-KQqf7a0NrtCkYmZZzodPftn7fL1cq3GQAFVMn5Hg8uKx/fIenLEobNanUxb7abQ1sjADHBseG/2FGpsv/wr+Qw==",
          "dev": true
        },
        "jest-serializer": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-25.2.6.tgz",
          "integrity": "sha512-RMVCfZsezQS2Ww4kB5HJTMaMJ0asmC0BHlnobQC6yEtxiFKIxohFA4QSXSabKwSggaNkqxn6Z2VwdFCjhUWuiQ==",
          "dev": true
        },
        "jest-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-25.2.6.tgz",
          "integrity": "sha512-gpXy0H5ymuQ0x2qgl1zzHg7LYHZYUmDEq6F7lhHA8M0eIwDB2WteOcCnQsohl9c/vBKZ3JF2r4EseipCZz3s4Q==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "chalk": "^3.0.0",
            "is-ci": "^2.0.0",
            "make-dir": "^3.0.0"
          }
        },
        "jest-worker": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.6.tgz",
          "integrity": "sha512-FJn9XDUSxcOR4cwDzRfL1z56rUofNTFs539FGASpd50RHdb6EVkhxQqktodW2mI49l+W3H+tFJDotCHUQF6dmA==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "realpath-native": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-2.0.0.tgz",
          "integrity": "sha512-v1SEYUOXXdbBZK8ZuNgO4TBjamPsiSgcFr0aP+tEKpQZK8vooEUqV6nm6Cv502mX4NF2EfsnVqtNAHG+/6Ur1Q==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "test-exclude": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
          "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
          "dev": true,
          "requires": {
            "@istanbuljs/schema": "^0.1.2",
            "glob": "^7.1.4",
            "minimatch": "^3.0.4"
          }
        },
        "which": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
          "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "wrap-ansi": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
          "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.0.0",
            "string-width": "^4.1.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "write-file-atomic": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
          "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
          "dev": true,
          "requires": {
            "imurmurhash": "^0.1.4",
            "is-typedarray": "^1.0.0",
            "signal-exit": "^3.0.2",
            "typedarray-to-buffer": "^3.1.5"
          }
        },
        "yargs": {
          "version": "15.3.1",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.3.1.tgz",
          "integrity": "sha512-92O1HWEjw27sBfgmXiixJWT5hRBp2eobqXicLtPBIDBhYB+1HpwZlXmbW2luivBJHBzki+7VyCLRtAkScbTBQA==",
          "dev": true,
          "requires": {
            "cliui": "^6.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^4.1.0",
            "get-caller-file": "^2.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^4.2.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^18.1.1"
          }
        },
        "yargs-parser": {
          "version": "18.1.2",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.2.tgz",
          "integrity": "sha512-hlIPNR3IzC1YuL1c2UwwDKpXlNFBqD1Fswwh1khz5+d8Cq/8yc/Mn0i+rQXduu8hcrFKvO7Eryk+09NecTQAAQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "jest-serializer": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.9.0.tgz",
      "integrity": "sha512-DxYipDr8OvfrKH3Kel6NdED3OXxjvxXZ1uIY2I9OFbGg+vUkkg7AGvi65qbhbWNPvDckXmzMPbK3u3HaDO49bQ==",
      "dev": true
    },
    "jest-serializer-vue": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/jest-serializer-vue/-/jest-serializer-vue-2.0.2.tgz",
      "integrity": "sha1-sjjvKGNX7GtIBCG9RxRQUJh9WbM=",
      "dev": true,
      "requires": {
        "pretty": "2.0.0"
      }
    },
    "jest-snapshot": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-25.2.6.tgz",
      "integrity": "sha512-Zw/Ba6op5zInjPHoA2xGUrCw1G/iTHOGMhV02PzlrWhF9uTl2/jjk/bpOMkPaW8EyylmQbjQ2oj4jCfYwpDKng==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.0.0",
        "@jest/types": "^25.2.6",
        "@types/prettier": "^1.19.0",
        "chalk": "^3.0.0",
        "expect": "^25.2.6",
        "jest-diff": "^25.2.6",
        "jest-get-type": "^25.2.6",
        "jest-matcher-utils": "^25.2.6",
        "jest-message-util": "^25.2.6",
        "jest-resolve": "^25.2.6",
        "make-dir": "^3.0.0",
        "natural-compare": "^1.4.0",
        "pretty-format": "^25.2.6",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "diff-sequences": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-25.2.6.tgz",
          "integrity": "sha512-Hq8o7+6GaZeoFjtpgvRBUknSXNeJiCx7V9Fr94ZMljNiCr9n9L8H8aJqgWOQiDDGdyn29fRNcDdRVJ5fdyihfg==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-diff": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-25.2.6.tgz",
          "integrity": "sha512-KuadXImtRghTFga+/adnNrv9s61HudRMR7gVSbP35UKZdn4IK2/0N0PpGZIqtmllK9aUyye54I3nu28OYSnqOg==",
          "dev": true,
          "requires": {
            "chalk": "^3.0.0",
            "diff-sequences": "^25.2.6",
            "jest-get-type": "^25.2.6",
            "pretty-format": "^25.2.6"
          }
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "jest-message-util": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-25.2.6.tgz",
          "integrity": "sha512-Hgg5HbOssSqOuj+xU1mi7m3Ti2nwSQJQf/kxEkrz2r2rp2ZLO1pMeKkz2WiDUWgSR+APstqz0uMFcE5yc0qdcg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "@jest/types": "^25.2.6",
            "@types/stack-utils": "^1.0.1",
            "chalk": "^3.0.0",
            "micromatch": "^4.0.2",
            "slash": "^3.0.0",
            "stack-utils": "^1.0.1"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-transform-stub": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/jest-transform-stub/-/jest-transform-stub-2.0.0.tgz",
      "integrity": "sha512-lspHaCRx/mBbnm3h4uMMS3R5aZzMwyNpNIJLXj4cEsV0mIUtS4IjYJLSoyjRCtnxb6RIGJ4NL2quZzfIeNhbkg==",
      "dev": true
    },
    "jest-util": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-24.9.0.tgz",
      "integrity": "sha512-x+cZU8VRmOJxbA1K5oDBdxQmdq0OIdADarLxk0Mq+3XS4jgvhG/oKGWcIDCtPG0HgjxOYvF+ilPJQsAyXfbNOg==",
      "dev": true,
      "requires": {
        "@jest/console": "^24.9.0",
        "@jest/fake-timers": "^24.9.0",
        "@jest/source-map": "^24.9.0",
        "@jest/test-result": "^24.9.0",
        "@jest/types": "^24.9.0",
        "callsites": "^3.0.0",
        "chalk": "^2.0.1",
        "graceful-fs": "^4.1.15",
        "is-ci": "^2.0.0",
        "mkdirp": "^0.5.1",
        "slash": "^2.0.0",
        "source-map": "^0.6.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "slash": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
          "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jest-validate": {
      "version": "25.2.6",
      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-25.2.6.tgz",
      "integrity": "sha512-a4GN7hYbqQ3Rt9iHsNLFqQz7HDV7KiRPCwPgo5nqtTIWNZw7gnT8KchG+Riwh+UTSn8REjFCodGp50KX/fRNgQ==",
      "dev": true,
      "requires": {
        "@jest/types": "^25.2.6",
        "camelcase": "^5.3.1",
        "chalk": "^3.0.0",
        "jest-get-type": "^25.2.6",
        "leven": "^3.1.0",
        "pretty-format": "^25.2.6"
      },
      "dependencies": {
        "@jest/types": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/@jest/types/-/types-25.2.6.tgz",
          "integrity": "sha512-myJTTV37bxK7+3NgKc4Y/DlQ5q92/NOwZsZ+Uch7OXdElxOg61QYc72fPYNAjlvbnJ2YvbXLamIsa9tj48BmyQ==",
          "dev": true,
          "requires": {
            "@types/istanbul-lib-coverage": "^2.0.0",
            "@types/istanbul-reports": "^1.1.1",
            "@types/yargs": "^15.0.0",
            "chalk": "^3.0.0"
          }
        },
        "@types/yargs": {
          "version": "15.0.4",
          "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.4.tgz",
          "integrity": "sha512-9T1auFmbPZoxHz0enUFlUuKRy3it01R+hlggyVUMtnCTQRunsQYifnSGb8hET4Xo8yiC0o0r1paW3ud5+rbURg==",
          "dev": true,
          "requires": {
            "@types/yargs-parser": "*"
          }
        },
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-get-type": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-25.2.6.tgz",
          "integrity": "sha512-DxjtyzOHjObRM+sM1knti6or+eOgcGU4xVSb2HNP1TqO4ahsT+rqZg+nyqHWJSvWgKC5cG3QjGFBqxLghiF/Ig==",
          "dev": true
        },
        "pretty-format": {
          "version": "25.2.6",
          "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-25.2.6.tgz",
          "integrity": "sha512-DEiWxLBaCHneffrIT4B+TpMvkV9RNvvJrd3lY9ew1CEQobDzEXmYT1mg0hJhljZty7kCc10z13ohOFAE8jrUDg==",
          "dev": true,
          "requires": {
            "@jest/types": "^25.2.6",
            "ansi-regex": "^5.0.0",
            "ansi-styles": "^4.0.0",
            "react-is": "^16.12.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "jest-watch-typeahead": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/jest-watch-typeahead/-/jest-watch-typeahead-0.4.2.tgz",
      "integrity": "sha512-f7VpLebTdaXs81rg/oj4Vg/ObZy2QtGzAmGLNsqUS5G5KtSN68tFcIsbvNODfNyQxU78g7D8x77o3bgfBTR+2Q==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^4.2.1",
        "chalk": "^2.4.1",
        "jest-regex-util": "^24.9.0",
        "jest-watcher": "^24.3.0",
        "slash": "^3.0.0",
        "string-length": "^3.1.0",
        "strip-ansi": "^5.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "slash": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
          "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
          "dev": true
        },
        "string-length": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-length/-/string-length-3.1.0.tgz",
          "integrity": "sha512-Ttp5YvkGm5v9Ijagtaz1BnN+k9ObpvS0eIBblPMp2YWL8FBmi9qblQ9fexc2k/CXFgrTIteU3jAw3payCnwSTA==",
          "dev": true,
          "requires": {
            "astral-regex": "^1.0.0",
            "strip-ansi": "^5.2.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jest-watcher": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-24.9.0.tgz",
      "integrity": "sha512-+/fLOfKPXXYJDYlks62/4R4GoT+GU1tYZed99JSCOsmzkkF7727RqKrjNAxtfO4YpGv11wybgRvCjR73lK2GZw==",
      "dev": true,
      "requires": {
        "@jest/test-result": "^24.9.0",
        "@jest/types": "^24.9.0",
        "@types/yargs": "^13.0.0",
        "ansi-escapes": "^3.0.0",
        "chalk": "^2.0.1",
        "jest-util": "^24.9.0",
        "string-length": "^2.0.0"
      },
      "dependencies": {
        "ansi-escapes": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "jest-worker": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-24.9.0.tgz",
      "integrity": "sha512-51PE4haMSXcHohnSMdM42anbvZANYTqMrr52tVKPqqsPJMzoP6FYYDVqahX/HrAoKEKz3uUPzSvKs9A3qR4iVw==",
      "dev": true,
      "requires": {
        "merge-stream": "^2.0.0",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "js-base64": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/js-base64/-/js-base64-2.5.2.tgz",
      "integrity": "sha512-Vg8czh0Q7sFBSUMWWArX/miJeBWYBPpdU/3M/DKSaekLMqrqVPaedp+5mZhie/r0lgrcaYBfwXatEew6gwgiQQ==",
      "dev": true
    },
    "js-beautify": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/js-beautify/-/js-beautify-1.11.0.tgz",
      "integrity": "sha512-a26B+Cx7USQGSWnz9YxgJNMmML/QG2nqIaL7VVYPCXbqiKz8PN0waSNvroMtvAK6tY7g/wPdNWGEP+JTNIBr6A==",
      "dev": true,
      "requires": {
        "config-chain": "^1.1.12",
        "editorconfig": "^0.15.3",
        "glob": "^7.1.3",
        "mkdirp": "~1.0.3",
        "nopt": "^4.0.3"
      },
      "dependencies": {
        "mkdirp": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
          "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
          "dev": true
        },
        "nopt": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz",
          "integrity": "sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==",
          "dev": true,
          "requires": {
            "abbrev": "1",
            "osenv": "^0.1.4"
          }
        }
      }
    },
    "js-calendar": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/js-calendar/-/js-calendar-1.2.3.tgz",
      "integrity": "sha512-dAA1/Zbp4+c5E+ARCVTIuKepXsNLzSYfzvOimiYD4S5eeP9QuplSHLcdhfqFSwyM1o1u6ku6RRRCyaZ0YAjiBw=="
    },
    "js-joda": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/js-joda/-/js-joda-1.11.0.tgz",
      "integrity": "sha512-/HJpRhwP2fPyuSsCaZuoVJuaSIt8tUXykV4wOMRXrFk7RP9h9VWaFdS9YHKdMepxb/3TdXpL6IhfC9L0sqYVBw=="
    },
    "js-message": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/js-message/-/js-message-1.0.5.tgz",
      "integrity": "sha1-IwDSSxrwjondCVvBpMnJz8uJLRU=",
      "dev": true
    },
    "js-queue": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/js-queue/-/js-queue-2.0.0.tgz",
      "integrity": "sha1-NiITz4YPRo8BJfxslqvBdCUx+Ug=",
      "dev": true,
      "requires": {
        "easy-stack": "^1.0.0"
      }
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q=="
    },
    "js-sha512": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha512/-/js-sha512-0.8.0.tgz",
      "integrity": "sha512-PWsmefG6Jkodqt+ePTvBZCSMFgN7Clckjd0O7su3I0+BW2QWUTJNzjktHsztGLhncP2h8mcF9V9Y2Ha59pAViQ=="
    },
    "js-tokens": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
      "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
      "dev": true
    },
    "js-yaml": {
      "version": "3.13.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
      "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
    },
    "jsdom": {
      "version": "15.2.1",
      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-15.2.1.tgz",
      "integrity": "sha512-fAl1W0/7T2G5vURSyxBzrJ1LSdQn6Tr5UX/xD4PXDx/PDgwygedfW6El/KIj3xJ7FU61TTYnc/l/B7P49Eqt6g==",
      "dev": true,
      "requires": {
        "abab": "^2.0.0",
        "acorn": "^7.1.0",
        "acorn-globals": "^4.3.2",
        "array-equal": "^1.0.0",
        "cssom": "^0.4.1",
        "cssstyle": "^2.0.0",
        "data-urls": "^1.1.0",
        "domexception": "^1.0.1",
        "escodegen": "^1.11.1",
        "html-encoding-sniffer": "^1.0.2",
        "nwsapi": "^2.2.0",
        "parse5": "5.1.0",
        "pn": "^1.1.0",
        "request": "^2.88.0",
        "request-promise-native": "^1.0.7",
        "saxes": "^3.1.9",
        "symbol-tree": "^3.2.2",
        "tough-cookie": "^3.0.1",
        "w3c-hr-time": "^1.0.1",
        "w3c-xmlserializer": "^1.1.2",
        "webidl-conversions": "^4.0.2",
        "whatwg-encoding": "^1.0.5",
        "whatwg-mimetype": "^2.3.0",
        "whatwg-url": "^7.0.0",
        "ws": "^7.0.0",
        "xml-name-validator": "^3.0.0"
      },
      "dependencies": {
        "tough-cookie": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-3.0.1.tgz",
          "integrity": "sha512-yQyJ0u4pZsv9D4clxO69OEjLWYw+jbgspjTue4lTQZLfV0c5l1VmK2y1JK8E9ahdpltPOaAThPcp5nKPUgSnsg==",
          "dev": true,
          "requires": {
            "ip-regex": "^2.1.0",
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "ws": {
          "version": "7.2.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.2.3.tgz",
          "integrity": "sha512-HTDl9G9hbkNDk98naoR/cHDws7+EyYMOdL1BmjsZXRUjf7d+MficC4B7HLUPlSiho0vg+CWKrGIt/VJBd1xunQ==",
          "dev": true
        }
      }
    },
    "jsesc": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
      "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
      "dev": true
    },
    "json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha1-Wx85evx11ne96Lz8Dkfh+aPZqJg=",
      "dev": true
    },
    "json-parse-better-errors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==",
      "dev": true
    },
    "json-schema": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",
      "dev": true
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
    },
    "json2csv": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json2csv/-/json2csv-5.0.1.tgz",
      "integrity": "sha512-QFMifUX1y8W2tKi2TwZpnzf2rHdZvzdmgZUMEMDF46F90f4a9mUeWfx/qg4kzXSZYJYc3cWA5O+eLXk5lj9g8g==",
      "requires": {
        "commander": "^5.0.0",
        "jsonparse": "^1.3.1",
        "lodash.get": "^4.4.2"
      },
      "dependencies": {
        "commander": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-5.1.0.tgz",
          "integrity": "sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg=="
        }
      }
    },
    "json3": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.3.tgz",
      "integrity": "sha512-c7/8mbUsKigAbLkD5B010BK4D9LZm7A1pNItkEwiUZRpIN66exu/e7YQWysGun+TRKaJp8MhemM+VkfWv42aCA==",
      "dev": true
    },
    "json5": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
      "integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE=",
      "dev": true
    },
    "jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "jsonparse": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/jsonparse/-/jsonparse-1.3.1.tgz",
      "integrity": "sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA="
    },
    "jsprim": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.2.3",
        "verror": "1.10.0"
      }
    },
    "junk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/junk/-/junk-3.1.0.tgz",
      "integrity": "sha512-pBxcB3LFc8QVgdggvZWyeys+hnrNWg4OcZIU/1X59k5jQdLBlCsYGRQaz234SqoRLTCgMH00fY0xRJH+F9METQ==",
      "dev": true
    },
    "keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "dev": true,
      "requires": {
        "json-buffer": "3.0.0"
      }
    },
    "killable": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/killable/-/killable-1.0.1.tgz",
      "integrity": "sha512-LzqtLKlUwirEUyl/nicirVmNiPvYs7l5n8wOPP7fyJVpUPkvCnW/vuiXGpylGUlnPDnB7311rARzAt3Mhswpjg==",
      "dev": true
    },
    "kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
      "dev": true
    },
    "kleur": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
      "dev": true
    },
    "latest-version": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
      "integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
      "dev": true,
      "requires": {
        "package-json": "^6.3.0"
      }
    },
    "launch-editor": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/launch-editor/-/launch-editor-2.2.1.tgz",
      "integrity": "sha512-On+V7K2uZK6wK7x691ycSUbLD/FyKKelArkbaAMSSJU8JmqmhwN2+mnJDNINuJWSrh2L0kDk+ZQtbC/gOWUwLw==",
      "dev": true,
      "requires": {
        "chalk": "^2.3.0",
        "shell-quote": "^1.6.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "launch-editor-middleware": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/launch-editor-middleware/-/launch-editor-middleware-2.2.1.tgz",
      "integrity": "sha512-s0UO2/gEGiCgei3/2UN3SMuUj1phjQN8lcpnvgLSz26fAzNWPQ6Nf/kF5IFClnfU2ehp6LrmKdMU/beveO+2jg==",
      "dev": true,
      "requires": {
        "launch-editor": "^2.2.1"
      }
    },
    "lazy-val": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/lazy-val/-/lazy-val-1.0.4.tgz",
      "integrity": "sha512-u93kb2fPbIrfzBuLjZE+w+fJbUUMhNDXxNmMfaqNgpfQf1CO5ZSe2LfsnBqVAk7i/2NF48OSoRj+Xe2VT+lE8Q==",
      "dev": true
    },
    "lcid": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz",
      "integrity": "sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==",
      "dev": true,
      "requires": {
        "invert-kv": "^2.0.0"
      }
    },
    "left-pad": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/left-pad/-/left-pad-1.3.0.tgz",
      "integrity": "sha512-XI5MPzVNApjAyhQzphX8BkmKsKUxD4LdyK24iZeQGinBN9yTQT3bFlCBy/aVx2HrNcqQGsdot8ghrjyrvMCoEA==",
      "dev": true
    },
    "less": {
      "version": "3.11.1",
      "resolved": "https://registry.npmjs.org/less/-/less-3.11.1.tgz",
      "integrity": "sha512-tlWX341RECuTOvoDIvtFqXsKj072hm3+9ymRBe76/mD6O5ZZecnlAOVDlWAleF2+aohFrxNidXhv2773f6kY7g==",
      "dev": true,
      "requires": {
        "clone": "^2.1.2",
        "errno": "^0.1.1",
        "graceful-fs": "^4.1.2",
        "image-size": "~0.5.0",
        "mime": "^1.4.1",
        "mkdirp": "^0.5.0",
        "promise": "^7.1.1",
        "request": "^2.83.0",
        "source-map": "~0.6.0",
        "tslib": "^1.10.0"
      },
      "dependencies": {
        "clone": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
          "dev": true
        },
        "mime": {
          "version": "1.6.0",
          "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
          "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
          "dev": true,
          "optional": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true,
          "optional": true
        }
      }
    },
    "less-loader": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/less-loader/-/less-loader-4.1.0.tgz",
      "integrity": "sha512-KNTsgCE9tMOM70+ddxp9yyt9iHqgmSs0yTZc5XH5Wo+g80RWRIYNqE58QJKm/yMud5wZEvz50ugRDuzVIkyahg==",
      "dev": true,
      "requires": {
        "clone": "^2.1.1",
        "loader-utils": "^1.1.0",
        "pify": "^3.0.0"
      },
      "dependencies": {
        "clone": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
          "dev": true
        },
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "leven": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
      "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
      "dev": true
    },
    "levenary": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/levenary/-/levenary-1.1.1.tgz",
      "integrity": "sha512-mkAdOIt79FD6irqjYSs4rdbnlT5vRonMEvBVPVb3XmevfS8kgRXwfes0dhPdEtzTWD/1eNE/Bm/G1iRt6DcnQQ==",
      "dev": true,
      "requires": {
        "leven": "^3.1.0"
      }
    },
    "levn": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2"
      }
    },
    "lines-and-columns": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz",
      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA=",
      "dev": true
    },
    "loader-runner": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-2.4.0.tgz",
      "integrity": "sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw==",
      "dev": true
    },
    "loader-utils": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.4.0.tgz",
      "integrity": "sha512-qH0WSMBtn/oHuwjy/NucEgbx5dbxxnxup9s4PVXJUDHZBQY+s0NWA9rJf53RBnQZxfch7euUui7hpoAPvALZdA==",
      "dev": true,
      "requires": {
        "big.js": "^5.2.2",
        "emojis-list": "^3.0.0",
        "json5": "^1.0.1"
      },
      "dependencies": {
        "json5": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.0"
          }
        }
      }
    },
    "locate-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
      "dev": true,
      "requires": {
        "p-locate": "^3.0.0",
        "path-exists": "^3.0.0"
      }
    },
    "lodash": {
      "version": "4.17.15",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A=="
    },
    "lodash.defaultsdeep": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/lodash.defaultsdeep/-/lodash.defaultsdeep-4.6.1.tgz",
      "integrity": "sha512-3j8wdDzYuWO3lM3Reg03MuQR957t287Rpcxp1njpEa8oDrikb+FwGdW3n+FELh/A6qib6yPit0j/pv9G/yeAqA==",
      "dev": true
    },
    "lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk="
    },
    "lodash.isequal": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz",
      "integrity": "sha1-QVxEePK8wwEgwizhDtMib30+GOA=",
      "dev": true
    },
    "lodash.kebabcase": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.kebabcase/-/lodash.kebabcase-4.1.1.tgz",
      "integrity": "sha1-hImxyw0p/4gZXM7KRI/21swpXDY=",
      "dev": true
    },
    "lodash.mapvalues": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/lodash.mapvalues/-/lodash.mapvalues-4.6.0.tgz",
      "integrity": "sha1-G6+lAF3p3W9PJmaMMMo3IwzJaJw=",
      "dev": true
    },
    "lodash.memoize": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
      "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4=",
      "dev": true
    },
    "lodash.sortby": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
      "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg=",
      "dev": true
    },
    "lodash.throttle": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.throttle/-/lodash.throttle-4.1.1.tgz",
      "integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ="
    },
    "lodash.transform": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/lodash.transform/-/lodash.transform-4.6.0.tgz",
      "integrity": "sha1-EjBkIvYzJK7YSD0/ODMrX2cFR6A=",
      "dev": true
    },
    "lodash.uniq": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
      "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=",
      "dev": true
    },
    "log-symbols": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz",
      "integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.1"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "loglevel": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.6.7.tgz",
      "integrity": "sha512-cY2eLFrQSAfVPhCgH1s7JI73tMbg9YC3v3+ZHVW67sBS7UxWzNEk/ZBbSfLykBWHp33dqqtOv82gjhKEi81T/A==",
      "dev": true
    },
    "lolex": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/lolex/-/lolex-5.1.2.tgz",
      "integrity": "sha512-h4hmjAvHTmd+25JSwrtTIuwbKdwg5NzZVRMLn9saij4SZaepCrTCxPr35H/3bjwfMJtN+t3CX8672UIkglz28A==",
      "dev": true,
      "requires": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dev": true,
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "lower-case": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-1.1.4.tgz",
      "integrity": "sha1-miyr0bno4K6ZOkv31YdcOcQujqw=",
      "dev": true
    },
    "lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==",
      "dev": true
    },
    "lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "requires": {
        "yallist": "^3.0.2"
      }
    },
    "make-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
      "dev": true,
      "requires": {
        "pify": "^4.0.1",
        "semver": "^5.6.0"
      },
      "dependencies": {
        "pify": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
          "dev": true
        }
      }
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "makeerror": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",
      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",
      "dev": true,
      "requires": {
        "tmpl": "1.0.x"
      }
    },
    "map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "requires": {
        "p-defer": "^1.0.0"
      }
    },
    "map-cache": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",
      "dev": true
    },
    "map-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
      "dev": true,
      "requires": {
        "object-visit": "^1.0.0"
      }
    },
    "matcher": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-2.1.0.tgz",
      "integrity": "sha512-o+nZr+vtJtgPNklyeUKkkH42OsK8WAfdgaJE2FNxcjLPg+5QbeEoT6vRj8Xq/iv18JlQ9cmKsEu0b94ixWf1YQ==",
      "dev": true,
      "optional": true,
      "requires": {
        "escape-string-regexp": "^2.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
          "dev": true,
          "optional": true
        }
      }
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "dev": true,
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "mdn-data": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.4.tgz",
      "integrity": "sha512-iV3XNKw06j5Q7mi6h+9vbx23Tv7JkjEVgKHW4pimwyDGWm0OIQntJJ+u1C6mg6mK1EaTv42XQ7w76yuzH7M2cA==",
      "dev": true
    },
    "media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
      "dev": true
    },
    "mem": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/mem/-/mem-4.3.0.tgz",
      "integrity": "sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==",
      "dev": true,
      "requires": {
        "map-age-cleaner": "^0.1.1",
        "mimic-fn": "^2.0.0",
        "p-is-promise": "^2.0.0"
      }
    },
    "memory-fs": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",
      "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
      "dev": true,
      "requires": {
        "errno": "^0.1.3",
        "readable-stream": "^2.0.1"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
      "dev": true
    },
    "merge-source-map": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.1.0.tgz",
      "integrity": "sha512-Qkcp7P2ygktpMPh2mCQZaf3jhN6D3Z/qVZHSdWvQ+2Ef5HgRAPBO57A77+ENm0CPx2+1Ce/MYKi3ymqdfuqibw==",
      "dev": true,
      "requires": {
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "dev": true
    },
    "merge2": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.3.0.tgz",
      "integrity": "sha512-2j4DAdlBOkiSZIsaXk4mTE3sRS02yBHAtfy127xRV3bQUFqXkjHCHLW6Scv7DwNRbIWNHH8zpnz9zMaKXIdvYw==",
      "dev": true
    },
    "merkle-lib": {
      "version": "2.0.10",
      "resolved": "https://registry.npmjs.org/merkle-lib/-/merkle-lib-2.0.10.tgz",
      "integrity": "sha1-grjbrnXieneFOItz+ddyXQ9vMyY="
    },
    "merkletreejs": {
      "version": "0.1.11",
      "resolved": "https://registry.npmjs.org/merkletreejs/-/merkletreejs-0.1.11.tgz",
      "integrity": "sha512-nJN3VIHeIAyB/PjO5Dj/Y0SEK7CGCCLD2IbV4el2kUIwlOtX3GOr5MwVO4EU+0AXvoDnJ0nmaLe5O86uIjWz/Q==",
      "requires": {
        "buffer-reverse": "^1.0.1",
        "crypto-js": "^3.1.9-1",
        "is-buffer": "^2.0.3",
        "merkle-lib": "^2.0.10",
        "treeify": "^1.1.0"
      },
      "dependencies": {
        "crypto-js": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.3.0.tgz",
          "integrity": "sha512-DIT51nX0dCfKltpRiXV+/TVZq+Qq2NgF4644+K7Ttnla7zEzqc+kjJyiB96BHNyUTBxyjzRcZYpUdZa+QAqi6Q=="
        }
      }
    },
    "methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
      "dev": true
    },
    "microevent.ts": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/microevent.ts/-/microevent.ts-0.1.1.tgz",
      "integrity": "sha512-jo1OfR4TaEwd5HOrt5+tAZ9mqT4jmpNAusXtyfNzqVm9uiSYFZlKM1wYL4oU7azZW/PxQW53wM0S6OR1JHNa2g==",
      "dev": true
    },
    "micromatch": {
      "version": "3.1.10",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
      "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
      "dev": true,
      "requires": {
        "arr-diff": "^4.0.0",
        "array-unique": "^0.3.2",
        "braces": "^2.3.1",
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "extglob": "^2.0.4",
        "fragment-cache": "^0.2.1",
        "kind-of": "^6.0.2",
        "nanomatch": "^1.2.9",
        "object.pick": "^1.3.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.2"
      },
      "dependencies": {
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "miller-rabin": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
      "dev": true,
      "requires": {
        "bn.js": "^4.0.0",
        "brorand": "^1.0.1"
      }
    },
    "mime": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.4.tgz",
      "integrity": "sha512-LRxmNwziLPT828z+4YkNzloCFC2YM4wrB99k+AV5ZbEyfGNWfG8SO1FUXLmLDBSo89NrJZ4DIWeLjy1CHGhMGA==",
      "dev": true
    },
    "mime-db": {
      "version": "1.43.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.43.0.tgz",
      "integrity": "sha512-+5dsGEEovYbT8UY9yD7eE4XTc4UwJ1jBYlgaQQF38ENsKR3wj/8q8RFZrF9WIZpB2V1ArTVFUva8sAul1NzRzQ=="
    },
    "mime-types": {
      "version": "2.1.26",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.26.tgz",
      "integrity": "sha512-01paPWYgLrkqAyrlDorC1uDwl2p3qZT7yl806vW7DvDoxwXi46jsjFbg+WdwotBIk6/MbEhO/dh5aZ5sNj/dWQ==",
      "requires": {
        "mime-db": "1.43.0"
      }
    },
    "mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "dev": true
    },
    "mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "dev": true
    },
    "mini-css-extract-plugin": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.9.0.tgz",
      "integrity": "sha512-lp3GeY7ygcgAmVIcRPBVhIkf8Us7FZjA+ILpal44qLdSu11wmjKQ3d9k15lfD7pO4esu9eUIAW7qiYIBppv40A==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0",
        "normalize-url": "1.9.1",
        "schema-utils": "^1.0.0",
        "webpack-sources": "^1.1.0"
      },
      "dependencies": {
        "normalize-url": {
          "version": "1.9.1",
          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-1.9.1.tgz",
          "integrity": "sha1-LMDWazHqIwNkWENuNiDYWVTGbDw=",
          "dev": true,
          "requires": {
            "object-assign": "^4.0.1",
            "prepend-http": "^1.0.0",
            "query-string": "^4.1.0",
            "sort-keys": "^1.0.0"
          }
        },
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        }
      }
    },
    "minimalistic-assert": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
      "dev": true
    },
    "minimalistic-crypto-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=",
      "dev": true
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "dev": true,
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw=="
    },
    "minipass": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.0"
      }
    },
    "minipass-collect": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/minipass-collect/-/minipass-collect-1.0.2.tgz",
      "integrity": "sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      },
      "dependencies": {
        "minipass": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
          "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "minipass-flush": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz",
      "integrity": "sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      },
      "dependencies": {
        "minipass": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
          "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "minipass-pipeline": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.2.tgz",
      "integrity": "sha512-3JS5A2DKhD2g0Gg8x3yamO0pj7YeKGwVlDS90pF++kxptwx/F+B//roxf9SqYil5tQo65bijy+dAuAFZmYOouA==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      },
      "dependencies": {
        "minipass": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
          "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
          "dev": true,
          "requires": {
            "yallist": "^4.0.0"
          }
        },
        "yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    },
    "minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "dev": true,
      "requires": {
        "minipass": "^2.9.0"
      }
    },
    "mississippi": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mississippi/-/mississippi-3.0.0.tgz",
      "integrity": "sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==",
      "dev": true,
      "requires": {
        "concat-stream": "^1.5.0",
        "duplexify": "^3.4.2",
        "end-of-stream": "^1.1.0",
        "flush-write-stream": "^1.0.0",
        "from2": "^2.1.0",
        "parallel-transform": "^1.1.0",
        "pump": "^3.0.0",
        "pumpify": "^1.3.3",
        "stream-each": "^1.1.0",
        "through2": "^2.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "through2": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
          "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
          "dev": true,
          "requires": {
            "readable-stream": "~2.3.6",
            "xtend": "~4.0.1"
          }
        },
        "xtend": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
          "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
          "dev": true
        }
      }
    },
    "mixin-deep": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz",
      "integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
      "dev": true,
      "requires": {
        "for-in": "^1.0.2",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "mkdirp": {
      "version": "0.5.5",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz",
      "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==",
      "dev": true,
      "requires": {
        "minimist": "^1.2.5"
      }
    },
    "moment": {
      "version": "2.24.0",
      "resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
      "integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg=="
    },
    "moment-timezone": {
      "version": "0.5.28",
      "resolved": "https://registry.npmjs.org/moment-timezone/-/moment-timezone-0.5.28.tgz",
      "integrity": "sha512-TDJkZvAyKIVWg5EtVqRzU97w0Rb0YVbfpqyjgu6GwXCAohVRqwZjf4fOzDE6p1Ch98Sro/8hQQi65WDXW5STPw==",
      "dev": true,
      "requires": {
        "moment": ">= 2.9.0"
      }
    },
    "move-concurrently": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz",
      "integrity": "sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1",
        "copy-concurrently": "^1.0.0",
        "fs-write-stream-atomic": "^1.0.8",
        "mkdirp": "^0.5.1",
        "rimraf": "^2.5.4",
        "run-queue": "^1.0.3"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
    },
    "multicast-dns": {
      "version": "6.2.3",
      "resolved": "https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz",
      "integrity": "sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==",
      "dev": true,
      "requires": {
        "dns-packet": "^1.3.1",
        "thunky": "^1.0.2"
      }
    },
    "multicast-dns-service-types": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",
      "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE=",
      "dev": true
    },
    "mute-stream": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==",
      "dev": true
    },
    "mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "requires": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "nan": {
      "version": "2.14.0",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.0.tgz",
      "integrity": "sha512-INOFj37C7k3AfaNTtX8RhsTw7qRy7eLET14cROi9+5HAVbbHuIWUHEauBv5qT4Av2tWasiTY1Jw6puUNqRJXQg==",
      "dev": true
    },
    "nanomatch": {
      "version": "1.2.13",
      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
      "dev": true,
      "requires": {
        "arr-diff": "^4.0.0",
        "array-unique": "^0.3.2",
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "fragment-cache": "^0.2.1",
        "is-windows": "^1.0.2",
        "kind-of": "^6.0.2",
        "object.pick": "^1.3.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      }
    },
    "natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
      "dev": true
    },
    "needle": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/needle/-/needle-2.3.3.tgz",
      "integrity": "sha512-EkY0GeSq87rWp1hoq/sH/wnTWgFVhYlnIkbJ0YJFfRgEFlz2RraCjBpFQ+vrEgEdp0ThfyHADmkChEhcb7PKyw==",
      "dev": true,
      "requires": {
        "debug": "^3.2.6",
        "iconv-lite": "^0.4.4",
        "sax": "^1.2.4"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "negotiator": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
      "integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==",
      "dev": true
    },
    "neo-async": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.1.tgz",
      "integrity": "sha512-iyam8fBuCUpWeKPGpaNMetEocMt364qkCsfL9JuhjXX6dRnguRVOfk2GZaDpPjcOKiiXCPINZC1GczQ7iTq3Zw==",
      "dev": true
    },
    "nice-try": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
      "dev": true
    },
    "no-case": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/no-case/-/no-case-2.3.2.tgz",
      "integrity": "sha512-rmTZ9kz+f3rCvK2TD1Ue/oZlns7OGoIWP4fc3llxxRXlOkHKoWPPWJOfFYpITabSow43QJbRIoHQXtt10VldyQ==",
      "dev": true,
      "requires": {
        "lower-case": "^1.1.1"
      }
    },
    "node-cache": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/node-cache/-/node-cache-4.2.1.tgz",
      "integrity": "sha512-BOb67bWg2dTyax5kdef5WfU3X8xu4wPg+zHzkvls0Q/QpYycIFRLEEIdAx9Wma43DxG6Qzn4illdZoYseKWa4A==",
      "dev": true,
      "requires": {
        "clone": "2.x",
        "lodash": "^4.17.15"
      },
      "dependencies": {
        "clone": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
          "dev": true
        }
      }
    },
    "node-fetch": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",
      "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",
      "dev": true,
      "requires": {
        "encoding": "^0.1.11",
        "is-stream": "^1.0.1"
      }
    },
    "node-forge": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.9.0.tgz",
      "integrity": "sha512-7ASaDa3pD+lJ3WvXFsxekJQelBKRpne+GOVbLbtHYdd7pFspyeuJHnWfLplGf3SwKGbfs/aYl5V/JCIaHVUKKQ==",
      "dev": true
    },
    "node-gyp-build": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-3.7.0.tgz",
      "integrity": "sha512-L/Eg02Epx6Si2NXmedx+Okg+4UHqmaf3TNcxd50SF9NQGcJaON3AtU++kax69XV7YWz4tUspqZSAsVofhFKG2w==",
      "dev": true
    },
    "node-int64": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",
      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs=",
      "dev": true
    },
    "node-ipc": {
      "version": "9.1.1",
      "resolved": "https://registry.npmjs.org/node-ipc/-/node-ipc-9.1.1.tgz",
      "integrity": "sha512-FAyICv0sIRJxVp3GW5fzgaf9jwwRQxAKDJlmNFUL5hOy+W4X/I5AypyHoq0DXXbo9o/gt79gj++4cMr4jVWE/w==",
      "dev": true,
      "requires": {
        "event-pubsub": "4.3.0",
        "js-message": "1.0.5",
        "js-queue": "2.0.0"
      }
    },
    "node-libs-browser": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.1.tgz",
      "integrity": "sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==",
      "dev": true,
      "requires": {
        "assert": "^1.1.1",
        "browserify-zlib": "^0.2.0",
        "buffer": "^4.3.0",
        "console-browserify": "^1.1.0",
        "constants-browserify": "^1.0.0",
        "crypto-browserify": "^3.11.0",
        "domain-browser": "^1.1.1",
        "events": "^3.0.0",
        "https-browserify": "^1.0.0",
        "os-browserify": "^0.3.0",
        "path-browserify": "0.0.1",
        "process": "^0.11.10",
        "punycode": "^1.2.4",
        "querystring-es3": "^0.2.0",
        "readable-stream": "^2.3.3",
        "stream-browserify": "^2.0.1",
        "stream-http": "^2.7.2",
        "string_decoder": "^1.0.0",
        "timers-browserify": "^2.0.4",
        "tty-browserify": "0.0.0",
        "url": "^0.11.0",
        "util": "^0.11.0",
        "vm-browserify": "^1.0.1"
      },
      "dependencies": {
        "buffer": {
          "version": "4.9.2",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz",
          "integrity": "sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==",
          "dev": true,
          "requires": {
            "base64-js": "^1.0.2",
            "ieee754": "^1.1.4",
            "isarray": "^1.0.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "punycode": {
          "version": "1.4.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          },
          "dependencies": {
            "string_decoder": {
              "version": "1.1.1",
              "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
              "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
              "dev": true,
              "requires": {
                "safe-buffer": "~5.1.0"
              }
            }
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
          "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.2.0"
          },
          "dependencies": {
            "safe-buffer": {
              "version": "5.2.0",
              "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
              "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
              "dev": true
            }
          }
        }
      }
    },
    "node-modules-regexp": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-modules-regexp/-/node-modules-regexp-1.0.0.tgz",
      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA=",
      "dev": true
    },
    "node-notifier": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-6.0.0.tgz",
      "integrity": "sha512-SVfQ/wMw+DesunOm5cKqr6yDcvUTDl/yc97ybGHMrteNEY6oekXpNpS3lZwgLlwz0FLgHoiW28ZpmBHUDg37cw==",
      "dev": true,
      "optional": true,
      "requires": {
        "growly": "^1.3.0",
        "is-wsl": "^2.1.1",
        "semver": "^6.3.0",
        "shellwords": "^0.1.1",
        "which": "^1.3.1"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true,
          "optional": true
        }
      }
    },
    "node-pre-gyp": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/node-pre-gyp/-/node-pre-gyp-0.13.0.tgz",
      "integrity": "sha512-Md1D3xnEne8b/HGVQkZZwV27WUi1ZRuZBij24TNaZwUPU3ZAFtvT6xxJGaUVillfmMKnn5oD1HoGsp2Ftik7SQ==",
      "dev": true,
      "requires": {
        "detect-libc": "^1.0.2",
        "mkdirp": "^0.5.1",
        "needle": "^2.2.1",
        "nopt": "^4.0.1",
        "npm-packlist": "^1.1.6",
        "npmlog": "^4.0.2",
        "rc": "^1.2.7",
        "rimraf": "^2.6.1",
        "semver": "^5.3.0",
        "tar": "^4"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "node-releases": {
      "version": "1.1.50",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.50.tgz",
      "integrity": "sha512-lgAmPv9eYZ0bGwUYAKlr8MG6K4CvWliWqnkcT2P8mMAgVrH3lqfBPorFlxiG1pHQnqmavJZ9vbMXUTNyMLbrgQ==",
      "dev": true,
      "requires": {
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "nopt": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz",
      "integrity": "sha1-0NRoWv1UFRk8jHUFYC0NF81kR00=",
      "dev": true,
      "requires": {
        "abbrev": "1",
        "osenv": "^0.1.4"
      }
    },
    "normalize-package-data": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
      "dev": true,
      "requires": {
        "hosted-git-info": "^2.1.4",
        "resolve": "^1.10.0",
        "semver": "2 || 3 || 4 || 5",
        "validate-npm-package-license": "^3.0.1"
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true
    },
    "normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
      "dev": true
    },
    "normalize-url": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",
      "integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg==",
      "dev": true
    },
    "npm-bundled": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.1.tgz",
      "integrity": "sha512-gqkfgGePhTpAEgUsGEgcq1rqPXA+tv/aVBlgEzfXwA1yiUJF7xtEt3CtVwOjNYQOVknDk0F20w58Fnm3EtG0fA==",
      "dev": true,
      "requires": {
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-conf": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/npm-conf/-/npm-conf-1.1.3.tgz",
      "integrity": "sha512-Yic4bZHJOt9RCFbRP3GgpqhScOY4HH3V2P8yBj6CeYq118Qr+BLXqT2JvpJ00mryLESpgOxf5XlFv4ZjXxLScw==",
      "dev": true,
      "optional": true,
      "requires": {
        "config-chain": "^1.1.11",
        "pify": "^3.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true,
          "optional": true
        }
      }
    },
    "npm-normalize-package-bin": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
      "integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==",
      "dev": true
    },
    "npm-packlist": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.8.tgz",
      "integrity": "sha512-5+AZgwru5IevF5ZdnFglB5wNlHG1AOOuw28WhUq8/8emhBmLv6jX5by4WJCh7lW0uSYZYS6DXqIsyZVIXRZU9A==",
      "dev": true,
      "requires": {
        "ignore-walk": "^3.0.1",
        "npm-bundled": "^1.0.1",
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-run-path": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
      "dev": true,
      "requires": {
        "path-key": "^2.0.0"
      }
    },
    "npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "dev": true,
      "requires": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "nth-check": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",
      "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",
      "dev": true,
      "requires": {
        "boolbase": "~1.0.0"
      }
    },
    "num2fraction": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4=",
      "dev": true
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
      "dev": true
    },
    "nwsapi": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.0.tgz",
      "integrity": "sha512-h2AatdwYH+JHiZpv7pt/gSX1XoRGb7L/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshRK5893hNSl+1//vHK7hQ==",
      "dev": true
    },
    "oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
      "dev": true
    },
    "object-copy": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
      "dev": true,
      "requires": {
        "copy-descriptor": "^0.1.0",
        "define-property": "^0.2.5",
        "kind-of": "^3.0.3"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "object-inspect": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.7.0.tgz",
      "integrity": "sha512-a7pEHdh1xKIAgTySUGgLMx/xwDZskN1Ud6egYYN3EdRW4ZMPNEDUTF+hwy2LUC+Bl+SyLXANnwz/jyh/qutKUw==",
      "dev": true
    },
    "object-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.0.2.tgz",
      "integrity": "sha512-Epah+btZd5wrrfjkJZq1AOB9O6OxUQto45hzFd7lXGrpHPGE0W1k+426yrZV+k6NJOzLNNW/nVsmZdIWsAqoOQ==",
      "dev": true
    },
    "object-visit": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.0"
      }
    },
    "object.assign": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",
      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.2",
        "function-bind": "^1.1.1",
        "has-symbols": "^1.0.0",
        "object-keys": "^1.0.11"
      },
      "dependencies": {
        "object-keys": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
          "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
          "dev": true
        }
      }
    },
    "object.getownpropertydescriptors": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.1.0.tgz",
      "integrity": "sha512-Z53Oah9A3TdLoblT7VKJaTDdXdT+lQO+cNpKVnya5JDe9uLvzu1YyY1yFDFrcxrlRgWrEFH0jJtD/IbuwjcEVg==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1"
      }
    },
    "object.pick": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      }
    },
    "object.values": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.1.tgz",
      "integrity": "sha512-WTa54g2K8iu0kmS/us18jEmdv1a4Wi//BZ/DTVYEcH0XhLM5NYdpDHja3gt57VrZLcNAO2WGA+KpWsDBaHt6eA==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1",
        "function-bind": "^1.1.1",
        "has": "^1.0.3"
      }
    },
    "obuf": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==",
      "dev": true
    },
    "on-finished": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
      "dev": true,
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "on-headers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==",
      "dev": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "dev": true,
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.0.tgz",
      "integrity": "sha512-5NcSkPHhwTVFIQN+TUqXoS5+dlElHXdpAWu9I0HP20YOtIi+aZ0Ct82jdlILDxjLEAWwvm+qj1m6aEtsDVmm6Q==",
      "dev": true,
      "requires": {
        "mimic-fn": "^2.1.0"
      }
    },
    "open": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/open/-/open-7.3.0.tgz",
      "integrity": "sha512-mgLwQIx2F/ye9SmbrUkurZCnkoXyXyu9EbHtJZrICjVAJfyMArdHp3KkixGdZx1ZHFPNIwl0DDM1dFFqXbTLZw==",
      "dev": true,
      "requires": {
        "is-docker": "^2.0.0",
        "is-wsl": "^2.1.1"
      }
    },
    "opener": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/opener/-/opener-1.5.1.tgz",
      "integrity": "sha512-goYSy5c2UXE4Ra1xixabeVh1guIX/ZV/YokJksb6q2lubWu6UbvPQ20p542/sFIll1nl8JnCyK9oBaOcCWXwvA==",
      "dev": true
    },
    "opn": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/opn/-/opn-5.5.0.tgz",
      "integrity": "sha512-PqHpggC9bLV0VeWcdKhkpxY+3JTzetLSqTCWL/z/tFIbI6G8JCjondXklT1JinczLz2Xib62sSp0T/gKT4KksA==",
      "dev": true,
      "requires": {
        "is-wsl": "^1.1.0"
      },
      "dependencies": {
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        }
      }
    },
    "optionator": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.3.tgz",
      "integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==",
      "dev": true,
      "requires": {
        "deep-is": "~0.1.3",
        "fast-levenshtein": "~2.0.6",
        "levn": "~0.3.0",
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2",
        "word-wrap": "~1.2.3"
      }
    },
    "ora": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/ora/-/ora-3.4.0.tgz",
      "integrity": "sha512-eNwHudNbO1folBP3JsZ19v9azXWtQZjICdr3Q0TDPIaeBQ3mXLrh54wM+er0+hSp+dWKf+Z8KM58CYzEyIYxYg==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.2",
        "cli-cursor": "^2.1.0",
        "cli-spinners": "^2.0.0",
        "log-symbols": "^2.2.0",
        "strip-ansi": "^5.2.0",
        "wcwidth": "^1.0.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "cli-cursor": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
          "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
          "dev": true,
          "requires": {
            "restore-cursor": "^2.0.0"
          }
        },
        "mimic-fn": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
          "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
          "dev": true
        },
        "onetime": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
          "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
          "dev": true,
          "requires": {
            "mimic-fn": "^1.0.0"
          }
        },
        "restore-cursor": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
          "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
          "dev": true,
          "requires": {
            "onetime": "^2.0.0",
            "signal-exit": "^3.0.2"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "original": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",
      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",
      "dev": true,
      "requires": {
        "url-parse": "^1.4.3"
      }
    },
    "os-browserify": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",
      "integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
      "dev": true
    },
    "os-homedir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
      "dev": true
    },
    "os-locale": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz",
      "integrity": "sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==",
      "dev": true,
      "requires": {
        "execa": "^1.0.0",
        "lcid": "^2.0.0",
        "mem": "^4.0.0"
      }
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
      "dev": true
    },
    "osenv": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
      "dev": true,
      "requires": {
        "os-homedir": "^1.0.0",
        "os-tmpdir": "^1.0.0"
      }
    },
    "p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
      "dev": true
    },
    "p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww=",
      "dev": true
    },
    "p-each-series": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-2.1.0.tgz",
      "integrity": "sha512-ZuRs1miPT4HrjFa+9fRfOFXxGJfORgelKV9f9nNOWw2gl6gVsRaVDOQP0+MI0G0wGKns1Yacsu0GjOFbTK0JFQ==",
      "dev": true
    },
    "p-finally": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
      "dev": true
    },
    "p-is-promise": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz",
      "integrity": "sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg==",
      "dev": true
    },
    "p-limit": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.2.2.tgz",
      "integrity": "sha512-WGR+xHecKTr7EbUEhyLSh5Dube9JtdiG78ufaeLxTgpudf/20KqyMioIUZJAezlTIi6evxuoUs9YXc11cU+yzQ==",
      "dev": true,
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
      "dev": true,
      "requires": {
        "p-limit": "^2.0.0"
      }
    },
    "p-map": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz",
      "integrity": "sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==",
      "dev": true,
      "requires": {
        "aggregate-error": "^3.0.0"
      }
    },
    "p-reduce": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-reduce/-/p-reduce-1.0.0.tgz",
      "integrity": "sha1-GMKw3ZNqRpClKfgjH1ig/bakffo=",
      "dev": true
    },
    "p-retry": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/p-retry/-/p-retry-3.0.1.tgz",
      "integrity": "sha512-XE6G4+YTTkT2a0UWb2kjZe8xNwf8bIbnqpc/IS/idOBVhyves0mK5OJgeocjx7q5pvX/6m23xuzVPYT1uGM73w==",
      "dev": true,
      "requires": {
        "retry": "^0.12.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true
    },
    "package-json": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
      "integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
      "dev": true,
      "requires": {
        "got": "^9.6.0",
        "registry-auth-token": "^4.0.0",
        "registry-url": "^5.0.0",
        "semver": "^6.2.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "pako": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
      "dev": true
    },
    "parallel-transform": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/parallel-transform/-/parallel-transform-1.2.0.tgz",
      "integrity": "sha512-P2vSmIu38uIlvdcU7fDkyrxj33gTUy/ABO5ZUbGowxNCopBq/OoD42bP4UmMrJoPyk4Uqf0mu3mtWBhHCZD8yg==",
      "dev": true,
      "requires": {
        "cyclist": "^1.0.1",
        "inherits": "^2.0.3",
        "readable-stream": "^2.1.5"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "param-case": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/param-case/-/param-case-2.1.1.tgz",
      "integrity": "sha1-35T9jPZTHs915r75oIWPvHK+Ikc=",
      "dev": true,
      "requires": {
        "no-case": "^2.2.0"
      }
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "parse-asn1": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.5.tgz",
      "integrity": "sha512-jkMYn1dcJqF6d5CpU689bq7w/b5ALS9ROVSpQDPrZsqqesUJii9qutvoT5ltGedNXMO2e16YUWIghG9KxaViTQ==",
      "dev": true,
      "requires": {
        "asn1.js": "^4.0.0",
        "browserify-aes": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.0",
        "pbkdf2": "^3.0.3",
        "safe-buffer": "^5.1.1"
      }
    },
    "parse-author": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/parse-author/-/parse-author-2.0.0.tgz",
      "integrity": "sha1-00YL8d3Q367tQtp1QkLmX7aEqB8=",
      "dev": true,
      "requires": {
        "author-regex": "^1.0.0"
      }
    },
    "parse-json": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
      "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
      "dev": true,
      "requires": {
        "error-ex": "^1.2.0"
      }
    },
    "parse5": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",
      "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ==",
      "dev": true
    },
    "parse5-htmlparser2-tree-adapter": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-5.1.1.tgz",
      "integrity": "sha512-CF+TKjXqoqyDwHqBhFQ+3l5t83xYi6fVT1tQNg+Ye0JRLnTxWvIroCjEp1A0k4lneHNBGnICUf0cfYVYGEazqw==",
      "dev": true,
      "requires": {
        "parse5": "^5.1.1"
      },
      "dependencies": {
        "parse5": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.1.tgz",
          "integrity": "sha512-ugq4DFI0Ptb+WWjAdOK16+u/nHfiIrcE+sh8kZMaM0WllQKLI9rOUq6c2b7cwPkXdzfQESqvoqK6ug7U/Yyzug==",
          "dev": true
        }
      }
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "dev": true
    },
    "pascalcase": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
      "dev": true
    },
    "path-browserify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz",
      "integrity": "sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==",
      "dev": true
    },
    "path-dirname": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=",
      "dev": true
    },
    "path-exists": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
      "dev": true
    },
    "path-is-inside": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
      "dev": true
    },
    "path-key": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
      "dev": true
    },
    "path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
      "dev": true
    },
    "pbkdf2": {
      "version": "3.0.17",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.17.tgz",
      "integrity": "sha512-U/il5MsrZp7mGg3mSQfn742na2T+1/vHDCG5/iTI3X9MKUuYUZVLQhyRsg06mCgDBTd57TxzgZt7P+fYfjRLtA==",
      "dev": true,
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA=",
      "dev": true
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
    },
    "picomatch": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz",
      "integrity": "sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==",
      "dev": true
    },
    "pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
      "dev": true
    },
    "pinkie": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
      "dev": true
    },
    "pinkie-promise": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
      "dev": true,
      "requires": {
        "pinkie": "^2.0.0"
      }
    },
    "pirates": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.1.tgz",
      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+Men7AuVdX6TA+s+uGA==",
      "dev": true,
      "requires": {
        "node-modules-regexp": "^1.0.0"
      }
    },
    "pkg-dir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
      "dev": true,
      "requires": {
        "find-up": "^3.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        }
      }
    },
    "pkg-up": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-2.0.0.tgz",
      "integrity": "sha1-yBmscoBZpGHKscOImivjxJoATX8=",
      "dev": true,
      "requires": {
        "find-up": "^2.1.0"
      },
      "dependencies": {
        "find-up": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
          "dev": true,
          "requires": {
            "locate-path": "^2.0.0"
          }
        },
        "locate-path": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
          "dev": true,
          "requires": {
            "p-locate": "^2.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-limit": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
          "dev": true,
          "requires": {
            "p-try": "^1.0.0"
          }
        },
        "p-locate": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
          "dev": true,
          "requires": {
            "p-limit": "^1.1.0"
          }
        },
        "p-try": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
          "dev": true
        }
      }
    },
    "plist": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/plist/-/plist-3.0.1.tgz",
      "integrity": "sha512-GpgvHHocGRyQm74b6FWEZZVRroHKE1I0/BTjAmySaohK+cUn+hZpbqXkc3KWgW3gQYkqcQej35FohcT0FRlkRQ==",
      "dev": true,
      "requires": {
        "base64-js": "^1.2.3",
        "xmlbuilder": "^9.0.7",
        "xmldom": "0.1.x"
      },
      "dependencies": {
        "xmlbuilder": {
          "version": "9.0.7",
          "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
          "integrity": "sha1-Ey7mPS7FVlxVfiD0wi35rKaGsQ0=",
          "dev": true
        }
      }
    },
    "pn": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",
      "integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA==",
      "dev": true
    },
    "pngjs": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-3.4.0.tgz",
      "integrity": "sha512-NCrCHhWmnQklfH4MtJMRjZ2a8c80qXeMlQMv2uVp9ISJMTt562SbGd6n2oq0PaPgKm7Z6pL9E2UlLIhC+SHL3w==",
      "dev": true
    },
    "pnp-webpack-plugin": {
      "version": "1.6.4",
      "resolved": "https://registry.npmjs.org/pnp-webpack-plugin/-/pnp-webpack-plugin-1.6.4.tgz",
      "integrity": "sha512-7Wjy+9E3WwLOEL30D+m8TSTF7qJJUJLONBnwQp0518siuMxUQUbgZwssaFX+QKlZkjHZcw/IpZCt/H0srrntSg==",
      "dev": true,
      "requires": {
        "ts-pnp": "^1.1.6"
      }
    },
    "popper.js": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.16.1.tgz",
      "integrity": "sha512-Wb4p1J4zyFTbM+u6WuO4XstYx4Ky9Cewe4DWrel7B0w6VVICvPwdOpotjzcf6eD8TsckVnIMNONQyPIUFOUbCQ=="
    },
    "portfinder": {
      "version": "1.0.25",
      "resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.25.tgz",
      "integrity": "sha512-6ElJnHBbxVA1XSLgBp7G1FiCkQdlqGzuF7DswL5tcea+E8UpuvPU7beVAjjRwCioTS9ZluNbu+ZyRvgTsmqEBg==",
      "dev": true,
      "requires": {
        "async": "^2.6.2",
        "debug": "^3.1.1",
        "mkdirp": "^0.5.1"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "posix-character-classes": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
      "dev": true
    },
    "postcss": {
      "version": "7.0.27",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.27.tgz",
      "integrity": "sha512-WuQETPMcW9Uf1/22HWUWP9lgsIC+KEHg2kozMflKjbeUtw9ujvFX6QmIfozaErDkmLWS9WEnEdEe6Uo9/BNTdQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.2",
        "source-map": "^0.6.1",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          },
          "dependencies": {
            "supports-color": {
              "version": "5.5.0",
              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
              "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
              "dev": true,
              "requires": {
                "has-flag": "^3.0.0"
              }
            }
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "postcss-calc": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.2.tgz",
      "integrity": "sha512-rofZFHUg6ZIrvRwPeFktv06GdbDYLcGqh9EwiMutZg+a0oePCCw1zHOEiji6LCpyRcjTREtPASuUqeAvYlEVvQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.27",
        "postcss-selector-parser": "^6.0.2",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "postcss-colormin": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",
      "integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "color": "^3.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-convert-values": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",
      "integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-discard-comments": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",
      "integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-duplicates": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",
      "integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-empty": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",
      "integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-overridden": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",
      "integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-import": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-12.0.1.tgz",
      "integrity": "sha512-3Gti33dmCjyKBgimqGxL3vcV8w9+bsHwO5UrBawp796+jdardbcFl4RP5w/76BwNL7aGzpKstIfF9I+kdE8pTw==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.1",
        "postcss-value-parser": "^3.2.3",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-load-config": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-2.1.0.tgz",
      "integrity": "sha512-4pV3JJVPLd5+RueiVVB+gFOAa7GWc25XQcMp86Zexzke69mKf6Nx9LRcQywdz7yZI9n1udOxmLuAwTBypypF8Q==",
      "dev": true,
      "requires": {
        "cosmiconfig": "^5.0.0",
        "import-cwd": "^2.0.0"
      }
    },
    "postcss-loader": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/postcss-loader/-/postcss-loader-3.0.0.tgz",
      "integrity": "sha512-cLWoDEY5OwHcAjDnkyRQzAXfs2jrKjXpO/HQFcc5b5u/r7aa471wdmChmwfnv7x2u840iat/wi0lQ5nbRgSkUA==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0",
        "postcss": "^7.0.0",
        "postcss-load-config": "^2.0.0",
        "schema-utils": "^1.0.0"
      },
      "dependencies": {
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        }
      }
    },
    "postcss-merge-longhand": {
      "version": "4.0.11",
      "resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",
      "integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",
      "dev": true,
      "requires": {
        "css-color-names": "0.0.4",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "stylehacks": "^4.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-merge-rules": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",
      "integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-api": "^3.0.0",
        "cssnano-util-same-parent": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0",
        "vendors": "^1.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "postcss-minify-font-values": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",
      "integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-gradients": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",
      "integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "is-color-stop": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-params": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",
      "integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "browserslist": "^4.0.0",
        "cssnano-util-get-arguments": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "uniqs": "^2.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-selectors": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",
      "integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "postcss-modules-extract-imports": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-2.0.0.tgz",
      "integrity": "sha512-LaYLDNS4SG8Q5WAWqIJgdHPJrDDr/Lv775rMBFUbgjTz6j34lUznACHcdRWroPvXANP2Vj7yNK57vp9eFqzLWQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.5"
      }
    },
    "postcss-modules-local-by-default": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-3.0.2.tgz",
      "integrity": "sha512-jM/V8eqM4oJ/22j0gx4jrp63GSvDH6v86OqyTHHUvk4/k1vceipZsaymiZ5PvocqZOl5SFHiFJqjs3la0wnfIQ==",
      "dev": true,
      "requires": {
        "icss-utils": "^4.1.1",
        "postcss": "^7.0.16",
        "postcss-selector-parser": "^6.0.2",
        "postcss-value-parser": "^4.0.0"
      }
    },
    "postcss-modules-scope": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-2.1.1.tgz",
      "integrity": "sha512-OXRUPecnHCg8b9xWvldG/jUpRIGPNRka0r4D4j0ESUU2/5IOnpsjfPPmDprM3Ih8CgZ8FXjWqaniK5v4rWt3oQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.6",
        "postcss-selector-parser": "^6.0.0"
      }
    },
    "postcss-modules-values": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-3.0.0.tgz",
      "integrity": "sha512-1//E5jCBrZ9DmRX+zCtmQtRSV6PV42Ix7Bzj9GbwJceduuf7IqP8MgeTXuRDHOWj2m0VzZD5+roFWDuU8RQjcg==",
      "dev": true,
      "requires": {
        "icss-utils": "^4.0.0",
        "postcss": "^7.0.6"
      }
    },
    "postcss-normalize-charset": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",
      "integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-normalize-display-values": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",
      "integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-positions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",
      "integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-repeat-style": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",
      "integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-string": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",
      "integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",
      "dev": true,
      "requires": {
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-timing-functions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",
      "integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-unicode": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",
      "integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-url": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",
      "integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",
      "dev": true,
      "requires": {
        "is-absolute-url": "^2.0.0",
        "normalize-url": "^3.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-whitespace": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",
      "integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-ordered-values": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",
      "integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-pxtorem": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-pxtorem/-/postcss-pxtorem-4.0.1.tgz",
      "integrity": "sha1-nGTQ7+SIVHPMHLAwXG/8PrtFsc0=",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.0",
        "postcss": "^5.2.10"
      },
      "dependencies": {
        "has-flag": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
          "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
          "dev": true
        },
        "postcss": {
          "version": "5.2.18",
          "resolved": "https://registry.npmjs.org/postcss/-/postcss-5.2.18.tgz",
          "integrity": "sha512-zrUjRRe1bpXKsX1qAJNJjqZViErVuyEkMTRrwu4ud4sbTtIBRmtaYDrHmcGgmrbsW3MHfmtIf+vJumgQn+PrXg==",
          "dev": true,
          "requires": {
            "chalk": "^1.1.3",
            "js-base64": "^2.1.9",
            "source-map": "^0.5.6",
            "supports-color": "^3.2.3"
          }
        },
        "supports-color": {
          "version": "3.2.3",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
          "integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
          "dev": true,
          "requires": {
            "has-flag": "^1.0.0"
          }
        }
      }
    },
    "postcss-reduce-initial": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",
      "integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-api": "^3.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        }
      }
    },
    "postcss-reduce-transforms": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",
      "integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-selector-parser": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",
      "integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",
      "dev": true,
      "requires": {
        "cssesc": "^3.0.0",
        "indexes-of": "^1.0.1",
        "uniq": "^1.0.1"
      }
    },
    "postcss-svgo": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.2.tgz",
      "integrity": "sha512-C6wyjo3VwFm0QgBy+Fu7gCYOkCmgmClghO+pjcxvrcBKtiKt0uCF+hvbMO1fyv5BMImRK90SMb+dwUnfbGd+jw==",
      "dev": true,
      "requires": {
        "is-svg": "^3.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "svgo": "^1.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-unique-selectors": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",
      "integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "postcss": "^7.0.0",
        "uniqs": "^2.0.0"
      }
    },
    "postcss-value-parser": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.0.3.tgz",
      "integrity": "sha512-N7h4pG+Nnu5BEIzyeaaIYWs0LI5XC40OrRh5L60z0QjFsqGWcHcbkBvpe1WYpcIS9yQ8sOi/vIPt1ejQCrMVrg==",
      "dev": true
    },
    "prelude-ls": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
      "dev": true
    },
    "prepend-http": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
      "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw=",
      "dev": true
    },
    "prettier": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/prettier/-/prettier-2.0.5.tgz",
      "integrity": "sha512-7PtVymN48hGcO4fGjybyBSIWDsLU4H4XlvOHfq91pz9kkGlonzwTfYkaIEwiRg/dAJF9YlbsduBAgtYLi+8cFg==",
      "dev": true
    },
    "prettier-linter-helpers": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
      "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
      "dev": true,
      "requires": {
        "fast-diff": "^1.1.2"
      }
    },
    "pretty": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pretty/-/pretty-2.0.0.tgz",
      "integrity": "sha1-rbx5YLe7/iiaVX3F9zdhmiINBqU=",
      "dev": true,
      "requires": {
        "condense-newlines": "^0.2.1",
        "extend-shallow": "^2.0.1",
        "js-beautify": "^1.6.12"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "pretty-error": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/pretty-error/-/pretty-error-2.1.1.tgz",
      "integrity": "sha1-X0+HyPkeWuPzuoerTPXgOxoX8aM=",
      "dev": true,
      "requires": {
        "renderkid": "^2.0.1",
        "utila": "~0.4"
      }
    },
    "pretty-format": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-24.9.0.tgz",
      "integrity": "sha512-00ZMZUiHaJrNfk33guavqgvfJS30sLYf0f8+Srklv0AMPodGGHcoHgksZ3OThYnIvOd+8yMCn0YiEOogjlgsnA==",
      "dev": true,
      "requires": {
        "@jest/types": "^24.9.0",
        "ansi-regex": "^4.0.0",
        "ansi-styles": "^3.2.0",
        "react-is": "^16.8.4"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        }
      }
    },
    "private": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",
      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg==",
      "dev": true
    },
    "process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
      "dev": true
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "dev": true
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "dev": true
    },
    "promise": {
      "version": "7.3.1",
      "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
      "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
      "dev": true,
      "optional": true,
      "requires": {
        "asap": "~2.0.3"
      }
    },
    "promise-inflight": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",
      "integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM=",
      "dev": true
    },
    "prompts": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.3.2.tgz",
      "integrity": "sha512-Q06uKs2CkNYVID0VqwfAl9mipo99zkBv/n2JtWY89Yxa3ZabWSrs0e2KTudKVa3peLUvYXMefDqIleLPVUBZMA==",
      "dev": true,
      "requires": {
        "kleur": "^3.0.3",
        "sisteransi": "^1.0.4"
      }
    },
    "proto-list": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/proto-list/-/proto-list-1.2.4.tgz",
      "integrity": "sha1-IS1b/hMYMGpCD2QCuOJv85ZHqEk=",
      "dev": true
    },
    "proxy-addr": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.6.tgz",
      "integrity": "sha512-dh/frvCBVmSsDYzw6n926jv974gddhkFPfiN8hPOi30Wax25QZyZEGveluCgliBnqmuM+UJmBErbAUFIoDbjOw==",
      "dev": true,
      "requires": {
        "forwarded": "~0.1.2",
        "ipaddr.js": "1.9.1"
      }
    },
    "prr": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",
      "integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
      "dev": true
    },
    "pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
      "dev": true
    },
    "psl": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.7.0.tgz",
      "integrity": "sha512-5NsSEDv8zY70ScRnOTn7bK7eanl2MvFrOrS/R6x+dBt5g1ghnj9Zv90kO8GwT8gxcu2ANyFprnFYB85IogIJOQ=="
    },
    "public-encrypt": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",
      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",
      "dev": true,
      "requires": {
        "bn.js": "^4.1.0",
        "browserify-rsa": "^4.0.0",
        "create-hash": "^1.1.0",
        "parse-asn1": "^5.0.0",
        "randombytes": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "pumpify": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.1.tgz",
      "integrity": "sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==",
      "dev": true,
      "requires": {
        "duplexify": "^3.6.0",
        "inherits": "^2.0.3",
        "pump": "^2.0.0"
      },
      "dependencies": {
        "pump": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
          "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        }
      }
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
    },
    "pupa": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pupa/-/pupa-2.0.1.tgz",
      "integrity": "sha512-hEJH0s8PXLY/cdXh66tNEQGndDrIKNqNC5xmrysZy3i5C3oEoLna7YAOad+7u125+zH1HNXUmGEkrhb3c2VriA==",
      "dev": true,
      "requires": {
        "escape-goat": "^2.0.0"
      }
    },
    "q": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
      "integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=",
      "dev": true
    },
    "qrcode": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.4.4.tgz",
      "integrity": "sha512-oLzEC5+NKFou9P0bMj5+v6Z40evexeE29Z9cummZXZ9QXyMr3lphkURzxjXgPJC5azpxcshoDWV1xE46z+/c3Q==",
      "dev": true,
      "requires": {
        "buffer": "^5.4.3",
        "buffer-alloc": "^1.2.0",
        "buffer-from": "^1.1.1",
        "dijkstrajs": "^1.0.1",
        "isarray": "^2.0.1",
        "pngjs": "^3.3.0",
        "yargs": "^13.2.4"
      },
      "dependencies": {
        "isarray": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
          "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
          "dev": true
        }
      }
    },
    "qs": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
    },
    "query-string": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-4.3.4.tgz",
      "integrity": "sha1-u7aTucqRXCMlFbIosaArYJBD2+s=",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      }
    },
    "querystring": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
      "dev": true
    },
    "querystring-es3": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=",
      "dev": true
    },
    "querystringify": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.1.1.tgz",
      "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA=="
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "randomfill": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",
      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",
      "dev": true,
      "requires": {
        "randombytes": "^2.0.5",
        "safe-buffer": "^5.1.0"
      }
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "dev": true
    },
    "raw-body": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
      "integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
      "dev": true,
      "requires": {
        "bytes": "3.1.0",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      }
    },
    "rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "dev": true,
      "requires": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      }
    },
    "rcedit": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/rcedit/-/rcedit-2.1.1.tgz",
      "integrity": "sha512-N1JyXxHD2zpqqW4A77RNK1d/M+tyed9JkvL/lnUI5cf4igF/8B9FNLFCtDUhGrk2GWEPxC+RF0WXWWB3I8QC7w==",
      "dev": true
    },
    "react-is": {
      "version": "16.13.0",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.0.tgz",
      "integrity": "sha512-GFMtL0vHkiBv9HluwNZTggSn/sCyEt9n02aM0dSAjGGyqyNlAyftYm4phPxdvCigG15JreC5biwxCgTAJZ7yAA==",
      "dev": true
    },
    "read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha1-5mTvMRYRZsl1HNvo28+GtftY93Q=",
      "dev": true,
      "requires": {
        "pify": "^2.3.0"
      }
    },
    "read-config-file": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/read-config-file/-/read-config-file-5.0.2.tgz",
      "integrity": "sha512-tVt1lsiSjs+FtL/vtfCivqtKR1UNk3BB3uPJQvJqkgtAYDvZjo0xyXFYSVmzaTcO+Jdi5G7O2K2vDV+p1M/oug==",
      "dev": true,
      "requires": {
        "dotenv": "^8.2.0",
        "dotenv-expand": "^5.1.0",
        "fs-extra": "^8.1.0",
        "js-yaml": "^3.13.1",
        "json5": "^2.1.1",
        "lazy-val": "^1.0.4"
      },
      "dependencies": {
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        },
        "json5": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.2.tgz",
          "integrity": "sha512-MoUOQ4WdiN3yxhm7NEVJSJrieAo5hNSLQ5sj05OTRHPL9HOBy8u4Bu88jsC1jvqAdN+E1bJmsUcZH+1HQxliqQ==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        },
        "minimist": {
          "version": "1.2.5",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
          "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==",
          "dev": true
        }
      }
    },
    "read-pkg": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz",
      "integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==",
      "dev": true,
      "requires": {
        "@types/normalize-package-data": "^2.4.0",
        "normalize-package-data": "^2.5.0",
        "parse-json": "^5.0.0",
        "type-fest": "^0.6.0"
      },
      "dependencies": {
        "parse-json": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.0.0.tgz",
          "integrity": "sha512-OOY5b7PAEFV0E2Fir1KOkxchnZNCdowAJgQ5NuxjpBKTRP3pQhwkrkxqQjeoKJ+fO7bCpmIZaogI4eZGDMEGOw==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "error-ex": "^1.3.1",
            "json-parse-better-errors": "^1.0.1",
            "lines-and-columns": "^1.1.6"
          }
        },
        "type-fest": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
          "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==",
          "dev": true
        }
      }
    },
    "readable-stream": {
      "version": "1.1.14",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",
      "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",
      "dev": true,
      "requires": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.1",
        "isarray": "0.0.1",
        "string_decoder": "~0.10.x"
      }
    },
    "readdirp": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
      "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.11",
        "micromatch": "^3.1.10",
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "realpath-native": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-1.1.0.tgz",
      "integrity": "sha512-wlgPA6cCIIg9gKz0fgAPjnzh4yR/LnXovwuo9hvyGvx3h8nX4+/iLZplfUWasXpqD8BdnGnP5njOFjkUwPzvjA==",
      "dev": true,
      "requires": {
        "util.promisify": "^1.0.0"
      }
    },
    "regenerate": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",
      "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg==",
      "dev": true
    },
    "regenerate-unicode-properties": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.2.0.tgz",
      "integrity": "sha512-F9DjY1vKLo/tPePDycuH3dn9H1OTPIkVD9Kz4LODu+F2C75mgjAJ7x/gwy6ZcSNRAAkhNlJSOHRe8k3p+K9WhA==",
      "dev": true,
      "requires": {
        "regenerate": "^1.4.0"
      }
    },
    "regenerator-runtime": {
      "version": "0.11.1",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
      "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg==",
      "dev": true
    },
    "regenerator-transform": {
      "version": "0.10.1",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.10.1.tgz",
      "integrity": "sha512-PJepbvDbuK1xgIgnau7Y90cwaAmO/LCLMI2mPvaXq2heGMR3aWW5/BQvYrhJ8jgmQjXewXvBjzfqKcVOmhjZ6Q==",
      "dev": true,
      "requires": {
        "babel-runtime": "^6.18.0",
        "babel-types": "^6.19.0",
        "private": "^0.1.6"
      }
    },
    "regex-not": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "regexp.prototype.flags": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.3.0.tgz",
      "integrity": "sha512-2+Q0C5g951OlYlJz6yu5/M33IcsESLlLfsyIaLJaG4FA2r4yP8MvVMJUUP/fVBkSpbbbZlS5gynbEWLipiiXiQ==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1"
      }
    },
    "regexpp": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",
      "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw==",
      "dev": true
    },
    "regexpu-core": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-2.0.0.tgz",
      "integrity": "sha1-SdA4g3uNz4v6W5pCE5k45uoq4kA=",
      "dev": true,
      "requires": {
        "regenerate": "^1.2.1",
        "regjsgen": "^0.2.0",
        "regjsparser": "^0.1.4"
      }
    },
    "registry-auth-token": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.1.1.tgz",
      "integrity": "sha512-9bKS7nTl9+/A1s7tnPeGrUpRcVY+LUh7bfFgzpndALdPfXQBfQV77rQVtqgUV3ti4vc/Ik81Ex8UJDWDQ12zQA==",
      "dev": true,
      "requires": {
        "rc": "^1.2.8"
      }
    },
    "registry-url": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
      "integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
      "dev": true,
      "requires": {
        "rc": "^1.2.8"
      }
    },
    "regjsgen": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.2.0.tgz",
      "integrity": "sha1-bAFq3qxVT3WCP+N6wFuS1aTtsfc=",
      "dev": true
    },
    "regjsparser": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.1.5.tgz",
      "integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
      "dev": true,
      "requires": {
        "jsesc": "~0.5.0"
      }
    },
    "relateurl": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz",
      "integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=",
      "dev": true
    },
    "remove-trailing-separator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",
      "dev": true
    },
    "renderkid": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/renderkid/-/renderkid-2.0.3.tgz",
      "integrity": "sha512-z8CLQp7EZBPCwCnncgf9C4XAi3WR0dv+uWu/PjIyhhAb5d6IJ/QZqlHFprHeKT+59//V6BNUsLbvN8+2LarxGA==",
      "dev": true,
      "requires": {
        "css-select": "^1.1.0",
        "dom-converter": "^0.2",
        "htmlparser2": "^3.3.0",
        "strip-ansi": "^3.0.0",
        "utila": "^0.4.0"
      },
      "dependencies": {
        "css-select": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz",
          "integrity": "sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=",
          "dev": true,
          "requires": {
            "boolbase": "~1.0.0",
            "css-what": "2.1",
            "domutils": "1.5.1",
            "nth-check": "~1.0.1"
          }
        },
        "css-what": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/css-what/-/css-what-2.1.3.tgz",
          "integrity": "sha512-a+EPoD+uZiNfh+5fxw2nO9QwFa6nJe2Or35fGY6Ipw1R3R4AGz1d1TEZrCegvw2YTmZ0jXirGYlzxxpYSHwpEg==",
          "dev": true
        },
        "domutils": {
          "version": "1.5.1",
          "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",
          "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",
          "dev": true,
          "requires": {
            "dom-serializer": "0",
            "domelementtype": "1"
          }
        }
      }
    },
    "repeat-element": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==",
      "dev": true
    },
    "repeat-string": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
      "dev": true
    },
    "request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "requires": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
        }
      }
    },
    "request-promise-core": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.3.tgz",
      "integrity": "sha512-QIs2+ArIGQVp5ZYbWD5ZLCY29D5CfWizP8eWnm8FoGD1TX61veauETVQbrV60662V0oFBkrDOuaBI8XgtuyYAQ==",
      "requires": {
        "lodash": "^4.17.15"
      }
    },
    "request-promise-native": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.8.tgz",
      "integrity": "sha512-dapwLGqkHtwL5AEbfenuzjTYg35Jd6KPytsC2/TLkVMz8rm+tNt72MGUWT1RP/aYawMpN6HqbNGBQaRcBtjQMQ==",
      "requires": {
        "request-promise-core": "1.1.3",
        "stealthy-require": "^1.1.1",
        "tough-cookie": "^2.3.3"
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
      "dev": true
    },
    "require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "dev": true
    },
    "requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8="
    },
    "resolve": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.15.1.tgz",
      "integrity": "sha512-84oo6ZTtoTUpjgNEr5SJyzQhzL72gaRodsSfyxC/AXRvwu0Yse9H8eF9IpGo7b8YetZhlI6v7ZQ6bKBFV/6S7w==",
      "dev": true,
      "requires": {
        "path-parse": "^1.0.6"
      }
    },
    "resolve-cwd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-2.0.0.tgz",
      "integrity": "sha1-AKn3OHVW4nA46uIyyqNypqWbZlo=",
      "dev": true,
      "requires": {
        "resolve-from": "^3.0.0"
      },
      "dependencies": {
        "resolve-from": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
          "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=",
          "dev": true
        }
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true
    },
    "resolve-url": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
      "dev": true
    },
    "responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha1-kYcg7ztjHFZCvgaPFa3lpG9Loec=",
      "dev": true,
      "requires": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "dev": true,
      "requires": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      }
    },
    "ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
      "dev": true
    },
    "retry": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
      "integrity": "sha1-G0KmJmoh8HQh0bC1S33BZ7AcATs=",
      "dev": true
    },
    "rgb-regex": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",
      "integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE=",
      "dev": true
    },
    "rgba-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",
      "integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM=",
      "dev": true
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "roarr": {
      "version": "2.15.2",
      "resolved": "https://registry.npmjs.org/roarr/-/roarr-2.15.2.tgz",
      "integrity": "sha512-jmaDhK9CO4YbQAV8zzCnq9vjAqeO489MS5ehZ+rXmFiPFFE6B+S9KYO6prjmLJ5A0zY3QxVlQdrIya7E/azz/Q==",
      "dev": true,
      "optional": true,
      "requires": {
        "boolean": "^3.0.0",
        "detect-node": "^2.0.4",
        "globalthis": "^1.0.1",
        "json-stringify-safe": "^5.0.1",
        "semver-compare": "^1.0.0",
        "sprintf-js": "^1.1.2"
      },
      "dependencies": {
        "sprintf-js": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.2.tgz",
          "integrity": "sha512-VE0SOVEHCk7Qc8ulkWw3ntAzXuqf7S2lvwQaDLRnUeIEaKNQJzV6BwmLKhOqT61aGhfUMrXeaBk+oDGCzvhcug==",
          "dev": true,
          "optional": true
        }
      }
    },
    "rss-parser": {
      "version": "3.7.5",
      "resolved": "https://registry.npmjs.org/rss-parser/-/rss-parser-3.7.5.tgz",
      "integrity": "sha512-bUbAJfiuNyR/IGpYie6ro6x7X26QMWHxz1Sy9qkPyU/vYwbf3YdopQJIIELwdp3FCU4evcyetOD8bA8fgS+SqA==",
      "requires": {
        "entities": "^1.1.1",
        "xml2js": "^0.4.19"
      }
    },
    "rsvp": {
      "version": "4.8.5",
      "resolved": "https://registry.npmjs.org/rsvp/-/rsvp-4.8.5.tgz",
      "integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839HwjwhBzhFmdsaEAfauA==",
      "dev": true
    },
    "rtcpeerconnection-shim": {
      "version": "1.2.15",
      "resolved": "https://registry.npmjs.org/rtcpeerconnection-shim/-/rtcpeerconnection-shim-1.2.15.tgz",
      "integrity": "sha512-C6DxhXt7bssQ1nHb154lqeL0SXz5Dx4RczXZu2Aa/L1NJFnEVDxFwCBo3fqtuljhHIGceg5JKBV4XJ0gW5JKyw==",
      "requires": {
        "sdp": "^2.6.0"
      }
    },
    "run-async": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.0.tgz",
      "integrity": "sha512-xJTbh/d7Lm7SBhc1tNvTpeCHaEzoyxPrqNlvSdMfBTYwaY++UJFyXUOxAtsRUXjlqOfj8luNaR9vjCh4KeV+pg==",
      "dev": true,
      "requires": {
        "is-promise": "^2.1.0"
      }
    },
    "run-queue": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz",
      "integrity": "sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1"
      }
    },
    "rxjs": {
      "version": "6.5.4",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.4.tgz",
      "integrity": "sha512-naMQXcgEo3csAEGvw/NydRA0fuS2nDZJiw1YUWFKU7aPPAPGZEsD4Iimit96qwCieH6y614MCLYwdkrWx7z/7Q==",
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "rxjs-compat": {
      "version": "6.6.3",
      "resolved": "https://registry.npmjs.org/rxjs-compat/-/rxjs-compat-6.6.3.tgz",
      "integrity": "sha512-y+wUqq7bS2dG+7rH2fNMoxsDiJ32RQzFxZQE/JdtpnmEZmwLQrb1tCiItyHxdXJHXjmHnnzFscn3b6PEmORGKw=="
    },
    "safe-buffer": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
      "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
    },
    "safe-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
      "dev": true,
      "requires": {
        "ret": "~0.1.10"
      }
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "sane": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/sane/-/sane-4.1.0.tgz",
      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",
      "dev": true,
      "requires": {
        "@cnakazawa/watch": "^1.0.3",
        "anymatch": "^2.0.0",
        "capture-exit": "^2.0.0",
        "exec-sh": "^0.3.2",
        "execa": "^1.0.0",
        "fb-watchman": "^2.0.0",
        "micromatch": "^3.1.4",
        "minimist": "^1.1.1",
        "walker": "~1.0.5"
      }
    },
    "sanitize-filename": {
      "version": "1.6.3",
      "resolved": "https://registry.npmjs.org/sanitize-filename/-/sanitize-filename-1.6.3.tgz",
      "integrity": "sha512-y/52Mcy7aw3gRm7IrcGDFx/bCk4AhRh2eI9luHOQM86nZsqwiRkkq2GekHXBBD+SmPidc8i2PqtYZl+pWJ8Oeg==",
      "dev": true,
      "requires": {
        "truncate-utf8-bytes": "^1.0.0"
      }
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
    },
    "saxes": {
      "version": "3.1.11",
      "resolved": "https://registry.npmjs.org/saxes/-/saxes-3.1.11.tgz",
      "integrity": "sha512-Ydydq3zC+WYDJK1+gRxRapLIED9PWeSuuS41wqyoRmzvhhh9nc+QQrVMKJYzJFULazeGhzSV0QleN2wD3boh2g==",
      "dev": true,
      "requires": {
        "xmlchars": "^2.1.1"
      }
    },
    "schema-utils": {
      "version": "2.6.4",
      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.4.tgz",
      "integrity": "sha512-VNjcaUxVnEeun6B2fiiUDjXXBtD4ZSH7pdbfIu1pOFwgptDPLMo/z9jr4sUfsjFVPqDCEin/F7IYlq7/E6yDbQ==",
      "dev": true,
      "requires": {
        "ajv": "^6.10.2",
        "ajv-keywords": "^3.4.1"
      }
    },
    "sdp": {
      "version": "2.12.0",
      "resolved": "https://registry.npmjs.org/sdp/-/sdp-2.12.0.tgz",
      "integrity": "sha512-jhXqQAQVM+8Xj5EjJGVweuEzgtGWb3tmEEpl3CLP3cStInSbVHSg0QWOGQzNq8pSID4JkpeV2mPqlMDLrm0/Vw=="
    },
    "select-hose": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/select-hose/-/select-hose-2.0.0.tgz",
      "integrity": "sha1-Yl2GWPhlr0Psliv8N2o3NZpJlMo=",
      "dev": true
    },
    "selfsigned": {
      "version": "1.10.7",
      "resolved": "https://registry.npmjs.org/selfsigned/-/selfsigned-1.10.7.tgz",
      "integrity": "sha512-8M3wBCzeWIJnQfl43IKwOmC4H/RAp50S8DF60znzjW5GVqTcSe2vWclt7hmYVPkKPlHWOu5EaWOMZ2Y6W8ZXTA==",
      "dev": true,
      "requires": {
        "node-forge": "0.9.0"
      }
    },
    "semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
      "dev": true
    },
    "semver-compare": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/semver-compare/-/semver-compare-1.0.0.tgz",
      "integrity": "sha1-De4hahyUGrN+nvsXiPavxf9VN/w=",
      "dev": true,
      "optional": true
    },
    "semver-diff": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
      "integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
      "dev": true,
      "requires": {
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "send": {
      "version": "0.17.1",
      "resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
      "integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "destroy": "~1.0.4",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "~1.7.2",
        "mime": "1.6.0",
        "ms": "2.1.1",
        "on-finished": "~2.3.0",
        "range-parser": "~1.2.1",
        "statuses": "~1.5.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          },
          "dependencies": {
            "ms": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
              "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
              "dev": true
            }
          }
        },
        "mime": {
          "version": "1.6.0",
          "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
          "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
          "dev": true
        },
        "ms": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
          "dev": true
        }
      }
    },
    "serialize-error": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-5.0.0.tgz",
      "integrity": "sha512-/VtpuyzYf82mHYTtI4QKtwHa79vAdU5OQpNPAmE/0UDdlGT0ZxHwC+J6gXkw29wwoVI8fMPsfcVHOwXtUQYYQA==",
      "dev": true,
      "optional": true,
      "requires": {
        "type-fest": "^0.8.0"
      }
    },
    "serialize-javascript": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-2.1.2.tgz",
      "integrity": "sha512-rs9OggEUF0V4jUSecXazOYsLfu7OGK2qIn3c7IPBiffz32XniEp/TX9Xmc9LQfK2nQ2QKHvZ2oygKUGU0lG4jQ==",
      "dev": true
    },
    "serve-index": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",
      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
      "dev": true,
      "requires": {
        "accepts": "~1.3.4",
        "batch": "0.6.1",
        "debug": "2.6.9",
        "escape-html": "~1.0.3",
        "http-errors": "~1.6.2",
        "mime-types": "~2.1.17",
        "parseurl": "~1.3.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "http-errors": {
          "version": "1.6.3",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
          "dev": true,
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.3",
            "setprototypeof": "1.1.0",
            "statuses": ">= 1.4.0 < 2"
          }
        },
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        },
        "setprototypeof": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==",
          "dev": true
        }
      }
    },
    "serve-static": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
      "integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
      "dev": true,
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.17.1"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",
      "dev": true
    },
    "set-value": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^2.0.1",
        "is-extendable": "^0.1.1",
        "is-plain-object": "^2.0.3",
        "split-string": "^3.0.1"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU=",
      "dev": true
    },
    "setprototypeof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
      "dev": true
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "shebang-command": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
      "dev": true,
      "requires": {
        "shebang-regex": "^1.0.0"
      }
    },
    "shebang-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
      "dev": true
    },
    "shell-quote": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.7.2.tgz",
      "integrity": "sha512-mRz/m/JVscCrkMyPqHc/bczi3OQHkLTqXHEFu0zDhK/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj/R7waKapmiQg==",
      "dev": true
    },
    "shellwords": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",
      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww==",
      "dev": true
    },
    "sigmund": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",
      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=",
      "dev": true
    },
    "signal-exit": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
      "dev": true
    },
    "simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "dev": true
    },
    "simple-get": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.0.tgz",
      "integrity": "sha512-bCR6cP+aTdScaQCnQKbPKtJOKDp/hj9EDLJo3Nw4y1QksqaovlW/bnptB6/c1e+qmNIDHRK+oXFDdEqBT8WzUA==",
      "dev": true,
      "requires": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.3.1"
      },
      "dependencies": {
        "is-arrayish": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
          "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
          "dev": true
        }
      }
    },
    "sisteransi": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==",
      "dev": true
    },
    "slash": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
      "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=",
      "dev": true
    },
    "slice-ansi": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",
      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.0",
        "astral-regex": "^1.0.0",
        "is-fullwidth-code-point": "^2.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        }
      }
    },
    "snapdragon": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
      "dev": true,
      "requires": {
        "base": "^0.11.1",
        "debug": "^2.2.0",
        "define-property": "^0.2.5",
        "extend-shallow": "^2.0.1",
        "map-cache": "^0.2.2",
        "source-map": "^0.5.6",
        "source-map-resolve": "^0.5.0",
        "use": "^3.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "snapdragon-node": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
      "dev": true,
      "requires": {
        "define-property": "^1.0.0",
        "isobject": "^3.0.0",
        "snapdragon-util": "^3.0.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "snapdragon-util": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
      "dev": true,
      "requires": {
        "kind-of": "^3.2.0"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "sockjs": {
      "version": "0.3.19",
      "resolved": "https://registry.npmjs.org/sockjs/-/sockjs-0.3.19.tgz",
      "integrity": "sha512-V48klKZl8T6MzatbLlzzRNhMepEys9Y4oGFpypBFFn1gLI/QQ9HtLLyWJNbPlwGLelOVOEijUbTTJeLLI59jLw==",
      "dev": true,
      "requires": {
        "faye-websocket": "^0.10.0",
        "uuid": "^3.0.1"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "sockjs-client": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.4.0.tgz",
      "integrity": "sha512-5zaLyO8/nri5cua0VtOrFXBPK1jbL4+1cebT/mmKA1E1ZXOvJrII75bPu0l0k843G/+iAbhEqzyKr0w/eCCj7g==",
      "dev": true,
      "requires": {
        "debug": "^3.2.5",
        "eventsource": "^1.0.7",
        "faye-websocket": "~0.11.1",
        "inherits": "^2.0.3",
        "json3": "^3.3.2",
        "url-parse": "^1.4.3"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "faye-websocket": {
          "version": "0.11.3",
          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.3.tgz",
          "integrity": "sha512-D2y4bovYpzziGgbHYtGCMjlJM36vAl/y+xUyn1C+FVx8szd1E+86KwVw6XvYSzOP8iMpm1X0I4xJD+QtUb36OA==",
          "dev": true,
          "requires": {
            "websocket-driver": ">=0.5.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "sort-keys": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-1.1.2.tgz",
      "integrity": "sha1-RBttTTRnmPG05J6JIK37oOVD+a0=",
      "dev": true,
      "requires": {
        "is-plain-obj": "^1.0.0"
      }
    },
    "sortablejs": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/sortablejs/-/sortablejs-1.10.2.tgz",
      "integrity": "sha512-YkPGufevysvfwn5rfdlGyrGjt7/CRHwvRPogD/lC+TnvcN29jDpCifKP+rBqf+LRldfXSTh+0CGLcSg0VIxq3A=="
    },
    "source-list-map": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",
      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==",
      "dev": true
    },
    "source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
      "dev": true
    },
    "source-map-resolve": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
      "dev": true,
      "requires": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0",
        "resolve-url": "^0.2.1",
        "source-map-url": "^0.4.0",
        "urix": "^0.1.0"
      }
    },
    "source-map-url": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
      "dev": true
    },
    "spdx-correct": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",
      "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",
      "dev": true,
      "requires": {
        "spdx-expression-parse": "^3.0.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-exceptions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",
      "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA==",
      "dev": true
    },
    "spdx-expression-parse": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
      "dev": true,
      "requires": {
        "spdx-exceptions": "^2.1.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-license-ids": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.5.tgz",
      "integrity": "sha512-J+FWzZoynJEXGphVIS+XEh3kFSjZX/1i9gFBaWQcB+/tmpe2qUsSBABpcxqxnAxFdiUFEgAX1bjYGQvIZmoz9Q==",
      "dev": true
    },
    "spdy": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/spdy/-/spdy-4.0.1.tgz",
      "integrity": "sha512-HeZS3PBdMA+sZSu0qwpCxl3DeALD5ASx8pAX0jZdKXSpPWbQ6SYGnlg3BBmYLx5LtiZrmkAZfErCm2oECBcioA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0",
        "handle-thing": "^2.0.0",
        "http-deceiver": "^1.2.7",
        "select-hose": "^2.0.0",
        "spdy-transport": "^3.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "spdy-transport": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/spdy-transport/-/spdy-transport-3.0.0.tgz",
      "integrity": "sha512-hsLVFE5SjA6TCisWeJXFKniGGOpBgMLmerfO2aCyCU5s7nJ/rpAepqmFifv/GCbSbueEeAJJnmSQ2rKC/g8Fcw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0",
        "detect-node": "^2.0.4",
        "hpack.js": "^2.1.6",
        "obuf": "^1.1.2",
        "readable-stream": "^3.0.6",
        "wbuf": "^1.7.3"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "readable-stream": {
          "version": "3.6.0",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
          "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
          "dev": true,
          "requires": {
            "inherits": "^2.0.3",
            "string_decoder": "^1.1.1",
            "util-deprecate": "^1.0.1"
          }
        },
        "string_decoder": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
          "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.2.0"
          }
        }
      }
    },
    "split-string": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.0"
      }
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
      "dev": true
    },
    "sshpk": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      }
    },
    "ssri": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
      "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
      "dev": true,
      "requires": {
        "figgy-pudding": "^3.5.1"
      }
    },
    "stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "dev": true
    },
    "stack-utils": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-1.0.2.tgz",
      "integrity": "sha512-MTX+MeG5U994cazkjd/9KNAapsHnibjMLnfXodlkXw76JEea0UiNzrqidzo1emMwk7w5Qhc9jd4Bn9TBb1MFwA==",
      "dev": true
    },
    "stackframe": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stackframe/-/stackframe-1.1.1.tgz",
      "integrity": "sha512-0PlYhdKh6AfFxRyK/v+6/k+/mMfyiEBbTM5L94D0ZytQnJ166wuwoTYLHFWGbs2dpA8Rgq763KGWmN1EQEYHRQ==",
      "dev": true
    },
    "stat-mode": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/stat-mode/-/stat-mode-1.0.0.tgz",
      "integrity": "sha512-jH9EhtKIjuXZ2cWxmXS8ZP80XyC3iasQxMDV8jzhNJpfDb7VbQLVW4Wvsxz9QZvzV+G4YoSfBUVKDOyxLzi/sg==",
      "dev": true
    },
    "static-extend": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
      "dev": true,
      "requires": {
        "define-property": "^0.2.5",
        "object-copy": "^0.1.0"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
      "dev": true
    },
    "stealthy-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
    },
    "stream-browserify": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",
      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",
      "dev": true,
      "requires": {
        "inherits": "~2.0.1",
        "readable-stream": "^2.0.2"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-each": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.3.tgz",
      "integrity": "sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "stream-shift": "^1.0.0"
      }
    },
    "stream-http": {
      "version": "2.8.3",
      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",
      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",
      "dev": true,
      "requires": {
        "builtin-status-codes": "^3.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.3.6",
        "to-arraybuffer": "^1.0.0",
        "xtend": "^4.0.0"
      },
      "dependencies": {
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "readable-stream": {
          "version": "2.3.7",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
          "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
          "dev": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        },
        "string_decoder": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
          "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
          "dev": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        }
      }
    },
    "stream-shift": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.1.tgz",
      "integrity": "sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ==",
      "dev": true
    },
    "strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha1-J5siXfHVgrH1TmWt3UNS4Y+qBxM=",
      "dev": true
    },
    "string-length": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/string-length/-/string-length-2.0.0.tgz",
      "integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
      "dev": true,
      "requires": {
        "astral-regex": "^1.0.0",
        "strip-ansi": "^4.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
      "dev": true,
      "requires": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      }
    },
    "string.prototype.trimleft": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string.prototype.trimleft/-/string.prototype.trimleft-2.1.1.tgz",
      "integrity": "sha512-iu2AGd3PuP5Rp7x2kEZCrB2Nf41ehzh+goo8TV7z8/XDBbsvc6HQIlUl9RjkZ4oyrW1XM5UwlGl1oVEaDjg6Ag==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "function-bind": "^1.1.1"
      }
    },
    "string.prototype.trimright": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string.prototype.trimright/-/string.prototype.trimright-2.1.1.tgz",
      "integrity": "sha512-qFvWL3/+QIgZXVmJBfpHmxLB7xsUXz6HsUmP8+5dRaC3Q7oKUv9Vo6aMCRZC1smrtyECFsIT30PqBJ1gTjAs+g==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "function-bind": "^1.1.1"
      }
    },
    "string_decoder": {
      "version": "0.10.31",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
      "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
      "dev": true
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
      "dev": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "strip-bom": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz",
      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==",
      "dev": true
    },
    "strip-eof": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
      "dev": true
    },
    "strip-final-newline": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
      "dev": true
    },
    "strip-indent": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-2.0.0.tgz",
      "integrity": "sha1-XvjbKV0B5u1sv3qrlpmNeCJSe2g=",
      "dev": true
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo=",
      "dev": true
    },
    "stylehacks": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",
      "integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0"
      },
      "dependencies": {
        "browserslist": {
          "version": "4.9.1",
          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.9.1.tgz",
          "integrity": "sha512-Q0DnKq20End3raFulq6Vfp1ecB9fh8yUNV55s8sekaDDeqBaCtWlRHCUdaWyUeSSBJM7IbM6HcsyaeYqgeDhnw==",
          "dev": true,
          "requires": {
            "caniuse-lite": "^1.0.30001030",
            "electron-to-chromium": "^1.3.363",
            "node-releases": "^1.1.50"
          }
        },
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "supports-color": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
      "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
      "dev": true
    },
    "supports-hyperlinks": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-2.1.0.tgz",
      "integrity": "sha512-zoE5/e+dnEijk6ASB6/qrK+oYdm2do1hjoLWrqUC/8WEIW1gbxFcKuBof7sW8ArN6e+AYvsE8HBGiVRWL/F5CA==",
      "dev": true,
      "requires": {
        "has-flag": "^4.0.0",
        "supports-color": "^7.0.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "svg-tags": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/svg-tags/-/svg-tags-1.0.0.tgz",
      "integrity": "sha1-WPcc7jvVGbWdSyqEO2x95krAR2Q=",
      "dev": true
    },
    "svgo": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-1.3.2.tgz",
      "integrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.1",
        "coa": "^2.0.2",
        "css-select": "^2.0.0",
        "css-select-base-adapter": "^0.1.1",
        "css-tree": "1.0.0-alpha.37",
        "csso": "^4.0.2",
        "js-yaml": "^3.13.1",
        "mkdirp": "~0.5.1",
        "object.values": "^1.1.0",
        "sax": "~1.2.4",
        "stable": "^0.1.8",
        "unquote": "~1.1.1",
        "util.promisify": "~1.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "symbol-hd-wallets": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/symbol-hd-wallets/-/symbol-hd-wallets-0.13.0.tgz",
      "integrity": "sha512-hu/+j4Bvsr5sWMwoEbdYAriQwcHTxtm4NUXF8z/HqSLZOa2euOgZsvP3KHhE4M4oN/GuA5CdrIVIC3qn4uyihg==",
      "dev": true,
      "requires": {
        "@types/bip32": "^1.0.2",
        "bip32": "^1.0.4",
        "bip39": "^3.0.2",
        "bip44-constants": "^8.0.5",
        "bs58check": "^2.1.2",
        "create-hash": "^1.2.0",
        "create-hmac": "^1.1.7",
        "js-sha3": "^0.8.0",
        "rxjs": "^6.5.4",
        "symbol-sdk": "^0.21.0",
        "tiny-secp256k1": "^1.1.3",
        "tweetnacl": "^1.0.3"
      },
      "dependencies": {
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        }
      }
    },
    "symbol-openapi-typescript-fetch-client": {
      "version": "0.10.0-3",
      "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-fetch-client/-/symbol-openapi-typescript-fetch-client-0.10.0-3.tgz",
      "integrity": "sha512-cdRz7Nc/m2i7CC8wHtj//z5RxOKEKhS4l+fFQvh7YUlYcUPaHbgcq4RMXSZPmMJ4PnzocnqWpVKjMj5cTYgrPA==",
      "dev": true
    },
    "symbol-qr-library": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/symbol-qr-library/-/symbol-qr-library-0.13.0.tgz",
      "integrity": "sha512-NZSMo+bcH4hinZr40pIqxSbLsWA1dAFUdGXVw2eG1PUlmQldv3UM4Un5STsKLwRlzHMMoeyBoaKKk01C4qsJPw==",
      "dev": true,
      "requires": {
        "braces": ">=2.3.1",
        "canvas": "^2.6.1",
        "crypto-js": "^3.3.0",
        "open": "^7.0.2",
        "qrcode": "^1.4.4",
        "symbol-hd-wallets": "0.13.0",
        "symbol-sdk": "^0.21.0"
      },
      "dependencies": {
        "crypto-js": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.3.0.tgz",
          "integrity": "sha512-DIT51nX0dCfKltpRiXV+/TVZq+Qq2NgF4644+K7Ttnla7zEzqc+kjJyiB96BHNyUTBxyjzRcZYpUdZa+QAqi6Q==",
          "dev": true
        }
      }
    },
    "symbol-sdk": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-0.21.0.tgz",
      "integrity": "sha512-YFJ1PcVlFSivZe8RUOOGJJvXN2uleNTZB8ma6VONdz+obyI8QMAzdt4c6niyGTr76Md6dRQVJ/uaq+MpbJtDQg==",
      "dev": true,
      "requires": {
        "bluebird": "^3.7.2",
        "catbuffer-typescript": "0.0.22",
        "crypto-js": "^4.0.0",
        "diff": "^4.0.2",
        "futoin-hkdf": "^1.3.1",
        "js-joda": "^1.6.2",
        "js-sha256": "^0.9.0",
        "js-sha3": "^0.8.0",
        "js-sha512": "^0.8.0",
        "long": "^4.0.0",
        "merkletreejs": "^0.1.7",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.0",
        "request": "^2.88.0",
        "request-promise-native": "^1.0.5",
        "ripemd160": "^2.0.2",
        "rxjs": "^6.5.3",
        "rxjs-compat": "^6.5.3",
        "symbol-openapi-typescript-fetch-client": "0.10.0-3",
        "tweetnacl": "^1.0.3",
        "utf8": "^3.0.0",
        "ws": "^7.2.3"
      },
      "dependencies": {
        "node-fetch": {
          "version": "2.6.1",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
          "integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw==",
          "dev": true
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
          "dev": true
        },
        "ws": {
          "version": "7.3.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.3.1.tgz",
          "integrity": "sha512-D3RuNkynyHmEJIpD2qrgVkc9DQ23OrN/moAwZX4L8DfvszsJxpjQuUq3LMx6HoYji9fbIOBY18XWBsAux1ZZUA==",
          "dev": true
        }
      }
    },
    "symbol-tree": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
      "dev": true
    },
    "symbol-uri-scheme": {
      "version": "0.4.7",
      "resolved": "https://registry.npmjs.org/symbol-uri-scheme/-/symbol-uri-scheme-0.4.7.tgz",
      "integrity": "sha512-I27717eExOSG6D4yBn7mPbVt7kDpRF8zz70OCfNHd9de2IXn3aWxf+YeunQPrTJrdBhLsJXo1u8DqPR73QAeQA==",
      "requires": {
        "rxjs": "^6.5.3",
        "symbol-sdk": "^0.20.6",
        "url-parse": "1.4.7"
      },
      "dependencies": {
        "catbuffer-typescript": {
          "version": "0.0.21",
          "resolved": "https://registry.npmjs.org/catbuffer-typescript/-/catbuffer-typescript-0.0.21.tgz",
          "integrity": "sha512-fKz6NoojjWOf7eJRZeh3pH6wMkxTXSfH/55yfzaImnhTQeaL6j1xiYElgWDDkKDJe2N4UWUJywRjbfT96I/GJw=="
        },
        "node-fetch": {
          "version": "2.6.1",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
          "integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw=="
        },
        "symbol-openapi-typescript-fetch-client": {
          "version": "0.9.6",
          "resolved": "https://registry.npmjs.org/symbol-openapi-typescript-fetch-client/-/symbol-openapi-typescript-fetch-client-0.9.6.tgz",
          "integrity": "sha512-ZZtR031IBkYfiG0bR26vGckKmUrJzY9sggXMusrqloxweNovtzf7Aqpx7nNEpCJdMNzwv+E0V8mYBwxgFuiMfg=="
        },
        "symbol-sdk": {
          "version": "0.20.7",
          "resolved": "https://registry.npmjs.org/symbol-sdk/-/symbol-sdk-0.20.7.tgz",
          "integrity": "sha512-313Uo/cev3ygvVLwTyDtnD1Qh56u4HeuUt5Q05R+WB3zjZl5xffXs5VKPRA4Th45/0Leyxk7oMPAS9hfFim5vw==",
          "requires": {
            "bluebird": "^3.7.2",
            "catbuffer-typescript": "0.0.21",
            "crypto-js": "^4.0.0",
            "diff": "^4.0.2",
            "futoin-hkdf": "^1.3.1",
            "js-joda": "^1.6.2",
            "js-sha256": "^0.9.0",
            "js-sha3": "^0.8.0",
            "js-sha512": "^0.8.0",
            "long": "^4.0.0",
            "merkletreejs": "^0.1.7",
            "minimist": "^1.2.5",
            "node-fetch": "^2.6.0",
            "request": "^2.88.0",
            "request-promise-native": "^1.0.5",
            "ripemd160": "^2.0.2",
            "rxjs": "^6.5.3",
            "rxjs-compat": "^6.5.3",
            "symbol-openapi-typescript-fetch-client": "0.9.6",
            "tweetnacl": "^1.0.3",
            "utf8": "^3.0.0",
            "ws": "^7.2.3"
          }
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
        },
        "ws": {
          "version": "7.3.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-7.3.1.tgz",
          "integrity": "sha512-D3RuNkynyHmEJIpD2qrgVkc9DQ23OrN/moAwZX4L8DfvszsJxpjQuUq3LMx6HoYji9fbIOBY18XWBsAux1ZZUA=="
        }
      }
    },
    "table": {
      "version": "5.4.6",
      "resolved": "https://registry.npmjs.org/table/-/table-5.4.6.tgz",
      "integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==",
      "dev": true,
      "requires": {
        "ajv": "^6.10.2",
        "lodash": "^4.17.14",
        "slice-ansi": "^2.1.0",
        "string-width": "^3.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "tapable": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-1.1.3.tgz",
      "integrity": "sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA==",
      "dev": true
    },
    "tar": {
      "version": "4.4.13",
      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
      "integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
      "dev": true,
      "requires": {
        "chownr": "^1.1.1",
        "fs-minipass": "^1.2.5",
        "minipass": "^2.8.6",
        "minizlib": "^1.2.1",
        "mkdirp": "^0.5.0",
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.3"
      }
    },
    "temp-file": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/temp-file/-/temp-file-3.3.7.tgz",
      "integrity": "sha512-9tBJKt7GZAQt/Rg0QzVWA8Am8c1EFl+CAv04/aBVqlx5oyfQ508sFIABshQ0xbZu6mBrFLWIUXO/bbLYghW70g==",
      "dev": true,
      "requires": {
        "async-exit-hook": "^2.0.1",
        "fs-extra": "^8.1.0"
      },
      "dependencies": {
        "fs-extra": {
          "version": "8.1.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.2.0",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        }
      }
    },
    "term-size": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.0.tgz",
      "integrity": "sha512-a6sumDlzyHVJWb8+YofY4TW112G6p2FCPEAFk+59gIYHv3XHRhm9ltVQ9kli4hNWeQBwSpe8cRN25x0ROunMOw==",
      "dev": true
    },
    "terminal-link": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/terminal-link/-/terminal-link-2.1.1.tgz",
      "integrity": "sha512-un0FmiRUQNr5PJqy9kP7c40F5BOfpGlYTrxonDChEZB7pzZxRNp/bt+ymiy9/npwXya9KH99nJ/GXFIiUkYGFQ==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^4.2.1",
        "supports-hyperlinks": "^2.0.0"
      }
    },
    "terser": {
      "version": "4.6.6",
      "resolved": "https://registry.npmjs.org/terser/-/terser-4.6.6.tgz",
      "integrity": "sha512-4lYPyeNmstjIIESr/ysHg2vUPRGf2tzF9z2yYwnowXVuVzLEamPN1Gfrz7f8I9uEPuHcbFlW4PLIAsJoxXyJ1g==",
      "dev": true,
      "requires": {
        "commander": "^2.20.0",
        "source-map": "~0.6.1",
        "source-map-support": "~0.5.12"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "source-map-support": {
          "version": "0.5.16",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.16.tgz",
          "integrity": "sha512-efyLRJDr68D9hBBNIPWFjhpFzURh+KJykQwvMyW5UiZzYwoF6l4YMMDIJJEyFWxWCqfyxLzz6tSfUFR+kXXsVQ==",
          "dev": true,
          "requires": {
            "buffer-from": "^1.0.0",
            "source-map": "^0.6.0"
          }
        }
      }
    },
    "terser-webpack-plugin": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-1.4.3.tgz",
      "integrity": "sha512-QMxecFz/gHQwteWwSo5nTc6UaICqN1bMedC5sMtUc7y3Ha3Q8y6ZO0iCR8pq4RJC8Hjf0FEPEHZqcMB/+DFCrA==",
      "dev": true,
      "requires": {
        "cacache": "^12.0.2",
        "find-cache-dir": "^2.1.0",
        "is-wsl": "^1.1.0",
        "schema-utils": "^1.0.0",
        "serialize-javascript": "^2.1.2",
        "source-map": "^0.6.1",
        "terser": "^4.1.2",
        "webpack-sources": "^1.4.0",
        "worker-farm": "^1.7.0"
      },
      "dependencies": {
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "test-exclude": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.3.tgz",
      "integrity": "sha512-M+oxtseCFO3EDtAaGH7iiej3CBkzXqFMbzqYAACdzKui4eZA+pq3tZEwChvOdNfa7xxy8BfbmgJSIr43cC/+2g==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "read-pkg-up": "^4.0.0",
        "require-main-filename": "^2.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "load-json-file": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
          "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "parse-json": "^4.0.0",
            "pify": "^3.0.0",
            "strip-bom": "^3.0.0"
          }
        },
        "parse-json": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
          "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
          "dev": true,
          "requires": {
            "error-ex": "^1.3.1",
            "json-parse-better-errors": "^1.0.1"
          }
        },
        "path-type": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
          "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
          "dev": true,
          "requires": {
            "pify": "^3.0.0"
          }
        },
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        },
        "read-pkg": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
          "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
          "dev": true,
          "requires": {
            "load-json-file": "^4.0.0",
            "normalize-package-data": "^2.3.2",
            "path-type": "^3.0.0"
          }
        },
        "read-pkg-up": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",
          "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",
          "dev": true,
          "requires": {
            "find-up": "^3.0.0",
            "read-pkg": "^3.0.0"
          }
        },
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
      "dev": true
    },
    "thenify": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.0.tgz",
      "integrity": "sha1-5p44obq+lpsBCCB5eLn2K4hgSDk=",
      "dev": true,
      "requires": {
        "any-promise": "^1.0.0"
      }
    },
    "thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha1-GhkY1ALY/D+Y+/I02wvMjMEOlyY=",
      "dev": true,
      "requires": {
        "thenify": ">= 3.1.0 < 4"
      }
    },
    "thread-loader": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/thread-loader/-/thread-loader-2.1.3.tgz",
      "integrity": "sha512-wNrVKH2Lcf8ZrWxDF/khdlLlsTMczdcwPA9VEK4c2exlEPynYWxi9op3nPTo5lAnDIkE0rQEB3VBP+4Zncc9Hg==",
      "dev": true,
      "requires": {
        "loader-runner": "^2.3.1",
        "loader-utils": "^1.1.0",
        "neo-async": "^2.6.0"
      }
    },
    "throat": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/throat/-/throat-5.0.0.tgz",
      "integrity": "sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==",
      "dev": true
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
      "dev": true
    },
    "thunky": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/thunky/-/thunky-1.1.0.tgz",
      "integrity": "sha512-eHY7nBftgThBqOyHGVN+l8gF0BucP09fMo0oO/Lb0w1OF80dJv+lDVpXG60WMQvkcxAkNybKsrEIE3ZtKGmPrA==",
      "dev": true
    },
    "timers-browserify": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.11.tgz",
      "integrity": "sha512-60aV6sgJ5YEbzUdn9c8kYGIqOubPoUdqQCul3SBAsRCZ40s6Y5cMcrW4dt3/k/EsbLVJNl9n6Vz3fTc+k2GeKQ==",
      "dev": true,
      "requires": {
        "setimmediate": "^1.0.4"
      }
    },
    "timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q=",
      "dev": true
    },
    "tiny-secp256k1": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/tiny-secp256k1/-/tiny-secp256k1-1.1.5.tgz",
      "integrity": "sha512-duE2hSLSQIpHGzmK48OgRrGTi+4OTkXLC6aa86uOYQ6LLCYZSarVKIAvEtY7MoXjoL6bOXMSerEGMzrvW4SkDw==",
      "dev": true,
      "requires": {
        "bindings": "^1.3.0",
        "bn.js": "^4.11.8",
        "create-hmac": "^1.1.7",
        "elliptic": "^6.4.0",
        "nan": "^2.13.2"
      }
    },
    "tinycolor2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/tinycolor2/-/tinycolor2-1.4.1.tgz",
      "integrity": "sha1-9PrTM0R7wLB9TcjpIJ2POaisd+g="
    },
    "tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "dev": true,
      "requires": {
        "os-tmpdir": "~1.0.2"
      }
    },
    "tmp-promise": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/tmp-promise/-/tmp-promise-1.1.0.tgz",
      "integrity": "sha512-8+Ah9aB1IRXCnIOxXZ0uFozV1nMU5xiu7hhFVUSxZ3bYu+psD4TzagCzVbexUCgNNGJnsmNDQlS4nG3mTyoNkw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.0",
        "tmp": "0.1.0"
      },
      "dependencies": {
        "tmp": {
          "version": "0.1.0",
          "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.1.0.tgz",
          "integrity": "sha512-J7Z2K08jbGcdA1kkQpJSqLF6T0tdQqpR2pnSUXsIchbPdTI9v3e85cLW0d6WDhwuAleOV71j2xWs8qMPfK7nKw==",
          "dev": true,
          "requires": {
            "rimraf": "^2.6.3"
          },
          "dependencies": {
            "rimraf": {
              "version": "2.7.1",
              "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
              "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
              "dev": true,
              "requires": {
                "glob": "^7.1.3"
              }
            }
          }
        }
      }
    },
    "tmpl": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz",
      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE=",
      "dev": true
    },
    "to-arraybuffer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",
      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
      "dev": true
    },
    "to-fast-properties": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
      "integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
      "dev": true
    },
    "to-object-path": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "is-buffer": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
      "dev": true
    },
    "to-regex": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
      "dev": true,
      "requires": {
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "regex-not": "^1.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==",
      "dev": true
    },
    "toposort": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/toposort/-/toposort-1.0.7.tgz",
      "integrity": "sha1-LmhELZ9k7HILjMieZEOsbKqVACk=",
      "dev": true
    },
    "tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "requires": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      }
    },
    "tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
      "dev": true,
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "treeify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz",
      "integrity": "sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A=="
    },
    "trezor-connect": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/trezor-connect/-/trezor-connect-7.0.5.tgz",
      "integrity": "sha512-cGHcNuO/kGVF6b1mp5VB/RwXcXwqZJDPLp3opx7vM+BQ8xB4oDAUdL+T8aCKRbDv6HwP/wvGwoaok/+9kYOPfA==",
      "requires": {
        "@babel/runtime": "^7.3.1",
        "events": "^3.0.0",
        "whatwg-fetch": "^3.0.0"
      }
    },
    "truncate-utf8-bytes": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/truncate-utf8-bytes/-/truncate-utf8-bytes-1.0.2.tgz",
      "integrity": "sha1-QFkjkJWS1W94pYGENLC3hInKXys=",
      "dev": true,
      "requires": {
        "utf8-byte-length": "^1.0.1"
      }
    },
    "tryer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tryer/-/tryer-1.0.1.tgz",
      "integrity": "sha512-c3zayb8/kWWpycWYg87P71E1S1ZL6b6IJxfb5fvsUgsf0S2MVGaDhDXXjDMpdCpfWXqptc+4mXwmiy1ypXqRAA==",
      "dev": true
    },
    "ts-jest": {
      "version": "25.3.0",
      "resolved": "https://registry.npmjs.org/ts-jest/-/ts-jest-25.3.0.tgz",
      "integrity": "sha512-qH/uhaC+AFDU9JfAueSr0epIFJkGMvUPog4FxSEVAtPOur1Oni5WBJMiQIkfHvc7PviVRsnlVLLY2I6221CQew==",
      "dev": true,
      "requires": {
        "bs-logger": "0.x",
        "buffer-from": "1.x",
        "fast-json-stable-stringify": "2.x",
        "json5": "2.x",
        "lodash.memoize": "4.x",
        "make-error": "1.x",
        "mkdirp": "1.x",
        "resolve": "1.x",
        "semver": "6.x",
        "yargs-parser": "^18.1.1"
      },
      "dependencies": {
        "json5": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.2.tgz",
          "integrity": "sha512-MoUOQ4WdiN3yxhm7NEVJSJrieAo5hNSLQ5sj05OTRHPL9HOBy8u4Bu88jsC1jvqAdN+E1bJmsUcZH+1HQxliqQ==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        },
        "mkdirp": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.3.tgz",
          "integrity": "sha512-6uCP4Qc0sWsgMLy1EOqqS/3rjDHOEnsStVr/4vtAIK2Y5i2kA7lFFejYrpIyiN9w0pYf4ckeCYT9f1r1P9KX5g==",
          "dev": true
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "yargs-parser": {
          "version": "18.1.2",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.2.tgz",
          "integrity": "sha512-hlIPNR3IzC1YuL1c2UwwDKpXlNFBqD1Fswwh1khz5+d8Cq/8yc/Mn0i+rQXduu8hcrFKvO7Eryk+09NecTQAAQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "ts-loader": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/ts-loader/-/ts-loader-6.2.2.tgz",
      "integrity": "sha512-HDo5kXZCBml3EUPcc7RlZOV/JGlLHwppTLEHb3SHnr5V7NXD4klMEkrhJe5wgRbaWsSXi+Y1SIBN/K9B6zWGWQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.3.0",
        "enhanced-resolve": "^4.0.0",
        "loader-utils": "^1.0.2",
        "micromatch": "^4.0.0",
        "semver": "^6.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "micromatch": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.2.tgz",
          "integrity": "sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==",
          "dev": true,
          "requires": {
            "braces": "^3.0.1",
            "picomatch": "^2.0.5"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "ts-pnp": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/ts-pnp/-/ts-pnp-1.1.6.tgz",
      "integrity": "sha512-CrG5GqAAzMT7144Cl+UIFP7mz/iIhiy+xQ6GGcnjTezhALT02uPMRw7tgDSESgB5MsfKt55+GPWw4ir1kVtMIQ==",
      "dev": true
    },
    "tsconfig": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/tsconfig/-/tsconfig-7.0.0.tgz",
      "integrity": "sha512-vZXmzPrL+EmC4T/4rVlT2jNVMWCi/O4DIiSj3UHg1OE5kCKbk4mfrXc6dZksLgRM/TZlKnousKH9bbTazUWRRw==",
      "dev": true,
      "requires": {
        "@types/strip-bom": "^3.0.0",
        "@types/strip-json-comments": "0.0.30",
        "strip-bom": "^3.0.0",
        "strip-json-comments": "^2.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "tslib": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.11.1.tgz",
      "integrity": "sha512-aZW88SY8kQbU7gpV19lN24LtXh/yD4ZZg6qieAJDDg+YBsJcSmLGK9QpnUjAKVG/xefmvJGd1WUmfpT/g6AJGA=="
    },
    "tslint": {
      "version": "5.20.1",
      "resolved": "https://registry.npmjs.org/tslint/-/tslint-5.20.1.tgz",
      "integrity": "sha512-EcMxhzCFt8k+/UP5r8waCf/lzmeSyVlqxqMEDQE7rWYiQky8KpIBz1JAoYXfROHrPZ1XXd43q8yQnULOLiBRQg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "builtin-modules": "^1.1.1",
        "chalk": "^2.3.0",
        "commander": "^2.12.1",
        "diff": "^4.0.1",
        "glob": "^7.1.1",
        "js-yaml": "^3.13.1",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "resolve": "^1.3.2",
        "semver": "^5.3.0",
        "tslib": "^1.8.0",
        "tsutils": "^2.29.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "tsutils": {
          "version": "2.29.0",
          "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-2.29.0.tgz",
          "integrity": "sha512-g5JVHCIJwzfISaXpXE1qvNalca5Jwob6FjI4AoPlqMusJ6ftFE7IkkFoMhVLRgK+4Kx3gkzb8UZK5t5yTTvEmA==",
          "dev": true,
          "requires": {
            "tslib": "^1.8.1"
          }
        }
      }
    },
    "tsutils": {
      "version": "3.17.1",
      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.17.1.tgz",
      "integrity": "sha512-kzeQ5B8H3w60nFY2g8cJIuH7JDpsALXySGtwGJ0p2LSjLgay3NdIpqq5SoOBe46bKDW2iq25irHCr8wjomUS2g==",
      "dev": true,
      "requires": {
        "tslib": "^1.8.1"
      }
    },
    "tty-browserify": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",
      "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
      "dev": true
    },
    "tunnel": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz",
      "integrity": "sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==",
      "dev": true,
      "optional": true
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
    },
    "type-check": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2"
      }
    },
    "type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "dev": true
    },
    "type-fest": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
      "dev": true
    },
    "type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "dev": true,
      "requires": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      }
    },
    "typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
      "dev": true
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typeforce": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/typeforce/-/typeforce-1.18.0.tgz",
      "integrity": "sha512-7uc1O8h1M1g0rArakJdf0uLRSSgFcYexrVoKo+bzJd32gd4gDy2L/Z+8/FjPnU9ydY3pEnVPtr9FyscYY60K1g==",
      "dev": true
    },
    "typescript": {
      "version": "3.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.8.3.tgz",
      "integrity": "sha512-MYlEfn5VrLNsgudQTVJeNaQFUAI7DkhnOjdpAp4T+ku1TfQClewlbSuTVHiA+8skNBgaf02TL/kLOvig4y3G8w==",
      "dev": true
    },
    "uglify-js": {
      "version": "3.4.10",
      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.4.10.tgz",
      "integrity": "sha512-Y2VsbPVs0FIshJztycsO2SfPk7/KAF/T72qzv9u5EpQ4kB2hQoHlhNQTsNyy6ul7lQtqJN/AoWeS23OzEiEFxw==",
      "dev": true,
      "requires": {
        "commander": "~2.19.0",
        "source-map": "~0.6.1"
      },
      "dependencies": {
        "commander": {
          "version": "2.19.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.19.0.tgz",
          "integrity": "sha512-6tvAOO+D6OENvRAh524Dh9jcfKTYDQAqvqezbCW82xj5X0pSrcpxtvRKHLG0yBY6SD7PSDrJaj+0AiOcKVd1Xg==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "unicode-canonical-property-names-ecmascript": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",
      "integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ==",
      "dev": true
    },
    "unicode-match-property-ecmascript": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",
      "integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",
      "dev": true,
      "requires": {
        "unicode-canonical-property-names-ecmascript": "^1.0.4",
        "unicode-property-aliases-ecmascript": "^1.0.4"
      }
    },
    "unicode-match-property-value-ecmascript": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.2.0.tgz",
      "integrity": "sha512-wjuQHGQVofmSJv1uVISKLE5zO2rNGzM/KCYZch/QQvez7C1hUhBIuZ701fYXExuufJFMPhv2SyL8CyoIfMLbIQ==",
      "dev": true
    },
    "unicode-property-aliases-ecmascript": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.1.0.tgz",
      "integrity": "sha512-PqSoPh/pWetQ2phoj5RLiaqIk4kCNwoV3CI+LfGmWLKI3rE3kl1h59XpX2BjgDrmbxD9ARtQobPGU1SguCYuQg==",
      "dev": true
    },
    "union-value": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "get-value": "^2.0.6",
        "is-extendable": "^0.1.1",
        "set-value": "^2.0.1"
      }
    },
    "uniq": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8=",
      "dev": true
    },
    "uniqs": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",
      "integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI=",
      "dev": true
    },
    "unique-filename": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",
      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",
      "dev": true,
      "requires": {
        "unique-slug": "^2.0.0"
      }
    },
    "unique-slug": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.2.tgz",
      "integrity": "sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4"
      }
    },
    "unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "dev": true,
      "requires": {
        "crypto-random-string": "^2.0.0"
      }
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==",
      "dev": true
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=",
      "dev": true
    },
    "unquote": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",
      "integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ=",
      "dev": true
    },
    "unset-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
      "dev": true,
      "requires": {
        "has-value": "^0.3.1",
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "has-value": {
          "version": "0.3.1",
          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
          "dev": true,
          "requires": {
            "get-value": "^2.0.3",
            "has-values": "^0.1.4",
            "isobject": "^2.0.0"
          },
          "dependencies": {
            "isobject": {
              "version": "2.1.0",
              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
              "dev": true,
              "requires": {
                "isarray": "1.0.0"
              }
            }
          }
        },
        "has-values": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
          "dev": true
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        }
      }
    },
    "upath": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/upath/-/upath-1.2.0.tgz",
      "integrity": "sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==",
      "dev": true
    },
    "update-notifier": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-4.1.0.tgz",
      "integrity": "sha512-w3doE1qtI0/ZmgeoDoARmI5fjDoT93IfKgEGqm26dGUOh8oNpaSTsGNdYRN/SjOuo10jcJGwkEL3mroKzktkew==",
      "dev": true,
      "requires": {
        "boxen": "^4.2.0",
        "chalk": "^3.0.0",
        "configstore": "^5.0.1",
        "has-yarn": "^2.1.0",
        "import-lazy": "^2.1.0",
        "is-ci": "^2.0.0",
        "is-installed-globally": "^0.3.1",
        "is-npm": "^4.0.0",
        "is-yarn-global": "^0.3.0",
        "latest-version": "^5.0.0",
        "pupa": "^2.0.1",
        "semver-diff": "^3.1.1",
        "xdg-basedir": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.2.1.tgz",
          "integrity": "sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==",
          "dev": true,
          "requires": {
            "@types/color-name": "^1.1.1",
            "color-convert": "^2.0.1"
          }
        },
        "chalk": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
          "integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "ci-info": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
          "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
          "dev": true
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "dev": true,
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
          "dev": true
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "is-ci": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
          "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
          "dev": true,
          "requires": {
            "ci-info": "^2.0.0"
          }
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "upper-case": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/upper-case/-/upper-case-1.1.3.tgz",
      "integrity": "sha1-9rRQHC7EzdJrp4vnIilh3ndiFZg=",
      "dev": true
    },
    "uri-js": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "urix": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
      "dev": true
    },
    "url": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
      "dev": true,
      "requires": {
        "punycode": "1.3.2",
        "querystring": "0.2.0"
      },
      "dependencies": {
        "punycode": {
          "version": "1.3.2",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
          "dev": true
        }
      }
    },
    "url-loader": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/url-loader/-/url-loader-2.3.0.tgz",
      "integrity": "sha512-goSdg8VY+7nPZKUEChZSEtW5gjbS66USIGCeSJ1OVOJ7Yfuh/36YxCwMi5HVEJh6mqUYOoy3NJ0vlOMrWsSHog==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.2.3",
        "mime": "^2.4.4",
        "schema-utils": "^2.5.0"
      }
    },
    "url-parse": {
      "version": "1.4.7",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.7.tgz",
      "integrity": "sha512-d3uaVyzDB9tQoSXFvuSUNFibTd9zxd2bkVrDRvF5TmvWWQwqE4lgYJ5m+x1DbecWkw+LK4RNl2CU1hHuOKPVlg==",
      "requires": {
        "querystringify": "^2.1.1",
        "requires-port": "^1.0.0"
      }
    },
    "url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=",
      "dev": true,
      "requires": {
        "prepend-http": "^2.0.0"
      },
      "dependencies": {
        "prepend-http": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
          "integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc=",
          "dev": true
        }
      }
    },
    "use": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
      "dev": true
    },
    "utf-8-validate": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.2.tgz",
      "integrity": "sha512-SwV++i2gTD5qh2XqaPzBnNX88N6HdyhQrNNRykvcS0QKvItV9u3vPEJr+X5Hhfb1JC0r0e1alL0iB09rY8+nmw==",
      "dev": true,
      "requires": {
        "node-gyp-build": "~3.7.0"
      }
    },
    "utf8": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
      "integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ=="
    },
    "utf8-byte-length": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/utf8-byte-length/-/utf8-byte-length-1.0.4.tgz",
      "integrity": "sha1-9F8VDExm7uloGGUFq5P8u4rWv2E=",
      "dev": true
    },
    "util": {
      "version": "0.11.1",
      "resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",
      "integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",
      "dev": true,
      "requires": {
        "inherits": "2.0.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
      "dev": true
    },
    "util.promisify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.1.tgz",
      "integrity": "sha512-g9JpC/3He3bm38zsLupWryXHoEcS22YHthuPQSJdMy6KNrzIRzWqcsHzD/WUnqe45whVou4VIsPew37DoXWNrA==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.2",
        "has-symbols": "^1.0.1",
        "object.getownpropertydescriptors": "^2.1.0"
      }
    },
    "utila": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/utila/-/utila-0.4.0.tgz",
      "integrity": "sha1-ihagXURWV6Oupe7MWxKk+lN5dyw=",
      "dev": true
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=",
      "dev": true
    },
    "v-click-outside-x": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/v-click-outside-x/-/v-click-outside-x-3.7.1.tgz",
      "integrity": "sha512-WmUgmcIXr9clVpm1AYS/FgHtcDicfnfoxgQCNg4O6vfk9GVnxA0vSqO321ogUo0b7czYTidj7fQENvWFMWOkUg=="
    },
    "v8-compile-cache": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.1.0.tgz",
      "integrity": "sha512-usZBT3PW+LOjM25wbqIlZwPeJV+3OSz3M1k1Ws8snlW39dZyYL9lOGC5FgPVHfk0jKmjiDV8Z0mIbVQPiwFs7g==",
      "dev": true
    },
    "v8-to-istanbul": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-4.1.3.tgz",
      "integrity": "sha512-sAjOC+Kki6aJVbUOXJbcR0MnbfjvBzwKZazEJymA2IX49uoOdEdk+4fBq5cXgYgiyKtAyrrJNtBZdOeDIF+Fng==",
      "dev": true,
      "requires": {
        "@types/istanbul-lib-coverage": "^2.0.1",
        "convert-source-map": "^1.6.0",
        "source-map": "^0.7.3"
      },
      "dependencies": {
        "source-map": {
          "version": "0.7.3",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
          "dev": true
        }
      }
    },
    "validate-npm-package-license": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
      "dev": true,
      "requires": {
        "spdx-correct": "^3.0.0",
        "spdx-expression-parse": "^3.0.0"
      }
    },
    "vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=",
      "dev": true
    },
    "vee-validate": {
      "version": "3.2.5",
      "resolved": "https://registry.npmjs.org/vee-validate/-/vee-validate-3.2.5.tgz",
      "integrity": "sha512-qUgx4fcD077aNYuaRmK5qZ6G/qRHI0igC5tvGP1IRtvkScOyhCHuZwCcto4VPy5Cip0yAOqrbFudD9JOevwZhw=="
    },
    "vendors": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.4.tgz",
      "integrity": "sha512-/juG65kTL4Cy2su4P8HjtkTxk6VmJDiOPBufWniqQ6wknac6jNiXS9vU+hO3wgusiyqWlzTbVHi0dyJqRONg3w==",
      "dev": true
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "view-design": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/view-design/-/view-design-4.1.3.tgz",
      "integrity": "sha512-umnlnickwC8SnRm94hn+z+g6P/eqjBgScM8ga8e+4QptJ/SmOub/QSMtwoxQaQFPNI+MMHEkWWt4iJJQpfyIQg==",
      "requires": {
        "async-validator": "^1.10.0",
        "deepmerge": "^2.2.1",
        "element-resize-detector": "^1.2.0",
        "js-calendar": "^1.2.3",
        "lodash.throttle": "^4.1.1",
        "popper.js": "^1.14.6",
        "tinycolor2": "^1.4.1",
        "v-click-outside-x": "^3.7.1"
      }
    },
    "vm-browserify": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-1.1.2.tgz",
      "integrity": "sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==",
      "dev": true
    },
    "vue": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/vue/-/vue-2.6.11.tgz",
      "integrity": "sha512-VfPwgcGABbGAue9+sfrD4PuwFar7gPb1yl1UK1MwXoQPAw0BKSqWfoYCT/ThFrdEVWoI51dBuyCoiNU9bZDZxQ=="
    },
    "vue-class-component": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/vue-class-component/-/vue-class-component-7.2.3.tgz",
      "integrity": "sha512-oEqYpXKaFN+TaXU+mRLEx8dX0ah85aAJEe61mpdoUrq0Bhe/6sWhyZX1JjMQLhVsHAkncyhedhmCdDVSasUtDw=="
    },
    "vue-eslint-parser": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/vue-eslint-parser/-/vue-eslint-parser-7.0.0.tgz",
      "integrity": "sha512-yR0dLxsTT7JfD2YQo9BhnQ6bUTLsZouuzt9SKRP7XNaZJV459gvlsJo4vT2nhZ/2dH9j3c53bIx9dnqU2prM9g==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "eslint-scope": "^5.0.0",
        "eslint-visitor-keys": "^1.1.0",
        "espree": "^6.1.2",
        "esquery": "^1.0.1",
        "lodash": "^4.17.15"
      },
      "dependencies": {
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        }
      }
    },
    "vue-hot-reload-api": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/vue-hot-reload-api/-/vue-hot-reload-api-2.3.4.tgz",
      "integrity": "sha512-BXq3jwIagosjgNVae6tkHzzIk6a8MHFtzAdwhnV5VlvPTFxDCvIttgSiHWjdGoTJvXtmRu5HacExfdarRcFhog==",
      "dev": true
    },
    "vue-i18n": {
      "version": "8.15.4",
      "resolved": "https://registry.npmjs.org/vue-i18n/-/vue-i18n-8.15.4.tgz",
      "integrity": "sha512-brhbJRB/gyWlroAhQZU0TNTQzNonbkHmzH4HlJzs7c+DsVIhB5OlRHg3zAl+85kkT8mpxzvBE6Bm1slqnRRmsg=="
    },
    "vue-infinite-scroll": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/vue-infinite-scroll/-/vue-infinite-scroll-2.0.2.tgz",
      "integrity": "sha512-n+YghR059YmciANGJh9SsNWRi1YZEBVlODtmnb/12zI+4R72QZSWd+EuZ5mW6auEo/yaJXgxzwsuhvALVnm73A=="
    },
    "vue-jest": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/vue-jest/-/vue-jest-3.0.5.tgz",
      "integrity": "sha512-xWDxde91pDqYBGDlODENZ3ezPgw+IQFoVDtf+5Awlg466w3KvMSqWzs8PxcTeTr+wmAHi0j+a+Lm3R7aUJa1jA==",
      "dev": true,
      "requires": {
        "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
        "chalk": "^2.1.0",
        "extract-from-css": "^0.4.4",
        "find-babel-config": "^1.1.0",
        "js-beautify": "^1.6.14",
        "node-cache": "^4.1.1",
        "object-assign": "^4.1.1",
        "source-map": "^0.5.6",
        "tsconfig": "^7.0.0",
        "vue-template-es2015-compiler": "^1.6.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "vue-loader": {
      "version": "15.9.0",
      "resolved": "https://registry.npmjs.org/vue-loader/-/vue-loader-15.9.0.tgz",
      "integrity": "sha512-FeDHvTSpwyLeF7LIV1PYkvqUQgTJ8UmOxhSlCyRSxaXCKk+M6NF4tDQsLsPPNeDPyR7TfRQ8MLg6v+8PsDV9xQ==",
      "dev": true,
      "requires": {
        "@vue/component-compiler-utils": "^3.1.0",
        "hash-sum": "^1.0.2",
        "loader-utils": "^1.1.0",
        "vue-hot-reload-api": "^2.3.0",
        "vue-style-loader": "^4.1.0"
      },
      "dependencies": {
        "hash-sum": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/hash-sum/-/hash-sum-1.0.2.tgz",
          "integrity": "sha1-M7QHd3VMZDJXPBIMw4CLvRDUfwQ=",
          "dev": true
        }
      }
    },
    "vue-moment": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/vue-moment/-/vue-moment-4.1.0.tgz",
      "integrity": "sha512-Gzisqpg82ItlrUyiD9d0Kfru+JorW2o4mQOH06lEDZNgxci0tv/fua1Hl0bo4DozDV2JK1r52Atn/8QVCu8qQw==",
      "requires": {
        "moment": "^2.19.2"
      }
    },
    "vue-number-animation": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/vue-number-animation/-/vue-number-animation-1.0.5.tgz",
      "integrity": "sha1-R7+WXwMmvlgrZAJ6yoOXCj7NX8Q=",
      "requires": {
        "gsap": "^2.0.1"
      }
    },
    "vue-property-decorator": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/vue-property-decorator/-/vue-property-decorator-8.4.0.tgz",
      "integrity": "sha512-0o85LJSTLZvDaB7IXfmpONfAQZ7NgScFvptFSrlFFSsScR716muJb3mMFojNnKC3Vpm7CM4PsmHNdk30uuNpag==",
      "requires": {
        "vue-class-component": "^7.1.0"
      }
    },
    "vue-qrcode-reader": {
      "version": "2.3.13",
      "resolved": "https://registry.npmjs.org/vue-qrcode-reader/-/vue-qrcode-reader-2.3.13.tgz",
      "integrity": "sha512-NwenssSFVhawJUtl5JdEKEcRNEzYSwL9QRUrtKIyl//OVwk8Ha9jgUS8O8xlBwyfIXAc6pEHuPue+qFJpwDqrg==",
      "requires": {
        "callforth": "^0.3.1",
        "core-js": "^3.6.5",
        "vue": "^2.6.11",
        "webrtc-adapter": "7.7.0"
      },
      "dependencies": {
        "core-js": {
          "version": "3.6.5",
          "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.6.5.tgz",
          "integrity": "sha512-vZVEEwZoIsI+vPEuoF9Iqf5H7/M3eeQqWlQnYa8FSKKePuYTf5MWnxb5SDAzCa60b3JBRS5g9b+Dq7b1y/RCrA=="
        }
      }
    },
    "vue-router": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/vue-router/-/vue-router-3.1.6.tgz",
      "integrity": "sha512-GYhn2ynaZlysZMkFE5oCHRUTqE8BWs/a9YbKpNLi0i7xD6KG1EzDqpHQmv1F5gXjr8kL5iIVS8EOtRaVUEXTqA=="
    },
    "vue-rx": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/vue-rx/-/vue-rx-6.2.0.tgz",
      "integrity": "sha512-tpKUcqS5IUYS+HsdbR5TlE5LL9PK4zwlplEtmMeydnbqaUTa9ciLMplJXAtFSiQw1vuURoyEJmCXqMxaVEIloQ=="
    },
    "vue-style-loader": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/vue-style-loader/-/vue-style-loader-4.1.2.tgz",
      "integrity": "sha512-0ip8ge6Gzz/Bk0iHovU9XAUQaFt/G2B61bnWa2tCcqqdgfHs1lF9xXorFbE55Gmy92okFT+8bfmySuUOu13vxQ==",
      "dev": true,
      "requires": {
        "hash-sum": "^1.0.2",
        "loader-utils": "^1.0.2"
      },
      "dependencies": {
        "hash-sum": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/hash-sum/-/hash-sum-1.0.2.tgz",
          "integrity": "sha1-M7QHd3VMZDJXPBIMw4CLvRDUfwQ=",
          "dev": true
        }
      }
    },
    "vue-template-compiler": {
      "version": "2.6.11",
      "resolved": "https://registry.npmjs.org/vue-template-compiler/-/vue-template-compiler-2.6.11.tgz",
      "integrity": "sha512-KIq15bvQDrcCjpGjrAhx4mUlyyHfdmTaoNfeoATHLAiWB+MU3cx4lOzMwrnUh9cCxy0Lt1T11hAFY6TQgroUAA==",
      "dev": true,
      "requires": {
        "de-indent": "^1.0.2",
        "he": "^1.1.0"
      }
    },
    "vue-template-es2015-compiler": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/vue-template-es2015-compiler/-/vue-template-es2015-compiler-1.9.1.tgz",
      "integrity": "sha512-4gDntzrifFnCEvyoO8PqyJDmguXgVPxKiIxrBKjIowvL9l+N66196+72XVYR8BBf1Uv1Fgt3bGevJ+sEmxfZzw==",
      "dev": true
    },
    "vuedraggable": {
      "version": "2.23.2",
      "resolved": "https://registry.npmjs.org/vuedraggable/-/vuedraggable-2.23.2.tgz",
      "integrity": "sha512-PgHCjUpxEAEZJq36ys49HfQmXglattf/7ofOzUrW2/rRdG7tu6fK84ir14t1jYv4kdXewTEa2ieKEAhhEMdwkQ==",
      "requires": {
        "sortablejs": "^1.10.1"
      }
    },
    "vuex": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/vuex/-/vuex-3.1.2.tgz",
      "integrity": "sha512-ha3jNLJqNhhrAemDXcmMJMKf1Zu4sybMPr9KxJIuOpVcsDQlTBYLLladav2U+g1AvdYDG5Gs0xBTb0M5pXXYFQ=="
    },
    "w3c-hr-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.1.tgz",
      "integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
      "dev": true,
      "requires": {
        "browser-process-hrtime": "^0.1.2"
      }
    },
    "w3c-xmlserializer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-1.1.2.tgz",
      "integrity": "sha512-p10l/ayESzrBMYWRID6xbuCKh2Fp77+sA0doRuGn4tTIMrrZVeqfpKjXHY+oDh3K4nLdPgNwMTVP6Vp4pvqbNg==",
      "dev": true,
      "requires": {
        "domexception": "^1.0.1",
        "webidl-conversions": "^4.0.2",
        "xml-name-validator": "^3.0.0"
      }
    },
    "walker": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",
      "dev": true,
      "requires": {
        "makeerror": "1.0.x"
      }
    },
    "watchpack": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.7.2.tgz",
      "integrity": "sha512-ymVbbQP40MFTp+cNMvpyBpBtygHnPzPkHqoIwRRj/0B8KhqQwV8LaKjtbaxF2lK4vl8zN9wCxS46IFCU5K4W0g==",
      "dev": true,
      "requires": {
        "chokidar": "^3.4.0",
        "graceful-fs": "^4.1.2",
        "neo-async": "^2.5.0",
        "watchpack-chokidar2": "^2.0.0"
      },
      "dependencies": {
        "anymatch": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
          "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
          "dev": true,
          "optional": true,
          "requires": {
            "normalize-path": "^3.0.0",
            "picomatch": "^2.0.4"
          }
        },
        "binary-extensions": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.0.0.tgz",
          "integrity": "sha512-Phlt0plgpIIBOGTT/ehfFnbNlfsDEiqmzE2KRXoX1bLIlir4X/MR+zSyBEkL05ffWgnRSf/DXv+WrUAVr93/ow==",
          "dev": true,
          "optional": true
        },
        "chokidar": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.4.0.tgz",
          "integrity": "sha512-aXAaho2VJtisB/1fg1+3nlLJqGOuewTzQpd/Tz0yTg2R0e4IGtshYvtjowyEumcBv2z+y4+kc75Mz7j5xJskcQ==",
          "dev": true,
          "optional": true,
          "requires": {
            "anymatch": "~3.1.1",
            "braces": "~3.0.2",
            "fsevents": "~2.1.2",
            "glob-parent": "~5.1.0",
            "is-binary-path": "~2.1.0",
            "is-glob": "~4.0.1",
            "normalize-path": "~3.0.0",
            "readdirp": "~3.4.0"
          }
        },
        "fsevents": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.3.tgz",
          "integrity": "sha512-Auw9a4AxqWpa9GUfj370BMPzzyncfBABW8Mab7BGWBYDj4Isgq+cDKtx0i6u9jcX9pQDnswsaaOTgTmA5pEjuQ==",
          "dev": true,
          "optional": true
        },
        "is-binary-path": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
          "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
          "dev": true,
          "optional": true,
          "requires": {
            "binary-extensions": "^2.0.0"
          }
        },
        "readdirp": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.4.0.tgz",
          "integrity": "sha512-0xe001vZBnJEK+uKcj8qOhyAKPzIT+gStxWr3LCB0DwcXR5NZJ3IaC+yGnHCYzB/S7ov3m3EEbZI2zeNvX+hGQ==",
          "dev": true,
          "optional": true,
          "requires": {
            "picomatch": "^2.2.1"
          }
        }
      }
    },
    "watchpack-chokidar2": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/watchpack-chokidar2/-/watchpack-chokidar2-2.0.0.tgz",
      "integrity": "sha512-9TyfOyN/zLUbA288wZ8IsMZ+6cbzvsNyEzSBp6e/zkifi6xxbl8SmQ/CxQq32k8NNqrdVEVUVSEf56L4rQ/ZxA==",
      "dev": true,
      "optional": true,
      "requires": {
        "chokidar": "^2.1.8"
      }
    },
    "wbuf": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/wbuf/-/wbuf-1.7.3.tgz",
      "integrity": "sha512-O84QOnr0icsbFGLS0O3bI5FswxzRr8/gHwWkDlQFskhSPryQXvrTMxjxGP4+iWYoauLoBvfDpkrOauZ+0iZpDA==",
      "dev": true,
      "requires": {
        "minimalistic-assert": "^1.0.0"
      }
    },
    "wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=",
      "dev": true,
      "requires": {
        "defaults": "^1.0.3"
      }
    },
    "webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==",
      "dev": true
    },
    "webpack": {
      "version": "4.43.0",
      "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.43.0.tgz",
      "integrity": "sha512-GW1LjnPipFW2Y78OOab8NJlCflB7EFskMih2AHdvjbpKMeDJqEgSx24cXXXiPS65+WSwVyxtDsJH6jGX2czy+g==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.9.0",
        "@webassemblyjs/helper-module-context": "1.9.0",
        "@webassemblyjs/wasm-edit": "1.9.0",
        "@webassemblyjs/wasm-parser": "1.9.0",
        "acorn": "^6.4.1",
        "ajv": "^6.10.2",
        "ajv-keywords": "^3.4.1",
        "chrome-trace-event": "^1.0.2",
        "enhanced-resolve": "^4.1.0",
        "eslint-scope": "^4.0.3",
        "json-parse-better-errors": "^1.0.2",
        "loader-runner": "^2.4.0",
        "loader-utils": "^1.2.3",
        "memory-fs": "^0.4.1",
        "micromatch": "^3.1.10",
        "mkdirp": "^0.5.3",
        "neo-async": "^2.6.1",
        "node-libs-browser": "^2.2.1",
        "schema-utils": "^1.0.0",
        "tapable": "^1.1.3",
        "terser-webpack-plugin": "^1.4.3",
        "watchpack": "^1.6.1",
        "webpack-sources": "^1.4.1"
      },
      "dependencies": {
        "acorn": {
          "version": "6.4.1",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA==",
          "dev": true
        },
        "eslint-scope": {
          "version": "4.0.3",
          "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",
          "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",
          "dev": true,
          "requires": {
            "esrecurse": "^4.1.0",
            "estraverse": "^4.1.1"
          }
        },
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        }
      }
    },
    "webpack-bundle-analyzer": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/webpack-bundle-analyzer/-/webpack-bundle-analyzer-3.7.0.tgz",
      "integrity": "sha512-mETdjZ30a3Yf+NTB/wqTgACK7rAYQl5uxKK0WVTNmF0sM3Uv8s3R58YZMW7Rhu0Lk2Rmuhdj5dcH5Q76zCDVdA==",
      "dev": true,
      "requires": {
        "acorn": "^7.1.1",
        "acorn-walk": "^7.1.1",
        "bfj": "^6.1.1",
        "chalk": "^2.4.1",
        "commander": "^2.18.0",
        "ejs": "^2.6.1",
        "express": "^4.16.3",
        "filesize": "^3.6.1",
        "gzip-size": "^5.0.0",
        "lodash": "^4.17.15",
        "mkdirp": "^0.5.1",
        "opener": "^1.5.1",
        "ws": "^6.0.0"
      },
      "dependencies": {
        "acorn-walk": {
          "version": "7.1.1",
          "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.1.1.tgz",
          "integrity": "sha512-wdlPY2tm/9XBr7QkKlq0WQVgiuGTX6YWPyRyBviSoScBuLfTVQhvwg6wJ369GJ/1nPfTLMfnrFIfjqVg6d+jQQ==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "ws": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0"
          }
        }
      }
    },
    "webpack-chain": {
      "version": "6.4.0",
      "resolved": "https://registry.npmjs.org/webpack-chain/-/webpack-chain-6.4.0.tgz",
      "integrity": "sha512-f97PYqxU+9/u0IUqp/ekAHRhBD1IQwhBv3wlJo2nvyELpr2vNnUqO3XQEk+qneg0uWGP54iciotszpjfnEExFA==",
      "dev": true,
      "requires": {
        "deepmerge": "^1.5.2",
        "javascript-stringify": "^2.0.1"
      },
      "dependencies": {
        "deepmerge": {
          "version": "1.5.2",
          "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-1.5.2.tgz",
          "integrity": "sha512-95k0GDqvBjZavkuvzx/YqVLv/6YYa17fz6ILMSf7neqQITCPbnfEnQvEgMPNjH4kgobe7+WIL0yJEHku+H3qtQ==",
          "dev": true
        }
      }
    },
    "webpack-dev-middleware": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.7.2.tgz",
      "integrity": "sha512-1xC42LxbYoqLNAhV6YzTYacicgMZQTqRd27Sim9wn5hJrX3I5nxYy1SxSd4+gjUFsz1dQFj+yEe6zEVmSkeJjw==",
      "dev": true,
      "requires": {
        "memory-fs": "^0.4.1",
        "mime": "^2.4.4",
        "mkdirp": "^0.5.1",
        "range-parser": "^1.2.1",
        "webpack-log": "^2.0.0"
      }
    },
    "webpack-dev-server": {
      "version": "3.10.3",
      "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.10.3.tgz",
      "integrity": "sha512-e4nWev8YzEVNdOMcNzNeCN947sWJNd43E5XvsJzbAL08kGc2frm1tQ32hTJslRS+H65LCb/AaUCYU7fjHCpDeQ==",
      "dev": true,
      "requires": {
        "ansi-html": "0.0.7",
        "bonjour": "^3.5.0",
        "chokidar": "^2.1.8",
        "compression": "^1.7.4",
        "connect-history-api-fallback": "^1.6.0",
        "debug": "^4.1.1",
        "del": "^4.1.1",
        "express": "^4.17.1",
        "html-entities": "^1.2.1",
        "http-proxy-middleware": "0.19.1",
        "import-local": "^2.0.0",
        "internal-ip": "^4.3.0",
        "ip": "^1.1.5",
        "is-absolute-url": "^3.0.3",
        "killable": "^1.0.1",
        "loglevel": "^1.6.6",
        "opn": "^5.5.0",
        "p-retry": "^3.0.1",
        "portfinder": "^1.0.25",
        "schema-utils": "^1.0.0",
        "selfsigned": "^1.10.7",
        "semver": "^6.3.0",
        "serve-index": "^1.9.1",
        "sockjs": "0.3.19",
        "sockjs-client": "1.4.0",
        "spdy": "^4.0.1",
        "strip-ansi": "^3.0.1",
        "supports-color": "^6.1.0",
        "url": "^0.11.0",
        "webpack-dev-middleware": "^3.7.2",
        "webpack-log": "^2.0.0",
        "ws": "^6.2.1",
        "yargs": "12.0.5"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        },
        "cliui": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-4.1.0.tgz",
          "integrity": "sha512-4FG+RSG9DL7uEwRUZXZn3SS34DiDPfzP0VOiEwtUWlE+AR2EIg+hSyvrIgUUfhdgR/UkAeW2QHgeP+hWrXs7jQ==",
          "dev": true,
          "requires": {
            "string-width": "^2.1.1",
            "strip-ansi": "^4.0.0",
            "wrap-ansi": "^2.0.0"
          },
          "dependencies": {
            "strip-ansi": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
              "dev": true,
              "requires": {
                "ansi-regex": "^3.0.0"
              }
            }
          }
        },
        "debug": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
          "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "get-caller-file": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",
          "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w==",
          "dev": true
        },
        "is-absolute-url": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz",
          "integrity": "sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
          "dev": true
        },
        "require-main-filename": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",
          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
          "dev": true
        },
        "schema-utils": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
          "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
          "dev": true,
          "requires": {
            "ajv": "^6.1.0",
            "ajv-errors": "^1.0.0",
            "ajv-keywords": "^3.1.0"
          }
        },
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          },
          "dependencies": {
            "strip-ansi": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
              "dev": true,
              "requires": {
                "ansi-regex": "^3.0.0"
              }
            }
          }
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "wrap-ansi": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
          "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1"
          },
          "dependencies": {
            "is-fullwidth-code-point": {
              "version": "1.0.0",
              "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
              "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
              "dev": true,
              "requires": {
                "number-is-nan": "^1.0.0"
              }
            },
            "string-width": {
              "version": "1.0.2",
              "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
              "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
              "dev": true,
              "requires": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "strip-ansi": "^3.0.0"
              }
            }
          }
        },
        "ws": {
          "version": "6.2.1",
          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0"
          }
        },
        "yargs": {
          "version": "12.0.5",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.5.tgz",
          "integrity": "sha512-Lhz8TLaYnxq/2ObqHDql8dX8CJi97oHxrjUcYtzKbbykPtVW9WB+poxI+NM2UIzsMgNCZTIf0AQwsjK5yMAqZw==",
          "dev": true,
          "requires": {
            "cliui": "^4.0.0",
            "decamelize": "^1.2.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^1.0.1",
            "os-locale": "^3.0.0",
            "require-directory": "^2.1.1",
            "require-main-filename": "^1.0.1",
            "set-blocking": "^2.0.0",
            "string-width": "^2.0.0",
            "which-module": "^2.0.0",
            "y18n": "^3.2.1 || ^4.0.0",
            "yargs-parser": "^11.1.1"
          }
        },
        "yargs-parser": {
          "version": "11.1.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-11.1.1.tgz",
          "integrity": "sha512-C6kB/WJDiaxONLJQnF8ccx9SEeoTTLek8RVbaOIsrAUS8VrBEXfmeSnCZxygc+XC2sNMBIwOOnfcxiynjHsVSQ==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "webpack-log": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/webpack-log/-/webpack-log-2.0.0.tgz",
      "integrity": "sha512-cX8G2vR/85UYG59FgkoMamwHUIkSSlV3bBMRsbxVXVUk2j6NleCKjQ/WE9eYg9WY4w25O9w8wKP4rzNZFmUcUg==",
      "dev": true,
      "requires": {
        "ansi-colors": "^3.0.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "webpack-merge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/webpack-merge/-/webpack-merge-4.2.2.tgz",
      "integrity": "sha512-TUE1UGoTX2Cd42j3krGYqObZbOD+xF7u28WB7tfUordytSjbWTIjK/8V0amkBfTYN4/pB/GIDlJZZ657BGG19g==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.15"
      }
    },
    "webpack-sources": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.4.3.tgz",
      "integrity": "sha512-lgTS3Xhv1lCOKo7SA5TjKXMjpSM4sBjNV5+q2bqesbSPs5FjGmU6jjtBSkX9b4qW87vDIsCIlUPOEhbZrMdjeQ==",
      "dev": true,
      "requires": {
        "source-list-map": "^2.0.0",
        "source-map": "~0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "webrtc-adapter": {
      "version": "7.7.0",
      "resolved": "https://registry.npmjs.org/webrtc-adapter/-/webrtc-adapter-7.7.0.tgz",
      "integrity": "sha512-7Bp9OBnx642oJRkom1tNAbeJjUadAq2rh5xLL9YXPw5hVyt2h4hHr5bcoPYDs1stp/mZHSPSQA34YISdnr0DBQ==",
      "requires": {
        "rtcpeerconnection-shim": "^1.2.15",
        "sdp": "^2.12.0"
      }
    },
    "websocket-driver": {
      "version": "0.7.3",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.3.tgz",
      "integrity": "sha512-bpxWlvbbB459Mlipc5GBzzZwhoZgGEZLuqPaR0INBGnPAY1vdBX6hPnoFXiw+3yWxDuHyQjO2oXTMyS8A5haFg==",
      "dev": true,
      "requires": {
        "http-parser-js": ">=0.4.0 <0.4.11",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      }
    },
    "websocket-extensions": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.3.tgz",
      "integrity": "sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg==",
      "dev": true
    },
    "whatwg-encoding": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",
      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",
      "dev": true,
      "requires": {
        "iconv-lite": "0.4.24"
      }
    },
    "whatwg-fetch": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.0.0.tgz",
      "integrity": "sha512-9GSJUgz1D4MfyKU7KRqwOjXCXTqWdFNvEr7eUBYchQiVc744mqK/MzXPNR2WsPkmkOa4ywfg8C2n8h+13Bey1Q=="
    },
    "whatwg-mimetype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",
      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g==",
      "dev": true
    },
    "whatwg-url": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
      "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
      "dev": true,
      "requires": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "dev": true,
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
      "dev": true
    },
    "wide-align": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
      "integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
      "dev": true,
      "requires": {
        "string-width": "^1.0.2 || 2"
      }
    },
    "widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "dev": true,
      "requires": {
        "string-width": "^4.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          }
        },
        "strip-ansi": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
          "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
          "dev": true,
          "requires": {
            "ansi-regex": "^5.0.0"
          }
        }
      }
    },
    "wif": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/wif/-/wif-2.0.6.tgz",
      "integrity": "sha1-CNP1IFbGZnkplyb63g1DKudLRwQ=",
      "dev": true,
      "requires": {
        "bs58check": "<3.0.0"
      }
    },
    "word-wrap": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
      "integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==",
      "dev": true
    },
    "worker-farm": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/worker-farm/-/worker-farm-1.7.0.tgz",
      "integrity": "sha512-rvw3QTZc8lAxyVrqcSGVm5yP/IJ2UcB3U0graE3LCFoZ0Yn2x4EoVSqJKdB/T5M+FLcRPjz4TDacRf3OCfNUzw==",
      "dev": true,
      "requires": {
        "errno": "~0.1.7"
      }
    },
    "worker-rpc": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/worker-rpc/-/worker-rpc-0.1.1.tgz",
      "integrity": "sha512-P1WjMrUB3qgJNI9jfmpZ/htmBEjFh//6l/5y8SD9hg1Ef5zTTVVoRjTrTEzPrNBQvmhMxkoTsjOXN10GWU7aCg==",
      "dev": true,
      "requires": {
        "microevent.ts": "~0.1.1"
      }
    },
    "wrap-ansi": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-5.1.0.tgz",
      "integrity": "sha512-QC1/iN/2/RPVJ5jYK8BGttj5z83LmSKmvbvrXPNCLZSEb32KKVDJDl/MOt2N01qU2H/FkzEa9PKto1BqDjtd7Q==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.0",
        "string-width": "^3.0.0",
        "strip-ansi": "^5.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
      "dev": true
    },
    "write": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",
      "integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",
      "dev": true,
      "requires": {
        "mkdirp": "^0.5.1"
      }
    },
    "write-file-atomic": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.1.tgz",
      "integrity": "sha512-TGHFeZEZMnv+gBFRfjAcxL5bPHrsGKtnb4qsFAws7/vlh+QfwAaySIw4AXP9ZskTTh5GWu3FLuJhsWVdiJPGvg==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.11",
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.2"
      }
    },
    "ws": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",
      "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",
      "dev": true,
      "requires": {
        "async-limiter": "~1.0.0"
      }
    },
    "xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "dev": true
    },
    "xml-name-validator": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",
      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw==",
      "dev": true
    },
    "xml2js": {
      "version": "0.4.23",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.23.tgz",
      "integrity": "sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==",
      "requires": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      }
    },
    "xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA=="
    },
    "xmlchars": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==",
      "dev": true
    },
    "xmldom": {
      "version": "0.1.31",
      "resolved": "https://registry.npmjs.org/xmldom/-/xmldom-0.1.31.tgz",
      "integrity": "sha512-yS2uJflVQs6n+CyjHoaBmVSqIDevTAWrzMmjG1Gc7h1qQ7uVozNhEPJAwZXWyGQ/Gafo3fCwrcaokezLPupVyQ==",
      "dev": true
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true
    },
    "y18n": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",
      "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==",
      "dev": true
    },
    "yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true
    },
    "yargs": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.0.tgz",
      "integrity": "sha512-2eehun/8ALW8TLoIl7MVaRUrg+yCnenu8B4kBlRxj3GJGDKU1Og7sMXPNm1BYyM1DOJmTZ4YeN/Nwxv+8XJsUA==",
      "dev": true,
      "requires": {
        "cliui": "^5.0.0",
        "find-up": "^3.0.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^3.0.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^13.1.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "13.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.1.tgz",
      "integrity": "sha512-oVAVsHz6uFrg3XQheFII8ESO2ssAf9luWuAd6Wexsu4F3OtIW0o8IribPXYrD4WC24LWtPrJlGy87y5udK+dxQ==",
      "dev": true,
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "dependencies": {
        "camelcase": {
          "version": "5.3.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
          "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
          "dev": true
        }
      }
    },
    "yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=",
      "dev": true,
      "requires": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    },
    "yorkie": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/yorkie/-/yorkie-2.0.0.tgz",
      "integrity": "sha512-jcKpkthap6x63MB4TxwCyuIGkV0oYP/YRyuQU5UO0Yz/E/ZAu+653/uov+phdmO54n6BcvFRyyt0RRrWdN2mpw==",
      "dev": true,
      "requires": {
        "execa": "^0.8.0",
        "is-ci": "^1.0.10",
        "normalize-path": "^1.0.0",
        "strip-indent": "^2.0.0"
      },
      "dependencies": {
        "cross-spawn": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
          "integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
          "dev": true,
          "requires": {
            "lru-cache": "^4.0.1",
            "shebang-command": "^1.2.0",
            "which": "^1.2.9"
          }
        },
        "execa": {
          "version": "0.8.0",
          "resolved": "https://registry.npmjs.org/execa/-/execa-0.8.0.tgz",
          "integrity": "sha1-2NdrvBtVIX7RkP1t1J08d07PyNo=",
          "dev": true,
          "requires": {
            "cross-spawn": "^5.0.1",
            "get-stream": "^3.0.0",
            "is-stream": "^1.1.0",
            "npm-run-path": "^2.0.0",
            "p-finally": "^1.0.0",
            "signal-exit": "^3.0.0",
            "strip-eof": "^1.0.0"
          }
        },
        "get-stream": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
          "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
          "dev": true
        },
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "normalize-path": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-1.0.0.tgz",
          "integrity": "sha1-MtDkcvkf80VwHBWoMRAY07CpA3k=",
          "dev": true
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        }
      }
    }
  }
}

'''
'''--- package.json ---
{
    "name": "symbol-desktop-wallet",
    "description": "Symbol Wallet",
    "homepage": "https://github.com/nemgrouplimited/symbol-desktop-wallet",
    "version": "0.13.1",
    "repository": {
        "type": "git",
        "url": "https://github.com/nemgrouplimited/symbol-desktop-wallet.git"
    },
    "license": "Apache-2.0",
    "scripts": {
        "start": "electron .",
        "test": "vue-cli-service test:unit",
        "dev": "vue-cli-service serve ",
        "build": "npm run build:web",
        "build:web": "rimraf dist && mkdir dist && tsc && vue-cli-service build",
        "release": "npm run build && npm run release:all",
        "release:all": "npm run release:mac && npm run release:win && npm run release:lin",
        "release:mac": "electron-builder --mac",
        "release:win": "electron-builder --win",
        "release:lin": "electron-builder --linux deb snap tar.xz",
        "lint": "npm run prettier && npm run eslint",
        "lint:fix": "npm run prettier:fix && npm run eslint:fix",
        "eslint": "eslint src/ --ext .ts && eslint src/ --ext .vue && eslint __tests__/ --ext .ts && eslint __mocks__/ --ext .ts",
        "eslint:fix": "eslint src/ --ext .ts --fix && eslint src/ --ext .vue --fix && eslint __tests__/ --ext .ts --fix && eslint __mocks__/ --ext .ts --fix",
        "prettier": "prettier --check ./src ./__tests__ ./__mocks__",
        "prettier:fix": "prettier --write ./src ./__tests__ ./__mocks__",
        "version": "echo $npm_package_version"
    },
    "author": "Greg Saive <greg.saive@nem.software>",
    "contributors": [
        {
            "name": "Greg Saive",
            "email": "greg.saive@nem.software"
        }
    ],
    "dependencies": {
        "animate.css": "^3.7.2",
        "await-lock": "^2.0.1",
        "axios": "^0.19.0",
        "file-saver": "^2.0.2",
        "json2csv": "^5.0.1",
        "request": "^2.88.0",
        "rss-parser": "^3.7.3",
        "rxjs": "^6.5.2",
        "symbol-uri-scheme": "^0.4.7",
        "trezor-connect": "^7.0.5",
        "vee-validate": "^3.2.3",
        "view-design": "^4.0.0",
        "vue": "^2.6.10",
        "vue-class-component": "^7.0.2",
        "vue-i18n": "^8.11.2",
        "vue-infinite-scroll": "^2.0.2",
        "vue-moment": "^4.1.0",
        "vue-number-animation": "1.0.5",
        "vue-property-decorator": "^8.1.0",
        "vue-qrcode-reader": "^2.3.10",
        "vue-router": "^3.1.3",
        "vue-rx": "^6.2.0",
        "vuedraggable": "^2.23.2",
        "vuex": "^3.0.1"
    },
    "devDependencies": {
        "@babel/compat-data": "^7.9.6",
        "@babel/core": "^7.7.2",
        "@types/file-saver": "^2.0.1",
        "@types/jest": "^23.3.1",
        "@types/json2csv": "^5.0.1",
        "@types/lodash": "^4.14.149",
        "@types/node": "^9.6.50",
        "@types/request": "^2.47.1",
        "@types/vue-moment": "^4.0.0",
        "@typescript-eslint/eslint-plugin": "^2.15.0",
        "@typescript-eslint/parser": "^2.15.0",
        "@vue/cli-plugin-babel": "^4.0.5",
        "@vue/cli-plugin-typescript": "^4.3.0",
        "@vue/cli-plugin-unit-jest": "^4.0.5",
        "@vue/cli-service": "^4.0.5",
        "@vue/eslint-config-typescript": "^5.0.1",
        "@vue/test-utils": "^1.0.0-beta.29",
        "babel-core": "7.0.0-bridge.0",
        "babel-jest": "^25.2.6",
        "babel-plugin-syntax-dynamic-import": "^6.18.0",
        "babel-preset-env": "^1.7.0",
        "bufferutil": "^4.0.1",
        "cross-env": "^5.1.1",
        "electron": "^8.2.0",
        "electron-builder": "^22.4.1",
        "electron-notarize": "^0.3.0",
        "electron-packager": "^14.2.1",
        "electron-updater": "^4.2.5",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-prettier": "^3.1.3",
        "eslint-plugin-vue": "^6.1.2",
        "flush-promises": "^1.0.2",
        "google-fonts-webpack-plugin": "^0.4.4",
        "identity-obj-proxy": "^3.0.0",
        "jest": "^25.2.6",
        "less": "^3.0.4",
        "less-loader": "^4.1.0",
        "moment-timezone": "^0.5.26",
        "node-pre-gyp": "^0.13.0",
        "postcss-import": "^12.0.1",
        "postcss-pxtorem": "^4.0.1",
        "prettier": "2.0.5",
        "rimraf": "^3.0.2",
        "symbol-hd-wallets": "^0.13.0",
        "symbol-qr-library": "^0.13.0",
        "symbol-sdk": "^0.21.0",
        "ts-jest": "^25.3.0",
        "typescript": "^3.7.2",
        "utf-8-validate": "^5.0.2",
        "vue-jest": "^3.0.5",
        "vue-template-compiler": "^2.6.10"
    },
    "resolutions": {
        "@babel/preset-env": "7.5.5"
    },
    "main": "./public/build.js",
    "build": {
        "appId": "io.nem.symbol.desktop-wallet",
        "extends": null,
        "copyright": "Copyright © 2019-2020 NEM",
        "productName": "Symbol Wallet",
        "artifactName": "${name}-${os}-${arch}-${version}.${ext}",
        "icon": "./dist/assets/icons/Icon.icns",
        "files": [
            "dist/**/*",
            "package.json",
            "./public/build.js"
        ],
        "directories": {
            "buildResources": "assets",
            "output": "release"
        }
    },
    "mac": {
        "category": "public.app-category.finance",
        "target": "tar.gz",
        "icon": "./assets/icons/Icon.incs",
        "hardenedRuntime": true,
        "gatekeeperAssess": false,
        "asarUnpack": [
            "**/*.node"
        ],
        "entitlements": "electron/entitlements.mac.plist",
        "extendInfo": {
            "NSCameraUsageDescription": "This app requires camera access to scan qrcodes."
        }
    },
    "dmg": {
        "window": {
            "x": 100,
            "y": 100,
            "width": 500,
            "height": 400
        }
    },
    "nsis": {
        "oneClick": false,
        "perMachine": false,
        "allowToChangeInstallationDirectory": true,
        "installerIcon": "./assets/icons/Symbol.ico"
    },
    "linux": {
        "category": "Finance",
        "icon": "./assets/icons/Icon.incs"
    }
}

'''
'''--- postcss.config.js ---

module.exports = {
    plugins: {
        "postcss-import": {},
        "autoprefixer": {},
        "postcss-pxtorem": {
            "rootValue": 100,
            "propList": ["*"],
            "selectorBlackList": ["mint-"],
        }
    }
}
'''
'''--- public/build.js ---
/* eslint-disable @typescript-eslint/no-var-requires */
const path = require('path')
const { app, BrowserWindow, shell, globalShortcut, Menu, ipcMain } = require('electron')
const electron = require('electron')
const name = electron.app.getName()

// Set the path of the folder where the persisted data is stored
electron.app.setPath('userData', path.join(electron.app.getPath('home'), '.symbol-desktop-wallet'))

const iconUrlPath =
  process.platform === 'darwin' ? './dist/assets/logo.png' : `file://${__dirname}/../dist/assets/logo.png`
const loadUrlPath = process.platform === 'darwin' ? './dist/index.html' : `file://${__dirname}/../dist/index.html`

let mainWindow = null

const template = [
  {
    label: 'Window',
    role: 'window',
    submenu: [
      {
        label: 'Minimize',
        accelerator: 'CmdOrCtrl+M',
        role: 'minimize',
      },
      {
        label: 'Close',
        accelerator: 'CmdOrCtrl+W',
        role: 'close',
      },
      {
        label: 'Toggle Full Screen',
        accelerator: (function () {
          if (process.platform === 'darwin') {
            return 'Ctrl+Command+F'
          }

          return 'F11'
        })(),
        click: function (item, focusedWindow) {
          if (focusedWindow) {
            focusedWindow.setFullScreen(!focusedWindow.isFullScreen())
          }
        },
      },
      {
        label: 'Toggle Developer Tools',
        accelerator: (function () {
          if (process.platform === 'darwin') {
            return 'Alt+Command+I'
          }

          return 'Ctrl+Shift+I'
        })(),
        click: function (item, focusedWindow) {
          if (focusedWindow) {
            focusedWindow.toggleDevTools()
          }
        },
      },
    ],
  },
  {
    label: 'Edit',
    role: 'edit',
    submenu: [
      {
        label: 'Cut',
        accelerator: 'CmdOrCtrl+X',
        role: 'cut',
      },
      {
        label: 'Copy',
        accelerator: 'CmdOrCtrl+C',
        role: 'copy',
      },
      {
        label: 'Paste',
        accelerator: 'CmdOrCtrl+V',
        role: 'paste',
      },
      {
        label: 'Select All',
        accelerator: 'CmdOrCtrl+A',
        role: 'selectAll',
      },
    ],
  },
  {
    label: 'Help',
    role: 'help',
    submenu: [
      {
        label: 'Learn More',
        click: function () {
          electron.shell.openExternal('https://github.com/nemfoundation/symbol-desktop-wallet')
        },
      },
      {
        label: 'About NEM',
        click: function () {
          electron.shell.openExternal('https://nem.io/')
        },
      },
    ],
  },
]
if (process.platform === 'darwin') {
  template.unshift({
    label: name,
    submenu: [
      {
        label: `About ${name}`,
        role: 'about',
      },
      {
        type: 'separator',
      },
      {
        label: 'Services',
        role: 'services',
        submenu: [],
      },
      {
        type: 'separator',
      },
      {
        label: `Hide ${name}`,
        accelerator: 'Command+H',
        role: 'hide',
      },
      {
        label: 'Hide others',
        accelerator: 'Command+Alt+H',
        role: 'hideothers',
      },
      {
        label: 'Show',
        role: 'unhide',
      },
      {
        type: 'separator',
      },
      {
        label: 'Quit',
        accelerator: 'Command+Q',
        click: function () {
          app.quit()
        },
      },
    ],
  })
  if (process.mas) app.setName('·')
  ipcMain.on('app', (event, arg) => {
    switch (arg) {
      case 'quit':
        mainWindow.close()
        break
      case 'max':
        if (mainWindow.isMaximized()) {
          mainWindow.restore()
        } else {
          mainWindow.maximize()
        }
        break
      case 'min':
        mainWindow.minimize()
        break
    }
  })
}

if (process.platform !== 'darwin') {
  const gotTheLock = app.requestSingleInstanceLock()

  if (!gotTheLock) {
    app.quit()
  } else {
    app.on('second-instance', () => {
      // Do not allow the creation of multiple instances
      if (mainWindow) {
        if (mainWindow.isMinimized()) mainWindow.restore()
        mainWindow.focus()
      }
    })

    app.on('ready', () => {
      /** This function body is needed */
    })
  }

  ipcMain.on('app', (event, arg) => {
    switch (arg) {
      case 'quit':
        mainWindow.close()
        break
      case 'max':
        mainWindow.maximize()
        break
      case 'unMaximize':
        mainWindow.unmaximize()
        break
      case 'min':
        mainWindow.minimize()
        break
      default:
        mainWindow.unmaximize()
    }
  })
}

function initialize() {
  function createMac() {
    const size = require('electron').screen.getPrimaryDisplay().workAreaSize
    const width = parseInt(size.width)
    const widthTag = width * 0.3
    let height = width * 0.45
    if (width >= 1920) {
      mainWindow = new BrowserWindow({
        width: width - widthTag,
        height: height,
        autoHideMenuBar: false,
        resizable: true,
      })
    } else {
      height = parseInt((1080 * size.width) / 1920 + 30)
      mainWindow = new BrowserWindow({
        width: width - 100,
        height: height - 50,
        autoHideMenuBar: false,
        resizable: true,
      })
    }
    mainWindow.loadFile(loadUrlPath)
    mainWindow.on('closed', function () {
      mainWindow = null
    })
    const menu = Menu.buildFromTemplate(template)
    Menu.setApplicationMenu(menu)
  }

  function createWindow() {
    const size = electron.screen.getPrimaryDisplay().workAreaSize

    const originWidth = size.width

    let width = originWidth

    if (originWidth > 1080) {
      width = parseInt(1080 + (originWidth - 1080) * 0.5)
    }
    const height = parseInt(width / (1920 / 1080))

    const windowOptions = {
      minWidth: width,
      minHeight: height,
      width: width,
      height: height,
      title: app.getName(),
      titleBarStyle: 'hiddenInset',
      webPreferences: {
        nodeIntegration: false,
      },
      resizable: true,
    }
    windowOptions.icon = iconUrlPath
    mainWindow = new BrowserWindow(windowOptions)
    mainWindow.setMenu(null)
    mainWindow.loadURL(loadUrlPath)

    mainWindow.once('ready-to-show', () => {
      mainWindow.show()
    })
    mainWindow.on('closed', () => {
      mainWindow = null
    })
    mainWindow.on('will-resize', (event) => {
      event.preventDefault()
    })
  }

  if (process.platform === 'darwin') {
    app.on('ready', createMac)
  } else {
    app.on('ready', createWindow)
    app.on('ready', function () {
      globalShortcut.register('CommandOrControl+R', function () {
        // do nothing to forbidden default refresh
      })
    })
  }
  app.on('window-all-closed', function () {
    app.quit()
  })
  app.on('web-contents-created', (e, webContents) => {
    webContents.on('new-window', (event, url) => {
      event.preventDefault()
      shell.openExternal(url)
    })
  })
}

initialize()

'''
'''--- public/config/app.conf.js ---
// Extension point to inject custom configuration in the window object

'''
'''--- public/config/fees.conf.js ---
// Extension point to inject custom configuration in window object

'''
'''--- public/config/network.conf.js ---
// Extension point to inject custom configuration in the window object

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="icon" href="<%= BASE_URL %>favicon.ico">
    <title>Symbol Wallet</title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but Symbol Wallet doesn't work without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <script>
        // window.electron = require('electron');
        // window.node_fs = require('fs')
    </script>
    <div id="app">
      <script type="text/javascript" src="<%= BASE_URL %>config/app.conf.js"></script>
      <script type="text/javascript" src="<%= BASE_URL %>config/fees.conf.js"></script>
      <script type="text/javascript" src="<%= BASE_URL %>config/network.conf.js"></script>

    </div>
  </body>
</html>

'''
'''--- scripts/notarize.js ---
// eslint-disable-next-line @typescript-eslint/no-var-requires
const {notarize} = require('electron-notarize')

exports.default = async function notarizing(context) {
  const {electronPlatformName, appOutDir} = context

  // Skip notarization when not on Mac OS.
  if (electronPlatformName !== 'darwin') return

  const appName = context.packager.appInfo.productFilename

  return notarize({
    appBundleId: 'io.symbol.desktop-wallet',
    appPath: `${appOutDir}/${appName}.app`,
    appleApiKey: process.env.APPLE_API_KEY_ID,
    appleApiIssuer: process.env.APPLE_API_KEY_ISSUER_ID,
  })
}

'''
'''--- src/app/AppStore.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import store from '@/store/index.ts';

/// region app state store initializations
export const AppStore = store;
/// end-region app state store initializations

'''
'''--- src/app/AppTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// child components
// @ts-ignore
import DisabledUiOverlay from '@/components/DisabledUiOverlay/DisabledUiOverlay.vue';
// @ts-ignore
import SpinnerLoading from '@/components/SpinnerLoading/SpinnerLoading.vue';

@Component({
    computed: {
        ...mapGetters({
            hasLoadingOverlay: 'app/shouldShowLoadingOverlay',
            currentProfile: 'profile/currentProfile',
        }),
    },
    components: {
        DisabledUiOverlay,
        SpinnerLoading,
    },
})
export class AppTs extends Vue {
    /**
     * Display the application version. This is injected in the app when built.
     */
    public packageVersion = process.env.PACKAGE_VERSION || '0';

    /**
     * Display the web wallet warning. This is injected in the app when built.
     */
    public web = process.env.WEB || false;
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: string;

    /**
     * Whether a loading overlay must be displayed
     * @see {Store.App}
     * @var {boolean}
     */
    public hasLoadingOverlay: boolean;

    /**
     * Hook called when the app is started
     * @return {void}
     */
    public created() {
        this.initialize();
    }

    /**
     * Hook called when the app is closed
     * @return {void}
     */
    public destroyed() {
        this.uninitialize();
    }

    /**
     * Initialize the app store
     * @see {Store.AppInfo}
     */
    protected initialize() {
        this.$store.dispatch('initialize').catch((error) => console.log(error));
    }

    /**
     * Uninitialize the app store
     * @see {Store.AppInfo}
     */
    protected uninitialize() {
        this.$store.dispatch('uninitialize');
    }
}

'''
'''--- src/app/UIBootstrapper.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import { Electron } from '@/core/utils/Electron';

export class UIBootstrapper {
    /**
     * Bootstrap a Vue app instance
     * @param {Vue} app
     * @return {Vue}
     */
    public static configure(app: Vue): Vue {
        /// region electron fixes
        Electron.htmlRem();
        /// end-region electron fixes

        /// region vue directives
        Vue.directive('focus', {
            inserted: function (el) {
                Vue.nextTick(() => el.focus());
            },
        });
        Vue.directive('click-focus', {
            inserted: function (el) {
                el.addEventListener('click', function () {
                    el.querySelector('input').focus();
                });
            },
        });
        Vue.directive('auto-scroll', {
            componentUpdated: function (el, { value }) {
                if (value && value.length) {
                    const className = value.charAt(0) === '.' ? value : '.' + value;
                    if (el.querySelector(className)) {
                        const offsetTop = (el.querySelector(className) as HTMLElement).offsetTop;
                        el.scrollTo(0, offsetTop);
                    }
                }
            },
        });
        /// end-region vue directives

        return app;
    }
}

'''
'''--- src/components/AccountActions/AccountActionsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';

@Component
export class AccountActionsTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountAddressDisplay/AccountAddressDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address } from 'symbol-sdk';
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';

@Component({
    components: {
        ButtonCopyToClipboard,
    },
})
export class AccountAddressDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    address: string;

    public getPrettyAddress(): string {
        return this.address ? Address.createFromRawAddress(this.address).pretty() : '';
    }

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountAliasDisplay/AccountAliasDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';

@Component({
    computed: mapGetters({
        namespaces: 'namespace/namespaces',
    }),
})
export class AccountAliasDisplayTs extends Vue {
    @Prop({ default: null }) account: AccountModel;

    /**
     * NamespaceModel
     */
    protected namespaces: NamespaceModel[];

    get accountAliases(): string[] {
        if (!this.namespaces || !this.account) {
            return [];
        }

        // get the current account address
        const address = this.account.address;

        // return the current account aliases
        return this.namespaces
            .filter(({ aliasTargetAddressRawPlain }) => aliasTargetAddressRawPlain && aliasTargetAddressRawPlain === address)
            .map(({ name, namespaceIdHex }) => name || namespaceIdHex);
    }
}

'''
'''--- src/components/AccountBackupOptions/AccountBackupOptionsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';

// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
// @ts-ignore
import ProtectedMnemonicQRButton from '@/components/ProtectedMnemonicQRButton/ProtectedMnemonicQRButton.vue';
// @ts-ignore
import ProtectedMnemonicDisplayButton from '@/components/ProtectedMnemonicDisplayButton/ProtectedMnemonicDisplayButton.vue';

@Component({
    components: {
        ModalFormProfileUnlock,
        ProtectedMnemonicQRButton,
        ProtectedMnemonicDisplayButton,
    },
})
export class AccountBackupOptionsTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /**
     * Whether account is currently being unlocked
     * @var {boolean}
     */
    public isUnlockingAccount: boolean = false;

    /// region computed properties getter/setter
    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountContactQR/AccountContactQRTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { ContactQR } from 'symbol-qr-library';
import { PublicAccount } from 'symbol-sdk';
import { Observable, of } from 'rxjs';
import { concatMap, pluck } from 'rxjs/operators';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// resources
// @ts-ignore
import failureIcon from '@/views/resources/img/monitor/failure.png';
import { mapGetters } from 'vuex';

@Component({
    computed: {
        ...mapGetters({
            generationHash: 'network/generationHash',
        }),
    },
    subscriptions() {
        const qrCode$ = this.$watchAsObservable('qrCodeArgs', {
            immediate: true,
        }).pipe(
            pluck('newValue'),
            concatMap((args) => {
                if (args instanceof ContactQR) {
                    return args.toBase64();
                }
                return of(failureIcon);
            }),
        );
        return { qrCode$ };
    },
})
export class AccountContactQRTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /**
     * Current network's generation hash
     * @var {string}
     */
    public generationHash: string;

    /**
     * QR Code
     * @type {Observable<string>}
     */
    public qrCode$: Observable<string>;

    /// region computed properties getter/setter
    get qrCodeArgs(): ContactQR {
        if (!this.account) {
            return null;
        }

        try {
            const publicAccount: PublicAccount = AccountModel.getObjects(this.account).publicAccount;
            return new ContactQR(
                this.account.name,
                // @ts-ignore // @TODO: SDK upgrade
                publicAccount,
                publicAccount.address.networkType,
                this.generationHash,
            );
        } catch (error) {
            return null;
        }
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountDetailsDisplay/AccountDetailsDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';

@Component({
    components: {
        ButtonCopyToClipboard,
    },
})
export class AccountDetailsDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    public AccountModel = AccountModel;
}

'''
'''--- src/components/AccountLinks/AccountLinksTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { mapGetters } from 'vuex';

@Component({
    computed: {
        ...mapGetters({
            explorerBaseUrl: 'app/explorerUrl',
            faucetBaseUrl: 'app/faucetUrl',
        }),
    },
})
export class AccountLinksTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    public explorerBaseUrl: string;
    public faucetBaseUrl: string;

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter

    public get explorerUrl() {
        return this.explorerBaseUrl.replace(/\/+$/, '') + '/accounts/' + this.account.address;
    }

    public get faucetUrl() {
        return this.faucetBaseUrl + '?recipient=' + this.account.address;
    }
}

'''
'''--- src/components/AccountNameDisplay/AccountNameDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { ValidationProvider } from 'vee-validate';

// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';

// child components
// @ts-ignore
import ModalFormAccountNameUpdate from '@/views/modals/ModalFormAccountNameUpdate/ModalFormAccountNameUpdate.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormLabel from '@/components/FormLabel/FormLabel.vue';

@Component({
    components: {
        ModalFormAccountNameUpdate,
        ValidationProvider,
        ErrorTooltip,
        FormLabel,
    },
})
export class AccountNameDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    @Prop({
        default: false,
    })
    editable: boolean;

    /**
     * Whether name is currently being edited
     * @var {boolean}
     */
    public isEditingName: boolean = false;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    public get hasNameFormModal(): boolean {
        return this.editable && this.isEditingName;
    }

    public set hasNameFormModal(f: boolean) {
        this.isEditingName = f;
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountPublicKeyDisplay/AccountPublicKeyDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';

@Component({
    components: {
        ButtonCopyToClipboard,
    },
})
export class AccountPublicKeyDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountSelectorField/AccountSelectorFieldTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { AccountService } from '@/services/AccountService';

@Component({
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            knownAccounts: 'account/knownAccounts',
        }),
    },
})
export class AccountSelectorFieldTs extends Vue {
    @Prop({
        default: null,
    })
    value: string;

    @Prop({
        default: false,
    })
    defaultFormStyle: boolean;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Known accounts
     */
    public knownAccounts: AccountModel[];

    /**
     * Accounts repository
     * @var {AccountService}
     */
    public readonly accountService: AccountService = new AccountService();

    /// region computed properties getter/setter
    public get currentAccountIdentifier(): string {
        if (this.value) {
            return this.value;
        }

        if (this.currentAccount) {
            return this.currentAccount.id;
        }

        // fallback value
        return '';
    }

    public set currentAccountIdentifier(id: string) {
        if (!id || !id.length) {
            return;
        }

        this.$emit('input', id);

        const account = this.accountService.getAccount(id);
        if (!account) {
            return;
        }
    }

    public get currentAccounts(): AccountModel[] {
        return this.knownAccounts;
    }

    /**
     * Truncates the account name if it is too long
     * @protected
     * @param {string} str
     * @returns {string}
     */
    protected truncate(str: string): string {
        const maxStringLength = 15;
        if (str.length <= maxStringLength) {
            return str;
        }
        return `${str.substring(0, 9)}...${str.substring(str.length - 3)}`;
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AccountSelectorPanel/AccountSelectorPanelTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { MosaicId, NetworkType } from 'symbol-sdk';
import { ValidationProvider } from 'vee-validate';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { AccountService } from '@/services/AccountService';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormLabel from '@/components/FormLabel/FormLabel.vue';
// @ts-ignore
import ModalFormSubAccountCreation from '@/views/modals/ModalFormSubAccountCreation/ModalFormSubAccountCreation.vue';
// @ts-ignore
import ModalMnemonicExport from '@/views/modals/ModalMnemonicExport/ModalMnemonicExport.vue';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

@Component({
    components: {
        MosaicAmountDisplay,
        ModalFormSubAccountCreation,
        ErrorTooltip,
        FormLabel,
        ValidationProvider,
        ModalMnemonicExport,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            currentAccount: 'account/currentAccount',
            knownAccounts: 'account/knownAccounts',
            networkType: 'network/networkType',
            mosaics: 'mosaic/mosaics',
            networkMosaic: 'mosaic/networkMosaic',
            networkCurrency: 'mosaic/networkCurrency',
            isPrivateKeyProfile: 'profile/isPrivateKeyProfile',
        }),
    },
})
export class AccountSelectorPanelTs extends Vue {
    /**
     * The network currency.
     */
    public networkCurrency: NetworkCurrencyModel;

    /**
     * Currently active networkType
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Known accounts identifiers
     * @var {string[]}
     */
    public knownAccounts: AccountModel[];
    /**
     * Networks currency mosaic
     * @var {MosaicId}
     */
    public networkMosaic: MosaicId;

    /**
     * Current account owned mosaics
     * @private
     * @type {MosaicInfo[]}
     */
    private mosaics: MosaicModel[];

    /**
     * Accounts repository
     * @var {AccountService}
     */
    public accountService: AccountService;

    /**
     * Whether user is currently adding an account (modal)
     * @var {boolean}
     */
    public isAddingAccount: boolean = false;
    /**
     * Whether currently viewing export
     * @var {boolean}
     */
    public isViewingExportModal: boolean = false;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    public isPrivateKeyProfile: boolean;

    /**
     * Hook called when the component is created
     * @return {void}
     */
    public async created() {
        this.accountService = new AccountService();
    }

    /// region computed properties getter/setter
    public get balances(): Map<string, number> {
        const networkMosaics = this.mosaics.filter((m) => m.mosaicIdHex === this.networkMosaic.toHex());
        return Object.assign({}, ...networkMosaics.map((s) => ({ [s.addressRawPlain]: s.balance })));
        // return this.addressesBalances
    }

    public get currentAccountIdentifier(): string {
        return !this.currentAccount ? '' : this.currentAccount.id;
    }

    public set currentAccountIdentifier(id: string) {
        if (!id || !id.length) {
            return;
        }

        const account = this.accountService.getAccount(id);
        if (!account) {
            return;
        }

        if (!this.currentAccount || id !== this.currentAccount.id) {
            this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);
            this.$emit('input', account.id);
        }
    }

    public get currentAccounts(): AccountModel[] {
        return this.knownAccounts;
    }

    public get hasAddAccountModal(): boolean {
        return this.isAddingAccount;
    }

    public set hasAddAccountModal(f: boolean) {
        this.isAddingAccount = f;
    }

    public get hasMnemonicExportModal(): boolean {
        return this.isViewingExportModal;
    }

    public set hasMnemonicExportModal(f: boolean) {
        this.isViewingExportModal = f;
    }

    /// end-region computed properties getter/setter

    /**
     * Whether the account item is the current account
     * @param item
     * @return {boolean}
     */
    public isActiveAccount(item): boolean {
        return item.id === this.currentAccount.id;
    }
}

'''
'''--- src/components/ActionDisplay/ActionDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { Transaction, TransactionType } from 'symbol-sdk';
// @ts-ignore
import AddressDisplay from '@/components/AddressDisplay/AddressDisplay.vue';

@Component({
    components: {
        AddressDisplay,
    },
})
export class ActionDisplayTs extends Vue {
    /**
     * Transaction
     * @type {Transaction}
     */
    @Prop({ default: null }) transaction: Transaction;
    /**
     * Transaction type from SDK
     * @type {TransactionType}
     */
    public transactionType = TransactionType;

    /**
     * Whether the transaction needs a cosignature
     * // @TODO
     * @protected
     * @type {boolean}
     */
    protected needsCosignature: boolean = false;
}

'''
'''--- src/components/AddCosignatoryInput/AddCosignatoryInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Address, NetworkType, PublicAccount, RepositoryFactory } from 'symbol-sdk';
// internal dependencies
import { AddressValidator } from '@/core/validation/validators';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ButtonAdd from '@/components/ButtonAdd/ButtonAdd.vue';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormRow,
        ButtonAdd,
    },
    computed: {
        ...mapGetters({
            repositoryFactory: 'network/repositoryFactory',
            networkType: 'network/networkType',
        }),
    },
})
export class AddCosignatoryInputTs extends Vue {
    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Current peer
     * @private
     * @type {string}
     */
    private repositoryFactory: RepositoryFactory;

    /**
     * Current network type
     * @private
     * @type {NetworkType}
     */
    private networkType: NetworkType;

    /**
     * Cosignatory input (address or public key)
     * @protected
     * @type {string}
     */
    public cosignatory: string = '';

    /**
     * Handles the form submission
     * @protected
     * @return {void}
     */
    protected onAddCosignatory(): void {
        if (AddressValidator.validate(this.cosignatory)) {
            this.addCosignerFromAddress();
            this.cosignatory = '';
            return;
        }

        this.addCosignerFromPublicKey();
        this.cosignatory = '';
    }

    /**
     * Emits onAddCosignatory event when cosignatory is input as a public key
     * @private
     * @return {void}
     */
    private addCosignerFromPublicKey(): void {
        if (!this.cosignatory) {
            return;
        }
        const publicAccount = PublicAccount.createFromPublicKey(this.cosignatory, this.networkType);
        this.$emit('added', publicAccount.address);
    }

    /**
     * Emits onAddCosignatory event when cosignatory is input as an address
     * @private
     * @return {void}
     */
    private async addCosignerFromAddress() {
        this.$emit('added', Address.createFromRawAddress(this.cosignatory));
    }
    /**
     * filter tags
     */
    public stripTagsCosignatory() {
        this.cosignatory = FilterHelpers.stripFilter(this.cosignatory);
    }
}

'''
'''--- src/components/AddressDisplay/AddressDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { Address, NamespaceId } from 'symbol-sdk';

@Component
export class AddressDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    address: Address | NamespaceId;

    /**
     * Action descriptor
     * @var {string}
     */
    public descriptor: string = '';

    /**
     * Hook called when the component is mounted
     * @return {void}
     */
    public created() {
        // - load transaction details
        this.loadDetails();
    }

    /**
     * Load transaction details
     * @return {Promise<void>}
     */
    protected async loadDetails(): Promise<void> {
        this.descriptor = '';
        if (!this.address) {
            return;
        }
        // in case of normal transfer, display pretty address
        if (this.address instanceof Address) {
            this.descriptor = this.address.pretty();
        } else if (this.address instanceof NamespaceId) {
            this.descriptor = this.address.toHex();
            this.descriptor = await this.$store.dispatch('namespace/RESOLVE_NAME', this.address);
        }
    }
}

'''
'''--- src/components/AmountDisplay/AmountDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { mapGetters } from 'vuex';

// configuration

@Component({
    computed: {
        ...mapGetters({
            networkConfiguration: 'network/networkConfiguration',
        }),
    },
})
export class AmountDisplayTs extends Vue {
    @Prop({ default: 0 }) value: number;

    @Prop({ default: undefined }) decimals: number | undefined;

    @Prop({ default: false }) showTicker: false;

    @Prop({ default: '' }) ticker: string;

    @Prop({ default: 'normal' }) size: 'normal' | 'smaller' | 'bigger' | 'biggest';

    public networkConfiguration: NetworkConfigurationModel;

    /// region computed properties getter/setter
    get integerPart(): string {
        return Math.floor(this.value).toLocaleString();
    }

    get fractionalPart(): string {
        const rest = this.value - Math.floor(this.value);
        if (rest === 0) {
            return '';
        }
        const decimals = this.decimals === undefined ? this.networkConfiguration.maxMosaicDivisibility || 6 : this.decimals;
        // remove leftmost-0 and rightmost-0
        return Number(rest.toFixed(decimals)).toPrecision().toString().replace(/^0/, '');
    }

    /**
     * Ticker displayed in the view
     * @readonly
     * @type {string}
     */
    get displayedTicker(): string {
        return (this.showTicker && this.ticker) || '';
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AmountInput/AmountInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';

// internal dependencies
import { createValidationRuleSet } from '@/core/validation/ValidationRuleset';

// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
import { mapGetters } from 'vuex';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { networkConfig } from '@/config';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
    },
    computed: {
        ...mapGetters({
            mosaics: 'mosaic/mosaics',
        }),
    },
})
export class AmountInputTs extends Vue {
    @Prop({ default: '' }) value: string;
    @Prop({ default: '' }) mosaicHex: string;

    /**
     * Available mosaics models
     */
    public mosaics: MosaicModel[];

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules;

    created() {
        // update validation rule to reflect correct mosaic divisibility
        const chosenMosaic = this.mosaics.find((mosaic) => this.mosaicHex === mosaic.mosaicIdHex);
        const networkConfigurationDefaults = networkConfig.networkConfigurationDefaults;
        networkConfigurationDefaults.maxMosaicDivisibility = chosenMosaic ? chosenMosaic.divisibility : 6;

        // set validation rules for this field
        this.validationRules = createValidationRuleSet(networkConfigurationDefaults);
    }

    /// region computed properties getter/setter
    public get relativeValue(): string {
        return this.value;
    }

    public set relativeValue(amount: string) {
        this.$emit('input', amount);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/AppLogo/AppLogoTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';

// configuration
import { appConfig } from '@/config';

// import logo as an image
// @ts-ignore
import logo from '@/views/resources/symbol_from_nem.png';

@Component
export class AppLogoTs extends Vue {
    /**
     * Logo image
     * @var {any}
     */
    public readonly logo = logo;

    /**
     * Title of the app
     * @var {string}
     */
    public readonly appTitle = appConfig.title;
}

'''
'''--- src/components/ApprovalAndRemovalInput/ApprovalAndRemovalInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { MultisigAccountInfo } from 'symbol-sdk';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// configuration
import { mapGetters } from 'vuex';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            networkConfiguration: 'network/networkConfiguration',
        }),
    },
})
export class ApprovalAndRemovalInputTs extends Vue {
    /**
     * Value bound to the form v-model
     * @type {number}
     */
    @Prop({
        default: '',
    })
    value: number;

    /**
     * Type of multisig account modification operation
     * @type {('conversion' | 'modification')}
     */
    @Prop({
        default: 'conversion',
    })
    operation: 'conversion' | 'modification';

    /**
     * Type of field
     * @type {('approval' | 'removal')}
     */
    @Prop({
        default: 'approval',
    })
    type: 'approval' | 'removal';

    /**
     * Current min approval or mun removal value of the target account
     * @type {number}
     */
    @Prop({
        default: null,
    })
    multisig: MultisigAccountInfo;

    private networkConfiguration: NetworkConfigurationModel;

    /// region computed properties getter/setter
    /**
     * Gets the input value from the value prop
     * @protected
     * @type {number}
     */
    protected get chosenValue(): number {
        return this.value;
    }

    /**
     * Emits input value change to the parent
     * @protected
     */
    protected set chosenValue(amount: number) {
        this.$emit('input', amount);
    }

    /**
     * Form label
     * @readonly
     * @protected
     * @type {string}
     */
    protected get label(): string {
        return this.type === 'approval' ? 'form_label_new_min_approval' : 'form_label_new_min_removal';
    }

    protected get description(): string {
        return this.type === 'approval' ? 'form_label_description_min_approval' : 'form_label_description_min_removal';
    }

    /**
     * Current minApproval or minRemoval of the target account
     * @readonly
     * @protected
     * @type {number}
     */
    protected get currentValue(): number {
        if (!this.multisig) {
            return 0;
        }
        if (this.type === 'approval') {
            return this.multisig.minApproval;
        }
        return this.multisig.minRemoval;
    }

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    protected validationRules = ValidationRuleset;

    /**
     * Available input choices
     * @readonly
     * @protected
     * @type {{label: string, value: number}}
     */
    protected get deltaOptions(): { value: number; newDelta: number }[] {
        // For an account conversion, the minimum delta is 1
        const isConversion = this.operation === 'conversion';

        // minimum possible delta
        const maxCosignatoriesPerAccount = this.networkConfiguration.maxCosignatoriesPerAccount;
        const minDelta = isConversion ? 1 : 0 - this.currentValue;

        return [...Array(maxCosignatoriesPerAccount).keys()].map((index: number) => {
            const delta = minDelta + index;
            const newValue = this.currentValue + delta;
            return { value: delta, newDelta: newValue };
        });
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/ButtonCopyToClipboard/ButtonCopyToClipboardTs.ts ---
import { Component, Vue, Prop } from 'vue-property-decorator';
import { UIHelpers } from '@/core/utils/UIHelpers';
import { NotificationType } from '@/core/utils/NotificationType';

@Component
export class ButtonCopyToClipboardTs extends Vue {
    @Prop({ default: null }) value: string;

    @Prop({ default: 'button' }) type: 'button' | 'image' | 'icon';

    @Prop({ default: 'mnemonic_copy' }) readonly tooltipText!: string;

    copyToClipboard() {
        const value: any = this.value;
        if (value) {
            try {
                UIHelpers.copyToClipboard(value);
                this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.COPY_SUCCESS);
            } catch (e) {
                this.$store.dispatch('notification/ADD_ERROR', NotificationType.COPY_FAILED);
            }
        }
    }
}

'''
'''--- src/components/ButtonRefresh/ButtonRefreshTs.ts ---
import { Vue, Component } from 'vue-property-decorator';
@Component
export class ButtonRefreshTs extends Vue {}

'''
'''--- src/components/CosignatoryModificationsDisplay/CosignatoryModificationsDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NetworkType } from 'symbol-sdk';

// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
import { CosignatoryModifications } from '@/views/forms/FormMultisigAccountModificationTransaction/FormMultisigAccountModificationTransactionTs';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
        }),
    },
})
export class CosignatoryModificationsDisplayTs extends Vue {
    /**
     * Cosignatory modifications
     * @type {CosignatoryModifications}
     */
    @Prop({
        default: {},
    })
    cosignatoryModifications: CosignatoryModifications;

    private networkType: NetworkType;

    get modifications(): {
        address: string;
        addOrRemove: 'add' | 'remove';
    }[] {
        return Object.values(this.cosignatoryModifications).map(({ addOrRemove, cosignatory }) => ({
            address: cosignatory.pretty(),
            addOrRemove,
        }));
    }
}

'''
'''--- src/components/DisabledUiOverlay/DisabledUiOverlayTs.ts ---
import { mapState } from 'vuex';
import { Component, Vue } from 'vue-property-decorator';

@Component({
    computed: { ...mapState({ app: 'app' }) },
})
export class DisabledUiOverlayTs extends Vue {
    app: any;

    get show() {
        return this.app.isUiDisabled;
    }

    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    get message() {
        return this.app.uiDisabledMessage;
    }
}

'''
'''--- src/components/DivisibilityInput/DivisibilityInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';

// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';

// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
})
export class DivisibilityInputTs extends Vue {
    @Prop({ default: '' }) value: string;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    public get chosenValue(): string {
        return this.value;
    }

    public set chosenValue(amount: string) {
        if (parseInt(amount) > 6) {
            amount = '6';
        }
        if (parseInt(amount) < 0) {
            amount = '0';
        }
        this.$emit('input', amount);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/DurationInput/DurationInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

import { TimeHelpers } from '@/core/utils/TimeHelpers';
import { mapGetters } from 'vuex';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            networkConfiguration: 'network/networkConfiguration',
        }),
    },
})
export class DurationInputTs extends Vue {
    @Prop({ default: '' }) value: string;

    /**
     * Asset type
     * @type {('mosaic' | 'namespace')}
     */
    @Prop({ default: 'mosaic' }) targetAsset: 'mosaic' | 'namespace';

    /**
     * Field label
     * @type {string}
     */
    @Prop({ default: 'form_label_duration' }) label: string;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Injected network configuration.
     */
    private networkConfiguration: NetworkConfigurationModel;

    /**
     * the toggle for the display of realativeTime
     * @type boolean
     */
    @Prop({ default: false }) showRelativeTime: boolean;

    /// region computed properties getter/setter
    public get chosenValue(): string {
        return this.value;
    }

    public set chosenValue(amount: string) {
        this.$emit('input', amount);
    }

    /**
     * @return relativeTime example: 56d 21h 18m
     */
    public get relativeTime() {
        const duration = parseInt(this.value);
        if (isNaN(duration) || 0 === duration) {
            return this.$t('label_duration_unlimited');
        }

        return TimeHelpers.durationToRelativeTime(duration, this.networkConfiguration.blockGenerationTargetTime);
    }

    public get validationRule(): string {
        return this.targetAsset === 'mosaic' ? this.validationRules.duration : this.validationRules.namespaceDuration;
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/ErrorTooltip/ErrorTooltipTs.ts ---
import { Component, Vue, Prop, Watch } from 'vue-property-decorator';

@Component
export class ErrorTooltipTs extends Vue {
    /**
     * Tooltip placement
     * @type {string}
     */
    @Prop({ default: 'top-end' }) placementOverride!: string;

    /**
     * Errors returned by the Validation Provider
     * @type {string[]}
     */
    @Prop() errors!: string[];

    /**
     * Error message shown in the tooltip
     * @var {string}
     */
    displayedError = '';

    /**
     * The string of the first error message
     * @readonly
     * @type {string}
     */
    get fieldError(): string | null {
        if (!this.errors) {
            return null;
        }
        if (!this.errors.length) {
            return null;
        }
        return this.errors.shift() || null;
    }

    /**
     * Errored state
     * @readonly
     * @type {boolean}
     */
    get errored(): boolean {
        return this.fieldError !== null;
    }

    /**
     * Sets the string shown in the tooltip
     * (To avoid an ugly-looking behaviour,
     * it must not switch to a falsy value or an empty string)
     * @param {string} newValue
     */
    @Watch('fieldError', { immediate: true })
    onFieldErrorChanged(newValue: string) {
        if (newValue && newValue !== '') {
            this.displayedError = newValue;
        }
    }
}

'''
'''--- src/components/ExplorerUrlSetter/ExplorerUrlSetterTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';

// child components
import { ValidationProvider, ValidationObserver } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

// configuration
import { networkConfig } from '@/config';

@Component({
    components: {
        ValidationProvider,
        ValidationObserver,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            explorerUrl: 'app/explorerUrl',
        }),
    },
})
export class ExplorerUrlSetterTs extends Vue {
    @Prop({
        default: '',
    })
    value: string;

    @Prop({
        default: true,
    })
    autoSubmit: boolean;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Explorer URL
     * @var {string}
     */
    public explorerUrl: string;

    /**
     * Default explorer link list
     * @readonly
     * @type {string[]}
     */
    get defaultExplorerLinkList(): string[] {
        // @TODO
        return [networkConfig.explorerUrl];
    }

    /**
     * Currently explorer url
     */
    get chosenExplorerUrl() {
        return this.value && this.value.length ? this.value : this.explorerUrl;
    }

    /**
     * Sets the new language
     */
    set chosenExplorerUrl(url: string) {
        if (this.autoSubmit) {
            this.$store.dispatch('app/SET_EXPLORER_URL', url);
        }

        this.$emit('input', url);
    }
}

'''
'''--- src/components/HardwareConfirmationButton/HardwareConfirmationButtonTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Transaction, SignedTransaction, CosignatureTransaction, CosignatureSignedTransaction } from 'symbol-sdk';

// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import TrezorConnect from '@/core/utils/TrezorConnect';
import { TransactionSigner } from '@/services/TransactionAnnouncerService';
import { from, Observable } from 'rxjs';
import { map } from 'rxjs/operators';

@Component({
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class HardwareConfirmationButtonTs extends Vue implements TransactionSigner {
    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Process with hardware confirmation (currently trezor only)
     * @return {void}
     */
    public async processHardware() {
        return this.$emit('success', this);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    signCosignatureTransaction(t: CosignatureTransaction): Observable<CosignatureSignedTransaction> {
        throw new Error('Not Implemented!!!');
    }

    signTransaction(stagedTx: Transaction): Observable<SignedTransaction> {
        // - sign each transaction with TrezorConnect
        const promise: Promise<any> = TrezorConnect.nemSignTransaction({
            path: this.currentAccount.path,
            transaction: stagedTx,
        });
        return from(promise).pipe(
            map((result) => {
                if (!result.success) {
                    throw new Error(result.payload.error);
                }
                return new SignedTransaction(
                    result.payload.data,
                    stagedTx.transactionInfo.hash,
                    stagedTx.signer.publicKey,
                    stagedTx.type,
                    stagedTx.networkType,
                );
            }),
        );
    }
}

'''
'''--- src/components/ImportanceScoreDisplay/ImportanceScoreDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { AccountInfo } from 'symbol-sdk';
// internal dependencies
import { mapGetters } from 'vuex';

@Component({
    computed: {
        ...mapGetters({
            accountsInfo: 'account/accountsInfo',
        }),
    },
})
export class ImportanceScoreDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    address: string;

    /**
     *
     */
    private accountsInfo: AccountInfo[];

    /// region computed properties getter/setter
    get score(): string {
        const accountInfo = this.accountsInfo.find((k) => k.address.plain() === this.address);
        if (!accountInfo) {
            return '0';
        }
        const importance = accountInfo.importance.compact();
        return importance.toString();
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/LanguageSelector/LanguageSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

@Component({
    computed: {
        ...mapGetters({
            currentLanguage: 'app/language',
            languageList: 'app/languages',
        }),
    },
})
export class LanguageSelectorTs extends Vue {
    @Prop({
        default: '',
    })
    value: string;

    @Prop({
        default: false,
    })
    defaultFormStyle: boolean;

    @Prop({
        default: true,
    })
    autoSubmit: boolean;

    /**
     * Currently active language
     * @see {Store.AppInfo}
     * @var {string}
     */
    public currentLanguage: string;

    /**
     * List of available languages
     * @see {Store.AppInfo}
     * @var {any[]}
     */
    public languageList: { value: string; label: string }[];

    /**
     * Currently active language
     */
    get language() {
        return this.value && this.value.length ? this.value : this.currentLanguage;
    }

    /**
     * Sets the new language
     */
    set language(language: string) {
        if (this.autoSubmit) {
            this.$store.dispatch('app/SET_LANGUAGE', language);
        }

        this.$emit('input', language);
    }
}

'''
'''--- src/components/LongTextDisplay/LongTextDisplayTs.ts ---
import { Vue, Component, Prop } from 'vue-property-decorator';

@Component
export default class LongTextDisplayTs extends Vue {
    @Prop({ default: '' }) readonly text!: string;

    @Prop({ default: 10 }) readonly rightPartSize!: number;

    @Prop({ default: 'Full Text' }) readonly popTipTitle!: string;

    @Prop({ default: 600 }) readonly popTipWidth!: number;

    public get lastCharsCount() {
        return Math.min(this.text.length, this.rightPartSize);
    }

    public get leftPart() {
        return this.text.substr(0, this.text.length - this.lastCharsCount);
    }

    public get rightPart() {
        return this.text.substr(this.text.length - this.lastCharsCount, this.text.length);
    }
}

'''
'''--- src/components/MaxFeeSelector/MaxFeeSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// configuration
import { feesConfig } from '@/config';
// @ts-ignore
import FormLabel from '@/components/FormLabel/FormLabel.vue';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';

@Component({
    components: {
        FormLabel,
    },
    computed: {
        ...mapGetters({
            defaultFee: 'app/defaultFee',
            networkMosaicName: 'mosaic/networkMosaicName',
            networkCurrency: 'mosaic/networkCurrency',
        }),
    },
})
export class MaxFeeSelectorTs extends Vue {
    @Prop({
        default: 'form-line-container',
    })
    public className: string;

    @Prop({ default: false })
    public displayOnly!: boolean;

    /**
     * Networks currency mosaic name
     * @var {string}
     */
    private networkMosaicName: string;

    /**
     * Known mosaics info
     * @var {MosaicInfo[]}
     */
    private networkCurrency: NetworkCurrencyModel;

    /**
     * Default fee setting
     * @var {number}
     */
    private defaultFee: number;

    /**
     * Dynamically calculated recommended fee
     */
    @Prop({ default: 0 }) calculatedRecommendedFee: number;

    /**
     * Dynamically calculated highest fee
     */
    @Prop({ default: 0 }) calculatedHighestFee: number;

    /**
     * The fees to be displayed in the dropw down.
     */
    private fees: { label: string; maxFee: number; calculatedFee: number }[];

    @Prop({
        default: 1,
    })
    multiplier: number;

    public created() {
        this.fees = Object.entries(feesConfig).map((entry) => ({
            label: this.getLabel([entry[0], entry[1] as number]),
            maxFee: entry[1] as number,
            calculatedFee: entry[1] as number,
        }));
    }

    /**
     * Returns the label based on the feesConfig property
     * @param {[string, number]} key, value pair
     */
    private getLabel([key, value]: [string, number]) {
        //SPECIAL VALUES!!!
        if (value === feesConfig.median) {
            return this.formatLabel(
                'fee_speed_' + key,
                this.calculatedRecommendedFee,
                this.networkMosaicName,
                this.calculatedRecommendedFee > 0,
            );
        } else if (value === feesConfig.highest) {
            return this.formatLabel('fee_speed_' + key, this.calculatedHighestFee, this.networkMosaicName, this.calculatedHighestFee > 0);
        }
        return this.formatLabel('fee_speed_' + key, value, this.networkMosaicName);
    }

    /**
     * Returns the formatted label
     * @param labelKey
     * @param fee
     * @param mosaic
     * @param showAmount
     */
    private formatLabel(labelKey: string, fee: number, mosaic: string, showAmount: boolean = true): string {
        let label = this.$t(labelKey).toString();
        if (showAmount) {
            label += ': ' + this.getRelative(fee) + ' ' + mosaic;
        }
        return label;
    }

    /**
     * Value set by the parent component's v-model
     * @type {number}
     */
    @Prop({
        default: feesConfig.median,
    })
    value: number;

    /// region computed properties getter/setter
    /**
     * Value set by the parent component
     * @type {number}
     */
    get chosenMaxFee(): number {
        return this.value || this.defaultFee;
    }

    /**
     * Emit value change
     */
    set chosenMaxFee(newValue: number) {
        this.$emit('input', newValue);
    }
    /// end-region computed properties getter/setter

    /**
     * Convert a relative amount to absolute using mosaicInfo
     * @param {number} price
     * @return {number}
     */
    public getRelative(amount: number): number {
        if (this.networkCurrency === undefined) {
            return amount;
        }
        return amount / Math.pow(10, this.networkCurrency.divisibility);
    }

    /**
     * Returns the sorted fees (including the calculated fees)
     */
    public get feesCalculated(): { label: string; maxFee: number }[] {
        return this.fees
            .map((i) => {
                if (i.maxFee === 1) {
                    return {
                        label: this.getLabel(['median', feesConfig.median]),
                        maxFee: i.maxFee,
                        calculatedFee: this.calculatedRecommendedFee,
                    };
                } else if (i.maxFee === 2) {
                    return {
                        label: this.getLabel(['highest', feesConfig.highest]),
                        maxFee: i.maxFee,
                        calculatedFee: this.calculatedHighestFee,
                    };
                } else {
                    return i;
                }
            })
            .sort((a, b) => a.calculatedFee - b.calculatedFee);
    }
}

'''
'''--- src/components/MessageInput/MessageInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// child components
// @ts-ignore
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
})
export class MessageInputTs extends Vue {
    @Prop({
        default: '',
    })
    value: string;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    get plain(): string {
        return this.value;
    }

    set plain(msg: string) {
        this.$emit('input', msg);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/MnemonicDisplay/MnemonicDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import draggable from 'vuedraggable';

// @ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
import { Formatters } from '@/core/utils/Formatters';

@Component({
    components: { draggable, ButtonCopyToClipboard },
})
export class MnemonicDisplayTs extends Vue {
    @Prop({
        default: [],
    })
    words: string[];
    public get waitingCopyString(): string {
        return Formatters.splitArrayByDelimiter(this.words);
    }
}

'''
'''--- src/components/MnemonicInput/MnemonicInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop, Watch } from 'vue-property-decorator';

// internal dependencies

// @ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
import { Formatters } from '@/core/utils/Formatters';
@Component({
    components: { ButtonCopyToClipboard },
})
export class MnemonicInputTs extends Vue {
    /**
     * @description: initial seed data
     */
    @Prop({ default: '' })
    public seed: string;

    /**
     * @description: wordsArray
     */
    public wordsArray: Array<string> = [];

    /**
     * @description: status of isEditing
     */
    public isEditing: boolean = false;

    /**
     * @description: isNeedPressDelTwice
     */
    public isNeedPressDelTwice = true;

    /**
     * @description: watch the inputform
     */
    public inputWord: string = '';

    public get userInput(): string {
        return this.inputWord;
    }
    public set userInput(input: string) {
        // avoid cache
        this.inputWord = input;
        // add the limit
        if (this.wordsArray.length >= 24) {
            this.inputWord = '';
            this.initInput();
        } else {
            // control the keyboard input rules
            this.inputWord = input.replace(/[^a-zA-Z]/g, '');
            // determine if the input is editing status
            if (!this.isEditing && !!this.inputWord) {
                this.isEditing = true;
            }
        }
    }
    public get waitingCopyString(): string {
        return Formatters.splitArrayByDelimiter(this.wordsArray);
    }

    /**
     * @description: add word to the wordsArray
     */
    addWord() {
        if (this.inputWord.length >= 2 && this.inputWord.length <= 50) {
            if (this.wordsArray.length < 24) {
                this.handleWordsArray(this.inputWord);
                this.inputWord = '';
                this.initInput();
            }
        }
    }

    /**
     * @description: delete the word
     */
    deleteWord() {
        if (this.inputWord) {
            this.isNeedPressDelTwice = true;
        } else {
            if (this.isEditing) {
                if (this.isNeedPressDelTwice) {
                    this.isNeedPressDelTwice = false;
                    return;
                }
                this.handleWordsArray();
                this.initInput();
            } else {
                this.handleWordsArray();
                this.initInput();
            }
        }
    }

    /**
     * @description: add one word  or reduce one word
     */
    handleWordsArray(item?) {
        if (!!item) {
            this.wordsArray.push(item);
        } else {
            this.wordsArray.pop();
        }
        // transform to lower case
        this.wordsArray.forEach((item: string, index) => {
            this.wordsArray[index] = item.toLowerCase();
        });
        this.$emit('handle-words', this.wordsArray);
    }

    handlePaste(e: ClipboardEvent) {
        this.handleSeed(e.clipboardData.getData('text').toString());
    }

    /**
     * @description handles seed data changes
     * @param seed imported/pasted seed data
     */
    @Watch('seed', { immediate: true })
    private handleSeed(seed: string) {
        if (!seed) {
            return;
        }
        const pasteDataArr: Array<string> = seed.trim().split(/\s+/g);
        pasteDataArr.forEach((pasteData) => {
            if (!!pasteData && this.wordsArray.length < 24) {
                this.handleWordsArray(pasteData);
            }
        });
    }
    /**
     * @description: init input
     */
    initInput() {
        this.isNeedPressDelTwice = true;
        this.isEditing = false;
    }
}

'''
'''--- src/components/MnemonicVerification/MnemonicVerificationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import draggable from 'vuedraggable';
// internal dependencies
import { NotificationType } from '@/core/utils/NotificationType';

/**
 * Emits: success, error, canceled
 */
@Component({
    components: { draggable },
})
export class MnemonicVerificationTs extends Vue {
    @Prop({ default: [] }) words: string[];

    /**
     * Randomized words
     * @var {Record<number, string>}
     */
    public shuffledWords: Record<number, string> = {};

    /**
     * Randomized words indexes
     * @var {number[]}
     */
    public shuffledWordsIndexes: number[] = [];

    /**
     * Selected words indexes
     * @var {number[]}
     */
    public selectedWordIndexes: number[] = [];

    /**
     * Hook called when the component is created
     * @return {void}
     */
    public created() {
        const shuffledWordsArray: string[] = [...this.words].sort((a, b) => a.localeCompare(b));
        this.shuffledWords = shuffledWordsArray.reduce((acc, word, index) => ({ ...acc, ...{ [index]: word } }), {});
        this.shuffledWordsIndexes = [...Array(shuffledWordsArray.length).keys()];
    }

    /**
     * Toggle a word presence in the confirmed words
     * @param {string} word
     * @return {void}
     */
    public onWordClicked(index: number): void {
        if (this.selectedWordIndexes.includes(index)) {
            this.removeWord(index);
            return;
        }

        this.selectedWordIndexes.push(index);
    }

    /**
     * Add confirmed word
     * @param {string} word
     * @return {string[]}
     */
    public removeWord(index: number): void {
        this.selectedWordIndexes = [...this.selectedWordIndexes].filter((sel) => sel !== index);
    }

    /**
     * Process verification of mnemonic
     * @return {boolean}
     */
    public processVerification(): boolean {
        const origin = this.words.join(' ');
        const rebuilt = this.selectedWordIndexes.map((i) => this.shuffledWords[i]).join(' ');

        // - origin words list does not match
        if (origin !== rebuilt) {
            const errorMsg =
                this.selectedWordIndexes.length < 1
                    ? NotificationType.PLEASE_ENTER_MNEMONIC_INFO
                    : NotificationType.MNEMONIC_INCONSISTENCY_ERROR;
            this.$store.dispatch('notification/ADD_WARNING', errorMsg);
            this.$emit('error', errorMsg);
            return false;
        }

        this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.SUCCESS);
        this.$emit('success');
        return true;
    }
}

'''
'''--- src/components/MosaicAmountDisplay/MosaicAmountDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { mapGetters } from 'vuex';
import { Component, Prop, Vue } from 'vue-property-decorator';
import { MosaicId, NamespaceId } from 'symbol-sdk';
// internal dependencies
// configuration
// child components
// @ts-ignore
import AmountDisplay from '@/components/AmountDisplay/AmountDisplay.vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    components: { AmountDisplay },
    computed: {
        ...mapGetters({
            mosaics: 'mosaic/mosaics',
            networkCurrency: 'mosaic/networkCurrency',
            networkConfiguration: 'network/networkConfiguration',
        }),
    },
})
export class MosaicAmountDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    id: MosaicId | NamespaceId;

    @Prop({
        default: null,
    })
    relativeAmount: number;

    @Prop({
        default: null,
    })
    absoluteAmount: number;

    @Prop({
        default: 'green',
    })
    color: 'red' | 'green';

    @Prop({
        default: 'normal',
    })
    size: 'normal' | 'smaller' | 'bigger' | 'biggest';

    @Prop({
        default: false,
    })
    showTicker: false;

    private mosaics: MosaicModel[];

    private networkCurrency: NetworkCurrencyModel;

    private networkConfiguration: NetworkConfigurationModel;

    /// region computed properties getter/setter

    private useNetwork(): boolean {
        if (!this.id) {
            return !!this.networkCurrency;
        }
        if (this.networkCurrency && this.id.toHex() === this.networkCurrency.mosaicIdHex) {
            return true;
        }
        if (this.networkCurrency && this.id.toHex() === this.networkCurrency.namespaceIdHex) {
            return true;
        }
        return false;
    }

    /**
     * Mosaic divisibility from database
     * @return {number}
     */
    protected get divisibility(): number {
        if (this.useNetwork()) {
            return this.networkCurrency.divisibility;
        }
        // TODO improve how to resolve the mosaic id when the known value is a namespace id.
        // Note that if the transaction is old, the namespace id of the mosaic may have been expired!
        const mosaic = this.mosaics.find((m) => m.mosaicIdHex === this.id.toHex());
        return mosaic ? mosaic.divisibility : this.networkConfiguration.maxMosaicDivisibility;
    }

    public get amount(): number {
        if (this.absoluteAmount) {
            return this.absoluteAmount / Math.pow(10, this.divisibility);
        } else {
            return this.relativeAmount || 0;
        }
    }

    public get ticker(): string {
        if (!this.showTicker) {
            return '';
        }

        if (this.useNetwork()) {
            return this.networkCurrency.ticker || '';
        }

        const mosaic = this.mosaics.find((m) => m.mosaicIdHex === this.id.toHex());
        return (mosaic && mosaic.name) || this.id.toHex();
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/MosaicAttachmentInput/MosaicAttachmentInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
// child components
import { ValidationObserver } from 'vee-validate';
// @ts-ignore
import MosaicSelector from '@/components/MosaicSelector/MosaicSelector.vue';
// @ts-ignore
import AmountInput from '@/components/AmountInput/AmountInput.vue';
// @ts-ignore
import ButtonRemove from '@/components/ButtonRemove/ButtonRemove.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        ValidationObserver,
        MosaicSelector,
        AmountInput,
        ButtonRemove,
        FormRow,
    },
})
export class MosaicAttachmentInputTs extends Vue {
    /**
     * Initial value set by the parent
     * @type {{mosaicHex: string, amount: number}}
     */
    @Prop({
        default: { mosaicHex: '', amount: 0 },
        required: true,
    })
    mosaicAttachment: { mosaicHex: string; amount: number };

    /**
     * Unique Id assigned to this component
     * @type {number}
     */
    @Prop({ default: 0, required: true }) uid: number;

    /**
     * Hex ids of mosaics to show in options
     * @type {string[]}
     */
    @Prop({ default: [] }) mosaicHexIds: string[];

    /**
     * Whether to show absolute amounts or not
     */
    @Prop({ default: false }) absolute: boolean;

    /**
     * the item index in the Array
     */
    @Prop({ default: true }) isShowDelete: boolean;

    /**
     * whether to show the label accord to isFirstItem
     */
    @Prop({ default: true }) isFirstItem: boolean;
    /**
     * Updated value to sync with the parent formItems
     * @protected
     * @type {{mosaicHex: string, amount: number}}
     */
    protected get chosenValue(): { mosaicHex: string; amount: number } {
        return this.mosaicAttachment;
    }

    /**
     * Handle mosaic changes from mosaic selection fields
     * @param {string} hex
     */
    public onChangeMosaic(hex: string): void {
        Vue.set(this.chosenValue, 'mosaicHex', hex);
        Vue.nextTick().then(() => this.emitChange());
    }

    /**
     * Handle amount changes from mosaic selection fields
     * @param {number} amount
     */
    public onChangeAmount(amount: number): void {
        Vue.set(this.chosenValue, 'amount', amount);
        Vue.nextTick().then(() => this.emitChange());
    }

    /**
     * Emits input change to the parent
     * @private
     * @return {void}
     */
    private emitChange(): void {
        this.$emit('input-changed', {
            mosaicAttachment: this.chosenValue,
            inputIndex: this.uid,
        });
    }

    /**
     * Form items
     * @var {any}
     */
    public formItems = {
        selectedMosaicHex: '',
        relativeAmount: this.chosenValue?.amount | 0,
    };

    get selectedMosaic(): string {
        return this.formItems.selectedMosaicHex;
    }

    set selectedMosaic(hex: string) {
        this.formItems.selectedMosaicHex = hex;
    }

    get relativeAmount(): number {
        return this.formItems.relativeAmount;
    }

    set relativeAmount(amount: number) {
        this.formItems.relativeAmount = amount;
    }

    get canClickAdd(): boolean {
        if (!this.formItems.selectedMosaicHex || undefined === this.formItems.relativeAmount) {
            return false;
        }

        return true;
    }
    /// end-region computed properties getter/setter

    mounted() {
        this.emitChange();
    }

    @Watch('mosaicAttachment')
    public onMosaicAttachmentChange(mosaicAttachment: { mosaicHex: string; amount: number }) {
        this.relativeAmount = mosaicAttachment.amount;
    }
}

'''
'''--- src/components/MosaicBalanceList/MosaicBalanceListTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicId, NamespaceId } from 'symbol-sdk';
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// resources
import { dashboardImages } from '@/views/resources/Images';
import { MosaicService } from '@/services/MosaicService';
import { AccountMosaicConfigurationModel } from '@/core/database/entities/MosaicConfigurationModel';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { AccountModel } from '@/core/database/entities/AccountModel';

export interface BalanceEntry {
    id: MosaicId;
    name: string;
    amount: number;
    mosaic: MosaicModel;
}

@Component({
    components: {
        MosaicAmountDisplay,
    },
    computed: {
        ...mapGetters({
            accountMosaicConfigurations: 'mosaic/accountMosaicConfigurations',
            balanceMosaics: 'mosaic/balanceMosaics',
            networkMosaic: 'mosaic/networkMosaic',
            currentHeight: 'network/currentHeight',
            networkConfiguration: 'network/networkConfiguration',
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class MosaicBalanceListTs extends Vue {
    /**
     * Dashboard images
     * @var {any}
     */
    protected dashboardImages: Record<string, any> = dashboardImages;

    /**
     * Networks 1currency mosaic
     * @var {MosaicId}
     */
    public networkMosaic: MosaicId;

    /**
     * Network mosaics info (all)
     * @var {MosaicInfo[]}
     */
    public balanceMosaics: MosaicModel[];

    /**
     * List of mosaics that are hidden
     * @var {string[]}
     */
    public accountMosaicConfigurations: AccountMosaicConfigurationModel;

    /**
     * Current account info
     */
    public currentAccount: AccountModel;
    /**
     * Whether the component is in edition mode
     * @var {boolean}
     */
    public isEditionMode: boolean = false;

    public currentHeight: number;

    private networkConfiguration: NetworkConfigurationModel;

    /// region computed properties getter/setter
    /**
     * Balance entries from the currently active account's mosaics
     * @readonly
     * @type {BalanceEntry}
     */
    get balanceEntries(): BalanceEntry[] {
        return this.balanceMosaics.map((mosaic) => {
            return {
                id: new MosaicId(mosaic.mosaicIdHex),
                name: mosaic.name || mosaic.mosaicIdHex,
                amount: mosaic.balance || 0,
                mosaic: mosaic,
            };
        });
    }

    /**
     * All balance entries except expired mosaics
     * @readonly
     * @type {BalanceEntry[]}
     */
    get allBalanceEntries(): BalanceEntry[] {
        return this.balanceEntries.filter((entry) => {
            // calculate expiration
            const expiration = MosaicService.getExpiration(
                entry.mosaic,
                this.currentHeight,
                this.networkConfiguration.blockGenerationTargetTime,
            );
            // skip if mosaic is expired
            return expiration !== 'expired';
        });
    }

    /**
     * Balance entries of active and not hidden mosaics
     * @readonly
     * @type {BalanceEntry[]}
     */
    get filteredBalanceEntries(): BalanceEntry[] {
        // filter out hidden mosaics
        return this.allBalanceEntries.filter((entry) => {
            return !this.isMosaicHidden(entry.id);
        });
    }

    /// end-region computed properties getter/setter

    /**
     * Returns true when mosaic \a mosaicId is hidden
     * @param {MosaicId} mosaicId
     * @return {boolean}
     */
    public isMosaicHidden(mosaicId: MosaicId | NamespaceId): boolean {
        const mosaicConfiguration = this.accountMosaicConfigurations[mosaicId.toHex()];
        return mosaicConfiguration && mosaicConfiguration.hidden;
    }

    /**
     * Returns true if no mosaic is hidden
     * @returns {boolean}
     */
    public areAllMosaicsShown(): boolean {
        return !Object.values(this.accountMosaicConfigurations).find((c) => c.hidden);
    }

    /**
     * Toggle whether all mosaics are shown or hidden
     * @return {void}
     */
    public toggleMosaicDisplay(mosaicId?: MosaicId | NamespaceId) {
        // - clicked singular checkbox
        if (mosaicId !== undefined) {
            const isHidden = this.isMosaicHidden(mosaicId);
            const action = isHidden ? 'SHOW_MOSAIC' : 'HIDE_MOSAIC';
            return this.$store.dispatch('mosaic/' + action, { mosaicId: mosaicId, account: this.currentAccount });
        }

        // - update state
        const action = this.areAllMosaicsShown() ? 'HIDE_MOSAIC' : 'SHOW_MOSAIC';
        return this.balanceMosaics.forEach((mosaic) =>
            this.$store.dispatch('mosaic/' + action, {
                mosaicId: new MosaicId(mosaic.mosaicIdHex),
                account: this.currentAccount,
            }),
        );
    }
}

'''
'''--- src/components/MosaicSelector/MosaicSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicId } from 'symbol-sdk';
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components//ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormLabel from '@/components//FormLabel/FormLabel.vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormLabel,
    },
    computed: {
        ...mapGetters({
            networkMosaic: 'mosaic/networkMosaic',
            networkMosaicName: 'mosaic/networkMosaicName',
            mosaics: 'mosaic/mosaics',
        }),
    },
})
export class MosaicSelectorTs extends Vue {
    /**
     * Prop bound to the parent v-model
     */
    @Prop({ default: '' }) value: string;

    /**
     * Mosaics to display as options
     */
    @Prop({ default: [] }) mosaicHexIds: string[];

    /**
     * Field label hidden by default
     */
    @Prop({ default: null }) label: string;

    @Prop({ default: 'networkMosaic' }) defaultMosaic: 'networkMosaic' | 'firstInList';
    /**
     * Networks currency mosaic
     */
    public networkMosaic: MosaicId;

    /**
     * Networks currency mosaic name
     */
    public networkMosaicName: string;

    /**
     * All the known mosaics.
     */
    public mosaics: MosaicModel[];

    /// region computed properties getter/setter

    /**
     * Mosaics shown as options in the select
     * @readonly
     * @protected
     */
    protected get displayedMosaics(): MosaicModel[] {
        return this.mosaicHexIds.map((mosaicIdHex) => this.mosaics.find((m) => m.mosaicIdHex === mosaicIdHex)).filter((x) => x);
    }

    /**
     * Sets the default input value
     * @type {string}
     */
    public get selectedMosaic(): string {
        return this.value;
    }

    /**
     * Emits input value change to parent component
     */
    public set selectedMosaic(hex: string) {
        this.$emit('input', hex);
    }

    /**
     * Hook called when the layout is mounted
     * @return {void}
     */
    public mounted(): void {
        // if a value is provided, return
        if (this.value && this.value.length > 0) {
            return;
        }

        // else... set default value to network mosaic
        if (this.defaultMosaic === 'networkMosaic' && this.networkMosaic) {
            this.selectedMosaic = this.networkMosaic.toHex();
        }

        // otherwise... set default value to the first mosaic from the props
        if (this.defaultMosaic === 'firstInList' && this.mosaicHexIds.length) {
            this.selectedMosaic = this.mosaicHexIds[0];
        }
    }
}

'''
'''--- src/components/MultisigCosignatoriesDisplay/MultisigCosignatoriesDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { MultisigAccountInfo, Address } from 'symbol-sdk';

// child components
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import AddCosignatoryInput from '@/components/AddCosignatoryInput/AddCosignatoryInput.vue';

// custom types
type AddOrRemove = 'add' | 'remove';

interface Modification {
    cosignatory: Address;
    addOrRemove: AddOrRemove;
}

type Cosignatories = { address: Address }[];

@Component({
    components: {
        FormRow,
        AddCosignatoryInput,
    },
})
export class MultisigCosignatoriesDisplayTs extends Vue {
    @Prop({ default: null }) multisig: MultisigAccountInfo;
    @Prop({ default: false }) modifiable: boolean;
    @Prop({ default: {} }) cosignatoryModifications: Record<string, Modification>;

    /**
     * Whether the add cosignatory form input is visible
     */
    protected isAddingCosignatory = false;

    /**
     * Cosignatories to add
     * @type {Cosignatories}
     */
    protected get addModifications(): Cosignatories {
        return this.getFilteredModifications('add');
    }

    /**
     * Cosignatories to remove
     * @type {Cosignatories}
     */
    protected get removeModifications(): Cosignatories {
        return this.getFilteredModifications('remove');
    }

    /**
     * Internal helper to get filtered cosignatory modifications
     * @param {AddOrRemove} addOrRemoveFilter
     * @returns {Cosignatories}
     */
    private getFilteredModifications(addOrRemoveFilter: AddOrRemove): Cosignatories {
        return Object.values(this.cosignatoryModifications)
            .filter(({ addOrRemove }) => addOrRemove === addOrRemoveFilter)
            .map(({ cosignatory }) => ({
                address: cosignatory,
            }));
    }

    /**
     * The multisig account cosignatories after modifications
     * @type {{ publicKey: string; address: string }[]}
     */
    protected get cosignatories(): { address: Address }[] {
        if (!this.multisig) {
            return [];
        }

        return this.multisig.cosignatoryAddresses
            .filter((address) => !this.cosignatoryModifications[address.plain()])
            .map((address) => ({ address }));
    }

    /**
     * Hook called when a cosignatory is added
     * @param {PublicAccount} publicAccount
     */
    protected onAddCosignatory(cosigAddress: Address): void {
        const isCosignatory = this.cosignatories.find(({ address }) => cosigAddress.plain() === address.plain());

        if (isCosignatory || this.cosignatoryModifications[cosigAddress.plain()]) {
            this.$store.dispatch('notification/ADD_WARNING', 'warning_already_a_cosignatory');
            return;
        }

        this.$emit('add', cosigAddress);
    }

    /**
     * Hook called when a cosignatory is removed
     * @param {string} publicKey
     */
    protected onRemoveCosignatory(address: Address): void {
        this.$emit('remove', address);
    }

    /**
     * Hook called when a cosignatory modification is undone
     * @param {string} thePublicKey
     */
    protected onUndoModification(theAddress: Address): void {
        this.$emit('undo', theAddress);
    }
}

'''
'''--- src/components/NamespaceNameInput/NamespaceNameInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NamespaceRegistrationType, NetworkType } from 'symbol-sdk';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
        }),
    },
})
export class NamespaceNameInputTs extends Vue {
    @Prop({ default: null }) value: string;

    @Prop({ default: NamespaceRegistrationType.RootNamespace })
    namespaceRegistrationType: NamespaceRegistrationType;

    @Prop({ default: true }) isNeedAutoFocus: boolean;

    /**
     * Current network type
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    public get chosenValue(): string {
        return this.value;
    }

    public set chosenValue(input: string) {
        this.$emit('input', input);
    }

    /**
     * Validation rule
     * @readonly
     * @type {Record<string, any>}
     */
    public get validationRule(): Record<string, any> {
        return this.namespaceRegistrationType === NamespaceRegistrationType.RootNamespace
            ? this.validationRules.namespaceName
            : this.validationRules.subNamespaceName;
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/NamespaceSelector/NamespaceSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            namespaces: 'namespace/ownedNamespaces',
        }),
    },
})
export class NamespaceSelectorTs extends Vue {
    /**
     * Field label
     * @type {string}
     */
    @Prop({ default: '' }) label: string;

    /**
     * Value set by the parent component's v-model
     * @type {string}
     */
    @Prop({ default: null }) value: string;

    /**
     * Namespaces that are not linked
     * @type {boolean}
     */
    @Prop({ default: false }) disableLinked: boolean;

    /**
     * Namespaces that are linked to an alias
     * @type {boolean}
     */
    @Prop({ default: false }) disableUnlinked: boolean;

    /**
     * Level 1,2 namespace
     * @type {boolean}
     */
    @Prop({ default: false }) parentNamespace: boolean;

    /**
     * Level 3 namespace
     * @type {boolean}
     */
    @Prop({ default: false }) nonParentNamespace: boolean;

    /**
     * Namespaces names
     * @type {[h: string]: string}
     */
    public namespaces: NamespaceModel[];

    /**
     * Filter Namespaces
     */
    get filteredNamespaces() {
        if (this.disableLinked) {
            return this.linkableNamespaces;
        }
        if (this.disableUnlinked) {
            return this.unlinkableNamespaces;
        }
        if (this.parentNamespace) {
            return this.parentNamespaces;
        }
        if (this.nonParentNamespace) {
            return this.nonParentNamespaces;
        }
        return this.allNamespaces;
    }

    /**
     * Namespaces that are not linked
     */
    get linkableNamespaces() {
        return this.namespaces.filter((n) => n.aliasType === 0);
    }

    /**
     * Namespaces that are linked to an alias
     */
    get unlinkableNamespaces() {
        return this.namespaces.filter((n) => n.aliasType !== 0);
    }

    /**
     * Filter out of level 3 when creating a subnamespace
     */
    get parentNamespaces() {
        return this.namespaces.filter((n) => n.depth !== 3);
    }

    /**
     * Filter level 3 subnamespace
     */
    get nonParentNamespaces() {
        return this.namespaces.filter((n) => n.depth === 3);
    }

    /**
     * all namespaces
     */
    get allNamespaces() {
        return this.namespaces;
    }

    /// region computed properties getter/setter
    /**
     * Value set by the parent component
     * @type {string}
     */
    get chosenValue(): string {
        return this.value;
    }

    /**
     * Emit value change
     */
    set chosenValue(newValue: string) {
        this.$emit('input', newValue);
    }

    /// end-region computed properties getter/setter
    /**
     * Helper method to read namespace name if available
     * @param {NamespaceModel} info
     * @return {string}
     */
    public getName(info: NamespaceModel): string {
        return info.name || info.namespaceIdHex;
    }

    /**
     * Hook called when the layout is mounted
     * @return {void}
     */
    public mounted(): void {
        // set default value to the first namespace in the list
        if (this.filteredNamespaces.length) {
            this.chosenValue = this.getName(this.filteredNamespaces[0]);
        }
    }
}

'''
'''--- src/components/NavigationLinks/NavigationLinksTs.ts ---
import { Vue, Component, Prop } from 'vue-property-decorator';

@Component
export class NavigationLinksTs extends Vue {
    @Prop({ default: () => [] }) items: string[];
    @Prop({ default: 0 }) currentItemIndex: number;
    @Prop({ default: 'vertical' }) direction: string;
}

'''
'''--- src/components/NavigationTabs/NavigationTabsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

// external dependencies
import { Component, Vue, Prop } from 'vue-property-decorator';

// internal dependencies
import { TabEntry } from '@/router/TabEntry';

@Component
export class NavigationTabsTs extends Vue {
    /**
     * Parent route name
     * @var {string}
     */
    @Prop({ default: '' }) parentRouteName: string;

    public get tabEntries(): TabEntry[] {
        // @ts-ignore
        return this.$router.getTabEntries(this.parentRouteName);
    }

    @Prop({ default: 'horizontal' }) direction: 'horizontal' | 'vertical';
}

'''
'''--- src/components/NetworkNodeSelector/NetworkNodeSelectorTs.ts ---
// external dependencies
import { Component, Vue, Prop } from 'vue-property-decorator';
import { NodeHttp, NodeInfo } from 'symbol-sdk';
import { mapGetters } from 'vuex';

// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { URLHelpers } from '@/core/utils/URLHelpers';
import { NodeModel } from '@/core/database/entities/NodeModel';

// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        FormWrapper,
        FormRow,
    },
    computed: {
        ...mapGetters({
            knowNodes: 'network/knowNodes',
            repositoryFactory: 'network/repositoryFactory',
        }),
    },
})
export class NetworkNodeSelectorTs extends Vue {
    @Prop({ default: () => [] }) excludeRoles: number[];

    /**
     * Validation rules
     */
    public validationRules = ValidationRuleset;

    public knowNodes: NodeModel[];

    /**
     * Form items
     */
    protected formItems = { nodeUrl: '' };

    public customNodeData = [];
    public isFetchingNodeInfo = false;

    /**
     * Hook called when the submit button is clicked
     * @protected
     * @returns {Promise<void>}
     */
    protected async handleInput(): Promise<void> {
        try {
            const nodeUrl = URLHelpers.getNodeUrl(this.formItems.nodeUrl);
            new URL(nodeUrl);

            const publicKey = await this.fetchNodePublicKey();

            if (publicKey && publicKey.length) {
                this.$emit('input', publicKey);

                const associationValues: Array<string> = /.+\u003a\d{2,}/.test(nodeUrl) ? [nodeUrl] : [nodeUrl + ':3000'];
                this.customNodeData = associationValues;
            }
        } catch (error) {
            // set error in the error tooltip
            this.$emit('error', error.message);
        }
    }

    /**
     * Checks if the given node is eligible for harvesting
     * @protected
     * @returns {Promise<void>}
     */
    protected async fetchNodePublicKey(): Promise<string> {
        if (!this.formItems.nodeUrl.length) {
            return '';
        }

        let nodeInfo: NodeInfo;
        this.isFetchingNodeInfo = true;
        try {
            const nodeUrl = URLHelpers.getNodeUrl(this.formItems.nodeUrl);
            nodeInfo = await new NodeHttp(nodeUrl).getNodeInfo().toPromise();
        } catch (error) {
            console.log(error);
            throw new Error('Node_connection_failed');
        } finally {
            this.isFetchingNodeInfo = false;
        }

        // if (this.excludeRoles.length && this.excludeRoles.includes(nodeInfo.roles))
        //   throw new Error('harvesting_node_not_eligible')

        return nodeInfo.publicKey;
    }

    public created() {
        this.customNodeData = this.knowNodes.map((n) => n.url);
    }
}

'''
'''--- src/components/NetworkStatisticsPanel/NetworkStatisticsPanelTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// configuration
// child components
// @ts-ignore
// @ts-ignore
import ModalHarvestingWizard from '@/views/modals/ModalHarvestingWizard/ModalHarvestingWizard.vue';
import { officialIcons } from '@/views/resources/Images';

import { AccountModel, AccountType as ProfileType } from '@/core/database/entities/AccountModel';
import { NodeModel } from '@/core/database/entities/NodeModel';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    components: {
        ModalHarvestingWizard,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            networkConfiguration: 'network/networkConfiguration',
            countTransactions: 'statistics/countTransactions',
            countAccounts: 'statistics/countAccounts',
            countNodes: 'statistics/countNodes',
            currentHeight: 'network/currentHeight',
            currentPeerInfo: 'network/currentPeerInfo',
        }),
    },
})
export class NetworkStatisticsPanelTs extends Vue {
    /**
     * The icons resources.
     */
    public officialIcons = officialIcons;

    /**
     * The current account.
     */
    private currentAccount: AccountModel;

    /**
     * The network configuration.
     */
    private networkConfiguration: NetworkConfigurationModel;

    /**
     * Number of transactions on the network
     */
    public countTransactions: number;

    /**
     * Number of accounts on the network
     */
    public countAccounts: number;

    /**
     * Number of nodes on the network
     */
    public countNodes: number;

    /**
     * Current network block height
     */
    public currentHeight: number;

    /**
     * Currently connect peer information
     */
    public currentPeerInfo: NodeModel;

    /**
     * Whether harvesting wizard is currently displayed
     */
    protected isHarvestingWizardDisplayed = false;

    /**
     * The supported profile types for harvesting
     */
    protected harvestingSupportedProfileTypes: ProfileType[] = [ProfileType.SEED];

    /**
     * Whether harvesting is enabled for current account
     */
    protected isHarvestingEnabled = false;

    /**
     * Current network target block time
     */
    protected get blockGenerationTargetTime(): number {
        return this.networkConfiguration.blockGenerationTargetTime;
    }

    public created() {
        if (this.currentAccount) {
            this.isHarvestingEnabled = this.harvestingSupportedProfileTypes.includes(this.currentAccount.type);
        }
    }
}

'''
'''--- src/components/PageNavigator/PageNavigatorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { Route } from 'vue-router';

@Component({
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class PageNavigatorTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Executes action of logout
     * @return {void}
     */
    public async logout() {
        await this.$store.dispatch('profile/LOG_OUT');
        this.$router.push({ name: 'profiles.login' });
    }

    public onPageNavigate(route: Route) {
        const isDuplicatedRoute = this.$route.matched.map(({ path }) => path).includes(route.path);
        !isDuplicatedRoute &&
            this.currentProfile &&
            this.$router.push({ name: route.name }).catch(() => {
                /**/
            });
    }
}

'''
'''--- src/components/PageTitle/PageTitleTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';

@Component
export class PageTitleTs extends Vue {
    @Prop({
        default: '',
    })
    title: string;
}

'''
'''--- src/components/Pagination/PaginationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';

@Component
export default class PaginationTs extends Vue {
    @Prop({ default: 1 }) readonly current!: number;
    @Prop({ default: 10 }) readonly pageSize!: number;
    @Prop({ default: false }) readonly lastPage!: boolean;
    @Prop({ default: 'ivu-page ivu-page-simple' }) readonly simpleWrapClasses!: string;
    @Prop({ default: 'ivu-page-prev' }) readonly prevClasses!: string;
    @Prop({ default: 'ivu-page-simple-pager' }) readonly simplePagerClasses!: string;
    @Prop({ default: 'ivu-page-next' }) readonly nextClasses!: string;

    public targetPage: number = 0;

    public prefixCls = 'ivu-page';

    public mounted() {
        this.targetPage = this.current;
    }

    public get currentPage() {
        return this.current;
    }

    /**
     * Class names for previous page button
     */
    public get prevCls() {
        return [
            this.prevClasses,
            {
                [`${this.prefixCls}-disabled`]: this.currentPage <= 1,
            },
        ];
    }

    /**
     * Class names for next page button
     */
    public get nextCls() {
        return [
            this.nextClasses,
            {
                [`${this.prefixCls}-disabled`]: this.lastPage,
            },
        ];
    }

    /**
     * Hook called when next page button is clicked
     */
    public next() {
        this.targetPage = this.currentPage + 1;
        this.$emit('targetPage', this.targetPage);
    }

    /**
     * Hook called when previous page button is clicked
     */
    public prev() {
        this.targetPage = this.currentPage - 1;
        this.$emit('targetPage', this.targetPage);
    }

    /**
     * Hook called when key is up
     * @param key event
     */
    public keyUp(e) {
        const key = e.keyCode;
        const val = parseInt(e.target.value);
        if (isNaN(val)) {
            return;
        }
        if (key === 40) {
            this.prev();
        } else if (key === 38) {
            this.next();
        } else if (key === 13) {
            this.$emit('targetPage', val);
        }
    }

    /**
     * Hook called when key is down
     * Prevents the disallowed chars to be typed in
     * @param key event
     */
    public keyDown(e) {
        const key = e.keyCode;
        const condition = (key >= 48 && key <= 57) || (key >= 96 && key <= 105) || key === 8 || key === 37 || key === 39;
        if (!condition) {
            e.preventDefault();
        }
    }
}

'''
'''--- src/components/PaidFeeDisplay/PaidFeeDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { Transaction } from 'symbol-sdk';
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
import { BlockInfoModel } from '@/core/database/entities/BlockInfoModel';
// configuration

@Component({
    components: { MosaicAmountDisplay },
})
export class PaidFeeDisplayTs extends Vue {
    @Prop() transaction: Transaction;

    public amount = 0;

    public isMaxFee = false;

    public isLoading = false;

    public async mounted() {
        this.amount = this.transaction.maxFee.compact();
        this.isMaxFee = true;
        this.isLoading = true;
        if (this.transaction.transactionInfo && this.transaction.transactionInfo.height) {
            try {
                const blockInfo: BlockInfoModel = await this.$store.dispatch('block/GET_BLOCK', this.transaction.transactionInfo.height);
                this.isLoading = false;
                this.isMaxFee = false;
                this.amount = blockInfo.feeMultiplier * this.transaction.size;
            } catch (e) {
                this.isLoading = false;
            }
        }
    }
}

'''
'''--- src/components/PeerSelector/PeerSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType, RepositoryFactory } from 'symbol-sdk';
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NodeModel } from '@/core/database/entities/NodeModel';
import { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';
import * as _ from 'lodash';
//@ts-ignore
import ModalNetworkNotMatchingProfile from '@/views/modals/ModalNetworkNotMatchingProfile/ModalNetworkNotMatchingProfile.vue';

@Component({
    components: { ModalNetworkNotMatchingProfile },
    computed: {
        ...mapGetters({
            currentPeerInfo: 'network/currentPeerInfo',
            isConnected: 'network/isConnected',
            networkType: 'network/networkType',
            repositoryFactory: 'network/repositoryFactory',
            generationHash: 'network/generationHash',
            knowNodes: 'network/knowNodes',
            networkIsNotMatchingProfile: 'network/networkIsNotMatchingProfile',
        }),
    },
})
export class PeerSelectorTs extends Vue {
    @Prop({ default: false }) isEmbedded: boolean;
    /**
     * Currently active endpoint
     * @see {Store.Network}
     * @var {Object}
     */
    public currentPeerInfo: NodeModel;
    public networkIsNotMatchingProfile: boolean;
    /**
     * Whether the connection is up
     * @see {Store.Network}
     * @var {boolean}
     */
    public isConnected: boolean;

    /**
     * Current networkType
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Current generationHash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Known peers
     * @see {Store.Network}
     * @var {string[]}
     */
    public knowNodes: NodeModel[];

    public repositoryFactory: RepositoryFactory;

    public poptipVisible: boolean = false;

    /// region computed properties getter/setter
    get peersList(): NodeModel[] {
        return _.sortBy(
            this.knowNodes,
            (a) => a.isDefault !== true,
            (a) => a.url,
        );
    }

    get networkTypeText(): string {
        if (!this.isConnected) {
            return this.$t('invalid_node').toString();
        }
        return !!this.networkType ? NetworkTypeHelper.getNetworkTypeLabel(this.networkType) : this.$t('loading').toString();
    }

    /// end-region computed properties getter/setter

    /**
     * Switch the currently active peer
     * @param peer
     */
    public switchPeer(url: string) {
        this.$store.dispatch('network/SET_CURRENT_PEER', url);
    }
    onPopTipShow() {
        this.$forceUpdate();
    }
    goSettings() {
        this.poptipVisible = false;
        this.$store.commit('profile/toggleSettings');
    }
    onCloseNetworkModal() {
        this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', false);
    }
}

'''
'''--- src/components/ProfileBalancesPanel/ProfileBalancesPanelTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address } from 'symbol-sdk';
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// child components
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// @ts-ignore
import MosaicBalanceList from '@/components/MosaicBalanceList/MosaicBalanceList.vue';
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';

@Component({
    components: {
        MosaicAmountDisplay,
        MosaicBalanceList,
        ButtonCopyToClipboard,
    },
    computed: {
        ...mapGetters({
            currentSignerAddress: 'account/currentSignerAddress',
            balanceMosaics: 'mosaic/balanceMosaics',
            isCosignatoryMode: 'account/isCosignatoryMode',
            networkCurrency: 'mosaic/networkCurrency',
        }),
    },
})
export class ProfileBalancesPanelTs extends Vue {
    /**
     * Currently active signer
     * @var {any}
     */
    public currentSignerAddress: Address;

    /**
     * Currently active account's balances
     * @var {Mosaic[]}
     */
    public balanceMosaics: MosaicModel[];

    /**
     * Whether currently active account is in cosignatory mode
     * @var {boolean}
     */
    public isCosignatoryMode: boolean;

    /**
     * Networks currency mosaic
     * @var {MosaicId}
     */
    public networkCurrency: NetworkCurrencyModel;

    public async created() {
        this.$store.dispatch('mosaic/LOAD_MOSAICS');
    }

    public get absoluteBalance() {
        const networkMosaicData = this.balanceMosaics.filter((m) => m.isCurrencyMosaic).find((i) => i);
        return (networkMosaicData && networkMosaicData.balance) || 0;
    }
}

'''
'''--- src/components/ProtectedMnemonicDisplayButton/ProtectedMnemonicDisplayButtonTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { UIHelpers } from '@/core/utils/UIHelpers';
// child components
// @ts-ignore
import ModalMnemonicDisplay from '@/views/modals/ModalMnemonicDisplay/ModalMnemonicDisplay.vue';

@Component({
    components: {
        ModalMnemonicDisplay,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
        }),
    },
})
export class ProtectedMnemonicDisplayButtonTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /**
     * UI Helpers
     * @var {UIHelpers}
     */
    public uiHelpers = UIHelpers;

    /**
     * Whether currently viewing export
     * @var {boolean}
     */
    public isViewingExportModal: boolean = false;

    /// region computed properties getter/setter
    public get hasMnemonicExportModal(): boolean {
        return this.isViewingExportModal;
    }

    public set hasMnemonicExportModal(f: boolean) {
        this.isViewingExportModal = f;
    }
    /// end-region computed properties getter/setter

    /**
     * Hook called when the account unlock modal must open
     * @return {void}
     */
    public onClickDisplay() {
        this.hasMnemonicExportModal = true;
    }
}

'''
'''--- src/components/ProtectedMnemonicQRButton/ProtectedMnemonicQRButtonTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { UIHelpers } from '@/core/utils/UIHelpers';

// child components
// @ts-ignore
import ModalMnemonicExport from '@/views/modals/ModalMnemonicExport/ModalMnemonicExport.vue';

@Component({
    components: {
        ModalMnemonicExport,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
        }),
    },
})
export class ProtectedMnemonicQRButtonTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel;

    /**
     * UI Helpers
     * @var {UIHelpers}
     */
    public uiHelpers = UIHelpers;

    /**
     * Whether currently viewing export
     * @var {boolean}
     */
    public isViewingExportModal: boolean = false;

    /// region computed properties getter/setter
    public get hasMnemonicExportModal(): boolean {
        return this.isViewingExportModal;
    }

    public set hasMnemonicExportModal(f: boolean) {
        this.isViewingExportModal = f;
    }
    /// end-region computed properties getter/setter

    /**
     * Hook called when the account unlock modal must open
     * @return {void}
     */
    public onClickDisplay() {
        this.hasMnemonicExportModal = true;
    }
}

'''
'''--- src/components/ProtectedPrivateKeyDisplay/ProtectedPrivateKeyDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import { Account } from 'symbol-sdk';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
//@ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
const defaultCount: number = 10;
const defaultTimerDuration: number = 1000;
@Component({
    components: {
        ModalFormProfileUnlock,
        ButtonCopyToClipboard,
    },
})
export class ProtectedPrivateKeyDisplayTs extends Vue {
    @Prop({
        default: null,
    })
    account: AccountModel | Account;

    /**
     * Whether account is currently being unlocked
     * @var {boolean}
     */
    public isUnlockingAccount: boolean = false;

    /**
     * Whether private key is currently displayed
     * @var {boolean}
     */
    public isDisplayingPrivateKey: boolean = false;

    /**
     * Plain private key information
     * @internal
     * @var {string}
     */
    private plainInformation: string = '';

    /**
     * seconds counter
     * @internal
     * @var {number}
     */
    public secondsCounter: number = defaultCount;

    // Timer
    public countInterval: any;
    /// region computed properties getter/setter
    public get hasPlainPrivateKey(): boolean {
        return this.isDisplayingPrivateKey;
    }

    public set hasPlainPrivateKey(f: boolean) {
        this.isDisplayingPrivateKey = f;

        if (f === true) {
            // "countdown" for hiding message
            this.onStartCounter();
        }
    }

    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }
    /// end-region computed properties getter/setter

    public reset() {
        this.hasPlainPrivateKey = false;
        this.secondsCounter = defaultCount;
        this.countInterval && clearInterval(this.countInterval);
        this.countInterval = null;
        this.plainInformation = null;
    }

    /**
     * Hook called when the seconds counter starts
     * @return {void}
     */
    public onStartCounter() {
        !this.countInterval &&
            (this.countInterval = setInterval(() => {
                this.secondsCounter--;
                if (this.secondsCounter < 0) {
                    this.reset();
                }
            }, defaultTimerDuration));
    }
    /**
     * Hook called when the account unlock modal must open
     * @return {void}
     */
    public onClickDisplay() {
        // don't prompt for password when an Account is povided as a prop
        if (this.account instanceof Account) {
            this.onAccountUnlocked(this.account);
            return;
        }

        // prompt for password when an AccountModel is provided as a prop
        this.hasAccountUnlockModal = true;
    }

    /**
     * Hook called when the account has been unlocked
     * @param {Account} account
     * @return {boolean}
     */
    public onAccountUnlocked(account: Account): boolean {
        this.hasPlainPrivateKey = true;
        this.hasAccountUnlockModal = false;
        this.plainInformation = account.privateKey;
        return true;
    }

    @Watch('account')
    onAccountChange() {
        this.reset();
    }
    public destroyed() {
        this.reset();
    }
}

'''
'''--- src/components/QRCode/ImportQRButton/ImportQRButtonTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';

import { QRCodeType } from 'symbol-qr-library';
//@ts-ignore
import ModalImportQR from '@/views/modals/ModalImportQR/ModalImportQR.vue';

@Component({
    components: { ModalImportQR },
})
export default class ImportQRButtonTs extends Vue {
    @Prop({ default: [QRCodeType.AddContact, QRCodeType.RequestTransaction] })
    readonly validQrTypes!: QRCodeType[];

    /**
     * Whether Modal is visible
     * @type boolean
     */
    private visible: boolean = false;

    public onClick() {
        this.visible = true;
    }

    public onClose() {
        this.visible = false;
    }
}

'''
'''--- src/components/QRCode/QRCodeActions/ContactQRAction/ContactQRActionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { ContactQR } from 'symbol-qr-library';
import { NetworkType } from 'symbol-sdk';
import { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';
// @ts-ignore
import TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';

@Component({
    components: { TemplateQRAction },
})
export default class ContactQRActionTs extends Vue {
    @Prop({ default: null }) readonly qrCode!: ContactQR;

    @Prop({ default: null }) readonly onSuccess: () => void;

    /**
     * Get QR Code detail items
     *
     * @returns QRCodeDetailItem[]
     */
    public get detailItems(): QRCodeDetailItem[] {
        const items: QRCodeDetailItem[] = [];
        items.push(
            new QRCodeDetailItem(
                this.$t('qrcode_detail_item_type').toString(),
                this.$t('qrcode_detail_item_type_contactqr').toString(),
                true,
            ),
        );
        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));

        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_contact_name').toString(), this.qrCode.name, true));
        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_address').toString(), this.qrCode.account.address.plain(), true));

        return items;
    }

    public onSubmit() {
        this.onSuccess();
        this.$router.push({
            name: 'dashboard.transfer',
            params: { recipientAddress: this.qrCode.account.address.plain() },
        });
    }
}

'''
'''--- src/components/QRCode/QRCodeActions/CosignatureQRAction/CosignatureQRActionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { CosignatureQR } from 'symbol-qr-library';
import { NetworkType } from 'symbol-sdk';

import { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';
// @ts-ignore
import TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// @ts-ignore
import MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';
// @ts-ignore
import TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';

@Component({
    components: { TemplateQRAction, MosaicAmountDisplay, MaxFeeSelector, TransactionDetails },
})
export default class CosignatureQRActionTs extends Vue {
    @Prop({ default: null }) readonly qrCode!: CosignatureQR;

    @Prop({ default: null }) readonly onSuccess: () => void;

    /**
     * Get QR Code detail items
     *
     * @returns QRCodeDetailItem[]
     */
    public get detailItems(): QRCodeDetailItem[] {
        const items: QRCodeDetailItem[] = [];
        items.push(
            new QRCodeDetailItem(
                this.$t('qrcode_detail_item_type').toString(),
                this.$t('qrcode_detail_item_type_cosignatureqr').toString(),
                true,
            ),
        );
        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));

        return items;
    }

    public onSubmit() {
        this.onSuccess();
        this.$router.push({
            name: 'dashboard.index',
            // @ts-ignore
            params: { transaction: this.qrCode.transaction, action: 'transaction-details' },
        });
    }
}

'''
'''--- src/components/QRCode/QRCodeActions/MnemonicQRAction/MnemonicQRActionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { MnemonicQR } from 'symbol-qr-library';
import { NetworkType } from 'symbol-sdk';
import { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';
// @ts-ignore
import TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';

@Component({
    components: { TemplateQRAction },
})
export default class MnemonicQRActionTs extends Vue {
    @Prop({ default: null }) readonly qrCode!: MnemonicQR;

    @Prop({ default: null }) readonly onSuccess: () => void;

    /**
     * Get QR Code detail items
     *
     * @returns QRCodeDetailItem[]
     */
    public get detailItems(): QRCodeDetailItem[] {
        const items: QRCodeDetailItem[] = [];
        items.push(
            new QRCodeDetailItem(
                this.$t('qrcode_detail_item_type').toString(),
                this.$t('qrcode_detail_item_type_mnemonicqr').toString(),
                true,
            ),
        );
        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));
        items.push(
            new QRCodeDetailItem(
                this.$t('qrcode_detail_item_mnemonic_passphrase').toString(),
                this.qrCode.mnemonic.plain.split(' ').splice(3).join(' ') + ' ********', // masked for security purposes
                true,
            ),
        );
        return items;
    }

    public async onSubmit() {
        this.$store.dispatch('temporary/SET_MNEMONIC', this.qrCode.mnemonic.plain);
        this.onSuccess();
    }
}

'''
'''--- src/components/QRCode/QRCodeActions/QRCodeActionsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { QRCode } from 'symbol-qr-library';

// @ts-ignore
import QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';
// @ts-ignore
import ContactQRAction from '@/components/QRCode/QRCodeActions/ContactQRAction/ContactQRAction.vue';
// @ts-ignore
import MnemonicQRAction from '@/components/QRCode/QRCodeActions/MnemonicQRAction/MnemonicQRAction.vue';
// @ts-ignore
import TransactionQRAction from '@/components/QRCode/QRCodeActions/TransactionQRAction/TransactionQRAction.vue';
// @ts-ignore
import CosignatureQRAction from '@/components/QRCode/QRCodeActions/CosignatureQRAction/CosignatureQRAction.vue';

@Component({
    components: { QRCodeDisplay, ContactQRAction, MnemonicQRAction, TransactionQRAction, CosignatureQRAction },
})
export default class QRCodeActionsTs extends Vue {
    @Prop({ default: null }) readonly qrCode: QRCode;

    @Prop({ default: true }) readonly showPreview: boolean;

    @Prop({ default: null }) readonly onSuccess: () => void;
}

'''
'''--- src/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { QRCode } from 'symbol-qr-library';
// @ts-ignore
import QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';

@Component({
    components: { QRCodeDisplay },
})
export default class TemplateQRActionTs extends Vue {
    @Prop({ default: null }) readonly qrCode!: QRCode;

    @Prop({ default: '' }) readonly actionDesc!: string;

    @Prop({ default: true }) readonly showActionButton!: boolean;

    @Prop({ default: 'continue' }) readonly actionButtonText!: string;

    @Prop({ default: [] }) readonly detailItems!: QRCodeDetailItem[];

    @Prop({ default: null }) readonly onSubmit!: () => void;
}

export class QRCodeDetailItem {
    constructor(public label: string, public value: string, public header: boolean = false) {}
}

'''
'''--- src/components/QRCode/QRCodeActions/TransactionQRAction/TransactionQRActionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { TransactionQR } from 'symbol-qr-library';
import { NetworkType, TransferTransaction, Address } from 'symbol-sdk';

import { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';
// @ts-ignore
import TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// @ts-ignore
import MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';
@Component({
    components: { TemplateQRAction, MosaicAmountDisplay, MaxFeeSelector },
})
export default class TransactionQRActionTs extends Vue {
    @Prop({ default: null }) readonly qrCode!: TransactionQR;

    @Prop({ default: null }) readonly onSuccess: () => void;

    /**
     * TransferTransaction read from QR
     */
    tran: TransferTransaction;

    /**
     * Get QR Code detail items
     *
     * @returns QRCodeDetailItem[]
     */
    public get detailItems(): QRCodeDetailItem[] {
        const items: QRCodeDetailItem[] = [];
        items.push(
            new QRCodeDetailItem(
                this.$t('qrcode_detail_item_type').toString(),
                this.$t('qrcode_detail_item_type_transactionqr').toString(),
                true,
            ),
        );
        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));
        this.tran = (this.qrCode.transaction as unknown) as TransferTransaction;
        items.push(new QRCodeDetailItem(this.$t('to').toString(), (this.tran.recipientAddress as Address).plain(), true));
        items.push(new QRCodeDetailItem(this.$t('mosaic_id').toString(), this.tran.mosaics[0].id.id.toHex(), true));
        items.push(new QRCodeDetailItem(this.$t('amount').toString(), this.tran.mosaics[0].amount.toString(), true));
        items.push(new QRCodeDetailItem(this.$t('message').toString(), this.tran.message.payload, true));
        items.push(new QRCodeDetailItem(this.$t('fee').toString(), this.tran.maxFee.toString(), true));
        return items;
    }

    public onSubmit() {
        const tran = (this.qrCode.transaction as unknown) as TransferTransaction;
        this.onSuccess();
        this.$router.push({
            name: 'dashboard.transfer',
            // @ts-ignore
            params: { transaction: tran, recipientAddress: (tran.recipientAddress as Address).plain() },
        });
    }
}

'''
'''--- src/components/QRCode/QRCodeDisplay/QRCodeDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { QRCode } from 'symbol-qr-library';
import { of, Observable } from 'rxjs';
import { PropType } from 'vue/types/options';
import { pluck, concatMap } from 'rxjs/operators';
import { UIHelpers } from '@/core/utils/UIHelpers';
// resources
// @ts-ignore
import failureIcon from '@/views/resources/img/monitor/failure.png';

@Component({
    subscriptions() {
        const qrCodeBase64$ = this.$watchAsObservable('qrCode', {
            immediate: true,
        }).pipe(
            pluck('newValue'),
            concatMap((args) => (args instanceof QRCode ? args.toBase64() : of(failureIcon))),
        );
        return { qrCodeBase64$ };
    },
})
export default class QRCodeDisplayTs extends Vue {
    @Prop({
        default: null,
        type: Object as PropType<QRCode>,
    })
    public qrCode: QRCode;

    @Prop({
        default: '',
    })
    public header: string;

    @Prop({
        default: 'symbol_wallet_qrcode.png',
    })
    public downloadName: string;

    @Prop({
        default: 'qr_code',
    })
    public alt: string;

    @Prop({
        default: false,
    })
    public showDownload: boolean;

    /**
     * base64 representation of qrcode
     * @type Obervable<string>
     */
    public qrCodeBase64$: Observable<string>;

    public copyAsText() {
        UIHelpers.copyToClipboard(this.qrCode?.toJSON());
    }
}

'''
'''--- src/components/QRCode/QRCodePassword/QRCodePasswordTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop, Watch } from 'vue-property-decorator';
import { QRCodeGenerator, QRCode, QRCodeType } from 'symbol-qr-library';
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';

@Component({
    components: { FormWrapper, FormRow, ErrorTooltip, ValidationProvider },
})
export default class QRCodePasswordTs extends Vue {
    @Prop({ default: null })
    public qrcodeJson: string;

    @Prop({ default: '' })
    public header: string;

    @Prop({ default: false })
    public showDownload: string;

    public qrCode: QRCode;

    public askForPassword: boolean = false;

    public formItems = {
        password: '',
    };

    public $refs!: {
        provider: InstanceType<typeof ValidationProvider>;
    };

    @Watch('qrcodeJson', { immediate: true })
    public proceedIfNoPasswordNeeded() {
        const jsonObject = JSON.parse(this.qrcodeJson);
        if (jsonObject && (jsonObject.type == QRCodeType.ExportAccount || jsonObject.type == QRCodeType.ExportMnemonic)) {
            this.askForPassword = true;
        } else {
            // no password needed, continue to generate qrcode
            this.generateQRCode();
        }
    }

    public generateQRCode() {
        try {
            this.qrCode = QRCodeGenerator.fromJSON(this.qrcodeJson, this.formItems.password);
            this.$emit('qrCodeGenerated', this.qrCode);
            this.askForPassword = false;
        } catch (error) {
            this.showError(error);
        }
    }

    private showError(error: string) {
        this.$refs.provider.applyResult({
            errors: [error],
            failedRules: {},
        });
    }
}

'''
'''--- src/components/QRCode/UploadQRCode/UploadQRCodeTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';
import { QrcodeCapture, QrcodeDropZone, QrcodeStream } from 'vue-qrcode-reader';
import { QRCodeType } from 'symbol-qr-library';

@Component({
    components: { QrcodeCapture, QrcodeDropZone, QrcodeStream },
})
export default class UploadQRCodeTs extends Vue {
    @Prop({ default: true })
    public uploadEnabled: boolean;

    @Prop({ default: true })
    public scanEnabled: boolean;

    @Prop({ default: true })
    readonly showExplanation: boolean;

    @Prop({ default: [QRCodeType.AddContact, QRCodeType.RequestTransaction, QRCodeType.ExportObject] })
    readonly validQrTypes!: QRCodeType[];

    @Prop({ default: 'upload_file_message' })
    readonly uploadFileMessage!: string;

    /**
     * Whether scan tab is active
     */
    scanActive: boolean = false;

    /**
     * Preview uploaded image data
     */
    image: string = null;

    /**
     * Uploaded file name
     */
    imageFileName = '';

    /**
     * QR Code type identified
     */
    qrType: number = 0;

    /**
     * Invalid qr type
     */
    invalidType: boolean = false;

    public $refs!: {
        qrcodeCapture: QrcodeCapture;
    };

    /**
     * Uploaded qr image decode hook
     *
     * @param json
     */
    public onDecode(json) {
        const jsonObj = JSON.parse(json);
        this.qrType = jsonObj.type;
        if (this.validQrTypes.includes(this.qrType)) {
            this.$emit('uploadComplete', json);
        } else {
            this.invalidType = true;
        }
    }

    /**
     * Handles Tab Click(Upload/Scan)
     * @param name of the tab clicked
     */
    public onTabClick(name) {
        this.scanActive = name === 'scan';
    }

    /**
     * Hook for handling file before upload completes
     * It intercepts the upload process and pass the file to qrcodeCapture component
     * @param file uploaded
     */
    public onBeforeUpload(file) {
        this.reset();
        const evt = {
            target: {
                files: [file],
            },
        };
        this.$refs.qrcodeCapture.onChangeInput(evt); // to pass the evt to qrcode image decoder
        this.imageFileName = file.name;
        const fileReader = new FileReader();
        fileReader.readAsDataURL(file);
        fileReader.onload = (event) => {
            // called once readAsDataURL is completed
            this.image = event.target.result as string;
        };

        return false; //return false now since we have the file passed to qrcodeCapture component
    }

    private reset() {
        this.invalidType = false;
    }
}

'''
'''--- src/components/RecipientInput/RecipientInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NetworkType } from 'symbol-sdk';

// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';

// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
        }),
    },
})
export class RecipientInputTs extends Vue {
    @Prop({
        default: null,
    })
    value: string;

    /**
     * Current network type
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    public get rawValue(): string {
        return this.value;
    }

    public set rawValue(input: string) {
        this.$emit('input', input);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/RemoveCosignatoryInput/RemoveCosignatoryInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Address, NetworkType, PublicAccount } from 'symbol-sdk';
// child components
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ButtonRemove from '@/components/ButtonRemove/ButtonRemove.vue';

@Component({
    components: {
        FormRow,
        ButtonRemove,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
        }),
    },
})
export class RemoveCosignatoryInputTs extends Vue {
    /**
     * Target account cosignatories
     * @protected
     * @type {PublicAccount[]}
     */
    @Prop({ default: [] })
    protected cosignatories: PublicAccount[];

    /**
     * Current network type
     * @private
     * @type {NetworkType}
     */
    private networkType: NetworkType;

    /**
     * Selected cosignatory public key
     * @protected
     * @type {string}
     */
    public cosignatory: string = '';

    /**
     * Handles the form submission
     * @protected
     * @return {void}
     */
    protected onRemoveCosignatory(): void {
        this.$emit('on-remove-cosignatory', this.cosignatory);
    }

    /**
     * Returns a pretty address from a public key
     * @protected
     * @param {string} publicKey
     * @returns {string}
     */
    protected getAddressFromPublicKey(publicKey: string): string {
        return Address.createFromPublicKey(publicKey, this.networkType).pretty();
    }
}

'''
'''--- src/components/RentalFees/RentalFeeTs.ts ---
import { Component, Vue, Prop } from 'vue-property-decorator';
//@ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
//@ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

//@ts-ignore
import { mapGetters } from 'vuex';
import { RentalFees } from 'symbol-sdk';
export type RentalFeesType = 'mosaic' | 'root-namespace' | 'child-namespace';
@Component({
    components: {
        MosaicAmountDisplay,
        FormRow,
    },
    computed: mapGetters({
        rentalEstimation: 'network/rentalFeeEstimation',
    }),
})
export class RentalFeeTs extends Vue {
    @Prop({ required: true }) rentalType: RentalFeesType;
    @Prop() duration: number;
    private rentalEstimation: RentalFees;
    /**
     * @description: return effectiveFee according to prop 'rentalType'
     */
    get rentalFeeAmount(): number {
        let feeAmountRaw: number = 0;
        if (this.rentalEstimation) {
            switch (this.rentalType) {
                case 'mosaic':
                    feeAmountRaw = this.rentalEstimation['effectiveMosaicRentalFee'].compact();
                    break;
                case 'root-namespace':
                    feeAmountRaw = this.rentalEstimation['effectiveRootNamespaceRentalFeePerBlock'].compact() * this.duration;
                    break;
                case 'child-namespace':
                    feeAmountRaw = this.rentalEstimation['effectiveChildNamespaceRentalFee'].compact();
                    break;
                default:
                    feeAmountRaw = 0;
            }
            return feeAmountRaw;
        }
    }
}

'''
'''--- src/components/Settings/SettingsTs.ts ---
import { Vue, Component } from 'vue-property-decorator';
// @ts-ignore
import ModalSettings from '@/views/modals/ModalSettings/ModalSettings.vue';
import { mapGetters } from 'vuex';

@Component({
    components: { ModalSettings },
    computed: {
        ...mapGetters({
            isSettingsVisible: 'profile/isSettingsVisible',
        }),
    },
})
export class SettingsTs extends Vue {
    public isSettingsVisible: boolean;
    public toggleSettings() {
        this.$store.commit('profile/toggleSettings');
    }
}

'''
'''--- src/components/SignerFilter/SignerFilterTs.ts ---
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import { Signer } from '@/store/Account';
import { mapGetters } from 'vuex';

@Component({
    computed: {
        ...mapGetters({
            currentSigner: 'account/currentSigner',
        }),
    },
})
export class SignerFilterTs extends Vue {
    @Prop({ default: [] })
    public signers: Signer[];

    /**
     * Selected signer from the store
     * @protected
     * @type {string}
     */
    public currentSigner: Signer;

    public selectedSigner: string =
        (this.currentSigner && this.currentSigner.address.plain()) || (this.signers.length && this.signers[0].address.plain()) || '';

    /**
     * onAddressChange
     */
    public onSignerChange() {
        this.$emit('signer-change', this.selectedSigner);
    }

    @Watch('currentSigner')
    onCurrentSignerChange() {
        this.selectedSigner = this.currentSigner.address.plain();
    }
}

'''
'''--- src/components/SignerSelector/SignerSelectorTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// child components
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { Signer } from '@/store/Account';

@Component({
    components: { FormRow },
})
export class SignerSelectorTs extends Vue {
    /**
     * Value set by the parent component's v-model
     * @type {string}
     */
    @Prop({
        default: '',
    })
    value: string;

    @Prop({
        default: () => [],
    })
    signers: Signer[];

    @Prop({
        default: 'sender',
    })
    label: string;

    @Prop({
        default: false,
    })
    noLabel: boolean;

    /// region computed properties getter/setter
    /**
     * Value set by the parent component
     * @type {string}
     */
    get chosenSigner(): string {
        return this.value;
    }

    /**
     * Emit value change
     */
    set chosenSigner(newValue: string) {
        this.$emit('input', newValue);
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/components/SplitButton/SplitButtonTs.ts ---
import { Vue, Component, Prop } from 'vue-property-decorator';

@Component
export default class SplitButtonTs extends Vue {
    @Prop({ default: '' }) readonly label!: string;
    @Prop({ default: 'button-style validation-button' }) readonly className!: string;
    @Prop({ default: 'validation-button' }) readonly dropdownClassName!: string;
    @Prop({ default: [] }) readonly dropdownActions!: Array<{ icon: string; label: string; action: () => void }>;
}

'''
'''--- src/components/SupplyInput/SupplyInputTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';

// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';

// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        ValidationProvider,
        ErrorTooltip,
        FormRow,
    },
})
export class SupplyInputTs extends Vue {
    /**
     * Value bound to parent v-model
     * @type {string}
     */
    @Prop({ default: '' }) value: number;

    /**
     * Form label
     * @type {string}
     */
    @Prop({ default: 'supply' }) label: string;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /// region computed properties getter/setter
    public get chosenValue(): number {
        return this.value;
    }

    public set chosenValue(amount: number) {
        this.$emit('input', amount);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/components/TableDisplay/TableDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Address, AliasAction, MosaicId, NamespaceId } from 'symbol-sdk';
// internal dependencies
import {
    AssetTableService,
    FilteringTypes,
    SortingDirections,
    TableField,
    TableFilteringOptions,
    TableSortingOptions,
} from '@/services/AssetTableService/AssetTableService';
import { MosaicTableService } from '@/services/AssetTableService/MosaicTableService';
import { NamespaceTableService } from '@/services/AssetTableService/NamespaceTableService';
// child components
// @ts-ignore
import TableRow from '@/components/TableRow/TableRow.vue';
// @ts-ignore
import ModalFormWrap from '@/views/modals/ModalFormWrap/ModalFormWrap.vue';
// @ts-ignore
import FormAliasTransaction from '@/views/forms/FormAliasTransaction/FormAliasTransaction.vue';
// @ts-ignore
import FormExtendNamespaceDurationTransaction from '@/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransaction.vue';
// @ts-ignore
import FormMosaicSupplyChangeTransaction from '@/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransaction.vue';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { Signer } from '@/store/Account';
// @ts-ignore
import SignerFilter from '@/components/SignerFilter/SignerFilter.vue';

@Component({
    components: {
        TableRow,
        ModalFormWrap,
        FormAliasTransaction,
        FormExtendNamespaceDurationTransaction,
        FormMosaicSupplyChangeTransaction,
        SignerFilter,
    },
    computed: {
        ...mapGetters({
            currentHeight: 'network/currentHeight',
            currentAccount: 'account/currentAccount',
            holdMosaics: 'mosaic/holdMosaics',
            ownedNamespaces: 'namespace/ownedNamespaces',
            networkConfiguration: 'network/networkConfiguration',
            signers: 'account/signers',
            isFetchingNamespaces: 'namespace/isFetchingNamespaces',
            isFetchingMosaics: 'mosaic/isFetchingMosaics',
        }),
    },
})
export class TableDisplayTs extends Vue {
    /**
     * Type of assets shown in the table
     * @type {string}
     */
    @Prop({
        default: 'mosaic',
    })
    assetType: string;

    /**
     * Current account owned mosaics
     * @protected
     * @type {MosaicModel[]}
     */
    private holdMosaics: MosaicModel[];

    /**
     * Current account owned namespaces
     * @protected
     * @type {NamespaceModel[]}
     */
    private ownedNamespaces: NamespaceModel[];

    private currentAccount: AccountModel;

    private currentHeight: number;

    private networkConfiguration: NetworkConfigurationModel;

    /**
     * current signers
     */
    public signers: Signer[];

    public isFetchingNamespaces: boolean;

    public isFetchingMosaics: boolean;

    /**
     * Loading state of the data to be shown in the table
     * @type {boolean}
     */
    public get isLoading() {
        return this.assetType === 'namespace' ? this.isFetchingNamespaces : this.isFetchingMosaics;
    }

    /**
     * Hook called when the signer selector has changed
     * @protected
     */
    protected onSignerSelectorChange(address: string): void {
        // clear previous account transactions
        if (address) {
            this.$store.dispatch('account/SET_CURRENT_SIGNER', { address: Address.createFromRawAddress(address) });
        }
    }

    /**
     * Current table sorting state
     * @var {TableSortingOptions}
     */
    public sortedBy: TableSortingOptions = {
        fieldName: undefined,
        direction: undefined,
    };

    /**
     * Current table filtering state
     * @var {TableFilteringOptions}
     */
    public filteredBy: TableFilteringOptions = {
        fieldName: undefined,
        filteringType: undefined,
    };

    /**
     * Pagination page size
     * @type {number}
     */
    public pageSize: number = 10;

    /**
     * Pagination page number
     * @type {number}
     */
    public currentPage: number = 1;

    public nodata = [...new Array(this.pageSize).keys()];

    protected get ownedAssetHexIds(): string[] {
        return this.assetType === 'namespace'
            ? this.ownedNamespaces.map(({ namespaceIdHex }) => namespaceIdHex)
            : this.holdMosaics
                  .filter(({ ownerRawPlain }) => ownerRawPlain === this.currentAccount.address)
                  .map(({ mosaicIdHex }) => mosaicIdHex);
    }

    /**
     * Modal forms visibility states
     * @protected
     * @type {{
     *     aliasTransaction: boolean
     *     extendNamespaceDuration: boolean
     *     mosaicSupplyChangeTransaction: boolean
     *   }}
     */
    protected modalFormsVisibility: {
        aliasTransaction: boolean;
        extendNamespaceDurationTransaction: boolean;
        mosaicSupplyChangeTransaction: boolean;
    } = {
        aliasTransaction: false,
        extendNamespaceDurationTransaction: false,
        mosaicSupplyChangeTransaction: false,
    };

    /**
     * Action forms props
     * @protected
     * @type {({
     *     namespaceId: NamespaceId
     *     aliasTarget: MosaicId | Address
     *     aliasAction: AliasAction
     *     mosaicId: MosaicId
     *   })}
     */
    protected modalFormsProps: {
        namespaceId: NamespaceId;
        aliasTarget: MosaicId | Address;
        aliasAction: AliasAction;
        mosaicId: MosaicId;
    } = {
        namespaceId: null,
        aliasTarget: null,
        aliasAction: null,
        mosaicId: null,
    };

    // Alias forms props

    /**
     * Instantiate the table service around {assetType}
     * @return {AssetTableService}
     */
    protected getService(): AssetTableService {
        if ('mosaic' === this.assetType) {
            return new MosaicTableService(this.currentHeight, this.holdMosaics, this.networkConfiguration);
        } else if ('namespace' === this.assetType) {
            return new NamespaceTableService(this.currentHeight, this.ownedNamespaces, this.networkConfiguration);
        }
        throw new Error(`Asset type '${this.assetType}' does not exist in TableDisplay.`);
    }

    /// region getters and setters
    /**
     * Non-filtered table data
     * @var {TableRowValues[]}
     */
    private get tableRows(): any[] {
        return this.getService().getTableRows();
    }

    /**
     * Values displayed in the table
     * @readonly
     * @return {TableRowValues[]}
     */
    get displayedValues(): any[] {
        return this.getService().sort(this.getService().filter(this.tableRows, this.filteredBy), this.sortedBy);
    }

    /**
     * Header fields displayed in the table
     * @readonly
     * @return {TableField[]}
     */
    get tableFields(): TableField[] {
        return this.getService().getTableFields();
    }

    /**
     * Get current page rows
     * @readonly
     * @return {TableRowValues[]}
     */
    get currentPageRows(): any[] {
        return this.displayedValues.slice((this.currentPage - 1) * this.pageSize, this.currentPage * this.pageSize);
    }

    /**
     * getter and setter for the showExpired button
     *
     */
    get showExpired(): boolean {
        return this.filteredBy.fieldName === 'expiration' && this.filteredBy.filteringType === 'show';
    }

    set showExpired(newVal: boolean) {
        this.setFilteredBy('expiration');
    }

    /**
     * Alias form modal title
     * @type {string}
     * @protected
     */
    protected get aliasModalTitle(): string {
        return this.modalFormsProps.aliasAction === AliasAction.Link ? 'modal_title_link_alias' : 'modal_title_unlink_alias';
    }

    /// end-region getters and setters

    /**
     * Hook called when the component is created
     * @return {void}
     */
    public async created(): Promise<void> {
        // refresh owned assets
        this.refresh();
        // initialize sorting and filtering
        this.setDefaultFiltering();
        // await this.refresh()
        this.setDefaultSorting();
    }

    /**
     * Refreshes the owned assets
     * @returns {void}
     */
    private async refresh(): Promise<void> {
        if ('mosaic' === this.assetType) {
            await this.$store.dispatch('mosaic/LOAD_MOSAICS');
        } else if ('namespace' === this.assetType) {
            await this.$store.dispatch('namespace/LOAD_NAMESPACES');
        }
    }

    /**
     * Sets the default filtering state
     */
    public setDefaultFiltering(): void {
        const defaultFilteringType: FilteringTypes = 'hide';
        const defaultFilteringFieldName: string = 'expiration';

        Vue.set(this, 'filteredBy', {
            fieldName: defaultFilteringFieldName,
            filteringType: defaultFilteringType,
        });
    }

    /**
     * Sets the default sorting state and trigger it
     */
    public setDefaultSorting(): void {
        const defaultSort = 'asc';
        const defaultField = 'namespace' === this.assetType ? 'name' : 'hexId';

        Vue.set(this, 'sortedBy', {
            fieldName: defaultField,
            direction: defaultSort,
        });

        this.setSortedBy(defaultField);
    }

    /**
     * Triggers table filtering by setting its filtering options
     * @param {TableFieldNames} fieldName
     */
    public setFilteredBy(fieldName: string): void {
        const filteredBy = { ...this.filteredBy };
        const filteringType: FilteringTypes = filteredBy.fieldName === fieldName && filteredBy.filteringType === 'show' ? 'hide' : 'show';

        this.filteredBy = { fieldName, filteringType };
    }

    /**
     * Sorts the table data
     * @param {TableFieldNames} fieldName
     */
    public setSortedBy(fieldName: string): void {
        const sortedBy = { ...this.sortedBy };
        const direction: SortingDirections = sortedBy.fieldName === fieldName && sortedBy.direction === 'asc' ? 'desc' : 'asc';

        Vue.set(this, 'sortedBy', { fieldName, direction });
    }

    /**
     * Handle pagination page change
     * @param {number} page
     */
    public handlePageChange(page: number): void {
        this.currentPage = page;
    }

    /**
     * Triggers the alias form modal
     * @protected
     * @param {Record<string, string>} rowValues
     * @return {void}
     */
    protected showAliasForm(rowValues: Record<string, string>): void {
        // populate asset form modal props if asset is a mosaic
        if (this.assetType === 'mosaic') {
            this.modalFormsProps.namespaceId = rowValues.name !== 'N/A' ? new NamespaceId(rowValues.name) : null;
            this.modalFormsProps.aliasTarget = new MosaicId(rowValues.hexId);
            this.modalFormsProps.aliasAction = rowValues.name !== 'N/A' ? AliasAction.Unlink : AliasAction.Link;
        }

        /**
         * Helper function to instantiate the alias target if any
         * @param {string} aliasTarget
         * @param {('address' | 'mosaic')} aliasType
         * @returns {(MosaicId | Address)}
         */
        const getInstantiatedAlias = (aliasType: string, aliasTarget: string): MosaicId | Address => {
            if (aliasType === 'mosaic') {
                return new MosaicId(aliasTarget);
            }
            return Address.createFromRawAddress(aliasTarget);
        };

        // populate asset form modal props if asset is a namespace
        if (this.assetType === 'namespace') {
            (this.modalFormsProps.namespaceId = new NamespaceId(rowValues.name)),
                (this.modalFormsProps.aliasTarget =
                    rowValues.aliasIdentifier === 'N/A'
                        ? null
                        : rowValues.aliasIdentifier
                        ? getInstantiatedAlias(rowValues.aliasType, rowValues.aliasIdentifier)
                        : null);
            this.modalFormsProps.aliasAction = rowValues.aliasIdentifier === 'N/A' ? AliasAction.Link : AliasAction.Unlink;
        }

        // show the alias form modal
        Vue.set(this.modalFormsVisibility, 'aliasTransaction', true);
    }

    /**
     * Triggers the extend namespace duration form modal
     * @protected
     * @param {Record<string, string>} rowValues
     * @return {void}
     */
    protected showExtendNamespaceDurationForm(rowValues: Record<string, string>): void {
        this.modalFormsProps.namespaceId = new NamespaceId(rowValues.name);
        Vue.set(this.modalFormsVisibility, 'extendNamespaceDurationTransaction', true);
    }

    /**
     * Triggers the modify mosaic supply form modal
     * @protected
     * @param {Record<string, string>} rowValues
     * @return {void}
     */
    protected showModifyMosaicSupplyForm(rowValues: Record<string, string>): void {
        this.modalFormsProps.mosaicId = new MosaicId(rowValues.hexId);
        Vue.set(this.modalFormsVisibility, 'mosaicSupplyChangeTransaction', true);
    }

    /**
     * Closes a modal
     * @protected
     * @param {string} modalIdentifier
     * @return {void}
     */
    protected closeModal(modalIdentifier: string): void {
        Vue.set(this.modalFormsVisibility, modalIdentifier, false);
    }

    /**
     * avoid multiple clicks
     * @protected
     * @param {string}
     * @return {void}
     */
    public isRefreshing: boolean = false;

    protected async onRefresh() {
        if (!this.isRefreshing) {
            this.isRefreshing = true;
            try {
                await this.refresh();
            } catch (e) {
                console.log('Cannot refresh', e);
            }
            this.isRefreshing = false;
        }
    }
}

'''
'''--- src/components/TableRow/TableRowTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';

// child components
// @ts-ignore
import TableRow from '@/components/TableRow/TableRow.vue';
// @ts-ignore
import AmountDisplay from '@/components/AmountDisplay/AmountDisplay.vue';

@Component({
    components: {
        TableRow,
        AmountDisplay,
    },
})
export class TableRowTs extends Vue {
    /**
     * Type of assets shown in the table
     * @type {string}
     */
    @Prop({ default: 'mosaic' }) assetType: string;

    /**
     * Type of assets shown in the table
     * @type {any}
     */
    @Prop({ default: {} }) rowValues: any;

    /**
     * Owned assets hex ids
     * @type {string[]}
     */
    @Prop({ default: [] }) ownedAssetHexIds: string[];

    /**
     * Whether the row is a namespace
     * @readonly
     * @protected
     * @type {boolean}
     */
    protected get isNamespace(): boolean {
        return Object.keys(this.rowValues).indexOf('aliasType') > -1;
    }

    /**
     * Whether the row is a root namespace
     * @readonly
     * @protected
     * @type {boolean}
     */
    protected get isRootNamespace(): boolean {
        if (!this.isNamespace) {
            return false;
        }
        return this.rowValues.name.indexOf('.') === -1;
    }

    /**
     * Whether the row is an asset that has available actions
     * @readonly
     * @protected
     * @type {boolean}
     */
    protected get hasAvailableActions(): boolean {
        if (this.rowValues.expiration === 'expired') {
            return false;
        }
        return this.ownedAssetHexIds.findIndex((hexId) => hexId === this.rowValues.hexId) > -1;
    }

    /**
     * Whether the mosaic is active and supply mutable
     * @readonly
     * @protected
     * @type {boolean}
     */
    protected get isSupplyMutableMosaic(): boolean {
        if (Object.keys(this.rowValues).indexOf('supply') === -1) {
            return false;
        }
        if (!this.rowValues.supplyMutable) {
            return false;
        }
        return this.rowValues.expiration !== 'expired';
    }

    /**
     * Whether link or unlink should be the alias form button label
     * @protected
     * @returns {string}
     */
    protected get aliasActionLabel(): string {
        if (this.isNamespace) {
            if (this.rowValues.aliasType === 'N/A') {
                return 'action_label_alias_link';
            }
            return 'action_label_alias_unlink';
        }
        if (this.rowValues.name === 'N/A') {
            return 'action_label_alias_link';
        }
        return 'action_label_alias_unlink';
    }
}

'''
'''--- src/components/TransactionDetails/TransactionDetailsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import { AggregateTransaction, Transaction } from 'symbol-sdk';

// child components
// @ts-ignore
import DetailView from './DetailView.vue';
// @ts-ignore
import TransactionDetailsHeader from '@/components/TransactionDetailsHeader/TransactionDetailsHeader.vue';
import { TransactionViewFactory } from '@/core/transactions/TransactionViewFactory';
import { TransactionView } from '@/core/transactions/TransactionView';

//@ts-ignore
@Component({
    components: { DetailView, TransactionDetailsHeader },
})
export class TransactionDetailsTs extends Vue {
    /**
     * Transaction to render
     * @type {Transaction}
     */
    @Prop({ default: null }) transaction: Transaction;

    /**
     * Set if the transaction type is aggregate
     * @var {AggregateTransaction}
     */
    aggregateTransaction: AggregateTransaction = null;

    public get views(): TransactionView<Transaction>[] {
        if (!this.transaction) {
            return [];
        }

        if (this.aggregateTransaction) {
            return [this.getView(this.aggregateTransaction), ...this.aggregateTransaction.innerTransactions.map((tx) => this.getView(tx))];
        }
        return [this.getView(this.transaction)];
    }

    @Watch('transaction', { immediate: true })
    public async refreshAggregateTransaction() {
        if (this.transaction instanceof AggregateTransaction) {
            if ((this.transaction as AggregateTransaction).innerTransactions?.length > 0) {
                this.aggregateTransaction = this.transaction as AggregateTransaction;
            } else if (!!this.transaction.transactionInfo) {
                this.aggregateTransaction = await this.$store.dispatch('transaction/LOAD_TRANSACTION_DETAILS', {
                    group: TransactionView.getTransactionStatus(this.transaction),
                    transactionHash: this.transaction.transactionInfo?.hash,
                });
            }
        }
    }

    private getView(transaction: Transaction): TransactionView<Transaction> {
        return TransactionViewFactory.getView(this.$store, transaction);
    }
}

'''
'''--- src/components/TransactionDetailsHeader/TransactionDetailsHeaderTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// @ts-ignore
import TransactionDetailRow from '@/components/TransactionDetails/TransactionDetailRow/TransactionDetailRow.vue';
import { TransactionView } from '@/core/transactions/TransactionView';
import { Transaction } from 'symbol-sdk';

@Component({
    components: {
        TransactionDetailRow,
    },
})
export class TransactionDetailsHeaderTs extends Vue {
    @Prop({
        default: null,
    })
    view: TransactionView<Transaction>;
}

'''
'''--- src/components/TransactionList/TransactionListFilters/TransactionListFiltersTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { mapGetters } from 'vuex';
import { Component, Vue } from 'vue-property-decorator';
// child components
// @ts-ignore
import SignerFilter from '@/components/SignerFilter/SignerFilter.vue';
// @ts-ignore
import TransactionStatusFilter from '@/components/TransactionList/TransactionListFilters/TransactionStatusFilter/TransactionStatusFilter.vue';
//@ts-ignore
import ButtonRefresh from '@/components/ButtonRefresh/ButtonRefresh.vue';
import { Signer } from '@/store/Account';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { TransactionGroupState } from '@/store/Transaction';
import { Address } from 'symbol-sdk';

@Component({
    components: { SignerFilter, TransactionStatusFilter, ButtonRefresh },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            signers: 'account/signers',
        }),
    },
})
export class TransactionListFiltersTs extends Vue {
    /**
     * Currently active account
     * @var {AccountModel}
     */
    protected currentAccount: AccountModel;

    /**
     * current signers
     */
    public signers: Signer[];

    /**
     * Hook called when the signer selector has changed
     * @protected
     */
    protected onSignerSelectorChange(address: string): void {
        // clear previous account transactions
        if (address) {
            this.$store.dispatch('account/SET_CURRENT_SIGNER', { address: Address.createFromRawAddress(address) });
        }
    }

    protected onStatusSelectorChange(filter: TransactionGroupState) {
        this.$store.commit('transaction/setDisplayedTransactionStatus', filter);
    }
    public refresh() {
        this.$store.dispatch('transaction/LOAD_TRANSACTIONS');
    }

    /**
     * Hook called before the component is destroyed
     */
    beforeDestroy(): void {
        // reset the selected signer if it is not the current account
        if (this.currentAccount) {
            this.onSignerSelectorChange(this.currentAccount.address);
        }
    }
}

'''
'''--- src/components/TransactionList/TransactionListFilters/TransactionStatusFilter/TransactionStatusFilterTs.ts ---
import { Component, Vue, Watch } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { TransactionGroupState } from '@/store/Transaction';
import { Signer } from '@/store/Account';

@Component({
    computed: {
        ...mapGetters({
            currentSigner: 'account/currentSigner',
            displayedTransactionStatus: 'transaction/displayedTransactionStatus',
        }),
    },
})
export class TransactionStatusFilterTs extends Vue {
    public currentSigner: Signer;
    public displayedTransactionStatus: TransactionGroupState;

    public get selectedStatus(): TransactionGroupState {
        return this.displayedTransactionStatus;
    }
    public set selectedStatus(status: TransactionGroupState) {
        this.$emit('status-change', status);
    }

    @Watch('currentSigner')
    onCurrentSignerChange() {
        this.$store.commit('transaction/setDisplayedTransactionStatus', TransactionGroupState.all);
    }
}

'''
'''--- src/components/TransactionList/TransactionListTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { mapGetters } from 'vuex';
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import { AggregateTransaction, Convert, MosaicId, Transaction } from 'symbol-sdk';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import ModalTransactionCosignature from '@/views/modals/ModalTransactionCosignature/ModalTransactionCosignature.vue';
// @ts-ignore
import ModalTransactionDetails from '@/views/modals/ModalTransactionDetails/ModalTransactionDetails.vue';
// @ts-ignore
import PageTitle from '@/components/PageTitle/PageTitle.vue';
// @ts-ignore
import TransactionListFilters from '@/components/TransactionList/TransactionListFilters/TransactionListFilters.vue';
// @ts-ignore
import TransactionTable from '@/components/TransactionList/TransactionTable/TransactionTable.vue';
// @ts-ignore
import ModalTransactionExport from '@/views/modals/ModalTransactionExport/ModalTransactionExport.vue';
import { PageInfo, TransactionGroupState } from '@/store/Transaction';
// @ts-ignore
import Pagination from '@/components/Pagination/Pagination.vue';

@Component({
    components: {
        ModalTransactionCosignature,
        ModalTransactionDetails,
        PageTitle,
        TransactionListFilters,
        TransactionTable,
        ModalTransactionExport,
        Pagination,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            networkMosaic: 'mosaic/networkMosaic',
            // use partial+unconfirmed from store because
            // of ephemeral nature (websocket only here)
            confirmedTransactions: 'transaction/confirmedTransactions',
            partialTransactions: 'transaction/partialTransactions',
            unconfirmedTransactions: 'transaction/unconfirmedTransactions',
            displayedTransactionStatus: 'transaction/displayedTransactionStatus',
            generationHash: 'network/generationHash',
            currentConfirmedPage: 'transaction/currentConfirmedPage',
        }),
    },
})
export class TransactionListTs extends Vue {
    @Prop({
        default: '',
    })
    address: string;

    /**
     * Number of txs visible in each page
     */
    @Prop({
        default: 10,
    })
    pageSize: number;

    @Prop({
        default: 'pagination',
    })
    paginationType: 'pagination' | 'scroll';

    /**
     * Number of txs to be loaded from repository in each request
     */
    @Prop({
        default: 20,
    })
    requestPageSize: number;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Network mosaic id
     * @see {Store.Mosaic}
     * @var {MosaicId}
     */
    public networkMosaic: MosaicId;

    /**
     * List of confirmed transactions (per-request)
     */
    public confirmedTransactions: Transaction[];

    /**
     * List of unconfirmed transactions (per-request)
     */
    public unconfirmedTransactions: Transaction[];

    /**
     * List of confirmed transactions (per-request)
     */
    public partialTransactions: Transaction[];

    /**
     * set the default to select all
     */
    public displayedTransactionStatus: TransactionGroupState;
    /**
     * The current page number
     * @var {number}
     */
    public currentPage: number = 1;

    /**
     * Active transaction (in-modal)
     * @var {Transaction}
     */
    public activeTransaction: Transaction = null;

    /**
     * Active bonded transaction (in-modal)
     * @var {AggregateTransaction}
     */
    public activePartialTransaction: AggregateTransaction = null;

    /**
     * Whether the detail modal box is open
     * @var {boolean}
     */
    public isDisplayingDetails: boolean = false;

    /**
     * Whether the cosignature modal box is open
     * @var {boolean}
     */
    public isAwaitingCosignature: boolean = false;

    /**
     * Current generationHash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Whether currently viewing export
     * @var {boolean}
     */
    public isViewingExportModal: boolean = false;

    /**
     * Current confirmed page info
     * @see {Transaction.PageInfo}
     * @var {PageInfo}
     */
    public currentConfirmedPage: PageInfo;

    public getEmptyMessage() {
        return this.displayedTransactionStatus === TransactionGroupState.all
            ? 'no_data_transactions'
            : `no_${this.displayedTransactionStatus}_transactions`;
    }

    /// region computed properties getter/setter
    public get countPages(): number {
        if (!this.confirmedTransactions) {
            return 0;
        }
        return Math.ceil([...this.confirmedTransactions].length / this.pageSize);
    }

    public get totalCountItems(): number {
        return this.getCurrentTabTransactions(this.displayedTransactionStatus).length;
    }

    /**
     * Returns the transactions of the current page
     * from the getter that matches the provided tab name.
     * Undefined means the list is being loaded.
     * @param {TabName} tabName
     * @returns {Transaction[]}
     */
    public getCurrentPageTransactions(): Transaction[] {
        // get current tab transactions
        const transactions = this.getCurrentTabTransactions(this.displayedTransactionStatus);
        // get pagination params
        const start = (this.currentPage - 1) * this.pageSize;
        const end = this.currentPage * this.pageSize;
        // slice and return
        return [...transactions].slice(start, end);
    }

    /**
     * Returns all the transactions,
     * from the getter that matches the provided tab name
     * @param {TabName} group
     * @returns {Transaction[]}
     */
    public getCurrentTabTransactions(group: TransactionGroupState): Transaction[] {
        if (group === TransactionGroupState.confirmed) {
            return this.confirmedTransactions;
        }
        if (group === TransactionGroupState.unconfirmed) {
            return this.unconfirmedTransactions;
        }
        if (group === TransactionGroupState.partial) {
            return this.partialTransactions;
        }
        if (group === TransactionGroupState.all) {
            return [...this.unconfirmedTransactions, ...this.partialTransactions, ...this.confirmedTransactions];
        }

        return [];
    }

    /**
     * Returns the transctions
     * If the pagination type is (infinite) scroll then returns all
     * If the pagination type is pagination(paginated) then returns the current page txs
     *
     * @return {Transaction[]}
     */
    public getTransactions(): Transaction[] {
        return this.paginationType === 'pagination'
            ? this.getCurrentPageTransactions()
            : this.getCurrentTabTransactions(this.displayedTransactionStatus);
    }

    public get hasDetailModal(): boolean {
        return this.isDisplayingDetails;
    }

    public set hasDetailModal(f: boolean) {
        this.isDisplayingDetails = f;
    }

    public get hasCosignatureModal(): boolean {
        return this.isAwaitingCosignature;
    }

    public set hasCosignatureModal(f: boolean) {
        this.isAwaitingCosignature = f;
    }

    public get aggregateTransactionHash() {
        if (!this.activePartialTransaction.transactionInfo) {
            return Transaction.createTransactionHash(
                this.activePartialTransaction.serialize(),
                Array.from(Convert.hexToUint8(this.generationHash)),
            );
        }
        return this.activePartialTransaction.transactionInfo.hash;
    }

    /// end-region computed properties getter/setter

    created() {
        if (this.$route.params.transaction) {
            // @ts-ignore
            this.activePartialTransaction = this.$route.params.transaction as AggregateTransaction;
            this.hasCosignatureModal = true;
        }
    }

    /**
     * Refresh transaction list
     * @return {void}
     */
    /* public async getTransactionListByOption(filter: TransactionGroupState) {
    this.selectedOption = filter
  } */

    /**
     * Hook called when a transaction is clicked
     * @param {Transaction} transaction
     */
    public onClickTransaction(transaction: Transaction | AggregateTransaction) {
        if (transaction.hasMissingSignatures()) {
            this.activePartialTransaction = transaction as AggregateTransaction;
            this.hasCosignatureModal = true;
        } else {
            this.activeTransaction = transaction;
            this.hasDetailModal = true;
        }
    }

    public onCloseDetailModal() {
        this.hasDetailModal = false;
        this.activeTransaction = undefined;
    }

    public onCloseCosignatureModal() {
        this.hasCosignatureModal = false;
        this.activePartialTransaction = undefined;
        this.$router.push({ name: 'dashboard.index' });
    }

    /**
     * Hook called at each page change
     */
    public onPageChange(page: number): void {
        if (page === this.countPages) {
            this.loadMore();
        } else if (page > this.countPages) {
            page = this.countPages;
        } else if (page < 1) {
            page = 1;
        }
        this.currentPage = page;
    }

    /**
     * Loads next page of transactions from repository
     */
    public loadMore() {
        if (!this.currentConfirmedPage.isLastPage) {
            this.$store.dispatch('transaction/LOAD_TRANSACTIONS', {
                pageNumber: ++this.currentConfirmedPage.pageNumber,
                pageSize: this.requestPageSize,
            });
        }
    }

    /**
     * Whether currently viewed page is the last page retrieved from repository
     */
    public get isLastPage(): boolean {
        return this.currentConfirmedPage.isLastPage && this.currentPage * this.pageSize >= this.totalCountItems;
    }

    /**
     * Watching if refreshed triggered
     * @param newVal
     */
    @Watch('currentConfirmedPage')
    public watchRefresh(newVal: PageInfo) {
        // if page refresh is triggered then reset page info
        if (newVal.pageNumber === 1) {
            this.currentPage = 1;
        }
    }

    public get hasTransactionExportModal(): boolean {
        return this.isViewingExportModal;
    }

    public set hasTransactionExportModal(f: boolean) {
        this.isViewingExportModal = f;
    }
    public downloadTransaction() {
        this.hasTransactionExportModal = true;
    }
}

'''
'''--- src/components/TransactionList/TransactionRow/TransactionRowTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { MosaicId, NamespaceId, Transaction, TransactionType, TransferTransaction } from 'symbol-sdk';
// internal dependencies
import { Formatters } from '@/core/utils/Formatters';
import { TimeHelpers } from '@/core/utils/TimeHelpers';
// child components
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
// @ts-ignore
import ActionDisplay from '@/components/ActionDisplay/ActionDisplay.vue';
// resources
import { dashboardImages, officialIcons, transactionTypeToIcon } from '@/views/resources/Images';
import { TransactionViewFactory } from '@/core/transactions/TransactionViewFactory';
import { TransactionView } from '@/core/transactions/TransactionView';
import { TransactionStatus } from '@/core/transactions/TransactionStatus';

@Component({
    components: {
        ActionDisplay,
        MosaicAmountDisplay,
    },
    computed: mapGetters({
        networkMosaic: 'mosaic/networkMosaic',
        explorerBaseUrl: 'app/explorerUrl',
    }),
})
export class TransactionRowTs extends Vue {
    @Prop({ default: [] })
    public transaction: Transaction;

    /**
     * Explorer base path
     */
    protected explorerBaseUrl: string;

    /**
     * Network mosaic id
     * @private
     */
    protected networkMosaic: MosaicId;

    /**
     * Transaction type from SDK
     */
    private transactionType = TransactionType;

    /**
     * Formatters
     */
    public formatters: Formatters = Formatters;

    /**
     * Time helpers
     */
    protected timeHelpers: TimeHelpers = TimeHelpers;

    /// region computed properties getter/setter
    public get view(): TransactionView<Transaction> {
        return TransactionViewFactory.getView(this.$store, this.transaction);
    }

    /// end-region computed properties getter/setter

    /**
     * Get icon per-transaction
     * @return an icon.
     */
    public getIcon() {
        if (this.transaction.isConfirmed()) {
            // - read per-transaction-type details@
            const view = this.view;

            // - transfers have specific incoming/outgoing icons
            if (view.transaction.type === this.transactionType.TRANSFER) {
                return view.isIncoming ? officialIcons.incoming : officialIcons.outgoing;
            }

            // - otherwise use per-type icon
            return transactionTypeToIcon[view.transaction.type];
        } else {
            return this.getTransactionStatusIcon();
        }
    }
    public getTransactionStatusIcon(): string {
        return dashboardImages.dashboardUnconfirmed;
    }
    /**
     * Returns true if \a transaction is an incoming transaction
     */
    public isIncomingTransaction(): boolean {
        return this.view.isIncoming;
    }

    /**
     * Returns the amount to be shown. The first mosaic or the paid fee.
     */
    public getAmount(): number {
        if (this.transaction.type === TransactionType.TRANSFER) {
            // We may prefer XYM over other mosaic if XYM is 2nd+
            const transferTransaction = this.transaction as TransferTransaction;
            return (transferTransaction.mosaics.length && transferTransaction.mosaics[0].amount.compact()) || 0;
        }
        return undefined;
    }

    /**
     * Returns the color of the balance
     */
    public getAmountColor(): string {
        // https://github.com/nemfoundation/nem2-desktop-account/issues/879
        if (this.transaction.type === TransactionType.TRANSFER) {
            return this.isIncomingTransaction() ? 'green' : 'red';
        }
        return undefined;
    }

    /**
     * Returns the mosaic id of the balance or undefined for the network.
     */
    public getAmountMosaicId(): MosaicId | NamespaceId | undefined {
        if (this.transaction.type === TransactionType.TRANSFER) {
            // We may prefer XYM over other mosaic if XYM is 2nd+
            const transferTransaction = this.transaction as TransferTransaction;
            return (transferTransaction.mosaics.length && transferTransaction.mosaics[0].id) || undefined;
        }
        return undefined;
    }

    /**
     * Should he ticker be shown in the amount column
     */
    public isAmountShowTicker(): boolean {
        // if (this.transaction.type === TransactionType.TRANSFER) {
        //   const transferTransaction = this.transaction as TransferTransaction
        //   return !!transferTransaction.mosaics.length
        // }
        // return true
        return false;
    }

    /**
     * Returns the transaction height or number of confirmations
     */
    public getHeight(): string {
        const transactionStatus = TransactionView.getTransactionStatus(this.transaction);
        if (transactionStatus == TransactionStatus.confirmed) {
            return this.view.info?.height.compact().toLocaleString();
        } else {
            return this.$t(`transaction_status_${transactionStatus}`).toString();
        }
    }

    /**
     * Returns the explorer url
     */
    public get explorerUrl() {
        return this.explorerBaseUrl.replace(/\/+$/, '') + '/transactions/' + this.transaction.transactionInfo.hash;
    }
}

'''
'''--- src/components/TransactionList/TransactionTable/TransactionTableTs.ts ---
// external dependenies
import { Component, Prop, Vue } from 'vue-property-decorator';
import { Transaction } from 'symbol-sdk';
import { mapGetters } from 'vuex';
// child components
// @ts-ignore
import TransactionRow from '@/components/TransactionList/TransactionRow/TransactionRow.vue';
// @ts-ignore
import TransactionListHeader from '@/components/TransactionList/TransactionListHeader/TransactionListHeader.vue';
import { PageInfo } from '@/store/Transaction';

@Component({
    components: {
        TransactionRow,
        TransactionListHeader,
    },
    computed: mapGetters({
        isFetchingTransactions: 'transaction/isFetchingTransactions',
        currentConfirmedPage: 'transaction/currentConfirmedPage',
    }),
})
export class TransactionTableTs extends Vue {
    @Prop({ default: [] })
    public transactions: Transaction[];

    @Prop({ default: 'no_data_transactions' })
    public emptyMessage: string;

    @Prop({ default: null })
    public loadMore: () => void;

    @Prop({ default: 'pagination' })
    public paginationType!: 'pagination' | 'scroll';

    public nodata = [...Array(10).keys()];

    /**
     * Whether transactios are currently being fetched
     * @protected
     * @type {boolean}
     */
    protected isFetchingTransactions: boolean;

    /**
     * Current confirmed page info
     * @see {Transaction.PageInfo}
     * @var {PageInfo}
     */
    public currentConfirmedPage: PageInfo;

    /**
     * Whether infinite scroll is currently disabled
     */
    protected get infiniteScrollDisabled() {
        return this.paginationType !== 'scroll' || this.isFetchingTransactions;
    }

    /**
     * Whether it is currently fetching more transactions from repository
     */
    protected get isFetchingMoreTransctions(): boolean {
        return this.isFetchingTransactions && this.currentConfirmedPage.pageNumber > 1;
    }
}

'''
'''--- src/components/TransactionUri/TransactionUriDisplay/TransactionUriDisplayTs.ts ---
import { Transaction } from 'symbol-sdk';
import { Vue, Component, Prop } from 'vue-property-decorator';

import { TransactionURI } from 'symbol-uri-scheme';
// @ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';

// @ts-ignore
import LongTextDisplay from '@/components/LongTextDisplay/LongTextDisplay.vue';

@Component({
    components: { ButtonCopyToClipboard, LongTextDisplay },
})
export default class TransactionUriDisplayTs extends Vue {
    @Prop({ default: null }) readonly transaction?: Transaction;

    public get transactionURI() {
        return new TransactionURI(this.transaction?.serialize()).build();
    }
}

'''
'''--- src/components/WindowControls/WindowControlsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';

// internal dependencies
import { Electron } from '@/core/utils/Electron';

@Component
export class WindowControlsTs extends Vue {
    /**
     * Electron helpers
     * @var {Electron}
     */
    public electronHelpers = Electron;
}

'''
'''--- src/config/AppConfig.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export interface LanguageConfig {
    label: string;
    value: string;
}

export interface AppConfig {
    languages: LanguageConfig[];
    articlesFeedUrl: string;
    constants: {
        EVENTS_THROTTLING_TIME: number;
        MAX_REMOTE_ACCOUNT_CHECKS: number;
        SEED_ACCOUNT_NAME_PREFIX: string;
        ANNOUNCE_TRANSACTION_TIMEOUT: number;
        MAX_LISTENER_RECONNECT_TRIES: number;
        MAX_PASSWORD_LENGTH: number;
        MAX_SEED_ACCOUNTS_NUMBER: number;
        MIN_PASSWORD_LENGTH: number;
    };
    title: string;
    marketServerUrl: string;
}

const defaultAppConfig: AppConfig = {
    title: 'Symbol Wallet',
    constants: {
        EVENTS_THROTTLING_TIME: 6000,
        MAX_LISTENER_RECONNECT_TRIES: 20,
        MAX_PASSWORD_LENGTH: 64,
        MAX_REMOTE_ACCOUNT_CHECKS: 10,
        MAX_SEED_ACCOUNTS_NUMBER: 10,
        MIN_PASSWORD_LENGTH: 8,
        SEED_ACCOUNT_NAME_PREFIX: 'SeedWallet-',
        ANNOUNCE_TRANSACTION_TIMEOUT: 120000,
    },
    languages: [
        { value: 'en-US', label: 'English' },
        { value: 'zh-CN', label: '中文' },
        { value: 'ja-JP', label: '日本語' },
    ],
    marketServerUrl: 'http://app.nemcn.io',
    articlesFeedUrl: 'http://rssmix.com/u/11801188/rss.xml',
};
const resolvedAppConfig: AppConfig = window['appConfig'] || defaultAppConfig;
console.log('appConfig resolved!', resolvedAppConfig);
export const appConfig = resolvedAppConfig;

'''
'''--- src/config/FeesConfig.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export interface FeesConfig {
    normal: number;
    fast: number;
    median: number;
    slow: number;
    highest: number;
    fastest: number;
    free: number;
    slowest: number;
}

const defaultFeesConfig: FeesConfig = {
    median: 1,
    highest: 2,
    free: 0,
    slowest: 5000,
    slow: 30000,
    normal: 50000,
    fast: 100000,
    fastest: 1000000,
};

const resolvedFeesConfig: FeesConfig = window['feesConfig'] || defaultFeesConfig;
console.log('feesConfig resolved!', resolvedFeesConfig);
export const feesConfig = resolvedFeesConfig;

'''
'''--- src/config/NetworkConfig.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export interface NodeConfig {
    roles: number;
    friendlyName: string;
    url: string;
}

export interface NetworkConfigurationDefaults {
    maxTransactionsPerAggregate: number;
    maxMosaicDuration: number;
    lockedFundsPerAggregate: string;
    maxNamespaceDuration: number;
    maxCosignatoriesPerAccount: number;
    maxMosaicAtomicUnits: number;
    blockGenerationTargetTime: number;
    currencyMosaicId: string;
    namespaceGracePeriodDuration: number;
    harvestingMosaicId: string;
    minNamespaceDuration: number;
    maxCosignedAccountsPerAccount: number;
    maxNamespaceDepth: number;
    defaultDynamicFeeMultiplier: number;
    maxMosaicDivisibility: number;
    maxMessageSize: number;
}

export interface NetworkConfig {
    defaultNodeUrl: string;
    faucetUrl: string;
    nodes: NodeConfig[];
    defaultNetworkType: number;
    explorerUrl: string;
    networkConfigurationDefaults: NetworkConfigurationDefaults;
}

const defaultNetworkConfig: NetworkConfig = {
    explorerUrl: 'http://explorer-0.10.0.x-01.symboldev.network/',
    faucetUrl: 'http://faucet-0.10.0.x-01.symboldev.network/',
    defaultNetworkType: 152,
    defaultNodeUrl: 'http://api-01.us-east-1.0.10.0.x.symboldev.network:3000',
    networkConfigurationDefaults: {
        maxMosaicDivisibility: 6,
        namespaceGracePeriodDuration: 2592000,
        lockedFundsPerAggregate: '10000000',
        maxCosignatoriesPerAccount: 25,
        blockGenerationTargetTime: 15,
        maxNamespaceDepth: 3,
        maxMosaicDuration: 21024000,
        minNamespaceDuration: 172800,
        maxNamespaceDuration: 2102400,
        maxTransactionsPerAggregate: 1000,
        maxCosignedAccountsPerAccount: 25,
        maxMessageSize: 1024,
        maxMosaicAtomicUnits: 9000000000000000,
        currencyMosaicId: '5F160D7851F3CB30',
        harvestingMosaicId: '5F160D7851F3CB30',
        defaultDynamicFeeMultiplier: 1000,
    },
    nodes: [
        { friendlyName: 'API EU Central 1', roles: 2, url: 'http://api-01.eu-central-1.0.10.0.x.symboldev.network:3000' },
        { friendlyName: 'API EU West 1', roles: 2, url: 'http://api-01.eu-west-1.0.10.0.x.symboldev.network:3000' },
        { friendlyName: 'API US East 1', roles: 2, url: 'http://api-01.us-east-1.0.10.0x.symboldev.network:3000' },
        { friendlyName: 'API US West 1', roles: 2, url: 'http://api-01.us-west-1.0.10.0.x.symboldev.network:3000' },
        { friendlyName: 'API US West 2', roles: 2, url: 'http://api-01.us-west-2.0.10.0.x.symboldev.network:3000' },
        {
            friendlyName: 'API AP South East 1',
            roles: 2,
            url: 'http://api-01.ap-southeast-1.0.10.0.x.symboldev.network:3000',
        },
        {
            friendlyName: 'API AP North East 1',
            roles: 2,
            url: 'http://api-01.ap-northeast-1.0.10.0.x.symboldev.network:3000',
        },
    ],
};

const resolvedNetworkConfig: NetworkConfig = window['networkConfig'] || defaultNetworkConfig;
console.log('networkConfig resolved!', resolvedNetworkConfig);
export const networkConfig = resolvedNetworkConfig;

'''
'''--- src/config/index.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export * from './AppConfig';
export * from './FeesConfig';
export * from './NetworkConfig';

'''
'''--- src/core/database/backends/INetworkBasedStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * Storage
 */
export interface INetworkBasedStorage<E> {
    /**
     * it gets the stored value for the specific generation hash.
     *
     * @param generationHash the generation hash
     * @return the stored value for the provided network hash or undefined
     */
    get(generationHash: string): E | undefined;

    /**
     * It gets the latest stored entry according to the timestamp.
     * @return the entry if available.
     */
    getLatest(): E | undefined;

    /**
     * Stores the value for the provided generation hash.
     *
     * @param generationHash the generation hash
     * @param value to be stored
     */
    set(generationHash: string, value: E): void;

    /**
     * Deletes the stored value for the given generation hash
     * @param generationHash the generation hash.
     */
    remove(generationHash: string): void;
}

'''
'''--- src/core/database/backends/IStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

/**
 * Generic interface for simple stored objects.
 */
export interface IStorage<E> {
    /**
     * @return the stored value or undefined
     */
    get(): E | undefined;

    /**
     * Stores the provided value.
     * @param value to be stored
     */
    set(value: E): void;

    /**
     * Deletes the stored value.
     */
    remove(): void;
}

'''
'''--- src/core/database/backends/IStorageBackend.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
export interface IStorageBackend {
    /**
     * The number of available entries
     * @var {number}
     */
    length: number;

    /**
     * Getter for value with \a key
     * @param {string} key
     * @return {string|null}
     */
    getItem(key: string): any;

    /**
     * Setter for \a key with \a value
     * @param {string} key
     * @param {any} value
     */
    setItem(key: string, value: any): void;

    /**
     * Deletes the value for the given key
     * @param {string} key
     */
    removeItem(key: string): void;
}

'''
'''--- src/core/database/backends/LocalStorageBackend.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { IStorageBackend } from './IStorageBackend';

export class LocalStorageBackend implements IStorageBackend {
    /**
     * The number of available entries
     * @var {number}
     */
    public get length(): number {
        return !!localStorage ? localStorage.length : 0;
    }

    /**
     * Returns true if localStorage backend is available
     * @return {boolean}
     */
    public isAvailable(): boolean {
        return !!localStorage;
    }

    /**
     * Getter for value with \a key
     * @param {string} key
     * @return {any}
     */
    public getItem(key: string): any {
        return localStorage.getItem(key);
    }

    /**
     * Setter for \a key with \a value
     * @param {string} key
     * @param {any} value
     */
    public setItem(key: string, value: any): void {
        localStorage.setItem(key, value);
    }

    /**
     * Deletes the value for the given key
     * @param {string} key
     */
    public removeItem(key: string): void {
        localStorage.removeItem(key);
    }
}

'''
'''--- src/core/database/backends/NetworkBasedObjectStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkBasedEntryModel, NetworkBasedModel } from '@/core/database/entities/NetworkBasedModel';
import { IStorage } from '@/core/database/backends/IStorage';

/**
 * A storage save the data per generation hash
 */
export class NetworkBasedObjectStorage<E> {
    /**
     * @param delegate the delegate that will store the data that stores the generation model.
     */
    public constructor(private readonly delegate: IStorage<NetworkBasedModel<E>>) {}

    /**
     * it gets the stored value for the specific generation hash.
     *
     * @param generationHash the generation hash
     * @return the stored value for the provided network hash or undefined
     */
    public get(generationHash: string): E | undefined {
        if (!generationHash) {
            return undefined;
        }
        const map = this.delegate.get() || {};
        return (map[generationHash] && map[generationHash].data) || undefined;
    }

    /**
     * It gets the latest stored entry according to the timestamp.
     * @return the entry if available.
     */
    public getLatest(): E | undefined {
        const map = this.delegate.get() || {};
        const latest = Object.values(map).reduce(
            (prev, current) => (prev && prev.timestamp > current.timestamp ? prev : current),
            undefined,
        );
        return (latest && latest.data) || undefined;
    }

    /**
     * Stores the value for the provided generation hash.
     *
     * @param generationHash the generation hash
     * @param value to be stored
     */
    public set(generationHash: string, value: E): void {
        if (!generationHash) {
            throw Error('Generation hash must be provided!');
        }
        const map = this.delegate.get() || {};
        map[generationHash] = new NetworkBasedEntryModel(generationHash, value);
        this.delegate.set(map);
    }

    /**
     * Deletes the stored value for the given generation hash
     * @param generationHash the generation hash.
     */
    public remove(generationHash: string): void {
        const map = this.delegate.get() || {};
        delete map[generationHash];
        this.delegate.set(map);
    }
}

'''
'''--- src/core/database/backends/ObjectStorageBackend.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { IStorageBackend } from './IStorageBackend';

export class ObjectStorageBackend implements IStorageBackend {
    /**
     * The storage backend (a simple object)
     * @var {any}
     */
    protected backend: any = {};

    /**
     * Construct an object storage backend
     * @param backend
     */
    public constructor(backend: any = {}) {
        this.backend = backend;
    }

    /**
     * The number of available entries
     * @var {number}
     */
    public get length(): number {
        return Object.keys(this.backend).length;
    }

    /**
     * Always returns true for "backend as an object"
     * @return {boolean}
     */
    public isAvailable(): boolean {
        return true;
    }

    /**
     * Getter for value with \a key
     * @param {string} key
     * @return {any}
     */
    public getItem(key: string): any {
        if (!this.backend || !this.backend[key]) {
            return null;
        }

        return this.backend[key];
    }

    /**
     * Setter for \a key with \a value
     * @param {string} key
     * @param {any} value
     */
    public setItem(key: string, value: any): void {
        this.backend[key] = value;
    }

    /**
     * Deletes the value for the given key
     * @param {string} key
     */
    public removeItem(key: string): void {
        delete this.backend[key];
    }
}

'''
'''--- src/core/database/backends/SimpleObjectStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Convert, Crypto, SHA3Hasher } from 'symbol-sdk';

// internal dependencies
import { IStorageBackend } from '@/core/database/backends/IStorageBackend';
import { LocalStorageBackend } from '@/core/database/backends/LocalStorageBackend';
import { ObjectStorageBackend } from '@/core/database/backends/ObjectStorageBackend';
import { IStorage } from '@/core/database/backends/IStorage';

/**
 * A super simple object storage that keeps one object in a local storage table.
 *
 * This object is generic, you can type it with the class of object that it's going to be stored.
 * The object could be a simple object, an array or a Map/Record with key->value.
 *
 */
export class SimpleObjectStorage<E> implements IStorage<E> {
    /**
     * The Storage backend, if localStorage is not available the storage will be in memory.
     */
    private readonly storageBackend: IStorageBackend;

    public constructor(private readonly storageKey) {
        this.storageBackend = !!localStorage ? new LocalStorageBackend() : new ObjectStorageBackend();
    }

    /**
     * @return the stored value or undefined
     */
    public get(): E | undefined {
        const item = this.storageBackend.getItem(this.storageKey);
        return item ? JSON.parse(item) : undefined;
    }

    /**
     * Stores the provided value.
     * @param value to be stored
     */
    public set(value: E): void {
        this.storageBackend.setItem(this.storageKey, JSON.stringify(value));
    }

    /**
     * Deletes the stored value.
     */
    public remove(): void {
        this.storageBackend.removeItem(this.storageKey);
    }

    /**
     * Helper that generates an identifier base on the object value
     *
     * @param object the object used feed the generator.
     */
    public static generateIdentifier(object: object | undefined = undefined): string {
        const raw = {
            ...{
                time: new Date().valueOf(),
                seed: Crypto.randomBytes(8),
            },
            ...(object || {}),
        };
        // to-json
        const json = JSON.stringify(raw);
        const hasher = SHA3Hasher.createHasher(64);
        hasher.reset();
        hasher.update(Convert.utf8ToHex(json));

        const hash = new Uint8Array(64);
        hasher.finalize(hash);
        return Convert.uint8ToHex(hash).substr(0, 16);
    }
}

'''
'''--- src/core/database/backends/VersionedNetworkBasedObjectStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { INetworkBasedStorage } from '@/core/database/backends/INetworkBasedStorage';
import { NetworkBasedObjectStorage } from '@/core/database/backends/NetworkBasedObjectStorage';
import { Migration, VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { NetworkBasedModel } from '@/core/database/entities/NetworkBasedModel';

/**
 * A storage that wraps the stored model with a {version: n, data:T} object and it handles the migration from old
 * version to new versions.
 *
 */
export class VersionedNetworkBasedObjectStorage<E> extends NetworkBasedObjectStorage<E> implements INetworkBasedStorage<E> {
    constructor(storageKey: string, migrations: Migration[] = []) {
        super(new VersionedObjectStorage<NetworkBasedModel<E>>(storageKey, migrations));
    }
}

'''
'''--- src/core/database/backends/VersionedObjectStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { IStorage } from '@/core/database/backends/IStorage';
import { VersionedModel } from '@/core/database/entities/VersionedModel';
import { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';

/**
 * The operation to migrate the data.
 */
export interface Migration {
    readonly description: string;

    migrate(from: any): any;
}

/**
 * A storage that wraps the stored model with a {version: n, data:T} object and it handles the migration from old
 * version to new versions.
 *
 */
export class VersionedObjectStorage<E> implements IStorage<E> {
    private readonly delegate: IStorage<VersionedModel<E>>;

    private readonly currentVersion: number;

    constructor(storageKey: string, migrations: Migration[] = []) {
        this.delegate = new SimpleObjectStorage<VersionedModel<E>>(storageKey);
        this.currentVersion = migrations.length + 1;
        const versioned = this.delegate.get();
        if (!versioned || versioned.version == this.currentVersion) {
            return;
        }
        if (versioned.version > this.currentVersion) {
            throw new Error(`Current data version is ${versioned.version} but higher version is ${this.currentVersion}`);
        }
        const value = migrations.slice(versioned.version - 1).reduce((toMigrateData, migration) => {
            if (toMigrateData === undefined) {
                console.log(`data to migrate is undefined, ignoring migration ${migration.description}`);
                return undefined;
            }
            console.log(`Applying migration ${migration.description}`);
            return migration.migrate(toMigrateData);
        }, versioned.data);
        if (value === undefined) {
            this.remove();
        } else {
            this.set(value);
        }
    }

    get(): E | undefined {
        const versioned = this.delegate.get();
        return (versioned && versioned.data) || undefined;
    }

    remove(): void {
        this.delegate.remove();
    }

    set(value: E): void {
        this.delegate.set(new VersionedModel<E>(this.currentVersion, value));
    }

    getVersion(): E | number {
        const versioned = this.delegate.get();
        return (versioned && versioned.version) || undefined;
    }
}

'''
'''--- src/core/database/entities/AccountModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { Address, PublicAccount } from 'symbol-sdk';

export class AccountType {
    public static readonly SEED: number = 1;
    public static readonly PRIVATE_KEY = 2;
    public static readonly KEYSTORE = 3;
    public static readonly TREZOR = 4;

    public static fromDescriptor(descriptor: string) {
        switch (descriptor) {
            default:
            case 'Ks':
                return AccountType.KEYSTORE;
            case 'Pk':
                return AccountType.PRIVATE_KEY;
            case 'Seed':
                return AccountType.SEED;
            case 'Trezor':
                return AccountType.TREZOR;
        }
    }
}

/**
 * Stored POJO that holds user provided account information.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 */
export class AccountModel {
    public readonly id: string;
    public readonly name: string;
    public readonly profileName: string;
    public readonly node: string;
    public readonly type: number;
    public readonly address: string;
    public readonly publicKey: string;
    public readonly encryptedPrivateKey: string;
    public readonly path: string;
    public readonly isMultisig: boolean;
    public readonly encRemoteAccountPrivateKey?: string;

    /**
     * Permits to return specific field's mapped object instances
     * @return any
     */
    public static getObjects(model: AccountModel): { address: Address; publicAccount: PublicAccount } {
        const address = Address.createFromRawAddress(model.address);
        const publicAccount = PublicAccount.createFromPublicKey(model.publicKey, address.networkType);
        return { address, publicAccount };
    }
}

'''
'''--- src/core/database/entities/BlockInfoModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { BlockInfo } from 'symbol-sdk';

export class BlockInfoModel {
    public readonly height: string;
    public readonly feeMultiplier: number;
    public readonly blockTransactionsHash: string;
    public readonly blockReceiptsHash: string;
    public readonly stateHash: string;
    public readonly generationHash: string;
    constructor(blockInfo: BlockInfo) {
        this.height = blockInfo.height.toString();
        this.feeMultiplier = blockInfo.feeMultiplier;
        this.blockTransactionsHash = blockInfo.blockTransactionsHash;
        this.blockReceiptsHash = blockInfo.blockReceiptsHash;
        this.stateHash = blockInfo.stateHash;
        this.generationHash = blockInfo.generationHash;
    }
}

'''
'''--- src/core/database/entities/MosaicConfigurationModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * POJO that stores user provided configuration for mosaics.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 */
export class MosaicConfigurationModel {
    constructor(public readonly hidden: boolean = false) {}
}
export type AccountMosaicConfigurationModel = Record<string, MosaicConfigurationModel>;

'''
'''--- src/core/database/entities/MosaicModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { MosaicInfo } from 'symbol-sdk';

/**
 * Stored POJO that holds mosaic information.
 *
 * The stored data is cached from rest.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 *
 */
export class MosaicModel {
    public readonly mosaicIdHex: string;
    public readonly divisibility: number;
    public readonly transferable: boolean;
    public readonly supplyMutable: boolean;
    public readonly restrictable: boolean;
    public readonly duration: number;
    public readonly height: number;
    public readonly supply: number;

    constructor(
        public readonly addressRawPlain: string,
        public readonly ownerRawPlain: string,
        public readonly name: string | undefined,
        public readonly isCurrencyMosaic: boolean,
        public readonly balance: number | undefined,
        mosaicInfo: MosaicInfo,
    ) {
        this.mosaicIdHex = mosaicInfo.id.toHex();
        this.divisibility = mosaicInfo.divisibility;
        this.transferable = mosaicInfo.isTransferable();
        this.supplyMutable = mosaicInfo.isSupplyMutable();
        this.restrictable = mosaicInfo.isRestrictable();
        this.duration = mosaicInfo.duration.compact();
        this.height = mosaicInfo.startHeight.compact();
        this.supply = mosaicInfo.supply.compact();
    }
}

'''
'''--- src/core/database/entities/NamespaceModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NamespaceInfo } from 'symbol-sdk';

/**
 * Stored POJO that holds namespace information.
 *
 * The stored data is cached from rest.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be
 * fined.
 *
 */
export class NamespaceModel {
    public readonly namespaceIdHex: string;
    public readonly name: string;
    public readonly isRoot: boolean;
    public readonly ownerAddressRawPlain: string | undefined;
    public readonly aliasType: number;
    public readonly aliasTargetAddressRawPlain: string | undefined;
    public readonly aliasTargetMosaicIdHex: string | undefined;
    public readonly parentNamespaceIdHex: string | undefined;
    public readonly startHeight: number;
    public readonly endHeight: number;
    public readonly depth: number;

    constructor(namespaceInfo: NamespaceInfo, name: string) {
        this.namespaceIdHex = namespaceInfo.id.toHex();
        this.name = name;
        this.isRoot = namespaceInfo.isRoot();
        this.aliasType = namespaceInfo.alias.type;
        this.ownerAddressRawPlain = namespaceInfo.ownerAddress.plain();
        this.aliasTargetAddressRawPlain =
            (namespaceInfo.alias && namespaceInfo.alias.address && namespaceInfo.alias.address.plain()) || undefined;
        this.aliasTargetMosaicIdHex =
            (namespaceInfo.alias && namespaceInfo.alias.mosaicId && namespaceInfo.alias.mosaicId.toHex()) || undefined;
        this.parentNamespaceIdHex = this.isRoot ? undefined : namespaceInfo.parentNamespaceId().toHex();
        this.startHeight = namespaceInfo.startHeight.compact();
        this.endHeight = namespaceInfo.endHeight.compact();
        this.depth = namespaceInfo.depth;
    }
}

'''
'''--- src/core/database/entities/NetworkBasedModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * A model that store some generic value based on the generation hash.
 */
export type NetworkBasedModel<E> = Record<string, NetworkBasedEntryModel<E>>;

export class NetworkBasedEntryModel<E> {
    public readonly timestamp = Date.now();

    constructor(public readonly generationHash: string, public readonly data: E) {}
}

'''
'''--- src/core/database/entities/NetworkConfigurationModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing software
 * distributed under the License is distributed on an AS IS BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class NetworkConfigurationModel {
    public readonly maxMosaicDivisibility: number;
    public readonly namespaceGracePeriodDuration: number;
    public readonly lockedFundsPerAggregate: string;
    public readonly maxCosignatoriesPerAccount: number;
    public readonly blockGenerationTargetTime: number;
    public readonly maxNamespaceDepth: number;
    public readonly maxMosaicDuration: number;
    public readonly minNamespaceDuration: number;
    public readonly maxNamespaceDuration: number;
    public readonly maxTransactionsPerAggregate: number;
    public readonly maxCosignedAccountsPerAccount: number;
    public readonly maxMessageSize: number;
    public readonly maxMosaicAtomicUnits: number;
    public readonly currencyMosaicId: string;
    public readonly harvestingMosaicId: string;
    public readonly defaultDynamicFeeMultiplier: number;
}

'''
'''--- src/core/database/entities/NetworkCurrenciesModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';

export class NetworkCurrenciesModel {
    constructor(public networkCurrency: NetworkCurrencyModel, public harvestCurrency: NetworkCurrencyModel) {}
}

'''
'''--- src/core/database/entities/NetworkCurrencyModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * Stored POJO that holds network currency information.
 *
 * The stored data is cached from rest.
 *
 */
export class NetworkCurrencyModel {
    constructor(
        /**
         * Mosaic id of this currency. This value is optional if the user only wants to provide the
         * mosaic id. This value will be set if it's loaded by rest.
         */
        public readonly mosaicIdHex: string | undefined,
        /**
         * The Namespace id of this currency. This value is option if the user only wants to provide the
         * namespace id. This value will be set if it's loaded by rest.
         */
        public readonly namespaceIdHex: string | undefined,
        /**
         * The Namespace id of this currency. This value is option if the user only wants to provide the
         * namespace id. This value will be set if it's loaded by rest.
         */
        public readonly namespaceIdFullname: string | undefined,
        /**
         * Divisibility of this currency, required to create Mosaic from relative amounts.
         */
        public readonly divisibility: number,
        /**
         * Is this currency transferable.
         */
        public readonly transferable: boolean,
        /**
         * Is this currency supply mutable.
         */
        public readonly supplyMutable: boolean,
        /**
         * Is this currency restrictable.
         */
        public readonly restrictable: boolean,
        /**
         * The ticket name like XYM when namespace fullname is symbol.xym
         */
        public readonly ticker: string | undefined,
    ) {}
}

'''
'''--- src/core/database/entities/NetworkModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkType, NodeInfo, TransactionFees } from 'symbol-sdk';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

/**
 * Stored POJO that holds network information.
 *
 * The stored data is cached from rest.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 *
 */
export class NetworkModel {
    constructor(
        public readonly url: string,
        public readonly networkType: NetworkType,
        public readonly generationHash: string,
        public readonly networkConfiguration: NetworkConfigurationModel,
        public readonly transactionFees: TransactionFees,
        public readonly nodeInfo: NodeInfo,
    ) {}
}

'''
'''--- src/core/database/entities/NodeModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * Stored POJO that holds node information.
 *
 * The stored data is cached from rest.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 *
 */
export class NodeModel {
    constructor(public readonly url: string, public readonly friendlyName: string, public readonly isDefault: boolean) {}
}

'''
'''--- src/core/database/entities/ProfileModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkType } from 'symbol-sdk';

/**
 * Stored POJO that holds profile information.
 *
 * The stored data is cached from rest.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 *
 */
export class ProfileModel {
    public readonly profileName: string;
    public readonly generationHash: string;
    public readonly hint: string;
    public readonly networkType: NetworkType;
    public readonly password: string;
    public readonly seed: string;
    public readonly accounts: string[];
}

'''
'''--- src/core/database/entities/SettingsModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/**
 * POJO that stores user provided general application settings.
 *
 * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.
 */
export class SettingsModel {
    constructor(
        public readonly profileName: string,
        public readonly language: string,
        public readonly defaultFee: number,
        public readonly defaultAccount: string,
        public readonly explorerUrl: string,
    ) {}
}

'''
'''--- src/core/database/entities/VersionedModel.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class VersionedModel<T> {
    constructor(public readonly version: number, public readonly data: T) {}
}

'''
'''--- src/core/database/storage/AccountModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { Address } from 'symbol-sdk';

export class AccountModelStorage extends VersionedObjectStorage<Record<string, AccountModel>> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new AccountModelStorage();

    private constructor() {
        super('accounts', [
            {
                description: 'Update accounts to hold encRemoteAccountPrivateKey',
                migrate: (from: any) => {
                    // update all accounts
                    const accounts = Object.keys(from);

                    const modified: any = from;
                    accounts.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            encRemoteAccountPrivateKey: '',
                        };
                    });

                    return modified;
                },
            },
            {
                description: 'Update accounts for 0.9.6.3 network (address changes)',
                migrate: (from: any) => {
                    // update all pre-0.9.6.x profiles
                    const profiles = Object.keys(from);

                    const modified: any = from;
                    profiles.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            // re-generating address from public key (0.9.6.x changes in addresses format)
                            address: Address.createFromPublicKey(modified[name].publicKey, modified[name].networkType).plain(),
                        };
                    });

                    return modified;
                },
            },
            {
                description: 'Reset accounts for 0.9.6.3 network (non backwards compatible)',
                migrate: () => undefined,
            },
        ]);
    }
}

'''
'''--- src/core/database/storage/BlockInfoModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedNetworkBasedObjectStorage } from '@/core/database/backends/VersionedNetworkBasedObjectStorage';
import { BlockInfoModel } from '@/core/database/entities/BlockInfoModel';

/**
 * Stored cache for the known block infos.
 */
export class BlockInfoModelStorage extends VersionedNetworkBasedObjectStorage<BlockInfoModel[]> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new BlockInfoModelStorage();

    private constructor() {
        super('blockCache');
    }
}

'''
'''--- src/core/database/storage/MosaicConfigurationModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { AccountMosaicConfigurationModel } from '@/core/database/entities/MosaicConfigurationModel';
export class MosaicConfigurationModelStorage extends VersionedObjectStorage<Record<string, AccountMosaicConfigurationModel>> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new MosaicConfigurationModelStorage();

    private constructor() {
        super('mosaicConfiguration');
    }
}

'''
'''--- src/core/database/storage/MosaicModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedNetworkBasedObjectStorage } from '@/core/database/backends/VersionedNetworkBasedObjectStorage';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

export class MosaicModelStorage extends VersionedNetworkBasedObjectStorage<MosaicModel[]> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new MosaicModelStorage();

    private constructor() {
        super('mosaicCache');
    }
}

'''
'''--- src/core/database/storage/NamespaceModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedNetworkBasedObjectStorage } from '@/core/database/backends/VersionedNetworkBasedObjectStorage';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';

export class NamespaceModelStorage extends VersionedNetworkBasedObjectStorage<NamespaceModel[]> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new NamespaceModelStorage();

    private constructor() {
        super('namespaceCache');
    }
}

'''
'''--- src/core/database/storage/NetworkCurrenciesModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkCurrenciesModel } from '@/core/database/entities/NetworkCurrenciesModel';
import { VersionedNetworkBasedObjectStorage } from '@/core/database/backends/VersionedNetworkBasedObjectStorage';
import { NetworkCurrencyModel } from '../entities/NetworkCurrencyModel';

export class NetworkCurrenciesModelStorage extends VersionedNetworkBasedObjectStorage<NetworkCurrenciesModel> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new NetworkCurrenciesModelStorage();

    private constructor() {
        super('networkCurrencyCache', [
            {
                description: 'Reset networkCurrencyCache for 0.9.6.3 network (id changes)',
                migrate: () => {
                    const xymMosaic96x = new NetworkCurrencyModel(
                        '5E62990DCAC5BE8A',
                        'E74B99BA41F4AFEE',
                        'symbol.xym',
                        6,
                        true,
                        false,
                        false,
                        'XYM',
                    );
                    // reset table for new cache
                    return new NetworkCurrenciesModel(xymMosaic96x, xymMosaic96x);
                },
            },
            {
                description: 'Reset networkCurrencyCache for 0.10.x network (id changes)',
                migrate: () => {
                    const xymMosaic96x = new NetworkCurrencyModel(
                        '5B66E76BECAD0860',
                        'E74B99BA41F4AFEE',
                        'symbol.xym',
                        6,
                        true,
                        false,
                        false,
                        'XYM',
                    );
                    // reset table for new cache
                    return new NetworkCurrenciesModel(xymMosaic96x, xymMosaic96x);
                },
            },
        ]);
    }
}

'''
'''--- src/core/database/storage/NetworkModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType, NodeInfo, TransactionFees, RoleType } from 'symbol-sdk';
import { VersionedNetworkBasedObjectStorage } from '@/core/database/backends/VersionedNetworkBasedObjectStorage';
import { NetworkModel } from '@/core/database/entities/NetworkModel';
import { networkConfig } from '@/config';

export class NetworkModelStorage extends VersionedNetworkBasedObjectStorage<NetworkModel> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new NetworkModelStorage();

    private constructor() {
        super('networkCache', [
            {
                description: 'Update networkCache to 0.9.5.1 network',
                migrate: () => undefined,
            },
            {
                description: 'Update networkCache for 0.9.6.3 network (generation hash)',
                migrate: (from: any) => {
                    const modified: any = from;

                    // add new network
                    modified['1DFB2FAA9E7F054168B0C5FCB84F4DEB62CC2B4D317D861F3168D161F54EA78B'] = new NetworkModel(
                        'http://api-01.eu-central-1.096x.symboldev.network:3000',
                        NetworkType.TEST_NET,
                        '1DFB2FAA9E7F054168B0C5FCB84F4DEB62CC2B4D317D861F3168D161F54EA78B',
                        networkConfig.networkConfigurationDefaults,
                        new TransactionFees(3, 0, 1000, 0),
                        new NodeInfo(
                            '0286F8813497D18B334E09BB48F213C90025D19D4CC7CC54ED6061F8FDA92A72',
                            '1DFB2FAA9E7F054168B0C5FCB84F4DEB62CC2B4D317D861F3168D161F54EA78B',
                            7900,
                            NetworkType.TEST_NET,
                            0,
                            [RoleType.ApiNode],
                            '',
                            'api-01-eu-central-1',
                        ),
                    );

                    return modified;
                },
            },
            {
                description: 'Update networkCache for 0.10.x network (generation hash)',
                migrate: (from: any) => {
                    const modified: any = from;

                    // add new network
                    modified['6C1B92391CCB41C96478471C2634C111D9E989DECD66130C0430B5B8D20117CD'] = new NetworkModel(
                        'http://api-01.ap-northeast-1.0.10.0.x.symboldev.network:3000/',
                        NetworkType.TEST_NET,
                        '6C1B92391CCB41C96478471C2634C111D9E989DECD66130C0430B5B8D20117CD',
                        networkConfig.networkConfigurationDefaults,
                        new TransactionFees(3, 0, 1000, 0),
                        new NodeInfo(
                            '70E06C112848A652D635755B7530D3096A978321D09B8D8DC17505CAE09565C5',
                            '6C1B92391CCB41C96478471C2634C111D9E989DECD66130C0430B5B8D20117CD',
                            7900,
                            NetworkType.TEST_NET,
                            0,
                            [RoleType.ApiNode],
                            '',
                            'api-01-ap-northeast-1',
                        ),
                    );

                    return modified;
                },
            },
        ]);
    }
}

'''
'''--- src/core/database/storage/NodeModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { NodeModel } from '@/core/database/entities/NodeModel';

export class NodeModelStorage extends VersionedObjectStorage<NodeModel[]> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new NodeModelStorage();

    private constructor() {
        super('node', [
            {
                description: 'Update node to 0.9.5.1 network',
                migrate: () => undefined,
            },
            {
                description: 'Update node for 0.9.6.3 network (known nodes)',
                migrate: () => undefined,
            },
            {
                description: 'Update node for 0.10.x network (known nodes)',
                migrate: () => undefined,
            },
        ]);
    }
}

'''
'''--- src/core/database/storage/ProfileModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { ProfileModel } from '@/core/database/entities/ProfileModel';

export class ProfileModelStorage extends VersionedObjectStorage<Record<string, ProfileModel>> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new ProfileModelStorage();

    private constructor() {
        super('profiles', [
            {
                description: 'Update profiles to 0.9.5.1 network',
                migrate: (from: any) => {
                    // update all pre-0.9.5.1 profiles
                    const profiles = Object.keys(from);

                    const modified: any = from;
                    profiles.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            generationHash: '4009619EB7A9F824C5D0EE0E164E0F99CCD7906A475D7768FD60B452204BD0A2',
                        };
                    });

                    return modified;
                },
            },
            {
                description: 'Update profiles for 0.9.6.3 network (generation hash)',
                migrate: (from: any) => {
                    // update all pre-0.9.6.x profiles
                    const profiles = Object.keys(from);

                    const modified: any = from;
                    profiles.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            generationHash: '1DFB2FAA9E7F054168B0C5FCB84F4DEB62CC2B4D317D861F3168D161F54EA78B',
                        };
                    });

                    return modified;
                },
            },
            {
                description: 'Reset profiles for 0.9.6.3 network (non backwards compatible)',
                migrate: () => undefined,
            },
            {
                description: 'Update profiles for 0.10.x network (non backwards compatible due to HD and private key profile separation)',
                migrate: () => undefined,
            },
        ]);
    }
}

'''
'''--- src/core/database/storage/SettingsModelStorage.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';
import { SettingsModel } from '@/core/database/entities/SettingsModel';
import { networkConfig } from '@/config';

export class SettingsModelStorage extends VersionedObjectStorage<Record<string, SettingsModel>> {
    /**
     * Singleton instance as we want to run the migration just once
     */
    public static INSTANCE = new SettingsModelStorage();

    private constructor() {
        super('settings', [
            {
                description: 'Update settings to 0.9.5.1 network',
                migrate: () => undefined,
            },
            {
                description: 'Update settings for 0.9.6.3 network (address changes)',
                migrate: (from: any) => {
                    // update all pre-0.9.6.x settings
                    const profiles = Object.keys(from);

                    const modified: any = from;
                    profiles.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            explorerUrl: networkConfig.explorerUrl,
                        };
                    });

                    return modified;
                },
            },
            {
                description: 'Update settings for 0.10.x network (address changes)',
                migrate: (from: any) => {
                    // update all pre-0.10.x settings
                    const settings = Object.keys(from);

                    const modified: any = from;
                    settings.map((name: string) => {
                        modified[name] = {
                            ...modified[name],
                            explorerUrl: networkConfig.explorerUrl,
                            faucetUrl: networkConfig.faucetUrl,
                        };
                    });

                    return modified;
                },
            },
        ]);
    }
}

'''
'''--- src/core/transactions/BroadcastResult.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { CosignatureSignedTransaction, SignedTransaction, Transaction } from 'symbol-sdk';

export class BroadcastResult {
    /**
     * Create a transaction broadcast result instance
     *
     * @param {SignedTransaction} transaction
     * @param {boolean} success
     * @param {string} error
     */
    constructor(
        /**
         * The transaction that was announced
         * @var {SignedTransaction}
         */
        public readonly signedTransaction: SignedTransaction | CosignatureSignedTransaction,

        /**
         * The transaction that returned.
         * @var {SignedTransaction}
         */
        public readonly transaction: Transaction | undefined,
        /**
         * Whether broadcasting was successfull
         * @var {boolean}
         **/
        public readonly success: boolean,
        /**
         * Error message (optional)
         * @var {string}
         **/
        public readonly error?: string,
    ) {}
}

'''
'''--- src/core/transactions/TransactionDetailItem.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export interface TransactionDetailItem {
    readonly key: string;
    readonly value: any;
    readonly isMosaic?: boolean;
    readonly isAddress?: boolean;
    readonly isPaidFee?: boolean;
}

'''
'''--- src/core/transactions/TransactionStatus.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export enum TransactionStatus {
    confirmed = 'confirmed',
    unconfirmed = 'unconfirmed',
    partial = 'partial',
}

'''
'''--- src/core/transactions/TransactionView.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Store } from 'vuex';
import { AggregateTransactionInfo, Transaction, TransactionInfo } from 'symbol-sdk';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import i18n from '@/language';
import { TransactionStatus } from '@/core/transactions/TransactionStatus';

export abstract class TransactionView<T extends Transaction> {
    /**
     * Vuex store instance
     * @var {Store<any>}
     */
    protected readonly $store: Store<any>;

    /**
     * The transaction header info
     * @var {TransactionInfo}
     */
    public readonly info: TransactionInfo | AggregateTransactionInfo | undefined;

    /**
     * The transaction body
     * @var {Transaction}
     */
    public readonly transaction: T;

    /**
     * The header items for the view.
     */
    public readonly headerItems: TransactionDetailItem[];

    /**
     * The the details items for the view.
     */
    public readonly detailItems: TransactionDetailItem[];

    /**
     * Construct a transaction view around \a store
     * @param {Store<any>} store
     */
    public constructor(store: Store<any>, transaction: T) {
        this.$store = store;
        this.transaction = transaction;
        this.info = transaction.transactionInfo || undefined;
        this.headerItems = this.resolveHeaderItems();
        this.detailItems = this.resolveDetailItems();
    }

    /**
     * Is the transaction incoming?
     */
    public get isIncoming(): boolean {
        return false;
    }

    /**
     * Returns the status of the transaction
     * @param transaction the transaction.
     */
    public static getTransactionStatus(transaction: Transaction): TransactionStatus {
        if (transaction.isConfirmed()) {
            return TransactionStatus.confirmed;
        } else {
            return TransactionView.isPartial(transaction) ? TransactionStatus.partial : TransactionStatus.unconfirmed;
        }
    }

    /**
     * @description: transaction.transactionInfo.merkleComponentHash==='00000...' -> status of this transaction is Partial
     * @param {Transaction}
     * @return: boolean
     */

    public static isPartial(transaction: Transaction): boolean {
        return (
            transaction.transactionInfo &&
            transaction.transactionInfo.merkleComponentHash &&
            parseInt(transaction.transactionInfo.merkleComponentHash) === 0
        );
    }
    /**
     * It returns a list that that it easy to render when displaying TransactionDetailRow components.
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        return [];
    }
    /**
     * Displayed items
     * @see {Store.Mosaic}
     * @type {({ key: string, value: string | boolean, | Mosaic }[])}
     */
    protected resolveHeaderItems(): TransactionDetailItem[] {
        return [
            {
                key: 'transaction_type',
                value: `${i18n.t(`transaction_descriptor_${this.transaction.type}`)}`,
            },
            {
                key: 'status',
                value: i18n.t(`transaction_status_${TransactionView.getTransactionStatus(this.transaction)}`),
            },
            {
                key: 'hash',
                value: (this.info && this.info.hash) || undefined,
            },
            this.getFeeDetailItem(),
            {
                key: 'block_height',
                value:
                    this.info && this.info.height && this.info.height.compact()
                        ? `${i18n.t('block')} #${this.info.height.compact()}`
                        : undefined,
            },
            {
                key: 'deadline',
                value: `${this.transaction.deadline.value.toLocalDate()} ${this.transaction.deadline.value.toLocalTime()}`,
            },
            {
                key: 'signature',
                value: this.transaction.signature,
            },
            {
                key: 'signer_public_key',
                value: (this.transaction.signer && this.transaction.signer.publicKey) || undefined,
            },
        ].filter((pair) => pair.value);
    }

    protected getFeeDetailItem(): TransactionDetailItem {
        if (this.transaction.isConfirmed()) {
            return {
                key: 'paid_fee',
                value: this.transaction,
                isPaidFee: true,
            };
        } else {
            return {
                key: 'max_fee',
                value: {
                    amount: this.transaction.maxFee.compact() || 0,
                    color: 'red',
                },
                isMosaic: true,
            };
        }
    }
}

'''
'''--- src/core/transactions/TransactionViewFactory.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    AddressAliasTransaction,
    HashLockTransaction,
    MosaicAliasTransaction,
    MosaicDefinitionTransaction,
    MosaicSupplyChangeTransaction,
    MultisigAccountModificationTransaction,
    NamespaceRegistrationTransaction,
    Transaction,
    TransactionType,
    TransferTransaction,
    AccountKeyLinkTransaction,
    VotingKeyLinkTransaction,
    VrfKeyLinkTransaction,
} from 'symbol-sdk';
import { ViewUnknownTransaction } from '@/core/transactions/ViewUnknownTransaction';
import { ViewHashLockTransaction } from '@/core/transactions/ViewHashLockTransaction';
import { ViewMultisigAccountModificationTransaction } from '@/core/transactions/ViewMultisigAccountModificationTransaction';
import { ViewMosaicDefinitionTransaction } from '@/core/transactions/ViewMosaicDefinitionTransaction';
import { ViewMosaicSupplyChangeTransaction } from '@/core/transactions/ViewMosaicSupplyChangeTransaction';
import { ViewNamespaceRegistrationTransaction } from '@/core/transactions/ViewNamespaceRegistrationTransaction';
import { ViewTransferTransaction } from '@/core/transactions/ViewTransferTransaction';
import { ViewAliasTransaction } from '@/core/transactions/ViewAliasTransaction';
import { ViewAccountKeyLinkTransaction } from '@/core/transactions/ViewAccountKeyLinkTransaction';
import { Store } from 'vuex';
import { TransactionView } from '@/core/transactions/TransactionView';
import { ViewVotingKeyLinkTransaction } from '@/core/transactions/ViewVotingKeyLinkTransaction';
import { ViewVrfKeyLinkTransaction } from '@/core/transactions/ViewVrfKeyLinkTransaction';

/**
 * Transaction view factory.
 */
export class TransactionViewFactory {
    /**
     * It creates the view for the given transaction.
     *
     * @param $store the vue store.
     * @param transaction the transaction.
     */
    public static getView($store: Store<any>, transaction: Transaction): TransactionView<Transaction> {
        switch (transaction.type) {
            /// region XXX views for transaction types not yet implemented
            case TransactionType.ACCOUNT_ADDRESS_RESTRICTION:
            case TransactionType.NODE_KEY_LINK:
            case TransactionType.ACCOUNT_METADATA:
            case TransactionType.ACCOUNT_MOSAIC_RESTRICTION:
            case TransactionType.ACCOUNT_OPERATION_RESTRICTION:
            case TransactionType.AGGREGATE_BONDED:
            case TransactionType.AGGREGATE_COMPLETE:
            case TransactionType.MOSAIC_ADDRESS_RESTRICTION:
            case TransactionType.MOSAIC_GLOBAL_RESTRICTION:
            case TransactionType.MOSAIC_METADATA:
            case TransactionType.NAMESPACE_METADATA:
            case TransactionType.SECRET_LOCK:
            case TransactionType.SECRET_PROOF:
                return new ViewUnknownTransaction($store, transaction);
            /// end-region XXX views for transaction types not yet implemented
            case TransactionType.HASH_LOCK:
                return new ViewHashLockTransaction($store, transaction as HashLockTransaction);
            case TransactionType.MULTISIG_ACCOUNT_MODIFICATION:
                return new ViewMultisigAccountModificationTransaction($store, transaction as MultisigAccountModificationTransaction);
            case TransactionType.VRF_KEY_LINK:
                return new ViewVrfKeyLinkTransaction($store, transaction as VrfKeyLinkTransaction);
            case TransactionType.VOTING_KEY_LINK:
                return new ViewVotingKeyLinkTransaction($store, transaction as VotingKeyLinkTransaction);
            case TransactionType.MOSAIC_DEFINITION:
                return new ViewMosaicDefinitionTransaction($store, transaction as MosaicDefinitionTransaction);
            case TransactionType.MOSAIC_SUPPLY_CHANGE:
                return new ViewMosaicSupplyChangeTransaction($store, transaction as MosaicSupplyChangeTransaction);
            case TransactionType.NAMESPACE_REGISTRATION:
                return new ViewNamespaceRegistrationTransaction($store, transaction as NamespaceRegistrationTransaction);
            case TransactionType.TRANSFER:
                return new ViewTransferTransaction($store, transaction as TransferTransaction);
            case TransactionType.MOSAIC_ALIAS:
                return new ViewAliasTransaction($store, transaction as MosaicAliasTransaction);
            case TransactionType.ADDRESS_ALIAS:
                return new ViewAliasTransaction($store, transaction as AddressAliasTransaction);
            case TransactionType.ACCOUNT_KEY_LINK:
                return new ViewAccountKeyLinkTransaction($store, transaction as AccountKeyLinkTransaction);
            default:
                throw new Error(`View not implemented for transaction type '${transaction.type}'`);
        }
    }
}

'''
'''--- src/core/transactions/ViewAccountKeyLinkTransaction.ts ---
/**
 *
 * Copyright 2020 Grégory Saive for NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// external dependencies
import { AccountKeyLinkTransaction } from 'symbol-sdk';

// internal dependencies
import { TransactionView } from './TransactionView';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';

// eslint-disable-next-line max-len
export class ViewAccountKeyLinkTransaction extends TransactionView<AccountKeyLinkTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        return [
            { key: 'remotePublicKey', value: this.transaction.linkedPublicKey },
            { key: 'linkAction', value: this.transaction.linkAction },
        ];
    }
}

'''
'''--- src/core/transactions/ViewAliasTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address, AddressAliasTransaction, AliasAction, MosaicAliasTransaction, MosaicId, NamespaceId } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';

/// end-region custom types

export class ViewAliasTransaction extends TransactionView<MosaicAliasTransaction | AddressAliasTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const transaction = this.transaction;
        const namespaceId: NamespaceId = transaction.namespaceId;
        let aliasTarget: Address | MosaicId;
        if (transaction instanceof AddressAliasTransaction) {
            aliasTarget = transaction.address;
        }
        if (transaction instanceof MosaicAliasTransaction) {
            aliasTarget = transaction.namespaceId;
        }
        const displayName = namespaceId.fullName ? `${namespaceId.fullName} (${namespaceId.toHex()})` : namespaceId.toHex();
        const targetKey = aliasTarget instanceof Address ? 'address' : 'mosaic';
        const targetValue = aliasTarget instanceof Address ? aliasTarget.pretty() : aliasTarget.toHex();
        const aliasAction = this.transaction.aliasAction;
        return [
            { key: 'namespace', value: displayName },
            {
                key: 'action',
                value: aliasAction === AliasAction.Link ? 'Link' : 'Unlink',
            },
            { key: targetKey, value: targetValue },
        ];
    }
}

'''
'''--- src/core/transactions/ViewHashLockTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { HashLockTransaction } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { AttachedMosaic } from '@/services/MosaicService';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';

// eslint-disable-next-line max-len
export class ViewHashLockTransaction extends TransactionView<HashLockTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const attachedMosaic: AttachedMosaic = {
            id: this.transaction.mosaic.id,
            mosaicHex: this.transaction.mosaic.id.toHex(),
            amount: this.transaction.mosaic.amount.compact(),
        };
        return [
            {
                key: `locked_mosaic`,
                value: attachedMosaic,
                isMosaic: true,
            },
            { key: 'duration', value: this.transaction.duration.compact() },
            {
                key: 'inner_transaction_hash',
                value: this.transaction.signedTransaction.hash,
            },
        ];
    }
}

'''
'''--- src/core/transactions/ViewMosaicDefinitionTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicDefinitionTransaction, MosaicFlags, MosaicId } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { TimeHelpers } from '@/core/utils/TimeHelpers';

export class ViewMosaicDefinitionTransaction extends TransactionView<MosaicDefinitionTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const mosaicId: MosaicId = this.transaction.mosaicId;
        const divisibility: number = this.transaction.divisibility;
        const mosaicFlags: MosaicFlags = this.transaction.flags;
        const duration = this.transaction.duration.toString();
        const networkConfiguration: NetworkConfigurationModel = this.$store.getters['network/networkConfiguration'];
        const blockGenerationTargetTime = networkConfiguration.blockGenerationTargetTime;
        return [
            { key: 'mosaic_id', value: mosaicId.toHex() },
            {
                key: 'table_header_divisibility',
                value: `${divisibility}`,
            },
            {
                key: 'duration',
                value: duration === '0' ? 'unlimited' : TimeHelpers.durationToRelativeTime(parseInt(duration), blockGenerationTargetTime),
            },
            {
                key: 'table_header_transferable',
                value: mosaicFlags.transferable,
            },
            {
                key: 'table_header_supply_mutable',
                value: mosaicFlags.supplyMutable,
            },
            {
                key: 'table_header_restrictable',
                value: mosaicFlags.restrictable,
            },
            {
                key: 'estimated_rental_fee',
                value: {
                    amount: this.$store.getters['network/rentalFeeEstimation'].effectiveMosaicRentalFee.compact(),
                    color: 'red',
                },
                isMosaic: true,
            },
        ];
    }
}

'''
'''--- src/core/transactions/ViewMosaicSupplyChangeTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicSupplyChangeAction, MosaicSupplyChangeTransaction } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import i18n from '@/language';

export class ViewMosaicSupplyChangeTransaction extends TransactionView<MosaicSupplyChangeTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const mosaicId = this.transaction.mosaicId;
        const action = this.transaction.action;
        const delta = this.transaction.delta;

        return [
            { key: 'mosaic_id', value: mosaicId.toHex() },
            {
                key: 'direction',
                value: `${i18n.t(action === MosaicSupplyChangeAction.Increase ? 'Increase' : 'Decrease')}`,
            },
            {
                key: 'delta',
                value: delta.compact().toLocaleString(),
            },
        ];
    }
}

'''
'''--- src/core/transactions/ViewMultisigAccountModificationTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Address, MultisigAccountModificationTransaction } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import i18n from '@/language';

// eslint-disable-next-line max-len
export class ViewMultisigAccountModificationTransaction extends TransactionView<MultisigAccountModificationTransaction> {
    protected resolveDetailItems(): TransactionDetailItem[] {
        // get data from view values
        const minApprovalDelta = this.transaction.minApprovalDelta;
        const minRemovalDelta = this.transaction.minRemovalDelta;
        const addressAdditions = this.transaction.addressAdditions;
        const addressDeletions = this.transaction.addressDeletions;

        // push approval and removal deltas to view items
        const items = [
            { key: 'minApprovalDelta', value: `${minApprovalDelta}` },
            { key: 'minRemovalDelta', value: `${minRemovalDelta}` },
        ];

        // render views for public key additions and deletions
        const additions = addressAdditions.map((address, index, self) => {
            return {
                key: `${i18n.t('public_key_addition')} (${index + 1}/${self.length})`,
                value: (address as Address).pretty(),
            };
        });

        const deletions = addressDeletions.map((address, index, self) => {
            return {
                key: `${i18n.t('public_key_deletion')} (${index + 1}/${self.length})`,
                value: (address as Address).pretty(),
            };
        });

        return [...items, ...additions, ...deletions];
    }
}

'''
'''--- src/core/transactions/ViewNamespaceRegistrationTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NamespaceRegistrationTransaction, NamespaceRegistrationType } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import { TimeHelpers } from '@/core/utils/TimeHelpers';

export class ViewNamespaceRegistrationTransaction extends TransactionView<NamespaceRegistrationTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const transaction = this.transaction;
        let rootNamespaceName: string;
        let subNamespaceName: string;
        if (NamespaceRegistrationType.RootNamespace === transaction.registrationType) {
            rootNamespaceName = transaction.namespaceName;
        } else {
            subNamespaceName = transaction.namespaceName;
            // - try to identify root namespace by id
            const parentId = transaction.parentId;
            const namespaces: NamespaceModel[] = this.$store.getters['namespace/namespaces'];
            const parent = namespaces.find((n) => n.namespaceIdHex === parentId.toHex() && n.name);
            if (parent) {
                rootNamespaceName = parent.name;
            }
        }
        const registrationType = transaction.registrationType;
        const duration = transaction.duration;
        const networkConfiguration: NetworkConfigurationModel = this.$store.getters['network/networkConfiguration'];
        const blockGenerationTargetTime = networkConfiguration.blockGenerationTargetTime;
        if (registrationType === NamespaceRegistrationType.RootNamespace) {
            return [
                { key: 'namespace_name', value: rootNamespaceName },
                {
                    key: 'duration',
                    value: TimeHelpers.durationToRelativeTime(parseInt(duration.toString()), blockGenerationTargetTime),
                },
                {
                    key: 'estimated_rental_fee',
                    value: {
                        amount:
                            this.$store.getters['network/rentalFeeEstimation'].effectiveRootNamespaceRentalFeePerBlock.compact() *
                            this.transaction['duration'].compact(),
                        color: 'red',
                    },
                    isMosaic: true,
                },
            ];
        }

        return [
            { key: 'namespace_name', value: subNamespaceName },
            {
                key: 'parent_namespace',
                value: rootNamespaceName,
            },
            {
                key: 'estimated_rental_fee',
                value: {
                    amount: this.$store.getters['network/rentalFeeEstimation'].effectiveChildNamespaceRentalFee.compact(),
                    color: 'red',
                },
                isMosaic: true,
            },
        ];
    }
}

'''
'''--- src/core/transactions/ViewTransferTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { TransferTransaction } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';
import { AttachedMosaic } from '@/services/MosaicService';
import i18n from '@/language';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';
import { MosaicService } from '@/services/MosaicService';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

export class ViewTransferTransaction extends TransactionView<TransferTransaction> {
    public get isIncoming() {
        const currentSignerAddress = this.$store.getters['account/currentSignerAddress'];
        return this.transaction.recipientAddress && currentSignerAddress && this.transaction.recipientAddress.equals(currentSignerAddress);
    }

    /**
     * Displayed sender
     * @var {string}
     */
    private get sender(): string {
        if (this.transaction.signer) {
            return this.transaction.signer.address.pretty();
        }
        const currentSignerAddress = this.$store.getters['account/currentSignerAddress'];
        return currentSignerAddress ? currentSignerAddress.pretty() : '';
    }

    /**
     * get available mosaics to check if any of them is expired
     * @var {MosaicModel[]}
     */
    private get availableMosaics(): MosaicModel[] {
        const currentHeight = this.$store.getters['network/currentHeight'];
        const networkConfiguration = this.$store.getters['network/networkConfiguration'];
        const balanceMosaics = this.$store.getters['mosaic/balanceMosaics'];
        return balanceMosaics.filter((entry) => {
            const expiration = MosaicService.getExpiration(entry, currentHeight, networkConfiguration.blockGenerationTargetTime);
            return expiration !== 'expired';
        });
    }

    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        const transaction = this.transaction;
        const attachedMosaics = transaction.mosaics.map((transactionMosaic) => {
            return {
                id: transactionMosaic.id,
                mosaicHex: transactionMosaic.id.toHex(),
                amount: transactionMosaic.amount.compact(),
            } as AttachedMosaic;
        });
        const message = this.transaction.message;
        const incoming = this.isIncoming;
        const mosaicItems = attachedMosaics.map((mosaic, index, self) => {
            const color = incoming ? 'green' : 'red';
            const mosaicLabel = i18n.t('mosaic');
            // check if mosaic not expired yet
            return this.availableMosaics.some((entry) => entry.mosaicIdHex == mosaic.mosaicHex)
                ? {
                      key: `${mosaicLabel} (${index + 1}/${self.length})`,
                      value: { ...mosaic, color },
                      isMosaic: true,
                  }
                : {
                      key: `${mosaicLabel} (${index + 1}/${self.length}) ${i18n.t('mosaic_expired')}`,
                      value: { ...mosaic, color },
                      isMosaic: true,
                  };
        });

        return [
            { key: 'sender', value: this.sender },
            { key: 'transfer_target', value: this.transaction.recipientAddress, isAddress: true },
            ...mosaicItems,
            { key: 'message', value: message.payload || '-' },
        ];
    }
}

'''
'''--- src/core/transactions/ViewUnknownTransaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Transaction } from 'symbol-sdk';
// internal dependencies
import { TransactionView } from './TransactionView';

export class ViewUnknownTransaction extends TransactionView<Transaction> {}

'''
'''--- src/core/transactions/ViewVotingKeyLinkTransaction.ts ---
/*
 * Copyright 2020-present NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { VotingKeyLinkTransaction, Address, LinkAction } from 'symbol-sdk';
import { TransactionView } from './TransactionView';
import i18n from '@/language';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';

export class ViewVotingKeyLinkTransaction extends TransactionView<VotingKeyLinkTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        return [
            {
                key: 'linked_account_address',
                value: Address.createFromPublicKey(this.transaction.linkedPublicKey, this.transaction.networkType).plain(),
            },
            { key: 'link_action', value: this.transaction.linkAction == LinkAction.Link ? i18n.t('link') : i18n.t('unlink') },
            { key: 'linked_public_key', value: this.transaction.linkedPublicKey },
            { key: 'start_finalization_epoch', value: this.transaction.startEpoch },
            { key: 'end_finalization_epoch', value: this.transaction.endEpoch },
        ];
    }
}

'''
'''--- src/core/transactions/ViewVrfKeyLinkTransaction.ts ---
/*
 * Copyright 2020-present NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { VrfKeyLinkTransaction, Address, LinkAction } from 'symbol-sdk';
import { TransactionView } from './TransactionView';
import i18n from '@/language';
import { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';

export class ViewVrfKeyLinkTransaction extends TransactionView<VrfKeyLinkTransaction> {
    /**
     * Displayed items
     */
    protected resolveDetailItems(): TransactionDetailItem[] {
        return [
            {
                key: 'linked_account_address',
                value: Address.createFromPublicKey(this.transaction.linkedPublicKey, this.transaction.networkType).plain(),
            },
            { key: 'link_action', value: this.transaction.linkAction == LinkAction.Link ? i18n.t('link') : i18n.t('unlink') },
            { key: 'linked_public_key', value: this.transaction.linkedPublicKey },
        ];
    }
}

'''
'''--- src/core/utils/CSVHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Parser } from 'json2csv';
import FileSaver from 'file-saver';
import store from '@/store/index.ts';
import { TransactionViewFactory } from '@/core/transactions/TransactionViewFactory';
import { TransactionView } from '@/core/transactions/TransactionView';
import { AggregateTransaction, Transaction, TransactionType } from 'symbol-sdk';
import * as _ from 'lodash';

export class CSVHelpers {
    protected static views: TransactionView<Transaction>[] = [];
    private static transactionsArray = [];

    /**
     * returns object of a parsed aggregate transaction
     * @param transaction aggregate transaction
     * returns new array with parsed aggregate transaction objects
     */
    private static constructAggregateTransactionsObject(transaction: AggregateTransaction) {
        let merged = {};
        const result = {};
        this.views = [
            TransactionViewFactory.getView(store, transaction),
            ...transaction.innerTransactions.map((tx) => TransactionViewFactory.getView(store, tx)),
        ];
        this.views.forEach((value) => {
            let mergedRow = {};
            mergedRow = value.headerItems.concat(value.detailItems);
            merged = _.defaults(merged, mergedRow);
        });

        const mergedArray = Object.entries(merged);
        for (let i = 0; i < mergedArray.length; i++) {
            if (mergedArray[i][1]['key'] == 'paid_fee') {
                result[mergedArray[i][1]['key']] = mergedArray[i][1]['value'].maxFee.compact().toString();
            } else if (mergedArray[i][1]['key'] == 'transfer_target') {
                result[mergedArray[i]['key']] = mergedArray[i][1]['value'].address;
            } else {
                result[mergedArray[i][1]['key']] = mergedArray[i][1]['value'];
            }
        }
        return result;
    }

    /**
     * Constructs transaction object
     * @param transaction a transaction
     * returns object of a parsed transaction
     */
    private static constructTransactionsObject(transaction: Transaction) {
        this.views = [TransactionViewFactory.getView(store, transaction)];
        const result = {};
        const value = this.views[0].headerItems.concat(this.views[0].detailItems);
        for (let i = 0; i < value.length; i++) {
            if (value[i].key == 'paid_fee') {
                result[value[i].key] = value[i].value.maxFee.compact().toString();
            } else if (value[i].key == 'transfer_target') {
                result[value[i].key] = value[i].value.address;
            } else if (value[i].key.startsWith('Mosaic')) {
                result[value[i].key] = value[i].value.amount + ' (' + value[i].value.mosaicHex + ')';
            } else {
                result[value[i].key] = value[i].value;
            }
        }
        return result;
    }

    /**
     * Export to csv file
     * @param data array of parssed transactions
     * returns new array with parsed transaction objects
     */

    private static prepareTransactions(data: []): any[] {
        this.transactionsArray = [];
        data.forEach((transaction) => {
            let result = {};
            if (transaction['type'] == TransactionType.AGGREGATE_BONDED || transaction['type'] == TransactionType.AGGREGATE_COMPLETE) {
                console.log(transaction);
                result = this.constructAggregateTransactionsObject(transaction);
            } else {
                result = this.constructTransactionsObject(transaction);
            }
            this.transactionsArray.push(result);
        });
        return this.transactionsArray;
    }

    /**
     * Export to csv file
     * @param data The json data
     * @param filename Prefix the name of the CSV file
     */
    public static exportCSV(data: any, filename: string) {
        const json2csvParser = new Parser();
        const parsedTransactions = this.prepareTransactions(data);
        const csvData = json2csvParser.parse(parsedTransactions);
        const blob = new Blob(['\uFEFF' + csvData], { type: 'text/plain;charset=utf-8;' });
        const exportFilename = `${filename}-${Date.now()}.csv`;
        return FileSaver.saveAs(blob, exportFilename);
    }
}

'''
'''--- src/core/utils/Electron.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { StorageHelpers } from './StorageHelpers';

export class Electron {
    /**
     * Holds whether the app is maximized
     * @var {boolean}
     */
    public static isMaximized: boolean = false;

    public static openFile = (fn) => {
        const electron = window['electron'];
        electron['dialog'].showOpenDialog(
            {
                properties: ['openFile', 'openDirectory'],
            },
            (files) => {
                if (files) {
                    fn(files);
                }
            },
        );
    };

    public static saveFile = (name, extensions, fn) => {
        const electron = window['electron'];
        const options = {
            title: 'Save File',
            filters: [{ name: name, extensions: [extensions] }],
        };
        electron['dialog'].showSaveDialog(options, (filename) => {
            fn(filename);
        });
    };

    public static checkInstall = () => {
        const fs = window['node_fs'];
        if (fs) {
            const root = fs.readdirSync('./');
            const isInstall = root.every((fileName) => {
                return fileName !== 'installed.config';
            });
            if (isInstall) {
                window.localStorage.clear();
                fs.writeFileSync('./installed.config', 'installed');
            }
        }
    };

    public static resetFontSize = () => {
        if (window['electron']) {
            const localZoom = StorageHelpers.sessionRead('zoomFactor') || 1;
            const devInnerWidth = 1689;
            const winWidth = window.innerWidth * Number(localZoom);
            let zoomFactor = winWidth / devInnerWidth;
            if (winWidth > devInnerWidth && winWidth < 1920) {
                zoomFactor = 1;
            } else if (winWidth >= 1920) {
                zoomFactor = winWidth / 1920;
            }
            StorageHelpers.sessionSave('zoomFactor', zoomFactor);
            window['electron'].webFrame.setZoomFactor(zoomFactor);
        }
    };

    public static windowSizeChange = () => {
        if (window['electron']) {
            const electron = window['electron'];
            const mainWindow = electron.remote.getCurrentWindow();
            mainWindow.on('resize', () => {
                Electron.resetFontSize();
            });
        }
    };

    public static minWindow = () => {
        if (window['electron']) {
            Electron.isMaximized = false;
            const ipcRenderer = window['electron']['ipcRenderer'];
            ipcRenderer.send('app', 'min');
        }
    };

    public static maxWindow = () => {
        if (window['electron']) {
            Electron.isMaximized = true;
            const ipcRenderer = window['electron']['ipcRenderer'];
            ipcRenderer.send('app', 'max');
        }
    };

    public static closeWindow = () => {
        if (window['electron']) {
            const ipcRenderer = window['electron']['ipcRenderer'];
            ipcRenderer.send('app', 'quit');
        }
    };

    public static unMaximize = () => {
        if (window['electron']) {
            Electron.isMaximized = false;
            const ipcRenderer = window['electron']['ipcRenderer'];
            ipcRenderer.send('app', 'unMaximize');
        }
    };

    public static htmlRem = () => {
        const docEl = document.documentElement,
            resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',
            recalc = function () {
                const clientWidth = docEl.clientWidth;
                if (!clientWidth) {
                    return;
                }
                docEl.style.fontSize = `${10 * (clientWidth / 192)}px`;
            };
        if (!document.addEventListener) {
            return;
        }
        window.addEventListener(resizeEvt, recalc, false);
        document.addEventListener('DOMContentLoaded', recalc, false);
    };
}

'''
'''--- src/core/utils/FilterHelpers.ts ---
/**
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export class FilterHelpers {
    /**
     * replace all tags
     * @param inputStr
     */
    public static stripFilter(inputStr: string, allowed: string = '') {
        // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
        allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

        const tags = /<\/?([a-z0-9]*)\b[^>]*>?/gi;
        const commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

        // removes tha '<' char at the end of the string to replicate PHP's behaviour
        let after = inputStr;
        after = after.substring(after.length - 1) === '<' ? after.substring(0, after.length - 1) : after;

        // recursively remove tags to ensure that the returned string doesn't contain
        // forbidden tags after previous passes (e.g. '<<bait/>switch/>')
        let before;
        do {
            before = after;
            after = before.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });

            // return once no more tags are removed
            if (before === after) {
                return after;
            }
        } while (before !== after);
    }
}

'''
'''--- src/core/utils/Formatters.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address } from 'symbol-sdk';
import { decode } from 'utf8';
// configuration
import { networkConfig } from '@/config';

export class Formatters {
    public static formatNumber = (number: number): string => {
        if (number <= 1) {
            return `${number}`;
        }
        if (number === Number(number.toFixed(0))) {
            return number.toLocaleString('en-US', { minimumFractionDigits: 0 });
        }

        const stringOfNumber = `${number}`;
        const minimumFractionDigits = stringOfNumber.length - stringOfNumber.indexOf('.') - 1;
        return number.toLocaleString('en-US', { minimumFractionDigits });
    };

    public static formatAddress = function (address: string): string {
        if (!address) {
            return;
        }
        return Address.createFromRawAddress(address).pretty();
    };
    public static formatExplorerUrl = (transactionHash) => {
        return networkConfig.explorerUrl + transactionHash;
    };

    public static miniAddress = (address: Address): string => {
        const string = address.pretty();
        return `${string.substring(0, 13).toUpperCase()}***${string.substring(28).toUpperCase()}`;
    };

    public static miniHash = (hash: string): string => {
        return `${hash.substring(0, 18).toLowerCase()}***${hash.substring(42).toLowerCase()}`;
    };

    public static tinyHash = (hash: string): string => {
        return `${hash.substring(0, 6).toLowerCase()}***${hash.substring(58).toLowerCase()}`;
    };

    public static formatDate = (timestamp) => {
        const now = new Date(Number(timestamp));
        const year = now.getFullYear();
        let month = `${now.getMonth() + 1}`;
        month = Number(month) < 10 ? `0${month}` : month;
        let date = `${now.getDate()}`;
        date = Number(date) < 10 ? `0${date}` : date;
        let hour = `${now.getHours()}`;
        hour = Number(hour) < 10 ? `0${hour}` : hour;
        let minute = `${now.getMinutes()}`;
        minute = Number(minute) < 10 ? `0${minute}` : minute;
        let second = `${now.getSeconds()}`;
        second = Number(second) < 10 ? `0${second}` : second;
        return `${year}-${month}-${date} ${hour}:${minute}:${second}`;
    };

    public static hexToUtf8(hex: string): string {
        let str = '';
        for (let i = 0; i < hex.length; i += 2) {
            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
        }
        try {
            return decode(str);
        } catch (e) {
            return str;
        }
    }

    public static configurationNumberAsString(value: string | undefined): string {
        return value ? value.replace(/'/g, '') : '0';
    }

    public static configurationStringAsString(value: string | undefined): string {
        return value ? value.replace(/'/g, '').substring(2) : '';
    }

    public static configurationNumberAsNumber(value: string | undefined): number {
        return parseInt(this.configurationNumberAsString(value));
    }
    public static splitArrayByDelimiter(arr: Array<string>, delimiter?: string) {
        delimiter = delimiter ? delimiter : ' ';
        if (!Array.isArray(arr)) {
            throw Error(`${arr} is not an Array`);
        }
        if (arr.some((e) => typeof e !== 'string')) {
            throw Error(`Type of the element in ${arr} should be string`);
        }
        return arr.join(delimiter);
    }
}

'''
'''--- src/core/utils/LogLevels.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
export enum LogLevels {
    INFO = 1,
    DEBUG = 2,
    WARNING = 3,
    ERROR = 4,
}

'''
'''--- src/core/utils/NetworkConfigurationHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkConfiguration } from 'symbol-sdk';
import { Formatters } from '@/core/utils/Formatters';
import { TimeHelpers } from '@/core/utils/TimeHelpers';

import { networkConfig } from '@/config';

/**
 * Helper class that retrieves properties from the SDK's NetworkConfiguration object when
 * available.
 *
 * This helper:
 * - It enumerates the network configuration properties the wallet uses
 * - It handles possible problems when the network configuration coming from the server is
 * incomplete.
 * - It defines common defaults when properties from unknown
 * - It parses configuration values to a format the wallet understands
 */
export class NetworkConfigurationHelpers {
    /**
     * This are the absolute defaults if the network is down and the configuration hasn't been cached
     * in the local storage.
     */
    private static defaults = networkConfig.networkConfigurationDefaults;

    public static maxMosaicDivisibility(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.mosaic &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.mosaic.maxMosaicDivisibility)) ||
            defaultValue ||
            this.defaults.maxMosaicDivisibility
        );
    }

    public static maxNamespaceDepth(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.namespace &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.namespace.maxNamespaceDepth)) ||
            defaultValue ||
            this.defaults.maxNamespaceDepth
        );
    }

    public static namespaceGracePeriodDuration(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.namespace &&
                TimeHelpers.durationStringToSeconds(networkConfiguration.plugins.namespace.namespaceGracePeriodDuration)) ||
            defaultValue ||
            this.defaults.namespaceGracePeriodDuration
        );
    }

    public static maxCosignatoriesPerAccount(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.multisig &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.multisig.maxCosignatoriesPerAccount)) ||
            defaultValue ||
            this.defaults.maxCosignatoriesPerAccount
        );
    }

    public static blockGenerationTargetTime(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.chain &&
                TimeHelpers.durationStringToSeconds(networkConfiguration.chain.blockGenerationTargetTime)) ||
            defaultValue ||
            this.defaults.blockGenerationTargetTime
        );
    }

    public static lockedFundsPerAggregate(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: string | undefined = undefined,
    ): string {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.lockhash &&
                Formatters.configurationNumberAsString(networkConfiguration.plugins.lockhash.lockedFundsPerAggregate)) ||
            defaultValue ||
            this.defaults.lockedFundsPerAggregate
        );
    }

    public static maxMosaicDuration(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.mosaic &&
                TimeHelpers.durationStringToSeconds(networkConfiguration.plugins.mosaic.maxMosaicDuration)) ||
            defaultValue ||
            this.defaults.maxMosaicDuration
        );
    }

    public static minNamespaceDuration(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.namespace &&
                TimeHelpers.durationStringToSeconds(networkConfiguration.plugins.namespace.minNamespaceDuration)) ||
            defaultValue ||
            this.defaults.minNamespaceDuration
        );
    }

    public static maxNamespaceDuration(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.namespace &&
                TimeHelpers.durationStringToSeconds(networkConfiguration.plugins.namespace.maxNamespaceDuration)) ||
            defaultValue ||
            this.defaults.maxNamespaceDuration
        );
    }

    public static maxTransactionsPerAggregate(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.aggregate &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.aggregate.maxTransactionsPerAggregate)) ||
            defaultValue ||
            this.defaults.maxTransactionsPerAggregate
        );
    }

    public static maxCosignedAccountsPerAccount(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.multisig &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.multisig.maxCosignedAccountsPerAccount)) ||
            defaultValue ||
            this.defaults.maxCosignedAccountsPerAccount
        );
    }

    public static maxMessageSize(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.plugins &&
                networkConfiguration.plugins.transfer &&
                Formatters.configurationNumberAsNumber(networkConfiguration.plugins.transfer.maxMessageSize)) ||
            defaultValue ||
            this.defaults.maxMessageSize
        );
    }

    public static maxMosaicAtomicUnits(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.chain &&
                Formatters.configurationNumberAsNumber(networkConfiguration.chain.maxMosaicAtomicUnits)) ||
            defaultValue ||
            this.defaults.maxMosaicAtomicUnits
        );
    }

    public static currencyMosaicId(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: string | undefined = undefined,
    ): string {
        return (
            (networkConfiguration &&
                networkConfiguration.chain &&
                Formatters.configurationStringAsString(networkConfiguration.chain.currencyMosaicId)) ||
            defaultValue ||
            this.defaults.currencyMosaicId
        );
    }

    public static harvestingMosaicId(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: string | undefined = undefined,
    ): string {
        return (
            (networkConfiguration &&
                networkConfiguration.chain &&
                Formatters.configurationStringAsString(networkConfiguration.chain.harvestingMosaicId)) ||
            defaultValue ||
            this.defaults.harvestingMosaicId
        );
    }

    public static defaultDynamicFeeMultiplier(
        networkConfiguration: NetworkConfiguration | undefined,
        defaultValue: number | undefined = undefined,
    ): number {
        return (
            (networkConfiguration &&
                networkConfiguration.chain &&
                Formatters.configurationNumberAsNumber(networkConfiguration.chain.defaultDynamicFeeMultiplier)) ||
            defaultValue ||
            this.defaults.defaultDynamicFeeMultiplier
        );
    }
}

'''
'''--- src/core/utils/NetworkTypeHelper.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
/// region custom types
import { NetworkType } from 'symbol-sdk';

type NetworkNodeEntry = { value: NetworkType; label: string };

export class NetworkTypeHelper {
    /**
     * Network types with their names
     */
    public static networkTypeList: NetworkNodeEntry[] = [
        { value: NetworkType.MIJIN_TEST, label: 'MIJIN_TEST' },
        { value: NetworkType.MAIN_NET, label: 'MAIN_NET' },
        { value: NetworkType.TEST_NET, label: 'TEST_NET' },
        { value: NetworkType.MIJIN, label: 'MIJIN' },
    ];

    /**
     * Getter for network type label
     * @param {NetworkType} networkType
     * @return {string}
     */
    public static getNetworkTypeLabel(networkType: NetworkType): string {
        const findType = NetworkTypeHelper.networkTypeList.find((n) => n.value === networkType);
        if (findType === undefined) {
            return '';
        }
        return findType.label;
    }
}

'''
'''--- src/core/utils/NotificationType.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
export enum NotificationType {
    PROFILE_NAME_EXISTS_ERROR = 'profile_name_already_exists',
    PROFILE_NAME_INPUT_ERROR = 'profile_name_error',
    ADDRESS_ALIAS_NOT_EXIST_ERROR = 'address_alias_not_exist',
    ADDRESS_FORMAT_ERROR = 'address_format_error',
    ADDRESS_INVALID = 'address_invalid',
    ADDRESS_UNKNOWN = 'address_unknown',
    ADDRESS_UNKNOWN_BY_NETWORK = 'address_unknown_by_network',
    ALIAS_NAME_FORMAT_ERROR = 'alias_name_format_error',
    AMOUNT_LESS_THAN_0_ERROR = 'amount_can_not_be_less_than_0',
    CLICK_TO_LOAD = 'click_to_load',
    CO_SIGNER_NULL_ERROR = 'co_signers_amount_less_than_0',
    COPY_SUCCESS = 'successful_copy',
    COSIGNATURE_ADDED = 'cosignature_added',
    DIVISIBILITY_INVALID = 'divisibility_invalid',
    DIVISIBILITY_LESS_THAN_0_ERROR = 'divisibility_can_not_less_than_0',
    DIVISIBILITY_MORE_THAN_6_ERROR = 'divisibility_can_not_more_than_6',
    DURATION_LESS_THAN_0_ERROR = 'duration_can_not_less_than_0',
    DURATION_MORE_THAN_1_YEARS_ERROR = 'duration_can_not_more_than_1_years',
    DURATION_MORE_THAN_10_YEARS_ERROR = 'duration_can_not_more_than_10_years',
    DURATION_VALUE_LESS_THAN_1_ERROR = 'the_value_of_duration_cannot_be_less_than_1',
    ERROR_PEER_UNREACHABLE = 'error_peer_unreachable',
    ERROR_ACCOUNT_NAME_ALREADY_EXISTS = 'error_account_name_already_exists',
    ERROR_DELETE_ALL_PEERS = 'error_delete_all_peers',
    FEE_LESS_THAN_0_ERROR = 'fee_can_not_be_less_than_0',
    HD_ACCOUNT_PATH_ERROR = 'hd_account_path_error',
    ILLEGAL_MIN_APPROVAL_ERROR = 'min_approval_amount_illegal',
    ILLEGAL_MIN_REMOVAL_ERROR = 'min_removal_amount_illegal',
    ILLEGAL_PUBLIC_KEY_ERROR = 'illegal_publicKey',
    ILLEGAL_publicKey_ERROR = 'illegal_public_key_error',
    INCONSISTENT_PASSWORD_ERROR = 'create_lock_check_pw_remind',
    INPUT_EMPTY_ERROR = 'any_information_cannot_be_empty',
    INVALID_NAMESPACE_OR_MOSAIC_ID = 'invalid_namespace_or_mosaic_id',
    KEYSTORE_DECRYPTION_FAILED = 'keystore_decryption_failed',
    LOADING = 'loading',
    MAX_APPROVAL_MORE_THAN_10_ERROR = 'max_approval_amount_more_than_10',
    MAX_REMOVAL_MORE_THAN_10_ERROR = 'max_removal_amount_more_than_10',
    TOO_MANY_SEED_ACCOUNTS_ERROR = 'error_too_many_seed_accounts',
    MIN_APPROVAL_LESS_THAN_0_ERROR = 'min_approval_amount_less_than_0',
    MIN_REMOVAL_LESS_THAN_0_ERROR = 'min_removal_amount_less_than_0',
    MNEMONIC_GENERATION_ERROR = 'mnemonic_generation_error',
    MNEMONIC_INCONSISTENCY_ERROR = 'mnemonic_inconsistency',
    MNEMONIC_INPUT_ERROR = 'mnemonic_input_error',
    MOSAIC_ALIAS_NOT_EXIST_ERROR = 'mosaic_alias_not_exist',
    MOSAIC_HEX_FORMAT_ERROR = 'mosaic_hex_format_error',
    MOSAIC_LIST_NULL_ERROR = 'the_mosaic_to_be_sent_is_empty',
    MOSAIC_NAME_NULL_ERROR = 'mosaic_name_can_not_be_null',
    MOSAIC_NOT_SET = 'mosaic_not_set',
    MULTISIG_ACCOUNTS_NO_TX = 'multisig_accounts_can_not_send_a_transaction_by_themselves',
    NAMESPACE_FORMAT_ERROR = 'namespace_can_only_contain_numbers_letters_and_other',
    NAMESPACE_MAX_DURATION = 'The duration can not exceed 2102400 blocks (365 days)',
    NAMESPACE_NULL_ERROR = 'namespace_cannot_be_a_null_or_empty_string',
    NAMESPACE_STARTING_ERROR = 'namespace_must_start_with_a_letter',
    NAMESPACE_USE_BANNED_WORD_ERROR = 'namespace_cannot_use_forbidden_words',
    NETWORK_TYPE_INVALID = 'network_type_invalid',
    NEW_AGGREGATE_BONDED = 'notification_new_aggregate_bonded',
    NEW_CONFIRMED_TRANSACTION = 'notification_new_transaction_confirmed',
    NEW_COSIGNATURE = 'notification_new_cosignature',
    NEW_UNCONFIRMED_TRANSACTION = 'notification_new_unconfirmed_transaction',
    NO_MNEMONIC_INFO = 'no_mnemonic',
    NO_NETWORK_CURRENCY = 'no_network_currency_alert',
    NODE_ALL_DELETED = 'all_nodes_cannot_be_deleted',
    NODE_CONNECTION_ERROR = 'node_connection_failed',
    NODE_CONNECTION_SUCCEEDED = 'node_connection_succeeded',
    NODE_EXISTS_ERROR = 'node_exists_error',
    NODE_NULL_ERROR = 'point_null_error',
    NOTES_SHOULD_NOT_EXCEED_25_CHARACTER = 'notes_should_not_exceed_25_character',
    OPERATION_FAILED_ERROR = 'operation_failed',
    OPERATION_SUCCESS = 'successful_operation',
    PASSWORD_CREATE_ERROR = 'create_lock_pw_remind',
    PASSWORD_HIT_SETTING_ERROR = 'create_lock_pw_txt_remind',
    PASSWORD_IS_INVALID_ERROR = 'password_is_invalid',
    PASSWORDS_NOT_MATCHING = 'passwords_not_matching',
    PLEASE_ENTER_A_CORRECT_NUMBER = 'please_enter_a_correct_number',
    PLEASE_ENTER_MNEMONIC_INFO = 'please_enter_a_mnemonic_to_ensure_that_the_mnemonic_is_correct',
    PLEASE_SET_ACCOUNT_PASSWORD_INFO = 'please_set_your_account_password',
    PRIVATE_KEY_INVALID_ERROR = 'private_key_invalid_error',
    PUBLIC_KEY_INVALID = 'public_key_invalid',
    QR_GENERATION_ERROR = 'qr_code_generation_failed',
    REFRESH_TOO_FAST_WARNING = 'refresh_too_fast_warning',
    REMOTE_ACCOUNT_NOT_FOUND = 'Cannot find your remote account, please try to unlink it and create a new one',
    REMOTE_PUBLIC_KEY_MISSING = 'remote_public_key_missing_error',
    ROOT_NAMESPACE_TOO_LONG_ERROR = 'the_root_namespace_cannot_be_longer_than_16',
    SEED_ACCOUNT_OVERFLOW_ERROR = 'seed_account_can_not_be_more_than_10',
    SET_DEFAULT_EXPLORER = 'set_default_explorer',
    SUB_NAMESPACE_LENGTH_LONGER_THAN_64_ERROR = 'the_sub_namespace_cannot_be_longer_than_16',
    SUCCESS = 'success',
    SUCCESS_ACCOUNT_UNLOCKED = 'success_account_unlocked',
    SUCCESS_PASSWORD_CHANGED = 'success_password_changed',
    SUCCESS_SETTINGS_UPDATED = 'success_settings_updated',
    SUPPLY_LESS_THAN_0_ERROR = 'supply_can_not_less_than_0',
    UPDATE_SUCCESS = 'update_completed',
    USER_ABORTED_TX_CONFIRMATION = 'user_aborted_transaction_confirmation',
    VALUE_TOO_BIG = 'value_too_big',
    ACCOUNT_NAME_INPUT_ERROR = 'account_name_input_error',
    WRONG_PASSWORD_ERROR = 'password_error',
    WRONG_WALLET_NAME_ERROR = 'wrong_wallet_name_error',
    COPY_FAILED = 'copy_failed',
    INVALID_NODE = 'invalid_node',
}

'''
'''--- src/core/utils/ObservableHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { EMPTY, merge, MonoTypeOperatorFunction, of, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

/**
 * Custom observable pipe style operations.
 */
export class ObservableHelpers {
    /**
     * This pipe operation concatenates the default values first when provided on top what the
     * current observable resolves. if the defaultValue is provided and the current observable fails,
     * the error is logged and ignored. If default is not provided, the error is propagated.
     *
     *  The idea is that clients will get a cached version of the data first, then the data will be
     * upgraded when returned simulating a faster response.
     *
     *  This observable may send one extra data to the observable.
     *
     * @param defaultValue the default value to be piped first before the observable.
     */
    public static defaultFirst<T>(defaultValue: T | undefined): MonoTypeOperatorFunction<T> {
        return (observable) =>
            merge(
                defaultValue ? of(defaultValue) : EMPTY,
                observable.pipe(
                    catchError((e) => {
                        if (defaultValue) {
                            return EMPTY;
                        } else {
                            return throwError(e);
                        }
                    }),
                ),
            );
    }

    /**
     * This pipe operation appends the default data to the observable if this one fails.
     *
     * If the default data is not provided, the observable error is propagated. If the observable
     * succeeds, the default value is ignored.
     *
     * The idea is that if the response cannot be obtained from rest, the cached data will be used.
     *
     * @param defaultValue the default value to be provided if the current observable fails.
     */

    public static defaultLast<T>(defaultValue: T | undefined = undefined): MonoTypeOperatorFunction<T> {
        return (observable) =>
            observable.pipe(
                catchError((e) => {
                    if (defaultValue) {
                        return of(defaultValue);
                    } else {
                        return throwError(e);
                    }
                }),
            );
    }
}

'''
'''--- src/core/utils/RESTDispatcher.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class RESTDispatcher {
    /**
     *
     */
    protected dispatch: (action: string, payload?: any, options?: any) => void;

    /**
     *
     */
    protected actions: {
        action: string;
        payload?: any;
        options?: any;
        await: boolean;
    }[] = [];

    /**
     *
     * @param dispatchFn
     */
    public constructor(dispatchFn: (action: string, payload?: any, options?: any) => void) {
        this.dispatch = dispatchFn;
    }

    /**
     *
     * @param action
     * @param payload
     * @param options
     * @param isBlocking
     */
    public add(action: string, payload?: any, options?: any, shouldAwait: boolean = false) {
        this.actions.push({
            action,
            payload: payload,
            options: options,
            await: shouldAwait,
        });
    }

    /**
     * Lazy store action dispatcher. This will make sure
     * that dispatching actions does not flood REST with
     * too many requests.
     */
    public throttle_dispatch() {
        // - wrap actions execution in delayed promises
        const promises: Promise<any>[] = [];
        this.actions.map((action, index: number) => {
            // - every second value, delay 1000ms
            const delay = index + (1 % 2) === 0 ? 1000 : 0;

            // - configure promises to include delay
            promises.push(
                new Promise((resolve, reject) => {
                    return setTimeout(() => {
                        try {
                            const obs = this.dispatch(action.action, action.payload, action.options);
                            return resolve(obs);
                        } catch (e) {
                            return reject(e);
                        }
                    }, delay);
                }),
            );
        });

        return new Promise((resolve) => resolve(Promise.all(promises)));
    }
}

'''
'''--- src/core/utils/StorageHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
export class StorageHelpers {
    public static sessionSave = (key, value) => {
        sessionStorage.setItem(key, value);
    };

    public static sessionRead = (key) => {
        return sessionStorage.getItem(key) || '';
    };
}

'''
'''--- src/core/utils/TimeHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class TimeHelpers {
    public static addZero = function (number: number): string {
        return number < 10 ? `0${number}` : `${number}`;
    };

    public static formatTimestamp = (timestamp: number): string => {
        const d = new Date(timestamp);
        const date = `${TimeHelpers.addZero(d.getFullYear())}-${TimeHelpers.addZero(d.getMonth() + 1)}-${TimeHelpers.addZero(
            d.getDate(),
        )} `;
        const time = ` ${TimeHelpers.addZero(d.getHours())}:${TimeHelpers.addZero(d.getMinutes())}:${TimeHelpers.addZero(d.getSeconds())}`;
        return date + time;
    };

    public static formatSeconds = function (second: number): string {
        if (!second && second !== 0) {
            return '';
        }
        let d = 0,
            h = 0,
            m = 0;

        if (second > 86400) {
            d = Math.floor(second / 86400);
            second = second % 86400;
        }
        if (second > 3600) {
            h = Math.floor(second / 3600);
            second = second % 3600;
        }
        if (second > 60) {
            m = Math.floor(second / 60);
            second = second % 60;
        }
        let result = '';
        // seconds less than 60s
        if (second > 0 && m == 0 && h == 0 && d == 0) {
            result = `${second} s ${result}`;
        }
        if (m > 0 || h > 0 || d > 0) {
            result = `${m} m ${result}`;
        }
        if (h > 0 || d > 0) {
            result = `${h} h ${result}`;
        }
        if (d > 0) {
            result = `${d} d ${result}`;
        }

        return result;
    };

    /**
     * Transforms a number of blocks into a relative time
     * eg. 15 blocks => 1s
     * @param duration in block number
     */
    public static durationToRelativeTime = (durationInBlocks: number, blockGenerationTargetTime: number): string => {
        try {
            const isDurationNegative = durationInBlocks < 0;
            const absoluteDuration = isDurationNegative ? durationInBlocks * -1 : durationInBlocks;
            const relativeTime = TimeHelpers.formatSeconds(absoluteDuration * blockGenerationTargetTime);
            const prefix = isDurationNegative ? '- ' : '';
            return `${prefix}${relativeTime}`;
        } catch (error) {
            console.error('durationToRelativeTime -> error', error);
            return '';
        }
    };

    public static durationStringToSeconds(str: string): number {
        return Math.floor(this.durationStringToMilliseconds(str) / 1000);
    }

    public static durationStringToMilliseconds(value: string): number {
        let str = value;
        let total = 0;
        const milliSeconds = str.match(/(\d+)\s*ms/);
        if (milliSeconds) {
            str = str.replace(milliSeconds[0], '');
            total += parseInt(milliSeconds[1]);
        }
        const days = str.match(/(\d+)\s*d/);
        if (days) {
            str = str.replace(days[0], '');
            total += parseInt(days[1]) * 24 * 60 * 60 * 1000;
        }
        const hours = str.match(/(\d+)\s*h/);
        if (hours) {
            str = str.replace(hours[0], '');
            total += parseInt(hours[1]) * 60 * 60 * 1000;
        }
        const minutes = str.match(/(\d+)\s*m/);
        if (minutes) {
            str = str.replace(minutes[0], '');
            total += parseInt(minutes[1]) * 60 * 1000;
        }
        const seconds = str.match(/(\d+)\s*s/);
        if (seconds) {
            str = str.replace(seconds[0], '');
            total += parseInt(seconds[1]) * 1000;
        }
        return total;
    }

    public static formatDate = (timestamp) => {
        const now = new Date(Number(timestamp));
        const year = now.getFullYear();
        let month = `${now.getMonth() + 1}`;
        month = Number(month) < 10 ? `0${month}` : month;
        let date = `${now.getDate()}`;
        date = Number(date) < 10 ? `0${date}` : date;
        let hour = `${now.getHours()}`;
        hour = Number(hour) < 10 ? `0${hour}` : hour;
        let minute = `${now.getMinutes()}`;
        minute = Number(minute) < 10 ? `0${minute}` : minute;
        let second = `${now.getSeconds()}`;
        second = Number(second) < 10 ? `0${second}` : second;
        return `${year}-${month}-${date} ${hour}:${minute}:${second}`;
    };

    public static getCurrentMonthFirst = function (date: Date): Date {
        date.setDate(1);
        return date;
    };

    public static getCurrentMonthLast = function (date: Date): Date {
        let currentMonth = date.getMonth();
        const nextMonth = ++currentMonth;
        const nextMonthFirstDay = new Date(date.getFullYear(), nextMonth, 1);
        return new Date(Number(nextMonthFirstDay));
    };
}

'''
'''--- src/core/utils/TrezorConnect.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import TrezorConnect from 'trezor-connect';

// TODO: figure out who wants to be the first point of contact for trezor
// https://github.com/trezor/connect/blob/develop/docs/index.md#trezor-connect-manifest
TrezorConnect.manifest({
    email: 'chris@crunchycloud.io',
    appUrl: 'http://localhost:8080',
});

export default TrezorConnect;

'''
'''--- src/core/utils/UIHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class UIHelpers {
    /**
     * Helper method to copy text to clipboard
     * @param {string} text
     * @return {boolean}
     */
    public static copyToClipboard(text: string): boolean {
        try {
            // create ghost element
            const input = document.createElement('input');
            input.setAttribute('readonly', 'readonly');
            input.setAttribute('value', text);
            document.body.appendChild(input);

            // use DOM commands
            input.select();
            document.execCommand('copy');

            // flush
            document.body.removeChild(input);
            return true;
        } catch (e) {
            return false;
        }
    }
}

'''
'''--- src/core/utils/URLHelpers.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { UrlValidator } from '../validation/validators';
import { URLInfo } from '@/core/utils/URLInfo';

export class URLHelpers {
    public static formatUrl = (rawUrl: string): URLInfo => {
        if (!UrlValidator.validate(rawUrl)) {
            throw new Error(`Invalid URL: ${rawUrl}`);
        }
        const url = new URL(rawUrl);
        return new URLInfo(url.protocol, url.hostname, url.port, rawUrl);
    };

    public static httpToWsUrl = (url: string) => {
        if (UrlValidator.validate(url)) {
            return url.replace('http', 'ws');
        }
    };

    /**
     * Get full node url and add missing pieces
     * @param {string} fromUrl
     * @return {string}
     */
    public static getNodeUrl(fromUrl: string): string {
        let fixedUrl = -1 === fromUrl.indexOf('://') ? 'http://' + fromUrl : fromUrl;

        fixedUrl = !fixedUrl.match(/https?:\/\/[^:]+:([0-9]+)\/?$/)
            ? fixedUrl + ':3000' // default adds :3000
            : fixedUrl;

        const url = URLHelpers.formatUrl(fixedUrl);
        return url.protocol + '//' + url.hostname + (url.port ? ':' + url.port : ':3000');
    }
}

'''
'''--- src/core/utils/URLInfo.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

export class URLInfo {
    constructor(public readonly protocol, public readonly hostname, public readonly port: string, public readonly url: string) {}
}

'''
'''--- src/core/utils/WebClient.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import request from 'request';

export class WebClient {
    public static async request(content: string, options: request.Options) {
        const contentBuf = new Buffer(content);
        if (!options.headers) {
            options.headers = {};
        }
        options.headers['Content-Length'] = contentBuf.byteLength;

        return WebClient.httpRequest(contentBuf, options);
    }

    private static async httpRequest(content: Buffer, options: request.Options) {
        let isCalled = false;
        return new Promise((resolve, reject) => {
            const req = request(options, (err, res, body) => {
                if (isCalled) {
                    return console.error(null, 'Multiple requests');
                }
                isCalled = true;
                if (err) {
                    reject(err);
                }
                resolve(body);
            });
            req.write(content);
            req.end();
        });
    }
}

'''
'''--- src/core/validation/CustomValidationRules.ts ---
// external dependencies
import { extend } from 'vee-validate';
import i18n from '@/language';
import { Account, Address, NetworkType, Password } from 'symbol-sdk';
// internal dependencies
import { ProfileService } from '@/services/ProfileService';
import { NotificationType } from '@/core/utils/NotificationType';
import { AppStore } from '@/app/AppStore';
// configuration
import { networkConfig } from '@/config';
import { appConfig } from '@/config';
import { AddressValidator, AliasValidator, MaxDecimalsValidator, PublicKeyValidator, UrlValidator } from './validators';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountService } from '@/services/AccountService';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { Values } from 'vue-i18n';

// TODO CustomValidationRules needs to be created when the network configuration is resolved, UI
// needs to use the resolved CustomValidationRules
// ATM rules are using the hardcoded file
const currentNetwork: NetworkConfigurationModel = networkConfig.networkConfigurationDefaults;
const { MIN_PASSWORD_LENGTH } = appConfig.constants;

export class CustomValidationRules {
    /**
     * Registers custom validation rules
     * @static
     */
    public static register(): void {
        extend('address', {
            validate: (value) => {
                return AddressValidator.validate(value);
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.ADDRESS_INVALID, values)}`,
        });

        extend('maxDecimals', {
            validate: (value, args: any) => {
                const { maxDecimalNumber } = args;
                return MaxDecimalsValidator.validate(value, maxDecimalNumber);
            },
            message: (fieldName: string, values: Values) => `${i18n.t('max_decimal_number_error', values)}`,
            params: ['maxDecimalNumber'],
        });

        extend('addressOrAlias', {
            validate: (value) => {
                const isValidAddress = AddressValidator.validate(value);
                const isValidAlias = AliasValidator.validate(value);
                if (isValidAddress || isValidAlias) {
                    return true;
                }
                return false;
            },
            message: (fieldName: string, values: Values) => `${i18n.t('error_incorrect_field', values)}`,
        });

        extend('addressOrAliasNetworkType', {
            validate: (value, args: any) => {
                const { networkType } = args;
                if (!AddressValidator.validate(value)) {
                    return true;
                }
                return Address.createFromRawAddress(value).networkType == networkType;
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.NETWORK_TYPE_INVALID, values)}`,
            params: ['networkType'],
        });

        extend('url', {
            validate: (value) => {
                return UrlValidator.validate(value);
            },
            message: (fieldName: string, values: Values) => `${i18n.t('error_incorrect_url', values)}`,
        });

        extend('confirmPassword', {
            validate(value, args: any) {
                const { target } = args;
                return value === target;
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.PASSWORDS_NOT_MATCHING, values)}`,
            params: ['target'],
        });

        extend('newAccountName', {
            validate(value) {
                const currentProfile = new ProfileService().getProfileByName(value);
                return !(currentProfile && currentProfile.accounts.length > 0);
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.PROFILE_NAME_EXISTS_ERROR, values)}`,
        });

        extend('profilePassword', {
            validate(value) {
                if (!value || value.length < 8) {
                    return false;
                }

                const currentProfile: ProfileModel = AppStore.getters['profile/currentProfile'];
                const currentHash = currentProfile.password;
                const inputHash = ProfileService.getPasswordHash(new Password(value));
                return inputHash === currentHash;
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.WRONG_PASSWORD_ERROR, values)}`,
        });

        extend('profileAccountName', {
            validate(value) {
                const accountService = new AccountService();

                // - fetch current profile accounts
                const currentProfile: ProfileModel = AppStore.getters['profile/currentProfile'];
                const knownAccounts = Object.values(accountService.getKnownAccounts(currentProfile.accounts));
                return undefined === knownAccounts.find((w) => value === w.name);
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.ERROR_ACCOUNT_NAME_ALREADY_EXISTS, values)}`,
        });

        extend('privateKey', {
            validate(value) {
                try {
                    Account.createFromPrivateKey(value, NetworkType.MIJIN_TEST);
                    return true;
                } catch (e) {
                    return false;
                }
            },
            message: (fieldName: string, values: Values) => `${i18n.t(NotificationType.PROFILE_NAME_EXISTS_ERROR, values)}`,
        });

        extend('addressOrPublicKey', {
            validate: (value) => {
                const isValidAddress = AddressValidator.validate(value);
                const isValidPublicKey = PublicKeyValidator.validate(value);
                if (isValidAddress || isValidPublicKey) {
                    return true;
                }
                return false;
            },
            message: (fieldName: string, values: Values) => `${i18n.t('error_incorrect_field', values)}`,
        });

        extend('maxNamespaceDuration', {
            validate: (value) => {
                return value <= currentNetwork.maxNamespaceDuration;
            },
            message: (fieldName: string, values: Values) => {
                return `${i18n.t('error_incorrect_field', { ...values, maxValue: currentNetwork.maxNamespaceDuration })}`;
            },
        });

        extend('passwordRegex', {
            validate: (value) => {
                return new RegExp(`(?=.*[0-9])(?=.*[a-zA-Z])(.{${MIN_PASSWORD_LENGTH},})$`).test(value);
            },
            message: `${i18n.t('error_new_password_format')}`,
        }),
            extend('in', {
                validate: (value, array: string[]) => {
                    if (!array) {
                        return false;
                    }
                    return array.includes(value);
                },
                message: (fieldName: string, values: Values) => `${i18n.t('error_not_exist', values)}`,
            });
    }
}

'''
'''--- src/core/validation/ErrorMessages.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { configure } from 'vee-validate';
import i18n from '@/language';

export class ErrorMessages {
    /**
     * Loads error messages
     * @static
     */
    public static load() {
        return new ErrorMessages().loadStandardValidationRulesMessages();
    }

    /**
     * Maps translation messages passed to i18n
     * to the validation rules shipped with vee-validate
     * @private
     */
    private loadStandardValidationRulesMessages() {
        configure({
            // @ts-ignore
            defaultMessage: (_, values) => i18n.t(`validation.${values._rule_}`, values),
        });
    }
}

'''
'''--- src/core/validation/InitializeVeeValidate.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { StandardValidationRules } from '@/core/validation/StandardValidationRules';

export class VeeValidateSetup {
    /**
     * Initialize Vee Validate custom settings
     * @static
     */
    public static initialize() {
        const setup = new VeeValidateSetup();
        setup.registerValidationRules();
    }

    private registerValidationRules() {
        StandardValidationRules.register();
    }
}

'''
'''--- src/core/validation/StandardValidationRules.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { extend } from 'vee-validate';
import { digits, excluded, integer, is, is_not, max_value, max, min_value, min, regex, required } from 'vee-validate/dist/rules';

export class StandardValidationRules {
    /**
     * Registers validation rules shipped with vee-validate
     * @static
     */
    public static register() {
        extend('digits', digits);
        extend('excluded', excluded);
        extend('integer', integer);
        extend('is', is);
        extend('is_not', is_not);
        extend('max_value', max_value);
        extend('max', max);
        extend('min_value', min_value);
        extend('min', min);
        extend('regex', regex);
        extend('required', required);
    }
}

'''
'''--- src/core/validation/ValidationRuleset.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// configuration
import { appConfig } from '@/config';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

import { networkConfig } from '@/config';

const { MIN_PASSWORD_LENGTH } = appConfig.constants;

export const createValidationRuleSet = ({
    maxMessageSize,
    maxMosaicAtomicUnits,
    maxMosaicDivisibility,
    maxMosaicDuration,
    minNamespaceDuration,
}: NetworkConfigurationModel) => {
    return {
        address: 'required|address|addressNetworkType:currentProfile',
        profilePassword: 'required|profilePassword',
        addressOrAlias: 'required|addressOrAlias|addressOrAliasNetworkType:currentProfile',
        amount: `excluded:""|is_not:0|min_value:0|maxDecimals:${maxMosaicDivisibility}|max_value:${maxMosaicAtomicUnits}`,
        confirmPassword: 'required|confirmPassword:@newPassword',
        divisibility: 'required|min_value:0|max_value:6|integer',
        duration: `required|min_value:0|max_value:${maxMosaicDuration}`,
        generationHash: 'required|min:64|max:64',
        mosaicId: 'required|mosaicId',
        message: `max:${maxMessageSize}`,
        namespaceDuration: `required|min_value:${minNamespaceDuration}|maxNamespaceDuration`,
        namespaceName: {
            required: true,
            regex: '^[a-z0-9]{1}[a-z0-9-_]{1,63}$',
        },
        subNamespaceName: {
            required: true,
            regex: '^[a-z0-9]{1}[a-z0-9-_]{1,63}$',
        },
        password: `required|min:${MIN_PASSWORD_LENGTH}|passwordRegex`,
        previousPassword: 'required|confirmLock:cipher',
        privateKey: 'min:64|max:64|privateKey',
        recipientPublicKey: 'required|publicKey',
        supply: `required|integer|min_value: 1|max_value:${maxMosaicAtomicUnits}`,
        url: 'required|url',
        newAccountName: 'required|newAccountName',
        profileAccountName: 'required|profileAccountName',
        addressOrPublicKey: 'addressOrPublicKey',
    };
};

// TODO ValidationRuleset needs to be created when the network configuration is resolved, UI needs
// to use the resolved ValidationResulset ATM rules are using the hardocded ones
export const ValidationRuleset = createValidationRuleSet(networkConfig.networkConfigurationDefaults);

'''
'''--- src/core/validation/VeeValidateSetup.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { StandardValidationRules } from '@/core/validation/StandardValidationRules';
import { CustomValidationRules } from '@/core/validation/CustomValidationRules';
import { ErrorMessages } from '@/core/validation/ErrorMessages';

export class VeeValidateSetup {
    /**
     * Initialize Vee Validate custom settings
     * @static
     */
    public static initialize() {
        const setup = new VeeValidateSetup();
        setup.registerValidationRules();
        setup.loadErrorMessages();
    }

    /**
     * Registers validation rules
     * @private
     */
    private registerValidationRules() {
        StandardValidationRules.register();
        CustomValidationRules.register();
    }

    /**
     * Loads error messages
     * @private
     */
    private loadErrorMessages() {
        ErrorMessages.load();
    }
}

'''
'''--- src/core/validation/validators/AddressValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address } from 'symbol-sdk';

// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class AddressValidator {
    /**
     * Executes the validator
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: any): boolean {
        try {
            Address.createFromRawAddress(value);
            return true;
        } catch (error) {
            return false;
        }
    }
}

'''
'''--- src/core/validation/validators/AliasValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NamespaceId } from 'symbol-sdk';

// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class AliasValidator {
    /**
     * Executes the validator
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: any): boolean {
        try {
            new NamespaceId(value);
            return value;
        } catch (error) {
            return false;
        }
    }
}

'''
'''--- src/core/validation/validators/DerivationPathValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class DerivationPathValidator {
    /**
     * Executes the validator
     * @static
     * @param {string} value
     * @returns {({valid: boolean|string})}
     */
    public static validate(value: any): boolean {
        if (value.match(/^m\/44'\/4343'\/[0-9]+'\/[0-9]+'\/[0-9]+'/)) {
            return value;
        }

        return false;
    }
}

'''
'''--- src/core/validation/validators/MaxDecimalsValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class MaxDecimalsValidator {
    /**
     * Validates the max number of decimals in a number
     * @static
     * @param {*} value
     * @param {number} maxDecimalNumber
     * @returns {boolean}
     */
    public static validate(value: any, maxDecimalNumber: number): boolean {
        if (Math.floor(value) == value) {
            return true;
        }
        const decimalNumber = value.toString().split('.')[1].length || 0;
        return decimalNumber <= maxDecimalNumber;
    }
}

'''
'''--- src/core/validation/validators/MosaicIdValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicId } from 'symbol-sdk';

// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class MosaicIdValidator {
    /**
     * Executes the validator
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: any): boolean {
        try {
            new MosaicId(value);
            return value;
        } catch (error) {
            return false;
        }
    }
}

'''
'''--- src/core/validation/validators/NamespaceIdValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NamespaceId } from 'symbol-sdk';

// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class NamespaceIdValidator {
    /**
     * Executes the validator
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: any): boolean {
        try {
            new NamespaceId(value);
            return true;
        } catch (error) {
            return false;
        }
    }
}

'''
'''--- src/core/validation/validators/PublicKeyValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType, PublicAccount } from 'symbol-sdk';

// internal dependencies
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class PublicKeyValidator {
    /**
     * Executes the validator
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: any): boolean {
        try {
            /** The NetworkType below is for public key testing only */
            PublicAccount.createFromPublicKey(value, NetworkType.TEST_NET);
            return value;
        } catch (error) {
            return false;
        }
    }
}

'''
'''--- src/core/validation/validators/UrlValidator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Validator, staticImplements } from './Validator';

@staticImplements<Validator>()
export class UrlValidator {
    /**
     * Validates an URL
     * @static
     * @param {*} value
     * @returns {boolean}
     */
    public static validate(value: string): boolean {
        const regStr =
            '^' + // position at start
            '(https?:\\/\\/)?' + //protocol
            '((([a-zA-Z\\d]{1,}([-\\.]{1}[a-zA-Z\\d]{1,})*\\.[a-zA-Z]+)' + // domain name
            '|((\\d{1,3}\\.){3}\\d{1,3}))' + // ip(v4) address
            '(\\:\\d+)?)' + // port
            '|localhost\\:\\d+'; // localhost:8080
        const pattern = new RegExp(regStr, 'i');
        return pattern.test(value);
    }
}

'''
'''--- src/core/validation/validators/Validator.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

/**
 * Validator interface
 * @interface Validator
 */
export interface Validator {
    new (): void;
    /**
     * Validates a value
     * @param {*} value
     * @param {*} [args]
     * @returns {boolean}
     */
    validate(value: any, args?: any): boolean;
}

/**
 * Decorator that enables typing classes with static methods
 */
export function staticImplements<T>() {
    return <U extends T>(constructor: U) => {
        constructor;
    };
}

'''
'''--- src/core/validation/validators/index.ts ---
export * from './AddressValidator';
export * from './AliasValidator';
export * from './DerivationPathValidator';
export * from './MaxDecimalsValidator';
export * from './MosaicIdValidator';
export * from './NamespaceIdValidator';
export * from './PublicKeyValidator';
export * from './UrlValidator';
export * from './Validator';

'''
'''--- src/events.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';

/// region event bus (events propagated on parallel thread)
/**
 * This event bus channels following events:
 *
 * - newConnection with \a nodeUrl
 * - onProfileChange with \a profileName
 * - onAccountChange with \a accountAddress
 */
export const $eventBus = new Vue();
/// end-region event bus

'''
'''--- src/language/en-US.json ---
{
    "about_app_release": "Release",
    "about_app_url": "Homepage",
    "about_default_node": "Default node",
    "about_dependencies": "Dependencies",
    "about_generation_hash": "Generation hash",
    "about_network": "Network",
    "about_network_type": "Network type",
    "about_rxjs_version": "RxJs Library",
    "about_sdk_version": "Symbol SDK",
    "about_typescript_version": "Typescript",
    "about_vue_version": "Vue Framework",
    "absolute": "absolute",
    "access_ledger": "Access Ledger",
    "access_my_profile": "Access my profile",
    "access_trezor": "Access Trezor",
    "access_trezor_account": "Access your Trezor account",
    "access_your_ledger_account": "Access your Ledger account",
    "account_address": "Address",
    "ACCOUNT_LINK": "Account link",
    "account_management": "My accounts",
    "account_name": "Name",
    "account_name_input_error": "Account name input error!",
    "account_network_does_not_match_current_network_type": "The profile's network is different from the network of the connected node. Please create a new one.",
    "account_network_type_does_not_match_current_network_type": "The profile's network type does not match with the network type of the connected node.",
    "account_public_key": "Public Key",
    "accounts": "Accounts",
    "accounts_backup_keystore_explain_p1": "Use the button on the right to backup your private and public keys by downloading an encrypted key file.",
    "accounts_backup_keystore_explain_p2": "You will be asked to unlock your profile. After unlocking your profile, the download will start automatically.",
    "accounts_backup_mnemonic_explain_p1": "Use the button on the right to backup your mnemonic passphrase by displaying the 24 words on the screen.",
    "accounts_backup_mnemonic_explain_p2": "You will be asked to unlock your profile. After unlocking your profile, the mnemonic passphrase will appear.",
    "accounts_backup_mnemonic_explain_p3": "Please, make sure to backup the following {num} words in a safe place. These {num} words represent your mnemonic passphrase and can be used to import your profile and its' child accounts at a later point in time.",
    "accounts_backup_mnemonic_explain_qrcode": "Please, make sure to backup the following QRCode in a safe place. This QRCode can be used to import your profile and its' child accounts at a later point in time.",
    "accounts_backup_qrcode_explain_p1": "Use the button on the right to backup your mnemonic passphrase by downloading a QRCode.",
    "accounts_backup_qrcode_explain_p2": "You will be asked to unlock your profile. After unlocking your profile, the download will start automatically.",
    "accounts_backup_tile_description": "Backup your wallet(s) now",
    "accounts_backup_tile_keystore": "Download keys",
    "accounts_backup_tile_keystore_desc": "Download a keys file",
    "accounts_backup_tile_mnemonic": "Display Mnemonic",
    "accounts_backup_tile_mnemonic_desc": "Display your passphrase",
    "accounts_backup_tile_title": "Mnemonic QRCode",
    "accounts_backup_title": "Backup & Security",
    "accounts_backup_title_keystore": "Download keys",
    "accounts_backup_title_mnemonic": "Mnemonic passphrase",
    "accounts_backup_title_qrcode": "Encrypted Mnemonic QRCode",
    "accounts_backup_transactions": "Export the transaction list to a CSV file",
    "accounts_backup_transactions_description": "Download all the transaction information, save it locally and view it even if you don't have an Internet connection",
    "accounts_change_password_description": "Change your password",
    "accounts_change_password_title": "Change Password",
    "accounts_create_invoice": "Create an invoice",
    "accounts_flags_default_account": "Default",
    "accounts_flags_default_account_explain": "This is your default account",
    "accounts_flags_known_by_network": "Broadcasted Account",
    "accounts_flags_multisig": "Multi-signature",
    "accounts_flags_multisig_explain": "This is a multi-signature account",
    "accounts_flags_simple": "Simple account",
    "accounts_flags_simple_explain": "This is a simple account",
    "accounts_flags_unknown_by_network": "Private Account",
    "accounts_harvesting_remote_explain_p1": "Use the button on the right to configure a remote account for harvesting. This will later permit your account to activate delegated harvesting.",
    "accounts_harvesting_remote_explain_p2": "You will be asked to unlock your account and will then view options for the setup of a remote account for harvesting.",
    "accounts_harvesting_request_explain_p1": "Use the button on the right to send a harvesting delegation request. If approved by the node, this will activate harvesting for your account.",
    "accounts_harvesting_request_explain_p2": "You will be asked to unlock your account and will then view options for sending harvesting delegation requests to Peer nodes.",
    "accounts_harvesting_tile_remote": "Remote account",
    "accounts_harvesting_tile_remote_description": "Importance transfer",
    "accounts_harvesting_tile_request": "Delegation request(s)",
    "accounts_harvesting_tile_request_description": "Start harvesting!",
    "accounts_harvesting_title_remote": "Setup a remote account",
    "accounts_harvesting_title_request": "Send delegation request(s)",
    "accounts_label_flags": "Flags",
    "accounts_links_explorer": "Explorer",
    "accounts_links_faucet": "Faucet",
    "accounts_setup_harvesting_description": "Configure delegated harvesting",
    "accounts_setup_harvesting_title": "Setup harvesting",
    "accounts_share_qr_code": "Share public details",
    "accounts_subtitle_account_links": "Useful links",
    "accounts_view_dashboard": "View in dashboard",
    "accounts_view_explorer_description": "Open in explorer",
    "accounts_view_multisig": "Multi-signature",
    "accounts_view_open_faucet": "Open the faucet",
    "action": "Action",
    "action_label_alias_link": "Link",
    "action_label_alias_unlink": "Unlink",
    "action_label_extend_duration": "Extend duration",
    "action_label_modify_supply": "Modify supply",
    "add_mosaic": "Add a mosaic",
    "address": "Address",
    "address_alias_not_exist": "Address alias does not exist",
    "address_format_error": "Address format error",
    "address_invalid": "This address is invalid",
    "address_qr_code": "Address QR code",
    "address_to_interact_with": "Address to interact with",
    "address_unknown": "This address is unknown to the network, please try with its public key instead",
    "address_unknown_by_network": "The account is unknown by the network until it sends a first transaction.",
    "alias": "Alias",
    "alias_name_format_error": "alias hexadecimal format error",
    "aliases": "Aliases",
    "all_nodes_cannot_be_deleted": "All nodes cannot be deleted",
    "amount": "Amount",
    "amount_asset": "Amount",
    "amount_can_not_be_less_than_0": "The amount should be greater than 0",
    "any_information_cannot_be_empty": "Fields cannot be empty. Please, verify your input.",
    "approval_greater_than_cosignatories": "There are {delta} more required cosignatories for min. approval than available cosignatories. Please add cosignatories or reduce the min. approval number.",
    "article_by": "Article by {creator}",
    "assets": "Assets",
    "at_block": "at block {blockNumber}",
    "automatically_generated_by_node_url": "Automatically generated by node url",
    "back": "Back",
    "backup_mnemonic": "Backup mnemonic",
    "backup_mnemonic_phrase": "Backup Mnemonic Phrase",
    "backup_mnemonic_words": "Backup mnemonic words",
    "balance": "Balance",
    "block": "Block",
    "block_height": "Height",
    "button_add_account": "Add an account",
    "button_download_qr": "Download",
    "chain_height": "Chain height",
    "choose_network": "Choose network",
    "choose_profile_name_and_password": "Chose a profile name and a password",
    "clear_staged_transactions": "Discard all transactions",
    "click_to_cosign": "Click to cosign",
    "click_to_load": "Click to load data",
    "close": "Close",
    "co_signers_amount_less_than_0": "Multi-signature accounts must have at least 1 co-signatory",
    "confirm": "Confirm",
    "confirm_backup": "Confirm backup",
    "CONFIRMATION": "Confirmation",
    "confirmations_height": "Height",
    "confirmed_transaction": "Confirmed",
    "confirmPassword": "Confirm password",
    "contact_qr_action_desc": "Click continue to be redirected to the transfer page to make a transfer to this recipient.",
    "continue": "Continue",
    "copy_failed": "Copy failed",
    "copy_mnemonic": "Copy mnemonic",
    "cosignature_added": "Cosignature received",
    "cosignature_qr_action_desc": "Continue to transaction details page to sign your part.",
    "create_a_new_account": "Create a new profile",
    "create_a_new_profile": "Create a new profile",
    "create_lock_check_pw_remind": "Two passwords are inconsistent",
    "create_lock_pw_remind": "Password setting error",
    "create_lock_pw_txt_remind": "Password hint error",
    "create_mnemonic": "Create Mnemonic",
    "create_profile": "Create Profile",
    "create_sub_namespace": "Create a sub-namespace",
    "creation_successful": "Congratulations, the profile was created successfully!",
    "current_endpoint": "Current Node",
    "current_network": "Current Network",
    "current_profile_network": "Current profile network",
    "current_speed": "The current speed",
    "current_validity": "Expires in",
    "deadline": "Deadline",
    "decrease": "Decrease",
    "define": "Registration",
    "delta": "Delta",
    "description": "Description",
    "direction": "Direction",
    "display_mnemonic": "Display mnemonic words",
    "display_mnemonic_qr_code": "Display mnemonic QR code",
    "divisibility": "Divisibility",
    "divisibility_can_not_less_than_0": "Divisibility cannot be less than 0",
    "divisibility_can_not_more_than_6": "Divisibility cannot exceed 6.",
    "divisibility_invalid": "This divisibility is invalid [0-6]",
    "do_not_disclose": "Please, keep this information private. Sharing your mnemonic passphrase with others may put your funds at risk.",
    "do_not_disclose_title": "Keep this private!",
    "do_not_share_mnemonics_with_anyone": "Don't share mnemonics with anyone",
    "download": "Download",
    "duration": "Duration",
    "duration_can_not_less_than_0": "Duration cannot be less than 0",
    "duration_can_not_more_than_1_years": "Duration cannot be greater than 1 year",
    "duration_can_not_more_than_10_years": "Duration cannot be greater than 10 years",
    "duration_permanent": "Unlimited duration",
    "end_finalization_epoch": "End Finalization Epoch",
    "endpoint": "Node",
    "enter_your_private_key": "Enter your private key",
    "error_account_name_already_exists": "This account name already exists. Please, enter a unique account name.",
    "error_delete_all_peers": "You can not delete all the nodes",
    "error_incorrect_field": "The {_field_} field is incorrect.",
    "error_incorrect_url": "This is not a valid URL",
    "error_invalid_password": "This password is invalid",
    "error_new_namespace_duration_max_value": "The new namespace duration can not be greater than {maxValue}",
    "error_new_password_format": "The password should contain at least one letter and one number.",
    "error_peer_connection_went_wrong": "Something went wrong when connecting to the node {peerUrl} timed out",
    "error_peer_unreachable": "This node is unreachable.",
    "error_too_many_seed_accounts": "You cannot create more than {maxSeedAccountsNumber} child accounts",
    "estimated_period_of_validity": "Estimated Period Of Validity",
    "estimated_rental_fee": "Estimated rental fee",
    "existing_profile": "Do you already have a profile?",
    "expired_for": "Expired for",
    "expires_in": "Expires in",
    "explorer_url": "Explorer URL",
    "export_mnemonic": "Export mnemonic",
    "fee": "Fee",
    "fee_can_not_be_less_than_0": "Fee cannot be less than 0",
    "fee_speed_fast": "Fast",
    "fee_speed_fastest": "Fastest",
    "fee_speed_free": "No Fee",
    "fee_speed_highest": "Highest",
    "fee_speed_median": "Recommended",
    "fee_speed_normal": "Normal",
    "fee_speed_slow": "Slow",
    "fee_speed_slowest": "Slowest",
    "filter_peers": "Filter peers",
    "finish": "Finish",
    "finished": "Finished",
    "flags_divisibility": "Determines the decimal place to which the mosaic can be divided. The divisibility must be in the range of 0 and 6.",
    "flags_duration_permanent": "If set to true, the mosaic will never expire.",
    "flags_restrictable": "If set to true, the mosaic owner can configure custom restrictions.",
    "flags_supply": "The total supply must be in the range of 0 and 9,000,000,000,000,000 atomic units.",
    "flags_transferable": "If set to true, the mosaic can be transferred to arbitrary accounts.",
    "flags_variable_supply": "If set to true, the mosaic supply will be mutable.",
    "form_label_account_to_be_converted": "Account to be converted",
    "form_label_add_cosignatory": "Add a cosignatory",
    "form_label_additional_duration": "Additional duration",
    "form_label_alias_type": "Alias type",
    "form_label_choose_namespace": "Choose a namespace",
    "form_label_cosignatory_modifications": "Cosignatory modifications",
    "form_label_current_supply": "Current supply",
    "form_label_default_account": "Preferred default account",
    "form_label_default_max_fee": "Default max fee",
    "form_label_description_min_approval": "Minimum signatures to sign a transaction or to add a cosigner",
    "form_label_description_min_removal": "Minimum signatures required to remove a cosigner",
    "form_label_duration": "Duration",
    "form_label_language": "Preferred language",
    "form_label_link_address": "Link an address",
    "form_label_link_mosaic": "Link a mosaic",
    "form_label_min_approval": "Min. approval",
    "form_label_min_removal": "Min. removal",
    "form_label_multisig_account": "Multi-signature account",
    "form_label_multisig_accounts": "Multi-signature accounts",
    "form_label_multisig_current_info": "Cosignatories",
    "form_label_multisig_operation_type": "Operation type",
    "form_label_namespace_name": "Namespace name",
    "form_label_network_node_url": "Enter a harvesting node URL here (e.g: http://localhost:3000)",
    "form_label_new_absolute_supply": "New absolute supply",
    "form_label_new_account_name": "New account name",
    "form_label_new_account_type": "Select the type of account",
    "form_label_new_cosignatories": "Added cosignatories",
    "form_label_new_expiration_time": "New expiration time",
    "form_label_new_min_approval": "New min. approval",
    "form_label_new_min_removal": "New min. removal",
    "form_label_new_password": "Enter a new password",
    "form_label_new_password_confirm": "Confirm your new password",
    "form_label_new_password_hint": "Password hint",
    "form_label_new_supply": "New supply",
    "form_label_parent_namespace": "Parent namespace",
    "form_label_password": "Password",
    "form_label_private_key": "Enter your private key",
    "form_label_registration_type": "Namespace type",
    "form_label_remove_cosignatory": "Remove a cosignatory",
    "form_label_removed_cosignatory": "Removed cosignatory",
    "form_label_removed_cosignatory_tooltip": "Only one cosignatory removal is allowed within a transaction",
    "form_label_supply_delta": "Supply change amount",
    "form_label_supply_direction": "Supply change direction",
    "from_qr_code": "From QR Code",
    "from_to_action": "From/To",
    "generate_a_new_profile": "Generate a new profile",
    "generate_entropy_increase_success": "Successfully generated a random mnemonic pass phrase.",
    "generate_mnemonic": "Generate Mnemonic",
    "generating_mnemonic": "Next",
    "getting_a_mnemonic_equals_ownership_of_a_account_asset": "This mnemonic passphrase is enough to take the control of all the assets of a profile.",
    "go_to_login": "Click here to login now",
    "harvesting": "Harvesting",
    "harvesting_confirmation_description_1": "You can see the transaction(s) details displayed below. After you have entered your password, and pressed the Next button, these transaction(s) will be      announced to the network.",
    "harvesting_confirmation_description_2": "Harvesting will be activated automatically provided that the network node is harvesting and accepts delegation requests.",
    "harvesting_create_remote_account": "You will first need to setup a remote account, if you have not done this before.",
    "harvesting_delegation_description_1": "Select the account that should start harvesting and select the harvesting node to which you want to send a delegation request.",
    "harvesting_delegation_description_2": "Then, select a max fee to include in the transaction. You can send delegation requests to multiple nodes.",
    "harvesting_node_get_node_info": "Get node info ",
    "harvesting_node_not_eligible": "This not is not eligible for harvesting",
    "harvesting_remote_account": "remote account",
    "harvesting_remote_account_creation_successful_1": "Your remote account has been created successfully. Please keep its private key secure",
    "harvesting_remote_account_description_1": "For security reasons, we will create a remote account (proxy) for delegated harvesting.",
    "harvesting_remote_account_description_3": "Enter your password and click \"Start\" to create a remote account.",
    "harvesting_remote_linked_description_1": "Your account is currently linked to the following remote account (proxy) for delegated harvesting.",
    "harvesting_remote_linked_description_2": "You can unlink your account from this remote account in the Accounts section. Click Next to configure a delegation request for the harvesting node of your  choice.",
    "harvesting_subtitle_confirmation": "Overview",
    "harvesting_subtitle_delegation": "Node selection",
    "harvesting_subtitle_overview": "Overview",
    "hash_date": "Hash/Date",
    "hd_account_path_error": "Address path error",
    "id": "#",
    "if_you_need_to_back_up_your_mnemonics_again_you_can": "If you need to back up your mnemonics again, you can find them in 'Profile Management - Profile Details - Export Mnemonics'.",
    "illegal_public_key_error": "This public key is invalid",
    "illegal_publicKey": "The account public key you provided is invalid",
    "import": "Import",
    "import_mnemonic": "Import mnemonic",
    "import_mnemonic_passphrase_create_profile": "Import a mnemonic passphrase to create a profile",
    "import_private_key": "Import Private Key",
    "import_private_key_account_successfully": "Congratulations, Private key account imported successfully.",
    "import_private_key_account_successfully_title_tips": "The current profile was created using a private key. It is not possible to add other accounts to it. Hope you have a pleasant experience and journey.",
    "import_private_key_description": "Import your private key to create a profile",
    "import_private_key_finalize_tip_text1": "1. Please, make sure to backup your private key in a safe place. It is only encrypted and mounted under you local current profile. It has nothing to do with any mnemonic.",
    "import_private_key_finalize_tip_text2": "2. A profile can mount any number of independent private keys for you. Be careful!",
    "import_private_key_input_tip1": "Enter your private key in the input field. Please make sure your private key is correct. When you enter the correct private key, the corresponding public key and address will appear at the bottom of the input box. Note the network type.",
    "import_private_key_profile_description_tip1": "Before you start using this software, you need to create a profile name and password. Used to encrypt your account information locally.",
    "import_private_key_profile_description_tip2": "The password will be used to secure the access to your profile, like 'Transfer' and any transaction operations.",
    "import_qr_code": "Import QR Code",
    "import_successful": "Congratulations, the profile was imported successfully!",
    "import_transaction_uri": "Import Transaction URI",
    "importance": "Importance",
    "increase": "Increase",
    "info_active_cosignatory_mode": "The selected transaction signer is a multi-signature account.",
    "info_connecting_peer": "Connecting to the node {peerUrl} ...",
    "inner_transaction_hash": "inner transaction hash",
    "input_here": "Input here",
    "input_mnemonic": "Enter a mnemonic passphrase",
    "input_mnemonic_tips": "Enter the 12 or 24 words of your mnemonic passphrase separated by space. The mnemonic passphrase is composed of 12 or 24 randomly chosen words. After setting the words, your assets will be restored.",
    "input_namespace_name": "Enter a namespace name",
    "invalid_namespace_or_mosaic_id": "The mosaic id or name is invalid",
    "invalid_node": "Invalid node",
    "keep_it_in_a_safe_place_on_the_isolated_network_mnemonics": "Keep it in a safe place. Do not share and store mnemonics in any shared or remote environment, such as emails, photo albums, social applications, etc.",
    "keystore_decryption_failed": "Keystore decryption failed",
    "label_add_cosignatory": "Add a cosignatory",
    "label_duration_unlimited": "Unlimited",
    "label_for_approvals": "co-signatures required for approving transactions",
    "label_for_removals": "co-signatures required for removing cosignatories",
    "label_multisig_operation_conversion": "Converting account to multi-signature",
    "label_multisig_operation_modification": "Modifying account multisig properties",
    "label_of": "{min} of {max}",
    "label_postfix_multisig": "(Multisig)",
    "label_signed_by": "Signed by co-signatory=>",
    "latest_news_articles": "Latest news articles",
    "link": "Link",
    "link_action": "Link Action",
    "linked_account_address": "Linked Account Address",
    "linked_public_key": "Linked Public Key",
    "loading": "Loading...",
    "locked_mosaic": "locked mosaic",
    "login": "Login",
    "low_fee_warning_message": "Transaction with a less than recommended fee might not get accepted and eventually",
    "max_approval_amount_more_than_10": "The maximum number of co-signatories needed for approval cannot exceed 10",
    "max_decimal_number_error": "The {_field_} field must have {maxDecimalNumber} decimals or less.",
    "max_fee": "Max Fee",
    "max_removal_amount_more_than_10": "The maximum number of co-signatories needed for removal cannot exceed 10",
    "message": "Message",
    "message_empty_cosignatories": "This account does not have co-signatories.",
    "min_approval_amount_illegal": "The minimum number of co-signatories needed for approval must be a number",
    "min_approval_amount_less_than_0": "The minimum number of co-signatories needed for approval cannot be smaller than 1",
    "min_approval_delta": "Min. Approval Delta",
    "min_removal_amount_illegal": "The minimum number of co-signatories needed for removal must be a number",
    "min_removal_amount_less_than_0": "The minimum number of co-signatories needed for removal cannot be smaller than 1",
    "min_removal_delta": "Min. Removal Delta",
    "mnemonic_backup_options_copy_desc": "Copy the mnemonic words and keep them in a safe place.",
    "mnemonic_backup_options_download_desc": "Download QR Code encrypted with your password. This QR Code can be used to import your accounts in different wallets (e. g. Mobile Wallet)",
    "mnemonic_copy": "Copy",
    "mnemonic_generation_error": "Something went wrong when generating your profile seed.",
    "mnemonic_inconsistency": "Mnemonic is not correct",
    "mnemonic_input_error": "Mnemonic input error",
    "mnemonic_phrase": "Mnemonic Passphrase",
    "mnemonic_qr_action_desc": "Click continue to set imported Mnemonic Words to the text area.",
    "modal_account_unlock_title": "Unlock your account",
    "modal_title_backup_mnemonic_display": "Display Mnemonic Passphrase",
    "modal_title_backup_mnemonic_qrcode": "Export Mnemonic QR Code",
    "modal_title_backup_transaction": "Export Transactions",
    "modal_title_debug_console": "Diagnostic Console",
    "modal_title_enter_account_name": "Configure your new account",
    "modal_title_extend_namespace_duration": "Extend namespace duration",
    "modal_title_link_alias": "Create an alias",
    "modal_title_mosaic_supply_change": "Modify mosaic supply",
    "modal_title_transaction_confirmation": "Sign a transaction",
    "modal_title_transaction_details": "Details about a transaction",
    "modal_title_unlink_alias": "Unlink alias from namespace",
    "more_access_tool_is_working": "More authentication tools are being worked on...",
    "mosaic": "Mosaic",
    "mosaic_alias_not_exist": "Mosaic alias does not exist",
    "mosaic_describe_text": "A mosaic could be a token, but it could also be a collection of more specialized assets such as reward points, company shares, signatures, status flags, votes or even currencies.",
    "mosaic_expired": "Expired",
    "mosaic_hex_format_error": "Mosaic hexadecimal format error",
    "mosaic_id": "Mosaic id",
    "mosaic_name_can_not_be_null": "Mosaic name cannot be null/empty",
    "mosaic_not_set": "Select a mosaic",
    "mosaics_list": "Mosaics List",
    "move_your_mouse": "Please move your mouse to improve randomness when generating the mnemonic passphrase",
    "multisig_accounts_can_not_send_a_transaction_by_themselves": "Multi-signature accounts cannot initiate transactions. Please, use co-signatories accounts.",
    "namespace": "Namespace",
    "namespace_and_sub_namespace": "Namespaces and Sub-namespaces",
    "namespace_can_only_contain_numbers_letters_and_other": "A namespace name can only contain 0-9, A-Za-z, _ and - characters",
    "namespace_cannot_be_a_null_or_empty_string": "The namespace name cannot be an empty string",
    "namespace_cannot_use_forbidden_words": "This namespace name is protected and cannot be used",
    "namespace_definition": "A namespace starts with a name that you choose, similar to an internet domain name.",
    "namespace_description": "Namespace description",
    "namespace_duration_tip_1": "The duration is calculated in blocks, one block is 15 seconds, one block = 1XYM, and the maximum period is 365 days.",
    "namespace_must_start_with_a_letter": "A namespace name must start with a lowercase character",
    "namespace_name": "Namespace name",
    "namespace_name_constraint": "The name must be unique in the network, and may have a maximum length of 64 characters, and the allowed characters are a, b, c, …, z, 0, 1, 2, …, 9, _ , -.",
    "namespace_tips_key_1": "1. The name must be unique in the network, and may have a maximum length of 64 characters. Accepted characters include:",
    "namespace_tips_key_2": "2. Following characters are not accepted:",
    "namespace_tips_key_3": "3. The namespace can be defined as up to three levels deep.",
    "namespace_tips_value_1": "a, b, c, …, z, 0, 1, 2, …, 9, _ , -",
    "namespace_tips_value_2": "nem, user, account, org, com, biz, net, edu, mil, gov , info.",
    "network_settings": "Network settings",
    "network_type": "Network type",
    "network_type_invalid": "Network types do not match",
    "new_password_label": "Password",
    "news": "News",
    "news_read_more": "Read more",
    "next": "Next",
    "no_confirmed_transactions": "There are currently no confirmed transactions",
    "no_data_mosaics": "No mosaics were found for this account",
    "no_data_namespace_tips": "You do not have a namespace, please create one first",
    "no_data_namespaces": "No namespaces were found for this account",
    "no_data_transactions": "No transactions were found for this account",
    "no_mnemonic": "No mnemonic",
    "no_network_currency_alert": "The wallet could not load data about the network currency (eg. symbol:xym), please connect to a valid node.",
    "no_partial_transactions": "There are currently no partial transactions",
    "no_profiles_in_database": "No profile in the wallet database",
    "no_unconfirmed_transactions": "There are currently no unconfirmed transactions",
    "node_connection_failed": "Node connection failed",
    "node_connection_succeeded": "Node connection succeeded",
    "node_exists_error": "The added node already exists",
    "node_list": "List of nodes",
    "node_not_available_please_check_your_node_or_network_settings": "Node is not available. Please check your node or network settings.",
    "node_url": "Node url",
    "not_yet_open": "Not yet open",
    "notes_should_not_exceed_25_character": "Notes should not exceed 25 characters",
    "notification_new_aggregate_bonded": "A new aggregate partial transaction has been announced",
    "notification_new_cosignature": "An aggregate transaction has been co-signed",
    "notification_new_transaction_confirmed": "New transaction confirmed",
    "notification_new_unconfirmed_transaction": "New unconfirmed transaction",
    "offline_storage": "Offline storage",
    "operation_failed": "Request Failed",
    "option_child_account": "I want to create a child account for my profile",
    "option_link_address": "Link an address",
    "option_link_mosaic": "Link a mosaic",
    "option_privatekey_account": "I want to import an existing account private key",
    "option_root_namespace": "Root Namespace",
    "option_sub_namespace": "Sub-namespace",
    "page_title_account_actions": "Actions",
    "page_title_account_backup": "Profile Backup",
    "page_title_account_details": "Account Information",
    "page_title_account_harvesting": "Harvesting",
    "page_title_dashboard": "Dashboard",
    "page_title_harvesting": "Harvesting",
    "page_title_invoice": "Invoice",
    "page_title_mosaics": "Owned mosaics",
    "page_title_mosaics_create": "Create new mosaics",
    "page_title_multisig_convert": "Convert an account",
    "page_title_multisig_cosign": "Sign transactions",
    "page_title_multisig_manage": "Manage multi-signature",
    "page_title_namespaces": "Owned namespaces",
    "page_title_namespaces_create": "Create new namespaces",
    "page_title_settings_about": "About",
    "page_title_settings_diagnostic": "Diagnostic",
    "page_title_settings_general": "General settings",
    "page_title_settings_password": "Profile password",
    "page_title_transfer": "Transfer",
    "paid_fee": "paid fee",
    "parent_namespace": "Parent Namespace",
    "password": "Password",
    "password_error": "This password is incorrect",
    "password_hint": "Hint",
    "password_is_invalid": "The password must contain a minimum of 8 characters with alphabet letters and numbers.",
    "passwords_not_matching": "Passwords do not match",
    "peer_tip": "You can use the {setting} page for node management or to configure a new network",
    "peers_number": "Peers number",
    "phishing_warning": "Beware of phishing! This program will not ask you to enter your mnemonic except when restoring a profile from scratch.",
    "placeholder_address": "Enter an address",
    "placeholder_address_or_alias": "Enter address or alias (e.g., nem.foundation)",
    "placeholder_address_or_public_key": "Address or public key",
    "placeholder_transaction_uri": "Enter a valid transaction URI",
    "please_accurately_copy_the_safety_backup_mnemonic": "Please accurately copy the safety backup mnemonic",
    "please_backup_mnemonic_passphrase": "Make sure to create a backup copy of the mnemonic passphrase. You will need this backup when trying to recover your profile.",
    "please_backup_mnemonic_passphrase_title": "Create a backup!",
    "please_click_on_the_mnemonic_in_order_to_confirm_that_you_are_backing_up_correctly": "Please click on the mnemonic in order to confirm that you are backing up correctly.",
    "please_enter_a_correct_number": "Please enter a valid number",
    "please_enter_a_custom_nod_address": "Enter a custom node URL",
    "please_enter_a_mnemonic_to_ensure_that_the_mnemonic_is_correct": "Please enter a mnemonic to ensure that it is correct",
    "please_enter_notes": "Enter a message",
    "please_enter_your_account_password": "Enter your profile password",
    "please_enter_your_new_password_again": "Please enter your profile password again",
    "please_enter_your_password_again": "Please enter your password again",
    "please_set_your_account_password": "Please set your account password",
    "point_null_error": "Node null error",
    "preview_and_action": "Preview & Action",
    "previous": "Previous",
    "private_key": "Private Key",
    "private_key_invalid_error": "This private key is invalid.",
    "profile_creation_description": "Before you start using this software, you need to create a profile name and password. The password will be used to secure the access to your profile.",
    "profile_description": "Profile description",
    "profile_description_tips1": "Before you start using this software, you need to create a profile name and password. This wallet software leverages the power of hierarchical deterministic wallets (HD-Wallets)",
    "profile_description_tips2": "The password will be used to secure the access to your profile, it is used to encrypt your mnemonic passphrase. Multiple addresses can be managed under one profile and you can switch between profiles on the startup page.",
    "profile_description_tips3": "Please, backup both your password and 24-words mnemonic passphrase.",
    "profile_import": "Profile import",
    "profile_name": "Profile name",
    "profile_name_already_exists": "Profile name already taken",
    "profile_name_error": "Invalid profile name",
    "profile_not_matching_network_option_1": "Logout and change profile",
    "profile_not_matching_network_option_2": "Create new profile",
    "profile_not_matching_network_option_3": "Close and switch network",
    "profile_not_matching_network_warning_message": "Your profile's network does not match the current network. Please select one of the following options to resolve the issue.",
    "profile_not_matching_network_warning_title": "Warning",
    "program_description": "This program is designed based on Symbol blockchain, an open source digital asset management system. Access the Symbol network, create profile manage accounts, assets and more...",
    "public_key": "Public Key",
    "public_key_addition": "Added cosigner",
    "public_key_deletion": "Removed cosigner",
    "public_key_invalid": "This public key is invalid",
    "qr_code": "QR Code",
    "qr_code_generation_failed": "QR code generation failed",
    "qrcode_detail_item_address": "Address",
    "qrcode_detail_item_contact_name": "Contact Name",
    "qrcode_detail_item_mnemonic_passphrase": "Mnemonic Passphrase",
    "qrcode_detail_item_network_type": "Network Type",
    "qrcode_detail_item_type": "QR Code Type",
    "qrcode_detail_item_type_contactqr": "Address",
    "qrcode_detail_item_type_cosignatureqr": "Request Cosignature",
    "qrcode_detail_item_type_mnemonicqr": "Import Mnemonic",
    "qrcode_detail_item_type_transactionqr": "Invoice",
    "qrcode_password_info": "Uploaded QR Code is password protected. Please enter your password at the time this QR Code was generated.",
    "recipient": "Recipient",
    "refresh": "Refresh",
    "refresh_failed": "An error ocurred. Please, try again later.",
    "refresh_success": "Updated successfully",
    "refresh_too_fast_warning": "Too many network requests have been executed. Please, try again later.",
    "register": "Sign up",
    "relative": "relative",
    "removal_greater_than_cosignatories": "There are {delta} more required cosignatories for min removal than available cosignatories. Please add cosignatories or reduce the min. removal number.",
    "removal_or_approval_is_zero": "Minimum approval and/or minimum removal cannot be set to 0 while there are {delta} cosignatories in your list",
    "repeat_password_label": "Confirm your password",
    "reset": "Reset",
    "resolving_address": "Resolving address {address}...",
    "restore_mnemonic": "Restore mnemonic passphrase",
    "restrictable": "Restrictable",
    "rules_describe": "Rules description",
    "safe_storage_tips": "Safe storage tips=>",
    "save_backups": "Make multiple copies offline and save backups in multiple locations. Use encrypted disks for digital backups.",
    "scenes_to_be_used": "Use cases",
    "see_transactions_other_account": "Display multi-signature account transactions",
    "seed_account_can_not_be_more_than_10": "You have reached the limit of accounts that can be created in one profile. Please use a different profile to create a new account.",
    "select_a_namespace": "Select a namespace",
    "select_a_profile": "Select a profile",
    "select_accounts": "Select Accounts",
    "select_all": "Check all",
    "send": "Send",
    "sender": "From",
    "set_account_name": "Enter a profile name",
    "set_default_explorer": "The url entered is not valid, a default url has been set for you.",
    "set_explorer_link": "Explorer URL",
    "set_network_type": "Select a network type",
    "SET_UP": "Node selection",
    "settings_tab_about": "About",
    "settings_tab_general": "General settings",
    "settings_tab_network": "Network settings",
    "settings_tab_password": "Profile password",
    "show_expired_mosaics": "Show expired mosaics",
    "show_expired_namespaces": "Show expired namespaces",
    "show_wizard": "Show wizard",
    "sidebar_item_accounts": "Accounts",
    "sidebar_item_community": "News",
    "sidebar_item_home": "Home",
    "sidebar_item_mosaics": "Mosaics",
    "sidebar_item_multisig": "Multisig",
    "sidebar_item_namespaces": "Namespaces",
    "sidebar_item_settings": "Settings",
    "signature": "Signature",
    "signer_public_key": "Signer public key",
    "skip": "Skip",
    "speed": "Speed",
    "start_finalization_epoch": "Start Finalization Epoch",
    "status": "Status",
    "success_account_unlocked": "Account unlocked successfully",
    "success_password_changed": "Your password was updated successfully. You will now be logged out.",
    "success_settings_updated": "Your settings have been updated successfully.",
    "success_transaction_partial_announced": "Partial transaction announced successfully.",
    "success_transactions_announced": "Transaction announced successfully.",
    "success_transactions_signed": "Transaction(s) signed successfully.",
    "successful_copy": "Copied to clipboard!",
    "successful_operation": "Request succeeded",
    "supply": "Supply",
    "supply_can_not_less_than_0": "Supply cannot be less than 0",
    "table_header_alias_identifier": "Alias",
    "table_header_alias_type": "Alias type",
    "table_header_balance": "Balance",
    "table_header_divisibility": "Divisibility",
    "table_header_expiration": "Expiration",
    "table_header_expired": "Expired",
    "table_header_hex_id": "Id",
    "table_header_name": "Name",
    "table_header_restrictable": "Restrictable",
    "table_header_supply": "Supply",
    "table_header_supply_mutable": "Supply mutable",
    "table_header_transferable": "Transferable",
    "the_backup_is_wrong": "Your mnemonic words backup is invalid. Please, carefully select the words in the correct order.",
    "the_mnemonic_order_is_correct_and_the_backup_is_successful": "The mnemonic order is correct and the backup is successful.",
    "the_mosaic_to_be_sent_is_empty": "The mosaics list cannot be empty",
    "the_root_namespace_cannot_be_longer_than_16": "A root namespace name cannot be longer than 16 characters",
    "the_sub_namespace_cannot_be_longer_than_16": "A sub-namespace name cannot be longer than 64 characters",
    "the_value_of_duration_cannot_be_less_than_1": "The duration must be greater than or equal to 1",
    "tips": "Tips",
    "title": "Title",
    "to": "To",
    "to_symbol": "to Symbol",
    "too_many_cosignatories": "The maximum number of cosignatories is {maxCosignatoriesPerAccount}, please remove {delta} cosignatories",
    "top_window_console": "Console",
    "transaction_descriptor_16705": "Aggregate complete",
    "transaction_descriptor_16707": "Voting Key Link",
    "transaction_descriptor_16708": "Account metadata",
    "transaction_descriptor_16712": "Funds lock",
    "transaction_descriptor_16716": "Account link",
    "transaction_descriptor_16717": "Mosaic definition",
    "transaction_descriptor_16718": "Namespace registration",
    "transaction_descriptor_16720": "Account address restriction",
    "transaction_descriptor_16721": "Mosaic global restriction",
    "transaction_descriptor_16722": "Secret lock",
    "transaction_descriptor_16724": "Transfer",
    "transaction_descriptor_16725": "Multisig account modification",
    "transaction_descriptor_16961": "Aggregate bonded",
    "transaction_descriptor_16963": "Vrf Key Link",
    "transaction_descriptor_16964": "Mosaic metadata",
    "transaction_descriptor_16972": "Link node key",
    "transaction_descriptor_16973": "Mosaic supply change",
    "transaction_descriptor_16974": "Address alias",
    "transaction_descriptor_16976": "Account mosaic restriction",
    "transaction_descriptor_16977": "Mosaic address restriction",
    "transaction_descriptor_16978": "Secret proof",
    "transaction_descriptor_17220": "Namespace metadata",
    "transaction_descriptor_17230": "Mosaic alias",
    "transaction_descriptor_17232": "Account operation restriction",
    "transaction_details": "Transaction details",
    "transaction_expired": "Transaction has expired",
    "transaction_has_cosignature": "Co-signatures received",
    "transaction_needs_cosignature": "Transaction awaiting co-signature(s)",
    "transaction_needs_cosignature_explain": "This multisignature transaction needs multiple parties to sign it before it is approved. Please enter your password and confirm to add your signature.",
    "transaction_needs_cosignature_explain_signed": "This transaction needs multiple parties to approve by sending co-signature. You have already sent a co-signature for this transaction. Please, wait until other co-signatories approve. You can downlaod the QR Code and send to other co-signatories for them to sign their part easily.",
    "transaction_qr_action_desc": "Click continue to open the transfer page with these details.",
    "transaction_qr_code": "Transaction QR Code",
    "transaction_received_cosignature_explain": "Received the minimum required co-signatories",
    "transaction_status_confirmed": "Confirmed",
    "transaction_status_partial": "Partial",
    "transaction_status_unconfirmed": "Unconfirmed",
    "transaction_type": "Type",
    "transaction_uri": "Transaction URI",
    "transaction_uri_explanation": "URI representation of this transaction. You can copy this URI and send to another device or someone else to import and sign the transaction.",
    "transactions": "Transactions",
    "transactions_tab_confirmed": "Confirmed",
    "transactions_tab_partial": "Partial",
    "transactions_tab_unconfirmed": "Unconfirmed",
    "transfer_target": "To",
    "transferable": "Transferable",
    "transmittable": "Transferable",
    "uncheck_all": "Un-check all",
    "unconfirmed": "Unconfirmed",
    "unconfirmed_transaction": "Unconfirmed",
    "unknown": "Unknown",
    "unlink": "Unlink",
    "unlink_namespace_from": "Unlink {aliasTarget} from {namespaceName}",
    "update_completed": "Update completed",
    "upload_file_message": "Click or drag a file here to upload",
    "upload_qr_code": "Upload QR Code",
    "upload_qr_code_explanation": "Upload or scan one of the following valid QR Codes. Once QR Code type is identifed you will be taken to the next step for the relevant action.",
    "upload_qr_code_explanation_type_contactqr": "Address QR Code",
    "upload_qr_code_explanation_type_cosignatureqr": "Cosignature QR Code",
    "upload_qr_code_explanation_type_mnemonicqr": "Mnemonic QR Code",
    "upload_qr_code_explanation_type_transactionqr": "Invoice QR Code",
    "upload_qr_code_invalid_type_message": "Type({type}) not allowed! Try again with a valid QR Code listed above.",
    "upload_qr_tab_scan": "Scan via Camera",
    "upload_qr_tab_upload_image": "Upload Image",
    "uploaded_qr_code": "Uploaded QR Code",
    "use_paper_and_pen_to_correctly_copy_mnemonics": "Use a pen and paper to correctly copy mnemonics. If you lose access via this install/device your mnemonic will restore your accounts and assets.",
    "used_to_bind_a_account_address": "Used to give friendly names to accounts or mosaics",
    "user_aborted_transaction_confirmation": "User aborted transaction confirmation",
    "value_too_big": "This value is too big",
    "variable_supply": "Supply mutable",
    "verify_backup_mnemonics": "Next",
    "verify_Mnemonic_phrase": "Verify Mnemonic Phrase",
    "verify_mnemonics": "Verify mnemonic words backup",
    "warning_already_a_cosignatory": "This account is already a cosignatory!",
    "welcome": "Welcome",
    "version": "Version",
    "web_wallet_warning": "This WEB wallet is for demonstration use only!",
    "word": "Word",
    "x_seconds": "{seconds}s."
}

'''
'''--- src/language/index.ts ---
// external dependencies
import VueI18n from 'vue-i18n';
import Vue from 'vue';

// internal translation messages
import zh_CN from '@/language/zh-CN.json';
import en_US from '@/language/en-US.json';
import ja_JP from '@/language/ja-JP.json';

// external translation messages
import enValidationMessages from 'vee-validate/dist/locale/en.json';
import zh_CNValidationMessages from 'vee-validate/dist/locale/zh_CN.json';
import jaValidationMessages from 'vee-validate/dist/locale/ja.json';

const messages = {
    'en-US': { ...en_US, validation: enValidationMessages.messages },
    'zh-CN': { ...zh_CN, validation: zh_CNValidationMessages.messages },
    'ja-JP': { ...ja_JP, validation: jaValidationMessages.messages },
};

const navLang = navigator.language;
const localLang = navLang === 'zh-CN' || navLang === 'en-US' ? navLang : false;
const lang = window.localStorage.getItem('locale') || localLang || 'en-US';

Vue.use(VueI18n);

const i18n = new VueI18n({
    locale: lang,
    messages,
    silentTranslationWarn: true,
});

// @ts-ignore
Vue.use({ i18n: (key, value) => i18n.t(key, value) });
window.localStorage.setItem('locale', lang);

export default i18n;

'''
'''--- src/language/ja-JP.json ---
{
    "about_app_release": "リリース",
    "about_app_url": "ホームページ",
    "about_default_node": "デフォルトノード",
    "about_dependencies": "依存関係",
    "about_generation_hash": "Generationハッシュ",
    "about_network": "ネットワーク",
    "about_network_type": "ネットワークタイプ",
    "about_rxjs_version": "RxJs Library",
    "about_sdk_version": "Symbol SDK",
    "about_typescript_version": "Typescript",
    "about_vue_version": "Vue Framework",
    "absolute": "絶対",
    "access_ledger": "Ledger にアクセス",
    "access_my_profile": "プロファイルにアクセス",
    "access_trezor": "Trezor にアクセス",
    "access_trezor_account": "Trezor ウォレットにアクセス",
    "access_your_ledger_account": "Ledger ウォレットにアクセスする",
    "account_address": "アドレス",
    "ACCOUNT_LINK": "アカウントリンク",
    "account_management": "アカウント",
    "account_name": "名前",
    "account_name_input_error": "アカウント名入力エラー",
    "account_network_does_not_match_current_network_type": "プロファイルのネットワークが接続されたノードのネットワークと異なります。新しく作成してください",
    "account_network_type_does_not_match_current_network_type": "プロファイルのネットワークタイプが接続ノードのネットワークタイプに一致しません",
    "account_public_key": "公開鍵",
    "accounts": "アカウント",
    "accounts_backup_keystore_explain_p1": "右側のボタンで暗号化済みキーファイルをダウンロードし、秘密鍵と公開鍵をバックアップします。",
    "accounts_backup_keystore_explain_p2": "プロファイルのロック解除を求められるでしょう。プロファイルのロックを解除すると、ダウンロードが自動的に開始されます。",
    "accounts_backup_mnemonic_explain_p1": "右側のボタンで画面に24単語を表示して、ニーモニックパス語群をバックアップします。",
    "accounts_backup_mnemonic_explain_p2": "プロファイルのロック解除を求められるでしょう。プロファイルのロックを解除すると、ニーモニックパス語群が表示されます。",
    "accounts_backup_mnemonic_explain_p3": "次の {num} 単語を安全な場所にバックアップしてください。これらの {num} 語はニーモニックパス語群を表し、後でプロファイルとその子アカウントをインポートするために使用できます。",
    "accounts_backup_mnemonic_explain_qrcode": "次のQRコードを安全な場所へバックアップしてください。このQRコードはプロファイルとその子アカウントのインポートに使用します。",
    "accounts_backup_qrcode_explain_p1": "右側のボタンからQRコードをダウンロードして、ニーモニックパス語群をバックアップします。",
    "accounts_backup_qrcode_explain_p2": "プロファイルのロック解除を求められるでしょう。プロファイルのロックを解除すると、ダウンロードが自動的に開始されます。",
    "accounts_backup_tile_description": "ウォレットのバックアップ",
    "accounts_backup_tile_keystore": "キーのダウンロード",
    "accounts_backup_tile_keystore_desc": "キーファイルのダウンロード",
    "accounts_backup_tile_mnemonic": "ニーモニックを表示",
    "accounts_backup_tile_mnemonic_desc": "パス語群の表示",
    "accounts_backup_tile_title": "ニーモニックQRコード",
    "accounts_backup_title": "バックアップ＆セキュリティ",
    "accounts_backup_title_keystore": "キーのダウンロード",
    "accounts_backup_title_mnemonic": "ニーモニックパス語群",
    "accounts_backup_title_qrcode": "ニーモニックQRコードの暗号化",
    "accounts_backup_transactions": "トランザクションリストをCSVファイルにエクスポートする",
    "accounts_backup_transactions_description": "すべての取引情報をダウンロードしてローカルに保存し、インターネットに接続していない場合でも表示します",
    "accounts_change_password_description": "パスワードを変更",
    "accounts_change_password_title": "パスワードを変更",
    "accounts_create_invoice": "インボイスの作成",
    "accounts_flags_default_account": "デフォルト",
    "accounts_flags_default_account_explain": "これはデフォルトアカウントです",
    "accounts_flags_known_by_network": "Broadcasted Account",
    "accounts_flags_multisig": "マルチシグネチャ",
    "accounts_flags_multisig_explain": "これはマルチシグアカウントです",
    "accounts_flags_simple": "シンプルアカウント",
    "accounts_flags_simple_explain": "これはシンプルアカウントです",
    "accounts_flags_unknown_by_network": "プライベートアカウント",
    "accounts_harvesting_remote_explain_p1": "右側のボタンを使用してハーベスト用のリモートアカウントを構成します。これにより、後でアカウントがデリゲートハーベストを有効化できるようになります。",
    "accounts_harvesting_remote_explain_p2": "アカウントのロックを解除するよう求められます。その後、リモートアカウントを設定するためのオプションが表示されます。",
    "accounts_harvesting_request_explain_p1": "右側のボタンを使用して、ハーベスティング委任リクエストを送信します。ノードによって承認された場合、アカウントのハーベスティングが有効になります。",
    "accounts_harvesting_request_explain_p2": "アカウントのロックを解除するよう求められ、ピアノードにハーベスティング委任リクエストを送信するためのオプションが表示されます。",
    "accounts_harvesting_tile_remote": "リモートアカウント",
    "accounts_harvesting_tile_remote_description": "インポータンス転送",
    "accounts_harvesting_tile_request": "デリゲーションリクエスト",
    "accounts_harvesting_tile_request_description": "ハーベスティングの開始",
    "accounts_harvesting_title_remote": "リモートアカウントのセットアップ",
    "accounts_harvesting_title_request": "デリゲーションリクエストの送信",
    "accounts_label_flags": "フラグ",
    "accounts_links_explorer": "エクスプローラ",
    "accounts_links_faucet": "フォーセット",
    "accounts_setup_harvesting_description": "デリゲートハーベスティングを設定する",
    "accounts_setup_harvesting_title": "ハーベストのセットアップ",
    "accounts_share_qr_code": "詳細を共有する",
    "accounts_subtitle_account_links": "便利なリンク",
    "accounts_view_dashboard": "ダッシュボードで見る",
    "accounts_view_explorer_description": "エクスプローラを開く",
    "accounts_view_multisig": "マルチシグネチャ",
    "accounts_view_open_faucet": "フォーセットを開く",
    "action": "アクション",
    "action_label_alias_link": "リンク",
    "action_label_alias_unlink": "アンリンク",
    "action_label_extend_duration": "期限延長",
    "action_label_modify_supply": "供給量変更",
    "add_mosaic": "モザイク追加",
    "address": "アドレス",
    "address_alias_not_exist": "アドレスエイリアスは存在しません",
    "address_format_error": "アドレスフォーマットエラー",
    "address_invalid": "アドレスは無効です",
    "address_qr_code": "アドレスQRコード",
    "address_to_interact_with": "疎通するアドレス",
    "address_unknown": "このアドレスをネットワークで見つけられません。代わりに公開鍵で試してみてください。",
    "address_unknown_by_network": "このアカウントは最初のトランザクションを送信するまでネットワークに認識されません。",
    "alias": "エイリアス",
    "alias_name_format_error": "エイリアスHEXフォーマットエラー",
    "aliases": "エイリアス",
    "all_nodes_cannot_be_deleted": "ノードすべてを削除できません",
    "amount": "量",
    "amount_asset": "総量",
    "amount_can_not_be_less_than_0": "総量は0以下にできません",
    "any_information_cannot_be_empty": "このフィールドは空にできません。入力を確認してください。",
    "approval_greater_than_cosignatories": "最小承認数に必要な連署者は {delta} より多い有効な連署者が必要です。署名者を追加するか、最小承認数を減らしてください。",
    "article_by": "{creator} 著",
    "assets": "アセット",
    "at_block": "{blockNumber} ブロック",
    "automatically_generated_by_node_url": "ノードURLより自動生成",
    "back": "戻る",
    "backup_mnemonic": "ニーモニックのバックアップ",
    "backup_mnemonic_phrase": "ニーモニック語群のバックアップ",
    "backup_mnemonic_words": "ニーモニック単語のバックアップ",
    "balance": "残高",
    "block": "ブロック",
    "block_height": "ブロック高",
    "button_add_account": "アカウント追加",
    "button_download_qr": "ダウンロード",
    "chain_height": "ブロック",
    "choose_network": "ネットワーク選択",
    "choose_profile_name_and_password": "アカウントとパスワードの選択",
    "clear_staged_transactions": "すべてのトランザクションを破棄",
    "click_to_cosign": "クリックして署名",
    "click_to_load": "クリックしてデータを読み込む",
    "close": "閉じる",
    "co_signers_amount_less_than_0": "マルチシグアカウントには最低1つの連署者が必要です。",
    "confirm": "確認",
    "confirm_backup": "バックアップの確認",
    "CONFIRMATION": "承認",
    "confirmations_height": "ブロック高",
    "confirmed_transaction": "承認済",
    "confirmPassword": "パスワードの確認",
    "contact_qr_action_desc": "この受信者に転送するには、[続行]をクリックして転送ページにリダイレクトします。",
    "continue": "継続する",
    "copy_failed": "コピーに失敗",
    "copy_mnemonic": "ニーモニックをコピー",
    "cosignature_added": "連署名を受信",
    "cosignature_qr_action_desc": "取引の詳細ページに進み、署名をしてください。",
    "create_a_new_account": "新しいプロファイルを作成",
    "create_a_new_profile": "新しいプロファイルを作成",
    "create_lock_check_pw_remind": "2つのパスワードが一致しません",
    "create_lock_pw_remind": "パスワード設定エラー",
    "create_lock_pw_txt_remind": "パスワードヒントのエラー",
    "create_mnemonic": "ニーモニックの作成",
    "create_profile": "新しいプロファイルを作成",
    "create_sub_namespace": "サブネームスペース作成",
    "creation_successful": "おめでとうございます、プロファイルは正常に作成されました！",
    "current_endpoint": "現在のノード",
    "current_network": "現在のネットワーク",
    "current_profile_network": "現在のプロファイルネットワーク",
    "current_speed": "現在のスピード",
    "current_validity": "有効期限",
    "deadline": "期限",
    "decrease": "減少",
    "define": "登録",
    "delta": "変化数",
    "description": "説明",
    "direction": "方向",
    "display_mnemonic": "ニーモニック単語を表示",
    "display_mnemonic_qr_code": "ニーモニックQRコードを表示",
    "divisibility": "可分性",
    "divisibility_can_not_less_than_0": "可分性は0以下にはできません",
    "divisibility_can_not_more_than_6": "可分性は6より大きくできません",
    "divisibility_invalid": "可分性が無効です [0-6]",
    "do_not_disclose": "この情報は秘匿してください。ニーモニックパス語群を他人と共有した場合、アセットは危機にさらされる可能性があります。",
    "do_not_disclose_title": "これを非公開にしてください！",
    "do_not_share_mnemonics_with_anyone": "ニーモニックは誰にも共有してはいけません",
    "download": "ダウンロード",
    "duration": "期間",
    "duration_can_not_less_than_0": "期間は0以下にはできません",
    "duration_can_not_more_than_1_years": "期間は1年以上にはできません",
    "duration_can_not_more_than_10_years": "期間は10年以上にはできません",
    "duration_permanent": "無期限",
    "end_finalization_epoch": "ファイナライズエポックの終了",
    "endpoint": "ノード",
    "enter_your_private_key": "秘密鍵を入力してください",
    "error_account_name_already_exists": "アカウント名は既に存在します。一意なアカウント名を入力してください。",
    "error_delete_all_peers": "すべてのノードは削除できません",
    "error_incorrect_field": "{_field_} フィールドは不正です。",
    "error_incorrect_url": "有効なURLではありません",
    "error_invalid_password": "パスワードは無効です",
    "error_new_namespace_duration_max_value": "新しいネームスペース期間は {maxValue} より大きくできません。",
    "error_new_password_format": "パスワードは最低一つ以上の文字と数字を含めなければなりません。",
    "error_peer_connection_went_wrong": "ノード {peerUrl} への接続はタイムアウトしました",
    "error_peer_unreachable": "到達できないノードです。",
    "error_too_many_seed_accounts": "{maxSeedAccountsNumber} 以上の子アカウントを作ることはできません",
    "estimated_period_of_validity": "有効期間の見積もり",
    "estimated_rental_fee": "推定レンタル料金",
    "existing_profile": "既にプロファイルをお持ちですか？",
    "expired_for": "期限切れ",
    "expires_in": "有効期限",
    "explorer_url": "エクスプローラURL",
    "export_mnemonic": "ニーモニックのエクスポート",
    "fee": "手数料",
    "fee_can_not_be_less_than_0": "手数料は0以下にできません",
    "fee_speed_fast": "早い",
    "fee_speed_fastest": "最も早い",
    "fee_speed_free": "手数料なし",
    "fee_speed_highest": "最速",
    "fee_speed_median": "推奨",
    "fee_speed_normal": "通常",
    "fee_speed_slow": "遅い",
    "fee_speed_slowest": "最も遅い",
    "filter_peers": "ピアフィルタ",
    "finish": "完了",
    "finished": "終了",
    "flags_divisibility": "モザイクを分割できる小数点以下の桁数を指定します。可分性は0から6の範囲でなければなりません。",
    "flags_duration_permanent": "Trueの場合、モザイクは無期限になります",
    "flags_restrictable": "Trueの場合、モザイク所有者はカスタム制限を設定できます",
    "flags_supply": "総供給量は 0～9,000,000,000,000,000 単位の範囲でなければなりません。",
    "flags_transferable": "Trueの場合、任意のアカウント間で転送できます",
    "flags_variable_supply": "Trueの場合、モザイク供給量は変更できます",
    "form_label_account_to_be_converted": "変換されるアカウント",
    "form_label_add_cosignatory": "連署者を追加",
    "form_label_additional_duration": "追加期間",
    "form_label_alias_type": "エイリアスタイプ",
    "form_label_choose_namespace": "ネームスペースの選択",
    "form_label_cosignatory_modifications": "連署者の変更",
    "form_label_current_supply": "既存供給量",
    "form_label_default_account": "優先アカウント",
    "form_label_default_max_fee": "デフォルト最大手数料",
    "form_label_description_min_approval": "複数の署名をするため、または署名者を追加する最小署名数",
    "form_label_description_min_removal": "連署者を削除するためには最小署名数が必要です",
    "form_label_duration": "期間",
    "form_label_language": "選択言語",
    "form_label_link_address": "アドレスにリンク",
    "form_label_link_mosaic": "モザイクにリンク",
    "form_label_min_approval": "最小承認者数",
    "form_label_min_removal": "最小削除承認者数",
    "form_label_multisig_account": "マルチシグアカウント",
    "form_label_multisig_accounts": "マルチシグアカウント",
    "form_label_multisig_current_info": "連署者",
    "form_label_multisig_operation_type": "操作タイプ",
    "form_label_namespace_name": "スペース名",
    "form_label_network_node_url": "ハーベスティングノードURLを入力 (例: http://localhost:3000)",
    "form_label_new_absolute_supply": "新しい絶対供給量",
    "form_label_new_account_name": "新しいアカウント名",
    "form_label_new_account_type": "アカウントタイプの選択",
    "form_label_new_cosignatories": "追加済み連署者",
    "form_label_new_expiration_time": "新しい期限切れ時間",
    "form_label_new_min_approval": "新しい最小承認者数",
    "form_label_new_min_removal": "新しい最小削除承認者数",
    "form_label_new_password": "新しいパスワードを入力",
    "form_label_new_password_confirm": "新しいパスワードを確認",
    "form_label_new_password_hint": "パスワードヒント",
    "form_label_new_supply": "新しい供給量",
    "form_label_parent_namespace": "親ネームスペース",
    "form_label_password": "パスワード",
    "form_label_private_key": "秘密鍵を入力してください",
    "form_label_registration_type": "ネームスペースタイプ",
    "form_label_remove_cosignatory": "連署者を削除",
    "form_label_removed_cosignatory": "署名者を削除",
    "form_label_removed_cosignatory_tooltip": "トランザクション内で許可される署名者の削除は1つだけです",
    "form_label_supply_delta": "供給変更量",
    "form_label_supply_direction": "供給変更方向",
    "from_qr_code": "QRコードから",
    "from_to_action": "From/To",
    "generate_a_new_profile": "新しいプロファイルを生成する",
    "generate_entropy_increase_success": "ニーモニックパス語群の生成に成功しました。",
    "generate_mnemonic": "ニーモニックの生成",
    "generating_mnemonic": "次へ",
    "getting_a_mnemonic_equals_ownership_of_a_account_asset": "このニーモニックパス語群はプロファイルが持つすべてのアセットの権限を取得するのに十分です。",
    "go_to_login": "クリックしてログイン",
    "harvesting": "ハーベスティング",
    "harvesting_confirmation_description_1": "トランザクション詳細は以下に表示されます。パスワードを入力し、次へ ボタンを押下すると、これらのトランザクションはネットワークにアナウンスされます。",
    "harvesting_confirmation_description_2": "ネットワークノードがハーベスティング中かつデリゲートリクエストを受け入れる場合、ハーベスティングは自動的にアクティブになります。",
    "harvesting_create_remote_account": "以前にこれを行っていない場合は、まずリモートアカウントを設定する必要があります。",
    "harvesting_delegation_description_1": "ハーベスティングを開始するアカウントを選択し、デリゲートリクエストを送信するハーベスティングノードを選択します。",
    "harvesting_delegation_description_2": "次に、トランザクションに含める最大手数料を選択します。デリゲートリクエストは複数のノードに送信できます。",
    "harvesting_node_get_node_info": "ノード情報の取得",
    "harvesting_node_not_eligible": "ハーベスティングには不適格です",
    "harvesting_remote_account": "リモートアカウント",
    "harvesting_remote_account_creation_successful_1": "リモートアカウントが正常に作成されました。秘密鍵は安全に保管してください。",
    "harvesting_remote_account_description_1": "セキュリティ上の理由から、デリゲートハーベスティングのために、リモートアカウント (プロキシ) を作成します。",
    "harvesting_remote_account_description_3": "リモートアカウントを作成するためにパスワードを入力して \"Start\" をクリックしてください",
    "harvesting_remote_linked_description_1": "現在、あなたのアカウントは、デリゲートハーベスティングのために、次のリモートアカウント (プロキシ) にリンクされています。",
    "harvesting_remote_linked_description_2": "アカウント セクションで、このリモートアカウントからのアカウントリンクを解除できます。次へ をクリックして、選択したハーベスティングノードのデリゲートリクエストを構成します。",
    "harvesting_subtitle_confirmation": "概要",
    "harvesting_subtitle_delegation": "ノード選択",
    "harvesting_subtitle_overview": "概要",
    "hash_date": "ハッシュ/日付",
    "hd_account_path_error": "アドレスパスエラー",
    "id": "#",
    "if_you_need_to_back_up_your_mnemonics_again_you_can": "ニーモニックを再バックアップするには - 'プロファイルマネジメント - プロファイル詳細 - ニーモニックのエクスポート' で行います",
    "illegal_public_key_error": "公開鍵は無効です",
    "illegal_publicKey": "指定したアカウントの公開鍵は無効です",
    "import": "インポート",
    "import_mnemonic": "ニーモニックのインポート",
    "import_mnemonic_passphrase_create_profile": "ニーモニックパス語群をインポートしてアカウントを作成する",
    "import_private_key": "秘密鍵のインポート",
    "import_private_key_account_successfully": "おめでとうございます。秘密鍵アカウントが正常にインポートされました。",
    "import_private_key_account_successfully_title_tips": "現在のプロファイルは秘密鍵を使用して作成されています。他のアカウントを追加することはできません。快適な体験と旅をお楽しみください。",
    "import_private_key_description": "秘密鍵をインポートしてプロファイルを作成",
    "import_private_key_finalize_tip_text1": "1.秘密鍵は安全な場所にバックアップしてください。暗号化され、ローカルの現在のプロファイルの下にマウントされます。ニーモニックとは関係ありません。",
    "import_private_key_finalize_tip_text2": "2.プロファイルは独立した秘密鍵をいくつでもマウントできます。注意してください！",
    "import_private_key_input_tip1": "入力フィールドに秘密鍵を入力してください。秘密鍵が正しいことを確認してください。正しい秘密鍵を入力すると、対応する公開鍵とアドレスが入力ボックスの下部に表示されます。ネットワークに注意してくださいタイプ。",
    "import_private_key_profile_description_tip1": "このソフトウェアを使い始める前に、プロファイル名とパスワードを作成する必要があります。アカウント情報をローカルで暗号化するために使用されます。",
    "import_private_key_profile_description_tip2": "パスワードは、「転送」やトランザクション操作など、プロファイルへのアクセスを保護するために使用されます。",
    "import_qr_code": "QRコードをインポート",
    "import_successful": "おめでとうございます、プロファイルは正常にインポートされました！",
    "import_transaction_uri": "トランザクションURIをインポート",
    "importance": "インポータンス",
    "increase": "増加",
    "info_active_cosignatory_mode": "選択したトランザクション署名者はマルチシグアカウントです。",
    "info_connecting_peer": "ノード {peerUrl} に接続中...",
    "inner_transaction_hash": "内部トランザクションハッシュ",
    "input_here": "ここに入力",
    "input_mnemonic": "ニーモニックパス語群の入力",
    "input_mnemonic_tips": "ニーモニックパス語群の12または24単語をスペース区切りで入力します。ニーモニックパス語群はランダムに選択された12または24個の単語で構成されます。単語を設定するとアセットが復元されます。",
    "input_namespace_name": "ネームスペース名を入力",
    "invalid_namespace_or_mosaic_id": "モザイクIDまたは名前が無効です",
    "invalid_node": "無効なノード",
    "keep_it_in_a_safe_place_on_the_isolated_network_mnemonics": "安全な場所に保管してください。ニーモニックをメール、フォトアルバム、ソーシャルアプリケーションなどの共有またはリモート環境で共有や保存をしないでください。",
    "keystore_decryption_failed": "キーストアの復号に失敗",
    "label_add_cosignatory": "連署者を追加",
    "label_duration_unlimited": "Unlimited",
    "label_for_approvals": "トランザクション承認に必要な連署名",
    "label_for_removals": "連署者の削除に必要な連署名",
    "label_multisig_operation_conversion": "アカウントをマルチシグに変換中",
    "label_multisig_operation_modification": "アカウントマルチシグプロパティの変更",
    "label_of": "{min} / {max}",
    "label_postfix_multisig": "(マルチシグ)",
    "label_signed_by": "連署者の署名 =>",
    "latest_news_articles": "最新ニュース記事",
    "link": "リンク",
    "link_action": "リンクアクション",
    "linked_account_address": "リンクされたアカウントアドレス",
    "linked_public_key": "リンクされた公開鍵",
    "loading": "読込中…",
    "locked_mosaic": "ロック済みモザイク",
    "login": "ログイン",
    "low_fee_warning_message": "推奨料金未満の取引は受け入れられず、最終的には受け入れられない可能性があります",
    "max_approval_amount_more_than_10": "承認に必要な連署者の最大数は10を超えることはできません。",
    "max_decimal_number_error": "{_field_} には {maxDecimalNumber} 小数点以下の桁数を指定してください。",
    "max_fee": "最大手数料",
    "max_removal_amount_more_than_10": "削除に必要な連署者の最大数は 10 を超えることはできません。",
    "message": "メッセージ",
    "message_empty_cosignatories": "このアカウントには連署者がいません。",
    "min_approval_amount_illegal": "承認に必要な連署者の最小数は数字でなければなりません",
    "min_approval_amount_less_than_0": "承認に必要な連署者の最小数を1未満にできません",
    "min_approval_delta": "最小削除承認者変更数",
    "min_removal_amount_illegal": "削除に必要な連署者の最小数は数字でなければなりません",
    "min_removal_amount_less_than_0": "削除に必要な連署者の最小数を1より小さくすることはできません",
    "min_removal_delta": "最小削除承認者変更数",
    "mnemonic_backup_options_copy_desc": "ニーモニック単語をコピーして安全な場所に保管します。",
    "mnemonic_backup_options_download_desc": "パスワードで暗号化されたQRコードをダウンロードします。 このQRコードを使用して、アカウントをさまざまなウォレット（モバイルウォレットなど）にインポートできます。",
    "mnemonic_copy": "コピー",
    "mnemonic_generation_error": "プロファイルシードの生成に問題が発生しました。",
    "mnemonic_inconsistency": "ニーモニックが正しくありません",
    "mnemonic_input_error": "ニーモニックの入力エラー",
    "mnemonic_phrase": "ニーモニックパス語群",
    "mnemonic_qr_action_desc": "[続行]をクリックして、インポートされたニーモニックワードをテキスト領域に設定します。",
    "modal_account_unlock_title": "アカウントのアンロック",
    "modal_title_backup_mnemonic_display": "ニーモニックパス語群の表示",
    "modal_title_backup_mnemonic_qrcode": "ニーモニックQRコードのエクスポート",
    "modal_title_backup_transaction": "輸出取引",
    "modal_title_debug_console": "診断コンソール",
    "modal_title_enter_account_name": "新しいアカウントを設定する",
    "modal_title_extend_namespace_duration": "ネームスペース期限の延長",
    "modal_title_link_alias": "エイリアスの作成",
    "modal_title_mosaic_supply_change": "モザイク供給量変更",
    "modal_title_transaction_confirmation": "トランザクションに署名",
    "modal_title_transaction_details": "トランザクション詳細",
    "modal_title_unlink_alias": "エイリアスをネームスペースからアンリンク",
    "more_access_tool_is_working": "たくさんの認証ツールを開発中です",
    "mosaic": "モザイク",
    "mosaic_alias_not_exist": "モザイクエイリアスは存在しません",
    "mosaic_describe_text": "モザイクはトークンとしてだけでなく、報酬ポイント、会社株式、署名、ステータスフラグ、投票、通貨などの専門的なアセットの集合でもあります。",
    "mosaic_expired": "期限切れ",
    "mosaic_hex_format_error": "モザイクHEXフォーマットエラー",
    "mosaic_id": "モザイクID",
    "mosaic_name_can_not_be_null": "モザイク名は空にできません",
    "mosaic_not_set": "モザイクを選択してください",
    "mosaics_list": "モザイクリスト",
    "move_your_mouse": "複雑さの高いランダムなニーモニックパス語群を生成するためにマウスを動かしてください。",
    "multisig_accounts_can_not_send_a_transaction_by_themselves": "マルチシグアカウントはトランザクションを開始できません。連署者のアカウントを使用してください。",
    "namespace": "ネームスペース",
    "namespace_and_sub_namespace": "名前空間とサブ名前空間",
    "namespace_can_only_contain_numbers_letters_and_other": "ネームスペース名には 0-9, A-Za-z, _, - の文字のみ使用できます。",
    "namespace_cannot_be_a_null_or_empty_string": "ネームスペース名を空文字にすることはできません",
    "namespace_cannot_use_forbidden_words": "このネームスペース名は保護されているため使用できません",
    "namespace_definition": "ネームスペースは、NEMブロックチェーン上であなたのビジネスと資産のためのチェーン上の唯一の識別子を作成できます。インターネットドメインと類似しています。",
    "namespace_description": "ネームスペースの説明",
    "namespace_duration_tip_1": "期間はブロック数で計算され、1ブロック = 15秒、1ブロック = 1XYM、最大有効期間は365日です。",
    "namespace_must_start_with_a_letter": "名前空間名は小文字で始まる必要があります",
    "namespace_name": "スペース名",
    "namespace_name_constraint": "名前はネットワーク内で一意である必要があります。最大64文字で a, b, c, …, z, 0, 1, 2, …, 9, _ , - を使用できます。",
    "namespace_tips_key_1": "1. 名前はネットワークに一意でなければなりません。最大長は64文字です。許可された文字:",
    "namespace_tips_key_2": "2. 次の文字は使用できません:",
    "namespace_tips_key_3": "3. ネームスペースは3階層まで定義できます。",
    "namespace_tips_value_1": "a, b, c, …, z, 0, 1, 2, …, 9, _ , -",
    "namespace_tips_value_2": "nem, user, account, org, com, biz, net, edu, mil, gov, info.",
    "network_settings": "ネットワーク設定",
    "network_type": "ネットワークタイプ",
    "network_type_invalid": "ネットワークタイプが一致しません",
    "new_password_label": "パスワード",
    "news": "ニュース",
    "news_read_more": "もっと読む",
    "next": "次へ",
    "no_confirmed_transactions": "承認済トランザクションはありません",
    "no_data_mosaics": "このアカウントには保有モザイクがありません",
    "no_data_namespace_tips": "ネームスペースをお持ちでない？最初の一つを作ってみましょう。",
    "no_data_namespaces": "このアカウントには保有ネームスペースがありません",
    "no_data_transactions": "このアカウントにはトランザクションがありません",
    "no_mnemonic": "ニーモニックなし",
    "no_network_currency_alert": "ウォレットにはネットワーク通貨に関するデータを取得できません (例: symbol:xym) 有効なノードに接続してください。",
    "no_partial_transactions": "パーシャルトランザクションはありません",
    "no_profiles_in_database": "ウォレットデータベースにプロファイルはありません",
    "no_unconfirmed_transactions": "未承認トランザクションはありません",
    "node_connection_failed": "ノード接続に失敗",
    "node_connection_succeeded": "ノード接続に成功",
    "node_exists_error": "ノードは既に存在します",
    "node_list": "ノードリスト",
    "node_not_available_please_check_your_node_or_network_settings": "ノードが利用できません。ノードまたはネットワーク設定を確認してください。",
    "node_url": "ノードURL",
    "not_yet_open": "まだ公開されていません",
    "notes_should_not_exceed_25_character": "メモは25文字以下にしてください",
    "notification_new_aggregate_bonded": "新しいアグリゲートトランザクションがアナウンスされました",
    "notification_new_cosignature": "アグリゲートトランザクションに署名がされました",
    "notification_new_transaction_confirmed": "新しいトランザクションが承認されました",
    "notification_new_unconfirmed_transaction": "新しいトランザクションが未承認になりました",
    "offline_storage": "オフラインストレージ",
    "operation_failed": "リクエスト失敗",
    "option_child_account": "マイプロファイルに子アカウントを作成する",
    "option_link_address": "アドレスにリンク",
    "option_link_mosaic": "モザイクにリンク",
    "option_privatekey_account": "既存アカウントに秘密鍵をインポートしたい",
    "option_root_namespace": "ルートネームスペース",
    "option_sub_namespace": "サブネームスペース",
    "page_title_account_actions": "アクション",
    "page_title_account_backup": "プロファイルバックアップ",
    "page_title_account_details": "アカウント情報",
    "page_title_account_harvesting": "ハーベスティング",
    "page_title_dashboard": "ダッシュボード",
    "page_title_harvesting": "ハーベスティング",
    "page_title_invoice": "インボイス",
    "page_title_mosaics": "保有モザイク",
    "page_title_mosaics_create": "モザイク作成",
    "page_title_multisig_convert": "アカウントの変換",
    "page_title_multisig_cosign": "トランザクションに署名",
    "page_title_multisig_manage": "マルチシグネチャの管理",
    "page_title_namespaces": "保有ネームスペース",
    "page_title_namespaces_create": "ネームスペース作成",
    "page_title_settings_about": "ソフトウェア情報",
    "page_title_settings_diagnostic": "診断",
    "page_title_settings_general": "一般設定",
    "page_title_settings_password": "プロファイルパスワード",
    "page_title_transfer": "転送",
    "paid_fee": "支払手数料",
    "parent_namespace": "親ネームスペース",
    "password": "パスワード",
    "password_error": "パスワードのエラー",
    "password_hint": "パスワードヒント",
    "password_is_invalid": "パスワードはアルファベットと数字を含む8文字以上でなければなりません。",
    "passwords_not_matching": "パスワードが一致しません",
    "peer_tip": "{setting} ページでノードの管理、新しいネットワークの構成ができます。",
    "peers_number": "ピア数",
    "phishing_warning": "フィッシングに注意してください！このプログラムではプロファイルを復元する場合以外に、ニーモニックの入力は求めることはありません。",
    "placeholder_address": "アドレスを入力",
    "placeholder_address_or_alias": "アドレスまたはエイリアス (例 nem.foundation)",
    "placeholder_address_or_public_key": "アドレスまたは公開鍵",
    "placeholder_transaction_uri": "有効なトランザクションURIを入力してください",
    "please_accurately_copy_the_safety_backup_mnemonic": "正確にコピーして、ニーモニックを安全にバックアップしてください",
    "please_backup_mnemonic_passphrase": "必ずニーモニックパス語群のバックアップコピーを作成してください。プロファイルを復元するときは、このバックアップが必要になります。",
    "please_backup_mnemonic_passphrase_title": "バックアップを作成する！",
    "please_click_on_the_mnemonic_in_order_to_confirm_that_you_are_backing_up_correctly": "バックアップが正しくできているかを確認するため、ニーモニックをクリックしてください。",
    "please_enter_a_correct_number": "有効な番号を入力してください",
    "please_enter_a_custom_nod_address": "カスタムノードURLを入力してください",
    "please_enter_a_mnemonic_to_ensure_that_the_mnemonic_is_correct": "正しいことを確認するために、ニーモニックを入力してください",
    "please_enter_notes": "メッセージの入力",
    "please_enter_your_account_password": "プロファイルのパスワードを入力",
    "please_enter_your_new_password_again": "プロファイルのパスワードをもう一度入力",
    "please_enter_your_password_again": "パスワードを再入力",
    "please_set_your_account_password": "アカウントパスワードを設定",
    "point_null_error": "ノード NULL エラー",
    "preview_and_action": "プレビュー",
    "previous": "戻る",
    "private_key": "秘密鍵",
    "private_key_invalid_error": "秘密鍵が不正です",
    "profile_creation_description": "このソフトウェアの使用を開始する前に、プロファイルとパスワードを作成する必要があります。パスワードはプロファイルへのアクセスを保護するために使用されます。",
    "profile_description": "プロファイル説明",
    "profile_description_tips1": "このソフトウェアの使用を開始する前に、プロファイルとパスワードを作成する必要があります。このウォレットソフトウェアは階層的決定性ウォレット (HD-Wallets) のを活用します。",
    "profile_description_tips2": "パスワードはプロファイルへのアクセスを保護するために使用され、ニーモニックパス語群を暗号化するために使用されます。複数のアドレスを1つのアカウントで管理でき、スタートアップページでアカウントを切り替えることができます。",
    "profile_description_tips3": "パスワードと24単語のニーモニックパス語群の両方をバックアップしてください。",
    "profile_import": "プロファイルのインポート",
    "profile_name": "プロファイル名",
    "profile_name_already_exists": "プロファイル名は既に使用済みです",
    "profile_name_error": "不正なプロファイル名です",
    "profile_not_matching_network_option_1": "ログアウトしてプロファイルを変更する",
    "profile_not_matching_network_option_2": "新しいプロファイルを作成する",
    "profile_not_matching_network_option_3": "ネットワークを閉じて切り替えます",
    "profile_not_matching_network_warning_message": "プロファイルのネットワークが現在のネットワークと一致しません。 問題を解決するには、次のいずれかのオプションを選択してください。",
    "profile_not_matching_network_warning_title": "警告",
    "program_description": "このプログラムは、オープンソースのデジタルアセット管理システムである Symbol ブロックチェーンを基礎として構成されています。Symbol ネットワークへアクセスし、プロファイルを作成・アカウントやアセットの管理などを行います。",
    "public_key": "公開鍵",
    "public_key_addition": "追加済み連署者",
    "public_key_deletion": "削除済み連署者",
    "public_key_invalid": "公開鍵は無効です",
    "qr_code": "QRコード",
    "qr_code_generation_failed": "QRコード生成に失敗",
    "qrcode_detail_item_address": "住所",
    "qrcode_detail_item_contact_name": "連絡先",
    "qrcode_detail_item_mnemonic_passphrase": "ニーモニックパスフレーズ",
    "qrcode_detail_item_network_type": "ネットワーク型",
    "qrcode_detail_item_type": "QRコードタイプ",
    "qrcode_detail_item_type_contactqr": "住所",
    "qrcode_detail_item_type_cosignatureqr": "署名のリクエスト",
    "qrcode_detail_item_type_mnemonicqr": "ニーモニックのインポート",
    "qrcode_detail_item_type_transactionqr": "請求書",
    "qrcode_password_info": "アップロードされたQRコードはパスワードで保護されています。\nこのQRコードが生成されたときにパスワードを入力してください。",
    "recipient": "受信者",
    "refresh": "更新",
    "refresh_failed": "エラーが起きました。あとで再試行してください。",
    "refresh_success": "更新に成功しました",
    "refresh_too_fast_warning": "実行されたネットワークリクエストが多すぎます。後でもう一度試してください。",
    "register": "サインアップ",
    "relative": "相対",
    "removal_greater_than_cosignatories": "最小削除数に必要な署名者は {delta} より多い有効な連署者が必要です。署名者を追加するか、最小削除数を減らしてください。",
    "removal_or_approval_is_zero": "リストに {delta} つの署名者がいる場合、最小承認と最小削除をゼロに設定することはできません",
    "repeat_password_label": "パスワードの再確認",
    "reset": "リセット",
    "resolving_address": "アドレス {address} 解決中...",
    "restore_mnemonic": "ニーモニック語群のリストア",
    "restrictable": "制限可",
    "rules_describe": "ルール説明",
    "safe_storage_tips": "安全な保管の知恵 =>",
    "save_backups": "複数のコピーをオフラインで作成し、複数の場所にバックアップを保存します。デジタルバックアップには暗号化されたディスクを使用してください。",
    "scenes_to_be_used": "使用例",
    "see_transactions_other_account": "マルチシグアカウントのトランザクション表示",
    "seed_account_can_not_be_more_than_10": "1 つのプロファイルに作成できるアカウントの上限に達しました。別のプロファイルで新しいアカウントを作成してください。",
    "select_a_namespace": "ネームスペースの選択",
    "select_a_profile": "プロファイルを選択してください",
    "select_accounts": "アカウントを選択",
    "select_all": "すべて選択",
    "send": "送信",
    "sender": "送信者",
    "set_account_name": "プロファイル名の入力",
    "set_default_explorer": "入力されたURLは無効です。既定のURLが設定されています。",
    "set_explorer_link": "エクスプローラリンクの設定",
    "set_network_type": "ネットワークタイプ選択",
    "SET_UP": "ノード選択",
    "settings_tab_about": "ソフトウェア情報",
    "settings_tab_general": "一般設定",
    "settings_tab_network": "ネットワーク設定",
    "settings_tab_password": "プロファイルパスワード",
    "show_expired_mosaics": "期限切れモザイクを表示",
    "show_expired_namespaces": "期限切れネームスペースを表示",
    "show_wizard": "ウィザードを表示",
    "sidebar_item_accounts": "アカウント",
    "sidebar_item_community": "ニュース",
    "sidebar_item_home": "ホーム",
    "sidebar_item_mosaics": "モザイク",
    "sidebar_item_multisig": "マルチシグ",
    "sidebar_item_namespaces": "ネームスペース",
    "sidebar_item_settings": "設定",
    "signature": "署名",
    "signer_public_key": "署名者公開鍵",
    "skip": "スキップ",
    "speed": "速度",
    "start_finalization_epoch": "ファイナライズエポックを開始",
    "status": "ステータス",
    "success_account_unlocked": "アカウントのアンロックに成功しました",
    "success_password_changed": "パスワードを更新しました。ログアウトします。",
    "success_settings_updated": "設定を更新しました。",
    "success_transaction_partial_announced": "パーシャルトランザクションのアナウンスに成功しました。",
    "success_transactions_announced": "トランザクションのアナウンスに成功しました。",
    "success_transactions_signed": "トランザクション(s)の署名に成功しました。",
    "successful_copy": "コピーしました",
    "successful_operation": "リクエスト成功",
    "supply": "供給量",
    "supply_can_not_less_than_0": "供給量は0以下にはできません",
    "table_header_alias_identifier": "エイリアス",
    "table_header_alias_type": "エイリアスタイプ",
    "table_header_balance": "残高",
    "table_header_divisibility": "可分性",
    "table_header_expiration": "有効期限",
    "table_header_expired": "期限切れ",
    "table_header_hex_id": "Id",
    "table_header_name": "名前",
    "table_header_restrictable": "制限可",
    "table_header_supply": "供給量",
    "table_header_supply_mutable": "可変供給量",
    "table_header_transferable": "転送可能",
    "the_backup_is_wrong": "ニーモニック単語のバックアップが無効です。正しい順序で単語を慎重に選択してください。",
    "the_mnemonic_order_is_correct_and_the_backup_is_successful": "ニーモニックの順序は正しく、バックアップは成功しました。",
    "the_mosaic_to_be_sent_is_empty": "モザイクリストは空にできません",
    "the_root_namespace_cannot_be_longer_than_16": "ルートネームスペース名は16文字以下にする必要があります。",
    "the_sub_namespace_cannot_be_longer_than_16": "サブネームスペース名は64文字以下にする必要があります。",
    "the_value_of_duration_cannot_be_less_than_1": "期間は1以上でなければなりません",
    "tips": "ヒント",
    "title": "タイトル",
    "to": "に",
    "to_symbol": "Symbol へ",
    "too_many_cosignatories": "署名者の最大数は {maxCosignatoriesPerAccount} です。 {delta} 署名者を削除してください。",
    "top_window_console": "コンソール",
    "transaction_descriptor_16705": "アグリゲートコンプリート",
    "transaction_descriptor_16707": "投票キーリンク",
    "transaction_descriptor_16708": "アカウントメタデータ",
    "transaction_descriptor_16712": "ファンドロック",
    "transaction_descriptor_16716": "アカウントリンク",
    "transaction_descriptor_16717": "モザイク定義",
    "transaction_descriptor_16718": "ネームスペース登録",
    "transaction_descriptor_16720": "アカウントアドレス制限",
    "transaction_descriptor_16721": "モザイクグローバル制限",
    "transaction_descriptor_16722": "シークレットロック",
    "transaction_descriptor_16724": "転送",
    "transaction_descriptor_16725": "マルチシグアカウントの変更",
    "transaction_descriptor_16961": "アグリゲートボンデッド",
    "transaction_descriptor_16963": "キーリンクを確認する",
    "transaction_descriptor_16964": "モザイクメタデータ",
    "transaction_descriptor_16972": "Link node key",
    "transaction_descriptor_16973": "モザイク供給変更",
    "transaction_descriptor_16974": "アドレスエイリアス",
    "transaction_descriptor_16976": "アカウントモザイク制限",
    "transaction_descriptor_16977": "モザイクアドレス制限",
    "transaction_descriptor_16978": "シークレットプルーフ",
    "transaction_descriptor_17220": "ネームスペースメタデータ",
    "transaction_descriptor_17230": "モザイクエイリアス",
    "transaction_descriptor_17232": "アカウント操作制限",
    "transaction_details": "トランザクション詳細",
    "transaction_expired": "トランザクションの期限切れ",
    "transaction_has_cosignature": "連署名の受信",
    "transaction_needs_cosignature": "連署名待機トランザクション",
    "transaction_needs_cosignature_explain": "このマルチシグトランザクションは承認される前に複数の当事者が署名する必要があります。パスワードを入力し、署名を追加することを確認してください。",
    "transaction_needs_cosignature_explain_signed": "このトランザクションでは、共同署名を送信して承認するために複数の関係者が必要です。\nこのトランザクションの共同署名はすでに送信されています。\n他の共同署名者が承認するまでお待ちください。 \nQRコードをダウンロードして他の共同署名者に送信し、簡単に署名することができます。",
    "transaction_qr_action_desc": "[続行]をクリックして、これらの詳細が記載された転送ページを開きます。",
    "transaction_qr_code": "トランザクションQRコード",
    "transaction_received_cosignature_explain": "Received the minimum required co-signatories",
    "transaction_status_confirmed": "承認済",
    "transaction_status_partial": "パーシャル",
    "transaction_status_unconfirmed": "未承認",
    "transaction_type": "タイプ",
    "transaction_uri": "トランザクションURI",
    "transaction_uri_explanation": "このトランザクションのURI表現。\nこのURIをコピーして別のデバイスまたは他の誰かに送信して、トランザクションをインポートして署名することができます。",
    "transactions": "トランザクション",
    "transactions_tab_confirmed": "承認済",
    "transactions_tab_partial": "パーシャル",
    "transactions_tab_unconfirmed": "未承認",
    "transfer_target": "宛先",
    "transferable": "転送可能",
    "transmittable": "転送可",
    "uncheck_all": "チェックを外す",
    "unconfirmed": "未承認",
    "unconfirmed_transaction": "未承認",
    "unknown": "不明",
    "unlink": "アンリンク",
    "unlink_namespace_from": "{aliasTarget} を {namespaceName} からアンリンク",
    "update_completed": "更新完了",
    "upload_file_message": "ここをクリックしてファイルをドラッグするかアップロードしてください",
    "upload_qr_code": "QRコードをアップロード",
    "upload_qr_code_explanation": "次の有効なQRコードのいずれかをアップロードまたはスキャンします。 \nQRコードのタイプが特定されると、関連するアクションの次のステップに進みます。",
    "upload_qr_code_explanation_type_contactqr": "住所QRコード",
    "upload_qr_code_explanation_type_cosignatureqr": "連署QRコード",
    "upload_qr_code_explanation_type_mnemonicqr": "ニーモニックQRコード",
    "upload_qr_code_explanation_type_transactionqr": "請求QRコード",
    "upload_qr_code_invalid_type_message": "Type（{type}）は許可されていません！\n上記の有効なQRコードでもう一度お試しください。",
    "upload_qr_tab_scan": "カメラでスキャン",
    "upload_qr_tab_upload_image": "画像をアップロード",
    "uploaded_qr_code": "アップロードしたQRコード",
    "use_paper_and_pen_to_correctly_copy_mnemonics": "ペンと紙を使用して正しくニーモニックを書き写してください。このインストール/デバイスからアクセスできなくなった場合、ニーモニックはアカウントとアセットを復元するために必要です。",
    "used_to_bind_a_account_address": "アカウントやモザイクにわかりやすい名前を付けるために使用します。",
    "user_aborted_transaction_confirmation": "ユーザーがトランザクションの承認を中止しました",
    "value_too_big": "値が大きすぎます",
    "variable_supply": "可変供給量",
    "verify_backup_mnemonics": "次へ",
    "verify_Mnemonic_phrase": "ニーモニック語群の確認",
    "verify_mnemonics": "ニーモニック単語バックアップの確認",
    "warning_already_a_cosignatory": "このアカウントは既に連署者です",
    "welcome": "ようこそ",
    "word": "文字",
    "x_seconds": "{seconds}秒"
}

'''
'''--- src/language/zh-CN.json ---
{
    "about_app_release": "版本",
    "about_app_url": "主页",
    "about_default_node": "默认节点",
    "about_dependencies": "依赖",
    "about_generation_hash": "生成哈希",
    "about_network": "网络",
    "about_network_type": "网络类型",
    "about_rxjs_version": "RxJs库",
    "about_sdk_version": "Symbol SDK",
    "about_typescript_version": "Typescript",
    "about_vue_version": "Vue框架",
    "absolute": "绝对",
    "access_ledger": "使用Ledger登录",
    "access_my_profile": "欢迎访问SYMBOL",
    "access_trezor": "使用Trezor登录",
    "access_trezor_account": "链接你的Trezor钱包，并进入操作",
    "access_your_ledger_account": "链接你的Ledger钱包，并进入操作",
    "account_address": "钱包地址",
    "ACCOUNT_LINK": "帐户连结",
    "account_management": "钱包管理",
    "account_name": "钱包名",
    "account_name_input_error": "钱包名输入错误!",
    "account_network_does_not_match_current_network_type": "钱包网络与当前节点网络不匹配。",
    "account_network_type_does_not_match_current_network_type": "钱包网络类型与当前节点网络类型不匹配。",
    "account_public_key": "公钥",
    "accounts": "帳目",
    "accounts_backup_keystore_explain_p1": "点击右侧按钮，下载加密密钥文件来备份您的私钥和公钥，",
    "accounts_backup_keystore_explain_p2": "系统将要求您解锁您的帐户，然后将自动开始下载。",
    "accounts_backup_mnemonic_explain_p1": "点击右侧按钮，查看您的助记词；",
    "accounts_backup_mnemonic_explain_p2": "系统将要求您解锁您的帐户，然后将显示助记",
    "accounts_backup_mnemonic_explain_p3": "请务必将以下 {num} 个单词备份到安全的地方； 这 {num} 个单词代表你的助记词，以后可以用来导入你的钱包和它的子钱包。",
    "accounts_backup_mnemonic_explain_qrcode": "请务必将以下二维码备份在安全的地方。此二维码可用于稍后导入您的钱包及其子钱包。",
    "accounts_backup_qrcode_explain_p1": "点击右侧按钮，下载二维码来备份您的助记词；",
    "accounts_backup_qrcode_explain_p2": "系统将要求您解锁您的帐户，然后将自动开始下载。",
    "accounts_backup_tile_description": "立即备份钱包",
    "accounts_backup_tile_keystore": "下载密匙",
    "accounts_backup_tile_keystore_desc": "密匙文件下载",
    "accounts_backup_tile_mnemonic": "查看助记词",
    "accounts_backup_tile_mnemonic_desc": "密码显示",
    "accounts_backup_tile_title": "助记词二维码",
    "accounts_backup_title": "安全与备份",
    "accounts_backup_title_keystore": "下载密匙",
    "accounts_backup_title_mnemonic": "查看助记词",
    "accounts_backup_title_qrcode": "备份助记词",
    "accounts_backup_transactions": "将交易清单汇出至CSV档案",
    "accounts_backup_transactions_description": "下载所有交易信息，保存在本地并查看，即使您没有互联网连接",
    "accounts_change_password_description": "更改密码",
    "accounts_change_password_title": "修改密码",
    "accounts_create_invoice": "创建发票",
    "accounts_flags_default_account": "默认钱包",
    "accounts_flags_default_account_explain": "这是一个默认钱包",
    "accounts_flags_known_by_network": "公共账户",
    "accounts_flags_multisig": "多重签名",
    "accounts_flags_multisig_explain": "这是一个多签钱包",
    "accounts_flags_simple": "基本账户",
    "accounts_flags_simple_explain": "这是一个基本钱包",
    "accounts_flags_unknown_by_network": "私人帐户",
    "accounts_harvesting_remote_explain_p1": "点击右侧的按钮来配置远程帐户，这将允许您的帐户稍后激活委托收益",
    "accounts_harvesting_remote_explain_p2": "您将解锁您的帐户，然后可查看用于设置远程帐户以进行收益的选项。",
    "accounts_harvesting_request_explain_p1": "点击右侧的按钮发送收益委托请求，如果节点批准，这将激活您的帐户收益",
    "accounts_harvesting_request_explain_p2": "您将解锁您的帐户，然后可查看用于向对等节点发送收益委托请求的选项。",
    "accounts_harvesting_tile_remote": "远程帐户",
    "accounts_harvesting_tile_remote_description": "重要事务",
    "accounts_harvesting_tile_request": "委托请求",
    "accounts_harvesting_tile_request_description": "开始收益",
    "accounts_harvesting_title_remote": "设置远程帐户",
    "accounts_harvesting_title_request": "发送委托请求",
    "accounts_label_flags": "标志",
    "accounts_links_explorer": "区块浏览器",
    "accounts_links_faucet": "水龙头",
    "accounts_setup_harvesting_description": "配置委托收益",
    "accounts_setup_harvesting_title": "设置收益",
    "accounts_share_qr_code": "共享详情信息",
    "accounts_subtitle_account_links": "有效指南",
    "accounts_view_dashboard": "在仪表板中查看",
    "accounts_view_explorer_description": "Open in explorer",
    "accounts_view_multisig": "多重签名",
    "accounts_view_open_faucet": "Open the faucet",
    "action": "行为",
    "action_label_alias_link": "绑定",
    "action_label_alias_unlink": "解绑",
    "action_label_extend_duration": "延时",
    "action_label_modify_supply": "修改供应量",
    "add_mosaic": "添加马赛克",
    "address": "地址",
    "address_alias_not_exist": "地址别名不存在",
    "address_format_error": "地址格式错误",
    "address_invalid": "地址错误",
    "address_qr_code": "地址二维码",
    "address_to_interact_with": "与钱包互动的地址",
    "address_unknown": "未知地址，此地址尚未在网络中发送任何交易。",
    "address_unknown_by_network": "该地址尚未被网络知晓， 建议您向本地址发送一笔交易。",
    "alias": "别名",
    "alias_name_format_error": "别名格式错误",
    "aliases": "别名",
    "all_nodes_cannot_be_deleted": "节点列表不可为空",
    "amount": "金额",
    "amount_asset": "数量",
    "amount_can_not_be_less_than_0": "马赛克交易数量不可小于0",
    "any_information_cannot_be_empty": "任意信息不能为空",
    "approval_greater_than_cosignatories": "最小批准所需余项比可用余项多 {delta}。请添加余数或减少最小批准号。",
    "article_by": "Article by {creator}",
    "assets": "资产",
    "at_block": "在 {blockNumber} 块高",
    "automatically_generated_by_node_url": "通过输入的节点URL自动形成",
    "back": "返回",
    "backup_mnemonic": "备份助记词",
    "backup_mnemonic_phrase": "备份助记词",
    "backup_mnemonic_words": "备份好助记词",
    "balance": "余额",
    "block": "块",
    "block_height": "块高",
    "button_add_account": "增加或导入钱包",
    "button_download_qr": "下载",
    "chain_height": "区块高度",
    "choose_network": "选择网络",
    "choose_profile_name_and_password": "创建账户和密码",
    "clear_staged_transactions": "取消交易",
    "click_to_cosign": "点击联署",
    "click_to_load": "点击以加载数据",
    "close": "关闭",
    "co_signers_amount_less_than_0": "共签人数不可小于1",
    "confirm": "确认",
    "confirm_backup": "确认备份",
    "CONFIRMATION": "确认书",
    "confirmations_height": "高度",
    "confirmed_transaction": "已确认事务",
    "confirmPassword": "确认密码",
    "contact_qr_action_desc": "单击继续将重定向到转移页面以转移到该收件人。",
    "continue": "继续",
    "copy_failed": "复制失败",
    "copy_mnemonic": "复制助记词",
    "cosignature_added": "已接收联署",
    "cosignature_qr_action_desc": "继续到交易详细信息页面以签名。",
    "create_a_new_account": "创建一个新账户",
    "create_a_new_profile": "建立一个新的账户",
    "create_lock_check_pw_remind": "两次密码不一致",
    "create_lock_pw_remind": "密码设置错误",
    "create_lock_pw_txt_remind": "设置密码提示错误",
    "create_mnemonic": "创建新助记词账户",
    "create_profile": "创建钱包",
    "create_sub_namespace": "创建子命名空间",
    "creation_successful": "恭喜，创建账户成功！",
    "current_endpoint": "当前节点",
    "current_network": "当前网络类型",
    "current_profile_network": "当前个人资料网络",
    "current_speed": "当前网速",
    "current_validity": "当前有效期",
    "deadline": "截止时间",
    "decrease": "减少",
    "define": "定义",
    "delta": "绝对值",
    "description": "描述",
    "direction": "方向",
    "display_mnemonic": "显示助记词",
    "display_mnemonic_qr_code": "显示助记词二维码",
    "divisibility": "可分割性",
    "divisibility_can_not_less_than_0": "可分性不可小于零",
    "divisibility_can_not_more_than_6": "可分性不可大于6",
    "divisibility_invalid": "当前值与可分性位于区间 [0-6] 不匹配",
    "do_not_disclose": "请不要透露你备份的记助词，任何人有了记助词将可以彻底掌控其下的钱包资产。",
    "do_not_disclose_title": "保持私密",
    "do_not_share_mnemonics_with_anyone": "不要和任何人分享助记词",
    "download": "下载",
    "duration": "持续时间",
    "duration_can_not_less_than_0": "持续时间不可小于零",
    "duration_can_not_more_than_1_years": "持续时间不可大于1年",
    "duration_can_not_more_than_10_years": "持续时间不可大于10年",
    "duration_permanent": "是否永久存在",
    "end_finalization_epoch": "结束敲定时代",
    "endpoint": "节点",
    "enter_your_private_key": "输入您的私钥",
    "error_account_name_already_exists": "该帐户名已经存在。请重新输入唯一的帐户名。",
    "error_delete_all_peers": "不能删除所有节点",
    "error_incorrect_field": "{_field_} 字段不正确",
    "error_incorrect_url": "无效URL地址",
    "error_invalid_password": "无效密码",
    "error_new_namespace_duration_max_value": "新的名称空间持续时间不能大于 {maxValue}",
    "error_new_password_format": "密码至少应该包含一个字母和一个数字",
    "error_peer_connection_went_wrong": "连接到节点{peerUrl}时发生错误超时",
    "error_peer_unreachable": "此节点暂不可用",
    "error_too_many_seed_accounts": "子帐户数量不能超过{maxSeedAccountsNumber}个",
    "estimated_period_of_validity": "预估有效期",
    "estimated_rental_fee": "预估租金",
    "existing_profile": "已有账户",
    "expired_for": "已过期",
    "expires_in": "有效期限",
    "explorer_url": "Explorer URL",
    "export_mnemonic": "导出助记词",
    "fee": "费用",
    "fee_can_not_be_less_than_0": "fee不可小于0",
    "fee_speed_fast": "快",
    "fee_speed_fastest": "最快",
    "fee_speed_free": "免费",
    "fee_speed_highest": "最高费用",
    "fee_speed_median": "推荐费用",
    "fee_speed_normal": "普通",
    "fee_speed_slow": "慢",
    "fee_speed_slowest": "最慢",
    "filter_peers": "节点过滤",
    "finish": "完成",
    "finished": "完成",
    "flags_divisibility": "确定可以分割马赛克的小数点位置。可分割性必须在0和6之间",
    "flags_duration_permanent": "如果选择，马赛克将永远不会过期",
    "flags_restrictable": "如果选择，马赛克创建者可以配置自定义限制",
    "flags_supply": "马赛克总供应量必须在0和9 000,000,000,000,000个原子单位之间",
    "flags_transferable": "如果选择，马赛克可以在任意帐户之间转移",
    "flags_variable_supply": "如果选择，马赛克供应量将是可变的",
    "form_label_account_to_be_converted": "要转换的帐户",
    "form_label_add_cosignatory": "添加共签人",
    "form_label_additional_duration": "附加持续时间",
    "form_label_alias_type": "别名类型",
    "form_label_choose_namespace": "选择命名空间",
    "form_label_cosignatory_modifications": "共签修改",
    "form_label_current_supply": "现有供应量",
    "form_label_default_account": "默认钱包",
    "form_label_default_max_fee": "默认最大费用",
    "form_label_description_min_approval": "从多签中添加某人或完成此多签交易所需的签名数",
    "form_label_description_min_removal": "移除其他共签人的最小所需签名数",
    "form_label_duration": "持续时间",
    "form_label_language": "默认语言",
    "form_label_link_address": "绑定地址",
    "form_label_link_mosaic": "绑定马赛克",
    "form_label_min_approval": "最小签名数",
    "form_label_min_removal": "最小删除数",
    "form_label_multisig_account": "多重签名帐户",
    "form_label_multisig_accounts": "多重签名帐户",
    "form_label_multisig_current_info": "联署人",
    "form_label_multisig_operation_type": "操作类型",
    "form_label_namespace_name": "空间名",
    "form_label_network_node_url": "Enter a harvesting node URL here (e.g: http://localhost:3000)",
    "form_label_new_absolute_supply": "新增绝对供应量",
    "form_label_new_account_name": "新钱包名称",
    "form_label_new_account_type": "选择钱包类型",
    "form_label_new_cosignatories": "新增联署人",
    "form_label_new_expiration_time": "新的过期时间",
    "form_label_new_min_approval": "最低审核数",
    "form_label_new_min_removal": "最低移除数",
    "form_label_new_password": "请输入密码",
    "form_label_new_password_confirm": "确认新密码",
    "form_label_new_password_hint": "密码提示",
    "form_label_new_supply": "新供应量",
    "form_label_parent_namespace": "父命名空间",
    "form_label_password": "锁密码",
    "form_label_private_key": "请输入私钥",
    "form_label_registration_type": "命名空间类型",
    "form_label_remove_cosignatory": "移除联署人",
    "form_label_removed_cosignatory": "删除签字人",
    "form_label_removed_cosignatory_tooltip": "交易中仅允许一次委托人移除",
    "form_label_supply_delta": "改变供应数量",
    "form_label_supply_direction": "改变供应量管理",
    "from_qr_code": "从二维码",
    "from_to_action": "发起/接受",
    "generate_a_new_profile": "生成一个新账户",
    "generate_entropy_increase_success": "生成熵增成功，页面即将跳转。",
    "generate_mnemonic": "生成助记词",
    "generating_mnemonic": "生成助记词",
    "getting_a_mnemonic_equals_ownership_of_a_account_asset": "获得助记词等于拥有钱包资产所有权",
    "go_to_login": "直接登陆",
    "harvesting": "Harvesting",
    "harvesting_confirmation_description_1": "You can see the transaction(s) details displayed below. After you have entered your password, and pressed the Next button, these transaction(s) will be      announced to the network.",
    "harvesting_confirmation_description_2": "Harvesting will be activated automatically provided that the network node is harvesting and accepts delegation requests.",
    "harvesting_create_remote_account": "You will first need to setup a remote account, if you have not done this before.",
    "harvesting_delegation_description_1": "Select the account that should start harvesting and select the harvesting node to which you want to send a delegation request.",
    "harvesting_delegation_description_2": "Then, select a max fee to include in the transaction. You can send delegation requests to multiple nodes.",
    "harvesting_node_get_node_info": "Get node info ",
    "harvesting_node_not_eligible": "This not is not eligible for harvesting",
    "harvesting_remote_account": "remote account",
    "harvesting_remote_account_creation_successful_1": "Your remote account has been created successfully. Please keep its private key secure",
    "harvesting_remote_account_description_1": "For security reasons, we will create a remote account (proxy) for delegated harvesting.",
    "harvesting_remote_account_description_3": "Enter your password and click \"Start\" to create a remote account.",
    "harvesting_remote_linked_description_1": "Your account is currently linked to the following remote account (proxy) for delegated harvesting.",
    "harvesting_remote_linked_description_2": "You can unlink your account from this remote account in the Accounts section. Click Next to configure a delegation request for the harvesting node of your  choice.",
    "harvesting_subtitle_confirmation": "Overview",
    "harvesting_subtitle_delegation": "Node selection",
    "harvesting_subtitle_overview": "Overview",
    "hash_date": "hash/日期",
    "hd_account_path_error": "HD 钱包路径输入错误",
    "id": "ID",
    "if_you_need_to_back_up_your_mnemonics_again_you_can": "如果需要再次备份助记词，可以钱包管理-钱包详情-导出助记词中找到。",
    "illegal_public_key_error": "公钥格式错误",
    "illegal_publicKey": "存在不合法的账户公钥",
    "import": "进口",
    "import_mnemonic": "导入已有助记词",
    "import_mnemonic_passphrase_create_profile": "直接导入助记词短语以建立帐户",
    "import_private_key": "导入私钥",
    "import_private_key_account_successally": "恭喜，私钥帐户已成功导入。",
    "import_private_key_account_successfully_title_tips": "当前配置文件是使用私钥创建的。无法向其添加其他帐户。希望您有愉快的经历和旅途。",
    "import_private_key_description": "导入您的私钥以创建配置文件",
    "import_private_key_finalize_tip_text1": "1。请确保将您的私钥备份在一个安全的地方。它仅被加密并安装在您本地的当前配置文件下。与任何助记符无关。",
    "import_private_key_finalize_tip_text2": " 2.一个配置文件可以为您安装任意数量的独立私钥。请小心！",
    "import_private_key_input_tip1": "在输入字段中输入私钥。请确保您的私钥正确。输入正确的私钥时，相应的公钥和地址将显示在输入框的底部。请注意网络类型。",
    "import_private_key_profile_description_tip1": "在开始使用此软件之前，您需要创建一个配置文件名称和密码。用于在本地加密您的帐户信息。",
    "import_private_key_profile_description_tip2": "该密码将用于保护对您的个人资料的访问，例如'Transfer'和任何交易操作。",
    "import_qr_code": "导入二维码",
    "import_successful": "恭喜，导入账户成功！",
    "import_transaction_uri": "导入交易URI",
    "importance": "重要性",
    "increase": "增加",
    "info_active_cosignatory_mode": "选定的事务签名者是一个多签帐户",
    "info_connecting_peer": "正在连接到节点 {peerUrl} ...",
    "inner_transaction_hash": "内部事务hash",
    "input_here": "这里输入...",
    "input_mnemonic": "输入助记词",
    "input_mnemonic_tips": "请在输入单词之间用空格隔开，助记词数量为12或24个的英文单词。助记词是遵循HD-WALLET协议的种子文件，由12或24个随机单词成，导入本文件后，将会恢复你种子下的所有资产。导入记助词后，将会被你上一步设置的密码保存在你的本地设备中，使用中请注意网络安全！",
    "input_namespace_name": "请输入名称空间名称",
    "invalid_namespace_or_mosaic_id": "这不是合法的马赛克哈希或命名空间",
    "invalid_node": "节点连接失败",
    "keep_it_in_a_safe_place_on_the_isolated_network_mnemonics": "妥善保管至隔离网络的安全地方,请勿将助记词在联网环境下分享和存储,比如邮件、相册、社交应用等",
    "keystore_decryption_failed": "keystore解密失败",
    "label_add_cosignatory": "添加联署人",
    "label_duration_unlimited": "Unlimited",
    "label_for_approvals": "审批交易需要联署",
    "label_for_removals": "删除联署人所需的联署",
    "label_multisig_operation_conversion": "将帐户转换为多签账户",
    "label_multisig_operation_modification": "修改帐户多签属性",
    "label_of": "{min} 到 {max}",
    "label_postfix_multisig": "(多重)",
    "label_signed_by": "由联署人签署:",
    "latest_news_articles": "最新资讯",
    "link": "绑定",
    "link_action": "链接动作",
    "linked_account_address": "关联帐户地址",
    "linked_public_key": "链接公钥",
    "loading": "加载中...",
    "locked_mosaic": "锁定马赛克",
    "login": "登 录",
    "low_fee_warning_message": "费用少于建议的交易可能不会被接受，最终",
    "max_approval_amount_more_than_10": "Min approval 不可大于10",
    "max_decimal_number_error": "{_field_} 字段最多 {maxDecimalNumber} 位小数或更少。",
    "max_fee": "最大费用",
    "max_removal_amount_more_than_10": "Min removal 不可大于10",
    "message": "消息",
    "message_empty_cosignatories": "此帐户没有联署人",
    "min_approval_amount_illegal": "Min approval 必须为数字",
    "min_approval_amount_less_than_0": "Min approval 不可小于1",
    "min_approval_delta": "最低审核数",
    "min_removal_amount_illegal": "Min removal 必须为数字",
    "min_removal_amount_less_than_0": "Min removal 不可小于1",
    "min_removal_delta": "最低移除数",
    "mnemonic_backup_options_copy_desc": "複製助記詞並將其保存在安全的地方。",
    "mnemonic_backup_options_download_desc": "下載使用密碼加密的QR碼。 此QR碼可用於將您的帳戶導入不同的錢包（例如，移動錢包）",
    "mnemonic_copy": "复制",
    "mnemonic_generation_error": "生成钱包种子失败",
    "mnemonic_inconsistency": "助记词不一致",
    "mnemonic_input_error": "助记词输入错误",
    "mnemonic_phrase": "助记词",
    "mnemonic_qr_action_desc": "单击继续以将导入的助记词设置为文本区域。",
    "modal_account_unlock_title": "解锁钱包",
    "modal_title_backup_mnemonic_display": "显示助记词",
    "modal_title_backup_mnemonic_qrcode": "导出助记词二维码",
    "modal_title_backup_transaction": "出口交易",
    "modal_title_debug_console": "诊断控制台",
    "modal_title_enter_account_name": "配置新钱包",
    "modal_title_extend_namespace_duration": "延长命名空间持续时间",
    "modal_title_link_alias": "绑定别名",
    "modal_title_mosaic_supply_change": "修改马赛克供应量",
    "modal_title_transaction_confirmation": "签名交易",
    "modal_title_transaction_details": "交易详情",
    "modal_title_unlink_alias": "取消别名与命名空间的链接",
    "more_access_tool_is_working": "更多接入方式正在开发中",
    "mosaic": "马赛克",
    "mosaic_alias_not_exist": "马赛克别名不存在",
    "mosaic_describe_text": "马赛克是NEM区块链上的数字资产，也可以表示一组不变的相同事物， 是使智能资产系统独特而灵活的一部分。 可以是令牌TOKEN，也可以是专属的资产集合，例如奖励积分，股票， 签名，状态标志，投票或者其他流量性资产。",
    "mosaic_expired": "已过期",
    "mosaic_hex_format_error": "马赛克hex格式错误",
    "mosaic_id": "马赛克ID",
    "mosaic_name_can_not_be_null": "马赛克名称不能为空",
    "mosaic_not_set": "请选择马赛克",
    "mosaics_list": "马赛克列表",
    "move_your_mouse": "请移动你的鼠标，产生墒增，帮助产生随机助记词",
    "multisig_accounts_can_not_send_a_transaction_by_themselves": "Multisig 账户不能通过本账户发起交易。",
    "namespace": "命名空间",
    "namespace_and_sub_namespace": "命名空间和子命名空间",
    "namespace_can_only_contain_numbers_letters_and_other": "Namespace 只能包含数字，字母，_和-",
    "namespace_cannot_be_a_null_or_empty_string": "Namespace 不能为空值或空字符串",
    "namespace_cannot_use_forbidden_words": "Namespace 不能使用禁止的单词",
    "namespace_definition": "命名空间使您可以在NEM区块链上为您的业务和资产创建一个链上唯 一的标识符，类似于互联网域名。",
    "namespace_description": "命名空间说明",
    "namespace_duration_tip_1": "持续时间以块计算，一个块为12秒，一个块=1/20000XYM，最大有效期为365天",
    "namespace_must_start_with_a_letter": "Namespace 必须以小写字母开头",
    "namespace_name": "命名空间名称",
    "namespace_name_constraint": "该名称在网络中必须显示为唯一，并且最大长度 为64个字符。",
    "namespace_tips_key_1": "1.命名空间名称在网络中必须是唯一的，最大长度为64个字符，有效字符：",
    "namespace_tips_key_2": "2.不被允许的命名空间包含字符串有：",
    "namespace_tips_key_3": "3.命名空间最多可以被定义为三层",
    "namespace_tips_value_1": "a, b, c, …, z, 0, 1, 2, …, 9, _ , -",
    "namespace_tips_value_2": "nem, user, account, org, com, biz, net, edu, mil, gov , info.",
    "network_settings": "网络设置",
    "network_type": "网络类型",
    "network_type_invalid": "网络类型不匹配",
    "new_password_label": "密码",
    "news": "资讯",
    "news_read_more": "Read more",
    "next": "下一步",
    "no_confirmed_transactions": "暂无已确认交易",
    "no_data_mosaics": "此账户暂无马赛克",
    "no_data_namespace_tips": "您还没有父命名空间，请先创建一个父命名空间",
    "no_data_namespaces": "此账户暂无命名空间",
    "no_data_transactions": "此账户暂无交易记录",
    "no_mnemonic": "暂无助记词",
    "no_network_currency_alert": "钱包没有有关网络货币的数据（例如nem：xym），请连接到有效节点。",
    "no_partial_transactions": "暂无挂载交易",
    "no_profiles_in_database": "本地缓存中暂无钱包",
    "no_unconfirmed_transactions": "暂无未确认交易",
    "node_connection_failed": "节点连接失败",
    "node_connection_succeeded": "节点连接成功",
    "node_exists_error": "节点已存在",
    "node_list": "节点列表",
    "node_not_available_please_check_your_node_or_network_settings": "节点不可用，请检查您的节点或网络设置。",
    "node_url": "节点URL",
    "not_yet_open": "暂未开放",
    "notes_should_not_exceed_25_character": "备注信息不应超过25个字符",
    "notification_new_aggregate_bonded": "一个新的聚合交易被发布了",
    "notification_new_cosignature": "已有聚合交易被共签人签署",
    "notification_new_transaction_confirmed": "节点已确认事务",
    "notification_new_unconfirmed_transaction": "节点已接收事务",
    "offline_storage": "离线保管",
    "operation_failed": "操作失败",
    "option_child_account": "创建一个子钱包",
    "option_link_address": "关联钱包地址",
    "option_link_mosaic": "关联马赛克",
    "option_privatekey_account": "导入已存在的私钥",
    "option_root_namespace": "根命名空间",
    "option_sub_namespace": "子命名空间",
    "page_title_account_actions": "操作",
    "page_title_account_backup": "资料备份",
    "page_title_account_details": "钱包信息",
    "page_title_account_harvesting": "收获",
    "page_title_dashboard": "仪表盘",
    "page_title_harvesting": "收获",
    "page_title_invoice": "发票",
    "page_title_mosaics": "马赛克列表",
    "page_title_mosaics_create": "创建新的马赛克",
    "page_title_multisig_convert": "转换多签帐户",
    "page_title_multisig_cosign": "签名",
    "page_title_multisig_manage": "管理多签帐户",
    "page_title_namespaces": "命名空间列表",
    "page_title_namespaces_create": "创建新的命名空间",
    "page_title_settings_about": "关于",
    "page_title_settings_diagnostic": "诊断",
    "page_title_settings_general": "常规设置",
    "page_title_settings_password": "账户密码",
    "page_title_transfer": "转账",
    "paid_fee": "已付费用",
    "parent_namespace": "父命名空间",
    "password": "密码",
    "password_error": "密码错误",
    "password_hint": "密码提示",
    "password_is_invalid": "密码必须包含至少一个字母和数字，且密码长度必须大于等于8",
    "passwords_not_matching": "密码不匹配",
    "peer_tip": "你可以使用 {setting} 来管理节点或者是配置一个新的网络",
    "peers_number": "节点数量",
    "phishing_warning": "小心网络钓鱼！一般来说，Wallet不会要求您输入助记词。",
    "placeholder_address": "请输入地址",
    "placeholder_address_or_alias": "直接输入接收地址或别名（例如：nem.foundation）",
    "placeholder_address_or_public_key": "地址或公钥",
    "placeholder_transaction_uri": "输入有效的交易URI",
    "please_accurately_copy_the_safety_backup_mnemonic": "请准确抄写安全备份助记词",
    "please_backup_mnemonic_passphrase": "请将你的记助词离线写在纸上并做多份保存，或者离线的加密磁盘和存储介质等",
    "please_backup_mnemonic_passphrase_title": "創建備份！",
    "please_click_on_the_mnemonic_in_order_to_confirm_that_you_are_backing_up_correctly": "请按顺序点击助记词，以确认您正确备份",
    "please_enter_a_correct_number": "请输入正确金额",
    "please_enter_a_custom_nod_address": "请输入节点完整URL",
    "please_enter_a_mnemonic_to_ensure_that_the_mnemonic_is_correct": "请输入助记词，确保助记词是正确的",
    "please_enter_notes": "请输入备注信息",
    "please_enter_your_account_password": "请输入密码",
    "please_enter_your_new_password_again": "请再次输入新的密码",
    "please_enter_your_password_again": "请再次输入你设置的密码",
    "please_set_your_account_password": "请输入设置的密码",
    "point_null_error": "节点数据不可为空",
    "preview_and_action": "预习",
    "previous": "上一步",
    "private_key": "私钥",
    "private_key_invalid_error": "该私钥不合法。",
    "profile_creation_description": "在开始使用本程序之前，你需要为自己创建一个账户和密码来方便管理自己的钱包资产",
    "profile_description": "账户说明",
    "profile_description_tips1": "在开始使用本程序之前，你需要一个账户和密码来管理自己的钱包。为了提供更便捷的钱包管理，此终端采用HD-WALLET协议；一个账户会绑定一个记助词。",
    "profile_description_tips2": "账户和密码将用于加密你的记助词，所有一定管理好你的密码； 同时备份好记助词，在忘记密码后可以让你方便回复钱包资产管理",
    "profile_description_tips3": "“一个账户标示一个记助词，一个对应的密码，由记助词产生所有钱包地址",
    "profile_import": "导入一个老账户",
    "profile_name": "账户名",
    "profile_name_already_exists": "账户名已存在",
    "profile_name_error": "账户名输入错误!",
    "profile_not_matching_network_option_1": "注销并更改个人资料",
    "profile_not_matching_network_option_2": "创建新的个人资料",
    "profile_not_matching_network_option_3": "关闭并切换网络",
    "profile_not_matching_network_warning_message": "您的个人资料的网络与当前网络不匹配。请选择以下选项之一来解决此问题。",
    "profile_not_matching_network_warning_titl": "警告",
    "program_description": "基于Symbol区块链设计，开源的Symbol数字资产系统，方便的访问symbol网络，创建账户、管理资产和更多操作…",
    "public_key": "公钥",
    "public_key_addition": "添加联署人",
    "public_key_deletion": "删除联署人",
    "public_key_invalid": "此公钥不合法",
    "qr_code": "二维码",
    "qr_code_generation_failed": "二维码生成失败",
    "qrcode_detail_item_address": "地址",
    "qrcode_detail_item_contact_name": "联系人姓名",
    "qrcode_detail_item_mnemonic_passphrase": "助记密码",
    "qrcode_detail_item_network_type": "网络类型",
    "qrcode_detail_item_type": "QR码类型",
    "qrcode_detail_item_type_contactqr": "地址",
    "qrcode_detail_item_type_cosignatureqr": "要求共同签名",
    "qrcode_detail_item_type_mnemonicqr": "导入助记符",
    "qrcode_detail_item_type_transactionqr": "发票",
    "qrcode_password_info": "上载的QR码受密码保护。\n请在生成此二维码时输入您的密码。",
    "recipient": "接收人",
    "refresh": "刷新",
    "refresh_failed": "刷新失败",
    "refresh_success": "刷新成功",
    "refresh_too_fast_warning": "刷新频率过高，请稍后再试。",
    "register": "注册",
    "relative": "相对",
    "removal_greater_than_cosignatories": "最小删除所需余弦比可用余弦多{delta}。请添加余弦或减少最小删除数。",
    "removal_or_approval_is_zero": "如果列表中有 {delta} 个签署者，则“最小批准”和“最小删除”不能设置为零",
    "repeat_password_label": "确认密码",
    "reset": "重置",
    "resolving_address": "解析地址 {address}...",
    "restore_mnemonic": "恢复助记词",
    "restrictable": "是否可限制",
    "rules_describe": "规则描述",
    "safe_storage_tips": "安全储存提示：",
    "save_backups": "在多个位置保存备份",
    "scenes_to_be_used": "使用场景",
    "see_transactions_other_account": "查看多签帐户交易记录",
    "seed_account_can_not_be_more_than_10": "本账户创建钱包数量已达上限，请更换账户以创建新钱包。",
    "select_a_namespace": "选择一个命名空间",
    "select_a_profile": "读取已有钱包",
    "select_accounts": "选择钱包",
    "select_all": "全选",
    "send": "发送",
    "sender": "发送者",
    "set_account_name": "设置账户名",
    "set_default_explorer": "输入的url不合法，已为您设置默认url",
    "set_explorer_link": "默认区块浏览器",
    "set_network_type": "设置网络类型",
    "SET_UP": "Node selection",
    "settings_tab_about": "About",
    "settings_tab_general": "General settings",
    "settings_tab_network": "Network settings",
    "settings_tab_password": "Profile password",
    "show_expired_mosaics": "显示过期马赛克",
    "show_expired_namespaces": "显示过期命名空间",
    "show_wizard": "Show wizard",
    "sidebar_item_accounts": "资产",
    "sidebar_item_community": "资讯",
    "sidebar_item_home": "首页",
    "sidebar_item_mosaics": "马赛克",
    "sidebar_item_multisig": "多签",
    "sidebar_item_namespaces": "命名空间",
    "sidebar_item_settings": "设置",
    "signature": "签名",
    "signer_public_key": "签名者公钥",
    "skip": "跳过",
    "speed": "产块速度",
    "start_finalization_epoch": "开始完成时代",
    "status": "状态",
    "success_account_unlocked": "账户解锁成功",
    "success_password_changed": "密码已成功更新，请重新登录。",
    "success_settings_updated": "设置已成功更新",
    "success_transaction_partial_announced": "挂载事务宣布成功",
    "success_transactions_announced": "交易宣布成功",
    "success_transactions_signed": "签署事务成功",
    "successful_copy": "复制成功",
    "successful_operation": "操作成功",
    "supply": "供应量",
    "supply_can_not_less_than_0": "供应量不可小于零",
    "table_header_alias_identifier": "别名",
    "table_header_alias_type": "别名类型",
    "table_header_balance": "剩余数量",
    "table_header_divisibility": "可分割性",
    "table_header_expiration": "有效期",
    "table_header_expired": "是否过期",
    "table_header_hex_id": "ID",
    "table_header_name": "别名",
    "table_header_restrictable": "限制性",
    "table_header_supply": "可供应量",
    "table_header_supply_mutable": "可变供应",
    "table_header_transferable": "可传输性",
    "the_backup_is_wrong": "记助词一旦备份错了，你的资产可能不能被恢复，请谨慎确认记助词的单词和列表顺序。",
    "the_mnemonic_order_is_correct_and_the_backup_is_successful": "助记词顺序正确，备份成功",
    "the_mosaic_to_be_sent_is_empty": "待发送马赛克为空",
    "the_root_namespace_cannot_be_longer_than_16": "Root namespace 长度不能大于16",
    "the_sub_namespace_cannot_be_longer_than_16": "Sub-namespace 长度不能大于64",
    "the_value_of_duration_cannot_be_less_than_1": "Duration 的值不能小于1",
    "tips": "提示",
    "title": "标题",
    "to": "至",
    "to_symbol": "to Symbol",
    "too_many_cosignatories": "最大联名签字人数量为 {maxCosignatoriesPerAccount} ，请删除 {delta} 联名签字人",
    "top_window_console": "控制台",
    "transaction_descriptor_16705": "完成聚合",
    "transaction_descriptor_16707": "投票关键链接",
    "transaction_descriptor_16708": "账户元数据",
    "transaction_descriptor_16712": "资金锁定",
    "transaction_descriptor_16716": "绑定账户",
    "transaction_descriptor_16717": "马赛克定义",
    "transaction_descriptor_16718": "注册命名空间",
    "transaction_descriptor_16720": "账户地址约束",
    "transaction_descriptor_16721": "马赛克全局约束",
    "transaction_descriptor_16722": "密码锁定",
    "transaction_descriptor_16724": "转账",
    "transaction_descriptor_16725": "修改多签名帐户",
    "transaction_descriptor_16961": "担保聚合",
    "transaction_descriptor_16963": "验证密钥链接",
    "transaction_descriptor_16964": "马赛克元数据",
    "transaction_descriptor_16972": "Link node key",
    "transaction_descriptor_16973": "改变马赛克供应量",
    "transaction_descriptor_16974": "地址别名",
    "transaction_descriptor_16976": "账户马赛克约束",
    "transaction_descriptor_16977": "马赛克地址约束",
    "transaction_descriptor_16978": "密证",
    "transaction_descriptor_17220": "命名空间元数据",
    "transaction_descriptor_17230": "马赛克别名",
    "transaction_descriptor_17232": "账户操作约束",
    "transaction_details": "事务细节",
    "transaction_expired": "交易已过期",
    "transaction_has_cosignature": "已接收的联合签名",
    "transaction_needs_cosignature": "等待共同签名的交易",
    "transaction_needs_cosignature_explain": "这笔交易需要多方联署审批，请立即解锁您的帐户以发送联名交易。",
    "transaction_needs_cosignature_explain_signed": "此交易需要多方通过发送共同签名进行批准。\n您已经为此交易发送了共同签名。\n请等待其他共同签署人批准。\n您可以下载QR码并将其发送给其他共同签名者，以使他们可以轻松地对其部分进行签名。",
    "transaction_qr_action_desc": "单击继续以打开包含这些详细信息的传输页面。",
    "transaction_qr_code": "交易二维码",
    "transaction_received_cosignature_explain": "已完成联合签名",
    "transaction_status_confirmed": "历史记录",
    "transaction_status_partial": "挂载事务",
    "transaction_status_unconfirmed": "未确认",
    "transaction_type": "交易类型",
    "transaction_uri": "交易URI",
    "transaction_uri_explanation": "此事务的URI表示形式。\n您可以复制此URI并将其发送到另一台设备或其他人以导入并签署交易。",
    "transactions": "交易",
    "transactions_tab_confirmed": "历史记录",
    "transactions_tab_partial": "挂载事务",
    "transactions_tab_unconfirmed": "未确认",
    "transfer_target": "转账目标",
    "transferable": "可传输",
    "transmittable": "可传输",
    "uncheck_all": "全部取消",
    "unconfirmed": "未确认",
    "unconfirmed_transaction": "未确认事务",
    "unknown": "未知",
    "unlink": "解绑",
    "unlink_namespace_from": "解绑 {aliasTarget} 从 {namespaceName}",
    "update_completed": "更新成功",
    "upload_file_message": "单击或拖动文件以上传",
    "upload_qr_code": "上传二维码",
    "upload_qr_code_explanation": "上载或扫描以下有效QR码之一。\n识别QR码类型后，您将进入下一步执行相关操作。",
    "upload_qr_code_explanation_type_contactqr": "地址二维码",
    "upload_qr_code_explanation_type_cosignatureqr": "共同签名QR码",
    "upload_qr_code_explanation_type_mnemonicqr": "助记码",
    "upload_qr_code_explanation_type_transactionqr": "发票二维码",
    "upload_qr_code_invalid_type_message": "不允许输入Type（{type}）！\n请使用上面列出的有效QR码重试。",
    "upload_qr_tab_scan": "通过相机扫描",
    "upload_qr_tab_upload_image": "上传图片",
    "uploaded_qr_code": "上载QR码",
    "use_paper_and_pen_to_correctly_copy_mnemonics": "使用纸和笔正确抄写助记词,如果你的手机丢失、被盗、损坏,助记词将可以恢复你的资产",
    "used_to_bind_a_account_address": "用于绑定一个钱包地址，作为其转账别名使用； 用于设置账户过滤器； 用于绑定一个Mosaic ID 。",
    "user_aborted_transaction_confirmation": "已中止交易",
    "value_too_big": "输入的值太大",
    "variable_supply": "可变供应量",
    "verify_backup_mnemonics": "下一步：验证备份助记词",
    "verify_Mnemonic_phrase": "验证助记词",
    "verify_mnemonics": "验证备份助记词",
    "warning_already_a_cosignatory": "此帐户已是联名用户！",
    "welcome": "Welcome",
    "word": "字",
    "x_seconds": "{seconds}秒"
}

'''
'''--- src/main.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import Router from 'vue-router';
import VueRx from 'vue-rx';
import moment from 'vue-moment';
import iView from 'view-design';
import locale from 'view-design/dist/locale/en-US';
import 'view-design/dist/styles/iview.css';
import infiniteScroll from 'vue-infinite-scroll';

// internal dependencies
import { UIBootstrapper } from '@/app/UIBootstrapper';
import { AppStore } from '@/app/AppStore';
import i18n from '@/language/index.ts';
import router from '@/router/AppRouter';
import VueNumber from 'vue-number-animation';
import { VeeValidateSetup } from '@/core/validation/VeeValidateSetup';
// @ts-ignore
import App from '@/app/App.vue';

/// region UI plugins
Vue.use(iView, { locale });
Vue.use(moment as any);
Vue.use(Router);
Vue.use(VueRx);
Vue.use(VueNumber);
VeeValidateSetup.initialize();
Vue.use(infiniteScroll);
/// end-region UI plugins

const app = new Vue({
    router,
    store: AppStore,
    i18n,
    created: function () {
        // This will execute following processes:
        // - configure $Notice
        // - configure Electron
        // - configure Vue directives
        UIBootstrapper.configure(this);
    },
    render: (h) => h(App),
});

app.$mount('#app');
export default app;

'''
'''--- src/router/AppRoute.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { RouteConfig } from 'vue-router';

// internal dependencies
import { RouteMeta } from './RouteMeta';

/**
 * Vue Router route extension
 * @interface AppRoute
 * @extends {RouteConfig}
 */
export interface AppRoute extends RouteConfig {
    name: string;
    meta: RouteMeta;
    children?: AppRoute[];
}

'''
'''--- src/router/AppRouter.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import Router, { RawLocation } from 'vue-router';
// internal dependencies
import { routes } from '@/router/routes';
import { AppRoute } from './AppRoute';
import { TabEntry } from './TabEntry';
import { AppStore } from '@/app/AppStore';
import { ProfileService } from '@/services/ProfileService';

/**
 * Extension of Vue Router
 * @class AppRouter
 * @extends {Router}
 */
export class AppRouter extends Router {
    /**
     * Application routes
     */
    public readonly routes: AppRoute[];

    constructor(options) {
        super(options);
        this.routes = options.routes;
        const originalPush = this.push;
        this.push = (location: RawLocation) => {
            return originalPush.call(this, location).catch(() => {
                /* eslint */
            });
        };
        this.beforeEach((to, from, next) => {
            const service = new ProfileService();
            const hasAccounts = service.getProfiles().length > 0;

            // No account when app is opened: redirect to create account page
            const skipRedirect: string[] = ['profiles.importProfile.importStrategy'];
            if (!from.name && !hasAccounts && !skipRedirect.includes(to.name)) {
                return next({ name: 'profiles.importProfile.importStrategy' });
            }

            if (!to.meta.protected) {
                return next(/* no-redirect */);
            }

            const isAuthenticated = AppStore.getters['profile/isAuthenticated'] === true;
            if (!isAuthenticated) {
                return next({ name: 'profiles.login' });
            }

            return next();
        });
    }

    /**
     * Gets routes from Parent Route Name
     * @param {string} [parentRouteName]
     * @returns {AppRoute[]}
     */
    public getRoutes(parentRouteName?: string): AppRoute[] {
        const parentRoute = this.getParentRoute(parentRouteName);
        if (!parentRoute) {
            return [];
        }
        return this.getChildRoutes(parentRoute);
    }

    /**
     * Get Tab Entries from Parent Route Name
     *
     * @param {string} [parentRouteName]
     * @returns {TabEntry[]}
     */
    public getTabEntries(parentRouteName?: string): TabEntry[] {
        const routes = this.getRoutes(parentRouteName);
        return TabEntry.getFromRoutes(routes);
    }

    /**
     * Gets a route from string
     * @private
     * @param {string} [parentRouteName]
     * @returns {RouteConfig[]}
     */
    private getParentRoute(parentRouteName: string = ''): AppRoute {
        const routes = [...this.routes];

        // - read custom route configuration
        // - first top level route contains all app routes
        // - second top level route contains login
        const appRoute = routes.shift();
        /* const loginRoute =*/ routes.shift();

        if (!parentRouteName.length) {
            return appRoute;
        }

        // - find requested top level route
        const modules = ['dashboard', 'mosaics', 'multisig', 'namespaces', 'settings', 'accounts', 'community'];

        // - app modules
        const moduleRoutes = appRoute.children.filter(({ name }) => modules.includes(name));

        // - find by name
        const module = moduleRoutes.find((r) => r.name === parentRouteName);

        // - name does not represent a top level route
        if (undefined === module) {
            throw new Error(`Top level (module) route with name '${parentRouteName}' does not exist.`);
        }

        return module;
    }

    /**
     *  Gets child routes from a route
     * @private
     * @param {AppRoute[]} routes
     * @returns {AppRoute[]}
     */
    private getChildRoutes(parentRoute: AppRoute): AppRoute[] {
        if (!parentRoute.children) {
            return [];
        }
        return [...parentRoute.children].filter(({ meta }) => !meta.hideFromMenu);
    }
}

// create router instance
const router = new AppRouter({
    mode: 'hash',
    routes,
});

export default router;

'''
'''--- src/router/RouteMeta.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

/**
 * Metadata added to Vue Router routes
 * @interface RouteMeta
 */
export interface RouteMeta {
    /**
     * Authentication required
     * @type {boolean}
     */
    protected: boolean;
    /**
     * Localized route name shown in the view
     * @type {string}
     */
    title?: string;
    // @TODO: REVIEW
    clickable?: boolean;
    icon?: unknown;
    active?: boolean;
    nextPage?: string;
    hideFromMenu?: boolean;
}

'''
'''--- src/router/TabEntry.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Route } from 'vue-router';

// internal dependencies
import { AppRoute } from './AppRoute';

export class TabEntry {
    /**
     * Get Tab Entries from routes
     * @static
     * @param {AppRoute[]} routes
     * @returns {TabEntry[]}
     */
    public static getFromRoutes(routes: AppRoute[]): TabEntry[] {
        return routes.map(({ meta, name }) => new TabEntry(meta?.title, name));
    }

    /**
     * Checks if the Tab Entry is the current route
     * @param {Route} activeRoute
     * @returns {boolean}
     */
    public isActive(activeRoute: Route): boolean {
        return activeRoute.matched.map(({ name }) => name).includes(this.route);
    }

    /**
     * Creates an instance of TabEntry.
     * @param {string} title
     * @param {string} route
     */
    private constructor(public readonly title: string, public readonly route: string) {}
}

'''
'''--- src/router/routes.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { createStepImage, importStepImage, officialIcons, importPrivateKeyStepImage } from '@/views/resources/Images';
import { AppRoute } from './AppRoute';

export const routes: AppRoute[] = [
    {
        path: '/',
        name: 'home',
        meta: { protected: false },
        redirect: { name: 'profiles.login' },
        // @ts-ignore
        component: () => import('@/views/layout/PageLayout/PageLayout.vue'),
        /// region PageLayout children
        children: [
            {
                path: '/profiles',
                name: 'profiles',
                // @ts-ignore
                component: () => import('@/views/layout/RouterPage.vue'),
                meta: {
                    protected: false,
                    hideFromMenu: true,
                },
                children: [
                    {
                        path: 'create',
                        name: 'profiles.importProfile.importStrategy',
                        meta: { protected: false },
                        // @ts-ignore
                        component: () => import('@/views/pages/profiles/import-profile/import-strategy/ImportStrategy.vue'),
                    },
                    {
                        path: 'create',
                        name: 'profiles.createProfile',
                        meta: { protected: false },
                        // @ts-ignore
                        component: () => import('@/views/pages/profiles/create-profile/CreateProfile.vue'),
                        children: [
                            {
                                path: 'info',
                                name: 'profiles.createProfile.info',
                                meta: {
                                    protected: false,
                                    icon: createStepImage.createStepImage1,
                                    nextPage: 'profiles.createProfile.generateMnemonic',
                                },
                                // @ts-ignore
                                component: () => import('@/views/forms/FormProfileCreation/FormProfileCreation.vue'),
                            },
                            {
                                path: 'generateMnemonic',
                                name: 'profiles.createProfile.generateMnemonic',
                                meta: {
                                    protected: false,
                                    icon: createStepImage.createStepImage2,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/create-profile/generate-mnemonic/GenerateMnemonic.vue'),
                            },
                            {
                                path: 'showMnemonic',
                                name: 'profiles.createProfile.showMnemonic',
                                meta: {
                                    protected: false,
                                    icon: createStepImage.createStepImage3,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/create-profile/show-mnemonic/ShowMnemonic.vue'),
                            },
                            {
                                path: 'verifyMnemonic',
                                name: 'profiles.createProfile.verifyMnemonic',
                                meta: {
                                    protected: false,
                                    icon: createStepImage.createStepImage4,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/create-profile/verify-mnemonic/VerifyMnemonic.vue'),
                            },
                            {
                                path: 'finishCreate',
                                name: 'profiles.createProfile.finalize',
                                meta: {
                                    protected: false,
                                    icon: createStepImage.createStepImage5,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/create-profile/finalize/Finalize.vue'),
                            },
                        ],
                    },
                    {
                        path: 'import',
                        name: 'profiles.importProfile',
                        meta: { protected: false },
                        // @ts-ignore
                        component: () => import('@/views/pages/profiles/import-profile/ImportProfile.vue'),
                        children: [
                            {
                                path: 'inputAccountInfo',
                                name: 'profiles.importProfile.info',
                                meta: {
                                    protected: false,
                                    icon: importStepImage.importStepImage1,
                                    nextPage: 'profiles.importProfile.importMnemonic',
                                },
                                // @ts-ignore
                                component: () => import('@/views/forms/FormProfileCreation/FormProfileCreation.vue'),
                            },
                            {
                                path: 'importMnemonic',
                                name: 'profiles.importProfile.importMnemonic',
                                meta: {
                                    protected: false,
                                    icon: importStepImage.importStepImage2,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/import-profile/import-mnemonic/ImportMnemonic.vue'),
                            },
                            {
                                path: 'walletChoose',
                                name: 'profiles.importProfile.walletSelection',
                                meta: {
                                    protected: false,
                                    icon: importStepImage.importStepImage3,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/import-profile/account-selection/AccountSelection.vue'),
                            },
                            {
                                path: 'finishImport',
                                name: 'profiles.importProfile.finalize',
                                meta: {
                                    protected: false,
                                    icon: importStepImage.importStepImage4,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/import-profile/finalize/Finalize.vue'),
                            },
                        ],
                    },
                    {
                        path: 'importPrivateKey',
                        name: 'profiles.importPrivateKey',
                        meta: {
                            protected: false,
                        },
                        // @ts-ignore
                        component: () => {
                            // @ts-ignore
                            return import('@/views/pages/profiles/import-private-key/ImportPrivateKey.vue');
                        },
                        children: [
                            {
                                path: 'fillInfo',
                                name: 'profiles.importPrivateKey.fillInfo',
                                meta: {
                                    protected: false,
                                    nextPage: 'profiles.importPrivateKey.input',
                                    icon: importPrivateKeyStepImage.importPrivateKeyStepImage1,
                                },
                                // @ts-ignore
                                component: () => import('@/views/forms/FormCreatePrivateKeyWallet/FormCreatePrivateKeyWallet.vue'),
                            },
                            {
                                path: 'input',
                                name: 'profiles.importPrivateKey.input',
                                meta: {
                                    protected: false,
                                    icon: importPrivateKeyStepImage.importPrivateKeyStepImage2,
                                },

                                component: () => {
                                    // @ts-ignore
                                    return import('@/views/pages/profiles/import-private-key/input-private-key/InputPrivateKey.vue');
                                },
                            },
                            {
                                path: 'finalize',
                                name: 'profiles.importPrivateKey.finalize',
                                meta: {
                                    protected: false,
                                    icon: importPrivateKeyStepImage.importPrivateKeyStepImage3,
                                },
                                // @ts-ignore
                                component: () => import('@/views/pages/profiles/import-private-key/finalize/Finalize.vue'),
                            },
                        ],
                    },
                ],
            },
            {
                path: '/dashboard',
                name: 'dashboard',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_home',
                    icon: officialIcons.dashboard,
                },
                redirect: '/home',
                // @ts-ignore
                component: () => import('@/views/pages/dashboard/Dashboard.vue'),
                children: [
                    {
                        path: '/home/:action?',
                        name: 'dashboard.index',
                        meta: {
                            protected: true,
                            title: 'page_title_dashboard',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/dashboard/home/DashboardHomePage.vue'),
                    },
                    {
                        path: '/transfer/:recipientAddress?',
                        name: 'dashboard.transfer',
                        meta: {
                            protected: true,
                            title: 'page_title_transfer',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/dashboard/transfer/DashboardTransferPage.vue'),
                        props: true,
                    },
                    {
                        path: '/invoice',
                        name: 'dashboard.invoice',
                        meta: {
                            protected: true,
                            title: 'page_title_invoice',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/dashboard/invoice/DashboardInvoicePage.vue'),
                    },
                    // {
                    //   path: '/harvesting',
                    //   name: 'dashboard.harvesting',
                    //   meta: {
                    //     protected: true,
                    //     title: 'page_title_harvesting',
                    //   },
                    //   // @ts-ignore
                    //   component: () => import('@/views/pages/dashboard/harvesting/DashboardHarvestingPage.vue'),
                    // }
                ],
            },
            {
                path: '/accounts',
                name: 'accounts',
                redirect: '/details',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_accounts',
                    icon: officialIcons.wallet,
                },
                // @ts-ignore
                component: () => import('@/views/pages/accounts/Accounts.vue'),
                children: [
                    {
                        path: '/details',
                        name: 'accounts.details',
                        meta: {
                            protected: true,
                            title: 'page_title_account_details',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/accounts/AccountDetailsPage/AccountDetailsPage.vue'),
                    },
                    {
                        path: '/backup',
                        name: 'accounts.backup',
                        meta: {
                            protected: true,
                            title: 'page_title_account_backup',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/accounts/AccountBackupPage/AccountBackupPage.vue'),
                    },
                    // {
                    //   path: 'harvesting',
                    //   name: 'wallet.harvesting',
                    //   meta: {
                    //     protected: true,
                    //     title: 'page_title_account_harvesting',
                    //   },
                    //   // @ts-ignore
                    //   component: () => import('@/views/pages/accounts/AccountHarvestingPage/AccountHarvestingPage.vue'),
                    // },
                ],
            },
            {
                path: '/mosaics',
                name: 'mosaics',
                redirect: '/mosaicList',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_mosaics',
                    icon: officialIcons.mosaic,
                },
                // @ts-ignore
                component: () => import('@/views/pages/mosaics/MosaicsDashboardPage/MosaicsDashboardPage.vue'),
                children: [
                    {
                        path: '/mosaicList',
                        name: 'mosaics.list',
                        meta: {
                            protected: true,
                            title: 'page_title_mosaics',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/mosaics/MosaicListPage/MosaicListPage.vue'),
                    },
                    {
                        path: '/createMosaic',
                        name: 'mosaics.create',
                        meta: {
                            protected: true,
                            title: 'page_title_mosaics_create',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/mosaics/CreateMosaicPage/CreateMosaicPage.vue'),
                    },
                ],
            },
            {
                path: '/namespaces',
                name: 'namespaces',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_namespaces',
                    icon: officialIcons.namespace,
                },
                redirect: '/namespaceList',
                // @ts-ignore
                component: () => import('@/views/pages/namespaces/NamespacesDashboardPage/NamespacesDashboardPage.vue'),
                children: [
                    {
                        path: '/namespaceList',
                        name: 'namespaces.list',
                        meta: {
                            protected: true,
                            title: 'page_title_namespaces',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/namespaces/NamespaceListPage/NamespaceListPage.vue'),
                    },
                    {
                        path: '/createNamespace',
                        name: 'namespaces.createRootNamespace',
                        meta: {
                            protected: true,
                            title: 'page_title_namespaces_create',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/namespaces/CreateNamespacePage/CreateNamespacePage.vue'),
                    },
                    {
                        path: '/createSubNamespace',
                        name: 'namespaces.createSubNamespace',
                        meta: {
                            protected: true,
                            title: 'create_sub_namespace',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/namespaces/createSubNamespace/CreateSubNamespace.vue'),
                    },
                ],
            },
            {
                path: '/multisig',
                name: 'multisig',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_multisig',
                    icon: officialIcons.multisig,
                },
                redirect: '/multisigManagement',
                // @ts-ignore
                component: () => import('@/views/pages/multisig/MultisigDashboardPage/MultisigDashboardPage.vue'),
                children: [
                    {
                        path: '/multisigManagement',
                        name: 'multisig.management',
                        meta: {
                            protected: true,
                            title: 'page_title_multisig_manage',
                        },
                        // @ts-ignore
                        component: () => import('@/views/pages/multisig/ManageAccountPage/ManageAccountPage.vue'),
                    },
                ],
            },
            {
                path: '/communityPanel',
                name: 'community',
                redirect: '/information',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_community',
                    icon: officialIcons.news,
                },
                // @ts-ignore
                component: () => import('@/views/pages/community/Community.vue'),
                children: [
                    {
                        path: '/information',
                        name: 'community.index',
                        meta: { protected: true },
                        // @ts-ignore
                        component: () => import('@/views/pages/community/information/Information.vue'),
                    },
                ],
            },
            {
                path: '/communityPanel', //TODO: Harvesting
                name: 'community',
                redirect: '/information',
                meta: {
                    protected: true,
                    clickable: true,
                    title: 'sidebar_item_community',
                    icon: officialIcons.news,
                },
                // @ts-ignore
                component: () => import('@/views/pages/community/Community.vue'),
                children: [
                    {
                        path: '/information',
                        name: 'community.index',
                        meta: { protected: true },
                        // @ts-ignore
                        component: () => import('@/views/pages/community/information/Information.vue'),
                    },
                ],
            },
        ],
        /// end-region PageLayout children
    },
    {
        path: '/login',
        name: 'profiles.login',
        meta: { protected: false },
        // @ts-ignore
        component: () => import('@/views/pages/profiles/LoginPage.vue'),
    },
];

'''
'''--- src/services/AccountService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Account, Address, NetworkType, Password, SimpleWallet, Crypto } from 'symbol-sdk';
import { ExtendedKey, MnemonicPassPhrase, Wallet } from 'symbol-hd-wallets';
// internal dependencies
import { DerivationPathLevels, DerivationService } from './DerivationService';
import { DerivationPathValidator } from '@/core/validation/validators';
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';
import { AccountModelStorage } from '@/core/database/storage/AccountModelStorage';

export class AccountService {
    private readonly storage = AccountModelStorage.INSTANCE;

    /**
     * Default account derivation path
     * @var {string}
     */
    public static readonly DEFAULT_ACCOUNT_PATH = `m/44'/4343'/0'/0'/0'`;

    public getAccounts(): AccountModel[] {
        return Object.values(this.getAccountsById());
    }

    public getAccount(id: string): AccountModel | undefined {
        return this.getAccountsById()[id];
    }

    public getAccountsById(): Record<string, AccountModel> {
        return this.storage.get() || {};
    }

    public saveAccount(account: AccountModel): AccountModel {
        const accounts = this.getAccountsById();
        accounts[account.id] = account;
        this.storage.set(accounts);
        return account;
    }

    public updateName(account: AccountModel, name: string): AccountModel {
        return this.saveAccount(Object.assign(account, { name }));
    }

    public updateRemoteAccount(account: AccountModel, encRemoteAccountPrivateKey: string): AccountModel {
        return this.saveAccount(Object.assign(account, { encRemoteAccountPrivateKey }));
    }

    /**
     * Derive \a path using \a mnemonic pass phrase
     */
    public getAccountByPath(
        mnemonic: MnemonicPassPhrase,
        networkType: NetworkType,
        path: string = AccountService.DEFAULT_ACCOUNT_PATH,
    ): Account {
        if (false === DerivationPathValidator.validate(path)) {
            const errorMessage = 'Invalid derivation path: ' + path;
            console.error(errorMessage);
            throw new Error(errorMessage);
        }

        // create hd extended key
        const extendedKey = ExtendedKey.createFromSeed(mnemonic.toSeed().toString('hex'));

        // create account
        const account = new Wallet(extendedKey);
        return (account.getChildAccount(path, networkType) as unknown) as Account;
    }

    /**
     * Get extended key around \a mnemonic for \a networkTypw
     * @param {MnemonicPassPhrase} mnemonic
     * @return {ExtendedKey}
     */
    public getExtendedKeyFromMnemonic(mnemonic: MnemonicPassPhrase): ExtendedKey {
        return ExtendedKey.createFromSeed(mnemonic.toSeed().toString('hex'));
    }

    /**
     * Generate \a count accounts using \a mnemonic
     * @param {MnemonicPassPhrase} mnemonic
     * @param {NetworkType} networkType
     * @param {string} startPath
     * @param {number} count
     * @return {Account[]}
     */
    public generateAccountsFromMnemonic(mnemonic: MnemonicPassPhrase, networkType: NetworkType, count: number = 10): Account[] {
        const derivationService = new DerivationService();

        // create hd extended key
        const xkey = this.getExtendedKeyFromMnemonic(mnemonic);

        // increment derivation path \a count times
        const paths = [...Array(count).keys()].map((index) => {
            if (index == 0) {
                return AccountService.DEFAULT_ACCOUNT_PATH;
            }

            return derivationService.incrementPathLevel(AccountService.DEFAULT_ACCOUNT_PATH, DerivationPathLevels.Profile, index);
        });

        const wallets = paths.map((path) => new Wallet(xkey.derivePath(path)));
        return wallets.map((wallet) => (wallet.getAccount(networkType) as unknown) as Account);
    }

    /**
     * Generate accounts using a mnemonic and an array of paths
     * @param {MnemonicPassPhrase} mnemonic
     * @param {NetworkType} networkType
     * @param {string[]} paths
     * @returns {Account[]}
     */
    public generateAccountsFromPaths(mnemonic: MnemonicPassPhrase, networkType: NetworkType, paths: string[]): Account[] {
        // create hd extended key
        const xkey = this.getExtendedKeyFromMnemonic(mnemonic);
        const wallets = paths.map((path) => new Wallet(xkey.derivePath(path)));

        return wallets.map((wallet) => (wallet.getAccount(networkType) as unknown) as Account);
    }

    /**
     * Get list of addresses using \a mnemonic
     * @return {Address[]}
     */
    public getAddressesFromMnemonic(mnemonic: MnemonicPassPhrase, networkType: NetworkType, count: number = 10): Address[] {
        const accounts = this.generateAccountsFromMnemonic(mnemonic, networkType, count);
        return accounts.map((acct) => acct.address);
    }

    public getKnownAccounts(knownAccounts: string[]): AccountModel[] {
        // search in known accounts
        return this.getAccounts().filter((wlt) => knownAccounts.includes(wlt.id));
    }

    /**
     * Create a account instance from mnemonic
     * @return {AccountModel}
     */
    public getDefaultAccount(
        currentProfile: ProfileModel,
        mnemonic: MnemonicPassPhrase,
        password: Password,
        networkType: NetworkType,
    ): AccountModel {
        const account = this.getAccountByPath(mnemonic, networkType, AccountService.DEFAULT_ACCOUNT_PATH);

        const simpleWallet = SimpleWallet.createFromPrivateKey('Seed Account 1', password, account.privateKey, networkType);

        return {
            id: SimpleObjectStorage.generateIdentifier(),
            profileName: currentProfile.profileName,
            name: simpleWallet.name,
            node: '',
            type: AccountType.SEED,
            address: simpleWallet.address.plain(),
            publicKey: account.publicKey,
            encryptedPrivateKey: simpleWallet.encryptedPrivateKey,
            path: AccountService.DEFAULT_ACCOUNT_PATH,
            isMultisig: false,
        };
    }

    /**
     * Create a child account instance from mnemonic and path
     * @return {AccountModel}
     */
    public getChildAccountByPath(
        currentProfile: ProfileModel,
        password: Password,
        mnemonic: MnemonicPassPhrase,
        nextPath: string,
        networkType: NetworkType,
        childAccountName: string,
    ): AccountModel {
        // - derive account
        const account = this.getAccountByPath(mnemonic, networkType, nextPath);

        const simpleWallet = SimpleWallet.createFromPrivateKey(childAccountName, password, account.privateKey, networkType);

        return {
            id: SimpleObjectStorage.generateIdentifier(),
            profileName: currentProfile.profileName,
            name: childAccountName,
            node: '',
            type: AccountType.SEED,
            address: simpleWallet.address.plain(),
            publicKey: account.publicKey,
            encryptedPrivateKey: simpleWallet.encryptedPrivateKey,
            path: nextPath,
            isMultisig: false,
        };
    }

    /**
     * Create a sub account by private key
     * @param currentProfile
     * @param password
     * @param childAccountName
     * @param privateKey
     * @param networkType
     * @return {AccountModel}
     */
    public getSubAccountByPrivateKey(
        currentProfile: ProfileModel,
        password: Password,
        childAccountName: string,
        privateKey: string,
        networkType: NetworkType,
    ): AccountModel {
        const account = Account.createFromPrivateKey(privateKey, networkType);
        const simpleWallet = SimpleWallet.createFromPrivateKey(childAccountName, password, account.privateKey, networkType);

        return {
            id: SimpleObjectStorage.generateIdentifier(),
            profileName: currentProfile.profileName,
            name: childAccountName,
            node: '',
            type: AccountType.PRIVATE_KEY,
            address: simpleWallet.address.plain(),
            publicKey: account.publicKey,
            encryptedPrivateKey: simpleWallet.encryptedPrivateKey,
            path: '',
            isMultisig: false,
        };
    }

    /**
     * Returns a AccountModel with an updated SimpleWallet
     * @param {AccountModel} account
     * @param {Password} oldPassword
     * @param {Password} newPassword
     */
    public updateWalletPassword(account: AccountModel, oldPassword: Password, newPassword: Password): AccountModel {
        // Password modification is not allowed for hardware wallets
        if (account.type !== AccountType.SEED && account.type !== AccountType.PRIVATE_KEY) {
            throw new Error('Hardware account password cannot be changed');
        }

        const privateKey = Crypto.decrypt(account.encryptedPrivateKey, oldPassword.value);

        // Encrypt the private key with the new password
        const newSimpleWallet = SimpleWallet.createFromPrivateKey(
            account.name,
            newPassword,
            privateKey,
            AccountModel.getObjects(account).address.networkType,
        );
        // Update the account model
        return {
            ...account,
            encryptedPrivateKey: newSimpleWallet.encryptedPrivateKey,
        };
    }
}

'''
'''--- src/services/AssetTableService/AssetTableService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

/**
 * Table field to be used in a table header
 * @export
 * @interface TableField
 */
export interface TableField {
    name: string;
    label: string;
}

/**
 * Sorting directions
 * @export
 * @type {SortingDirections}
 */
export type SortingDirections = 'asc' | 'desc';

/**
 * Sorting options
 * @export
 * @type {TableSortingOptions}
 */
export type TableSortingOptions = {
    fieldName: string;
    direction: SortingDirections;
};

/**
 * Filtering types
 * @export
 * @type {FilteringTypes}
 */
export type FilteringTypes = 'show' | 'hide';

/**
 * Filtering options
 * @export
 * @type {TableFilteringOptions}
 */
export type TableFilteringOptions = {
    fieldName: string;
    filteringType: FilteringTypes;
};

export abstract class AssetTableService {
    protected constructor(public readonly currentHeight: number) {}

    /**
     * Return table fields to be displayed in a table header
     * @returns {TableField[]}
     */
    public abstract getTableFields(): TableField[];

    /**
     * Return table values to be displayed in a table rows
     * @returns {TableRowValues[]}
     */
    public abstract getTableRows(): any[];

    /**
     * Filter table rows according to filtering options
     * @param {TableRowValues[]} values
     * @param {TableFilteringOptions} filterBy
     * @returns {TableRowValues[]}
     */
    public filter(values: any[], filter: TableFilteringOptions): any[] {
        if (filter.filteringType === 'show') {
            return values;
        }

        if (filter.fieldName === 'expiration') {
            return values.filter(({ expiration }) => expiration !== 'expired');
        }

        if (filter.fieldName === 'expired') {
            return values.filter((value) => 'expired' in value && value.expired);
        }

        throw new Error(`Sorting by '${filter.fieldName}' field is not yet implemented`);
    }

    /**
     * Sorts array values according to sorting options
     * @param {TableRowValues[]} valuesToSort
     * @param {TableSortingOptions} sortBy
     * @returns {TableRowValues[]}
     */
    public sort(valuesToSort: any[], options: TableSortingOptions): any[] {
        const values = [...valuesToSort];
        const sortingMethod = options.direction === 'asc' ? 'sort' : 'reverse';
        if (!values.length) {
            return values;
        }

        // - use sample to identify fields type
        const sampleValue = [...values][0][options.fieldName];

        if (sampleValue === undefined) {
            return values;
        }

        // - sorting method depends on type
        if ('string' === typeof sampleValue) {
            return [...values][sortingMethod]((a, b) => {
                return a[options.fieldName]
                    .toLowerCase()
                    .localeCompare(b[options.fieldName].toLowerCase(), navigator.languages[0] || navigator.language, {
                        numeric: true,
                        ignorePunctuation: true,
                    });
            });
        } else if ('boolean' === typeof sampleValue) {
            return [...values][sortingMethod]((a, b) => {
                return a[options.fieldName] === b[options.fieldName] ? 0 : a[options.fieldName] ? -1 : 1;
            });
        } else if ('number' === typeof sampleValue) {
            return values[sortingMethod]((a, b) => {
                if (!b[options.fieldName] || !a[options.fieldName]) {
                    return 1;
                }
                return b[options.fieldName] - a[options.fieldName];
            });
        }

        throw new Error(`sorting the data type ${typeof sampleValue} is not supported`);
    }
}

'''
'''--- src/services/AssetTableService/MosaicTableService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { AssetTableService, TableField } from './AssetTableService';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { MosaicService } from '@/services/MosaicService';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

export class MosaicTableService extends AssetTableService {
    constructor(
        currentHeight: number,
        private readonly mosaics: MosaicModel[],
        private readonly networkConfiguration: NetworkConfigurationModel,
    ) {
        super(currentHeight);
    }

    /**
     * Return table fields to be displayed in a table header
     * @returns {TableField[]}
     */
    public getTableFields(): TableField[] {
        return [
            { name: 'hexId', label: 'table_header_hex_id' },
            { name: 'name', label: 'table_header_name' },
            { name: 'supply', label: 'table_header_supply' },
            { name: 'balance', label: 'table_header_balance' },
            { name: 'expiration', label: 'table_header_expiration' },
            { name: 'divisibility', label: 'table_header_divisibility' },
            { name: 'transferable', label: 'table_header_transferable' },
            { name: 'supplyMutable', label: 'table_header_supply_mutable' },
            { name: 'restrictable', label: 'table_header_restrictable' },
        ];
    }

    /**
     * Return table values to be displayed in a table rows
     * @returns {MosaicTableRowValues[]}
     */
    public getTableRows(): any[] {
        // - get reactive mosaic data from the store
        const mosaicsInfo = this.mosaics;
        const currentHeight = this.currentHeight;
        return mosaicsInfo
            .map((mosaicInfo) => {
                const expiration = MosaicService.getExpiration(
                    mosaicInfo,
                    currentHeight,
                    this.networkConfiguration.blockGenerationTargetTime,
                );
                // - map table fields
                return {
                    hexId: mosaicInfo.mosaicIdHex,
                    name: mosaicInfo.name || 'N/A',
                    supply: mosaicInfo.supply.toLocaleString(),
                    balance: (mosaicInfo.balance || 0) / Math.pow(10, mosaicInfo.divisibility),
                    expiration: expiration,
                    divisibility: mosaicInfo.divisibility,
                    transferable: mosaicInfo.transferable,
                    supplyMutable: mosaicInfo.supplyMutable,
                    restrictable: mosaicInfo.restrictable,
                };
            })
            .filter((x) => x); // filter out mosaics that are not yet available
    }
}

'''
'''--- src/services/AssetTableService/NamespaceTableService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { AliasType } from 'symbol-sdk';
// internal dependencies
import { AssetTableService, TableField } from './AssetTableService';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
import { NamespaceService } from '@/services/NamespaceService';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

export class NamespaceTableService extends AssetTableService {
    constructor(
        currentHeight: number,
        private readonly namespaces: NamespaceModel[],
        private readonly networkConfiguration: NetworkConfigurationModel,
    ) {
        super(currentHeight);
    }

    /**
     * Return table fields to be displayed in a table header
     * @returns {TableField[]}
     */
    public getTableFields(): TableField[] {
        return [
            { name: 'hexId', label: 'table_header_hex_id' },
            { name: 'name', label: 'table_header_name' },
            { name: 'expiration', label: 'table_header_expiration' },
            { name: 'expired', label: 'table_header_expired' },
            { name: 'aliasType', label: 'table_header_alias_type' },
            { name: 'aliasIdentifier', label: 'table_header_alias_identifier' },
        ];
    }

    public getTableRows(): any[] {
        const namespaces: NamespaceModel[] = this.namespaces;

        return namespaces.map((namespaceModel) => {
            const { expired, expiration } = this.getExpiration(namespaceModel);

            return {
                hexId: namespaceModel.namespaceIdHex,
                name: namespaceModel.name,
                expiration: expiration,
                expired: expired,
                aliasType: this.getAliasType(namespaceModel),
                aliasIdentifier: this.getAliasIdentifier(namespaceModel),
            };
        });
    }

    /**
     * Gets the namespace type to be displayed in the table
     * @private
     * @param the namespace model.
     * @returns {('N/A' | 'address' | 'mosaic')}
     */
    private getAliasType(namespaceModel: NamespaceModel): 'N/A' | 'address' | 'mosaic' {
        if (!namespaceModel.aliasTargetAddressRawPlain && !namespaceModel.aliasTargetMosaicIdHex) {
            return 'N/A';
        }
        return namespaceModel.aliasType === AliasType.Address ? 'address' : 'mosaic';
    }

    /**
     * Gets the namespace identifier to be displayed in the table
     * @private
     * @param the namespace model.
     * @returns {string}
     */
    private getAliasIdentifier(namespaceModel: NamespaceModel): string {
        return namespaceModel.aliasTargetMosaicIdHex || namespaceModel.aliasTargetAddressRawPlain || 'N/A';
    }

    /**
     * Returns a view of a namespace expiration info
     * @public
     * @param the namespace model.
     * @returns {string}
     */
    private getExpiration(namespaceModel: NamespaceModel): { expiration: string; expired: boolean } {
        return NamespaceService.getExpiration(this.networkConfiguration, this.currentHeight, namespaceModel.endHeight);
    }
}

'''
'''--- src/services/BlockService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { BlockInfoModelStorage } from '@/core/database/storage/BlockInfoModelStorage';
import { RepositoryFactory, UInt64 } from 'symbol-sdk';
import { BlockInfoModel } from '@/core/database/entities/BlockInfoModel';
import { Observable, of } from 'rxjs';
import { flatMap, map, tap } from 'rxjs/operators';
import * as _ from 'lodash';
import { ObservableHelpers } from '@/core/utils/ObservableHelpers';

export class BlockService {
    /**
     * The namespace information local cache.
     */
    private readonly blockInfoModelStorage = BlockInfoModelStorage.INSTANCE;

    public getKnownBlockInfos(generationHash: string): BlockInfoModel[] {
        return this.blockInfoModelStorage.get(generationHash) || [];
    }

    public getBlockInfo(
        repositoryFactory: RepositoryFactory,
        height: UInt64,
        alreadyLoadedBlocks: BlockInfoModel[],
    ): Observable<BlockInfoModel> {
        return repositoryFactory.getGenerationHash().pipe(
            flatMap((generationHash) => {
                const blockInfoModels = this.getKnownBlockInfos(generationHash);
                const cachedModel = blockInfoModels.find((m) => m.height === height.toString());
                const alreadyLoadedBlock = alreadyLoadedBlocks.find((m) => m.height === height.toString());
                //Only load from rest the first time in the app session (but using the stored cache for quick user feedback).
                if (cachedModel && alreadyLoadedBlock && cachedModel.generationHash === alreadyLoadedBlock.generationHash) {
                    return of(cachedModel);
                }
                return repositoryFactory
                    .createBlockRepository()
                    .getBlockByHeight(height)
                    .pipe(
                        map((dto) => new BlockInfoModel(dto)),
                        tap((model) => {
                            const blockInfoModels = _.uniqBy([model, ...this.getKnownBlockInfos(generationHash)], 'height');
                            this.blockInfoModelStorage.set(generationHash, blockInfoModels);
                        }),
                        ObservableHelpers.defaultFirst(cachedModel),
                    );
            }),
        );
    }
}

'''
'''--- src/services/CommunityService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import RSSParser from 'rss-parser';
import axios from 'axios';
// configuration
import { appConfig } from '@/config';

/// region protected helpers
/**
 * Request external feed data
 * @internal
 * @return {Promise<string>}
 */
const request = async (): Promise<string> => {
    let feedUrl = appConfig.articlesFeedUrl;
    if (process.env.NODE_ENV === 'development') {
        feedUrl = '/nemflash';
    }
    // execute request
    const response = await axios.get(feedUrl, { params: {} });
    return response.data;
};

/// end-region protected helpers

export interface ArticleEntry {
    /**
     * Publication date
     */
    pubDate: string;
    /**
     * Article creator
     */
    creator: string;
    /**
     * Article title
     */
    title: string;
    /**
     * Article excerpt
     */
    contentSnippet: string;
    /**
     * Article link
     */
    link: string;
}

export class CommunityService {
    /**
     * Get latest articles from RSS feed
     * @return {Promise<ArticleEntry[]}
     */
    public async getLatestArticles(): Promise<ArticleEntry[]> {
        const data = await request();

        // *safely* parse stream
        let parsedStream;
        try {
            parsedStream = await new RSSParser().parseString(data);
        } catch (e) {
            parsedStream = { items: [] };
        }

        return parsedStream.items.map(({ pubDate, creator, title, contentSnippet, link }) => ({
            pubDate,
            creator,
            title,
            contentSnippet,
            link:
                link && link.length && link.match(/^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/g)
                    ? link
                    : '#',
        }));
    }
}

'''
'''--- src/services/DerivationService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { DerivationPathValidator } from '@/core/validation/validators';
import { AccountService } from '@/services/AccountService';

export enum DerivationPathLevels {
    Purpose = 1,
    CoinType = 2,
    Profile = 3,
    Remote = 4, // BIP44=change
    Address = 5,
}

export class DerivationService {
    /**
     * Validate derivation path
     * @param {string} path
     * @return {boolean}
     */
    public isValidPath(path: string): boolean {
        return DerivationPathValidator.validate(path);
    }

    /**
     * Increment a derivation path level
     * @param {string} path
     * @param {DerivationPathLevel} which
     * @return {string}
     */
    public incrementPathLevel(path: string, which: DerivationPathLevels = DerivationPathLevels.Profile, step: number = 1): string {
        // make sure derivation path is valid
        this.assertValidPath(path);

        // purpose and coin type cannot be changed
        this.assertCanModifyLevel(which);

        // read levels and increment
        const index = which as number;
        const parts = path.split('/');

        // calculate next index (increment)
        const next = (step <= 1 ? 1 : step) + parseInt(parts[index].replace(/'/, ''));

        // modify affected level only
        return parts
            .map((level, idx) => {
                if (idx !== index) {
                    return level;
                }
                return `${next}'`;
            })
            .join('/');
    }

    /**
     * Returns the first missing consecutive account path in a path array
     * @param {string[]} paths
     * @returns {string}
     */
    public getNextAccountPath(paths: string[]): string {
        const defaultPath = AccountService.DEFAULT_ACCOUNT_PATH;

        // return the default path if no path in the array
        if (!paths.length) {
            return defaultPath;
        }

        // return the default path if it is not in the array
        if (paths.indexOf(defaultPath) === -1) {
            return defaultPath;
        }

        // get the sorted path indexes for the given derivation path level
        const pathsSortedByIndexes = paths
            .map((path) => ({
                path,
                pathIndex: parseInt(path.split('/')[DerivationPathLevels.Profile], 10),
            }))
            .sort((a, b) => a.pathIndex - b.pathIndex);

        // get the first non consecutive path index
        const firstCandidate = pathsSortedByIndexes
            // fill an array with indexes with no consecutive next index, and the last index
            .filter(({ pathIndex }, i, self) => {
                // the last path is always a candidate
                if (i === self.length - 1) {
                    return true;
                }

                // next path is not consecutive, add it to candidates
                if (self[i + 1].pathIndex !== pathIndex + 1) {
                    return true;
                }

                // next path is consecutive, skip
                return false;
            })
            .find((path) => path); // find the first candidate

        // return path incremented from the first candidate
        return this.incrementPathLevel(firstCandidate.path, DerivationPathLevels.Profile);
    }

    /**
     * Decrement a derivation path level
     * @param {string} path
     * @param {DerivationPathLevel} which
     * @return {string}
     */
    public decrementPathLevel(path: string, which: DerivationPathLevels = DerivationPathLevels.Profile, step: number = 1): string {
        // make sure derivation path is valid
        this.assertValidPath(path);

        // purpose and coin type cannot be changed
        this.assertCanModifyLevel(which);

        // read levels and increment
        const index = which as number;
        const parts = path.split('/');

        // calculate next index (decrement)
        let next = parseInt(parts[index].replace(/'/, '')) - (step <= 1 ? 1 : step);
        if (next < 0) {
            next = 0;
        }

        // modify affected level only
        return parts
            .map((level, idx) => {
                if (idx !== index) {
                    return level;
                }
                return `${next}'`;
            })
            .join('/');
    }

    /**
     * Assert whether \a path is a valid derivation path
     * @param {string} path
     * @return {void}
     * @throws {Error} On \a path with invalid derivation path
     */
    public assertValidPath(path: string): void {
        if (!this.isValidPath(path)) {
            const errorMessage = 'Invalid derivation path: ' + path;
            console.error(errorMessage);
            throw new Error(errorMessage);
        }
    }

    /**
     * Assert whether derivation path level can be modified
     * @param {DerivationPathLevels} which
     * @return {void}
     * @throws {Error} On \a which with protected path level value
     */
    public assertCanModifyLevel(which: DerivationPathLevels): void {
        const protect = [DerivationPathLevels.Purpose, DerivationPathLevels.CoinType];
        if (undefined !== protect.find((type) => which === type)) {
            const errorMessage = "Cannot modify a derivation path's purpose and coin type levels.";
            console.error(errorMessage);
            throw new Error(errorMessage);
        }
    }
}

'''
'''--- src/services/MosaicService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import _ from 'lodash';
import { AccountInfo, Address, MosaicId, MosaicInfo, MosaicNames, NamespaceId, RepositoryFactory, UInt64 } from 'symbol-sdk';
import { combineLatest, forkJoin, from, Observable, of } from 'rxjs';
import { flatMap, map, tap, toArray } from 'rxjs/operators';
// internal dependencies
import { MosaicConfigurationModel, AccountMosaicConfigurationModel } from '@/core/database/entities/MosaicConfigurationModel';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { ObservableHelpers } from '@/core/utils/ObservableHelpers';
import { TimeHelpers } from '@/core/utils/TimeHelpers';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { NetworkCurrenciesModel } from '@/core/database/entities/NetworkCurrenciesModel';
import { MosaicModelStorage } from '@/core/database/storage/MosaicModelStorage';
import { NetworkCurrenciesModelStorage } from '@/core/database/storage/NetworkCurrenciesModelStorage';
import { MosaicConfigurationModelStorage } from '@/core/database/storage/MosaicConfigurationModelStorage';
import { AccountModel } from '@/core/database/entities/AccountModel';

// custom types
export type ExpirationStatus = 'unlimited' | 'expired' | string | number;

// TODO. Can this interface be removed?
export interface AttachedMosaic {
    id: MosaicId | NamespaceId;
    mosaicHex: string;
    /**
     * Relative amount
     */
    amount: number;
}

interface MosaicBalance {
    mosaicId: MosaicId;
    amount: UInt64;
    address: Address;
}

/**
 * The service in charge of loading and caching anything related to Mosaics from Rest.
 * The cache is done by storing the payloads in SimpleObjectStorage.
 *
 * The service also holds configuration about the current mosaics, for example which mosaic
 * balances are currently hidden.
 */
export class MosaicService {
    /**
     * Store that caches the mosaic information of the current accounts when returned from rest.
     */
    private readonly mosaicDataStorage = MosaicModelStorage.INSTANCE;

    /**
     * The storage to keep user configuration around mosaics.  For example, the balance hidden
     * feature.
     */
    private readonly mosaicConfigurationsStorage = MosaicConfigurationModelStorage.INSTANCE;

    /**
     * Store that caches the information around the network currency.
     */
    private readonly networkCurrencyStorage = NetworkCurrenciesModelStorage.INSTANCE;

    /**
     * This method loads and caches the mosaic information for the given accounts.
     * The returned Observable will announce the cached information first, then the rest returned
     * information (if possible).
     *
     * @param {RepositoryFactory} repositoryFactory
     * @param {string} generationHash
     * @param {NetworkCurrencyModel} networkCurrency
     * @param {AccountInfo[]} accountsInfo
     * @returns {Observable<MosaicModel[]>}
     */
    public getMosaics(
        repositoryFactory: RepositoryFactory,
        generationHash: string,
        networkCurrency: NetworkCurrencyModel,
        accountsInfo: AccountInfo[],
    ): Observable<MosaicModel[]> {
        if (!accountsInfo.length) {
            return of([]);
        }
        const mosaicDataList = this.loadMosaicData(generationHash) || [];
        const resolvedBalancesObservable = this.resolveBalances(repositoryFactory, accountsInfo);
        const accountAddresses = accountsInfo.map((a) => a.address);
        const mosaicsFromAccountsObservable = repositoryFactory.createMosaicRepository().search({ ownerAddress: accountAddresses[0] });

        return combineLatest([resolvedBalancesObservable, mosaicsFromAccountsObservable])
            .pipe(
                flatMap(([balances, owedMosaics]) => {
                    const mosaicIds: MosaicId[] = _.uniqBy(
                        [...balances.map((m) => m.mosaicId), ...owedMosaics.data.map((o) => o.id)],
                        (m) => m.toHex(),
                    );
                    const nameObservables = repositoryFactory.createNamespaceRepository().getMosaicsNames(mosaicIds);
                    const mosaicInfoObservable = this.loadMosaic(repositoryFactory, mosaicIds, owedMosaics.data);
                    return combineLatest([nameObservables, mosaicInfoObservable]).pipe(
                        map(([names, mosaicInfos]) => {
                            return this.toMosaicDtos(balances, mosaicInfos, names, networkCurrency, accountAddresses);
                        }),
                    );
                }),
            )
            .pipe(
                tap((d) => this.saveMosaicData(generationHash, d)),
                ObservableHelpers.defaultFirst(mosaicDataList),
            );
    }

    private loadMosaic(
        repositoryFactory: RepositoryFactory,
        mosaicIds: MosaicId[],
        alreadyLoadedMosaics: MosaicInfo[],
    ): Observable<MosaicInfo[]> {
        const toLoadMosaicIds = mosaicIds.filter((mosaicId) => !alreadyLoadedMosaics.some((info) => info.id.equals(mosaicId)));
        if (toLoadMosaicIds.length) {
            return repositoryFactory
                .createMosaicRepository()
                .getMosaics(toLoadMosaicIds)
                .pipe(map((newMosaics) => newMosaics.concat(alreadyLoadedMosaics)));
        } else {
            return of(alreadyLoadedMosaics);
        }
    }

    private getName(mosaicNames: MosaicNames[], accountMosaicDto: MosaicId): string {
        return _.first(
            mosaicNames
                .filter((n) => n.mosaicId.equals(accountMosaicDto))
                .filter((n) => n.names.length)
                .map((n) => n.names[0].name),
        );
    }

    private toMosaicDtos(
        balances: MosaicBalance[],
        mosaicDtos: MosaicInfo[],
        mosaicNames: MosaicNames[],
        networkCurrency: NetworkCurrencyModel,
        accountAddresses: Address[],
    ): MosaicModel[] {
        return _.flatten(
            accountAddresses.map((address) => {
                return mosaicDtos.map((mosaicDto) => {
                    const name = this.getName(mosaicNames, mosaicDto.id);
                    const isCurrencyMosaic = mosaicDto.id.toHex() === networkCurrency.mosaicIdHex;
                    const balance = balances.find((balance) => balance.mosaicId.equals(mosaicDto.id) && balance.address.equals(address));
                    return new MosaicModel(
                        address.plain(),
                        mosaicDto.ownerAddress.plain(),
                        name,
                        isCurrencyMosaic,
                        (balance && balance.amount.compact()) || 0,
                        mosaicDto,
                    );
                });
            }),
        );
    }

    private resolveBalances(repositoryFactory: RepositoryFactory, accountsInfo: AccountInfo[]): Observable<MosaicBalance[]> {
        const mosaicIdOrAliases = _.flatten(accountsInfo.map((a) => a.mosaics.map((m) => m.id)));
        const mosaicIdOrAliasesUnique = _.uniqBy(mosaicIdOrAliases, (m) => m.toHex());
        return this.resolveMosaicIds(repositoryFactory, mosaicIdOrAliasesUnique).pipe(
            map((resolveMosaicIds) => {
                return _.flatten(
                    accountsInfo.map((a) => {
                        return a.mosaics.map((m) => {
                            return {
                                address: a.address,
                                amount: m.amount,
                                mosaicId: resolveMosaicIds.find((pair) => pair.from.equals(m.id)).to,
                            };
                        });
                    }),
                );
            }),
        );
    }

    private resolveMosaicIds(
        repositoryFactory: RepositoryFactory,
        ids: (NamespaceId | MosaicId)[],
    ): Observable<{ from: NamespaceId | MosaicId; to: MosaicId }[]> {
        const namespaceRepository = repositoryFactory.createNamespaceRepository();
        return from(ids)
            .pipe(
                flatMap((id) => {
                    if (id instanceof MosaicId) {
                        return of({ from: id, to: id as MosaicId });
                    } else {
                        const linkedMosaicIdObservable = namespaceRepository.getLinkedMosaicId(id as NamespaceId);
                        return linkedMosaicIdObservable.pipe(
                            map((to) => {
                                return { from: id, to: to };
                            }),
                        );
                    }
                }),
            )
            .pipe(toArray());
    }

    /**
     * This method returns the list of {@link NetworkCurrencyModel} of the network.
     *
     * The intent of this method is to resolve the configured main (like cat.currency or symbol.xym)
     * and harvest currencies (cat.harvest) returned by the network configuration endpoint.
     *
     * @param {RepositoryFactory} repositoryFactory
     * @param {generationHash} the generation hash.
     * @param {NetworkConfigurationModel} networkConfig
     * @returns {Observable<NetworkCurrencyModel[]>}
     */
    public getNetworkCurrencies(
        repositoryFactory: RepositoryFactory,
        generationHash: string,
        networkConfig: NetworkConfigurationModel,
    ): Observable<NetworkCurrenciesModel> {
        const storedNetworkCurrencies = this.networkCurrencyStorage.get(generationHash);
        const mosaicHttp = repositoryFactory.createMosaicRepository();
        const namespaceHttp = repositoryFactory.createNamespaceRepository();

        // get network currencies ids from stored network configuration
        const { currencyMosaicId, harvestingMosaicId } = networkConfig;
        const currencyMosaic = new MosaicId(currencyMosaicId);
        const harvestingMosaic = new MosaicId(harvestingMosaicId);

        // filter out harvesting currency if it is the same as the network currency
        const mosaicIds = currencyMosaic.equals(harvestingMosaic) ? [currencyMosaic] : [currencyMosaic, harvestingMosaic];

        // get mosaicInfo and mosaic names from the network,
        // build network currency models
        return forkJoin({
            mosaicsInfo: mosaicHttp.getMosaics(mosaicIds).toPromise(),
            mosaicNames: namespaceHttp.getMosaicsNames(mosaicIds).toPromise(),
        }).pipe(
            map(({ mosaicsInfo, mosaicNames }) =>
                mosaicsInfo.map((mosaicInfo) => {
                    const thisMosaicNames = mosaicNames.find((mn) => mn.mosaicId.equals(mosaicInfo.id));
                    if (!thisMosaicNames) {
                        throw new Error('thisMosaicNames not found at getNetworkCurrencies');
                    }
                    return this.getNetworkCurrency(mosaicInfo, thisMosaicNames);
                }),
            ),
            map((networkMosaics) => new NetworkCurrenciesModel(networkMosaics[0], networkMosaics[1] || networkMosaics[0])),
            tap((d) => this.networkCurrencyStorage.set(generationHash, d)),
            ObservableHelpers.defaultFirst(storedNetworkCurrencies),
        );
    }

    private loadMosaicData(generationHash: string): MosaicModel[] {
        return this.mosaicDataStorage.get(generationHash);
    }

    private saveMosaicData(generationHash: string, mosaics: MosaicModel[]) {
        this.mosaicDataStorage.set(generationHash, mosaics);
    }

    public reset(generationHash: string) {
        this.mosaicDataStorage.remove(generationHash);
        this.networkCurrencyStorage.remove(generationHash);
    }

    /**
     * Creates a network currency model given mosaic info and mosaic names
     * @param {MosaicInfo} mosaicInfo
     * @param {MosaicNames} mosaicName
     * @returns {(NetworkCurrencyModel | undefined)}
     */
    private getNetworkCurrency(mosaicInfo: MosaicInfo, mosaicName: MosaicNames): NetworkCurrencyModel | undefined {
        const mosaicId = mosaicInfo.id;

        const namespaceName = this.getName([mosaicName], mosaicId);
        if (!namespaceName) {
            throw new Error('could not get namespaceName at getNetworkCurrency');
        }

        const namespaceId = new NamespaceId(namespaceName);

        const ticker = (namespaceId && namespaceId.fullName && namespaceId.fullName.split('.').pop().toUpperCase()) || undefined;

        return new NetworkCurrencyModel(
            mosaicId.toHex(),
            namespaceId.toHex(),
            namespaceId.fullName,
            mosaicInfo.divisibility,
            mosaicInfo.flags.transferable,
            mosaicInfo.flags.supplyMutable,
            mosaicInfo.flags.restrictable,
            ticker,
        );
    }

    /**
     *
     * Utility method that returns the mosaic expiration status
     * @param mosaicInfo the mosaic info
     * @param currentHeight
     * @param blockGenerationTargetTime
     */
    public static getExpiration(mosaicInfo: MosaicModel, currentHeight: number, blockGenerationTargetTime: number): ExpirationStatus {
        const duration = mosaicInfo.duration;
        const startHeight = mosaicInfo.height;

        // unlimited duration mosaics are flagged as duration == 0
        if (duration === 0) {
            return 'unlimited';
        }

        // get current height
        // calculate expiration
        const expiresIn = startHeight + duration - (currentHeight || 0);
        if (expiresIn <= 0) {
            return 'expired';
        }
        // number of blocks remaining
        return TimeHelpers.durationToRelativeTime(expiresIn, blockGenerationTargetTime);
    }

    public getMosaicConfigurationsByAccount(account: AccountModel): AccountMosaicConfigurationModel {
        return this.getMosaicConfigurations()[account.id] || {};
    }

    public getMosaicConfiguration(mosaicId: MosaicId, account: AccountModel): MosaicConfigurationModel {
        return this.getMosaicConfigurationsByAccount(account)[mosaicId.toHex()] || new MosaicConfigurationModel();
    }
    public getMosaicConfigurations(): Record<string, AccountMosaicConfigurationModel> {
        return this.mosaicConfigurationsStorage.get() || {};
    }
    public changeMosaicConfiguration(mosaicId: MosaicId, account: AccountModel, newConfigs: any): Record<string, MosaicConfigurationModel> {
        const mosaicConfigurationsStorage = this.getMosaicConfigurations();
        mosaicConfigurationsStorage[account.id] = mosaicConfigurationsStorage[account.id] ? mosaicConfigurationsStorage[account.id] : {};
        mosaicConfigurationsStorage[account.id][mosaicId.toHex()] = {
            ...this.getMosaicConfiguration(mosaicId, account),
            ...newConfigs,
        };
        this.mosaicConfigurationsStorage.set(mosaicConfigurationsStorage);
        return mosaicConfigurationsStorage[account.id];
    }
}

'''
'''--- src/services/MultisigService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address, MultisigAccountGraphInfo, MultisigAccountInfo, NetworkType } from 'symbol-sdk';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { Signer } from '@/store/Account';

export class MultisigService {
    /**
     * Returns all available multisig info from a multisig graph
     * @static
     * @param {MultisigAccountGraphInfo} multisig graph info
     * @returns {MultisigAccountInfo[]} multisig info
     */
    public static getMultisigInfoFromMultisigGraphInfo(graphInfo: MultisigAccountGraphInfo): MultisigAccountInfo[] {
        const { multisigEntries } = graphInfo;

        const multisigsInfo = [...multisigEntries.keys()]
            .sort((a, b) => b - a) // Get addresses from top to bottom
            .map((key) => multisigEntries.get(key) || [])
            .filter((x) => x.length > 0);

        return [].concat(...multisigsInfo).map((item) => item); // flatten
    }

    public getSigners(
        networkType: NetworkType,
        knownAccounts: AccountModel[],
        currentAccount: AccountModel,
        currentAccountMultisigInfo: MultisigAccountInfo | undefined,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        multisigAccountsInfo: MultisigAccountInfo[] | undefined,
    ): Signer[] {
        if (!currentAccount) {
            return [];
        }
        const self: Signer[] = [
            {
                address: Address.createFromRawAddress(currentAccount.address),
                label: currentAccount.name,
                multisig: currentAccountMultisigInfo && currentAccountMultisigInfo.isMultisig(),
                requiredCosignatures: (currentAccountMultisigInfo && currentAccountMultisigInfo.minApproval) || 0,
            },
        ];

        if (!currentAccountMultisigInfo) {
            return self;
        }

        return self.concat(
            ...currentAccountMultisigInfo.multisigAddresses.map((address) => {
                return {
                    address,
                    multisig: true,
                    label: this.getAccountLabel(address, knownAccounts),
                    requiredCosignatures: (currentAccountMultisigInfo && currentAccountMultisigInfo.minApproval) || 0,
                };
            }),
        );
    }

    private getAccountLabel(address: Address, accounts: AccountModel[]): string {
        const account = accounts.find((wlt) => address.plain() === wlt.address);
        return (account && account.name) || address.plain();
    }
}

'''
'''--- src/services/NamespaceService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
import { Address, NamespaceName, RepositoryFactory } from 'symbol-sdk';
import { Observable, of } from 'rxjs';
import { flatMap, map, tap, combineAll } from 'rxjs/operators';
import { ObservableHelpers } from '@/core/utils/ObservableHelpers';
import * as _ from 'lodash';
import { TimeHelpers } from '@/core/utils/TimeHelpers';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { NamespaceModelStorage } from '@/core/database/storage/NamespaceModelStorage';

/**
 * The service in charge of loading and caching anything related to Namepsaces from Rest.
 * The cache is done by storing the payloads in SimpleObjectStorage.
 */
export class NamespaceService {
    /**
     * The namespace information local cache.
     */
    private readonly namespaceModelStorage = NamespaceModelStorage.INSTANCE;

    /**
     * This method loads and caches the namespace information for the given accounts.
     * The returned Observable will announce the cached information first, then the rest returned
     * information (if possible).
     *
     * @param repositoryFactory the repository factory
     * @param generationHash the current network generation hash.
     * @param addresses the current addresses.
     */
    public getNamespaces(repositoryFactory: RepositoryFactory, generationHash: string, addresses: Address[]): Observable<NamespaceModel[]> {
        if (!addresses.length) {
            return of([]);
        }

        const namespaceModelList = this.namespaceModelStorage.get(generationHash) || [];
        const namespaceRepository = repositoryFactory.createNamespaceRepository();

        return addresses
            .map(
                (address: Address): Observable<NamespaceModel[]> => {
                    return namespaceRepository
                        .search({ ownerAddress: address })
                        .pipe(
                            flatMap((namespaceInfos) => {
                                return namespaceRepository.getNamespacesNames(namespaceInfos.data.map((info) => info.id)).pipe(
                                    map((names) => {
                                        return namespaceInfos.data.map((namespaceInfo) => {
                                            const reference = _.first(
                                                names.filter((n) => n.namespaceId.toHex() === namespaceInfo.id.toHex()),
                                            );
                                            return new NamespaceModel(
                                                namespaceInfo,
                                                NamespaceService.getFullNameFromNamespaceNames(reference, names),
                                            );
                                        });
                                    }),
                                );
                            }),
                        )
                        .pipe(
                            tap((d: NamespaceModel[]) => this.namespaceModelStorage.set(generationHash, d)),
                            ObservableHelpers.defaultFirst(namespaceModelList),
                        );
                },
            )
            .reduce((previous) => previous.pipe(combineAll()));
    }

    public static getExpiration(
        networkConfiguration: NetworkConfigurationModel,
        currentHeight: number,
        endHeight: number,
    ): { expiration: string; expired: boolean } {
        const blockGenerationTargetTime = networkConfiguration.blockGenerationTargetTime;
        const namespaceGracePeriodBlocks = Math.floor(networkConfiguration.namespaceGracePeriodDuration / blockGenerationTargetTime);
        const expired = currentHeight > endHeight - namespaceGracePeriodBlocks;
        const expiredIn = endHeight - namespaceGracePeriodBlocks - currentHeight;
        const deletedIn = endHeight - currentHeight;
        const expiration = expired
            ? TimeHelpers.durationToRelativeTime(expiredIn, blockGenerationTargetTime)
            : TimeHelpers.durationToRelativeTime(deletedIn, blockGenerationTargetTime);
        return { expired, expiration };
    }

    /**
     * Constructs a namespace fullName from namespace names
     * @static
     * @param {NamespaceName} reference
     * @param {NamespaceName[]} namespaceNames
     * @returns the full namespace name.
     */
    public static getFullNameFromNamespaceNames(reference: NamespaceName, namespaceNames: NamespaceName[]): string {
        if (!reference) {
            return '';
        }
        if (!reference.parentId) {
            return reference.name;
        }

        const parent = namespaceNames.find((namespaceName) => namespaceName.namespaceId.toHex() === reference.parentId.toHex());
        if (parent === undefined) {
            return reference.name;
        }
        const parentName = NamespaceService.getFullNameFromNamespaceNames(parent, namespaceNames);
        return `${parentName}.${reference.name}`;
    }
}

'''
'''--- src/services/NetworkService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NetworkModel } from '@/core/database/entities/NetworkModel';
import { NetworkConfiguration, RepositoryFactory, RepositoryFactoryHttp } from 'symbol-sdk';
import { URLHelpers } from '@/core/utils/URLHelpers';
import { combineLatest, defer, EMPTY, from, Observable } from 'rxjs';
import { catchError, concatMap, flatMap, map, take, tap, isEmpty } from 'rxjs/operators';
import * as _ from 'lodash';

import { ObservableHelpers } from '@/core/utils/ObservableHelpers';

import { networkConfig } from '@/config';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { NetworkConfigurationHelpers } from '@/core/utils/NetworkConfigurationHelpers';
import { NetworkModelStorage } from '@/core/database/storage/NetworkModelStorage';

/**
 * The service in charge of loading and caching anything related to Network from Rest.
 * The cache is done by storing the payloads in SimpleObjectStorage.
 */
export class NetworkService {
    /**
     * The network information local cache.
     */
    private readonly storage = NetworkModelStorage.INSTANCE;

    /**
     * The best default Url. It uses the stored condiguration if possible.
     */
    public getDefaultUrl(): string {
        const storedNetworkModel = this.storage.getLatest();
        return URLHelpers.formatUrl((storedNetworkModel && storedNetworkModel.url) || networkConfig.defaultNodeUrl).url;
    }

    /**
     * This method get the network data from the provided URL. If the server in the candidateUrl is down,
     * the next available url will be used.
     *
     * @param candidateUrl the new url.
     * @param generationHash of the current profile
     */
    public getNetworkModel(
        candidateUrl: string | undefined,
        generationHash?: string | undefined,
    ): Observable<{
        fallback: boolean;
        networkModel: NetworkModel;
        repositoryFactory: RepositoryFactory;
        isCandidateUrlAvailable: boolean;
    }> {
        const possibleUrls = this.resolveCandidates(candidateUrl, this.storage.get(generationHash) || this.storage.getLatest());
        let isCandidateUrlAvailable: boolean = true;
        const repositoryFactoryObservable = from(possibleUrls)
            .pipe(
                concatMap((url) => {
                    if (url === candidateUrl) {
                        this.createRepositoryFactory(url)
                            .pipe(isEmpty())
                            .subscribe((isEmpty) => (isCandidateUrlAvailable = !isEmpty));
                    }
                    return this.createRepositoryFactory(url);
                }),
            )
            .pipe(take(1));
        return repositoryFactoryObservable.pipe(
            flatMap(({ url, repositoryFactory }) => {
                return repositoryFactory.getGenerationHash().pipe(
                    flatMap((generationHash) => {
                        const storedNetworkModel = this.storage.get(generationHash);
                        const networkRepository = repositoryFactory.createNetworkRepository();
                        const nodeRepository = repositoryFactory.createNodeRepository();
                        const networkTypeObservable = repositoryFactory
                            .getNetworkType()
                            .pipe(
                                ObservableHelpers.defaultLast(
                                    (storedNetworkModel && storedNetworkModel.networkType) || networkConfig.defaultNetworkType,
                                ),
                            );
                        const generationHashObservable = repositoryFactory
                            .getGenerationHash()
                            .pipe(ObservableHelpers.defaultLast(storedNetworkModel && storedNetworkModel.generationHash));

                        const networkPropertiesObservable = networkRepository.getNetworkProperties().pipe(
                            map((d) => this.toNetworkConfigurationModel(d)),
                            ObservableHelpers.defaultLast(storedNetworkModel && storedNetworkModel.networkConfiguration),
                        );
                        const nodeInfoObservable = nodeRepository
                            .getNodeInfo()
                            .pipe(ObservableHelpers.defaultLast(storedNetworkModel && storedNetworkModel.nodeInfo));

                        const transactionFeesObservable = repositoryFactory
                            .createNetworkRepository()
                            .getTransactionFees()
                            .pipe(ObservableHelpers.defaultLast(storedNetworkModel && storedNetworkModel.transactionFees));

                        return combineLatest([
                            networkTypeObservable,
                            generationHashObservable,
                            networkPropertiesObservable,
                            nodeInfoObservable,
                            transactionFeesObservable,
                        ]).pipe(
                            map(([networkType, generationHash, networkProperties, nodeInfo, transactionFees]) => {
                                return {
                                    fallback: !!candidateUrl && candidateUrl !== url,
                                    networkModel: new NetworkModel(
                                        url,
                                        networkType,
                                        generationHash,
                                        networkProperties,
                                        transactionFees,
                                        nodeInfo,
                                    ),
                                    repositoryFactory,
                                    isCandidateUrlAvailable,
                                };
                            }),
                            tap((p) => this.storage.set(generationHash, p.networkModel)),
                        );
                    }),
                );
            }),
        );
    }

    private createRepositoryFactory(url: string): Observable<{ url: string; repositoryFactory: RepositoryFactory }> {
        console.log(`Testing ${url}`);
        const repositoryFactory = NetworkService.createRepositoryFactory(url);
        return defer(() => {
            return repositoryFactory.getGenerationHash();
        }).pipe(
            map(() => {
                console.log(`Peer ${url} seems OK`);
                return { url, repositoryFactory };
            }),
            catchError((e) => {
                console.log(`Peer ${url} seems down. Ignoring. Error: ${e.message}`, e);
                return EMPTY;
            }),
        );
    }

    private toNetworkConfigurationModel(dto: NetworkConfiguration): NetworkConfigurationModel {
        const fileDefaults: NetworkConfigurationModel = networkConfig.networkConfigurationDefaults;
        const fromDto: NetworkConfigurationModel = {
            maxMosaicDivisibility: NetworkConfigurationHelpers.maxMosaicDivisibility(dto),
            namespaceGracePeriodDuration: NetworkConfigurationHelpers.namespaceGracePeriodDuration(dto),
            lockedFundsPerAggregate: NetworkConfigurationHelpers.lockedFundsPerAggregate(dto),
            maxCosignatoriesPerAccount: NetworkConfigurationHelpers.maxCosignatoriesPerAccount(dto),
            blockGenerationTargetTime: NetworkConfigurationHelpers.blockGenerationTargetTime(dto),
            maxNamespaceDepth: NetworkConfigurationHelpers.maxNamespaceDepth(dto),
            maxMosaicDuration: NetworkConfigurationHelpers.maxMosaicDuration(dto),
            minNamespaceDuration: NetworkConfigurationHelpers.minNamespaceDuration(dto),
            maxNamespaceDuration: NetworkConfigurationHelpers.maxNamespaceDuration(dto),
            maxTransactionsPerAggregate: NetworkConfigurationHelpers.maxTransactionsPerAggregate(dto),
            maxCosignedAccountsPerAccount: NetworkConfigurationHelpers.maxCosignedAccountsPerAccount(dto),
            maxMessageSize: NetworkConfigurationHelpers.maxMessageSize(dto),
            maxMosaicAtomicUnits: NetworkConfigurationHelpers.maxMosaicAtomicUnits(dto),
            currencyMosaicId: NetworkConfigurationHelpers.currencyMosaicId(dto),
            harvestingMosaicId: NetworkConfigurationHelpers.harvestingMosaicId(dto),
            defaultDynamicFeeMultiplier: NetworkConfigurationHelpers.defaultDynamicFeeMultiplier(dto),
        };
        return { ...fileDefaults, ...fromDto };
    }

    private resolveCandidates(newUrl: string | undefined, storedNetworkModel: NetworkModel | undefined): string[] {
        // Should we load cached candidates in the node tables?
        return _.uniq(
            [
                newUrl,
                storedNetworkModel && storedNetworkModel.url,
                networkConfig.defaultNodeUrl,
                ...networkConfig.nodes.map((n) => n.url),
            ].filter((p) => p !== undefined && p.length),
        );
    }

    public reset(generationHash: string) {
        this.storage.remove(generationHash);
    }

    /**
     * It creates the RepositoryFactory used to build the http repository/clients and listeners.
     * @param url the url.
     */
    public static createRepositoryFactory(url: string): RepositoryFactory {
        return new RepositoryFactoryHttp(url, {
            websocketUrl: URLHelpers.httpToWsUrl(url) + '/ws',
            websocketInjected: WebSocket,
        });
    }
}

'''
'''--- src/services/NodeService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import { NodeInfo, RepositoryFactory } from 'symbol-sdk';
import { Observable } from 'rxjs';
import { ObservableHelpers } from '@/core/utils/ObservableHelpers';
import { map, tap } from 'rxjs/operators';
import { NodeModel } from '@/core/database/entities/NodeModel';
import * as _ from 'lodash';
import { networkConfig } from '@/config';
import { NodeModelStorage } from '@/core/database/storage/NodeModelStorage';

/**
 * The service in charge of loading and caching anything related to Node and Peers from Rest.
 * The cache is done by storing the payloads in SimpleObjectStorage.
 */
export class NodeService {
    /**
     * The peer information local cache.
     */
    private readonly storage = NodeModelStorage.INSTANCE;

    public getKnowNodesOnly(): NodeModel[] {
        return _.uniqBy(this.loadNodes().concat(this.loadStaticNodes()), 'url');
    }

    public getNodes(repositoryFactory: RepositoryFactory, repositoryFactoryUrl: string): Observable<NodeModel[]> {
        const storedNodes = this.getKnowNodesOnly();
        const nodeRepository = repositoryFactory.createNodeRepository();

        return nodeRepository.getNodeInfo().pipe(
            map((dto: NodeInfo) => this.createNodeModel(repositoryFactoryUrl, dto.friendlyName)),
            ObservableHelpers.defaultLast(this.createNodeModel(repositoryFactoryUrl)),
            map((currentNode) => _.uniqBy([currentNode, ...storedNodes], 'url')),
            tap((p) => this.saveNodes(p)),
        );
    }

    private loadStaticNodes(): NodeModel[] {
        return networkConfig.nodes.map((n) => {
            return this.createNodeModel(n.url, n.friendlyName, true);
        });
    }

    private createNodeModel(
        url: string,
        friendlyName: string | undefined = undefined,
        isDefault: boolean | undefined = undefined,
    ): NodeModel {
        return new NodeModel(url, friendlyName || '', isDefault || !!networkConfig.nodes.find((n) => n.url === url));
    }

    private loadNodes(): NodeModel[] {
        return this.storage.get() || [];
    }

    public saveNodes(nodes: NodeModel[]) {
        this.storage.set(nodes);
    }

    public reset() {
        this.storage.remove();
    }
}

'''
'''--- src/services/ProfileService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Convert, Password, SHA3Hasher } from 'symbol-sdk';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { ProfileModelStorage } from '@/core/database/storage/ProfileModelStorage';

/**
 * Service in charge of loading profiles information from the wallet.
 */
export class ProfileService {
    /**
     * The storage to keep user configuration around mosaics.  For example, the balance hidden
     * feature.
     */
    private readonly profilesStorage = ProfileModelStorage.INSTANCE;

    public getProfiles(): ProfileModel[] {
        return Object.values(this.getProfilesByProfileName());
    }

    public getProfileByName(profileName: string): ProfileModel | undefined {
        return this.getProfilesByProfileName()[profileName];
    }

    public getProfilesByProfileName(): Record<string, ProfileModel> {
        return this.profilesStorage.get() || {};
    }

    public saveProfile(profile: ProfileModel): ProfileModel {
        const profiles = this.getProfilesByProfileName();
        profiles[profile.profileName] = profile;
        this.profilesStorage.set(profiles);
        return profile;
    }

    public deleteProfile(profileName: string) {
        const profiles = this.getProfilesByProfileName();
        delete profiles[profileName];
        this.profilesStorage.set(profiles);
    }

    public updateSeed(profile: ProfileModel, seed: string): ProfileModel {
        return this.saveProfile(Object.assign(profile, { seed }));
    }

    public updatePassword(profile: ProfileModel, password: string, hint: string, seed: string): ProfileModel {
        return this.saveProfile(Object.assign(profile, { password, hint, seed }));
    }

    public updateAccounts(profile: ProfileModel, accounts: string[]): ProfileModel {
        return this.saveProfile(Object.assign(profile, { accounts }));
    }

    /**
     * Return password hash that can be compared
     * @param password to be hashed
     * @return the password hash
     */
    public static getPasswordHash(password: Password): string {
        const hasher = SHA3Hasher.createHasher(64);
        hasher.reset();
        hasher.update(Convert.utf8ToHex(password.value));

        const hash = new Uint8Array(64);
        hasher.finalize(hash);
        return Convert.uint8ToHex(hash);
    }
}

'''
'''--- src/services/RESTService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address, IListener, RepositoryFactory, TransactionStatusError } from 'symbol-sdk';
import { Subscription } from 'rxjs';
// internal dependencies
import { AddressValidator } from '@/core/validation/validators';
import { NotificationType } from '@/core/utils/NotificationType';
import { TransactionGroupState } from '@/store/Transaction';

/**
 * This Service is more like a static helper now. All the methods are statics. Rename and move.
 */
export class RESTService {
    /**
     * Subscribe to transactions websocket channels
     * @param {Context} dispatch context the context
     * @param {RepositoryFactory} repositoryFactory the factory used to create the listener.
     * @param {Address} address the listened account.
     */
    public static async subscribeTransactionChannels(
        context: { dispatch: any; commit: any },
        repositoryFactory: RepositoryFactory,
        addressStr: string,
    ): Promise<{ listener: IListener; subscriptions: Subscription[] }> {
        if (!AddressValidator.validate(addressStr)) {
            throw new Error('Invalid address for subscribing to websocket connections');
        }

        context.dispatch('diagnostic/ADD_DEBUG', `Opening REST websocket channel connections with ${addressStr}`, {
            root: true,
        });

        // open websocket connection
        const address = Address.createFromRawAddress(addressStr);
        const listener = repositoryFactory.createListener();
        await listener.open();

        // error listener
        const status = listener
            .status(address)
            .subscribe((error: TransactionStatusError) => context.dispatch('notification/ADD_ERROR', error.code, { root: true }));

        // unconfirmed listeners
        const unconfirmedAdded = listener.unconfirmedAdded(address).subscribe(
            (transaction) => {
                context.dispatch('transaction/ADD_TRANSACTION', { group: TransactionGroupState.unconfirmed, transaction }, { root: true });
                context.dispatch('notification/ADD_SUCCESS', NotificationType.NEW_UNCONFIRMED_TRANSACTION, { root: true });
            },
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        const unconfirmedRemoved = listener.unconfirmedRemoved(address).subscribe(
            (transactionHash) =>
                context.dispatch(
                    'transaction/REMOVE_TRANSACTION',
                    { group: TransactionGroupState.unconfirmed, transactionHash },
                    { root: true },
                ),
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        // partial listeners
        const cosignatureAdded = listener.cosignatureAdded(address).subscribe(
            (cosignature) => {
                context.dispatch('transaction/ADD_COSIGNATURE', cosignature, {
                    root: true,
                });
                context.dispatch('notification/ADD_SUCCESS', NotificationType.COSIGNATURE_ADDED, { root: true });
            },
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        const partialAdded = listener.aggregateBondedAdded(address).subscribe(
            (transaction) => {
                context.dispatch('transaction/ADD_TRANSACTION', { group: TransactionGroupState.partial, transaction }, { root: true });
                context.dispatch('notification/ADD_SUCCESS', NotificationType.NEW_AGGREGATE_BONDED, { root: true });
            },
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        const partialRemoved = listener.aggregateBondedRemoved(address).subscribe(
            (transactionHash) =>
                context.dispatch(
                    'transaction/REMOVE_TRANSACTION',
                    { group: TransactionGroupState.partial, transactionHash },
                    { root: true },
                ),
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        // confirmed listener
        const confirmed = listener.confirmed(address).subscribe(
            (transaction) => {
                context.dispatch('transaction/ADD_TRANSACTION', { group: TransactionGroupState.confirmed, transaction }, { root: true });
                context.dispatch('transaction/ON_NEW_TRANSACTION', transaction, {
                    root: true,
                });
                context.dispatch('notification/ADD_SUCCESS', NotificationType.NEW_CONFIRMED_TRANSACTION, { root: true });
            },
            (err) => context.dispatch('diagnostic/ADD_ERROR', err, { root: true }),
        );

        return {
            listener,
            subscriptions: [status, unconfirmedAdded, unconfirmedRemoved, cosignatureAdded, partialAdded, partialRemoved, confirmed],
        };
    }
}

'''
'''--- src/services/RemoteAccountService.ts ---
/**
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// external dependencies
import { Crypto, Password, Account, AccountRepository, AccountInfo, AccountType as sdkAccountType } from 'symbol-sdk';

// internal dependencies
import { AccountService } from './AccountService';
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { DerivationPathLevels, DerivationService } from './DerivationService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';

export class RemoteAccountService extends AccountService {
    /**
     * Derivation service
     */
    private readonly derivationService = new DerivationService();

    /**
     * Creates an instance of RemoteAccountService.
     * @param {AccountModel} account
     * @param {ProfileModel} profile
     * @param {AccountRepository} accountRepository
     */
    public constructor(
        private readonly account: AccountModel,
        private readonly profile: ProfileModel,
        private readonly accountRepository: AccountRepository,
    ) {
        super();
    }

    /**
     * Gets the first available remote account
     * @param {Password} password
     * @returns {Promise<Account>}
     */
    public async getAvailableRemoteAccount(password: Password): Promise<Account> {
        const candidates = this.getRemoteAccounts(password);
        const addresses = candidates.map(({ address }) => address);
        const accountsInfo = await this.accountRepository.getAccountsInfo(addresses).toPromise();
        return this.getFirstFreeRemoteAccount(candidates, accountsInfo);
    }

    /**
     * Gets remote account candidates from the derivation of the account seed
     * @private
     * @param {Password} password
     * @param {number} [numberOfPaths=10]
     * @returns {Account[]}
     */
    private getRemoteAccounts(password: Password, numberOfPaths = 10): Account[] {
        switch (this.account.type) {
            case AccountType.SEED:
                return this.getRemoteAccountsFromSeed(password, numberOfPaths);

            // @TODO: implement private key
            // @TODO: show error to the user
            case AccountType.KEYSTORE:
            case AccountType.PRIVATE_KEY:
                throw new Error('remote account generation from Private Key is not supported');
            case AccountType.TREZOR:
                throw new Error('remote account generation from Trezor wallet is not supported');

            default:
                throw new Error('Something went wrong at getRemoteAccountPrivateKey');
        }
    }

    /**
     * Gets remote account candidates from the derivation of the account seed
     * @private
     * @param {Password} password
     * @param {number} [numberOfPaths=10]
     * @returns {Account[]}
     */
    private getRemoteAccountsFromSeed(password: Password, numberOfPaths = 10): Account[] {
        const paths = [...Array(numberOfPaths).keys()].map((i) =>
            this.derivationService.incrementPathLevel(this.account.path, DerivationPathLevels.Remote, i),
        );

        const encSeed = this.profile.seed;
        const passphrase = Crypto.decrypt(encSeed, password.value);
        const mnemonic = new MnemonicPassPhrase(passphrase);
        return this.generateAccountsFromPaths(mnemonic, this.profile.networkType, paths);
    }

    /**
     * Query the network with the remote account candidates,
     * Returns the first eligible account
     * @private
     * @param {Account[]} remoteAccounts
     * @param {AccountInfo[]} accountsInfo
     * @returns {Account}
     */
    private getFirstFreeRemoteAccount(remoteAccounts: Account[], accountsInfo: AccountInfo[]): Account {
        if (!accountsInfo.length) {
            return remoteAccounts[0];
        }

        const linkableRemoteAccounts = remoteAccounts.filter(({ address }) => {
            const matchedAccountInfo = accountsInfo.find((ai) => ai.address.plain() === address.plain());
            return matchedAccountInfo === undefined || RemoteAccountService.isLinkable(matchedAccountInfo);
        });

        if (!linkableRemoteAccounts.length) {
            throw new Error('Could not find a free remote account');
        }

        return linkableRemoteAccounts[0];
    }

    /**
     * Whether an account is linkable as a remote account
     * @static
     * @param {AccountInfo} accountInfo
     * @returns {boolean}
     */
    static isLinkable(accountInfo: AccountInfo): boolean {
        return accountInfo?.accountType === sdkAccountType.Remote_Unlinked;
    }
}

'''
'''--- src/services/SettingService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { SettingsModel } from '@/core/database/entities/SettingsModel';

import { feesConfig } from '@/config';
import { appConfig } from '@/config';
import { networkConfig } from '@/config';
import i18n from '@/language';
import { SettingsModelStorage } from '@/core/database/storage/SettingsModelStorage';

/**
 * Service in charge of loading and storing the SettingsModel from local storage.
 */
export class SettingService {
    /**
     * The the local storage that keeps the SettingsModel objects indexed by profileName.
     */
    private readonly storage = SettingsModelStorage.INSTANCE;

    public getProfileSettings(profileName: string): SettingsModel {
        const storedData = this.storage.get() || {};
        return {
            ...this.createDefaultSettingsModel(profileName),
            ...(storedData[profileName] || {}),
        };
    }

    public changeProfileSettings(profileName: string, newConfigs: any): SettingsModel {
        const storedData = this.storage.get() || {};
        storedData[profileName] = {
            ...this.getProfileSettings(profileName),
            ...newConfigs,
        };
        this.storage.set(storedData);
        return storedData[profileName];
    }

    public createDefaultSettingsModel(profileName: string): SettingsModel {
        const browserLocale = i18n.locale;
        const language = appConfig.languages.find((l) => l.value == browserLocale) ? browserLocale : appConfig.languages[0].value;
        return new SettingsModel(profileName, language, feesConfig.median, '', networkConfig.explorerUrl);
    }
}

'''
'''--- src/services/TransactionAnnouncerService.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Store } from 'vuex';
import {
    Account,
    CosignatureSignedTransaction,
    CosignatureTransaction,
    IListener,
    RepositoryFactory,
    SignedTransaction,
    Transaction,
    TransactionService,
    TransactionType,
} from 'symbol-sdk';
// internal dependencies
import { BroadcastResult } from '@/core/transactions/BroadcastResult';
import { Observable, of, OperatorFunction, throwError } from 'rxjs';
import { catchError, flatMap, map } from 'rxjs/operators';
import { TransactionAnnounceResponse } from 'symbol-sdk/dist/src/model/transaction/TransactionAnnounceResponse';
// configuration
import { appConfig } from '@/config';
import i18n from '@/language';
import { timeoutWith } from 'rxjs/operators';

const { ANNOUNCE_TRANSACTION_TIMEOUT } = appConfig.constants;

/// end-region custom types

export interface TransactionSigner {
    signTransaction(t: Transaction, generationHash: string): Observable<SignedTransaction>;

    signCosignatureTransaction(t: CosignatureTransaction): Observable<CosignatureSignedTransaction>;
}

export class AccountTransactionSigner implements TransactionSigner {
    constructor(private readonly account: Account) {}

    signTransaction(t: Transaction, generationHash: string): Observable<SignedTransaction> {
        return of(this.account.sign(t, generationHash));
    }
    signCosignatureTransaction(t: CosignatureTransaction): Observable<CosignatureSignedTransaction> {
        return of(this.account.signCosignatureTransaction(t));
    }
}

export class TransactionAnnouncerService {
    /**
     * Vuex Store
     * @var {Vuex.Store}
     */
    public $store: Store<any>;

    private readonly transactionTimeout = ANNOUNCE_TRANSACTION_TIMEOUT;

    /**
     * Construct a service instance around \a store
     * @param store
     */
    constructor(store: Store<any>) {
        this.$store = store;
    }

    public announce(signedTransaction: SignedTransaction): Observable<BroadcastResult> {
        const listener: IListener = this.$store.getters['network/listener'];
        const service = this.createService();
        return service
            .announce(signedTransaction, listener)
            .pipe(
                this.timeout(this.timeoutMessage(signedTransaction.type)),
                catchError((e) => of(e as Error)),
            )
            .pipe(map((t) => this.createBroadcastResult(signedTransaction, t)));
    }

    private timeout<T, R>(message: string): OperatorFunction<T, T> {
        if (!this.transactionTimeout) {
            return (o) => o;
        }
        const operatorFunction: any = timeoutWith(this.transactionTimeout, throwError(new Error(message)));
        return operatorFunction as OperatorFunction<T, T>;
    }

    private timeoutMessage(transactionType: TransactionType): string {
        return `${i18n.t(`transaction_descriptor_${transactionType}`)} Transaction has timed out.`;
    }

    private createService() {
        const repositoryFactory: RepositoryFactory = this.$store.getters['network/repositoryFactory'];
        return new TransactionService(repositoryFactory.createTransactionRepository(), repositoryFactory.createReceiptRepository());
    }

    public announceHashAndAggregateBonded(
        signedHashLockTransaction: SignedTransaction,
        signedAggregateTransaction: SignedTransaction,
    ): Observable<BroadcastResult> {
        const listener: IListener = this.$store.getters['network/listener'];
        const service = this.createService();
        return service
            .announce(signedHashLockTransaction, listener)
            .pipe(this.timeout(this.timeoutMessage(signedHashLockTransaction.type)))
            .pipe(
                flatMap(() =>
                    service
                        .announceAggregateBonded(signedAggregateTransaction, listener)
                        .pipe(this.timeout(this.timeoutMessage(signedAggregateTransaction.type))),
                ),
            )

            .pipe(catchError((e) => of(e as Error)))
            .pipe(map((t) => this.createBroadcastResult(signedAggregateTransaction, t)));
    }

    public announceAggregateBondedCosignature(singedTransaction: CosignatureSignedTransaction): Observable<BroadcastResult> {
        const repositoryFactory = this.$store.getters['network/repositoryFactory'] as RepositoryFactory;
        const transactionHttp = repositoryFactory.createTransactionRepository();
        return transactionHttp
            .announceAggregateBondedCosignature(singedTransaction)
            .pipe(this.timeout('Cosignature Transaction has timed out'))
            .pipe(map((t) => this.createBroadcastResult(singedTransaction, t)));
    }

    private createBroadcastResult(
        signedTransaction: SignedTransaction | CosignatureSignedTransaction,
        transactionOrError: Error | Transaction | TransactionAnnounceResponse,
    ): BroadcastResult {
        if (transactionOrError instanceof Error) {
            return new BroadcastResult(signedTransaction, undefined, false, transactionOrError.message);
        } else if (transactionOrError instanceof Transaction) {
            return new BroadcastResult(signedTransaction, transactionOrError, true);
        } else {
            return new BroadcastResult(signedTransaction, undefined, true);
        }
    }
}

'''
'''--- src/services/TransactionCommand.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

import {
    Account,
    AggregateTransaction,
    Deadline,
    LockFundsTransaction,
    Mosaic,
    MosaicId,
    NetworkType,
    PublicAccount,
    SignedTransaction,
    Transaction,
    TransactionFees,
    UInt64,
} from 'symbol-sdk';
import { Signer } from '@/store/Account';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { Observable, of } from 'rxjs';
import { AccountTransactionSigner, TransactionAnnouncerService, TransactionSigner } from '@/services/TransactionAnnouncerService';
import { BroadcastResult } from '@/core/transactions/BroadcastResult';
import { flatMap, map } from 'rxjs/operators';

export enum TransactionCommandMode {
    SIMPLE = 'SIMPLE',
    AGGREGATE = 'AGGREGATE',
    MULTISIGN = 'MULTISIGN',
}

export class TransactionCommand {
    private readonly tempAccount: Account;
    private readonly tempTransactionSigner: TransactionSigner;
    constructor(
        public readonly mode: TransactionCommandMode,
        public readonly signer: Signer,
        public readonly signerPublicKey: string,
        public readonly stageTransactions: Transaction[],
        public readonly networkMosaic: MosaicId,
        public readonly generationHash: string,
        public readonly networkType: NetworkType,
        public readonly networkConfiguration: NetworkConfigurationModel,
        public readonly transactionFees: TransactionFees,
        public readonly requiredCosignatures: number,
    ) {
        this.tempAccount = Account.generateNewAccount(this.networkType);
        this.tempTransactionSigner = new AccountTransactionSigner(this.tempAccount);
    }

    public announce(service: TransactionAnnouncerService, account: TransactionSigner): Observable<Observable<BroadcastResult>[]> {
        return this.resolveTransactions(account).pipe(
            flatMap((transactions) => {
                const signedTransactions = transactions.map((t) => account.signTransaction(t, this.generationHash));
                if (!signedTransactions.length) {
                    return of([]);
                }
                if (this.mode == TransactionCommandMode.MULTISIGN) {
                    return of([this.announceHashAndAggregateBonded(service, signedTransactions)]);
                } else {
                    return of(this.announceSimple(service, signedTransactions));
                }
            }),
        );
    }

    private announceHashAndAggregateBonded(
        service: TransactionAnnouncerService,
        signedTransactions: Observable<SignedTransaction>[],
    ): Observable<BroadcastResult> {
        return signedTransactions[0].pipe(
            flatMap((signedHashLockTransaction) => {
                return signedTransactions[1].pipe(
                    flatMap((signedAggregateTransaction) => {
                        return service.announceHashAndAggregateBonded(signedHashLockTransaction, signedAggregateTransaction);
                    }),
                );
            }),
        );
    }

    private announceSimple(
        service: TransactionAnnouncerService,
        signedTransactions: Observable<SignedTransaction>[],
    ): Observable<BroadcastResult>[] {
        return signedTransactions.map((o) => o.pipe(flatMap((s) => service.announce(s))));
    }

    public getTotalMaxFee(): Observable<UInt64> {
        return this.resolveTransactions().pipe(
            map((ts) => ts.reduce((partial, current) => partial.add(current.maxFee), UInt64.fromUint(0))),
        );
    }

    public resolveTransactions(account: TransactionSigner = this.tempTransactionSigner): Observable<Transaction[]> {
        if (!this.stageTransactions.length) {
            return of([]);
        }
        const maxFee = this.stageTransactions.sort((a, b) => a.maxFee.compare(b.maxFee))[0].maxFee;
        if (this.mode === TransactionCommandMode.SIMPLE) {
            return of(this.stageTransactions.map((t) => this.calculateSuggestedMaxFee(t)));
        } else {
            const currentSigner = PublicAccount.createFromPublicKey(this.signerPublicKey, this.networkType);
            if (this.mode === TransactionCommandMode.AGGREGATE) {
                const aggregate = this.calculateSuggestedMaxFee(
                    AggregateTransaction.createComplete(
                        Deadline.create(),
                        this.stageTransactions.map((t) => t.toAggregate(currentSigner)),
                        this.networkType,
                        [],
                        maxFee,
                    ),
                );
                return of([aggregate]);
            } else {
                const aggregate = this.calculateSuggestedMaxFee(
                    AggregateTransaction.createBonded(
                        Deadline.create(),
                        this.stageTransactions.map((t) => t.toAggregate(currentSigner)),
                        this.networkType,
                        [],
                        maxFee,
                    ),
                );

                return account.signTransaction(aggregate, this.generationHash).pipe(
                    map((signedAggregateTransaction) => {
                        const hashLock = this.calculateSuggestedMaxFee(
                            LockFundsTransaction.create(
                                Deadline.create(),
                                new Mosaic(this.networkMosaic, UInt64.fromNumericString(this.networkConfiguration.lockedFundsPerAggregate)),
                                UInt64.fromUint(1000),
                                signedAggregateTransaction,
                                this.networkType,
                                maxFee,
                            ),
                        );
                        return [hashLock, aggregate];
                    }),
                );
            }
        }
    }

    private calculateSuggestedMaxFee(transaction: Transaction): Transaction {
        const feeMultiplier = this.resolveFeeMultipler(transaction);
        if (!feeMultiplier) {
            return transaction;
        }
        if (transaction instanceof AggregateTransaction) {
            return transaction.setMaxFeeForAggregate(feeMultiplier, this.requiredCosignatures);
        } else {
            return transaction.setMaxFee(feeMultiplier);
        }
    }

    private resolveFeeMultipler(transaction: Transaction): number | undefined {
        if (transaction.maxFee.compact() == 1) {
            return this.transactionFees.medianFeeMultiplier || this.networkConfiguration.defaultDynamicFeeMultiplier;
            // TODO uncomment the following line when https://github.com/nemtech/catapult-rest/issues/326 is resolved
            // return this.transactionFees.averageFeeMultiplier * 1.2 || this.networkConfiguration.defaultDynamicFeeMultiplier;
        }
        if (transaction.maxFee.compact() == 2) {
            return this.transactionFees.highestFeeMultiplier || this.networkConfiguration.defaultDynamicFeeMultiplier;
        }
        return undefined;
    }
}

'''
'''--- src/store/Account.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import { AccountInfo, Address, IListener, MultisigAccountInfo, NetworkType, RepositoryFactory } from 'symbol-sdk';
import { of, Subscription } from 'rxjs';
// internal dependencies
import { $eventBus } from '../events';
import { RESTService } from '@/services/RESTService';
import { AwaitLock } from './AwaitLock';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { MultisigService } from '@/services/MultisigService';
import * as _ from 'lodash';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountService } from '@/services/AccountService';
import { catchError, map } from 'rxjs/operators';

/// region globals
const Lock = AwaitLock.create();
/// end-region globals

/**
 * Type SubscriptionType for account Store
 * @type {SubscriptionType}
 */
type SubscriptionType = {
    listener: IListener;
    subscriptions: Subscription[];
};

export type Signer = {
    label: string;
    address: Address;
    multisig: boolean;
    requiredCosignatures: number;
};

// Account state typing
interface AccountState {
    initialized: boolean;
    currentAccount: AccountModel;
    currentAccountAddress: Address;
    currentAccountMultisigInfo: MultisigAccountInfo;
    isCosignatoryMode: boolean;
    signers: Signer[];
    currentSigner: Signer;
    currentSignerAddress: Address;
    currentSignerPublicKey: string;
    currentSignerMultisigInfo: MultisigAccountInfo;
    // Known accounts database identifiers
    knownAccounts: AccountModel[];
    knownAddresses: Address[];
    accountsInfo: AccountInfo[];
    multisigAccountsInfo: MultisigAccountInfo[];
    subscriptions: Record<string, SubscriptionType[]>;
}

// account state initial definition
const accountState: AccountState = {
    initialized: false,
    currentAccount: null,
    currentAccountAddress: null,
    currentAccountMultisigInfo: null,
    isCosignatoryMode: false,
    signers: [],
    currentSigner: null,
    currentSignerAddress: null,
    currentSignerPublicKey: null,
    currentSignerMultisigInfo: null,
    knownAccounts: [],
    knownAddresses: [],
    accountsInfo: [],
    multisigAccountsInfo: [],
    subscriptions: {},
};

/**
 * Account Store
 */
export default {
    namespaced: true,
    state: accountState,
    getters: {
        getInitialized: (state: AccountState) => state.initialized,
        currentAccount: (state: AccountState): AccountModel => {
            return state.currentAccount;
        },
        signers: (state: AccountState): Signer[] => state.signers,
        currentSigner: (state: AccountState): Signer => state.currentSigner,
        currentAccountAddress: (state: AccountState) => state.currentAccountAddress,
        knownAddresses: (state: AccountState) => state.knownAddresses,
        currentAccountMultisigInfo: (state: AccountState) => state.currentAccountMultisigInfo,
        currentSignerMultisigInfo: (state: AccountState) => state.currentSignerMultisigInfo,
        isCosignatoryMode: (state: AccountState) => state.isCosignatoryMode,
        currentSignerAddress: (state: AccountState) => state.currentSignerAddress,
        currentSignerPublicKey: (state: AccountState) => state.currentSignerPublicKey,
        knownAccounts: (state: AccountState) => state.knownAccounts,
        accountsInfo: (state: AccountState) => state.accountsInfo,
        currentAccountAccountInfo: (state: AccountState): AccountInfo => {
            return state.accountsInfo.find(({ publicKey }) => publicKey === state.currentAccount.publicKey);
        },
        multisigAccountsInfo: (state: AccountState) => state.multisigAccountsInfo,
        getSubscriptions: (state: AccountState) => state.subscriptions,
    },
    mutations: {
        setInitialized: (state: AccountState, initialized: boolean) => {
            state.initialized = initialized;
        },
        currentAccount: (state: AccountState, accountModel: AccountModel) => {
            state.currentAccount = accountModel;
        },
        currentAccountAddress: (state: AccountState, accountAddress: Address) => {
            state.currentAccountAddress = accountAddress;
        },
        currentSigner: (state: AccountState, currentSigner: Signer) => {
            state.currentSigner = currentSigner;
        },
        signers: (state: AccountState, signers: Signer[]) => {
            state.signers = signers;
        },
        currentSignerAddress: (state: AccountState, signerAddress) => {
            state.currentSignerAddress = signerAddress;
        },
        currentSignerPublicKey: (state: AccountState, signerPubKey) => {
            state.currentSignerPublicKey = signerPubKey;
        },
        knownAccounts: (state: AccountState, knownAccounts: AccountModel[]) => {
            state.knownAccounts = knownAccounts;
        },
        knownAddresses: (state: AccountState, knownAddresses: Address[]) => {
            state.knownAddresses = knownAddresses;
        },
        isCosignatoryMode: (state: AccountState, isCosignatoryMode: boolean) => {
            state.isCosignatoryMode = isCosignatoryMode;
        },
        accountsInfo: (state: AccountState, accountsInfo) => {
            state.accountsInfo = accountsInfo;
        },
        multisigAccountsInfo: (state: AccountState, multisigAccountsInfo) => {
            state.multisigAccountsInfo = multisigAccountsInfo;
        },
        currentAccountMultisigInfo: (state: AccountState, currentAccountMultisigInfo) => {
            state.currentAccountMultisigInfo = currentAccountMultisigInfo;
        },
        currentSignerMultisigInfo: (state: AccountState, currentSignerMultisigInfo) => {
            state.currentSignerMultisigInfo = currentSignerMultisigInfo;
        },

        setSubscriptions: (state: AccountState, subscriptions: Record<string, SubscriptionType[]>) => {
            state.subscriptions = subscriptions;
        },
        updateSubscriptions: (state: AccountState, payload: { address: string; subscriptions: SubscriptionType }) => {
            const { address, subscriptions } = payload;

            // if subscriptions are empty, unset the address subscriptions
            if (!subscriptions) {
                Vue.delete(state.subscriptions, address);
                return;
            }

            // get current subscriptions from state
            const oldSubscriptions = state.subscriptions[address] || [];
            // update subscriptions
            const newSubscriptions: SubscriptionType[] = [...oldSubscriptions, subscriptions];
            // update state
            Vue.set(state.subscriptions, address, newSubscriptions);
        },
    },
    actions: {
        /**
         * Possible `options` values include:
         * @type {
         *    skipTransactions: boolean,
         * }
         */
        async initialize({ commit, getters }, { address }) {
            const callback = async () => {
                if (!address || !address.length) {
                    return;
                }
                commit('setInitialized', true);
            };
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, dispatch, getters }, { address }) {
            const callback = async () => {
                // close websocket connections
                await dispatch('UNSUBSCRIBE', address);
                await dispatch('transaction/RESET_TRANSACTIONS', {}, { root: true });
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },

        /**
         * Possible `options` values include:
         * @type {
         *    isCosignatoryMode: boolean,
         * }
         */
        async SET_CURRENT_ACCOUNT({ commit, dispatch, getters }, currentAccount: AccountModel) {
            const previous: AccountModel = getters.currentAccount;
            if (previous && previous.address === currentAccount.address) {
                return;
            }

            const currentAccountAddress: Address = Address.createFromRawAddress(currentAccount.address);
            dispatch('diagnostic/ADD_DEBUG', 'Store action account/SET_CURRENT_ACCOUNT dispatched with ' + currentAccountAddress.plain(), {
                root: true,
            });

            // set current account
            commit('currentAccount', currentAccount);

            // reset current signer
            dispatch('SET_CURRENT_SIGNER', {
                address: currentAccountAddress,
            });
            $eventBus.$emit('onAccountChange', currentAccountAddress.plain());
        },

        async RESET_CURRENT_ACCOUNT({ commit, dispatch }) {
            dispatch('diagnostic/ADD_DEBUG', 'Store action account/RESET_CURRENT_ACCOUNT dispatched', { root: true });
            commit('currentAccount', null);
            commit('currentAccountAddress', null);
            commit('currentSignerAddress', null);
            commit('currentSignerPublicKey', null);
        },

        async SET_CURRENT_SIGNER({ commit, dispatch, getters, rootGetters }, { address }: { address: Address }) {
            if (!address) {
                throw new Error('Address must be provided when calling account/SET_CURRENT_SIGNER!');
            }
            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];
            const currentAccount: AccountModel = getters.currentAccount;
            const previousSignerAddress: Address = getters.currentSignerAddress;

            const currentSignerAddress: Address = address;

            if (previousSignerAddress && previousSignerAddress.equals(currentSignerAddress)) {
                return;
            }

            dispatch('diagnostic/ADD_DEBUG', 'Store action account/SET_CURRENT_SIGNER dispatched with ' + currentSignerAddress.plain(), {
                root: true,
            });

            dispatch('transaction/RESET_TRANSACTIONS', {}, { root: true });

            const currentAccountAddress = Address.createFromRawAddress(currentAccount.address);
            const knownAccounts = new AccountService().getKnownAccounts(currentProfile.accounts);

            commit('currentSignerAddress', currentSignerAddress);
            commit('currentAccountAddress', currentAccountAddress);
            commit('isCosignatoryMode', !currentSignerAddress.equals(currentAccountAddress));
            commit('knownAccounts', knownAccounts);

            // Upgrade
            dispatch('namespace/SIGNER_CHANGED', {}, { root: true });
            dispatch('mosaic/SIGNER_CHANGED', {}, { root: true });
            dispatch('transaction/SIGNER_CHANGED', {}, { root: true });

            // open / close websocket connections
            if (previousSignerAddress) {
                await dispatch('UNSUBSCRIBE', previousSignerAddress);
            }
            await dispatch('SUBSCRIBE', currentSignerAddress);

            await dispatch('LOAD_ACCOUNT_INFO');

            dispatch('namespace/LOAD_NAMESPACES', {}, { root: true });
            dispatch('mosaic/LOAD_MOSAICS', {}, { root: true });
        },

        async NETWORK_CHANGED({ dispatch }) {
            dispatch('transaction/RESET_TRANSACTIONS', {}, { root: true });
            dispatch('namespace/RESET_NAMESPACES', {}, { root: true });
            dispatch('mosaic/RESET_MOSAICS', {}, { root: true });
            dispatch('transaction/LOAD_TRANSACTIONS', undefined, { root: true });
            await dispatch('mosaic/LOAD_NETWORK_CURRENCIES', undefined, {
                root: true,
            });
            await dispatch('LOAD_ACCOUNT_INFO');
            dispatch('namespace/LOAD_NAMESPACES', {}, { root: true });
            dispatch('mosaic/LOAD_MOSAICS', {}, { root: true });
        },

        async LOAD_ACCOUNT_INFO({ commit, getters, rootGetters }) {
            const networkType: NetworkType = rootGetters['network/networkType'];
            const currentAccount: AccountModel = getters.currentAccount;
            const repositoryFactory = rootGetters['network/repositoryFactory'] as RepositoryFactory;
            const currentSignerAddress: Address = getters.currentSignerAddress;
            const currentAccountAddress: Address = getters.currentAccountAddress;
            const knownAccounts: AccountModel[] = getters.knownAccounts;

            // avoid calls if no account set
            if (!currentAccount || !currentAccountAddress) {
                return;
            }

            // remote calls:

            if (!currentAccountAddress) {
                return;
            }

            const getMultisigAccountGraphInfoPromise = repositoryFactory
                .createMultisigRepository()
                .getMultisigAccountGraphInfo(currentAccountAddress)
                .pipe(
                    map((g) => {
                        return MultisigService.getMultisigInfoFromMultisigGraphInfo(g);
                    }),
                    catchError(() => {
                        return of([]);
                    }),
                )
                .toPromise();

            // REMOTE CALL
            const multisigAccountsInfo: MultisigAccountInfo[] = await getMultisigAccountGraphInfoPromise;

            const currentAccountMultisigInfo = multisigAccountsInfo.find((m) => m.accountAddress.equals(currentAccountAddress));
            const currentSignerMultisigInfo = multisigAccountsInfo.find((m) => m.accountAddress.equals(currentSignerAddress));

            const signers = new MultisigService().getSigners(
                networkType,
                knownAccounts,
                currentAccount,
                currentAccountMultisigInfo,
                multisigAccountsInfo,
            );

            const knownAddresses = _.uniqBy(
                [...signers.map((s) => s.address), ...knownAccounts.map((w) => Address.createFromRawAddress(w.address))].filter((a) => a),
                'address',
            );

            commit('knownAddresses', knownAddresses);
            commit(
                'currentSigner',
                signers.find((s) => s.address.equals(currentSignerAddress)),
            );
            commit('signers', signers);
            commit('multisigAccountsInfo', multisigAccountsInfo);
            commit('currentAccountMultisigInfo', currentAccountMultisigInfo);
            commit('currentSignerMultisigInfo', currentSignerMultisigInfo);

            // REMOTE CALL
            const getAccountsInfoPromise = repositoryFactory.createAccountRepository().getAccountsInfo(knownAddresses).toPromise();
            const accountsInfo = await getAccountsInfoPromise;

            commit('accountsInfo', accountsInfo);

            // read signer info to get public key
            const signerModel = knownAccounts.find((w) => w.address === currentSignerAddress.plain());
            if (signerModel !== undefined) {
                commit('currentSignerPublicKey', signerModel.publicKey);
            }
        },

        UPDATE_CURRENT_ACCOUNT_NAME({ commit, getters, rootGetters }, name: string) {
            const currentAccount: AccountModel = getters.currentAccount;
            if (!currentAccount) {
                return;
            }
            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];
            if (!currentProfile) {
                return;
            }
            const accountService = new AccountService();
            accountService.updateName(currentAccount, name);
            const knownAccounts = accountService.getKnownAccounts(currentProfile.accounts);
            commit('knownAccounts', knownAccounts);
        },

        UPDATE_CURRENT_ACCOUNT_REMOTE_ACCOUNT({ commit, getters, rootGetters }, encRemoteAccountPrivateKey: string) {
            const currentAccount: AccountModel = getters.currentAccount;
            if (!currentAccount) {
                return;
            }
            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];
            if (!currentProfile) {
                return;
            }
            const accountService = new AccountService();
            accountService.updateRemoteAccount(currentAccount, encRemoteAccountPrivateKey);
            const knownAccounts = accountService.getKnownAccounts(currentProfile.accounts);
            commit('knownAccounts', knownAccounts);
        },

        SET_KNOWN_ACCOUNTS({ commit }, accounts: string[]) {
            commit('knownAccounts', new AccountService().getKnownAccounts(accounts));
        },

        /**
         * Websocket API
         */
        // Subscribe to latest account transactions.
        async SUBSCRIBE({ commit, dispatch, rootGetters }, address: Address) {
            if (!address) {
                return;
            }

            const plainAddress = address.plain();

            // use RESTService to open websocket channel subscriptions
            const repositoryFactory = rootGetters['network/repositoryFactory'] as RepositoryFactory;
            const subscriptions: SubscriptionType = await RESTService.subscribeTransactionChannels(
                { commit, dispatch },
                repositoryFactory,
                plainAddress,
            );
            const payload: { address: string; subscriptions: SubscriptionType } = { address: plainAddress, subscriptions };
            // update state of listeners & subscriptions
            commit('updateSubscriptions', payload);
        },

        // Unsubscribe an address open websocket connections
        async UNSUBSCRIBE({ commit, getters }, plainAddress: Address) {
            // get all subscriptions
            const subscriptions: Record<string, SubscriptionType[]> = getters.getSubscriptions;
            // subscriptions to close
            const subscriptionTypes = (subscriptions && subscriptions[plainAddress.plain()]) || [];

            if (!subscriptionTypes.length) {
                return;
            }

            // close subscriptions
            for (const subscriptionType of subscriptionTypes) {
                const { listener, subscriptions } = subscriptionType;
                for (const subscription of subscriptions) {
                    subscription.unsubscribe();
                }
                listener.close();
            }

            // update state of listeners & subscriptions
            const payload: { address: string; subscriptions: SubscriptionType } = {
                address: plainAddress.plain(),
                subscriptions: null,
            };
            commit('updateSubscriptions', payload);
        },
    },
};

'''
'''--- src/store/AppInfo.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import i18n from '@/language';
import app from '@/main';
import { AwaitLock } from './AwaitLock';
// configuration
import { appConfig } from '@/config';
import { networkConfig } from '@/config';
import { SettingsModel } from '@/core/database/entities/SettingsModel';
import { SettingService } from '@/services/SettingService';

const Lock = AwaitLock.create();
const settingService = new SettingService();
const ANON_PROFILE_NAME = '';

interface AppInfoState {
    initialized: false;
    timezone: number;
    languages: { value: string; label: string }[];
    hasLoadingOverlay: boolean;
    loadingOverlayMessage: string;
    loadingDisableCloseButton: false;
    hasControlsDisabled: false;
    controlsDisabledMessage: string;
    faucetUrl: string;
    settings: SettingsModel;
}

const appInfoState: AppInfoState = {
    initialized: false,
    timezone: new Date().getTimezoneOffset() / 60,
    languages: appConfig.languages,
    hasLoadingOverlay: false,
    loadingOverlayMessage: '',
    loadingDisableCloseButton: false,
    hasControlsDisabled: false,
    controlsDisabledMessage: '',
    faucetUrl: networkConfig.faucetUrl,
    settings: settingService.getProfileSettings(ANON_PROFILE_NAME),
};

export default {
    namespaced: true,
    state: appInfoState,
    getters: {
        getInitialized: (state: AppInfoState) => state.initialized,
        currentTimezone: (state: AppInfoState) => state.timezone,
        language: (state: AppInfoState) => state.settings.language,
        languages: (state: AppInfoState) => state.languages,
        shouldShowLoadingOverlay: (state: AppInfoState) => state.hasLoadingOverlay,
        loadingOverlayMessage: (state: AppInfoState) => state.loadingOverlayMessage,
        loadingDisableCloseButton: (state: AppInfoState) => state.loadingDisableCloseButton,
        shouldDisableControls: (state: AppInfoState) => state.hasControlsDisabled,
        controlsDisabledMessage: (state: AppInfoState) => state.controlsDisabledMessage,
        explorerUrl: (state: AppInfoState) => state.settings.explorerUrl,
        settings: (state: AppInfoState) => state.settings,
        faucetUrl: (state: AppInfoState) => state.faucetUrl,
        defaultFee: (state: AppInfoState) => state.settings.defaultFee,
        defaultAccount: (state: AppInfoState) => state.settings.defaultAccount,
    },
    mutations: {
        setInitialized: (state: AppInfoState, initialized) => {
            state.initialized = initialized;
        },
        timezone: (state: AppInfoState, timezone) => Vue.set(state, 'timezone', timezone),
        settings: (state: AppInfoState, settings: SettingsModel) => Vue.set(state, 'settings', settings),
        toggleControlsDisabled: (state: AppInfoState, { disable, message }) => {
            Vue.set(state, 'hasControlsDisabled', disable);
            Vue.set(state, 'controlsDisabledMessage', message || '');
        },
        toggleLoadingOverlay: (state: AppInfoState, display: boolean) => Vue.set(state, 'hasLoadingOverlay', display),
        setLoadingOverlayMessage: (state: AppInfoState, message: string) => Vue.set(state, 'loadingOverlayMessage', message),
        setLoadingDisableCloseButton: (state: AppInfoState, bool: boolean) => Vue.set(state, 'loadingDisableCloseButton', bool),
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // update store
                commit('setInitialized', true);
            };

            // acquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        SET_TIME_ZONE({ commit }, timezone: number): void {
            commit('timezone', timezone);
        },
        SET_UI_DISABLED({ commit }, { isDisabled, message }: { isDisabled: boolean; message: string }) {
            commit('toggleControlsDisabled', {
                disable: isDisabled,
                message: message,
            });
        },
        SET_LOADING_OVERLAY({ commit }, loadingOverlay) {
            if (!loadingOverlay.show) {
                // @ts-ignore
                app.$Spin.hide();
            }
            commit('toggleLoadingOverlay', loadingOverlay.show);
            commit('setLoadingOverlayMessage', loadingOverlay.message);
            commit('setLoadingDisableCloseButton', loadingOverlay.disableCloseButton || false);
        },

        SET_SETTINGS({ commit, rootGetters }, settingsModel: SettingsModel) {
            if (settingsModel.language) {
                i18n.locale = settingsModel.language;
                window.localStorage.setItem('locale', settingsModel.language);
            }
            const currentProfile = rootGetters['profile/currentProfile'];
            const profileName = (currentProfile && currentProfile.profileName) || ANON_PROFILE_NAME;
            commit('settings', settingService.changeProfileSettings(profileName, settingsModel));
        },

        SET_EXPLORER_URL({ dispatch }, explorerUrl: string) {
            dispatch('SET_SETTINGS', { explorerUrl });
        },

        SET_LANGUAGE({ dispatch }, language: string) {
            dispatch('SET_SETTINGS', { language });
        },
        SET_DEFAULT_FEE({ dispatch }, defaultFee: number) {
            dispatch('SET_SETTINGS', { defaultFee });
        },
        SET_DEFAULT_ACCOUNT({ dispatch }, defaultAccount: string) {
            dispatch('SET_SETTINGS', { defaultAccount });
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/AwaitLock.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import AwaitLockImpl from 'await-lock';

export class AwaitLock {
    /**
     * Create a lock instance
     * @access private
     * @param lock
     */
    private constructor(
        /**
         * The lock specialization
         * @var {AwaitLockImpl}
         */
        protected readonly lock: AwaitLockImpl,
    ) {}

    /**
     * Create a lock
     * @return {AwaitLock}
     */
    static create() {
        return new AwaitLock(new AwaitLockImpl());
    }

    /**
     * Helper method for the initialize callback.
     * @param callback
     * @param store
     */
    async initialize(callback, { getters }) {
        await this.lock.acquireAsync();
        try {
            if (!getters.getInitialized) {
                await callback();
            }
        } finally {
            this.lock.release();
        }
    }

    /**
     * Helper method for the unitialize callback
     * @param callback
     * @param store
     */
    async uninitialize(callback, { getters }) {
        await this.lock.acquireAsync();
        try {
            if (getters.getInitialized) {
                await callback();
            }
        } finally {
            this.lock.release();
        }
    }
}

'''
'''--- src/store/Block.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */

// internal dependencies
import { BlockInfoModel } from '@/core/database/entities/BlockInfoModel';
import { RepositoryFactory, UInt64 } from 'symbol-sdk';
import { BlockService } from '@/services/BlockService';
import { first } from 'rxjs/operators';

interface BlockState {
    blocks: BlockInfoModel[];
}

const blocksState: BlockState = {
    blocks: [],
};

export default {
    namespaced: true,
    state: blocksState,
    getters: {
        blocks: (state: BlockState) => state.blocks,
    },
    mutations: {
        blocks: (state: BlockState, blocks: BlockInfoModel[]) => {
            state.blocks = blocks;
        },
    },
    actions: {
        async GET_BLOCK({ commit, rootGetters, getters }, height: UInt64): Promise<BlockInfoModel> {
            const generationHash: string = rootGetters['network/generationHash'];
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const alreadyLoadedBlocks: BlockInfoModel[] = getters.blocks;
            const blockInfoModel = await new BlockService()
                .getBlockInfo(repositoryFactory, height, alreadyLoadedBlocks)
                .pipe(first())
                .toPromise();
            commit('blocks', new BlockService().getKnownBlockInfos(generationHash));
            return blockInfoModel;
        },
    },
};

'''
'''--- src/store/Community.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import { AwaitLock } from './AwaitLock';
import { CommunityService, ArticleEntry } from '@/services/CommunityService';

const Lock = AwaitLock.create();

/**
 * Community Store
 */
export default {
    namespaced: true,
    state: {
        initialized: false,
        articles: [],
    },
    getters: {
        getInitialized: (state) => state.initialized,
        latestArticles: (state) => state.articles,
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
        addArticles: (state, articles: ArticleEntry[]): void => {
            const newArticles = [...articles, ...state.articles];
            Vue.set(state, 'articles', newArticles);
        },
    },
    actions: {
        async initialize({ commit, dispatch, getters }) {
            const callback = async () => {
                // fetch news
                await dispatch('FETCH_ARTICLES');
                commit('setInitialized', true);
            };
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                // close websocket connections
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        async FETCH_ARTICLES({ commit }) {
            // fetch articles from external feed
            try {
                const service = new CommunityService();
                const articles: ArticleEntry[] = await service.getLatestArticles();
                commit('addArticles', articles);
            } catch (e) {
                // forward error
                throw new Error(e);
            }
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Database.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// internal dependencies
import { AwaitLock } from './AwaitLock';

/// region globals
const Lock = AwaitLock.create();
/// end-region globals

export default {
    namespaced: true,
    state: {
        initialized: false,
    },
    getters: {
        getInitialized: (state) => state.initialized,
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // MIGRATIONS COULD GO HERE!
                commit('setInitialized', true);
            };

            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
    },
};

'''
'''--- src/store/Diagnostic.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import { LogLevels } from '@/core/utils/LogLevels';
import { AwaitLock } from './AwaitLock';

const Lock = AwaitLock.create();

export default {
    namespaced: true,
    state: {
        initialized: false,
        logs: [],
    },
    getters: {
        getInitialized: (state) => state.initialized,
        logs: (state) => state.logs,
        lastLog: (state) => state.logs.pop(),
        infos: (state) => {
            return state.logs.filter((row) => row.level === LogLevels.INFO).map((log) => log.message);
        },
        debugs: (state) => {
            return state.logs.filter((row) => row.level === LogLevels.DEBUG).map((log) => log.message);
        },
        warnings: (state) => {
            return state.logs.filter((row) => row.level === LogLevels.WARNING).map((log) => log.message);
        },
        errors: (state) => {
            return state.logs.filter((row) => row.level === LogLevels.ERROR).map((log) => log.message);
        },
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
        addLog: (state, payload) => {
            const logs = state.logs;
            logs.push({
                level: payload.level || LogLevels.DEBUG,
                message: payload.message,
                time: payload.time,
            });
            Vue.set(state, 'logs', logs);
        },
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // update store
                commit('setInitialized', true);
            };

            // acquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        ADD_LOG({ commit }, { level, message }) {
            commit('addLog', { level, message, time: new Date() });
        },
        ADD_INFO({ commit }, message) {
            const time = new Date();
            commit('addLog', { level: LogLevels.INFO, message, time });
            return time;
        },
        ADD_DEBUG({ commit }, message) {
            const time = new Date();
            commit('addLog', { level: LogLevels.DEBUG, message, time });
            return time;
        },
        ADD_WARNING({ commit }, message) {
            const time = new Date();
            commit('addLog', { level: LogLevels.WARNING, message, time });
            return time;
        },
        ADD_ERROR({ commit }, message) {
            const time = new Date();
            commit('addLog', { level: LogLevels.ERROR, message, time });
            return time;
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Market.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import { $eventBus } from '../events';
import { AwaitLock } from './AwaitLock';

const Lock = AwaitLock.create();

export default {
    namespaced: true,
    state: {
        initialized: false,
        lastPriceUSD: 0,
    },
    getters: {
        getInitialized: (state) => state.initialized,
        lastPrice: (state) => state.lastPriceUSD,
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
        currentPrice: (state, price) => Vue.set(state, 'lastPriceUSD', price),
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // update store
                commit('setInitialized', true);
            };

            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        async SET_CURRENT_PRICE({ commit }, currentPrice) {
            // XXX validate correct price
            commit('currentPrice', currentPrice);
            $eventBus.$emit('onPriceChange', currentPrice);
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Mosaic.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { AccountInfo, Address, MosaicId, RepositoryFactory } from 'symbol-sdk';
import Vue from 'vue';
// internal dependencies
import { AwaitLock } from './AwaitLock';
import { MosaicService } from '@/services/MosaicService';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { MosaicConfigurationModel } from '@/core/database/entities/MosaicConfigurationModel';
import { first, tap } from 'rxjs/operators';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

const Lock = AwaitLock.create();

// mosaic state typing
interface MosaicState {
    initialized: boolean;
    networkCurrency: NetworkCurrencyModel;
    mosaics: MosaicModel[];
    balanceMosaics: MosaicModel[];
    holdMosaics: MosaicModel[];
    ownedMosaics: MosaicModel[];
    networkMosaicId: MosaicId;
    networkMosaicName: string;
    networkMosaicTicker: string;
    accountMosaicConfigurations: Record<string, MosaicConfigurationModel>;
    isFetchingMosaics: boolean;
}

// mosaic state initial definition
const mosaicState: MosaicState = {
    initialized: false,
    networkMosaicId: null,
    mosaics: [],
    balanceMosaics: [],
    holdMosaics: [],
    ownedMosaics: [],
    networkCurrency: null,
    networkMosaicName: '',
    networkMosaicTicker: '',
    accountMosaicConfigurations: {},
    isFetchingMosaics: false,
};

export default {
    namespaced: true,
    state: mosaicState,
    getters: {
        getInitialized: (state: MosaicState) => state.initialized,
        networkCurrency: (state: MosaicState) => state.networkCurrency,
        mosaics: (state: MosaicState) => state.mosaics,
        ownedMosaics: (state: MosaicState) => state.ownedMosaics,
        holdMosaics: (state: MosaicState) => state.holdMosaics,
        balanceMosaics: (state: MosaicState) => state.balanceMosaics,
        networkMosaic: (state: MosaicState) => state.networkMosaicId,
        networkMosaicTicker: (state: MosaicState) => state.networkMosaicTicker,
        accountMosaicConfigurations: (state: MosaicState) => state.accountMosaicConfigurations,
        networkMosaicName: (state: MosaicState) => state.networkMosaicName,
        isFetchingMosaics: (state: MosaicState) => state.isFetchingMosaics,
    },
    mutations: {
        setInitialized: (state: MosaicState, initialized: boolean) => {
            state.initialized = initialized;
        },
        networkCurrency: (state: MosaicState, networkCurrency: NetworkCurrencyModel) => {
            Vue.set(state, 'networkCurrency', networkCurrency);
            Vue.set(state, 'networkMosaicId', new MosaicId(networkCurrency.mosaicIdHex));
            Vue.set(state, 'networkMosaicName', networkCurrency.namespaceIdFullname);
            Vue.set(state, 'networkMosaicTicker', networkCurrency.ticker);
        },
        mosaics: (
            state: MosaicState,
            {
                mosaics,
                currentSignerAddress,
                networkCurrency,
            }: {
                mosaics: MosaicModel[];
                currentSignerAddress: Address;
                networkCurrency: NetworkCurrencyModel;
            },
        ) => {
            const ownedMosaics = mosaics.filter(
                (m) => m.ownerRawPlain === currentSignerAddress.plain() && m.addressRawPlain === currentSignerAddress.plain(),
            );

            const holdMosaics = mosaics
                .filter((m) => m.addressRawPlain === currentSignerAddress.plain())
                .sort((m1, m2) => {
                    const owner1 = m1.ownerRawPlain === currentSignerAddress.plain();
                    const owner2 = m2.ownerRawPlain === currentSignerAddress.plain();
                    return Number(owner1) - Number(owner2);
                });

            const noMosaic = networkCurrency && !holdMosaics.find((m) => m.isCurrencyMosaic);

            const balanceMosaics = (noMosaic
                ? [
                      ...holdMosaics,
                      {
                          mosaicIdHex: networkCurrency.mosaicIdHex,
                          divisibility: networkCurrency.divisibility,
                          name: networkCurrency.namespaceIdFullname,
                          isCurrencyMosaic: true,
                          balance: 0,
                      } as MosaicModel,
                  ]
                : [...holdMosaics]
            ).filter((m) => m.isCurrencyMosaic || m.balance > 0);

            Vue.set(state, 'mosaics', mosaics);
            Vue.set(state, 'balanceMosaics', balanceMosaics);
            Vue.set(state, 'ownedMosaics', ownedMosaics);
            Vue.set(
                state,
                'holdMosaics',
                holdMosaics.filter((m) => m.ownerRawPlain === currentSignerAddress.plain() || m.balance > 0),
            );
        },
        accountMosaicConfigurations: (state: MosaicState, accountMosaicConfigurations: Record<string, MosaicConfigurationModel>) =>
            Vue.set(state, 'accountMosaicConfigurations', accountMosaicConfigurations),

        isFetchingMosaics: (state: MosaicState, isFetchingMosaics: boolean) => Vue.set(state, 'isFetchingMosaics', isFetchingMosaics),
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', true);
            };
            // acquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },

        async LOAD_NETWORK_CURRENCIES({ commit, rootGetters }) {
            const mosaicService = new MosaicService();
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const networkConfig: NetworkConfigurationModel = rootGetters['network/networkConfiguration'];
            const generationHash: string = rootGetters['network/generationHash'];
            await mosaicService
                .getNetworkCurrencies(repositoryFactory, generationHash, networkConfig)
                .pipe(
                    tap((networkCurrencies) => {
                        commit('networkCurrency', networkCurrencies.networkCurrency);
                    }),
                    first(),
                )
                .toPromise();
        },

        LOAD_MOSAICS({ commit, rootGetters }) {
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const networkCurrency: NetworkCurrencyModel = rootGetters['mosaic/networkCurrency'];
            const accountsInfo: AccountInfo[] = rootGetters['account/accountsInfo'] || [];
            const generationHash = rootGetters['network/generationHash'];

            commit('isFetchingMosaics', true);

            new MosaicService()
                .getMosaics(repositoryFactory, generationHash, networkCurrency, accountsInfo)
                .subscribe((mosaics) => {
                    const currentSignerAddress: Address = rootGetters['account/currentSignerAddress'];
                    if (!currentSignerAddress) {
                        return;
                    }
                    commit('mosaics', {
                        mosaics: mosaics,
                        currentSignerAddress,
                        networkCurrency,
                    });
                })
                .add(() => commit('isFetchingMosaics', false));
        },

        RESET_MOSAICS({ commit, rootGetters }) {
            const networkCurrency: NetworkCurrencyModel = rootGetters['mosaic/networkCurrency'];
            commit('mosaics', { mosaics: [], undefined, networkCurrency });
        },

        SIGNER_CHANGED({ commit, rootGetters, getters }) {
            const currentSignerAddress: Address = rootGetters['account/currentSignerAddress'];
            const networkCurrency: NetworkCurrencyModel = rootGetters['mosaic/networkCurrency'];
            if (!currentSignerAddress) {
                return;
            }
            const mosaicService = new MosaicService();
            commit('accountMosaicConfigurations', mosaicService.getMosaicConfigurationsByAccount(rootGetters['account/currentAccount']));
            commit('mosaics', {
                mosaics: getters['mosaics'],
                currentSignerAddress,
                networkCurrency,
            });
        },

        HIDE_MOSAIC({ commit }, { mosaicId, account }) {
            commit(
                'accountMosaicConfigurations',
                new MosaicService().changeMosaicConfiguration(mosaicId, account, {
                    hidden: true,
                }),
            );
        },
        SHOW_MOSAIC({ commit }, { mosaicId, account }) {
            commit(
                'accountMosaicConfigurations',
                new MosaicService().changeMosaicConfiguration(mosaicId, account, {
                    hidden: false,
                }),
            );
        },
    },
};

'''
'''--- src/store/Namespace.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Address, NamespaceId, RepositoryFactory } from 'symbol-sdk';
import Vue from 'vue';
// internal dependencies
import { AwaitLock } from './AwaitLock';
import { NamespaceService } from '@/services/NamespaceService';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';

import * as _ from 'lodash';

const Lock = AwaitLock.create();

interface NamespaceState {
    initialized: boolean;
    namespaces: NamespaceModel[];
    ownedNamespaces: NamespaceModel[];
    isFetchingNamespaces: boolean;
}

const namespaceState: NamespaceState = {
    initialized: false,
    namespaces: [],
    ownedNamespaces: [],
    isFetchingNamespaces: false,
};

export default {
    namespaced: true,
    state: namespaceState,
    getters: {
        getInitialized: (state: NamespaceState) => state.initialized,
        namespaces: (state: NamespaceState) => state.namespaces,
        ownedNamespaces: (state: NamespaceState) => state.ownedNamespaces,
        isFetchingNamespaces: (state: NamespaceState) => state.isFetchingNamespaces,
    },
    mutations: {
        setInitialized: (state: NamespaceState, initialized) => {
            state.initialized = initialized;
        },
        namespaces: (
            state: NamespaceState,
            { namespaces, currentSignerAddress }: { namespaces: NamespaceModel[]; currentSignerAddress: Address },
        ) => {
            const uniqueNamespaces = _.uniqBy(namespaces, (n) => n.namespaceIdHex);
            Vue.set(state, 'namespaces', uniqueNamespaces);
            Vue.set(
                state,
                'ownedNamespaces',
                uniqueNamespaces.filter((n) => n.ownerAddressRawPlain === currentSignerAddress.plain()),
            );
        },
        isFetchingNamespaces: (state: NamespaceState, isFetchingNamespaces: boolean) =>
            Vue.set(state, 'isFetchingNamespaces', isFetchingNamespaces),
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // Placeholder for initialization if necessary.
                commit('setInitialized', true);
            };
            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },

        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },

        LOAD_NAMESPACES({ commit, rootGetters }) {
            const repositoryFactory = rootGetters['network/repositoryFactory'];
            const generationHash = rootGetters['network/generationHash'];
            const namespaceService = new NamespaceService();
            const currentSignerAddress: Address = rootGetters['account/currentSignerAddress'];
            if (!currentSignerAddress) {
                return;
            }
            commit('isFetchingNamespaces', true);
            namespaceService
                .getNamespaces(repositoryFactory, generationHash, [currentSignerAddress])
                .subscribe((namespaces) => {
                    commit('namespaces', { namespaces, currentSignerAddress });
                })
                .add(() => commit('isFetchingNamespaces', false));
        },

        RESET_NAMESPACES({ commit }) {
            const namespaces: NamespaceModel[] = [];
            commit('namespaces', { namespaces, undefined });
        },

        SIGNER_CHANGED({ commit, rootGetters, getters }) {
            const namespaces: NamespaceModel[] = getters['namespaces'];
            const currentSignerAddress: Address = rootGetters['account/currentSignerAddress'];
            if (!currentSignerAddress) {
                return;
            }
            commit('namespaces', { namespaces, currentSignerAddress });
        },

        async RESOLVE_NAME({ commit, getters, rootGetters }, namespaceId: NamespaceId): Promise<string> {
            if (!namespaceId) {
                return '';
            }

            if (namespaceId.fullName) {
                return namespaceId.fullName;
            }
            const namespaces: NamespaceModel[] = getters['namespaces'];
            const knownNamespace = namespaces.find((n) => n.namespaceIdHex === namespaceId.toHex());
            if (knownNamespace) {
                return knownNamespace.name;
            }
            const repositoryFactory = rootGetters['network/repositoryFactory'] as RepositoryFactory;
            const currentSignerAddress = rootGetters['account/currentSignerAddress'] as Address;
            const namespaceRepository = repositoryFactory.createNamespaceRepository();

            const namespaceInfo = await namespaceRepository.getNamespace(namespaceId).toPromise();

            // map by hex if names available
            const namespaceName = await namespaceRepository.getNamespacesNames([namespaceId]).toPromise();

            // Note, fullName may not be full. How can we load it without needing to load each parent recursively?.
            const model = new NamespaceModel(
                namespaceInfo,
                NamespaceService.getFullNameFromNamespaceNames(namespaceName[0], namespaceName),
            );
            namespaces.push(model);
            commit('namespaces', { namespaces, currentSignerAddress });
            return model.name;
        },
    },
};

'''
'''--- src/store/Network.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import { BlockInfo, IListener, Listener, NetworkType, RepositoryFactory, TransactionFees, RentalFees } from 'symbol-sdk';
import { Subscription } from 'rxjs';
// internal dependencies
import { $eventBus } from '../events';
import { URLHelpers } from '@/core/utils/URLHelpers';
import app from '@/main';
import { AwaitLock } from './AwaitLock';
// configuration
import { UrlValidator } from '@/core/validation/validators';
import { NetworkModel } from '@/core/database/entities/NetworkModel';
import { NetworkService } from '@/services/NetworkService';
import { NodeService } from '@/services/NodeService';
import { NodeModel } from '@/core/database/entities/NodeModel';
import { URLInfo } from '@/core/utils/URLInfo';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { networkConfig } from '@/config';

const Lock = AwaitLock.create();

/// region custom types
/**
 * Type SubscriptionType for Wallet Store
 * @type {SubscriptionType}
 */
type SubscriptionType = {
    listener: IListener | undefined;
    subscriptions: Subscription[];
};

/**
 * Type BlockRangeType for Wallet Store
 * @type {BlockRangeType}
 */
type BlockRangeType = { start: number };

/// end-region custom types

interface NetworkState {
    initialized: boolean;
    currentPeer: URLInfo;
    currentPeerInfo: NodeModel;
    networkModel: NetworkModel;
    networkConfiguration: NetworkConfigurationModel;
    repositoryFactory: RepositoryFactory;
    listener: Listener;
    generationHash: string;
    networkType: NetworkType;
    isConnected: boolean;
    knowNodes: NodeModel[];
    currentHeight: number;
    subscriptions: Subscription[];
    transactionFees: TransactionFees;
    rentalFeeEstimation: RentalFees;
    networkIsNotMatchingProfile: boolean;
}

const defaultPeer = URLHelpers.formatUrl(networkConfig.defaultNodeUrl);

const networkState: NetworkState = {
    initialized: false,
    currentPeer: defaultPeer,
    currentPeerInfo: new NodeModel(defaultPeer.url, defaultPeer.url, true),
    networkType: networkConfig.defaultNetworkType,
    generationHash: undefined,
    networkModel: undefined,
    networkConfiguration: networkConfig.networkConfigurationDefaults,
    repositoryFactory: NetworkService.createRepositoryFactory(networkConfig.defaultNodeUrl),
    listener: undefined,
    transactionFees: undefined,
    isConnected: false,
    knowNodes: [],
    currentHeight: 0,
    subscriptions: [],
    rentalFeeEstimation: undefined,
    networkIsNotMatchingProfile: false,
};
export default {
    namespaced: true,
    state: networkState,
    getters: {
        getInitialized: (state: NetworkState) => state.initialized,
        subscriptions: (state: NetworkState) => state.subscriptions,
        networkType: (state: NetworkState) => state.networkType,
        generationHash: (state: NetworkState) => state.generationHash,
        repositoryFactory: (state: NetworkState) => state.repositoryFactory,
        listener: (state: NetworkState) => state.listener,
        networkModel: (state: NetworkState) => state.networkModel,
        networkConfiguration: (state: NetworkState) => state.networkConfiguration,
        currentPeer: (state: NetworkState) => state.currentPeer,
        currentPeerInfo: (state: NetworkState) => state.currentPeerInfo,
        isConnected: (state: NetworkState) => state.isConnected,
        knowNodes: (state: NetworkState) => state.knowNodes,
        currentHeight: (state: NetworkState) => state.currentHeight,
        transactionFees: (state: NetworkState) => state.transactionFees,
        rentalFeeEstimation: (state: NetworkState) => state.rentalFeeEstimation,
        networkIsNotMatchingProfile: (state: NetworkState) => state.networkIsNotMatchingProfile,
    },
    mutations: {
        setInitialized: (state: NetworkState, initialized: boolean) => {
            state.initialized = initialized;
        },
        setConnected: (state: NetworkState, connected: boolean) => {
            state.isConnected = connected;
        },
        currentHeight: (state: NetworkState, currentHeight: number) => Vue.set(state, 'currentHeight', currentHeight),
        currentPeerInfo: (state: NetworkState, currentPeerInfo: NodeModel) => Vue.set(state, 'currentPeerInfo', currentPeerInfo),
        repositoryFactory: (state: NetworkState, repositoryFactory: RepositoryFactory) =>
            Vue.set(state, 'repositoryFactory', repositoryFactory),
        networkConfiguration: (state: NetworkState, networkConfiguration: NetworkConfigurationModel) =>
            Vue.set(state, 'networkConfiguration', networkConfiguration),
        listener: (state: NetworkState, listener: Listener) => Vue.set(state, 'listener', listener),
        networkModel: (state: NetworkState, networkModel: NetworkModel) => Vue.set(state, 'networkModel', networkModel),
        knowNodes: (state: NetworkState, knowNodes: NodeModel[]) => Vue.set(state, 'knowNodes', knowNodes),
        generationHash: (state: NetworkState, generationHash: string) => Vue.set(state, 'generationHash', generationHash),
        networkType: (state: NetworkState, networkType: NetworkType) => Vue.set(state, 'networkType', networkType),
        currentPeer: (state: NetworkState, currentPeer: URLInfo) => Vue.set(state, 'currentPeer', currentPeer),
        transactionFees: (state: NetworkState, transactionFees: TransactionFees) => {
            state.transactionFees = transactionFees;
        },
        rentalFeeEstimation: (state: NetworkState, amount: RentalFees) => {
            state.rentalFeeEstimation = amount;
        },
        networkIsNotMatchingProfile: (state: NetworkState, networkIsNotMatchingProfile: boolean) => {
            Vue.set(state, 'networkIsNotMatchingProfile', networkIsNotMatchingProfile);
        },

        addPeer: (state: NetworkState, peerUrl: string) => {
            const knowNodes: NodeModel[] = state.knowNodes;
            const existNode = knowNodes.find((p: NodeModel) => p.url === peerUrl);
            if (existNode) {
                return;
            }
            const newNodes = [...knowNodes, new NodeModel(peerUrl, '', false)];
            new NodeService().saveNodes(newNodes);
            Vue.set(state, 'knowNodes', newNodes);
        },
        removePeer: (state: NetworkState, peerUrl: string) => {
            const knowNodes: NodeModel[] = state.knowNodes;
            const toBeDeleted = knowNodes.find((p: NodeModel) => p.url === peerUrl);
            if (!toBeDeleted) {
                return;
            }
            const newNodes = knowNodes.filter((n) => n !== toBeDeleted);
            new NodeService().saveNodes(newNodes);
            Vue.set(state, 'knowNodes', newNodes);
        },
        subscriptions: (state: NetworkState, data) => Vue.set(state, 'subscriptions', data),
        addSubscriptions: (state: NetworkState, payload) => {
            const subscriptions = state.subscriptions;
            Vue.set(state, 'subscriptions', [...subscriptions, payload]);
        },
    },
    actions: {
        async initialize({ commit, dispatch, getters }) {
            const callback = async () => {
                // commit('knowNodes', new NodeService().getKnowNodesOnly())
                await dispatch('CONNECT');
                dispatch('REST_NETWORK_RENTAL_FEES');
                // update store
                commit('setInitialized', true);
            };
            // acquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, dispatch, getters }) {
            const callback = async () => {
                dispatch('UNSUBSCRIBE');
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },

        async CONNECT({ commit, dispatch, getters, rootGetters }, newCandidate: string | undefined) {
            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];
            const networkService = new NetworkService();
            const nodeService = new NodeService();
            const networkModelResult = await networkService
                .getNetworkModel(newCandidate, (currentProfile && currentProfile.generationHash) || undefined)
                .toPromise();
            if (!networkModelResult) {
                throw new Error('Connect error, active peer cannot be found');
            }
            const { networkModel, repositoryFactory, fallback } = networkModelResult;
            if (fallback) {
                throw new Error('Connection Error.');
            }
            const oldGenerationHash = getters['generationHash'];
            const getNodesPromise = nodeService.getNodes(repositoryFactory, networkModel.url).toPromise();
            const getBlockchainHeightPromise = repositoryFactory.createChainRepository().getChainInfo().toPromise();
            const nodes = await getNodesPromise;
            const currentHeight = (await getBlockchainHeightPromise).height.compact();
            const listener = repositoryFactory.createListener();

            const currentPeer = URLHelpers.getNodeUrl(networkModel.url);
            commit('currentPeer', currentPeer);
            commit('networkModel', networkModel);
            commit('networkConfiguration', networkModel.networkConfiguration);
            commit('transactionFees', networkModel.transactionFees);
            commit('networkType', networkModel.networkType);
            commit('generationHash', networkModel.generationHash);
            commit('repositoryFactory', repositoryFactory);
            commit('knowNodes', nodes);
            commit('listener', listener);
            commit('currentHeight', currentHeight);
            commit(
                'currentPeerInfo',
                nodes.find((n) => n.url === networkModel.url),
            );
            commit('setConnected', true);
            $eventBus.$emit('newConnection', currentPeer);
            // subscribe to updates

            if (oldGenerationHash != networkModel.generationHash) {
                dispatch('account/NETWORK_CHANGED', {}, { root: true });
                dispatch('statistics/LOAD', {}, { root: true });

                // check if current profile network type and generation hash matches current network
                if (
                    currentProfile &&
                    (currentProfile.networkType !== networkModel.networkType ||
                        currentProfile.generationHash !== networkModel.generationHash)
                ) {
                    dispatch('SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);
                } else {
                    dispatch('SET_NETWORK_IS_NOT_MATCHING_PROFILE', false);
                }
            }
            await dispatch('UNSUBSCRIBE');
            await listener.open();
            dispatch('SUBSCRIBE');
        },

        async SET_CURRENT_PEER({ dispatch }, currentPeerUrl) {
            if (!UrlValidator.validate(currentPeerUrl)) {
                throw Error('Cannot change node. URL is not valid: ' + currentPeerUrl);
            }

            // - show loading overlay
            dispatch(
                'app/SET_LOADING_OVERLAY',
                {
                    show: true,
                    message: `${app.$t('info_connecting_peer', {
                        peerUrl: currentPeerUrl,
                    })}`,
                    disableCloseButton: true,
                },
                { root: true },
            );

            dispatch('diagnostic/ADD_DEBUG', 'Store action network/SET_CURRENT_PEER dispatched with: ' + currentPeerUrl, {
                root: true,
            });

            try {
                // - disconnect from previous node

                await dispatch('CONNECT', currentPeerUrl);
            } catch (e) {
                console.log(e);
                dispatch(
                    'notification/ADD_ERROR',
                    `${app.$t('error_peer_connection_went_wrong', {
                        peerUrl: currentPeerUrl,
                    })}`,
                    { root: true },
                );
                dispatch('diagnostic/ADD_ERROR', 'Error with store action network/SET_CURRENT_PEER: ' + JSON.stringify(e), {
                    root: true,
                });
            } finally {
                // - hide loading overlay
                dispatch('app/SET_LOADING_OVERLAY', { show: false }, { root: true });
            }
        },

        REST_NETWORK_RENTAL_FEES({ rootGetters, dispatch }) {
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            repositoryFactory
                .createNetworkRepository()
                .getRentalFees()
                .subscribe((rentalFee: RentalFees) => {
                    dispatch('SET_RENTAL_FEE_ESTIMATE', rentalFee);
                });
        },

        SET_RENTAL_FEE_ESTIMATE({ commit }, rentalFee) {
            commit('rentalFeeEstimation', rentalFee);
        },
        SET_NETWORK_IS_NOT_MATCHING_PROFILE({ commit }, networkIsNotMatchingProfile) {
            commit('networkIsNotMatchingProfile', networkIsNotMatchingProfile);
        },
        ADD_KNOWN_PEER({ commit }, peerUrl) {
            if (!UrlValidator.validate(peerUrl)) {
                throw Error('Cannot add node. URL is not valid: ' + peerUrl);
            }
            commit('addPeer', peerUrl);
        },
        REMOVE_KNOWN_PEER({ commit }, peerUrl) {
            commit('removePeer', peerUrl);
        },

        async RESET_PEERS({ dispatch, getters }) {
            const nodeService = new NodeService();
            nodeService.reset();

            const networkService = new NetworkService();
            networkService.reset(getters['generationHash']);

            dispatch('SET_CURRENT_PEER', networkService.getDefaultUrl());
        },

        /**
         * Websocket API
         */
        // Subscribe to latest account transactions.
        async SUBSCRIBE({ commit, dispatch, getters }) {
            // use RESTService to open websocket channel subscriptions
            const listener = getters['listener'] as Listener;
            listener.open().then(() => {
                const subscription = listener.newBlock().subscribe((block: BlockInfo) => {
                    dispatch('SET_CURRENT_HEIGHT', block.height.compact());
                    dispatch('diagnostic/ADD_INFO', 'New block height: ' + block.height.compact(), { root: true });
                });
                // update state of listeners & subscriptions
                commit('addSubscriptions', subscription);
            });
        },

        // Unsubscribe from all open websocket connections
        async UNSUBSCRIBE({ commit, getters }) {
            const subscriptions: Subscription[] = getters.subscriptions;
            subscriptions.forEach((s) => s.unsubscribe());
            const listener: Listener = getters.listener;
            if (listener) {
                listener.close();
            }
            // update state
            commit('subscriptions', []);
        },

        SET_CURRENT_HEIGHT({ commit }, height) {
            commit('currentHeight', height);
        },

        LOAD_TRANSACTION_FEES({ commit, rootGetters }) {
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const networkRepository = repositoryFactory.createNetworkRepository();
            networkRepository.getTransactionFees().subscribe((fees: TransactionFees) => commit('transactionFees', fees));
        },
    },
};

'''
'''--- src/store/Notification.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import app from '@/main';
import { AwaitLock } from './AwaitLock';
import { FilterHelpers } from '../core/utils/FilterHelpers';

const Lock = AwaitLock.create();

export default {
    namespaced: true,
    state: {
        initialized: false,
        history: [],
    },
    getters: {
        getInitialized: (state) => state.initialized,
        history: (state) => state.history,
        lastNotification: (state) => state.history.pop(),
        successes: (state) => {
            return state.history.filter((row) => row.level === 'success').map((log) => log.message);
        },
        warnings: (state) => {
            return state.history.filter((row) => row.level === 'warning').map((log) => log.message);
        },
        errors: (state) => {
            return state.history.filter((row) => row.level === 'error').map((log) => log.message);
        },
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
        add: (state, payload) => {
            // strip tags to remove XSS vulnerability
            const message = FilterHelpers.stripFilter(payload.message);
            const history = state.history;
            history.push({
                level: payload.level || 'warning',
                message: message,
            });
            Vue.set(state, 'history', history);

            /// region trigger notice UI
            app.$Notice.destroy();
            app.$Notice[payload.level]({ title: app.$t(message) });
            /// end-region trigger notice UI
        },
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                /// region initialize $Notice
                app.$Notice.config({ duration: 4 });
                /// end-region initialize $Notice

                // update store
                commit('setInitialized', true);
            };

            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        async ADD_SUCCESS({ commit, dispatch }, message) {
            commit('add', { level: 'success', message });
            dispatch('diagnostic/ADD_INFO', `Notification (Success): ${message}`, {
                root: true,
            });
        },
        async ADD_WARNING({ commit, dispatch }, message) {
            commit('add', { level: 'warning', message });
            dispatch('diagnostic/ADD_WARNING', `Notification (Warning): ${message}`, {
                root: true,
            });
        },
        async ADD_ERROR({ commit, dispatch }, message) {
            commit('add', { level: 'error', message });
            dispatch('diagnostic/ADD_ERROR', `Notification (Error): ${message}`, {
                root: true,
            });
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Profile.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
// internal dependencies
import { $eventBus } from '../events';
import { AwaitLock } from './AwaitLock';
import { SettingService } from '@/services/SettingService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ProfileService } from '@/services/ProfileService';

/// region globals
const Lock = AwaitLock.create();

/// end-region globals

interface ProfileState {
    initialized: boolean;
    currentProfile: ProfileModel;
    isAuthenticated: boolean;
    isSettingsVisible: boolean;
}

const profileState: ProfileState = {
    initialized: false,
    currentProfile: null,
    isAuthenticated: false,
    isSettingsVisible: false,
};
export default {
    namespaced: true,
    state: profileState,
    getters: {
        getInitialized: (state: ProfileState) => state.initialized,
        currentProfile: (state: ProfileState) => state.currentProfile,
        isAuthenticated: (state: ProfileState) => state.isAuthenticated,
        isSettingsVisible: (state: ProfileState) => state.isSettingsVisible,
        isPrivateKeyProfile: (state: ProfileState): boolean => {
            return state.currentProfile ? !state.currentProfile.seed : false;
        },
    },
    mutations: {
        setInitialized: (state: ProfileState, initialized: boolean) => {
            state.initialized = initialized;
        },
        currentProfile: (state: ProfileState, currentProfile: ProfileModel) => Vue.set(state, 'currentProfile', currentProfile),
        setAuthenticated: (state: ProfileState, isAuthenticated: boolean) => Vue.set(state, 'isAuthenticated', isAuthenticated),
        toggleSettings: (state: ProfileState) => {
            state.isSettingsVisible = !state.isSettingsVisible;
        },
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', true);
            };
            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, dispatch, getters }) {
            const callback = async () => {
                await dispatch('RESET_STATE');
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        RESET_STATE({ commit }) {
            commit('currentProfile', null);
            commit('setAuthenticated', false);
        },
        async LOG_OUT({ dispatch, rootGetters }): Promise<void> {
            const currentAccount = rootGetters['account/currentAccount'];
            if (currentAccount) {
                await dispatch('account/uninitialize', { address: currentAccount.address }, { root: true });
            }
            await dispatch('account/SET_KNOWN_ACCOUNTS', [], { root: true });
            await dispatch('account/RESET_CURRENT_ACCOUNT', undefined, {
                root: true,
            });
            await dispatch('RESET_STATE');
        },
        async SET_CURRENT_PROFILE({ commit, dispatch }, currentProfile: ProfileModel) {
            // update state
            commit('currentProfile', currentProfile);
            commit('setAuthenticated', true);

            dispatch('diagnostic/ADD_DEBUG', 'Changing current profile to ' + currentProfile.profileName, { root: true });

            const settings = new SettingService().getProfileSettings(currentProfile.profileName);
            dispatch('app/SET_SETTINGS', settings, { root: true });

            dispatch('diagnostic/ADD_DEBUG', 'Using profile settings ' + Object.values(settings), { root: true });

            // reset store + re-initialize
            await dispatch('initialize');
            $eventBus.$emit('onProfileChange', currentProfile.profileName);
        },

        ADD_ACCOUNT({ dispatch, getters }, accountModel: AccountModel) {
            const currentProfile: ProfileModel = getters['currentProfile'];
            if (!currentProfile) {
                return;
            }
            dispatch(
                'diagnostic/ADD_DEBUG',
                'Adding account to profile: ' + currentProfile.profileName + ' with: ' + accountModel.address,
                {
                    root: true,
                },
            );
            if (!currentProfile.accounts.includes(accountModel.id)) {
                new ProfileService().updateAccounts(currentProfile, [...currentProfile.accounts, accountModel.id]);
            }
            return dispatch('SET_CURRENT_PROFILE', currentProfile);
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Statistics.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { RepositoryFactory, StorageInfo } from 'symbol-sdk';
import Vue from 'vue';
// internal dependencies

export default {
    namespaced: true,
    state: {
        countBlocks: 0,
        countTransactions: 0,
        countAccounts: 0,
        countNodes: 0,
    },
    getters: {
        countBlocks: (state) => state.countBlocks,
        countTransactions: (state) => state.countTransactions,
        countAccounts: (state) => state.countAccounts,
        countNodes: (state) => state.countNodes,
    },
    mutations: {
        countBlocks: (state, cnt) => Vue.set(state, 'countBlocks', cnt),
        countTransactions: (state, cnt) => Vue.set(state, 'countTransactions', cnt),
        countAccounts: (state, cnt) => Vue.set(state, 'countAccounts', cnt),
        countNodes: (state, cnt) => Vue.set(state, 'countNodes', cnt),
    },
    actions: {
        async LOAD({ commit, rootGetters }) {
            commit('countTransactions', 0);
            commit('countBlocks', 0);
            commit('countAccounts', 0);
            commit('countNodes', 0);

            const repositoryFactory = rootGetters['network/repositoryFactory'] as RepositoryFactory;
            const nodeHttp = repositoryFactory.createNodeRepository();
            const storageInfoPromise = nodeHttp.getStorageInfo().toPromise();
            const nodePeersPromise = nodeHttp.getNodePeers().toPromise();

            const diagnostic: StorageInfo = await storageInfoPromise;
            const nodes = await nodePeersPromise;

            commit('countTransactions', diagnostic.numTransactions);
            commit('countBlocks', diagnostic.numBlocks);
            commit('countAccounts', diagnostic.numAccounts);
            commit('countNodes', nodes.length);
        },
    },
};

'''
'''--- src/store/Temporary.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Password } from 'symbol-sdk';
import Vue from 'vue';
// internal dependencies
import { AwaitLock } from './AwaitLock';

const Lock = AwaitLock.create();

export default {
    namespaced: true,
    state: {
        initialized: false,
        password: null,
        mnemonic: null,
    },
    getters: {
        getInitialized: (state) => state.initialized,
        password: (state) => state.password,
        mnemonic: (state) => state.mnemonic,
    },
    mutations: {
        setInitialized: (state, initialized) => {
            state.initialized = initialized;
        },
        setPassword: (state, password) => Vue.set(state, 'password', password),
        setMnemonic: (state, mnemonic) => Vue.set(state, 'mnemonic', mnemonic),
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // update store
                commit('setInitialized', true);
            };

            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        async uninitialize({ commit, getters }) {
            const callback = async () => {
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },
        /// region scoped actions
        RESET_STATE({ commit }) {
            commit('setPassword', null);
            commit('setMnemonic', null);
        },
        SET_PASSWORD({ commit }, password) {
            commit('setPassword', new Password(password));
        },
        SET_MNEMONIC({ commit }, mnemonic) {
            commit('setMnemonic', mnemonic);
        },
        /// end-region scoped actions
    },
};

'''
'''--- src/store/Transaction.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
//external dependencies
import {
    Address,
    AggregateTransaction,
    CosignatureSignedTransaction,
    RepositoryFactory,
    Transaction,
    TransactionType,
    PublicAccount,
    AggregateTransactionCosignature,
    TransactionGroup,
    Page,
    TransactionStatus,
    Order,
} from 'symbol-sdk';
import { combineLatest, Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import * as _ from 'lodash';

// internal dependencies
import { AwaitLock } from './AwaitLock';

const Lock = AwaitLock.create();

export enum TransactionGroupState {
    confirmed = 'confirmed',
    unconfirmed = 'unconfirmed',
    partial = 'partial',
    all = 'all',
}

/**
 * Helper to format transaction group in name of state variable.
 *
 * @internal
 * @param {string} group
 * @return {string} One of 'confirmedTransactions', 'unconfirmedTransactions' or
 *   'partialTransactions'
 */
const transactionGroupToStateVariable = (group: TransactionGroupState): string => {
    return group + 'Transactions';
};

const transactionComparator = (t1, t2) => {
    // - unconfirmed/partial sorted by index
    return t1.transactionInfo.index - t2.transactionInfo.index;
};
const confirmedTransactionComparator = (t1, t2) => {
    const info1 = t1.transactionInfo;
    const info2 = t2.transactionInfo;
    // - confirmed sorted by height then index
    const diffHeight = info2.height.compact() - info1.height.compact();
    const diffIndex = info1.index - info2.index;
    return diffHeight !== 0 ? diffHeight : diffIndex;
};

function conditionalSort<T>(array: T[] | undefined, comparator: (a: T, b: T) => number): T[] | undefined {
    if (!array) {
        return array;
    }
    return array.sort(comparator);
}

export interface PageInfo {
    pageNumber: number;
    isLastPage: boolean;
}
interface TransactionState {
    initialized: boolean;
    isFetchingTransactions: boolean;
    confirmedTransactions: Transaction[];
    unconfirmedTransactions: Transaction[];
    partialTransactions: Transaction[];
    displayedTransactionStatus: TransactionGroupState;
    currentConfirmedPage: PageInfo;
}

const transactionState: TransactionState = {
    initialized: false,
    isFetchingTransactions: false,
    confirmedTransactions: [],
    unconfirmedTransactions: [],
    partialTransactions: [],
    displayedTransactionStatus: TransactionGroupState.all,
    currentConfirmedPage: { pageNumber: 1, isLastPage: false },
};
export default {
    namespaced: true,
    state: transactionState,
    getters: {
        getInitialized: (state: TransactionState) => state.initialized,
        isFetchingTransactions: (state: TransactionState) => state.isFetchingTransactions,
        confirmedTransactions: (state: TransactionState) => state.confirmedTransactions,
        unconfirmedTransactions: (state: TransactionState) => state.unconfirmedTransactions,
        partialTransactions: (state: TransactionState) => state.partialTransactions,
        displayedTransactionStatus: (state: TransactionState) => state.displayedTransactionStatus,
        currentConfirmedPage: (state: TransactionState) => state.currentConfirmedPage,
    },
    mutations: {
        setInitialized: (state: TransactionState, initialized: boolean) => {
            state.initialized = initialized;
        },
        isFetchingTransactions: (state: TransactionState, isFetchingTransactions: boolean) => {
            state.isFetchingTransactions = isFetchingTransactions;
        },
        confirmedTransactions: (
            state: TransactionState,
            { transactions, refresh, pageInfo }: { transactions: Transaction[]; refresh: boolean; pageInfo: PageInfo },
        ) => {
            // if it's a refresh request then refresh the list, else concat the new items to the list
            if (refresh) {
                state.confirmedTransactions = conditionalSort(transactions, confirmedTransactionComparator);
            } else {
                state.confirmedTransactions = conditionalSort(
                    state.confirmedTransactions.concat(transactions),
                    confirmedTransactionComparator,
                );
            }
            state.currentConfirmedPage = pageInfo;
        },
        unconfirmedTransactions: (
            state: TransactionState,
            { transactions }: { transactions: Transaction[]; refresh: boolean; pageInfo: PageInfo },
        ) => {
            state.unconfirmedTransactions = conditionalSort(transactions, transactionComparator);
        },
        partialTransactions: (
            state: TransactionState,
            { transactions }: { transactions: Transaction[]; refresh: boolean; pageInfo: PageInfo },
        ) => {
            state.partialTransactions = conditionalSort(transactions, transactionComparator);
        },
        setDisplayedTransactionStatus: (state: TransactionState, displayedTransactionStatus: TransactionGroupState) => {
            state.displayedTransactionStatus = displayedTransactionStatus;
        },
    },
    actions: {
        async initialize({ commit, getters }) {
            const callback = async () => {
                // Placeholder for initialization if necessary.
                commit('setInitialized', true);
            };
            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },

        async uninitialize({ commit, getters, dispatch }) {
            const callback = async () => {
                await dispatch('RESET_TRANSACTIONS');
                commit('setInitialized', false);
            };
            await Lock.uninitialize(callback, { getters });
        },

        LOAD_TRANSACTIONS(
            { commit, rootGetters },
            { group, pageSize, pageNumber }: { group: TransactionGroupState; pageSize: number; pageNumber: number } = {
                group: TransactionGroupState.all,
                pageSize: 20,
                pageNumber: 1,
            },
        ) {
            const currentSignerAddress: Address = rootGetters['account/currentSignerAddress'];
            if (!currentSignerAddress) {
                return;
            }
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const transactionRepository = repositoryFactory.createTransactionRepository();
            const subscribeTransactions = (
                group: TransactionGroupState,
                transactionCall: Observable<Page<Transaction>>,
            ): Observable<Transaction[]> => {
                const attributeName = transactionGroupToStateVariable(group);
                return transactionCall.pipe(
                    map((transactionsPage) => {
                        commit(attributeName, {
                            transactions: transactionsPage.data || [],
                            refresh: transactionsPage.pageNumber === 1,
                            pageInfo: {
                                pageNumber: transactionsPage.pageNumber,
                                isLastPage: transactionsPage.isLastPage,
                            },
                        });
                        return transactionsPage.data;
                    }),
                );
            };

            const subscriptions: Observable<Transaction[]>[] = [];
            commit('isFetchingTransactions', true);

            if (group == undefined || group === TransactionGroupState.all || group === TransactionGroupState.confirmed) {
                subscriptions.push(
                    subscribeTransactions(
                        TransactionGroupState.confirmed,
                        transactionRepository.search({
                            group: TransactionGroup.Confirmed,
                            address: currentSignerAddress,
                            pageSize,
                            pageNumber,
                            order: Order.Desc,
                        }),
                    ),
                );
            }

            // all of the unconfirmed+partial transactions goes in the first page and they are not subject to pagination
            if (pageNumber === 1) {
                if (group == undefined || group === TransactionGroupState.all || group === TransactionGroupState.unconfirmed) {
                    subscriptions.push(
                        subscribeTransactions(
                            TransactionGroupState.unconfirmed,
                            transactionRepository.search({
                                group: TransactionGroup.Unconfirmed,
                                address: currentSignerAddress,
                                pageSize: 100,
                                pageNumber: 1, // not paginating
                                order: Order.Desc,
                            }),
                        ),
                    );
                }

                if (group == undefined || group === TransactionGroupState.all || group === TransactionGroupState.partial) {
                    subscriptions.push(
                        subscribeTransactions(
                            TransactionGroupState.partial,
                            transactionRepository.search({
                                group: TransactionGroup.Partial,
                                address: currentSignerAddress,
                                pageSize: 100,
                                pageNumber: 1, // not paginating
                                order: Order.Desc,
                            }),
                        ),
                    );
                }
            }

            combineLatest(subscriptions).subscribe({
                complete: () => commit('isFetchingTransactions', false),
            });
        },

        LOAD_TRANSACTION_DETAILS(
            { rootGetters },
            { group, transactionHash }: { group: TransactionGroupState; transactionHash: string },
        ): Promise<Transaction | AggregateTransaction> {
            if (!group) {
                throw Error("Missing mandatory field 'group' for action transaction/LOAD_TRANSACTION_DETAILS.");
            }

            if (!transactionHash) {
                throw Error("Missing mandatory field 'transactionHash' for action transaction/LOAD_TRANSACTION_DETAILS.");
            }

            // prepare
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const transactionRepository = repositoryFactory.createTransactionRepository();

            let sdkGroup = TransactionGroup.Confirmed;
            if (![TransactionGroupState.all, TransactionGroupState.confirmed].includes(group)) {
                sdkGroup = group === TransactionGroupState.partial ? TransactionGroup.Partial : TransactionGroup.Unconfirmed;
            }

            // fetch transaction details
            return transactionRepository.getTransaction(transactionHash, sdkGroup).toPromise();
        },

        FETCH_TRANSACTION_STATUS(
            { rootGetters },
            { transactionHash }: { transactionHash: string },
        ): Promise<Transaction | TransactionStatus> {
            if (!transactionHash) {
                throw Error("Missing mandatory field 'transactionHash' for action transaction/FETCH_TRANSACTION_STATUS.");
            }

            // prepare
            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];
            const transactionStatusRepository = repositoryFactory.createTransactionStatusRepository();

            // fetch transaction status
            return transactionStatusRepository.getTransactionStatus(transactionHash).toPromise();
        },

        SIGNER_CHANGED({ dispatch }) {
            dispatch('LOAD_TRANSACTIONS');
        },

        RESET_TRANSACTIONS({ commit }) {
            Object.keys(TransactionGroupState).forEach((group: TransactionGroupState) => {
                if (group !== TransactionGroupState.all) {
                    commit(transactionGroupToStateVariable(group), {
                        transactions: [],
                        pageInfo: { pageNumber: 1, isLastPage: false },
                    });
                }
            });
        },

        ADD_TRANSACTION({ commit, getters }, { group, transaction }: { group: TransactionGroupState; transaction: Transaction }) {
            if (!group) {
                throw Error("Missing mandatory field 'group' for action transaction/ADD_TRANSACTION.");
            }

            if (!transaction) {
                throw Error("Missing mandatory field 'transaction' for action transaction/ADD_TRANSACTION.");
            }
            // format transactionAttribute to store variable name
            const transactionAttribute = transactionGroupToStateVariable(group);

            // register transaction
            const transactions = getters[transactionAttribute] || [];
            if (!transactions.find((t) => t.transactionInfo.hash === transaction.transactionInfo.hash)) {
                // update state
                commit(transactionAttribute, {
                    transactions: [transaction, ...transactions],
                    refresh: true,
                    pageInfo: getters['currentConfirmedPage'],
                });
            }
        },

        REMOVE_TRANSACTION({ commit, getters }, { group, transactionHash }: { group: TransactionGroupState; transactionHash: string }) {
            if (!group) {
                throw Error("Missing mandatory field 'group' for action transaction/REMOVE_TRANSACTION.");
            }

            if (!transactionHash) {
                throw Error("Missing mandatory field 'transactionHash' for action transaction/REMOVE_TRANSACTION.");
            }
            // format transactionAttribute to store variable name
            const transactionAttribute = transactionGroupToStateVariable(group);

            // register transaction
            const transactions = getters[transactionAttribute] || [];
            commit(transactionAttribute, {
                transactions: transactions.filter((t) => t.transactionInfo.hash !== transactionHash),
                refresh: true,
                pageInfo: getters['currentConfirmedPage'],
            });
        },

        async ON_NEW_TRANSACTION({ dispatch }, transaction: Transaction) {
            if (!transaction) {
                return;
            }

            // extract transaction types from the transaction
            const transactionTypes: TransactionType[] = _.uniq(
                transaction instanceof AggregateTransaction ? transaction.innerTransactions.map(({ type }) => type) : [transaction.type],
            );

            // add actions to the dispatcher according to the transaction types
            if (
                [TransactionType.NAMESPACE_REGISTRATION, TransactionType.MOSAIC_ALIAS, TransactionType.ADDRESS_ALIAS].some((a) =>
                    transactionTypes.some((b) => b === a),
                )
            ) {
                dispatch('namespace/LOAD_NAMESPACES', {}, { root: true });
            }
            // Reloading Balances
            await dispatch('account/LOAD_ACCOUNT_INFO', {}, { root: true });
            dispatch('mosaic/LOAD_MOSAICS', {}, { root: true });
        },
        /// end-region scoped actions

        ADD_COSIGNATURE({ commit, getters, rootGetters }, transaction: CosignatureSignedTransaction) {
            if (!transaction || !transaction.parentHash) {
                throw Error("Missing mandatory field 'parentHash' for action transaction/ADD_COSIGNATURE.");
            }
            const transactionAttribute = transactionGroupToStateVariable(TransactionGroupState.partial);
            const transactions: AggregateTransaction[] = getters[transactionAttribute] || [];

            // return if no transactions
            if (!transactions.length) {
                return;
            }

            const index = transactions.findIndex((t) => t.transactionInfo.hash === transaction.parentHash);

            // partial tx unknown, @TODO: handle this case (fetch partials)
            if (index === -1) {
                return;
            }

            // convert CosignatureSignedTransaction to AggregateTransactionCosignature
            const generationHash = rootGetters['network/generationHash'];
            const cosigner = PublicAccount.createFromPublicKey(transaction.signerPublicKey, generationHash);
            const cosignature = new AggregateTransactionCosignature(transaction.signature, cosigner);

            // update the partial transaction cosignatures
            transactions[index] = transactions[index].addCosignatures([cosignature]);
            commit('partialTransactions', transactions);
        },
    },
};

'''
'''--- src/store/index.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import Vuex from 'vuex';
import AppInfoStore from '@/store/AppInfo';
import DatabaseStore from '@/store/Database';
import NetworkStore from '@/store/Network';
import ProfileStore from '@/store/Profile';
import AccountStore from '@/store/Account';
import DiagnosticStore from '@/store/Diagnostic';
import NotificationStore from '@/store/Notification';
import TemporaryStore from '@/store/Temporary';
import MosaicStore from '@/store/Mosaic';
import BlockStore from '@/store/Block';
import NamespaceStore from '@/store/Namespace';
import TransactionStore from '@/store/Transaction';
import StatisticsStore from '@/store/Statistics';
import CommunityStore from '@/store/Community';
import { onPeerConnection } from '@/store/plugins/onPeerConnection';
// use AwaitLock for initialization routines
import { AwaitLock } from '@/store/AwaitLock';

const Lock = AwaitLock.create();

Vue.use(Vuex);

/**
 * Application Store
 *
 * This store initializes peer connection
 */
const AppStore = new Vuex.Store({
    strict: false,
    modules: {
        app: AppInfoStore,
        db: DatabaseStore,
        network: NetworkStore,
        profile: ProfileStore,
        account: AccountStore,
        diagnostic: DiagnosticStore,
        notification: NotificationStore,
        temporary: TemporaryStore,
        mosaic: MosaicStore,
        namespace: NamespaceStore,
        transaction: TransactionStore,
        statistics: StatisticsStore,
        community: CommunityStore,
        block: BlockStore,
    },
    plugins: [onPeerConnection],
    actions: {
        async initialize({ dispatch, getters }) {
            const callback = async () => {
                await dispatch('app/initialize');
                await dispatch('db/initialize');
                await dispatch('diagnostic/initialize');
                await dispatch('notification/initialize');
                // Network init must happen before Mosaic init because network currency Ids
                // are supplied to MosaicService from the network configuration
                await dispatch('network/initialize');
                await dispatch('mosaic/initialize');
                await dispatch('namespace/initialize');
                await dispatch('transaction/initialize');
            };

            // aquire async lock until initialized
            await Lock.initialize(callback, { getters });
        },
        // Uninitialize the stores (call on app destroyed).
        async uninitialize({ dispatch }) {
            await Promise.all([
                dispatch('app/uninitialize'),
                dispatch('network/uninitialize'),
                dispatch('mosaic/uninitialize'),
                dispatch('transaction/uninitialize'),
                dispatch('profile/uninitialize'),
                dispatch('account/uninitialize'),
                dispatch('namespace/uninitialize'),
                dispatch('notification/uninitialize'),
                dispatch('temporary/uninitialize'),
                dispatch('diagnostic/uninitialize'),
            ]);
        },
    },
});

export default AppStore;

'''
'''--- src/store/plugins/onPeerConnection.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
export const onPeerConnection = (store) => {
    store.subscribe((mutation) => {
        if (mutation.type === 'network/currentPeerInfo') {
            // - Done connection to new node
            // const nodeUrl = store.getters['network/currentPeer'].url
            // store.dispatch('statistics/initialize', nodeUrl)
        }
    });
};

'''
'''--- src/views/forms/FormAccountKeyLinkTransaction/FormAccountKeyLinkTransactionTs.ts ---
/**
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Deadline, UInt64, LinkAction, AccountKeyLinkTransaction } from 'symbol-sdk';
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { Formatters } from '@/core/utils/Formatters';
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';

// child components
import { ValidationObserver } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

const defaultFormItems = {
    signerAddress: '',
    linkAction: LinkAction.Link,
    maxFee: 0,
};

@Component({
    components: {
        FormWrapper,
        FormRow,
        ValidationObserver,
        MaxFeeAndSubmit,
    },
    computed: mapGetters({
        currentAccountAccountInfo: 'account/currentAccountAccountInfo',
        currentPeer: 'network/currentPeer',
    }),
})
export class FormAccountKeyLinkTransactionTs extends FormTransactionBase {
    @Prop({ required: true }) remoteAccountPublicKey: string;

    /**
     * Formatters helpers
     */
    public formatters = Formatters;

    /**
     * Form items
     */
    public formItems = { ...defaultFormItems };

    /**
     * Reset the form with properties
     */
    protected resetForm() {
        this.formItems = {
            ...defaultFormItems,
            signerAddress: this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address,
        };
    }

    /**
     * Getter for transactions that will be staged
     * @see {FormTransactionBase}
     * @return {AccountKeyLinkTransaction[]}
     */
    protected getTransactions(): AccountKeyLinkTransaction[] {
        const maxFee = UInt64.fromUint(this.formItems.maxFee);
        return [
            AccountKeyLinkTransaction.create(
                Deadline.create(),
                this.remoteAccountPublicKey,
                this.formItems.linkAction,
                this.networkType,
                maxFee,
            ),
        ];
    }

    /**
     * Setter for Alias transactions that will be staged
     * @see {FormTransactionBase}
     * @param {AliasTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: AccountKeyLinkTransaction[]) {
        // - this form creates only 1 transaction
        const transaction = transactions.shift();
        if (!transaction) {
            return;
        }

        // - populate for items if transaction is an address alias
        if (transaction instanceof AccountKeyLinkTransaction) {
            this.remoteAccountPublicKey = transaction.linkedPublicKey;
            this.formItems.linkAction = transaction.linkAction;
        }

        // - populate maxFee
        this.formItems.maxFee = transaction.maxFee.compact();
    }

    /**
     * Hook called when the component is mounted
     */
    public async created() {
        this.$emit('toggleNext', false);
    }
}

'''
'''--- src/views/forms/FormAccountNameUpdate/FormAccountNameUpdateTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NetworkType } from 'symbol-sdk';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { NotificationType } from '@/core/utils/NotificationType';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
        ModalFormProfileUnlock,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class FormAccountNameUpdateTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Currently active network type
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Whether account is currently being unlocked
     * @var {boolean}
     */
    public isUnlockingAccount: boolean = false;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        name: '',
    };

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    /// region computed properties getter/setter
    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action asks for account unlock
     * @return {void}
     */
    public onSubmit() {
        this.hasAccountUnlockModal = true;

        // resets form validation
        this.$nextTick(() => {
            this.$refs.observer.reset();
        });
    }

    /**
     * When account is unlocked, the sub account can be created
     */
    public async onAccountUnlocked() {
        try {
            await this.$store.dispatch('account/UPDATE_CURRENT_ACCOUNT_NAME', this.formItems.name);
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
            this.$emit('submit', this.formItems);
        } catch (e) {
            this.$store.dispatch('notification/ADD_ERROR', 'An error happened, please try again.');
            console.error(e);
        }
    }
    /**
     * filter tags
     */
    public stripTagsAccountName() {
        this.formItems.name = FilterHelpers.stripFilter(this.formItems.name);
    }
}

'''
'''--- src/views/forms/FormAliasTransaction/FormAliasTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    Address,
    AddressAliasTransaction,
    AliasAction,
    AliasTransaction,
    AliasType,
    Deadline,
    MosaicAliasTransaction,
    MosaicId,
    NamespaceId,
    UInt64,
} from 'symbol-sdk';
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { FormTransactionBase } from '../FormTransactionBase/FormTransactionBase';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import NamespaceSelector from '@/components/NamespaceSelector/NamespaceSelector.vue';
// @ts-ignore
import MosaicSelector from '@/components/MosaicSelector/MosaicSelector.vue';
// @ts-ignore
import AddressInput from '@/components/AddressInput/AddressInput.vue';
// @ts-ignore
import MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';

@Component({
    components: {
        ValidationProvider,
        ValidationObserver,
        FormWrapper,
        FormRow,
        ErrorTooltip,
        NamespaceSelector,
        MosaicSelector,
        AddressInput,
        MaxFeeSelector,
        ModalTransactionConfirmation,
        MaxFeeAndSubmit,
        SignerSelector,
    },
    computed: {
        ...mapGetters({
            namespaces: 'namespace/ownedNamespaces',
            mosaics: 'mosaic/ownedMosaics',
            currentHeight: 'network/currentHeight',
        }),
    },
})
export class FormAliasTransactionTs extends FormTransactionBase {
    @Prop({ default: null }) namespaceId: NamespaceId;
    @Prop({ default: null }) aliasTarget: MosaicId | Address;
    @Prop({ default: null, required: true }) aliasAction: AliasAction;
    @Prop({ default: false }) hideSubmit: boolean;
    /**
     * Type of assets shown in the form alias
     * @type {string}
     */
    @Prop({ default: 'namespace' }) assetType: string;
    /**
     * Alias action
     * @protected
     */
    protected AliasAction = AliasAction;

    /**
     * Validation rules
     */
    protected validationRules = ValidationRuleset;

    /**
     * Form items
     */
    protected formItems = {
        namespaceFullName: null,
        aliasTarget: null,
        aliasAction: null,
        maxFee: 0,
        signerAddress: '',
    };

    /**
     * Alias target type
     * @protected
     * @type {('mosaic' | 'address')}
     */
    protected aliasTargetType: 'mosaic' | 'address' = this.aliasTarget instanceof Address ? 'address' : 'mosaic';

    /**
     * Current account owned namespaces
     * @private
     */
    private namespaces: NamespaceModel[];

    /**
     * Current account owned mosaics
     * @private
     */
    private mosaics: MosaicModel[];

    /**
     * Current network height
     * @private
     * @type {number}
     */
    private currentHeight: number;

    /**
     * Current account namespace hex Ids that can be linked
     * @readonly
     * @protected
     * @type {string []}
     */
    protected get linkableNamespaces(): NamespaceModel[] {
        return this.namespaces.filter(({ aliasType }) => aliasType === AliasType.None);
    }

    /**
     * Current account mosaics hex Ids that can be linked
     * @readonly
     * @protected
     */
    protected get linkableMosaics(): string[] {
        return this.mosaics
            .filter((mosaicInfo) => {
                // no mosaics with names
                const mosaicName = mosaicInfo.name;
                if (mosaicName && mosaicName.length) {
                    return false;
                }

                // mosaics must not be expired
                if (mosaicInfo.duration == 0) {
                    return true;
                }
                return mosaicInfo.height + mosaicInfo.duration > this.currentHeight;
            })
            .map(({ mosaicIdHex }) => mosaicIdHex);
    }

    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - re-populate form if transaction staged
        // if (this.stagedTransactions.length) {
        //   const transaction = this.stagedTransactions.find(
        //     staged => staged.type === TransactionType.MOSAIC_ALIAS || staged.type ===
        // TransactionType.ADDRESS_ALIAS, ) this.setTransactions([transaction as AliasTransaction])
        // this.isAwaitingSignature = true return }

        this.formItems.signerAddress = this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address;

        /**
         * Helper function to get the alias target as a string
         * @param {(MosaicId | Address)} aliasTarget
         * @returns {string}
         */
        const getAliasTarget = (aliasTarget: MosaicId | Address): string => {
            if (!aliasTarget) {
                return null;
            }
            if (aliasTarget instanceof Address) {
                return aliasTarget.plain();
            }
            return aliasTarget.id.toHex();
        };

        // - set default form values
        this.formItems.namespaceFullName = this.namespaceId ? this.namespaceId.fullName : null;
        this.formItems.aliasTarget = getAliasTarget(this.aliasTarget);
        this.formItems.aliasAction = this.aliasAction;

        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /**
     * Getter for ALIAS transactions that will be staged
     * @see {FormTransactionBase}
     * @return {AliasTransaction[]}
     */
    protected getTransactions(): AliasTransaction[] {
        const namespaceId = new NamespaceId(this.formItems.namespaceFullName);
        const maxFee = UInt64.fromUint(this.formItems.maxFee);
        if (this.aliasTargetType === 'address') {
            return [
                AddressAliasTransaction.create(
                    Deadline.create(),
                    this.formItems.aliasAction,
                    namespaceId,
                    Address.createFromRawAddress(this.formItems.aliasTarget),
                    this.networkType,
                    maxFee,
                ),
            ];
        } else {
            return [
                MosaicAliasTransaction.create(
                    Deadline.create(),
                    this.formItems.aliasAction,
                    namespaceId,
                    new MosaicId(this.formItems.aliasTarget),
                    this.networkType,
                    maxFee,
                ),
            ];
        }
    }

    /**
     * Setter for Alias transactions that will be staged
     * @see {FormTransactionBase}
     * @param {AliasTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: AliasTransaction[]) {
        // - this form creates only 1 transaction
        const transaction = transactions.shift();
        if (!transaction) {
            return;
        }

        // - populate for items if transaction is an address alias
        if (transaction instanceof AddressAliasTransaction) {
            this.formItems.namespaceFullName = transaction.namespaceId.fullName;
            this.formItems.aliasTarget = transaction.address.plain();
            this.formItems.aliasAction = transaction.aliasAction;
        }

        // - populate for items if transaction is an mosaic alias
        if (transaction instanceof MosaicAliasTransaction) {
            this.formItems.namespaceFullName = transaction.namespaceId.fullName;
            this.formItems.aliasTarget = transaction.namespaceId.toHex();
            this.formItems.aliasAction = transaction.aliasAction;
        }

        // - populate maxFee
        this.formItems.maxFee = transaction.maxFee.compact();
    }
}

'''
'''--- src/views/forms/FormCreatePrivateKeyWallet/FormCreatePrivateKeyWalletTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { NotificationType } from '@/core/utils/NotificationType';
import { ProfileService } from '@/services/ProfileService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

/// end-region custom types

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
    },
    computed: {
        ...mapGetters({
            generationHash: 'network/generationHash',
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class FormCreatePrivateKeyWalletTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Currently active network type
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Accounts repository
     * @var {ProfileService}
     */
    public accountService = new ProfileService();

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        profileName: '',
        password: '',
        passwordAgain: '',
        hint: '',
        networkType: this.$store.getters['network/networkType'],
    };

    /**
     * Network types
     * @var {NetworkNodeEntry[]}
     */
    public networkTypeList = NetworkTypeHelper.networkTypeList;

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    /// region computed properties getter/setter
    get nextPage() {
        return this.$route.meta.nextPage;
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action, validates form and creates account in storage
     * @return {void}
     */
    public submit() {
        // @VEE
        this.persistAccountAndContinue();
        this.resetValidations();
    }

    /**
     *  resets form validation
     */

    public resetValidations(): void {
        this.$refs && this.$refs.observer && this.$refs.observer.reset();
    }

    /**
     * Persist created account and redirect to next step
     * @return {void}
     */
    private persistAccountAndContinue() {
        const passwordHash = this.formItems.password;
        const account: ProfileModel = {
            profileName: this.formItems.profileName,
            accounts: [],
            seed: '',
            password: passwordHash,
            hint: this.formItems.hint,
            networkType: this.formItems.networkType,
            generationHash: this.generationHash,
        };
        // use repository for storage
        this.accountService.saveProfile(account);

        // execute store actions
        this.$store.dispatch('profile/SET_CURRENT_PROFILE', account);
        this.$store.dispatch('temporary/SET_PASSWORD', this.formItems.password);
        this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);

        // flush and continue
        this.$router.push({ name: this.nextPage });
    }

    /**
     * filter tags
     */
    public stripTagsProfile() {
        this.formItems.profileName = FilterHelpers.stripFilter(this.formItems.profileName);
        this.formItems.hint = FilterHelpers.stripFilter(this.formItems.hint);
    }
}

'''
'''--- src/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { FormNamespaceRegistrationTransactionTs } from '../FormNamespaceRegistrationTransaction/FormNamespaceRegistrationTransactionTs';
import { NamespaceId } from 'symbol-sdk';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// configuration
// child components
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import RentalFee from '@/components/RentalFees/RentalFee.vue';
import { NamespaceService } from '@/services/NamespaceService';
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';

@Component({
    components: { ErrorTooltip, ModalTransactionConfirmation, RentalFee },
    computed: {
        ...mapGetters({
            namespaces: 'namespace/namespaces',
        }),
    },
})
export class FormExtendNamespaceDurationTransactionTs extends FormNamespaceRegistrationTransactionTs {
    @Prop({ default: null, required: true }) namespaceId: NamespaceId;

    private namespaces: NamespaceModel[];
    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;
    /**
     * Current namespace info
     * @readonly
     * @private
     * @type {NamespaceInfo}
     */
    protected get currentNamespaceEndHeight(): number {
        const currentNamespace = this.namespaces.find((model) => model.namespaceIdHex === this.namespaceId.toHex());
        return (currentNamespace && currentNamespace.endHeight) || 0;
    }

    /**
     * View of the namespace current expiration information
     * @readonly
     * @type {string}
     */
    protected get currentExpirationInfoView(): {
        expired: boolean;
        expiration: string;
    } {
        return this.getExpirationInfoFromEndHeight(this.currentNamespaceEndHeight);
    }

    /**
     * Namespace new expiration height
     * @readonly
     * @protected
     * @type {number}
     */
    protected get newEndHeight(): number {
        const currentExpirationHeight = this.currentNamespaceEndHeight;
        const newExpiration = Number(this.formItems.duration) + currentExpirationHeight;
        return isNaN(newExpiration) ? currentExpirationHeight : newExpiration;
    }

    /**
     * New namespace duration
     * @readonly
     * @protected
     * @type {number}
     */
    protected get newDuration(): number {
        return (
            this.newEndHeight -
            this.currentHeight -
            Math.floor(this.networkConfiguration.namespaceGracePeriodDuration / this.networkConfiguration.blockGenerationTargetTime)
        );
    }

    /**
     * View of the new current expiration information
     * @readonly
     * @type {string}
     */
    protected get newExpirationInfoView(): string {
        return this.getExpirationInfoFromEndHeight(this.newEndHeight).expiration;
    }

    /**
     * Returns a view of a namespace expiration info
     * @private
     * @param {NamespaceInfo} mosaicInfo
     * @returns {string}
     */
    private getExpirationInfoFromEndHeight(endHeight: number): { expiration: string; expired: boolean } {
        return NamespaceService.getExpiration(this.networkConfiguration, this.currentHeight, endHeight);
    }

    async mounted() {
        this.$store.dispatch('network/REST_NETWORK_RENTAL_FEES');
    }
}

'''
'''--- src/views/forms/FormGeneralSettings/FormGeneralSettingsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { NotificationType } from '@/core/utils/NotificationType';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ExplorerUrlSetter from '@/components/ExplorerUrlSetter/ExplorerUrlSetter.vue';
// @ts-ignore
import LanguageSelector from '@/components/LanguageSelector/LanguageSelector.vue';
// @ts-ignore
import MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';
// @ts-ignore
import AccountSelectorField from '@/components/AccountSelectorField/AccountSelectorField.vue';
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
// @ts-ignore
import FormLabel from '@/components/FormLabel/FormLabel.vue';
import { SettingsModel } from '@/core/database/entities/SettingsModel';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { networkConfig } from '@/config';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
        ExplorerUrlSetter,
        LanguageSelector,
        MaxFeeSelector,
        AccountSelectorField,
        ModalFormProfileUnlock,
        FormLabel,
    },
    computed: {
        ...mapGetters({
            settings: 'app/settings',
            knownAccounts: 'account/knownAccounts',
        }),
    },
})
export class FormGeneralSettingsTs extends Vue {
    /**
     * The current stored settings.
     */
    public settings: SettingsModel;

    /**
     * Known accounts identifiers
     * @var {string[]}
     */
    public knownAccounts: AccountModel[];

    /**
     * Whether account is currently being unlocked
     * @var {boolean}
     */
    public isUnlockingAccount: boolean = false;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        defaultFee: 0,
        language: '',
        explorerUrl: '',
        defaultAccount: '',
    };

    public created() {
        this.resetForm();
    }

    public resetForm() {
        this.formItems = { ...this.settings };
        this.formItems.explorerUrl = networkConfig.explorerUrl;
        if (!this.settings.defaultAccount && this.knownAccounts.length) {
            this.formItems.defaultAccount = this.knownAccounts[0].id;
        }
    }

    /// region computed properties getter/setter
    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action asks for account unlock
     * @return {void}
     */
    public onSubmit() {
        this.hasAccountUnlockModal = true;
    }

    /**
     * When account is unlocked, the sub account can be created
     */
    public async onAccountUnlocked() {
        try {
            await this.$store.dispatch('app/SET_SETTINGS', this.formItems);
            // - add notification and emit
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.SUCCESS_SETTINGS_UPDATED);
            this.$emit('submit', this.formItems);
        } catch (e) {
            this.$store.dispatch('notification/ADD_ERROR', 'An error happened, please try again.');
            console.error(e);
        }
    }
}

'''
'''--- src/views/forms/FormMosaicDefinitionTransaction/FormMosaicDefinitionTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import {
    Deadline,
    MosaicDefinitionTransaction,
    MosaicFlags,
    MosaicId,
    MosaicNonce,
    MosaicSupplyChangeAction,
    MosaicSupplyChangeTransaction,
    Transaction,
    UInt64,
} from 'symbol-sdk';
import { Component } from 'vue-property-decorator';
// internal dependencies
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import SupplyInput from '@/components/SupplyInput/SupplyInput.vue';
// @ts-ignore
import DivisibilityInput from '@/components/DivisibilityInput/DivisibilityInput.vue';
// @ts-ignore
import DurationInput from '@/components/DurationInput/DurationInput.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
//@ts-ignore
import RentalFee from '@/components/RentalFees/RentalFee.vue';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        FormWrapper,
        SignerSelector,
        SupplyInput,
        DivisibilityInput,
        DurationInput,
        ModalTransactionConfirmation,
        MaxFeeAndSubmit,
        FormRow,
        RentalFee,
    },
})
export class FormMosaicDefinitionTransactionTs extends FormTransactionBase {
    /**
     * Form items
     * @var {Record<string, any>}
     */
    public formItems = {
        signerAddress: '',
        supply: 500000000,
        divisibility: 0,
        supplyMutable: true,
        transferable: true,
        restrictable: true,
        permanent: true,
        duration: 10000,
        maxFee: 0,
    };

    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - re-populate form if transaction staged
        // if (this.stagedTransactions.length) {
        //   const definition = this.stagedTransactions.find(staged => staged.type === TransactionType.MOSAIC_DEFINITION)
        //   const supply = this.stagedTransactions.find(staged => staged.type === TransactionType.MOSAIC_SUPPLY_CHANGE)
        //   if (definition === undefined || supply === undefined) return
        //   this.setTransactions([
        //     definition as MosaicDefinitionTransaction,
        //     supply as MosaicSupplyChangeTransaction
        //   ])
        //   this.isAwaitingSignature = true
        //   return ;
        // }

        // - set default form values
        this.formItems.signerAddress = this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address;
        this.formItems.supplyMutable = false;
        this.formItems.restrictable = false;
        this.formItems.permanent = false;
        this.formItems.duration = 10000;

        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /// region computed properties getter/setter
    /**
     * Getter for MOSAIC DEFINITION and SUPPLY CHANGE transactions that will be staged
     * @see {FormTransactionBase}
     * @return {TransferTransaction[]}
     */
    protected getTransactions(): Transaction[] {
        const maxFee = UInt64.fromUint(this.formItems.maxFee);
        //const publicAccount = PublicAccount.createFromPublicKey(this.selectedSigner.publicKey, this.networkType)
        const randomNonce = MosaicNonce.createRandom();
        // - read form for definition
        const mosaicId = MosaicId.createFromNonce(randomNonce, this.selectedSigner.address);
        // the duration must be 0 when the permanent value of true
        if (this.formItems.permanent) {
            this.formItems.duration = 0;
        }
        const mosaicDefinitionTransaction = MosaicDefinitionTransaction.create(
            Deadline.create(),
            randomNonce,
            mosaicId,
            MosaicFlags.create(this.formItems.supplyMutable, this.formItems.transferable, this.formItems.restrictable),
            this.formItems.divisibility,
            UInt64.fromUint(this.formItems.duration),
            this.networkType,
            maxFee,
        );
        const mosaicSupplyChangeTransaction = MosaicSupplyChangeTransaction.create(
            Deadline.create(),
            mosaicId,
            MosaicSupplyChangeAction.Increase,
            UInt64.fromUint(this.formItems.supply),
            this.networkType,
            maxFee,
        );
        return [mosaicDefinitionTransaction, mosaicSupplyChangeTransaction];
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @param {TransferTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: Transaction[]) {
        // - this form creates 2 transaction
        const definition = transactions.shift() as MosaicDefinitionTransaction;
        const supplyChange = transactions.shift() as MosaicSupplyChangeTransaction;

        // - populate from definition
        this.formItems.divisibility = definition.divisibility;
        this.formItems.supplyMutable = definition.flags.supplyMutable;
        this.formItems.transferable = definition.flags.transferable;
        this.formItems.restrictable = definition.flags.restrictable;
        this.formItems.permanent = definition.duration.compact() === 0;
        this.formItems.duration = definition.duration.compact();

        // - populate from supply change
        this.formItems.supply = supplyChange.delta.compact();

        // - populate maxFee
        this.formItems.maxFee = definition.maxFee.compact();
    }
}

'''
'''--- src/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Deadline, MosaicId, MosaicSupplyChangeAction, MosaicSupplyChangeTransaction, Transaction, UInt64 } from 'symbol-sdk';
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import SupplyInput from '@/components/SupplyInput/SupplyInput.vue';
// @ts-ignore
import DivisibilityInput from '@/components/DivisibilityInput/DivisibilityInput.vue';
// @ts-ignore
import DurationInput from '@/components/DurationInput/DurationInput.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        FormWrapper,
        SignerSelector,
        SupplyInput,
        DivisibilityInput,
        DurationInput,
        ModalTransactionConfirmation,
        FormRow,
        ErrorTooltip,
        MaxFeeAndSubmit,
    },
    computed: { ...mapGetters({ mosaics: 'mosaic/mosaics' }) },
})
export class FormMosaicSupplyChangeTransactionTs extends FormTransactionBase {
    /**
     * Mosaic hex Id
     * @type {string}
     */
    @Prop({ default: null, required: true }) mosaicHexId: string;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    protected validationRules = ValidationRuleset;

    /**
     * Mosaic supply change enum
     * @protected
     */
    protected MosaicSupplyChangeAction = MosaicSupplyChangeAction;

    /**
     * Form items
     * @protected
     * @var {Record<string, any>}
     */
    protected formItems = {
        mosaicHexId: null,
        action: null,
        delta: null,
        maxFee: this.defaultFee,
    };

    /**
     * Mosaics owned by the current account
     * @protected
     */
    private mosaics: MosaicModel[];

    /**
     * Current mosaic info
     * @readonly
     * @protected
     */
    protected get currentMosaicInfo(): MosaicModel {
        return this.mosaics.find(({ mosaicIdHex }) => mosaicIdHex === this.formItems.mosaicHexId);
    }

    /**
     * Current mosaic relative supply
     * @readonly
     * @protected
     * @type {number}
     */
    protected get currentMosaicRelativeSupply(): string | null {
        const currentMosaicInfo = this.currentMosaicInfo;
        if (!currentMosaicInfo) {
            return null;
        }
        const relative = currentMosaicInfo.supply / Math.pow(10, currentMosaicInfo.divisibility);
        return isNaN(relative) ? null : relative.toLocaleString();
    }

    /**
     * New absolute supply
     * @readonly
     * @protected
     * @type {(number | null)}
     */
    protected get newMosaicAbsoluteSupply(): number | null {
        const currentMosaicInfo = this.currentMosaicInfo;
        if (currentMosaicInfo === undefined) {
            return null;
        }
        const newSupply =
            this.formItems.action === MosaicSupplyChangeAction.Increase
                ? currentMosaicInfo.supply + Number(this.formItems.delta)
                : currentMosaicInfo.supply - Number(this.formItems.delta);

        return isNaN(newSupply) ? null : newSupply;
    }

    /**
     * New relative supply
     * @readonly
     * @protected
     * @type {(number | null)}
     */
    protected get newMosaicRelativeSupply(): string | null {
        if (!this.newMosaicAbsoluteSupply) {
            return null;
        }
        const relative = this.newMosaicAbsoluteSupply / Math.pow(10, this.currentMosaicInfo.divisibility);
        return isNaN(relative) ? null : relative.toLocaleString();
    }

    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - re-populate form if transaction staged
        // if (this.stagedTransactions.length) {
        //   // @TODO: initialization from staged transactions
        //   this.isAwaitingSignature = true
        //   return
        // }

        // - set default form values
        this.formItems.mosaicHexId = this.mosaicHexId;
        this.formItems.action = MosaicSupplyChangeAction.Increase;
        this.formItems.delta = 1;

        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /**
     * Getter for SUPPLY CHANGE transactions that will be staged
     * @see {FormTransactionBase}
     * @return {Transaction[]}
     */
    protected getTransactions(): Transaction[] {
        return [
            MosaicSupplyChangeTransaction.create(
                Deadline.create(),
                new MosaicId(this.formItems.mosaicHexId),
                this.formItems.action,
                UInt64.fromUint(this.formItems.delta),
                this.networkType,
                UInt64.fromUint(this.formItems.maxFee),
            ),
        ];
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @param {TransferTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: Transaction[]) {
        // - this form creates 1 transaction
        const supplyChange = transactions.shift() as MosaicSupplyChangeTransaction;

        // - populate from definition
        this.formItems.mosaicHexId = supplyChange.mosaicId.toHex();
        this.formItems.action = supplyChange.action;
        this.formItems.delta = supplyChange.delta.compact();

        // - populate maxFee
        this.formItems.maxFee = supplyChange.maxFee.compact();
    }
}

'''
'''--- src/views/forms/FormMultisigAccountModificationTransaction/FormMultisigAccountModificationTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Deadline, MultisigAccountInfo, MultisigAccountModificationTransaction, UInt64, Address } from 'symbol-sdk';
import { Component, Prop, Vue } from 'vue-property-decorator';
// internal dependencies
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import AddCosignatoryInput from '@/components/AddCosignatoryInput/AddCosignatoryInput.vue';
// @ts-ignore
import RemoveCosignatoryInput from '@/components/RemoveCosignatoryInput/RemoveCosignatoryInput.vue';
// @ts-ignore
import CosignatoryModificationsDisplay from '@/components/CosignatoryModificationsDisplay/CosignatoryModificationsDisplay.vue';
// @ts-ignore
import ApprovalAndRemovalInput from '@/components/ApprovalAndRemovalInput/ApprovalAndRemovalInput.vue';
// @ts-ignore
import MultisigCosignatoriesDisplay from '@/components/MultisigCosignatoriesDisplay/MultisigCosignatoriesDisplay.vue';
import { TransactionCommand } from '@/services/TransactionCommand';

/// region custom types
export interface CosignatoryModification {
    addOrRemove: 'add' | 'remove';
    cosignatory: Address;
}

export type CosignatoryModifications = {
    [address: string]: CosignatoryModification;
};

@Component({
    components: {
        FormWrapper,
        ValidationObserver,
        ValidationProvider,
        FormRow,
        SignerSelector,
        AddCosignatoryInput,
        RemoveCosignatoryInput,
        CosignatoryModificationsDisplay,
        MaxFeeAndSubmit,
        ModalTransactionConfirmation,
        ApprovalAndRemovalInput,
        MultisigCosignatoriesDisplay,
    },
})
export class FormMultisigAccountModificationTransactionTs extends FormTransactionBase {
    /// region component properties
    @Prop({
        default: '',
    })
    signer: string;

    @Prop({
        default: null,
    })
    minApprovalDelta: number;

    @Prop({
        default: null,
    })
    minRemovalDelta: number;

    @Prop({
        default: false,
    })
    hideSubmit: boolean;
    /// end-region component properties

    /**
     * Form items
     * @var {any}
     */
    public formItems = {
        signerAddress: '',
        minApprovalDelta: 0,
        minRemovalDelta: 0,
        cosignatoryModifications: {},
        maxFee: 0,
    };

    public get multisigOperationType(): 'conversion' | 'modification' {
        if (this.isCosignatoryMode) {
            return 'modification';
        }
        return 'conversion';
    }

    public get currentMultisigInfo(): MultisigAccountInfo {
        return this.currentSignerMultisigInfo;
    }

    /**
     * Reset the form with properties
     * @see {FormTransactionBase}
     * @return {void}
     */
    protected resetForm() {
        // - set default deltas values
        const defaultMinApprovalDelta = this.multisigOperationType === 'conversion' ? 1 : 0;
        const defaultMinRemovalDelta = this.multisigOperationType === 'conversion' ? 1 : 0;

        // - set default form values
        this.formItems.minApprovalDelta = !!this.minApprovalDelta ? this.minApprovalDelta : defaultMinApprovalDelta;
        this.formItems.minRemovalDelta = !!this.minRemovalDelta ? this.minRemovalDelta : defaultMinRemovalDelta;
        this.formItems.cosignatoryModifications = {};
        if (!!this.currentAccount) {
            this.formItems.signerAddress = this.currentAccount.address; // always select current account on form reset
        }

        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /**
     * Getter for whether forms should aggregate transactions in BONDED
     * @see {FormTransactionBase}
     * @return {boolean} Always true
     */
    protected isMultisigMode(): boolean {
        return true;
    }

    /**
     * Getter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @return {MultisigAccountModificationTransaction[]}
     */
    protected getTransactions(): MultisigAccountModificationTransaction[] {
        return [
            MultisigAccountModificationTransaction.create(
                Deadline.create(),
                this.formItems.minApprovalDelta,
                this.formItems.minRemovalDelta,
                this.addressAdditions,
                this.addressDeletions,
                this.networkType,
                UInt64.fromUint(this.formItems.maxFee),
            ),
        ];
    }

    protected get addressAdditions() {
        return Object.values(this.formItems.cosignatoryModifications)
            .filter(({ addOrRemove }) => addOrRemove === 'add')
            .map(({ cosignatory }) => cosignatory);
    }

    protected get addressDeletions() {
        return Object.values(this.formItems.cosignatoryModifications)
            .filter(({ addOrRemove }) => addOrRemove === 'remove')
            .map(({ cosignatory }) => cosignatory);
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @param {TransferTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: MultisigAccountModificationTransaction[]) {
        // this form creates only 1 transaction
        const transaction = transactions.shift();
        this.formItems.minApprovalDelta = transaction.minApprovalDelta;
        this.formItems.minRemovalDelta = transaction.minRemovalDelta;
        this.formItems.cosignatoryModifications = this.getCosignatoryModificationsFromTransaction(transaction);
        this.formItems.maxFee = transaction.maxFee ? transaction.maxFee.compact() : this.defaultFee;
    }

    private getCosignatoryModificationsFromTransaction(transaction: MultisigAccountModificationTransaction): CosignatoryModifications {
        const additions: CosignatoryModification[] = transaction.addressAdditions.map((address: Address) => ({
            addOrRemove: 'add',
            cosignatory: address,
        }));

        const deletions: CosignatoryModification[] = transaction.addressDeletions.map((address: Address) => ({
            addOrRemove: 'remove',
            cosignatory: address,
        }));

        return [...additions, ...deletions].reduce(
            (acc, modification) => ({
                ...acc,
                [modification.cosignatory.plain()]: modification,
            }),
            {},
        );
    }

    /// region super.onChangeSigner
    /**
     * Hook called when a signer is selected.
     *
     * This override is needed in order to fetch the multi-signature
     * information for the currently selected signer. This fixes a
     * reactivity problem with SignerSelector selected value in case
     * of long-loading (e.g. fetch of multisig data).
     *
     * @override
     * @param {string} address
     */
    public async onChangeSigner(address: string) {
        // whether the new signer is a multisig account
        const signerIsMultisigAccount = this.currentAccount.address !== address;

        // force update form fields
        this.formItems.signerAddress = address;
        this.formItems.minApprovalDelta = signerIsMultisigAccount ? 0 : 1;
        this.formItems.minRemovalDelta = signerIsMultisigAccount ? 0 : 1;
        this.formItems.cosignatoryModifications = {};

        await this.$store.dispatch('account/SET_CURRENT_SIGNER', { address: Address.createFromRawAddress(address) });
    }
    /// end-region super.onChangeSigner

    /**
     * Hook called when the subcomponent MultisigCosignatoriesDisplay
     * emits the event `remove`.
     *
     * @param {Address} address
     */
    public onClickRemove(address: Address) {
        const modifications = this.formItems.cosignatoryModifications;

        // - in case address is part of "modifications"
        if (modifications && modifications[address.plain()]) {
            Vue.delete(this.formItems.cosignatoryModifications, address.plain());
            return;
        }
        // - in case address is part of "cosignatories", register modification
        else {
            Vue.set(this.formItems.cosignatoryModifications, address.plain(), {
                cosignatory: address,
                addOrRemove: 'remove',
            });
        }
    }

    /**
     * Hook called when the subcomponent MultisigCosignatoriesDisplay
     * emits the event `add`.
     *
     * @param {PublicAccount} publicAccount
     */
    public onClickAdd(address: Address) {
        Vue.set(this.formItems.cosignatoryModifications, address.plain(), {
            cosignatory: address,
            addOrRemove: 'add',
        });
    }

    public onClickUndo(address: Address) {
        Vue.delete(this.formItems.cosignatoryModifications, address.plain());
    }

    /// region validation handling
    /**
     * Calculation of the new multisig properties
     * For input validation purposes
     * @readonly
     * @private
     * @type {{
     *     minApproval: number,
     *     minRemoval: number,
     *     cosignatoryNumber: number,
     *   }}
     */
    private get newMultisigProperties(): {
        minApproval: number;
        minRemoval: number;
        cosignatoryNumber: number;
    } {
        // calculate new min approval
        const newMinApproval = this.currentMultisigInfo
            ? this.currentMultisigInfo.minApproval + this.formItems.minApprovalDelta
            : this.formItems.minApprovalDelta;

        // calculate new min approval
        const newMinRemoval = this.currentMultisigInfo
            ? this.currentMultisigInfo.minRemoval + this.formItems.minRemovalDelta
            : this.formItems.minRemovalDelta;

        // calculate the delta of added cosigners
        const numberOfAddedCosigners = this.addressAdditions.length - this.addressDeletions.length;

        const newCosignatoryNumber = this.currentMultisigInfo
            ? this.currentMultisigInfo.cosignatoryAddresses.length + numberOfAddedCosigners
            : numberOfAddedCosigners;

        return {
            minApproval: newMinApproval,
            minRemoval: newMinRemoval,
            cosignatoryNumber: newCosignatoryNumber,
        };
    }

    /**
     * Whether the new multisig configuration is correct
     * @readonly
     * @protected
     * @return {'OK' | false}
     */
    protected get areInputsValid(): 'OK' | false {
        const { minApproval, minRemoval, cosignatoryNumber } = this.newMultisigProperties;
        const maxCosignatoriesPerAccount = this.networkConfiguration.maxCosignatoriesPerAccount;
        return cosignatoryNumber >= minApproval &&
            cosignatoryNumber >= minRemoval &&
            cosignatoryNumber <= maxCosignatoriesPerAccount &&
            !(cosignatoryNumber > 0 && (minApproval == 0 || minRemoval == 0))
            ? 'OK'
            : false;
    }

    protected showErrorNotification(): void {
        // no message if inputs are OK
        if (this.areInputsValid === 'OK') {
            return;
        }

        this.$store.dispatch('notification/ADD_ERROR', this.errorMessage);
    }

    /**
     * Error message shown in the notice
     * @readonly
     * @protected
     * @return {string}
     */
    protected get errorMessage(): string {
        const { minApproval, minRemoval, cosignatoryNumber } = this.newMultisigProperties;
        const maxCosignatoriesPerAccount = this.networkConfiguration.maxCosignatoriesPerAccount;

        // no message if inputs are OK
        if (this.areInputsValid === 'OK') {
            return;
        }

        if (cosignatoryNumber < minApproval) {
            return `${this.$t('approval_greater_than_cosignatories', {
                delta: minApproval - cosignatoryNumber,
            })}`;
        }

        if (cosignatoryNumber < minRemoval) {
            return `${this.$t('removal_greater_than_cosignatories', {
                delta: minRemoval - cosignatoryNumber,
            })}`;
        }

        if (cosignatoryNumber > maxCosignatoriesPerAccount) {
            return `${this.$t('too_many_cosignatories', {
                maxCosignatoriesPerAccount,
                delta: cosignatoryNumber - maxCosignatoriesPerAccount,
            })}`;
        }
        if (cosignatoryNumber > 0 && (minApproval == 0 || minRemoval == 0)) {
            return `${this.$t('removal_or_approval_is_zero', {
                delta: cosignatoryNumber,
            })}`;
        }
    }

    /// end-region validation handling

    /**
     * This method is overriden in order to provide custom requiredCosignatures calculation
     * @see {requiredCosignatures}
     * @override
     * @return { TransactionCommand }
     */
    public createTransactionCommand(): TransactionCommand {
        const transactions = this.getTransactions();
        const mode = this.getTransactionCommandMode(transactions);
        return new TransactionCommand(
            mode,
            this.selectedSigner,
            this.currentSignerPublicKey,
            transactions,
            this.networkMosaic,
            this.generationHash,
            this.networkType,
            this.networkConfiguration,
            this.transactionFees,
            this.requiredCosignatures,
        );
    }

    /**
     * Calculating number of requiredCosignatures to use in maxFee calculation
     * @readonly
     * @private
     * @type number
     */
    private get requiredCosignatures(): number {
        if (this.multisigOperationType === 'conversion') {
            return this.addressAdditions.length;
        }
        // proceed if modification

        // if nothing is changed in the form or minApprovalDelta != 0 then the default value will be existing minApproval
        let requiredCosignatures = this.currentMultisigInfo.minApproval;

        if (this.addressAdditions.length > 0) {
            /* 
      this is an edge case, since the new additions signatures are mandatory, there might be a case 
      where all the existing cosignatories sign their parts before new additions do. 
      So in order to stay safe we are adding all the cosignatories including the new additions.
      */
            requiredCosignatures = this.currentMultisigInfo.cosignatoryAddresses.length + this.addressAdditions.length;
        } else {
            if (
                (this.formItems.minRemovalDelta != 0 || this.addressDeletions.length > 0) &&
                this.currentMultisigInfo.minRemoval > requiredCosignatures
            ) {
                requiredCosignatures = this.currentMultisigInfo.minRemoval;
            }
        }

        return requiredCosignatures;
    }

    /**
     * Whether form has any changes
     * @readonly
     * @return {boolean}
     */
    public get hasFormAnyChanges(): boolean {
        return (
            this.addressAdditions.length > 0 ||
            this.addressDeletions.length > 0 ||
            this.formItems.minApprovalDelta !== 0 ||
            this.formItems.minRemovalDelta !== 0
        );
    }
}

'''
'''--- src/views/forms/FormNamespaceRegistrationTransaction/FormNamespaceRegistrationTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Deadline, NamespaceId, NamespaceRegistrationTransaction, NamespaceRegistrationType, Transaction, UInt64 } from 'symbol-sdk';
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import NamespaceSelector from '@/components/NamespaceSelector/NamespaceSelector.vue';
// @ts-ignore
import NamespaceNameInput from '@/components/NamespaceNameInput/NamespaceNameInput.vue';
// @ts-ignore
import DurationInput from '@/components/DurationInput/DurationInput.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
//@ts-ignore
import RentalFee from '@/components/RentalFees/RentalFee.vue';
// configuration
import { NamespaceModel } from '@/core/database/entities/NamespaceModel';
import { NamespaceService } from '@/services/NamespaceService';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        FormRow,
        FormWrapper,
        SignerSelector,
        NamespaceNameInput,
        NamespaceSelector,
        DurationInput,
        ModalTransactionConfirmation,
        MaxFeeAndSubmit,
        RentalFee,
    },
    computed: {
        ...mapGetters({
            ownedNamespaces: 'namespace/ownedNamespaces',
            currentHeight: 'network/currentHeight',
        }),
    },
})
export class FormNamespaceRegistrationTransactionTs extends FormTransactionBase {
    @Prop({ default: null }) signer: string;
    @Prop({ default: null }) registrationType: NamespaceRegistrationType;
    @Prop({ default: null }) namespaceId: NamespaceId;
    @Prop({ default: null }) parentNamespaceId: NamespaceId;
    @Prop({ default: null }) duration: number;

    /**
     * Current account's owned namespaces
     */
    public ownedNamespaces: NamespaceModel[];

    /**
     * Root namespace type exposed to view
     * @var {NamespaceRegistrationType}
     */
    public typeRootNamespace = NamespaceRegistrationType.RootNamespace;
    /**
     * Sub-namespace type exposed to view
     * @var {NamespaceRegistrationType}
     */
    public typeSubNamespace = NamespaceRegistrationType.SubNamespace;

    /**
     * Current network block height
     */
    public currentHeight: number;

    /**
     * Form items
     * @var {Record<string, any>}
     */
    public formItems = {
        signerAddress: '',
        registrationType: NamespaceRegistrationType.RootNamespace,
        newNamespaceName: '',
        parentNamespaceName: '',
        duration: 172800,
        maxFee: 0,
    };

    /**
     * Namespaces that can have children
     * @readonly
     * @protected
     */
    protected get fertileNamespaces(): NamespaceModel[] {
        const maxNamespaceDepth = this.networkConfiguration.maxNamespaceDepth;
        return this.ownedNamespaces.filter(({ depth }) => depth < maxNamespaceDepth);
    }
    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - set default form values
        this.formItems.signerAddress = this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address;
        this.formItems.registrationType = this.registrationType || NamespaceRegistrationType.RootNamespace;
        this.formItems.newNamespaceName = this.namespaceId ? this.namespaceId.fullName : '';
        this.formItems.parentNamespaceName = this.parentNamespaceId ? this.parentNamespaceId.fullName : '';
        this.formItems.duration = this.duration || 172800;
        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /**
     * Getter for NAMESPACE REGISTRATION transactions that will be staged
     * @see {FormTransactionBase}
     * @return {Transaction[]}
     */
    protected getTransactions(): Transaction[] {
        const maxFee = UInt64.fromUint(this.formItems.maxFee);
        const deadline = Deadline.create();
        if (NamespaceRegistrationType.RootNamespace === this.formItems.registrationType) {
            return [
                NamespaceRegistrationTransaction.createRootNamespace(
                    deadline,
                    this.formItems.newNamespaceName,
                    UInt64.fromUint(this.formItems.duration),
                    this.networkType,
                    maxFee,
                ),
            ];
        } else {
            return [
                NamespaceRegistrationTransaction.createSubNamespace(
                    deadline,
                    this.formItems.newNamespaceName,
                    this.formItems.parentNamespaceName,
                    this.networkType,
                    maxFee,
                ),
            ];
        }
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @param {TransferTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: Transaction[]) {
        // - this form creates 2 transaction
        const transaction = transactions.shift() as NamespaceRegistrationTransaction;

        // - populate from transaction
        this.formItems.registrationType = transaction.registrationType;
        this.formItems.newNamespaceName = transaction.namespaceName;
        this.formItems.parentNamespaceName = transaction.parentId ? transaction.parentId.toHex() : '';
        this.formItems.duration = transaction.duration ? transaction.duration.compact() : 0;

        // - populate maxFee
        this.formItems.maxFee = transaction.maxFee.compact();
    }

    public relativeTimetoParent = '';

    public getTimeByparentNamespaceName() {
        const selectedNamespace = this.ownedNamespaces.find((item) => item.name === this.formItems.parentNamespaceName);

        if (selectedNamespace) {
            this.relativeTimetoParent = NamespaceService.getExpiration(
                this.networkConfiguration,
                this.currentHeight,
                selectedNamespace.endHeight,
            ).expiration;
        }
    }

    setParentNamespaceName(val) {
        this.formItems.parentNamespaceName = val;
        this.getTimeByparentNamespaceName();
    }
    /**
     * filter tags
     */
    public stripTagsNamesapceName() {
        this.formItems.newNamespaceName = FilterHelpers.stripFilter(this.formItems.newNamespaceName);
    }
}

'''
'''--- src/views/forms/FormNodeEdit/FormNodeEditTs.ts ---
import { Vue, Component } from 'vue-property-decorator';
//@ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
//@ts-ignore
import { ValidationObserver, ValidationProvider, validate } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
//@ts-ignore
import PeerSelector from '@/components/PeerSelector/PeerSelector.vue';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { URLHelpers } from '@/core/utils/URLHelpers';
import { NotificationType } from '@/core/utils/NotificationType';
import { mapGetters } from 'vuex';
import { NodeModel } from '@/core/database/entities/NodeModel';
import { NetworkType } from 'symbol-sdk';
import { NetworkService } from '@/services/NetworkService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormRow,
        PeerSelector,
    },
    computed: {
        ...mapGetters({
            knowNodes: 'network/knowNodes',
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class FormNodeEditTs extends Vue {
    /**
     * Current profile
     */
    public currentProfile: ProfileModel;
    public isGettingNodeInfo: boolean = false;
    public formItems = {
        nodeUrl: '',
        networkType: '',
        networkHash: '',
    };
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };
    public validationRules = ValidationRuleset;
    public knowNodes: NodeModel[];
    public nodeDelay: number = 0;

    public onSubmit() {
        this.addPeer();
    }
    /**
     * Add a new peer to storage
     * @return {void}
     */
    public addPeer() {
        // validate and parse input
        const nodeUrl = URLHelpers.getNodeUrl(this.formItems.nodeUrl);

        // return if node already exists in the database
        if (this.knowNodes.find((node) => node.url === nodeUrl)) {
            this.$store.dispatch('notification/ADD_ERROR', NotificationType.NODE_EXISTS_ERROR);
            return;
        }

        // read network type from node pre-saving
        try {
            // hide loading overlay
            this.$store.dispatch('network/ADD_KNOWN_PEER', nodeUrl);
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
            this.$store.dispatch('diagnostic/ADD_DEBUG', 'PeerSelector added peer: ' + nodeUrl);

            // reset the form input
            this.formItems.nodeUrl = '';
            this.$refs.observer.reset();
        } catch (e) {
            // hide loading overlay
            this.$store.dispatch('diagnostic/ADD_ERROR', 'PeerSelector unreachable host with URL: ' + nodeUrl);
            this.$store.dispatch('notification/ADD_ERROR', this.$t(NotificationType.ERROR_PEER_UNREACHABLE));
        }
    }
    public async getInfoFromUrl() {
        if (this.$refs.observer.fields && this.$refs.observer.fields.nodeUrl.invalid) {
            this.formItems.networkHash = '';
            this.formItems.networkType = '';
            return;
        }
        const networkService = new NetworkService();
        this.isGettingNodeInfo = true;
        try {
            const { networkModel, isCandidateUrlAvailable } = await networkService.getNetworkModel(this.formItems.nodeUrl).toPromise();
            if (!isCandidateUrlAvailable) {
                return this.$store.dispatch('notification/ADD_WARNING', this.$t(NotificationType.INVALID_NODE));
            }
            if (NetworkType[this.currentProfile.networkType] !== NetworkType[networkModel.networkType]) {
                return this.$store.dispatch('notification/ADD_WARNING', this.$t(NotificationType.NETWORK_TYPE_INVALID));
            }
            this.formItems.networkType = NetworkType[networkModel.networkType];
            this.formItems.networkHash = networkModel.generationHash;
        } finally {
            this.isGettingNodeInfo = false;
        }
    }
    public customNodeData = [];
    public async handleInput(value: string) {
        this.formItems.networkType && (this.formItems.networkType = '');
        this.formItems.networkHash && (this.formItems.networkHash = '');
        const isValidUrl = await validate(value, this.validationRules.url);
        if (!isValidUrl) {
            this.customNodeData = [];
            return;
        }
        const associationValues: Array<string> = /.+\u003a\d{2,}/.test(value) ? [value] : [value + ':3000'];
        this.customNodeData = !value ? [] : associationValues;
    }
}

'''
'''--- src/views/forms/FormPersistentDelegationRequestTransaction/FormPersistentDelegationRequestTransactionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    Address,
    Deadline,
    TransferTransaction,
    UInt64,
    PersistentHarvestingDelegationMessage,
    AccountKeyLinkTransaction,
    LinkAction,
    Transaction,
    PublicAccount,
} from 'symbol-sdk';
import { Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { Formatters } from '@/core/utils/Formatters';
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';

// child components
import { ValidationObserver } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';
// @ts-ignore
import NetworkNodeSelector from '@/components/NetworkNodeSelector/NetworkNodeSelector.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';

@Component({
    components: {
        FormWrapper,
        ModalTransactionConfirmation,
        SignerSelector,
        ValidationObserver,
        MaxFeeSelector,
        FormRow,
        NetworkNodeSelector,
    },
    computed: {
        ...mapGetters({
            currentHeight: 'network/currentHeight',
        }),
    },
})
export class FormPersistentDelegationRequestTransactionTs extends FormTransactionBase {
    @Prop({ required: true }) remoteAccount: PublicAccount;
    @Prop({ default: null }) signerAddress: string;
    @Prop({ default: true }) withLink: boolean;

    /**
     * Formatters helpers
     */
    public formatters = Formatters;

    /**
     * Form items
     */
    public formItems = {
        nodePublicKey: '',
        vrfPublicKey: '',
        signerAddress: '',
        maxFee: 0,
    };

    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - set default form values
        this.formItems.signerAddress =
            this.signerAddress || (this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address);
        this.formItems.nodePublicKey = '';
        this.formItems.vrfPublicKey = '';
        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
    }

    /**
     * Getter for PERSISTENT DELEGATION REQUEST transactions that will be staged
     * @see {FormTransactionBase}
     * @return {TransferTransaction[]}
     */
    protected getTransactions(): Transaction[] {
        const maxFee = UInt64.fromUint(this.formItems.maxFee);
        const message = PersistentHarvestingDelegationMessage.create(
            this.remoteAccount.publicKey,
            this.formItems.vrfPublicKey,
            this.formItems.nodePublicKey,
            this.networkType,
        );

        const linkTx = AccountKeyLinkTransaction.create(
            Deadline.create(),
            this.remoteAccount.publicKey,
            LinkAction.Link,
            this.networkType,
            maxFee,
        );
        const transferTx = TransferTransaction.create(Deadline.create(), this.instantiatedRecipient, [], message, this.networkType, maxFee);

        if (this.withLink === true) {
            return [linkTx, transferTx];
        }

        return [transferTx];
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions() {
        throw new Error('This transaction can not be staged');
    }

    /**
     * Recipient used in the transaction
     * @readonly
     * @protected
     * @type {Address}
     */
    protected get instantiatedRecipient(): Address {
        return Address.createFromPublicKey(this.formItems.nodePublicKey, this.networkType);
    }

    public onSubmit() {
        if (!this.formItems.nodePublicKey.length) {
            this.$refs.observer.setErrors({ endpoint: this.$t('invalid_node').toString() });
            return;
        }

        // - open signature modal
        this.command = this.createTransactionCommand();
        return this.command;
    }
}

'''
'''--- src/views/forms/FormProfileCreation/FormProfileCreationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Password } from 'symbol-sdk';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { NotificationType } from '@/core/utils/NotificationType';
import { ProfileService } from '@/services/ProfileService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

/// end-region custom types

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
    },
    computed: {
        ...mapGetters({
            generationHash: 'network/generationHash',
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class FormProfileCreationTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Currently active network type
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Accounts repository
     * @var {ProfileService}
     */
    public accountService = new ProfileService();

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        profileName: '',
        password: '',
        passwordAgain: '',
        hint: '',
        networkType: this.$store.getters['network/networkType'],
    };

    /**
     * Network types
     * @var {NetworkNodeEntry[]}
     */
    public networkTypeList = NetworkTypeHelper.networkTypeList;

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    /// region computed properties getter/setter
    get nextPage() {
        return this.$route.meta.nextPage;
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action, validates form and creates account in storage
     * @return {void}
     */
    public submit() {
        // @VEE
        this.persistAccountAndContinue();
        this.resetValidations();
    }

    /**
     *  resets form validation
     */

    public resetValidations(): void {
        this.$refs && this.$refs.observer && this.$refs.observer.reset();
    }

    /**
     * Persist created account and redirect to next step
     * @return {void}
     */
    private persistAccountAndContinue() {
        // -  password stored as hash (never plain.)
        const passwordHash = ProfileService.getPasswordHash(new Password(this.formItems.password));

        const account: ProfileModel = {
            profileName: this.formItems.profileName,
            accounts: [],
            seed: '',
            password: passwordHash,
            hint: this.formItems.hint,
            networkType: this.formItems.networkType,
            generationHash: this.generationHash,
        };
        // use repository for storage
        this.accountService.saveProfile(account);

        // execute store actions
        this.$store.dispatch('profile/SET_CURRENT_PROFILE', account);
        this.$store.dispatch('temporary/SET_PASSWORD', this.formItems.password);
        this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);

        // flush and continue
        this.$router.push({ name: this.nextPage });
    }

    /**
     * filter tags
     */
    public stripTagsProfile() {
        this.formItems.profileName = FilterHelpers.stripFilter(this.formItems.profileName);
        this.formItems.hint = FilterHelpers.stripFilter(this.formItems.hint);
    }
}

'''
'''--- src/views/forms/FormProfilePasswordUpdate/FormProfilePasswordUpdateTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Password, Crypto } from 'symbol-sdk';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { ProfileService } from '@/services/ProfileService';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
import { NotificationType } from '@/core/utils/NotificationType';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountService } from '@/services/AccountService';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
        ModalFormProfileUnlock,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            networkConfiguration: 'network/networkConfiguration',
            isSettingVisible: 'profile/isSettingVisible',
        }),
    },
})
export class FormProfilePasswordUpdateTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    private networkConfiguration: NetworkConfigurationModel;
    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Whether account is currently being unlocked
     * @var {boolean}
     */
    public isUnlockingAccount: boolean = false;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        password: '',
        passwordConfirm: '',
        passwordHint: '',
    };

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };
    public isSettingVisible: boolean;
    /// region computed properties getter/setter
    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action asks for account unlock
     * @return {void}
     */
    public onSubmit() {
        this.hasAccountUnlockModal = true;

        // resets form validation
        this.$nextTick(() => {
            this.$refs.observer.reset();
        });
    }

    /**
     * When account is unlocked, the sub account can be created
     */
    public async onAccountUnlocked(account: Account, oldPassword: Password) {
        try {
            const profileService = new ProfileService();
            const newPassword = new Password(this.formItems.password);
            const oldSeed = this.currentProfile.seed;
            const plainSeed = Crypto.decrypt(oldSeed, oldPassword.value);
            const newSeed = Crypto.encrypt(plainSeed, newPassword.value);

            // // - create new password hash
            const passwordHash = ProfileService.getPasswordHash(newPassword);
            profileService.updatePassword(this.currentProfile, passwordHash, this.formItems.passwordHint, newSeed);

            const accountService = new AccountService();
            const accountIdentifiers = this.currentProfile.accounts;

            const accounts = accountService.getKnownAccounts(accountIdentifiers);
            for (const model of accounts) {
                const updatedModel = accountService.updateWalletPassword(model, oldPassword, newPassword);
                accountService.saveAccount(updatedModel);
            }

            // - update state and finalize
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.SUCCESS_PASSWORD_CHANGED);
            this.isSettingVisible && this.$store.commit('profile/toggleSetting');
            await this.$store.dispatch('profile/LOG_OUT');
            setTimeout(() => {
                this.$router.push({ name: 'profiles.login' });
            }, 500);
        } catch (e) {
            this.$store.dispatch('notification/ADD_ERROR', 'An error happened, please try again.');
            console.error(e);
        }
    }
}

'''
'''--- src/views/forms/FormProfileUnlock/FormProfileUnlockTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Account, NetworkType, Password, Crypto } from 'symbol-sdk';
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// child components
import { ValidationProvider } from 'vee-validate';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';

@Component({
    components: {
        ValidationProvider,
        FormWrapper,
        FormRow,
        ErrorTooltip,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class FormProfileUnlockTs extends Vue {
    /**
     * Current network type
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Currently active account
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Form items
     * @var {any}
     */
    public formItems = {
        password: '',
    };

    /**
     * Text shown in the confirmation button
     * @type {string}
     */
    @Prop({ default: 'confirm' }) buttonText: string;

    /**
     * Whether to hide submit button
     */
    @Prop({ default: false }) hideSubmit: boolean;

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter

    /**
     * Attempt decryption of private key to unlock
     * .
     * @return {void}
     */
    public processVerification() {
        try {
            const password = new Password(this.formItems.password);
            const privateKey: string = Crypto.decrypt(this.currentAccount.encryptedPrivateKey, password.value);

            if (privateKey.length === 64) {
                const unlockedAccount = Account.createFromPrivateKey(privateKey, this.networkType);
                return this.$emit('success', { account: unlockedAccount, password });
            }

            return this.$emit('error', this.$t('error_invalid_password'));
        } catch (e) {
            this.$emit('error', e);
        }
    }
}

'''
'''--- src/views/forms/FormRemoteAccountCreation/FormRemoteAccountCreationTs.ts ---
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { Password, Account, RepositoryFactory, Crypto } from 'symbol-sdk';
import { mapGetters } from 'vuex';

// internal dependencies
import { RemoteAccountService } from '@/services/RemoteAccountService';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ProfileModel } from '@/core/database/entities/ProfileModel';

// child components
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// @ts-ignore
import AccountAddressDisplay from '@/components/AccountAddressDisplay/AccountAddressDisplay.vue';
// @ts-ignore
import AccountPublicKeyDisplay from '@/components/AccountPublicKeyDisplay/AccountPublicKeyDisplay.vue';
// @ts-ignore
import ProtectedPrivateKeyDisplay from '@/components/ProtectedPrivateKeyDisplay/ProtectedPrivateKeyDisplay.vue';

@Component({
    components: {
        FormProfileUnlock,
        AccountAddressDisplay,
        AccountPublicKeyDisplay,
        ProtectedPrivateKeyDisplay,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            currentProfile: 'profile/currentProfile',
            repositoryFactory: 'network/repositoryFactory',
        }),
    },
})
export class FormRemoteAccountCreationTs extends Vue {
    /**
     * Remote account to be created
     */
    protected remoteAccount: Account = null;
    /**
     * Currently selected account
     */
    private currentAccount: AccountModel;
    /**
     * Current profile
     */
    private currentProfile: ProfileModel;
    /**
     * Repository factory
     */
    private repositoryFactory: RepositoryFactory;

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     * @param {Password} password
     * @return {void}
     */
    public async onAccountUnlocked({ password, account }): Promise<void> {
        this.$store.dispatch('diagnostic/ADD_INFO', `Account ${account.address.plain()} unlocked successfully.`);

        if (this.currentAccount.encRemoteAccountPrivateKey) {
            // the current account already has a remote account
            this.createRemoteAccountFromEncPrivateKey(password);
        } else {
            // a new remote account has to be created
            await this.createRemoteAccount(password);
            this.persistRemoteAccount(password);
        }

        this.$emit('setRemoteAccount', this.remoteAccount);
        this.$emit('toggleNext', true);
    }

    /**
     * Decrypts an existing encrypted remote account private key from the current account
     * @private
     * @param {Password} password
     */
    private createRemoteAccountFromEncPrivateKey(password: Password): void {
        const remoteAccountPrivateKey = Crypto.decrypt(this.currentAccount.encRemoteAccountPrivateKey, password.value);
        this.remoteAccount = Account.createFromPrivateKey(remoteAccountPrivateKey, this.currentProfile.networkType);
    }
    /**
     * Creates a remote account
     * @private
     * @param {Password} password
     * @returns {Promise<void>}
     */
    private async createRemoteAccount(password: Password): Promise<void> {
        this.remoteAccount = await new RemoteAccountService(
            this.currentAccount,
            this.currentProfile,
            this.repositoryFactory.createAccountRepository(),
        ).getAvailableRemoteAccount(password);
    }

    /**
     * Perists the remote account in the current account object
     * @private
     * @param {Password} password
     */
    private persistRemoteAccount(password: Password): void {
        const encRemoteAccountPrivateKey = Crypto.encrypt(this.remoteAccount.privateKey, password.value);
        this.$store.dispatch('account/UPDATE_CURRENT_ACCOUNT_REMOTE_ACCOUNT', encRemoteAccountPrivateKey);
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }

    /**
     * Hook called when the component is mounted
     */
    public created() {
        this.$emit('toggleNext', false);
    }
}

'''
'''--- src/views/forms/FormSubAccountCreation/FormSubAccountCreationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Account, NetworkType, Password, Crypto } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { DerivationService } from '@/services/DerivationService';
import { NotificationType } from '@/core/utils/NotificationType';
import { AccountService } from '@/services/AccountService';
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import ModalFormProfileUnlock from '@/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlock.vue';
// configuration
import { appConfig } from '@/config';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { FilterHelpers } from '@/core/utils/FilterHelpers';

const { MAX_SEED_ACCOUNTS_NUMBER } = appConfig.constants;

@Component({
    components: {
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
        FormWrapper,
        FormRow,
        ModalFormProfileUnlock,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            currentProfile: 'profile/currentProfile',
            knownAccounts: 'account/knownAccounts',
            isPrivateKeyProfile: 'profile/isPrivateKeyProfile',
        }),
    },
})
export class FormSubAccountCreationTs extends Vue {
    /**
     * Currently active profile
     */
    public currentProfile: ProfileModel;

    /**
     * Known accounts identifiers
     */
    public knownAccounts: AccountModel[];

    /**
     * Currently active network type
     */
    public networkType: NetworkType;

    /**
     * Accounts repository
     */
    public accountService: AccountService;

    /**
     * Derivation paths service
     */
    public paths: DerivationService;

    /**
     * Validation rules
     */
    public validationRules = ValidationRuleset;

    /**
     * Whether account is currently being unlocked
     */
    public isUnlockingAccount: boolean = false;

    /**
     * Current unlocked password
     * @var {Password}
     */
    public currentPassword: Password;

    public isPrivateKeyProfile: boolean;

    /**
     * Form fields
     * @var {Object}
     */
    public formItems = {
        type: '',
        privateKey: '',
        name: '',
    };

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    public created() {
        this.accountService = new AccountService();
        this.paths = new DerivationService();
        this.formItems.type = this.isPrivateKeyProfile ? 'privatekey_account' : 'child_account';
    }

    /// region computed properties getter/setter
    public get hasAccountUnlockModal(): boolean {
        return this.isUnlockingAccount;
    }

    public set hasAccountUnlockModal(f: boolean) {
        this.isUnlockingAccount = f;
    }

    public get knownPaths(): string[] {
        if (!this.knownAccounts || !this.knownAccounts.length) {
            return [];
        }
        // filter accounts to only known account names
        return this.knownAccounts.map((a) => a.path).filter((p) => p);
    }

    /// end-region computed properties getter/setter

    /**
     * Submit action asks for account unlock
     * @return {void}
     */
    public onSubmit() {
        this.hasAccountUnlockModal = true;

        // // resets form validation
        // this.$nextTick(() => {
        //   this.$refs.observer.reset()
        // })
    }

    /**
     * When account is unlocked, the sub account can be created
     */
    public async onAccountUnlocked(account: Account, password: Password) {
        this.currentPassword = password;

        // - interpret form items
        const values = { ...this.formItems };
        const type = values.type && ['child_account', 'privatekey_account'].includes(values.type) ? values.type : 'child_account';

        try {
            // - create sub account (can be either derived or by private key)
            let subAccount: AccountModel;
            switch (type) {
                default:
                case 'child_account':
                    subAccount = this.deriveNextChildAccount(values.name);
                    break;

                case 'privatekey_account':
                    subAccount = this.accountService.getSubAccountByPrivateKey(
                        this.currentProfile,
                        this.currentPassword,
                        this.formItems.name,
                        this.formItems.privateKey,
                        this.networkType,
                    );
                    break;
            }

            // - return if subAccount is undefined
            if (!subAccount) {
                return;
            }

            // Verify that the import is repeated
            const hasAddressInfo = this.knownAccounts.find((w) => w.address === subAccount.address);
            if (hasAddressInfo !== undefined) {
                this.$store.dispatch(
                    'notification/ADD_ERROR',
                    `This private key already exists. The account name is ${hasAddressInfo.name}`,
                );
                return null;
            }

            // - remove password before GC
            this.currentPassword = null;

            // - use repositories for storage
            this.accountService.saveAccount(subAccount);

            // - update app state
            await this.$store.dispatch('profile/ADD_ACCOUNT', subAccount);
            await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', subAccount);
            await this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', this.currentProfile.accounts);
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
            this.$emit('submit', this.formItems);
        } catch (e) {
            this.$store.dispatch('notification/ADD_ERROR', 'An error happened, please try again.');
            console.error(e);
        }
    }

    /**
     * Use HD account derivation to get next child account
     * @param {string} child account name
     * @return {AccountModel}
     */
    private deriveNextChildAccount(childAccountName: string): AccountModel | null {
        // - don't allow creating more than 10 accounts
        if (this.knownPaths.length >= MAX_SEED_ACCOUNTS_NUMBER) {
            this.$store.dispatch(
                'notification/ADD_ERROR',
                this.$t(NotificationType.TOO_MANY_SEED_ACCOUNTS_ERROR, {
                    maxSeedAccountsNumber: MAX_SEED_ACCOUNTS_NUMBER,
                }),
            );
            return null;
        }

        // - get next path
        const nextPath = this.paths.getNextAccountPath(this.knownPaths);

        this.$store.dispatch('diagnostic/ADD_DEBUG', 'Adding child account with derivation path: ' + nextPath);

        // - decrypt mnemonic
        const encSeed = this.currentProfile.seed;
        const passphrase = Crypto.decrypt(encSeed, this.currentPassword.value);
        const mnemonic = new MnemonicPassPhrase(passphrase);

        // create account by mnemonic
        return this.accountService.getChildAccountByPath(
            this.currentProfile,
            this.currentPassword,
            mnemonic,
            nextPath,
            this.networkType,
            childAccountName,
        );
    }
    /**
     * filter tags
     */
    public stripTagsAccountName() {
        this.formItems.name = FilterHelpers.stripFilter(this.formItems.name);
    }
}

'''
'''--- src/views/forms/FormTransactionBase/FormTransactionBase.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { MosaicId, MultisigAccountInfo, NetworkType, PublicAccount, Transaction, TransactionFees, Address } from 'symbol-sdk';
import { Component, Vue, Watch } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ValidationObserver } from 'vee-validate';
import { Signer } from '@/store/Account';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { TransactionCommand, TransactionCommandMode } from '@/services/TransactionCommand';
import { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';

@Component({
    computed: {
        ...mapGetters({
            generationHash: 'network/generationHash',
            networkType: 'network/networkType',
            defaultFee: 'app/defaultFee',
            currentAccount: 'account/currentAccount',
            selectedSigner: 'account/currentSigner',
            currentSignerPublicKey: 'account/currentSignerPublicKey',
            currentSignerAddress: 'account/currentSignerAddress',
            currentSignerMultisigInfo: 'account/currentSignerMultisigInfo',
            currentAccountMultisigInfo: 'account/currentAccountMultisigInfo',
            isCosignatoryMode: 'account/isCosignatoryMode',
            networkMosaic: 'mosaic/networkMosaic',
            networkCurrency: 'mosaic/networkCurrency',
            signers: 'account/signers',
            networkConfiguration: 'network/networkConfiguration',
            transactionFees: 'network/transactionFees',
        }),
    },
})
export class FormTransactionBase extends Vue {
    /// region store getters
    /**
     * Network generation hash
     */
    public generationHash: string;

    /**
     * Network type
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Default fee setting
     */
    public defaultFee: number;

    /**
     * Currently active account
     */
    public currentAccount: AccountModel;

    /**
     * Currently active signer
     */
    public selectedSigner: Signer;

    /**
     * Currently active signer's public key
     */
    public currentSignerPublicKey: string;

    /**
     * Currently active signer's address
     */
    public currentSignerAddress: Address;

    /**
     * Current account multisig info
     * @type {MultisigAccountInfo}
     */
    public currentAccountMultisigInfo: MultisigAccountInfo;

    /**
     * Current signer multisig info
     * @var {MultisigAccountInfo}
     */
    public currentSignerMultisigInfo: MultisigAccountInfo;

    /**
     * Whether the form is in cosignatory mode (cosigner selected)
     * @var {boolean}
     */
    public isCosignatoryMode: boolean;

    /**
     * Networks currency mosaic
     * @var {MosaicId}
     */
    public networkMosaic: MosaicId;

    /**
     * Currently staged transactions
     * @var {Transaction[]}
     */
    public stagedTransactions: Transaction[];

    /**
     * Public key of the current signer
     * @var {any}
     */
    public currentSigner: PublicAccount;

    public signers: Signer[];

    public networkCurrency: NetworkCurrencyModel;

    public networkConfiguration: NetworkConfigurationModel;

    public command: TransactionCommand;

    protected transactionFees: TransactionFees;

    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    /// end-region store getters

    /// region property watches
    @Watch('currentAccount')
    onCurrentAccountChange() {
        this.resetForm(); // @TODO: probably not the best way
        this.resetFormValidation();
    }

    /// end-region property watches

    /**
     * Whether the form is currently awaiting a signature
     * @var {boolean}
     */
    public isAwaitingSignature: boolean = false;

    /**
     * Hook called when the component is mounted
     * @return {void}
     */
    public async created() {
        this.$store.dispatch('network/LOAD_TRANSACTION_FEES');
        this.resetForm();
    }

    /**
     * Hook called when the component is being destroyed (before)
     * @return {void}
     */
    public beforeDestroy() {
        // reset the selected signer if it is not the current account
        if (!this.currentAccount) {
            return;
        }

        if (!this.selectedSigner.address.equals(Address.createFromRawAddress(this.currentAccount.address))) {
            this.$store.dispatch('account/SET_CURRENT_SIGNER', {
                address: Address.createFromRawAddress(this.currentAccount.address),
            });
        }
    }

    /**
     * Current signer's multisig accounts
     * @readonly
     * @type {{publicKey: string, label: string}[]}
     */
    get multisigAccounts(): Signer[] {
        const signers = this.signers;
        // if "self" is multisig, also return self
        if (this.currentAccountMultisigInfo && this.currentAccountMultisigInfo.isMultisig()) {
            return signers;
        }

        // all signers except current account
        return [...signers].splice(1);
    }

    get hasConfirmationModal(): boolean {
        return this.isAwaitingSignature;
    }

    set hasConfirmationModal(f: boolean) {
        this.isAwaitingSignature = f;
    }

    /// end-region computed properties getter/setter

    /**
     * Reset the form with properties
     * @throws {Error} If not overloaded in derivate component
     */
    protected resetForm() {
        throw new Error("Method 'resetForm()' must be overloaded in derivate components.");
    }
    /**
     * Getter for whether forms should aggregate transactions in BONDED
     * @return {boolean}
     */
    protected isMultisigMode(): boolean {
        return this.isCosignatoryMode === true;
    }

    /**
     * Getter for transactions that will be staged
     * @throws {Error} If not overloaded in derivate component
     */
    protected getTransactions(): Transaction[] {
        throw new Error("Getter method 'getTransactions()' must be overloaded in derivate components.");
    }

    /**
     * Setter for transactions that will be staged
     * @param {Transaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: Transaction[]) {
        //TODO do we need these methods?
        const error = `setTransactions() must be overloaded. Call got ${transactions.length} transactions.`;
        throw new Error(error);
    }

    /**
     * Hook called when the confirmation modal must open
     * @see {FormTransactionBase}
     * @throws {Error} If not overloaded in derivate component
     */
    protected onShowConfirmationModal() {
        this.hasConfirmationModal = true;
    }

    /**
     * Hook called when a signer is selected.
     * @param {string} publicKey
     */
    public async onChangeSigner(address: string) {
        // this.currentSigner = PublicAccount.createFromPublicKey(publicKey, this.networkType)
        await this.$store.dispatch('account/SET_CURRENT_SIGNER', { address: Address.createFromRawAddress(address) });
    }

    protected getTransactionCommandMode(transactions: Transaction[]): TransactionCommandMode {
        if (this.isMultisigMode()) {
            return TransactionCommandMode.MULTISIGN;
        }
        if (transactions.length > 1) {
            return TransactionCommandMode.AGGREGATE;
        } else {
            return TransactionCommandMode.SIMPLE;
        }
    }

    public createTransactionCommand(): TransactionCommand {
        const transactions = this.getTransactions();
        const mode = this.getTransactionCommandMode(transactions);
        return new TransactionCommand(
            mode,
            this.selectedSigner,
            this.currentSignerPublicKey,
            transactions,
            this.networkMosaic,
            this.generationHash,
            this.networkType,
            this.networkConfiguration,
            this.transactionFees,
            this.currentSignerMultisigInfo ? this.currentSignerMultisigInfo.minApproval : this.selectedSigner.requiredCosignatures,
        );
    }

    /**
     * Process form input
     * @return {void}
     */
    public onSubmit() {
        // - open signature modal
        this.command = this.createTransactionCommand();
        this.onShowConfirmationModal();
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'success'
     */
    public onConfirmationSuccess() {
        // if the form was in multisig, set the signer to be the main account
        // this triggers resetForm in the @Watch('currentAccount') hook
        if (this.isMultisigMode()) {
            this.$store.dispatch('account/SET_CURRENT_ACCOUNT', this.currentAccount);
        }
        this.resetForm();
        this.hasConfirmationModal = false;
        this.$emit('on-confirmation-success');
        // Reset form validation
        this.resetFormValidation();
    }

    /**
     * Reset form validation
     * @private
     */
    private resetFormValidation(): void {
        this.$refs && this.$refs.observer && this.$refs.observer.reset();
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'error'
     * @return {void}
     */
    public onConfirmationError(error: string) {
        this.$store.dispatch('notification/ADD_ERROR', error);
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'close'
     * @return {void}
     */
    public onConfirmationCancel() {
        this.hasConfirmationModal = false;
    }
}

'''
'''--- src/views/forms/FormTransactionConfirmation/FormTransactionConfirmationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Account, Transaction } from 'symbol-sdk';
// internal dependencies
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { AccountTransactionSigner, TransactionAnnouncerService, TransactionSigner } from '@/services/TransactionAnnouncerService';
// child components
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// @ts-ignore
import HardwareConfirmationButton from '@/components/HardwareConfirmationButton/HardwareConfirmationButton.vue';
import { TransactionCommand } from '@/services/TransactionCommand';

@Component({
    components: {
        FormWrapper,
        TransactionDetails,
        FormProfileUnlock,
        HardwareConfirmationButton,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class FormTransactionConfirmationTs extends Vue {
    @Prop({
        required: true,
    })
    public command: TransactionCommand;

    /**
     * Whether to hide submit button
     */
    @Prop({ default: false }) hideSubmit: boolean;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * List of transactions on-stage
     * @see {Store.Account}
     * @var {Transaction[]}
     */
    public stagedTransactions: Transaction[] = [];

    public async mounted() {
        this.stagedTransactions = await this.command.resolveTransactions().toPromise();
    }

    /// region computed properties getter/setter
    /**
     * Returns whether current account is a hardware wallet
     * @return {boolean}
     */
    public get isUsingHardwareWallet(): boolean {
        // XXX should use "stagedTransaction.signer" to identify account
        return AccountType.TREZOR === this.currentAccount.type;
    }
    /// end-region computed properties getter/setter

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     *
     * This hook shall *sign transactions* with the \a account
     * that has been unlocked. Subsequently it will also announce
     * the signed transaction.
     *
     */
    public async onAccountUnlocked({ account }: { account: Account }): Promise<void> {
        // - log about unlock success
        this.$store.dispatch('diagnostic/ADD_INFO', `Account ${account.address.plain()} unlocked successfully.`);
        // - get transaction stage config
        return this.onSigner(new AccountTransactionSigner(account));
    }

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     *
     * This hook shall *sign transactions* with the \a account
     * that has been unlocked. Subsequently it will also announce
     * the signed transaction.
     *
     */
    public async onSigner(transactionSigner: TransactionSigner): Promise<void> {
        // - log about unlock success
        // - get transaction stage config
        const announcements = await this.command.announce(new TransactionAnnouncerService(this.$store), transactionSigner).toPromise();
        announcements.forEach((announcement) => {
            announcement.subscribe((res) => {
                if (!res.success) {
                    this.$store.dispatch('notification/ADD_ERROR', res.error, { root: true });
                }
            });
        });
        // - notify about successful transaction announce
        this.$store.dispatch('notification/ADD_SUCCESS', 'success_transactions_signed');
        this.$emit('success');
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }

    public onSubmit() {
        (this.$refs.unlockForm as FormProfileUnlock).processVerification();
    }
}

'''
'''--- src/views/forms/FormTransferTransaction/FormTransferTransactionTs.ts ---
/*
 * Copyright 2020-present NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import {
    Address,
    Deadline,
    Message,
    Mosaic,
    MosaicId,
    NamespaceId,
    PlainMessage,
    RawUInt64,
    Transaction,
    TransferTransaction,
    UInt64,
} from 'symbol-sdk';
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { Formatters } from '@/core/utils/Formatters';
import { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';
import { AddressValidator, AliasValidator } from '@/core/validation/validators';
import { MosaicInputsManager } from './MosaicInputsManager';
import { ITransactionEntry } from '@/views/pages/dashboard/invoice/DashboardInvoicePageTs';
// child components
import { ValidationObserver } from 'vee-validate';
// @ts-ignore
import AmountInput from '@/components/AmountInput/AmountInput.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import MessageInput from '@/components/MessageInput/MessageInput.vue';
// @ts-ignore
import ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';
// @ts-ignore
import MosaicAttachmentInput from '@/components/MosaicAttachmentInput/MosaicAttachmentInput.vue';
// @ts-ignore
import MosaicSelector from '@/components/MosaicSelector/MosaicSelector.vue';
// @ts-ignore
import RecipientInput from '@/components/RecipientInput/RecipientInput.vue';
// @ts-ignore
import SignerSelector from '@/components/SignerSelector/SignerSelector.vue';
// @ts-ignore
import MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';
// @ts-ignore
import ModalTransactionUriImport from '@/views/modals/ModalTransactionUriImport/ModalTransactionUriImport.vue';
// @ts-ignore
import TransactionUriDisplay from '@/components/TransactionUri/TransactionUriDisplay/TransactionUriDisplay.vue';

// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { MosaicService } from '@/services/MosaicService';
import { MosaicModel } from '@/core/database/entities/MosaicModel';
import { FilterHelpers } from '@/core/utils/FilterHelpers';
import { TransactionCommand } from '@/services/TransactionCommand';
import { feesConfig } from '@/config';

export interface MosaicAttachment {
    mosaicHex: string;
    amount: number; // Relative amount
    id?: MosaicId;
    name?: string;
    uid?: number;
}

@Component({
    components: {
        AmountInput,
        FormWrapper,
        MessageInput,
        ModalTransactionConfirmation,
        MosaicAttachmentInput,
        MosaicSelector,
        RecipientInput,
        SignerSelector,
        ValidationObserver,
        MaxFeeAndSubmit,
        FormRow,
        ModalTransactionUriImport,
        TransactionUriDisplay,
    },
    computed: {
        ...mapGetters({
            currentHeight: 'network/currentHeight',
            balanceMosaics: 'mosaic/balanceMosaics',
        }),
    },
})
export class FormTransferTransactionTs extends FormTransactionBase {
    @Prop({
        default: null,
    })
    recipient: Address;

    @Prop({
        default: null,
    })
    message: Message;

    @Prop({
        default: false,
    })
    hideSubmit: boolean;

    @Prop({
        default: false,
    })
    hideSigner: boolean;

    @Prop({
        default: false,
    })
    showTransactionActions: boolean;

    /// end-region component properties

    /**
     * Formatters helpers
     * @var {Formatters}
     */
    public formatters = Formatters;

    /**
     * Form items
     * @var {any}
     */
    public formItems = {
        signerAddress: '',
        attachedMosaics: [],
        recipientRaw: '',
        recipient: null,
        selectedMosaicHex: '',
        relativeAmount: 0,
        messagePlain: '',
        maxFee: 0,
    };

    public currentHeight: number;

    protected mosaicInputsManager;

    private balanceMosaics: MosaicModel[];

    /**
     * Whether ModalTransactionUriImport is visible
     */
    private isImportTransactionUriModalVisible = false;

    /**
     * Transaction imported via transaction URI
     */
    private importedTransaction: Transaction;

    /**
     * Holds the just in time transactions
     */
    public transactions: TransferTransaction[] = [];

    /**
     * Calculated recommended fee based on the txs size
     */
    private calculatedRecommendedFee: number = 0;

    /**
     * Calculated highest fee based on the txs size
     */
    private calculatedHighestFee: number = 0;

    /**
     * Reset the form with properties
     * @return {void}
     */
    protected resetForm() {
        // - reset attached mosaics
        this.formItems.attachedMosaics = [];

        // - set default form values
        this.formItems.signerAddress = this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address;
        this.formItems.selectedMosaicHex = this.networkMosaic.toHex();
        // default currentAccount Address to recipientRaw
        if (this.$route.path.indexOf('invoice') > -1) {
            this.formItems.recipientRaw = this.currentAccount.address || '';
        } else {
            this.formItems.recipientRaw = !!this.recipient ? this.recipient.plain() : '';
        }
        this.formItems.recipient = !!this.recipient ? this.recipient : null;

        const currentMosaics = this.currentMosaicList();

        const attachedMosaics: MosaicAttachment[] = [
            {
                id: new MosaicId(this.networkCurrency.mosaicIdHex),
                mosaicHex: this.networkCurrency.mosaicIdHex,
                name: this.networkCurrency.namespaceIdFullname,
                amount: 0,
                uid: Math.floor(Math.random() * 10e6), // used to index dynamic inputs
            },
        ];

        this.formItems.messagePlain = this.message ? Formatters.hexToUtf8(this.message.payload) : '';
        // - maxFee must be absolute
        this.formItems.maxFee = this.defaultFee;
        // - initialize mosaics input manager
        this.mosaicInputsManager = MosaicInputsManager.initialize(currentMosaics);

        // transaction details passed via router
        if (this.$route.params.transaction || this.importedTransaction) {
            // @ts-ignore
            this.setTransactions([!!this.importedTransaction ? this.importedTransaction : this.$route.params.transaction]);
            Vue.nextTick(() => {
                this.formItems.attachedMosaics.forEach((attachedMosaic) => {
                    this.mosaicInputsManager.setSlot(attachedMosaic.mosaicHex, attachedMosaic.uid);
                });
            });
        } else {
            // - set attachedMosaics and allocate slots
            Vue.nextTick(() => {
                attachedMosaics.forEach((attachedMosaic, index) => {
                    this.mosaicInputsManager.setSlot(attachedMosaic.mosaicHex, attachedMosaic.uid);
                    Vue.set(this.formItems.attachedMosaics, index, attachedMosaic);
                });
            });
        }
        this.triggerChange();
    }

    /**
     * Returns the mosaic list of the current account or current signer
     * depending on the multisig situation
     * @protected
     * @returns
     */
    protected currentMosaicList(): MosaicModel[] {
        // filter out expired mosaics
        return this.balanceMosaics.filter((mosaicInfo) => {
            // calculate expiration
            const expiration = MosaicService.getExpiration(
                mosaicInfo,
                this.currentHeight,
                this.networkConfiguration.blockGenerationTargetTime,
            );
            // skip if mosaic is expired
            return expiration !== 'expired';
        });
    }

    /**
     * Getter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @return {TransferTransaction[]}
     */
    protected getTransactions(): TransferTransaction[] {
        const mosaicsInfo = this.$store.getters['mosaic/mosaics'] as MosaicModel[];
        const mosaics = this.formItems.attachedMosaics
            .filter(({ uid }) => uid) // filter out null values
            .map(
                (spec: MosaicAttachment): Mosaic => {
                    const info = mosaicsInfo.find((i) => i.mosaicIdHex === spec.mosaicHex);
                    const div = info ? info.divisibility : 0;
                    // - format amount to absolute
                    return new Mosaic(new MosaicId(RawUInt64.fromHex(spec.mosaicHex)), UInt64.fromUint(spec.amount * Math.pow(10, div)));
                },
            );
        return [
            TransferTransaction.create(
                Deadline.create(),
                this.instantiatedRecipient,
                mosaics.length ? mosaics : [],
                PlainMessage.create(this.formItems.messagePlain || ''),
                this.networkType,
                UInt64.fromUint(this.formItems.maxFee),
            ),
        ];
    }

    /**
     * Setter for TRANSFER transactions that will be staged
     * @see {FormTransactionBase}
     * @param {TransferTransaction[]} transactions
     * @throws {Error} If not overloaded in derivate component
     */
    protected setTransactions(transactions: TransferTransaction[]) {
        // - this form creates only 1 transaction
        const transaction = transactions.shift();

        // - populate recipient
        this.formItems.recipientRaw =
            transaction.recipientAddress instanceof NamespaceId
                ? transaction.recipientAddress.fullName
                : transaction.recipientAddress.plain();

        // - populate attached mosaics
        this.formItems.attachedMosaics = this.mosaicsToAttachments(transaction.mosaics);

        // - populate message
        this.formItems.messagePlain = transaction.message.payload;

        // - populate maxFee
        this.formItems.maxFee = transaction.maxFee.compact();
    }

    /// region computed properties getter/setter
    /**
     * Recipient used in the transaction
     * @readonly
     * @protected
     * @type {(Address | NamespaceId)}
     */
    protected get instantiatedRecipient(): Address | NamespaceId {
        const { recipientRaw } = this.formItems;
        if (AddressValidator.validate(recipientRaw)) {
            return Address.createFromRawAddress(recipientRaw);
        } else if (AliasValidator.validate(recipientRaw)) {
            return new NamespaceId(recipientRaw);
        } else {
            return null;
        }
    }

    /// end-region computed properties getter/setter

    /**
     * Hook called when the child component MosaicAttachmentDisplay triggers
     * the event 'delete'
     * @return {void}
     */
    public onDeleteMosaic(id: MosaicId) {
        const updatedAttachedMosaics = [...this.formItems.attachedMosaics].filter(({ mosaicHex }) => mosaicHex !== id.toHex());

        // fixes reactivity on attachedMosaics (observer resolution)
        Vue.set(this.formItems, 'attachedMosaics', updatedAttachedMosaics);
    }

    /**
     * Hook called when the child component ButtonAdd triggers
     * the event 'click'
     * @return {void}
     */
    protected onMosaicInputChange(payload: { mosaicAttachment: MosaicAttachment; inputIndex: number }): void {
        const { mosaicAttachment, inputIndex } = payload;

        // set slot
        this.mosaicInputsManager.setSlot(mosaicAttachment.mosaicHex, inputIndex);

        // update formItems
        const newAttachedMosaics = [...this.formItems.attachedMosaics];
        const indexToUpdate = newAttachedMosaics.findIndex(({ uid }) => uid == inputIndex);
        newAttachedMosaics[indexToUpdate] = mosaicAttachment;
        Vue.set(this.formItems, 'attachedMosaics', newAttachedMosaics);
        this.triggerChange();
    }

    /**
     * Handle deletion of a mosaic input
     * @protected
     * @param {number} inputIndex
     */
    protected onDeleteMosaicInput(index: number): void {
        // unset mosaic input slot
        this.mosaicInputsManager.unsetSlot(index);

        // update formItems, set input uid to null
        const indexToUpdate = this.formItems.attachedMosaics.findIndex(({ uid }) => uid == index);
        Vue.set(this.formItems.attachedMosaics, indexToUpdate, { uid: null });
        // delete the last one in order to re-render the list
        this.formItems.attachedMosaics.pop();
        this.triggerChange();
    }

    /**
     * Internal helper to format a {Mosaic} entry into
     * an array of MosaicAttachment used in this form.
     * @internal
     * @param {Mosaic[]} mosaics
     * @return {MosaicAttachment[]}
     */
    private mosaicsToAttachments(mosaics: Mosaic[]): MosaicAttachment[] {
        return mosaics
            .map((mosaic) => {
                const info = this.balanceMosaics.find((m) => mosaic.id.toHex() === m.mosaicIdHex);
                if (!info) {
                    return null;
                }
                // amount will be converted to RELATIVE
                return {
                    id: new MosaicId(info.mosaicIdHex), // XXX resolve mosaicId from namespaceId
                    mosaicHex: info.mosaicIdHex, // XXX resolve mosaicId from namespaceId
                    name: info.name,
                    amount: mosaic.amount.compact() / Math.pow(10, info.divisibility),
                    uid: Math.floor(Math.random() * 10e6), // used to index dynamic inputs
                };
            })
            .filter((a) => a);
    }

    /**
     *  Hook called when adding a new mosaic attachment input
     * @protected
     */
    protected addMosaicAttachmentInput(): void {
        if (!this.mosaicInputsManager.hasFreeSlots()) {
            return;
        }

        // generate id and prepare mosaic for slot
        const uid = Math.floor(Math.random() * 10e6);
        const [mosaicToAffectToNewInput] = this.mosaicInputsManager.getMosaicsBySlot(uid);

        // update inputs manager and form items
        this.mosaicInputsManager.setSlot(mosaicToAffectToNewInput, uid);
        this.formItems.attachedMosaics.push({
            mosaicHex: mosaicToAffectToNewInput,
            amount: 0,
            uid,
        });

        this.triggerChange();
    }

    /**
     * Handler when changing message
     */
    onChangeMessage() {
        this.triggerChange();
    }

    /**
     * Handler when changing recipient
     */
    onChangeRecipient() {
        // filter tags
        this.formItems.recipientRaw = FilterHelpers.stripFilter(this.formItems.recipientRaw);
        this.triggerChange();
    }

    /**
     * Handler when changing max fee
     */
    onChangeMaxFee() {
        if (this.formItems.recipientRaw && this.formItems.recipientRaw !== '') {
            this.triggerChange();
        }
    }

    triggerChange() {
        if (this.formItems.recipientRaw && this.formItems.recipientRaw !== '') {
            this.transactions = this.getTransactions();
            // avoid error
            if (this.transactions) {
                const data: ITransactionEntry[] = [];
                this.transactions.map((item: TransferTransaction) => {
                    data.push({
                        transaction: item,
                        attachments: this.mosaicsToAttachments(item.mosaics),
                    });
                });

                this.$emit('onTransactionsChange', data);
                this.calculateDynamicFees();
            }
        } else {
            this.transactions = null;
            this.resetDynamicFees();
        }
    }

    /**
     * Resetting the form when choosing a multisig signer and changing multisig signer
     * Is necessary to make the mosaic inputs reactive
     */
    @Watch('selectedSigner')
    onSelectedSignerChange() {
        if (this.isMultisigMode()) {
            this.resetForm();
        }
    }

    /**
     * ModalTransactionUriImport modal page close event handler
     */
    onImportTransactionURIModalClose() {
        this.isImportTransactionUriModalVisible = false;
    }

    /**
     * Import transactionURI complete event handler
     * @param transaction transaction to be imported
     */
    onImportTransaction(transaction: Transaction) {
        this.importedTransaction = transaction;
        this.resetForm();
    }

    /**
     * Calculates the dynamic fees based on the txs size
     * */
    private calculateDynamicFees() {
        this.createTransactionCommandForFee(feesConfig.median)
            .getTotalMaxFee()
            .subscribe((val) => (this.calculatedRecommendedFee = val.compact()));

        this.createTransactionCommandForFee(feesConfig.highest)
            .getTotalMaxFee()
            .subscribe((val) => (this.calculatedHighestFee = val.compact()));
    }

    /**
     * Creates a TransactionCommand object to calculate total fee
     * for the given dynamic fee (Recommended/Highest)
     * @param {number} maxFee
     */
    private createTransactionCommandForFee(maxFee: number): TransactionCommand {
        const transactions = this.getTransactions().map((t) => {
            //@ts-ignore
            t.maxFee = UInt64.fromUint(maxFee);
            return t;
        });

        const mode = this.getTransactionCommandMode(transactions);
        return new TransactionCommand(
            mode,
            this.selectedSigner,
            this.currentSignerPublicKey,
            transactions,
            this.networkMosaic,
            this.generationHash,
            this.networkType,
            this.networkConfiguration,
            this.transactionFees,
            this.currentSignerMultisigInfo ? this.currentSignerMultisigInfo.minApproval : this.selectedSigner.requiredCosignatures,
        );
    }

    /**
     * Resets calculated dynamic fees
     */
    private resetDynamicFees() {
        this.calculatedRecommendedFee = 0;
        this.calculatedHighestFee = 0;
    }
}

'''
'''--- src/views/forms/FormTransferTransaction/MosaicInputsManager.ts ---
// internal dependencies
import Vue from 'vue';
import { MosaicModel } from '@/core/database/entities/MosaicModel';

export class MosaicInputsManager {
    /**
     * Maps mosaic hex ids to slots (input indexes)
     * @private
     */
    private mosaicMap: Record<string, number | null> = {};

    /**
     * Initialize a new instance of MosaicInputsManager
     * @static
     * @param {MosaicModel[]} mosaics
     * @param {MosaicService} mosaicService
     * @returns {MosaicInputsManager}
     */
    public static initialize(mosaics: MosaicModel[]): MosaicInputsManager {
        return new MosaicInputsManager(mosaics || []);
    }

    /**
     * Creates an instance of MosaicInputsManager.
     * @param {MosaicModel[]} mosaics
     */
    private constructor(mosaics: MosaicModel[]) {
        // Set mosaicMap with null values
        mosaics.forEach(({ mosaicIdHex }) => Vue.set(this.mosaicMap, mosaicIdHex, null));
    }

    /**
     * Add mosaics to the manager after initialization
     * @param {MosaicModel[]} mosaics
     */
    public addMosaics(mosaics: MosaicModel[]): void {
        mosaics.forEach(({ mosaicIdHex }) => {
            // skip if the mosaic is known
            if (this.mosaicMap[mosaicIdHex]) {
                return;
            }
            // add the mosaic
            Vue.set(this.mosaicMap, mosaicIdHex, null);
        });
    }

    /**
     * Whether the mosaicMap has a free slot
     * If yes, a new mosaic input can be created
     * @returns {boolean}
     */
    public hasFreeSlots(): boolean {
        return Object.values(this.mosaicMap).find((values) => values === null) !== undefined;
    }

    /**
     * Allocates a mosaic hex to a slot
     * @param {string} hexId
     * @param {number} index
     */
    public setSlot(hexId: string, index: number): void {
        // get the slot
        const slot = this.mosaicMap[hexId];

        // throw if a slot does not exist for the provided mosaic id
        if (slot === undefined) {
            throw new Error(`${hexId} does not exist in ${JSON.stringify(this.mosaicMap)}`);
        }

        // throw if the slot is already allocated to another input
        if (slot !== null && slot !== index) {
            throw new Error(`${hexId} is already allocated to input ${slot}`);
        }

        // unset the current slot allocation
        this.unsetSlot(index);

        // allocate the entry
        Vue.set(this.mosaicMap, hexId, index);
    }

    /**
     * Set a slot to null
     * @param {number} index
     */
    public unsetSlot(index: number): void {
        // get the slot entry
        const entry = this.getEntryBySlot(index);

        // ignore if the slot had no allocated entry
        if (entry === undefined) {
            return;
        }

        // unset the entry slot allocation
        const [hexId] = entry;
        Vue.set(this.mosaicMap, hexId, null);
    }

    /**
     * Returns mosaics that can be used by a slot
     * @param {number} index
     * @returns {string[]}
     */
    public getMosaicsBySlot(index: number): string[] {
        // get allocated mosaic
        const allocatedEntry = this.getEntryBySlot(index);

        // get non-allocated entries
        const nonAllocatedEntries = Object.entries(this.mosaicMap)
            .filter(([, slot]) => slot === null)
            .map(([hex]) => hex);

        return allocatedEntry ? [allocatedEntry[0], ...nonAllocatedEntries] : nonAllocatedEntries;
    }

    /**
     * Returns an entry given a slot number
     * @private
     * @param {number} index
     * @returns {([string, number] | undefined)}
     */
    private getEntryBySlot(index: number): [string, number] | undefined {
        return Object.entries(this.mosaicMap).find(([, slot]) => slot == index);
    }
}

'''
'''--- src/views/layout/PageLayout/PageLayoutTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { NetworkType } from 'symbol-sdk';
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountService } from '@/services/AccountService';
// child components
// @ts-ignore
import AppLogo from '@/components/AppLogo/AppLogo.vue';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import PageNavigator from '@/components/PageNavigator/PageNavigator.vue';
// @ts-ignore
import WindowControls from '@/components/WindowControls/WindowControls.vue';
// @ts-ignore
import PeerSelector from '@/components/PeerSelector/PeerSelector.vue';
// @ts-ignore
import LanguageSelector from '@/components/LanguageSelector/LanguageSelector.vue';
// @ts-ignore
import AccountSelectorField from '@/components/AccountSelectorField/AccountSelectorField.vue';
// @ts-ignore
import ModalDebugConsole from '@/views/modals/ModalDebugConsole/ModalDebugConsole.vue';
//@ts-ignore
import Settings from '@/components/Settings/Settings.vue';
import { URLInfo } from '@/core/utils/URLInfo';

//@ts-ignore
import ImportQRButton from '@/components/QRCode/ImportQRButton/ImportQRButton.vue';
import { AccountModel } from '@/core/database/entities/AccountModel';
@Component({
    components: {
        AppLogo,
        ErrorTooltip,
        PageNavigator,
        WindowControls,
        PeerSelector,
        LanguageSelector,
        AccountSelectorField,
        ModalDebugConsole,
        Settings,
        ImportQRButton,
    },
    computed: {
        ...mapGetters({
            currentPeer: 'network/currentPeer',
            isConnected: 'network/isConnected',
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
            currentProfile: 'profile/currentProfile',
            isCosignatoryMode: 'account/isCosignatoryMode',
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class PageLayoutTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Currently active peer
     * @see {Store.Network}
     * @var {Object}
     */
    public currentPeer: URLInfo;

    /**
     * Whether the connection is up
     * @see {Store.Network}
     * @var {boolean}
     */
    public isConnected: boolean;

    /**
     * Current networkType
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Current generationHash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Whether cosignatory mode is active
     * @see {Store.Account}
     * @var {boolean}
     */
    public isCosignatoryMode: boolean;

    /**
     * Whether currently displaying debug console
     * @var {boolean}
     */
    public isDisplayingDebugConsole: boolean = false;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /// region computed properties getter/setter
    /**
     * Holds alert message
     * @var {Object}
     */
    get alert(): { show: boolean; message: string } {
        if (!this.currentPeer || !this.isConnected) {
            return {
                show: true,
                message: 'node_not_available_please_check_your_node_or_network_settings',
            };
        }

        if (this.currentProfile && this.currentProfile.networkType !== this.networkType) {
            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);
            return {
                show: true,
                message: 'account_network_type_does_not_match_current_network_type',
            };
        }

        if (this.currentProfile && this.currentProfile.generationHash !== this.generationHash) {
            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);
            return {
                show: true,
                message: 'account_network_does_not_match_current_network_type',
            };
        }

        return { show: false, message: '' };
    }

    get info(): { show: boolean; message: string } {
        if (this.isCosignatoryMode) {
            return { show: true, message: 'info_active_cosignatory_mode' };
        }

        return { show: false, message: '' };
    }

    get hasDebugConsoleModal(): boolean {
        return this.isDisplayingDebugConsole;
    }

    set hasDebugConsoleModal(f: boolean) {
        this.isDisplayingDebugConsole = f;
    }

    /// end-region computed properties getter/setter

    public async onChangeAccount(accountId: string) {
        const service = new AccountService();
        const account = service.getAccount(accountId);
        if (!account) {
            console.log('Wallet not found: ', accountId);
            return;
        }

        await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);
    }
}

'''
'''--- src/views/modals/ModalFormAccountNameUpdate/ModalFormAccountNameUpdateTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
// child components
// @ts-ignore
import FormAccountNameUpdate from '@/views/forms/FormAccountNameUpdate/FormAccountNameUpdate.vue';

@Component({
    components: {
        FormAccountNameUpdate,
    },
})
export class ModalFormAccountNameUpdateTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Hook called when child component FormSubAccountCreation emits
     * the 'submit' event.
     */
    public onSubmit() {
        this.show = false;
    }
}

'''
'''--- src/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlockTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { Account, Password } from 'symbol-sdk';
// internal dependencies
// child components
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';

@Component({
    components: {
        FormProfileUnlock,
    },
})
export class ModalFormProfileUnlockTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    @Prop({
        default: () => true,
    })
    onSuccess: (a: Account, p: Password) => boolean;

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     * @param {Password} password
     * @return {void}
     */
    public onAccountUnlocked(payload: { account: Account; password: Password }) {
        // - log about unlock success
        this.$store.dispatch('diagnostic/ADD_INFO', `Account ${payload.account.address.plain()} unlocked successfully.`);

        // - emit success
        this.$emit('success', payload.account.publicAccount);

        // - dispatch callback
        this.show = false;
        return this.onSuccess(payload.account, payload.password);
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }
}

'''
'''--- src/views/modals/ModalFormSubAccountCreation/ModalFormSubAccountCreationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
// child components
// @ts-ignore
import FormSubAccountCreation from '@/views/forms/FormSubAccountCreation/FormSubAccountCreation.vue';

@Component({
    components: {
        FormSubAccountCreation,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class ModalFormSubAccountCreationTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    /**
     * Hook called when child component FormSubAccountCreation emits
     * the 'submit' event.
     */
    public onSubmit() {
        this.show = false;
    }
}

'''
'''--- src/views/modals/ModalHarvestingWizard/ModalHarvestingWizardTs.ts ---
// external dependencies
import { Account, AccountInfo, AccountType, PublicAccount, NetworkType } from 'symbol-sdk';
import { AccountModel, AccountType as ProfileType } from '@/core/database/entities/AccountModel';
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { TransactionCommand } from '@/services/TransactionCommand';

// child components
// @ts-ignore
import ModalWizardDisplay from '@/views/modals/ModalWizardDisplay/ModalWizardDisplay.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
// @ts-ignore
import FormRemoteAccountCreation from '@/views/forms/FormRemoteAccountCreation/FormRemoteAccountCreation.vue';
// @ts-ignore
import FormAccountKeyLinkTransaction from '@/views/forms/FormAccountKeyLinkTransaction/FormAccountKeyLinkTransaction.vue';
// @ts-ignore
import FormPersistentDelegationRequestTransaction from '@/views/forms/FormPersistentDelegationRequestTransaction/FormPersistentDelegationRequestTransaction.vue';
// @ts-ignore
import AccountAddressDisplay from '@/components/AccountAddressDisplay/AccountAddressDisplay.vue';
// @ts-ignore
import AccountPublicKeyDisplay from '@/components/AccountPublicKeyDisplay/AccountPublicKeyDisplay.vue';
// @ts-ignore
import ProtectedPrivateKeyDisplay from '@/components/ProtectedPrivateKeyDisplay/ProtectedPrivateKeyDisplay.vue';
// @ts-ignore
import FormTransactionConfirmation from '@/views/forms/FormTransactionConfirmation/FormTransactionConfirmation.vue';

/**
 * Wizard steps
 */
enum HarvestingWizardSteps {
    ACCOUNT_LINK = 0,
    SET_UP = 1,
    CONFIRMATION = 2,
}

@Component({
    components: {
        ModalWizardDisplay,
        FormRow,
        FormRemoteAccountCreation,
        FormAccountKeyLinkTransaction,
        FormPersistentDelegationRequestTransaction,
        AccountAddressDisplay,
        AccountPublicKeyDisplay,
        ProtectedPrivateKeyDisplay,
        FormTransactionConfirmation,
    },
    computed: mapGetters({
        currentAccount: 'account/currentAccount',
        currentAccountAccountInfo: 'account/currentAccountAccountInfo',
        networkType: 'network/networkType',
    }),
})
export class ModalHarvestingWizardTs extends Vue {
    /**
     * Enum representing the wizard steps
     */
    protected wizardSteps = HarvestingWizardSteps;

    protected supportedProfileTypes: ProfileType[] = [ProfileType.SEED];

    /**
     * Current account
     */
    private currentAccount: AccountModel;

    /**
     * Current account account info
     */
    private currentAccountAccountInfo: AccountInfo;

    /**
     * The current network type
     */
    private networkType: NetworkType;

    /**
     * Items that will be shown in the ModalWizardDisplay
     */
    protected wizardStepsItems = Object.keys(HarvestingWizardSteps).filter((key) => Number.isNaN(parseInt(key)));

    /**
     * Icons that will be shown in the ModalWizardDisplay
     */
    protected wizardStepsIcons = Object.keys(HarvestingWizardSteps)
        .filter((key) => Number.isNaN(parseInt(key)))
        .map((item) => {
            switch (item) {
                default:
                case 'ACCOUNT_LINK':
                    return 'ios-card';
                case 'SET_UP':
                    return 'ios-globe';
                case 'CONFIRMATION':
                    return 'md-time';
            }
        });

    /**
     * Currently active step
     */
    protected currentStepIndex = 0;

    /**
     * Sets the disabled property of the next button
     */
    protected isNextEnabled = true;

    /**
     * Remote account
     */
    protected remoteAccount: Account = null;

    /**
     * Node public key
     */
    protected nodePublicKey: string = null;

    private form: any;
    private command: TransactionCommand;

    /**
     * Modal visibility state from parent
     * @type {string}
     */
    @Prop({ default: false }) visible: boolean;

    /**
     * Internal visibility state
     * @type {boolean}
     */
    protected get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    protected set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Hook called when the next button is clicked
     */
    protected onNextClicked(): void {
        let nextStepIndex = (this.currentStepIndex += 1);

        // skip the account link step if the current account is already linked
        if (nextStepIndex === this.wizardSteps.ACCOUNT_LINK && this.isCurrentAccountLinked) {
            nextStepIndex += 1;
        }

        if (nextStepIndex === this.wizardSteps.CONFIRMATION) {
            this.command = (this.$refs.delegationRequest as FormPersistentDelegationRequestTransaction).onSubmit();
            if (!this.command) {
                nextStepIndex -= 1;
                this.currentStepIndex = nextStepIndex;
                return;
            }
        } else if (nextStepIndex === this.wizardSteps.CONFIRMATION + 1) {
            (this.$refs.confirmationForm as FormTransactionConfirmation).onSubmit();
            this.show = false;
            return;
        }

        this.currentStepIndex = nextStepIndex;
    }

    private get isCurrentAccountLinked(): boolean {
        return this.currentAccountAccountInfo && this.currentAccountAccountInfo.accountType === AccountType.Main;
    }

    private get linkedAccount(): PublicAccount {
        if (!this.currentAccountAccountInfo || !this.currentAccountAccountInfo.supplementalPublicKeys.linked) {
            return undefined;
        }

        return PublicAccount.createFromPublicKey(this.currentAccountAccountInfo.supplementalPublicKeys.linked.publicKey, this.networkType);
    }

    /**
     * Hook called when the previous button is called
     */
    protected onPreviousClicked(): void {
        this.currentStepIndex = this.currentStepIndex -= 1;
    }

    /**
     * Hook called when a child component toggles the disabled state of the next button
     * @param {boolean} bool
     */
    protected onNextToggled(bool: boolean): void {
        this.isNextEnabled = bool;
    }

    /**
     * Hook called when a child component sets the remote account
     * @param {Account} remoteAccount
     */
    protected onSetRemoteAccount(remoteAccount: Account): void {
        this.remoteAccount = remoteAccount;
        this.onNextClicked();
    }

    /**
     * Hook called when a child component sets the node public key
     * @param {string} nodePublicKey
     */
    protected onSetNodePublicKey(nodePublicKey: string): void {
        this.nodePublicKey = nodePublicKey;
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'success'
     */
    public onConfirmationSuccess() {
        this.$emit('on-confirmation-success');
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'error'
     * @return {void}
     */
    public onConfirmationError(error: string) {
        this.$store.dispatch('notification/ADD_ERROR', error);
    }

    /**
     * Hook called when the child component ModalTransactionConfirmation triggers
     * the event 'close'
     * @return {void}
     */
    public onConfirmationCancel() {
        this.show = false;
    }

    /**
     * Hook called when the component is created
     */
    public created() {
        this.$emit('toggleNext', false);
        this.form = this.$refs.form;

        if (!this.supportedProfileTypes.includes(this.currentAccount.type)) {
            this.wizardStepsItems = ['ACCOUNT_LINK'];
        }
    }
}

'''
'''--- src/views/modals/ModalImportQR/ModalImportQRTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';

//@ts-ignore
import UploadQRCode from '@/components/QRCode/UploadQRCode/UploadQRCode.vue';

//@ts-ignore
import QRCodePassword from '@/components/QRCode/QRCodePassword/QRCodePassword.vue';

//@ts-ignore
import ModalWizardDisplay from '@/views/modals/ModalWizardDisplay/ModalWizardDisplay.vue';

// @ts-ignore
import QRCodeActions from '@/components/QRCode/QRCodeActions/QRCodeActions.vue';

import { QRCode, QRCodeType } from 'symbol-qr-library';

@Component({
    components: { UploadQRCode, QRCodePassword, ModalWizardDisplay, QRCodeActions },
})
export class ModalImportQRTs extends Vue {
    @Prop({ default: false }) readonly visible: boolean;

    @Prop({ default: [QRCodeType.AddContact, QRCodeType.RequestTransaction, QRCodeType.ExportObject] })
    readonly validQrTypes!: QRCodeType[];

    /**
     * json content of uploaded qrcode
     * @type string
     */
    qrcodeJson: string = null;

    /**
     * generated QR Code from uploaded qrcode image(json)
     * @type QRCode
     */
    qrCode: QRCode = null;

    wizardSteps = {
        items: ['upload_qr_code', 'preview_and_action'],
        icons: [],
        currentStepInx: 0,
    };

    /**
     * Internal visibility state
     * @type {boolean}
     */
    protected get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    protected set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * QR Code upload & decode complete handler
     * @param {string} json decoded from uploaded qrcode
     */
    public onUploadComplete(json) {
        this.qrcodeJson = json;
        setTimeout(() => (this.wizardSteps.currentStepInx = 1), 1200); // labor illusion
    }

    /**
     * QRCode generation complete handler
     * @param ${QRCode} qrCode generated
     */
    public onQrCodeGenerated(qrCode: QRCode) {
        this.qrCode = qrCode;
    }
}

'''
'''--- src/views/modals/ModalMnemonicBackupWizard/ModalMnemonicBackupWizardTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';

@Component({
    components: {},
})
export class ModalMnemonicBackupWizardTs extends Vue {}

'''
'''--- src/views/modals/ModalMnemonicDisplay/ModalMnemonicDisplayTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Account, Password, Crypto } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
// child components
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// @ts-ignore
import MnemonicDisplay from '@/components/MnemonicDisplay/MnemonicDisplay.vue';

@Component({
    components: {
        FormProfileUnlock,
        MnemonicDisplay,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
        }),
    },
})
export class ModalMnemonicDisplayTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    public hasMnemonicInfo: boolean = false;
    public mnemonic: MnemonicPassPhrase;

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    get words(): string[] {
        if (!this.mnemonic) {
            return [];
        }
        return this.mnemonic.plain.split(' ');
    }

    /**
     * Hook called when the account has been unlocked
     * @param {Account} account
     * @return {boolean}
     */
    public onAccountUnlocked(payload: { account: Account; password: Password }): boolean {
        // decrypt seed + create QR
        const encSeed = this.currentProfile.seed;
        const plnSeed = Crypto.decrypt(encSeed, payload.password.value);

        try {
            this.mnemonic = new MnemonicPassPhrase(plnSeed);

            // display mnemonic
            this.hasMnemonicInfo = true;
            return true;
        } catch (e) {
            console.error('error mnemonic: ', e);
        }

        return false;
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }
}

'''
'''--- src/views/modals/ModalMnemonicExport/ModalMnemonicExportTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Account, NetworkType, Password, Crypto } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
import { MnemonicQR, QRCodeGenerator } from 'symbol-qr-library';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
// child components
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// resources
// @ts-ignore
import failureIcon from '@/views/resources/img/monitor/failure.png';

@Component({
    components: { FormProfileUnlock },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
        }),
    },
})
export class ModalMnemonicExportTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    /**
     * Current networkType
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Current generationHash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    public qrBase64: string = failureIcon;
    public hasMnemonicInfo: boolean = false;
    public exportMnemonicQR: MnemonicQR;

    public created() {
        this.$eventToObservable('onAccountUnlocked').subscribe(async () => {
            this.qrBase64 = await this.exportMnemonicQR.toBase64().toPromise();
        });
    }

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Hook called when the account has been unlocked
     * @param {Account} account
     * @return {boolean}
     */
    public onAccountUnlocked(payload: { account: Account; password: Password }): boolean {
        // decrypt seed + create QR
        const encSeed = this.currentProfile.seed;
        const plnSeed = Crypto.decrypt(encSeed, payload.password.value);

        try {
            this.exportMnemonicQR = QRCodeGenerator.createExportMnemonic(
                new MnemonicPassPhrase(plnSeed),
                payload.password.value,
                this.networkType,
                this.generationHash,
            );

            this.$emit('onAccountUnlocked', this.exportMnemonicQR);

            // display mnemonic
            this.hasMnemonicInfo = true;
            return true;
        } catch (e) {
            console.error('error mnemonic: ', e);
        }

        return false;
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }

    /**
     * Hook called when the download QR button is pressed
     * @return {void}
     */
    public onDownloadQR() {
        if (!this.exportMnemonicQR) {
            return;
        }

        // - read QR code base64
        const QRCode: any = document.querySelector('#qrImg');
        if (!QRCode) {
            return;
        }
        const url = QRCode.src;

        // - create link (<a>)
        const a = document.createElement('a');
        const event = new MouseEvent('click');
        const profileName = this.currentProfile.profileName;
        a.download = `qr_account_mnemonic_${profileName}`;
        a.href = url;
        // - start download
        a.dispatchEvent(event);
    }
}

'''
'''--- src/views/modals/ModalNetworkNotMatchingProfile/ModalNetworkNotMatchingProfileTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Vue, Component, Prop } from 'vue-property-decorator';

@Component
export class ModalNetworkNotMatchingProfileTs extends Vue {
    @Prop({ default: false }) visible: boolean;
    /**
     * Internal visibility state
     * @type {boolean}
     */
    protected get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    protected set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Logout user and redirect to login page
     */
    private async logout() {
        await this.$store.dispatch('profile/LOG_OUT');
        this.$emit('close');
        this.$router.push({ name: 'profiles.login' });
    }
    /**
     * Logout user and redirect to create profile page
     */
    private async createNewProfile() {
        await this.$store.dispatch('profile/LOG_OUT');
        this.$emit('close');
        this.$router.push({ name: 'profiles.importProfile.importStrategy' });
    }
}

'''
'''--- src/views/modals/ModalSettings/ModalSettingsTs.ts ---
import { Vue, Component, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { AccountModel } from '@/core/database/entities/AccountModel';
// @ts-ignore
import FormGeneralSettings from '@/views/forms/FormGeneralSettings/FormGeneralSettings.vue';
// @ts-ignore
import FormProfilePasswordUpdate from '@/views/forms/FormProfilePasswordUpdate/FormProfilePasswordUpdate.vue';
// @ts-ignore
import AboutPage from '@/views/pages/settings/AboutPage/AboutPage.vue';
// @ts-ignore
import NavigationLinks from '@/components/NavigationLinks/NavigationLinks.vue';
//@ts-ignore
import FormNodeEdit from '@/views/forms/FormNodeEdit/FormNodeEdit.vue';

/**
 * Settings pages
 */
enum SettingsTabs {
    GENERAL = 0,
    PASSWORD = 1,
    NETWORK = 2,
    ABOUT = 3,
}

@Component({
    components: {
        FormGeneralSettings,
        FormProfilePasswordUpdate,
        AboutPage,
        FormNodeEdit,
        NavigationLinks,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class ModalSettingsTs extends Vue {
    /// region component properties
    @Prop({ default: false }) visible: boolean;
    /// end-region component properties

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Enum representing the available settings tabs
     * @see ModalSettings.vue
     */
    protected knownTabs = SettingsTabs;

    /**
     * Items that will be shown in the ModalWizardDisplay
     */
    protected availableTabs = Object.keys(this.knownTabs).filter((key) => Number.isNaN(parseInt(key)));

    /**
     * Currently active tab
     * In case of unauthenticated user, network tab is default
     */
    protected currentTabIndex = 0;

    created() {
        // when on /profiles route, only the NETWORK tab should be displayed
        this.availableTabs = this.availableTabs.filter((key) => !!this.currentAccount || key === 'NETWORK');
    }

    /**
     * Internal visibility state
     * @type {boolean}
     */
    protected get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    protected set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Catches the @selected event
     */
    protected onTabChange(index: number) {
        this.currentTabIndex = index;
    }
}

'''
'''--- src/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Account, Transaction } from 'symbol-sdk';
// internal dependencies
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { AccountTransactionSigner, TransactionAnnouncerService, TransactionSigner } from '@/services/TransactionAnnouncerService';
// child components
// @ts-ignore
import TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// @ts-ignore
import HardwareConfirmationButton from '@/components/HardwareConfirmationButton/HardwareConfirmationButton.vue';
import { TransactionCommand } from '@/services/TransactionCommand';

@Component({
    components: {
        TransactionDetails,
        FormProfileUnlock,
        HardwareConfirmationButton,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class ModalTransactionConfirmationTs extends Vue {
    @Prop({
        default: false,
    })
    public visible: boolean;

    @Prop({
        required: true,
    })
    public command: TransactionCommand;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * List of transactions on-stage
     * @see {Store.Account}
     * @var {Transaction[]}
     */
    public stagedTransactions: Transaction[] = [];

    public async mounted() {
        this.stagedTransactions = await this.command.resolveTransactions().toPromise();
    }

    /// region computed properties getter/setter
    /**
     * Returns whether current account is a hardware wallet
     * @return {boolean}
     */
    public get isUsingHardwareWallet(): boolean {
        // XXX should use "stagedTransaction.signer" to identify account
        return AccountType.TREZOR === this.currentAccount.type;
    }

    /**
     * Visibility state
     * @type {boolean}
     */
    public get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    public set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }
    /// end-region computed properties getter/setter

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     *
     * This hook shall *sign transactions* with the \a account
     * that has been unlocked. Subsequently it will also announce
     * the signed transaction.
     *
     */
    public async onAccountUnlocked({ account }: { account: Account }): Promise<void> {
        // - log about unlock success
        this.$store.dispatch('diagnostic/ADD_INFO', `Account ${account.address.plain()} unlocked successfully.`);
        // - get transaction stage config
        return this.onSigner(new AccountTransactionSigner(account));
    }

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     *
     * This hook shall *sign transactions* with the \a account
     * that has been unlocked. Subsequently it will also announce
     * the signed transaction.
     *
     */
    public async onSigner(transactionSigner: TransactionSigner): Promise<void> {
        // - log about unlock success
        // - get transaction stage config
        const announcements = await this.command.announce(new TransactionAnnouncerService(this.$store), transactionSigner).toPromise();
        announcements.forEach((announcement) => {
            announcement.subscribe((res) => {
                if (!res.success) {
                    this.$store.dispatch('notification/ADD_ERROR', res.error, { root: true });
                }
            });
        });
        // - notify about successful transaction announce
        this.$store.dispatch('notification/ADD_SUCCESS', 'success_transactions_signed');
        this.$emit('success');
        this.show = false;
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }
}

'''
'''--- src/views/modals/ModalTransactionCosignature/ModalTransactionCosignatureTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue, Watch } from 'vue-property-decorator';
import {
    Account,
    AggregateTransaction,
    AggregateTransactionCosignature,
    CosignatureTransaction,
    MultisigAccountInfo,
    NetworkType,
    TransactionStatus,
} from 'symbol-sdk';
import { mapGetters } from 'vuex';

import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { AccountTransactionSigner, TransactionAnnouncerService, TransactionSigner } from '@/services/TransactionAnnouncerService';
// child components
// @ts-ignore
import TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
// @ts-ignore
import HardwareConfirmationButton from '@/components/HardwareConfirmationButton/HardwareConfirmationButton.vue';
import { CosignatureQR } from 'symbol-qr-library';
// @ts-ignore
import QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';

@Component({
    components: {
        TransactionDetails,
        FormProfileUnlock,
        HardwareConfirmationButton,
        QRCodeDisplay,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
            currentAccountMultisigInfo: 'account/currentAccountMultisigInfo',
        }),
    },
})
export class ModalTransactionCosignatureTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    @Prop({
        default: null,
    })
    transactionHash: string;

    /**
     * Aggregate transaction fetched by transactionHash
     */
    transaction: AggregateTransaction = null;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /**
     * Network type
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Current generationHash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * Current account multisig info
     * @type {MultisigAccountInfo}
     */
    public currentAccountMultisigInfo: MultisigAccountInfo;

    /**
     * Whether transaction has expired
     */
    public expired: boolean = false;

    /// region computed properties
    /**
     * Visibility state
     * @type {boolean}
     */
    public get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    public set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Returns whether current account is a hardware wallet
     * @return {boolean}
     */
    public get isUsingHardwareWallet(): boolean {
        // XXX should use "stagedTransaction.signer" to identify account
        return AccountType.TREZOR === this.currentAccount.type;
    }

    public get needsCosignature(): boolean {
        // Multisig account can not sign
        if (this.currentAccountMultisigInfo && this.currentAccountMultisigInfo.isMultisig()) {
            return false;
        }
        const currentPubAccount = AccountModel.getObjects(this.currentAccount).publicAccount;
        return !this.transaction.signedByAccount(currentPubAccount);
    }

    public get cosignatures(): AggregateTransactionCosignature[] {
        return this.transaction?.cosignatures;
    }

    public get hasMissSignatures(): boolean {
        //merkleComponentHash ==='000000000000...' present that the transaction is still lack of signature
        return (
            this.transaction?.transactionInfo != null &&
            this.transaction?.transactionInfo.merkleComponentHash !== undefined &&
            this.transaction?.transactionInfo.merkleComponentHash.startsWith('000000000000')
        );
    }

    public get cosignatureQrCode(): CosignatureQR {
        // @ts-ignore
        return new CosignatureQR(this.transaction, this.networkType, this.generationHash);
    }

    @Watch('transactionHash', { immediate: true })
    public async fetchTransaction() {
        try {
            // first get the last status
            const transactionStatus: TransactionStatus = (await this.$store.dispatch('transaction/FETCH_TRANSACTION_STATUS', {
                transactionHash: this.transactionHash,
            })) as TransactionStatus;

            if (transactionStatus.group != 'failed') {
                // fetch the transaction by using the status
                this.transaction = (await this.$store.dispatch('transaction/LOAD_TRANSACTION_DETAILS', {
                    group: transactionStatus.group,
                    transactionHash: this.transactionHash,
                })) as AggregateTransaction;
            } else {
                this.expired = true;
            }
        } catch (error) {
            console.log(error);
        }
    }

    /**
     * Hook called when child component FormProfileUnlock emits
     * the 'success' event.
     *
     * This hook shall *sign transactions* with the \a account
     * that has been unlocked. Subsequently it will also announce
     * the signed transaction.
     *
     * @param {Password} password
     * @return {void}
     */
    public onAccountUnlocked({ account }: { account: Account }) {
        // - log about unlock success
        this.$store.dispatch('diagnostic/ADD_INFO', 'Account ' + account.address.plain() + ' unlocked successfully.');
        return this.onSigner(new AccountTransactionSigner(account));
    }

    public async onSigner(transactionSigner: TransactionSigner) {
        // - sign cosignature transaction
        const cosignature = CosignatureTransaction.create(this.transaction);
        const signCosignatureTransaction = await transactionSigner.signCosignatureTransaction(cosignature).toPromise();
        const res = await new TransactionAnnouncerService(this.$store)
            .announceAggregateBondedCosignature(signCosignatureTransaction)
            .toPromise();
        if (res.success) {
            this.$emit('success');
            this.show = false;
        } else {
            this.$store.dispatch('notification/ADD_ERROR', res.error, { root: true });
        }
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }
}

'''
'''--- src/views/modals/ModalTransactionDetails/ModalTransactionDetailsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { Transaction } from 'symbol-sdk';

// child components
// @ts-ignore
import TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';

@Component({
    components: {
        TransactionDetails,
    },
})
export class ModalTransactionDetailsTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    @Prop({
        default: null,
    })
    transaction: Transaction;

    /// region computed properties

    /**
     * Visibility state
     * @type {boolean}
     */
    public get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    public set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }
    /// end-region computed properties
}

'''
'''--- src/views/modals/ModalTransactionExport/ModalTransactionExportTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Prop, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Transaction } from 'symbol-sdk';

// child components
// @ts-ignore
import FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';
import { CSVHelpers } from '@/core/utils/CSVHelpers';

@Component({
    components: { FormProfileUnlock },
    computed: {
        ...mapGetters({
            confirmedTransactions: 'transaction/confirmedTransactions',
            partialTransactions: 'transaction/partialTransactions',
            unconfirmedTransactions: 'transaction/unconfirmedTransactions',
        }),
    },
})
export class ModalTransactionExportTs extends Vue {
    @Prop({
        default: false,
    })
    visible: boolean;

    public hasTransactionExportInfo: boolean = false;

    /**
     * List of confirmed transactions (per-request)
     */
    public confirmedTransactions: Transaction[];

    /**
     * List of unconfirmed transactions (per-request)
     */
    public unconfirmedTransactions: Transaction[];

    /**
     * List of confirmed transactions (per-request)
     */
    public partialTransactions: Transaction[];

    /**
     * Visibility state
     * @type {boolean}
     */
    get show(): boolean {
        return this.visible;
    }

    /**
     * Emits close event
     */
    set show(val) {
        if (!val) {
            this.$emit('close');
        }
    }

    /**
     * Hook called when the account has been unlocked
     * @return {boolean}
     */
    public onAccountUnlocked(): boolean {
        this.hasTransactionExportInfo = true;
        return true;
    }

    /**
     * Hook called when child component FormProfileUnlock or
     * HardwareConfirmationButton emit the 'error' event.
     * @param {string} message
     * @return {void}
     */
    public onError(error: string) {
        this.$emit('error', error);
    }

    /**
     * The download transactions csv
     * @return {void}
     */
    public onDownloadTx() {
        const transactions = this.getTransactions();
        CSVHelpers.exportCSV(transactions, 'transactions');
    }

    /**
     * Transactions list
     */
    private getTransactions() {
        return [...this.unconfirmedTransactions, ...this.partialTransactions, ...this.confirmedTransactions];
    }
}

'''
'''--- src/views/modals/ModalTransactionUriImport/ModalTransactionUriImportTs.ts ---
import { Vue, Component, Prop } from 'vue-property-decorator';

import { TransactionURI } from 'symbol-uri-scheme';
// @ts-ignore
import ModalFormWrap from '@/views/modals/ModalFormWrap/ModalFormWrap.vue';
// @ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
// @ts-ignore
import FormWrapper from '@/components/FormWrapper/FormWrapper.vue';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';

@Component({
    components: {
        ModalFormWrap,
        ButtonCopyToClipboard,
        FormWrapper,
        FormRow,
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
    },
})
export default class ModalTransactionUriImportTs extends Vue {
    @Prop({ default: false }) visible!: boolean;

    public transactionURIModel: string = '';

    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
        provider: InstanceType<typeof ValidationProvider>;
    };

    onSubmit() {
        try {
            this.$emit('importTransaction', TransactionURI.fromURI(this.sanitizeInput(this.transactionURIModel)).toTransaction());
            this.$emit('close');
        } catch (error) {
            this.showError(error);
        }
    }

    private showError(error: string) {
        this.$refs.provider.applyResult({
            errors: [error],
            failedRules: {},
        });
    }

    private sanitizeInput(transactionURI: string) {
        if (!!transactionURI && !transactionURI.startsWith('web+symbol://')) {
            return 'web+symbol://' + transactionURI;
        }
        return transactionURI;
    }
}

'''
'''--- src/views/pages/accounts/AccountBackupPage/AccountBackupPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import AccountBackupOptions from '@/components/AccountBackupOptions/AccountBackupOptions.vue';

@Component({
    components: {
        AccountBackupOptions,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class AccountBackupPageTs extends Vue {
    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    /// region computed properties getter/setter
    /// end-region computed properties getter/setter
}

'''
'''--- src/views/pages/accounts/AccountDetailsPage/AccountDetailsPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// child components
// @ts-ignore
import AccountNameDisplay from '@/components/AccountNameDisplay/AccountNameDisplay.vue';
// @ts-ignore
import ProtectedPrivateKeyDisplay from '@/components/ProtectedPrivateKeyDisplay/ProtectedPrivateKeyDisplay.vue';
// @ts-ignore
import ImportanceScoreDisplay from '@/components/ImportanceScoreDisplay/ImportanceScoreDisplay.vue';
// @ts-ignore
import AccountContactQR from '@/components/AccountContactQR/AccountContactQR.vue';
// @ts-ignore
import AccountAddressDisplay from '@/components/AccountAddressDisplay/AccountAddressDisplay.vue';
// @ts-ignore
import AccountPublicKeyDisplay from '@/components/AccountPublicKeyDisplay/AccountPublicKeyDisplay.vue';
// @ts-ignore
import AccountActions from '@/components/AccountActions/AccountActions.vue';
// @ts-ignore
import AccountLinks from '@/components/AccountLinks/AccountLinks.vue';
// @ts-ignore
import AccountAliasDisplay from '@/components/AccountAliasDisplay/AccountAliasDisplay.vue';
import { AccountModel } from '@/core/database/entities/AccountModel';

@Component({
    components: {
        AccountNameDisplay,
        ProtectedPrivateKeyDisplay,
        ImportanceScoreDisplay,
        AccountContactQR,
        AccountActions,
        AccountLinks,
        AccountAddressDisplay,
        AccountPublicKeyDisplay,
        AccountAliasDisplay,
    },
    computed: {
        ...mapGetters({
            defaultAccount: 'app/defaultAccount',
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class AccountDetailsPageTs extends Vue {
    /**
     * Default account
     * @see {Store.Account}
     * @var {string}
     */
    public defaultAccount: string;

    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;
}

'''
'''--- src/views/pages/accounts/AccountHarvestingPage/AccountHarvestingPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import AccountActions from '@/components/AccountActions/AccountActions.vue';

@Component({
    components: {
        AccountActions,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class AccountHarvestingPageTs extends Vue {
    /**
     * Currently active account
     */
    public currentAccount: AccountModel;
}

'''
'''--- src/views/pages/accounts/AccountsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
// child components
// @ts-ignore
import NavigationTabs from '@/components/NavigationTabs/NavigationTabs.vue';
// @ts-ignore
import AccountSelectorPanel from '@/components/AccountSelectorPanel/AccountSelectorPanel.vue';

@Component({
    components: {
        NavigationTabs,
        AccountSelectorPanel,
    },
    computed: {
        ...mapGetters({}),
    },
})
export class AccountsTs extends Vue {
    /**
     * Argument passed to the navigation component
     * @var {string}
     */
    public parentRouteName: string = 'accounts';
}

'''
'''--- src/views/pages/assets/AssetFormPageWrap/AssetFormPageWrapTs.ts ---
// external dependencies
import { Component, Vue } from 'vue-property-decorator';

// child components
// @ts-ignore
import NavigationTabs from '@/components/NavigationTabs/NavigationTabs.vue';

@Component({ components: { NavigationTabs } })
export class AssetFormPageWrapTs extends Vue {
    public isViewingHelpModal: boolean = false;

    public get hasHelpModal(): boolean {
        return this.isViewingHelpModal;
    }

    public set hasHelpModal(f: boolean) {
        this.isViewingHelpModal = f;
    }
}

'''
'''--- src/views/pages/community/information/InformationTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { ArticleEntry } from '@/services/CommunityService';

@Component({
    computed: mapGetters({
        latestArticles: 'community/latestArticles',
    }),
})
export class InformationTs extends Vue {
    /**
     * List of latest articles
     */
    protected latestArticles: ArticleEntry[];
    /**
     * Hook called when the component is mounted
     */
    public async mounted() {
        await this.$store.dispatch('community/initialize');
    }

    public getPublisher(article: ArticleEntry) {
        const r_flash = new RegExp(/nemflash\.io/);
        const r_blog = new RegExp(/blog\.nem\.io/);

        if (r_flash.test(article.link)) {
            return 'nemflash.io';
        } else if (r_blog.test(article.link)) {
            return 'blog.nem.io';
        }

        return 'Unknown';
    }
}

'''
'''--- src/views/pages/dashboard/DashboardTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// child components
// @ts-ignore
import ProfileBalancesPanel from '@/components/ProfileBalancesPanel/ProfileBalancesPanel.vue';
// @ts-ignore
import NetworkStatisticsPanel from '@/components/NetworkStatisticsPanel/NetworkStatisticsPanel.vue';
// @ts-ignore
import NavigationTabs from '@/components/NavigationTabs/NavigationTabs.vue';

@Component({
    components: {
        ProfileBalancesPanel,
        NetworkStatisticsPanel,
        NavigationTabs,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class DashboardTs extends Vue {
    /**
     * Argument passed to the Router Tab List
     */
    parentRouteName = 'dashboard';
}

'''
'''--- src/views/pages/dashboard/harvesting/DashboardHarvestingPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';

// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import FormTransferTransaction from '@/views/forms/FormTransferTransaction/FormTransferTransaction.vue';

@Component({
    components: {
        FormTransferTransaction,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class DashboardHarvestingPageTs extends Vue {
    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;
}

'''
'''--- src/views/pages/dashboard/home/DashboardHomePageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import TransactionList from '@/components/TransactionList/TransactionList.vue';
import { Address } from 'symbol-sdk';

@Component({
    components: {
        TransactionList,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class DashboardHomePageTs extends Vue {
    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    public get accountAddress(): Address {
        return this.currentAccount && AccountModel.getObjects(this.currentAccount).address;
    }
}

'''
'''--- src/views/pages/dashboard/invoice/DashboardInvoicePageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { QRCodeGenerator, TransactionQR } from 'symbol-qr-library';
import { Address, NetworkType, TransferTransaction } from 'symbol-sdk';
import { MosaicAttachment } from '@/views/forms/FormTransferTransaction/FormTransferTransactionTs.ts';
// child components
// @ts-ignore
import FormTransferTransaction from '@/views/forms/FormTransferTransaction/FormTransferTransaction.vue';
// @ts-ignore
import QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';

export interface ITransactionEntry {
    transaction: TransferTransaction;
    attachments: MosaicAttachment[];
}

@Component({
    components: {
        FormTransferTransaction,
        QRCodeDisplay,
    },
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            generationHash: 'network/generationHash',
        }),
    },
})
export class DashboardInvoicePageTs extends Vue {
    /**
     * Network type
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Network's generation hash
     * @see {Store.Network}
     * @var {string}
     */
    public generationHash: string;

    /**
     * The transaction to be translated to a QR code
     * @type {ITransactionEntry[]}
     */
    public transactions: ITransactionEntry[] = [];

    /// region computed properties getter/setter
    /**
     * Recipient to be shown in the view
     * @readonly
     * @type {string}
     */
    public get recipient(): string {
        // if (!this.transactions.length) return ''

        if (!this.currentTransaction || !this.currentTransaction.recipientAddress) {
            return '';
        }

        // - read TransferTransaction instance
        // const transfer = this.transactions.shift() as TransferTransaction
        const transfer = this.currentTransaction;
        const recipient = transfer.recipientAddress;
        return recipient instanceof Address ? recipient.pretty() : recipient.toHex();
    }

    /**
     * Transaction QR code arguments
     * @readonly
     * @type {TransactionQR}
     */
    public get transactionQR(): TransactionQR {
        // if (!this.transactions.length) return null
        if (!this.currentTransaction) {
            return null;
        }

        // this.currentTransaction = this.transactions.shift() as TransferTransaction
        // - read TransferTransaction instance
        const transfer = this.currentTransaction;

        try {
            return QRCodeGenerator.createTransactionRequest(
                // @ts-ignore // @TODO SDK upgrade
                transfer,
                this.networkType,
                this.generationHash,
            );
        } catch (e) {
            return null;
        }
    }

    /**
     * The transaction object
     * @type {TransferTransaction | undefined}
     */
    get currentTransaction(): TransferTransaction | undefined {
        if (this.transactionEntry) {
            return this.transactionEntry.transaction as TransferTransaction;
        }
    }

    /**
     * The first transaction in the list stack
     * @type {ITransactionEntry}
     */
    get transactionEntry(): ITransactionEntry {
        if (this.transactions.length) {
            return this.transactions[0];
        }
    }

    /**
     * The transaction's mosaics to be displayed
     * @type {MosaicAttachment[]}
     */
    get balanceEntries(): MosaicAttachment[] {
        if (!this.transactionEntry) {
            return [];
        }
        return this.transactionEntry.attachments;
    }

    /// end-region computed properties getter/setter

    /**
     * Hook called when the child component FormTransferTransaction
     * emits the 'onTransactionsChange' event with its new transactions.
     * @param {ITransactionEntry} transactions
     */
    public onInvoiceChange(transactions: ITransactionEntry[]) {
        Vue.set(this, 'transactions', transactions);
    }
}

'''
'''--- src/views/pages/dashboard/transfer/DashboardTransferPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue, Prop } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
// internal dependencies
import { AccountModel } from '@/core/database/entities/AccountModel';
// child components
// @ts-ignore
import FormTransferTransaction from '@/views/forms/FormTransferTransaction/FormTransferTransaction.vue';
import { Address } from 'symbol-sdk';
import { AddressValidator } from '@/core/validation/validators';

@Component({
    components: {
        FormTransferTransaction,
    },
    computed: {
        ...mapGetters({
            currentAccount: 'account/currentAccount',
        }),
    },
})
export class DashboardTransferPageTs extends Vue {
    /**
     * Currently active account
     * @see {Store.Account}
     * @var {AccountModel}
     */
    public currentAccount: AccountModel;

    @Prop({ default: '' }) public recipientAddress: string;

    public get recipient(): Address {
        if (AddressValidator.validate(this.recipientAddress)) {
            return Address.createFromRawAddress(this.recipientAddress);
        }
    }
}

'''
'''--- src/views/pages/multisig/MultisigDashboardPage/MultisigDashboardPageTs.ts ---

'''
'''--- src/views/pages/namespaces/createSubNamespace/CreateSubNamespaceTs.ts ---
// external dependencies
import { Component, Vue } from 'vue-property-decorator';
// child components
// @ts-ignore
import AssetFormPageWrap from '@/views/pages/assets/AssetFormPageWrap/AssetFormPageWrap.vue';
// @ts-ignore
import FormNamespaceRegistrationTransaction from '@/views/forms/FormNamespaceRegistrationTransaction/FormNamespaceRegistrationTransaction.vue';
import { mapGetters } from 'vuex';
@Component({
    components: { AssetFormPageWrap, FormNamespaceRegistrationTransaction },
    computed: {
        ...mapGetters({
            ownedNamespaces: 'namespace/ownedNamespaces',
        }),
    },
})
export class CreateSubNamespaceTs extends Vue {}

'''
'''--- src/views/pages/profiles/LoginPageTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { mapGetters } from 'vuex';
import { Component, Vue } from 'vue-property-decorator';
import { NetworkType, Password } from 'symbol-sdk';
// internal dependencies
import { $eventBus } from '@/events';
import { NotificationType } from '@/core/utils/NotificationType';
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ProfileService } from '@/services/ProfileService';
// child components
// @ts-ignore
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import LanguageSelector from '@/components/LanguageSelector/LanguageSelector.vue';
// configuration
import { SettingService } from '@/services/SettingService';
import { SettingsModel } from '@/core/database/entities/SettingsModel';
import { AccountService } from '@/services/AccountService';
import { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';

@Component({
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            isAuthenticated: 'profile/isAuthenticated',
        }),
    },
    components: {
        ErrorTooltip,
        ValidationProvider,
        ValidationObserver,
        LanguageSelector,
    },
})
export default class LoginPageTs extends Vue {
    /**
     * All known profiles
     */
    private profiles: ProfileModel[];

    /**
     * Profiles indexed by network type
     */
    private profilesClassifiedByNetworkType: {
        networkType: NetworkType;
        profiles: ProfileModel[];
    }[];
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Profiles repository
     * @var {ProfileService}
     */
    public profileService = new ProfileService();

    public accountService = new AccountService();

    /**
     * Validation rules
     * @var {ValidationRuleset}
     */
    public validationRules = ValidationRuleset;

    /**
     * Form items
     */
    public formItems: any = {
        currentProfileName: '',
        password: '',
        hasHint: false,
    };

    /**
     * All known profiles names
     */
    protected get profileNames(): string[] {
        return this.profiles.map(({ profileName }) => profileName);
    }
    /**
     * Hook called when the page is mounted
     * @return {void}
     */
    public created() {
        // filter out invalid profiles
        this.profiles = this.profileService.getProfiles().filter((p) => p.accounts.length > 0);

        const reducer = (accumulator: { networkType: NetworkType; profiles: ProfileModel[] }[], currentValue: ProfileModel) => {
            const currentAccumulator = accumulator.find((a) => a.networkType == currentValue.networkType);
            if (currentAccumulator) {
                currentAccumulator.profiles.push(currentValue);
                return accumulator;
            } else {
                return [...accumulator, { networkType: currentValue.networkType, profiles: [currentValue] }];
            }
        };

        this.profilesClassifiedByNetworkType = this.profiles.reduce(reducer, []);
        if (!this.profiles.length) {
            return;
        }
        // accounts available, iterate to first profiles
        this.formItems.currentProfileName = this.profiles[0].profileName;
    }

    /**
     * Getter for network type label
     * @param {NetworkType} networkType
     * @return {string}
     */
    public getNetworkTypeLabel(networkType: NetworkType): string {
        return NetworkTypeHelper.getNetworkTypeLabel(networkType);
    }

    /**
     * Get profile password hint
     * XXX should be encrypted with accessSalt.
     * @return {string}
     */
    public getPasswordHint(): string {
        const profileName = this.formItems.currentProfileName;
        const profile = this.profileService.getProfileByName(profileName);
        return (profile && profile.hint) || '';
    }

    /**
     * Submit action, validates form and logs in user if valid
     * @return {void}
     */
    public async submit() {
        if (!this.formItems.currentProfileName.length) {
            return this.$store.dispatch('notification/ADD_ERROR', NotificationType.PROFILE_NAME_INPUT_ERROR);
        }

        if (!this.formItems.password.length || this.formItems.password.length < 8) {
            return this.$store.dispatch('notification/ADD_ERROR', NotificationType.WRONG_PASSWORD_ERROR);
        }

        // now compare password hashes
        return this.processLogin();
    }

    /**
     * Process login request.
     * @return {void}
     */
    private async processLogin() {
        try {
            const currentProfileName = this.formItems.currentProfileName;
            const profile = this.profileService.getProfileByName(currentProfileName);
            const settingService = new SettingService();

            // if profile doesn't exist, authentication is not valid
            if (!profile) {
                return this.$store.dispatch('notification/ADD_ERROR', 'Invalid login attempt');
            }

            // profile exists, fetch data
            const settings: SettingsModel = settingService.getProfileSettings(currentProfileName);

            const knownAccounts: AccountModel[] = this.accountService.getKnownAccounts(profile.accounts);
            if (knownAccounts.length == 0) {
                throw new Error('knownAccounts is empty');
            }

            // use service to generate password hash
            const passwordHash = ProfileService.getPasswordHash(new Password(this.formItems.password));

            // read profile's password hash and compare
            if (profile.password !== passwordHash) {
                return this.$store.dispatch('notification/ADD_ERROR', NotificationType.WRONG_PASSWORD_ERROR);
            }

            // if profile setup was not finalized, redirect
            if (!profile.seed && profile.accounts.length == 0) {
                this.$store.dispatch('profile/SET_CURRENT_PROFILE', profile);
                this.$store.dispatch('temporary/SET_PASSWORD', this.formItems.password);
                this.$store.dispatch(
                    'diagnostic/ADD_WARNING',
                    'Profile has not setup mnemonic pass phrase, redirecting: ' + currentProfileName,
                );
                return this.$router.push({
                    name: 'profiles.createProfile.generateMnemonic',
                });
            }

            // read default account from settings
            const defaultAccountId = settings.defaultAccount ? settings.defaultAccount : knownAccounts[0].id;
            if (!defaultAccountId) {
                throw new Error('defaultAccountId could not be resolved');
            }
            const defaultAccount = knownAccounts.find((w) => w.id == defaultAccountId);
            if (!defaultAccount) {
                throw new Error(`defaultAccount could not be resolved from id ${defaultAccountId}`);
            }

            // LOGIN SUCCESS: update app state
            await this.$store.dispatch('profile/SET_CURRENT_PROFILE', profile);
            this.$store.dispatch('network/CONNECT');
            this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', profile.accounts);
            await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', defaultAccount);
            this.$store.dispatch('diagnostic/ADD_DEBUG', 'Profile login successful with currentProfileName: ' + currentProfileName);
            $eventBus.$emit('onLogin', currentProfileName);
            return this.$router.push({ name: 'dashboard' });
        } catch (e) {
            console.log('Unknown error trying to login', JSON.stringify(e));
            return this.$store.dispatch('notification/ADD_ERROR', `Unknown error trying to login: ${JSON.stringify(e)}`);
        }
    }
}

'''
'''--- src/views/pages/profiles/create-profile/CreateProfileTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';

@Component
export default class CreateProfileTs extends Vue {
    /**
     * List of steps
     * @var {string[]}
     */
    public StepBarTitleList = ['create_profile', 'generate_mnemonic', 'backup_mnemonic_phrase', 'verify_Mnemonic_phrase', 'finish'];

    /**
     * Hook called when the page is mounted
     * @return {void}
     */
    async mounted() {
        await this.$store.dispatch('temporary/initialize');
    }

    public getCurrentStep(): number {
        switch (this.$route.name) {
            default:
            case 'profiles.createProfile.info':
                return 0;
            case 'profiles.createProfile.generateMnemonic':
                return 1;
            case 'profiles.createProfile.showMnemonic':
                return 2;
            case 'profiles.createProfile.verifyMnemonic':
                return 3;
            case 'profiles.createProfile.finalize':
                return 4;
        }
    }

    public getStepClassName(index: number): string {
        return this.getCurrentStep() >= index ? 'white' : 'gray';
    }
}

'''
'''--- src/views/pages/profiles/create-profile/finalize/FinalizeTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { NetworkType, Password } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
import { AccountService } from '@/services/AccountService';
import { NotificationType } from '@/core/utils/NotificationType';
import { ProfileModel } from '@/core/database/entities/ProfileModel';

@Component({
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            currentProfile: 'profile/currentProfile',
            currentPassword: 'temporary/password',
            currentMnemonic: 'temporary/mnemonic',
        }),
    },
})
export default class FinalizeTs extends Vue {
    /**
     * Currently active networkType
     * @see {Store.Network}
     * @var {NetworkType}
     */
    public networkType: NetworkType;

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {ProfileModel}
     */
    public currentProfile: ProfileModel;

    /**
     * Temporary stored password
     * @see {Store.Temporary}
     * @var {Password}
     */
    public currentPassword: Password;

    /**
     * Temporary stored password
     * @see {Store.Temporary}
     * @var {MnemonicPassPhrase}
     */
    public currentMnemonic: MnemonicPassPhrase;

    /**
     * Account Service
     * @var {AccountService}
     */
    public accountService: AccountService = new AccountService();

    /**
     * Finalize the profile creation process by adding
     * the account created from mnemonic pass phrase.
     * @return {void}
     */
    public async submit() {
        // create profile by mnemonic
        const account = this.accountService.getDefaultAccount(
            this.currentProfile,
            this.currentMnemonic,
            this.currentPassword,
            this.networkType,
        );
        // use repository for storage
        this.accountService.saveAccount(account);

        // execute store actions
        await this.$store.dispatch('profile/ADD_ACCOUNT', account);
        await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);
        await this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', [account.id]);
        await this.$store.dispatch('temporary/RESET_STATE');
        await this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);

        // flush and continue
        return this.$router.push({ name: 'dashboard' });
    }
}

'''
'''--- src/views/pages/profiles/create-profile/generate-mnemonic/GenerateMnemonicTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { Password, Crypto } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
import CryptoJS from 'crypto-js';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { NotificationType } from '@/core/utils/NotificationType';
import { ProfileService } from '@/services/ProfileService';

@Component({
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            currentPassword: 'temporary/password',
        }),
    },
})
export default class GenerateMnemonicTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Previous step's password
     * @see {Store.Temporary}
     * @var {Password}
     */
    public currentPassword: Password;

    /**
     * Profile repository
     * @var {ProfileService}
     */
    public profileService: ProfileService = new ProfileService();

    /**
     * Whether component should track mouse move
     * @var {boolean}
     */
    public shouldTrackMouse: boolean = true;

    /**
     * Entropy storage
     * @var {string}
     */
    private entropy = '';

    /**
     * Percentage of entropy generation process
     * @var {number}
     */
    private percent: number = 0;

    /**
     * Track and handle mouse move event
     * @param {Vue.Event} event
     * @return {void}
     */
    public handleMousemove() {
        if (this.percent < 100) {
            this.entropy += Crypto.randomBytes(8);
            this.percent++;
            return;
        }

        // stop tracking
        this.shouldTrackMouse = false;
        return this.saveMnemonicAndGoToNextPage();
    }

    /**
     * Save mnemonic and redirect to next page
     * return {void}
     */
    private async saveMnemonicAndGoToNextPage() {
        try {
            // act
            const seed = this.filterRepeatedWords();

            // encrypt seed for storage
            const encSeed = Crypto.encrypt(seed.plain, this.currentPassword.value);

            // update currentProfile instance and storage
            this.profileService.updateSeed(this.currentProfile, encSeed);

            // update state
            await this.$store.dispatch('profile/SET_CURRENT_PROFILE', this.currentProfile);
            this.$store.dispatch('temporary/SET_MNEMONIC', seed);
            this.$store.dispatch('notification/ADD_SUCCESS', this.$t('generate_entropy_increase_success'));

            // redirect
            return this.$router.push({ name: 'profiles.createProfile.showMnemonic' });
        } catch (error) {
            console.log('An error happened while generating Mnenomic:', error);
            this.$store.dispatch('notification/ADD_ERROR', NotificationType.MNEMONIC_GENERATION_ERROR);
        }
    }

    /**
     * Filter repeating words in Mnemonic phrase
     * retrun seed
     */
    private filterRepeatedWords() {
        const entropy = CryptoJS.SHA256(this.entropy + Crypto.randomBytes(8)).toString();
        const seed = MnemonicPassPhrase.createFromEntropy(entropy);
        if (new Set(seed.toArray()).size != seed.toArray().length) {
            return this.filterRepeatedWords();
        }
        return seed;
    }
}

'''
'''--- src/views/pages/profiles/create-profile/show-mnemonic/ShowMnemonicTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { mapGetters } from 'vuex';
import { Component, Vue } from 'vue-property-decorator';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// @ts-ignore
import MnemonicDisplay from '@/components/MnemonicDisplay/MnemonicDisplay.vue';
// @ts-ignore
import ButtonCopyToClipboard from '@/components/ButtonCopyToClipboard/ButtonCopyToClipboard.vue';
import { Formatters } from '@/core/utils/Formatters';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { NotificationType } from '@/core/utils/NotificationType';
import { MnemonicQR, QRCodeGenerator } from 'symbol-qr-library';
// @ts-ignore
import failureIcon from '@/views/resources/img/monitor/failure.png';
import { Password } from 'symbol-sdk';

@Component({
    components: { MnemonicDisplay, ButtonCopyToClipboard },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            currentMnemonic: 'temporary/mnemonic',
            currentPassword: 'temporary/password',
        }),
    },
})
export default class ShowMnemonicTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Temporary Mnemonic pass phrase
     * @var {MnemonicPassPhrase}
     */
    public currentMnemonic: MnemonicPassPhrase;

    /**
     * Whether mnemonic is shown in plain text
     * @var {boolean}
     */
    public showMnemonic: boolean = false;

    /**
     * Base64 represatation of QR Code
     * @var {string}
     */
    public qrBase64: string = failureIcon;

    /**
     * Temporary stored password
     * @see {Store.Temporary}
     * @var {Password}
     */
    public currentPassword: Password;

    /**
     * Mnemonic QR Code to be exported
     * @var {MnemonicQR}
     */
    public exportMnemonicQR: MnemonicQR;

    /**
     * Hook called when the component is mounted
     */
    public created() {
        this.exportMnemonicQR = QRCodeGenerator.createExportMnemonic(
            this.currentMnemonic,
            this.currentPassword.value,
            this.currentProfile.networkType,
            this.currentProfile.generationHash,
        );
        this.exportMnemonicQR.toBase64().subscribe((base64) => (this.qrBase64 = base64));
    }

    /// region computed properties getter/setter
    get mnemonicWordsList() {
        if (this.currentMnemonic) {
            return this.currentMnemonic.plain.split(' ');
        }
        this.$store.dispatch('notification/ADD_ERROR', NotificationType.NO_MNEMONIC_INFO);
        this.$router.push({ name: 'profiles.createProfile.info' });
    }
    public get waitingCopyString(): string {
        return Formatters.splitArrayByDelimiter(this.mnemonicWordsList);
    }
    /// end-region computed properties getter/setter
}

'''
'''--- src/views/pages/profiles/create-profile/verify-mnemonic/VerifyMnemonicTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
// child components
// @ts-ignore
import MnemonicVerification from '@/components/MnemonicVerification/MnemonicVerification.vue';
import { NotificationType } from '@/core/utils/NotificationType';

@Component({
    components: {
        MnemonicVerification,
    },
    computed: {
        ...mapGetters({
            currentMnemonic: 'temporary/mnemonic',
        }),
    },
})
export default class VerifyMnemonicTs extends Vue {
    /**
     * Temporary Mnemonic pass phrase
     * @var {MnemonicPassPhrase}
     */
    public currentMnemonic: MnemonicPassPhrase;

    /// region computed properties getter/setter
    get mnemonicWordsList(): string[] {
        if (this.currentMnemonic) {
            return this.currentMnemonic.plain.split(' ');
        }
        this.$store.dispatch('notification/ADD_ERROR', NotificationType.NO_MNEMONIC_INFO);
        this.$router.push({ name: 'profiles.createProfile.info' });
    }

    /// end-region computed properties getter/setter
}

'''
'''--- src/views/pages/profiles/import-private-key/ImportPrivateKeyTs.ts ---
/**
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Vue, Component } from 'vue-property-decorator';

@Component
export default class ImportPrivateKeyTs extends Vue {
    /**
     * List of steps
     * @var {string[]}
     */
    public StepBarTitleList = ['create_profile', 'import_private_key', 'finished'];

    /**
     * Hook called when the page is mounted
     * @return {void}
     */
    async mounted() {
        await this.$store.dispatch('temporary/initialize');
    }

    public getCurrentStep(): number {
        switch (this.$route.name) {
            default:
            case 'profiles.importPrivateKey.fillInfo':
                return 0;
            case 'profiles.importPrivateKey.input':
                return 1;
            case 'profiles.importPrivateKey.finalize':
                return 2;
        }
    }

    public getStepClassName(index: number): string {
        return this.getCurrentStep() >= index ? 'white' : 'gray';
    }
}

'''
'''--- src/views/pages/profiles/import-private-key/finalize/FinalizeTs.ts ---
import { Vue, Component } from 'vue-property-decorator';

@Component
export default class FinalizeTs extends Vue {}

'''
'''--- src/views/pages/profiles/import-private-key/input-private-key/InputPrivateKeyTs.ts ---
import { Vue, Component } from 'vue-property-decorator';
// @ts-ignore
import { ValidationRuleset } from '@/core/validation/ValidationRuleset';
// @ts-ignore
import FormRow from '@/components/FormRow/FormRow.vue';
import { Account, Password, NetworkType } from 'symbol-sdk';
import { mapGetters } from 'vuex';
// @ts-ignore
import { AccountModel } from '@/core/database/entities/AccountModel';
import { ValidationObserver, ValidationProvider } from 'vee-validate';
// @ts-ignore
import ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';
// @ts-ignore
import { NotificationType } from '@/core/utils/NotificationType';
// @ts-ignore
import { AccountService } from '@/services/AccountService';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { ProfileService } from '@/services/ProfileService';
@Component({
    components: {
        FormRow,
        ValidationObserver,
        ValidationProvider,
        ErrorTooltip,
    },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            currentPassword: 'temporary/password',
        }),
    },
})
export default class InputPrivateKeyTs extends Vue {
    /**
     * Type the ValidationObserver refs
     * @type {{
     *     observer: InstanceType<typeof ValidationObserver>
     *   }}
     */
    public $refs!: {
        observer: InstanceType<typeof ValidationObserver>;
    };

    public validationRules = ValidationRuleset;
    public currentProfile: ProfileModel;
    public privateKey: string = '';
    public get account(): Account {
        if (
            !this.privateKey ||
            0 !== this.privateKey.length % 2 ||
            (this.$refs.observer.fields.privateKey && this.$refs.observer.fields.privateKey.invalid)
        ) {
            return null;
        }
        return Account.createFromPrivateKey(this.privateKey, this.currentProfile.networkType);
    }
    public get publicKey() {
        return this.account ? this.account.publicKey : '';
    }
    public get address() {
        return this.account ? this.account.address.pretty() : '';
    }
    public get accountNetwork(): string {
        return this.account ? NetworkType[this.account.networkType] : '';
    }
    public get currentProfileNetwork(): string {
        return NetworkType[this.currentProfile.networkType];
    }
    public async createAccountByPrivate() {
        const profileService = new ProfileService();
        const accountService = new AccountService();

        let newAccount: AccountModel;
        const password = new Password(this.currentProfile.password);
        try {
            // create a AccountModel
            newAccount = accountService.getSubAccountByPrivateKey(
                this.currentProfile,
                password,
                'Private key account',
                this.privateKey,
                this.account.networkType,
            );
            // console.log(newAccount)
            // return if undefined
            if (!newAccount) {
                return;
            }

            // persistent storage
            accountService.saveAccount(newAccount);
            profileService.updatePassword(
                this.currentProfile,
                ProfileService.getPasswordHash(password),
                this.currentProfile.hint,
                this.currentProfile.seed,
            );
            //  update  state
            await this.$store.dispatch('profile/ADD_ACCOUNT', newAccount);
            await this.$store.dispatch('profile/SET_CURRENT_PROFILE', this.currentProfile);
            await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', newAccount);
            this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', this.currentProfile.accounts);
            // execute store actions
            this.$store.dispatch('temporary/RESET_STATE');
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
            this.$store.dispatch('diagnostic/ADD_DEBUG', `Profile login successful with profileName: ${this.currentProfile.profileName}`);
            // redirect
            return this.$router.push({ name: 'profiles.importPrivateKey.finalize' });
        } catch (e) {
            this.$store.dispatch('notification/ADD_ERROR', 'An error happened, please try again.');
            console.error(e);
        }
    }
}

'''
'''--- src/views/pages/profiles/import-profile/ImportProfileTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';

@Component
export default class ImportProfileTs extends Vue {
    /**
     * List of steps
     * @var {string[]}
     */
    public StepBarTitleList = ['create_profile', 'mnemonic_phrase', 'select_accounts', 'finish'];

    /**
     * Hook called when the page is mounted
     * @return {void}
     */
    async mounted() {
        await this.$store.dispatch('temporary/initialize');
    }

    public getCurrentStep(): number {
        switch (this.$route.name) {
            default:
            case 'profiles.importProfile.info':
                return 0;
            case 'profiles.importProfile.importMnemonic':
                return 1;
            case 'profiles.importProfile.walletSelection':
                return 2;
            case 'profiles.importProfile.finalize':
                return 3;
        }
    }

    public getStepClassName(index: number): string {
        return this.getCurrentStep() >= index ? 'white' : 'gray';
    }
}

'''
'''--- src/views/pages/profiles/import-profile/account-selection/AccountSelectionTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { AccountInfo, Address, MosaicId, Password, RepositoryFactory, SimpleWallet } from 'symbol-sdk';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
import { AccountModel, AccountType } from '@/core/database/entities/AccountModel';
import { DerivationPathLevels, DerivationService } from '@/services/DerivationService';
import { AccountService } from '@/services/AccountService';
import { NotificationType } from '@/core/utils/NotificationType';
import { Formatters } from '@/core/utils/Formatters';
// child components
// @ts-ignore
import MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';
import { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';
import { ProfileModel } from '@/core/database/entities/ProfileModel';
import { ProfileService } from '@/services/ProfileService';
import { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';

@Component({
    computed: {
        ...mapGetters({
            networkType: 'network/networkType',
            networkMosaic: 'mosaic/networkMosaic',
            networkCurrency: 'mosaic/networkCurrency',
            currentProfile: 'profile/currentProfile',
            currentPassword: 'temporary/password',
            currentMnemonic: 'temporary/mnemonic',
        }),
    },
    components: { MosaicAmountDisplay },
})
export default class AccountSelectionTs extends Vue {
    /**
     * Formatting helpers
     * @protected
     */
    protected formatters = Formatters;

    /**
     * Network's currency mosaic id
     * @see {Store.Mosaic}
     * @var {MosaicId}
     */
    public networkMosaic: MosaicId;

    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Temporary stored password
     * @see {Store.Temporary}
     * @var {Password}
     */
    public currentPassword: Password;

    /**
     * Temporary stored mnemonic pass phrase
     * @see {Store.Temporary}
     * @var {MnemonicPassPhrase}
     */
    public currentMnemonic: string;

    /**
     * Derivation Service
     * @var {DerivationService}
     */
    public derivation: DerivationService;

    /**
     * Account Service
     * @var {AccountService}
     */
    public accountService: AccountService;

    /**
     * Profile service
     * @var {ProfileService}
     */
    public profileService: ProfileService = new ProfileService();

    /**
     * List of addresses
     * @var {Address[]}
     */
    public addressesList: Address[] = [];

    /**
     * Balances map
     * @var {any}
     */
    public addressMosaicMap = {};

    /**
     * Map of selected accounts
     * @var {number[]}
     */
    public selectedAccounts: number[] = [];

    public networkCurrency: NetworkCurrencyModel;

    /**
     * Hook called when the page is mounted
     * @return {void}
     */
    async mounted() {
        this.derivation = new DerivationService();
        this.accountService = new AccountService();

        Vue.nextTick().then(() => {
            setTimeout(() => this.initAccounts(), 200);
        });
    }

    public previous() {
        // back to previous page
        if (this.currentProfile) {
            this.$router.back();
        }
        // back to step 1
        this.$router.push({ name: 'profiles.importProfile.info' });
    }

    /**
     * Finalize the account selection process by adding
     * the selected accounts to storage.
     * @return {void}
     */
    public submit() {
        // cannot submit without selecting at least one account
        if (!this.selectedAccounts.length) {
            return this.$store.dispatch('notification/ADD_ERROR', NotificationType.INPUT_EMPTY_ERROR);
        }

        try {
            // create account models
            const accounts = this.createAccountsFromPathIndexes(this.selectedAccounts);

            // save newly created accounts
            accounts.forEach((account, index) => {
                // Store accounts using repository
                this.accountService.saveAccount(account);
                // set current account
                if (index === 0) {
                    this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);
                }
                // add accounts to profile
                this.$store.dispatch('profile/ADD_ACCOUNT', account);
            });

            // get accounts identifiers
            const accountIdentifiers = accounts.map((account) => account.id);

            // set known accounts
            this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', accountIdentifiers);

            this.profileService.updateAccounts(this.currentProfile, accountIdentifiers);

            // execute store actions
            this.$store.dispatch('temporary/RESET_STATE');
            this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);
            return this.$router.push({ name: 'profiles.importProfile.finalize' });
        } catch (error) {
            return this.$store.dispatch('notification/ADD_ERROR', error);
        }
    }

    /**
     * Fetch account balances and map to address
     * @return {void}
     */
    private async initAccounts() {
        // - generate addresses
        this.addressesList = this.accountService.getAddressesFromMnemonic(
            new MnemonicPassPhrase(this.currentMnemonic),
            this.currentProfile.networkType,
            10,
        );
        const repositoryFactory = this.$store.getters['network/repositoryFactory'] as RepositoryFactory;
        // fetch accounts info
        const accountsInfo = await repositoryFactory.createAccountRepository().getAccountsInfo(this.addressesList).toPromise();
        if (!accountsInfo) {
            return;
        }
        // map balances
        this.addressMosaicMap = this.mapBalanceByAddress(accountsInfo, this.networkMosaic);
    }

    public mapBalanceByAddress(accountsInfo: AccountInfo[], mosaic: MosaicId): Record<string, number> {
        return accountsInfo
            .map(({ mosaics, address }) => {
                // - check balance
                const hasNetworkMosaic = mosaics.find((mosaicOwned) => mosaicOwned.id.equals(mosaic));

                // - account doesn't hold network mosaic
                if (hasNetworkMosaic === undefined) {
                    return null;
                }
                // - map balance to address
                const balance = hasNetworkMosaic.amount.compact();
                return {
                    address: address.plain(),
                    balance: balance,
                };
            })
            .reduce((acc, { address, balance }) => ({ ...acc, [address]: balance }), {});
    }

    /**
     * Create an account instance from mnemonic and path
     * @return {AccountModel}
     */
    private createAccountsFromPathIndexes(indexes: number[]): AccountModel[] {
        const paths = indexes.map((index) => {
            if (index == 0) {
                return AccountService.DEFAULT_ACCOUNT_PATH;
            }

            return this.derivation.incrementPathLevel(AccountService.DEFAULT_ACCOUNT_PATH, DerivationPathLevels.Profile, index);
        });

        const accounts = this.accountService.generateAccountsFromPaths(
            new MnemonicPassPhrase(this.currentMnemonic),
            this.currentProfile.networkType,
            paths,
        );

        const simpleWallets = accounts.map((account, i) =>
            SimpleWallet.createFromPrivateKey(
                `Seed Account ${indexes[i] + 1}`,
                this.currentPassword,
                account.privateKey,
                this.currentProfile.networkType,
            ),
        );

        return simpleWallets.map((simpleWallet, i) => {
            return {
                id: SimpleObjectStorage.generateIdentifier(),
                profileName: this.currentProfile.profileName,
                name: simpleWallet.name,
                node: '',
                type: AccountType.SEED,
                address: simpleWallet.address.plain(),
                publicKey: accounts[i].publicKey,
                encryptedPrivateKey: simpleWallet.encryptedPrivateKey,
                path: paths[i],
                isMultisig: false,
            };
        });
    }

    /**
     * Called when clicking on an address to add it to the selection
     * @param {number} pathNumber
     */
    protected onAddAddress(pathNumber: number): void {
        const selectedAccounts = [...this.selectedAccounts];
        selectedAccounts.push(pathNumber);
        this.selectedAccounts = selectedAccounts;
    }

    /**
     * Called when clicking on an address to remove it from the selection
     * @protected
     * @param {number} pathNumber
     */
    protected onRemoveAddress(pathNumber: number): void {
        const selectedAccounts = [...this.selectedAccounts];
        const indexToDelete = selectedAccounts.indexOf(pathNumber);
        selectedAccounts.splice(indexToDelete, 1);
        this.selectedAccounts = selectedAccounts;
    }
}

'''
'''--- src/views/pages/profiles/import-profile/finalize/FinalizeTs.ts ---
import { Vue, Component } from 'vue-property-decorator';

@Component
export default class FinalizeTs extends Vue {}

'''
'''--- src/views/pages/profiles/import-profile/import-mnemonic/ImportMnemonicTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { Component, Vue } from 'vue-property-decorator';
import { mapGetters } from 'vuex';
import { MnemonicPassPhrase } from 'symbol-hd-wallets';
// internal dependencies
import { ProfileModel } from '@/core/database/entities/ProfileModel';

import { NotificationType } from '@/core/utils/NotificationType';
import { Password, Crypto } from 'symbol-sdk';
// @ts-ignore
import MnemonicInput from '@/components/MnemonicInput/MnemonicInput.vue';
import { ProfileService } from '@/services/ProfileService';

//@ts-ignore
import ImportQRButton from '@/components/QRCode/ImportQRButton/ImportQRButton.vue';

@Component({
    components: { MnemonicInput, ImportQRButton },
    computed: {
        ...mapGetters({
            currentProfile: 'profile/currentProfile',
            currentPassword: 'temporary/password',
            importedMnemonic: 'temporary/mnemonic',
        }),
    },
})
export default class ImportMnemonicTs extends Vue {
    /**
     * Currently active profile
     * @see {Store.Profile}
     * @var {string}
     */
    public currentProfile: ProfileModel;

    /**
     * Previous step's password
     * @see {Store.Temporary}
     * @var {Password}
     */
    public currentPassword: Password;

    /**
     * Profile service
     * @var {ProfileService}
     */
    public profileService: ProfileService = new ProfileService();

    /**
     * Form items
     * @var {any}
     */
    public formItems = {
        seed: '',
    };
    /**
     * @description: Receive the Input words
     * @type: Array<string>
     */
    public wordsArray: Array<string> = [];

    /**
     * @description: initial mnemonics (imported)
     * @type: string
     */
    public importedMnemonic: string;

    /**
     * Delete profile and go back
     * @return {void}
     */
    public deleteProfileAndBack() {
        if (this.currentProfile) {
            // - delete the temporary profile from storage
            this.profileService.deleteProfile(this.currentProfile.profileName);
            this.$store.dispatch('profile/RESET_STATE');
        }
        // - back to previous page
        this.$router.push({ name: 'profiles.importProfile.info' });
    }

    /**
     * @description: receive input words and control the ui
     * @return: void
     */
    public setSeed(wordsArray) {
        this.wordsArray = wordsArray;
        if (wordsArray.length > 0) {
            this.formItems.seed = wordsArray.join(' ');
        }
    }

    /**
     * Process to mnemonic pass phrase verification
     * @return {void}
     */
    public processVerification() {
        if (!this.formItems.seed || !this.formItems.seed.length) {
            return this.$store.dispatch('notification/ADD_ERROR', NotificationType.INPUT_EMPTY_ERROR);
        }

        try {
            // - verify validity of mnemonic
            const mnemonic = new MnemonicPassPhrase(this.formItems.seed);

            if (!mnemonic.isValid()) {
                throw new Error('Invalid mnemonic pass phrase');
            }

            // encrypt seed for storage
            const encSeed = Crypto.encrypt(mnemonic.plain, this.currentPassword.value);

            this.profileService.updateSeed(this.currentProfile, encSeed);

            // update state
            this.$store.dispatch('notification/ADD_SUCCESS', this.$t('generate_entropy_increase_success'));
            this.$store.dispatch('temporary/SET_MNEMONIC', mnemonic.plain);

            // redirect
            return this.$router.push({
                name: 'profiles.importProfile.walletSelection',
            });
        } catch (e) {
            console.log('An error happened while importing Mnenomic:', e);
            return this.$store.dispatch('notification/ADD_ERROR', this.$t('invalid_mnemonic_input'));
        }
    }
}

'''
'''--- src/views/pages/profiles/import-profile/import-strategy/ImportStrategyTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import Vue from 'vue';
import Component from 'vue-class-component';
// resources
import { walletTypeImages } from '@/views/resources/Images';

@Component
export default class ImportStrategyTs extends Vue {
    /**
     * List of available follow-up pages
     * @var {any[]}
     */
    public importInfoList = [
        {
            image: walletTypeImages.createImg,
            title: 'create_mnemonic',
            description: 'create_a_new_profile',
            route: 'profiles.createProfile.info',
        },
        {
            image: walletTypeImages.seedImg,
            title: 'import_mnemonic',
            description: 'import_mnemonic_passphrase_create_profile',
            route: 'profiles.importProfile.info',
        },
        {
            image: walletTypeImages.trezorImg,
            title: 'access_trezor',
            description: 'access_trezor_account',
            route: null,
        },
        {
            image: walletTypeImages.ledgerImg,
            title: 'access_ledger',
            description: 'access_your_ledger_account',
            route: null,
        },
    ];

    /**
     * Redirect user to clicked route
     * @param link
     */
    public redirect(routeName: string) {
        if (!routeName || !routeName.length) {
            return this.$store.dispatch('notification/ADD_WARNING', this.$t('not_yet_open'));
        }

        return this.$router.push({
            name: routeName,
            params: {
                nextPage: 'profiles.importProfile.importMnemonic',
            },
        });
    }
}

'''
'''--- src/views/pages/settings/SettingsTs.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
// external dependencies
import { Component, Vue } from 'vue-property-decorator';

// child components
// @ts-ignore
import NavigationTabs from '@/components/NavigationTabs/NavigationTabs.vue';
// @ts-ignore
import FormTitle from '@/components/FormTitle/FormTitle.vue';

@Component({
    components: {
        NavigationTabs,
        FormTitle,
    },
})
export class SettingsTs extends Vue {
    /**
     * Argument passed to the Router Tab List
     */
    parentRouteName = 'settings';
}

'''
'''--- src/views/resources/Images.ts ---
/*
 * Copyright 2020 NEM (https://nem.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *
 */
import { TransactionType } from 'symbol-sdk';

// @ts-ignore
import createImg from '@/views/resources/img/login/create.png';
// @ts-ignore
import seedImg from '@/views/resources/img/login/seed.png';
// @ts-ignore
import trezorImg from '@/views/resources/img/login/trezor.png';
// @ts-ignore
import ledgerImg from '@/views/resources/img/login/ledger.png';
// @ts-ignore
import importStepImage1 from '@/views/resources/img/login/1_4.png';
// @ts-ignore
import importStepImage2 from '@/views/resources/img/login/2_4.png';
// @ts-ignore
import importStepImage3 from '@/views/resources/img/login/3_4.png';
// @ts-ignore
import importStepImage4 from '@/views/resources/img/login/4_4.png';
// @ts-ignore
import createStepImage1 from '@/views/resources/img/login/1_5.png';
// @ts-ignore
import createStepImage2 from '@/views/resources/img/login/2_5.png';
// @ts-ignore
import createStepImage3 from '@/views/resources/img/login/3_5.png';
// @ts-ignore
import createStepImage4 from '@/views/resources/img/login/4_5.png';
// @ts-ignore
import createStepImage5 from '@/views/resources/img/login/5_5.png';
// @ts-ignore
import dashboardUnconfirmed from '@/views/resources/img/monitor/dash-board/dashboardUnconfirmed.png';
// @ts-ignore
import dashboardConfirmed from '@/views/resources/img/monitor/dash-board/dashboardConfirmed.png';
// @ts-ignore
import windowDashboard from '@/views/resources/img/window/windowDashboard.png';
// @ts-ignore
import windowDashboardActive from '@/views/resources/img/window/windowDashboardActive.png';
// @ts-ignore
import windowWallet from '@/views/resources/img/window/windowWallet.png';
// @ts-ignore
import windowWalletActive from '@/views/resources/img/window/windowWalletActive.png';
// @ts-ignore
import windowMosaic from '@/views/resources/img/window/windowMosaic.png';
// @ts-ignore
import windowMosaicActive from '@/views/resources/img/window/windowMosaicActive.png';
// @ts-ignore
import windowNamespace from '@/views/resources/img/window/windowNamespace.png';
// @ts-ignore
import windowNamespaceActive from '@/views/resources/img/window/windowNamespaceActive.png';
// @ts-ignore
import windowMultisig from '@/views/resources/img/window/windowMultisig.png';
// @ts-ignore
import windowMultisigActive from '@/views/resources/img/window/windowMultisigActive.png';
// @ts-ignore
import windowCommunity from '@/views/resources/img/window/windowCommunity.png';
// @ts-ignore
import windowCommunityActive from '@/views/resources/img/window/windowCommunityActive.png';
// @ts-ignore
import windowSetting from '@/views/resources/img/window/windowSetting.png';
// @ts-ignore
import windowSettingActive from '@/views/resources/img/window/windowSettingActive.png';
// @ts-ignore
import selected from '@/views/resources/img/monitor/mosaics/selected.png';
// @ts-ignore
import unselected from '@/views/resources/img/monitor/mosaics/unselected.png';

// official icons

// @ts-ignore
import accountRestrictionAlt from '@/views/resources/img/icons/account-restriction-alt.png';
// @ts-ignore
import accountRestriction from '@/views/resources/img/icons/account-restriction.png';
// @ts-ignore
import addAccount from '@/views/resources/img/icons/add-profile.png';
// @ts-ignore
import addAggregate from '@/views/resources/img/icons/add-aggregate.png';
// @ts-ignore
import aggregate from '@/views/resources/img/icons/aggregate.png';
// @ts-ignore
import aggregateTransaction from '@/views/resources/img/icons/aggregate-transaction.png';
// @ts-ignore
import alias from '@/views/resources/img/icons/alias.png';
// @ts-ignore
import apiNode from '@/views/resources/img/icons/api-node.png';
// @ts-ignore
import blockchainBlock from '@/views/resources/img/icons/blockchain-block.png';
// @ts-ignore
import blockchain from '@/views/resources/img/icons/blockchain.png';
// @ts-ignore
import block from '@/views/resources/img/icons/block.png';
// @ts-ignore
import blocks from '@/views/resources/img/icons/blocks.png';
// @ts-ignore
import blockTime from '@/views/resources/img/icons/block-time.png';
// @ts-ignore
import card from '@/views/resources/img/icons/card.png';
// @ts-ignore
import certificate from '@/views/resources/img/icons/certificate.png';
// @ts-ignore
import checkMark from '@/views/resources/img/icons/check-mark.png';
// @ts-ignore
import confirmed from '@/views/resources/img/icons/confirmed.png';
// @ts-ignore
import crossChain from '@/views/resources/img/icons/cross-chain.png';
// @ts-ignore
import cryptography from '@/views/resources/img/icons/cryptography.png';
// @ts-ignore
import customerAlice from '@/views/resources/img/icons/customer-alice.png';
// @ts-ignore
import customerBob from '@/views/resources/img/icons/customer-bob.png';
// @ts-ignore
import customerCharlie from '@/views/resources/img/icons/customer-charlie.png';
// @ts-ignore
import dashboard from '@/views/resources/img/icons/dashboard.png';
// @ts-ignore
import delegatedHarvesting from '@/views/resources/img/icons/delegated-harvesting.png';
// @ts-ignore
import encryptedMessage from '@/views/resources/img/icons/encrypted-message.png';
// @ts-ignore
import enterprise from '@/views/resources/img/icons/enterprise.png';
// @ts-ignore
import explorer from '@/views/resources/img/icons/explorer.png';
// @ts-ignore
import fingerprint from '@/views/resources/img/icons/fingerprint.png';
// @ts-ignore
import harvest from '@/views/resources/img/icons/harvest.png';
// @ts-ignore
import incoming from '@/views/resources/img/icons/incoming.png';
// @ts-ignore
import lock from '@/views/resources/img/icons/lock.png';
// @ts-ignore
import message from '@/views/resources/img/icons/message.png';
// @ts-ignore
import metadata from '@/views/resources/img/icons/metadata.png';
// @ts-ignore
import mosaic from '@/views/resources/img/icons/mosaic.svg';
// @ts-ignore
import mosaicRestriction from '@/views/resources/img/icons/mosaic-restriction.png';
// @ts-ignore
import multipleParties from '@/views/resources/img/icons/multiple-parties.png';
// @ts-ignore
import multisig from '@/views/resources/img/icons/multisig.svg';
// @ts-ignore
import namespace from '@/views/resources/img/icons/namespace.svg';
// @ts-ignore
import nem2Cli from '@/views/resources/img/icons/nem2-cli.png';
// @ts-ignore
import nem2Sdk from '@/views/resources/img/icons/nem2-sdk.png';
// @ts-ignore
import news from '@/views/resources/img/icons/news.svg';
// @ts-ignore
import nodeReputation from '@/views/resources/img/icons/node-reputation.png';
// @ts-ignore
import nodes from '@/views/resources/img/icons/nodes.png';
// @ts-ignore
import notMultisig from '@/views/resources/img/icons/not-multisig.png';
// @ts-ignore
import outgoing from '@/views/resources/img/icons/outgoing.png';
// @ts-ignore
import pending from '@/views/resources/img/icons/pending.png';
// @ts-ignore
import privateChain from '@/views/resources/img/icons/private-chain.png';
// @ts-ignore
import privateKey from '@/views/resources/img/icons/private-key.png';
// @ts-ignore
import publicChain from '@/views/resources/img/icons/public-chain.png';
// @ts-ignore
import publicKey from '@/views/resources/img/icons/public-key.png';
// @ts-ignore
import publicPrivateKey from '@/views/resources/img/icons/public-private-key.png';
// @ts-ignore
import qr from '@/views/resources/img/icons/qr.png';
// @ts-ignore
import receive from '@/views/resources/img/icons/receive.png';
// @ts-ignore
import send from '@/views/resources/img/icons/send.png';
// @ts-ignore
import sent from '@/views/resources/img/icons/sent.png';
// @ts-ignore
import settings from '@/views/resources/img/icons/settings.png';
// @ts-ignore
import signatureRequired from '@/views/resources/img/icons/signature-required.png';
// @ts-ignore
import signCosign from '@/views/resources/img/icons/sign-cosign.png';
// @ts-ignore
import spamThrottle from '@/views/resources/img/icons/spam-throttle.png';
// @ts-ignore
import statistics from '@/views/resources/img/icons/statistics.png';
// @ts-ignore
import transactions from '@/views/resources/img/icons/transactions.png';
// @ts-ignore
import transfer from '@/views/resources/img/icons/transfer.png';
// @ts-ignore
import transferTransactions from '@/views/resources/img/icons/transfer-transactions.png';
// @ts-ignore
import unlock from '@/views/resources/img/icons/unlock.png';
// @ts-ignore
import wallet from '@/views/resources/img/icons/wallet.svg';
// @ts-ignore
import xymCoin from '@/views/resources/img/icons/xym-coin.png';
// @ts-ignore
import importPrivateKeyStepImage1 from '@/views/resources/img/login/1-3.png';
// @ts-ignore
import importPrivateKeyStepImage2 from '@/views/resources/img/login/2-3.png';
// @ts-ignore
import importPrivateKeyStepImage3 from '@/views/resources/img/login/3-3.png';
// @ts-ignore
import voting from '@/views/resources/img/icons/voting.png';

/// region exported image objects
export const walletTypeImages = {
    createImg,
    seedImg,
    trezorImg,
    ledgerImg,
};

export const importStepImage = {
    importStepImage1,
    importStepImage2,
    importStepImage3,
    importStepImage4,
};

export const createStepImage = {
    createStepImage1,
    createStepImage2,
    createStepImage3,
    createStepImage4,
    createStepImage5,
};

export const importPrivateKeyStepImage = {
    importPrivateKeyStepImage1,
    importPrivateKeyStepImage2,
    importPrivateKeyStepImage3,
};
export const dashboardImages = {
    dashboardUnconfirmed,
    dashboardConfirmed,
    selected,
    unselected,
};

export const leftBarIcons = {
    windowDashboard,
    windowDashboardActive,
    windowWallet,
    windowWalletActive,
    windowMosaic,
    windowMosaicActive,
    windowNamespace,
    windowNamespaceActive,
    windowMultisig,
    windowMultisigActive,
    windowCommunity,
    windowCommunityActive,
    windowSetting,
    windowSettingActive,
};

// icons provided by the marketing agency
export const officialIcons = {
    accountRestrictionAlt,
    accountRestriction,
    addAccount,
    addAggregate,
    aggregate,
    aggregateTransaction,
    alias,
    apiNode,
    blockchainBlock,
    blockchain,
    block,
    blocks,
    blockTime,
    card,
    certificate,
    checkMark,
    confirmed,
    crossChain,
    cryptography,
    customerAlice,
    customerBob,
    customerCharlie,
    dashboard,
    delegatedHarvesting,
    encryptedMessage,
    enterprise,
    explorer,
    fingerprint,
    harvest,
    incoming,
    lock,
    message,
    metadata,
    mosaic,
    mosaicRestriction,
    multipleParties,
    multisig,
    namespace,
    nem2Cli,
    nem2Sdk,
    news,
    nodeReputation,
    nodes,
    notMultisig,
    outgoing,
    pending,
    privateChain,
    privateKey,
    publicChain,
    publicKey,
    publicPrivateKey,
    qr,
    receive,
    send,
    sent,
    settings,
    signatureRequired,
    signCosign,
    spamThrottle,
    statistics,
    transactions,
    transfer,
    transferTransactions,
    unlock,
    wallet,
    xymCoin,
    voting,
};

export const transactionTypeToIcon = {
    [TransactionType.NAMESPACE_REGISTRATION]: officialIcons.namespace,
    [TransactionType.ADDRESS_ALIAS]: officialIcons.alias,
    [TransactionType.MOSAIC_ALIAS]: officialIcons.namespace,
    [TransactionType.MOSAIC_DEFINITION]: officialIcons.mosaic,
    [TransactionType.MOSAIC_SUPPLY_CHANGE]: officialIcons.mosaic,
    [TransactionType.MULTISIG_ACCOUNT_MODIFICATION]: officialIcons.multipleParties,
    [TransactionType.AGGREGATE_COMPLETE]: officialIcons.aggregateTransaction,
    [TransactionType.AGGREGATE_BONDED]: officialIcons.aggregateTransaction,
    [TransactionType.HASH_LOCK]: officialIcons.lock,
    [TransactionType.SECRET_LOCK]: officialIcons.lock,
    [TransactionType.SECRET_PROOF]: officialIcons.lock,
    [TransactionType.ACCOUNT_ADDRESS_RESTRICTION]: officialIcons.accountRestriction,
    [TransactionType.ACCOUNT_MOSAIC_RESTRICTION]: officialIcons.mosaicRestriction,
    [TransactionType.ACCOUNT_OPERATION_RESTRICTION]: officialIcons.accountRestrictionAlt,
    [TransactionType.ACCOUNT_KEY_LINK]: officialIcons.publicChain,
    [TransactionType.MOSAIC_ADDRESS_RESTRICTION]: officialIcons.mosaicRestriction,
    [TransactionType.MOSAIC_GLOBAL_RESTRICTION]: officialIcons.mosaicRestriction,
    [TransactionType.ACCOUNT_METADATA]: officialIcons.metadata,
    [TransactionType.MOSAIC_METADATA]: officialIcons.metadata,
    [TransactionType.NAMESPACE_METADATA]: officialIcons.metadata,
    [TransactionType.VOTING_KEY_LINK]: officialIcons.voting,
    [TransactionType.VRF_KEY_LINK]: officialIcons.privateKey,
};

/// end-region exported image objects

'''
'''--- src/views/resources/fonts/fonts.css ---
@font-face {
    font-family: 'noto-sans-bold';
    src: url('NotoSans-Bold.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'noto-sans-extrabold';
    src: url('NotoSans-ExtraBold.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'noto-sans-light';
    src: url('NotoSans-Light.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'noto-sans-medium';
    src: url('NotoSans-Medium.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'noto-sans-regular';
    src: url('NotoSans-Regular.ttf');
    font-weight: normal;
    font-style: normal;
}
@font-face {
    font-family: 'noto-sans-semibold';
    src: url('NotoSans-SemiBold.ttf');
    font-weight: normal;
    font-style: normal;
}

'''
'''--- src/views/resources/img/icons/mosaic.svg ---
<svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path d="M15.6862 21.5318C12.3006 21.5318 8.93219 21.074 6.45341 20.2708C3.60325 19.3466 2.0918 18.0511 2.0918 16.531C2.0918 15.0109 3.60325 13.7154 6.45341 12.7913C8.93219 11.988 12.2919 11.5303 15.6862 11.5303C19.0805 11.5303 22.4402 11.988 24.919 12.7913C27.7692 13.7154 29.2806 15.0109 29.2806 16.531C29.2806 18.0511 27.7692 19.3466 24.9104 20.2708C22.4402 21.074 19.0719 21.5318 15.6862 21.5318ZM15.6862 12.6703C12.3092 12.6703 9.13084 13.1108 6.73843 13.9054C4.51875 14.6568 3.2405 15.6328 3.2405 16.5828C3.2405 17.5329 4.51875 18.5089 6.73843 19.2603C9.13084 20.0549 12.3092 20.4953 15.6862 20.4953C19.0632 20.4953 22.2416 20.0549 24.634 19.2603C26.8623 18.5089 28.1319 17.5329 28.1319 16.5828C28.1319 15.6328 26.8537 14.6568 24.634 13.9054C22.2416 13.1108 19.0632 12.6703 15.6862 12.6703Z" fill="#44004E"/>
<path d="M15.687 29.0716C12.3014 29.0716 8.93301 28.6139 6.45423 27.8106C3.59543 26.8865 2.08398 25.591 2.08398 24.0709V16.5482C2.08398 16.2804 2.24808 16.0127 2.61947 16.0127C2.96494 16.0127 3.15495 16.2027 3.15495 16.5482V24.0709C3.15495 25.0209 4.43321 25.9969 6.65288 26.7483C9.04529 27.5429 12.2237 27.9834 15.6007 27.9834C18.9777 27.9834 22.156 27.5429 24.5485 26.7483C26.7768 25.9969 28.0464 25.0209 28.0464 24.0709V16.5482C28.0464 16.2804 28.2105 16.0127 28.5819 16.0127C28.8496 16.0127 29.1174 16.1768 29.1174 16.5482V24.0709C29.1346 24.7446 28.8669 25.3664 28.3228 25.9192C26.2672 28.0957 20.4891 29.0716 15.687 29.0716Z" fill="#44004E"/>
<path d="M15.6862 36.4732C12.3006 36.4732 8.93219 36.0155 6.45341 35.2122C3.60325 34.2881 2.0918 32.9926 2.0918 31.4638V28.2855C2.0918 28.0177 2.2559 27.75 2.62728 27.75C2.97276 27.75 3.16277 27.94 3.16277 28.2855V31.412C3.16277 32.3621 4.44102 33.338 6.66069 34.0895C9.0531 34.884 12.2315 35.3245 15.6085 35.3245C18.9855 35.3245 22.1639 34.884 24.5563 34.0895C26.7846 33.338 28.0542 32.3621 28.0542 31.412V28.2855C28.0542 28.0177 28.2183 27.75 28.5897 27.75C28.8574 27.75 29.1252 27.9141 29.1252 28.2855V31.412C29.1424 32.0771 28.8661 32.7076 28.3133 33.2776C26.5341 35.1863 21.4556 36.4732 15.6862 36.4732Z" fill="#44004E"/>
<path d="M15.687 44.0651C12.3014 44.0651 8.93301 43.6074 6.45423 42.8041C3.59543 41.88 2.08398 40.5845 2.08398 39.0644V35.9378C2.08398 35.6701 2.24808 35.4023 2.61947 35.4023C2.96494 35.4023 3.15495 35.5924 3.15495 35.9378V39.0644C3.15495 40.0144 4.43321 40.9904 6.65288 41.7418C9.04529 42.5364 12.2237 42.9769 15.6007 42.9769C18.9777 42.9769 22.156 42.5364 24.5485 41.7418C26.7768 40.9904 28.0464 40.0144 28.0464 39.0644V35.9378C28.0464 35.6701 28.2105 35.4023 28.5819 35.4023C28.8496 35.4023 29.1174 35.5664 29.1174 35.9378V39.0644C29.1346 39.7208 28.8669 40.334 28.34 40.8867C26.5436 42.7869 21.4478 44.0651 15.687 44.0651Z" fill="#44004E"/>
<path d="M29.3921 10.2515C26.0065 10.2515 22.6381 9.79373 20.1593 8.9905C17.3005 8.06636 15.7891 6.77083 15.7891 5.25074C15.7891 3.73065 17.3005 2.43513 20.1507 1.51098C22.6295 0.707754 25.9892 0.25 29.3835 0.25C32.7778 0.25 36.1375 0.707754 38.6163 1.51098C41.4664 2.43513 42.9779 3.73065 42.9779 5.25074C42.9779 6.77083 41.4664 8.06636 38.6076 8.9905C36.1461 9.79373 32.7778 10.2515 29.3921 10.2515ZM29.3921 1.39007C26.0151 1.39007 22.8367 1.83055 20.4443 2.62514C18.216 3.37654 16.9464 4.35251 16.9464 5.30256C16.9464 6.25262 18.2247 7.22858 20.4443 7.97999C22.8367 8.77458 26.0151 9.21506 29.3921 9.21506C32.7691 9.21506 35.9475 8.77458 38.3399 7.97999C40.5682 7.22858 41.8378 6.25262 41.8378 5.30256C41.8378 4.35251 40.5596 3.37654 38.3399 2.62514C35.9475 1.83055 32.7691 1.39007 29.3921 1.39007Z" fill="#FF00FF"/>
<path d="M15.8164 10.6321V5.25131C15.8164 4.98356 15.9805 4.71582 16.3519 4.71582C16.6974 4.71582 16.8874 4.90583 16.8874 5.25131V10.6321H15.8164Z" fill="#FF00FF"/>
<path d="M30.5586 17.7749V16.6694H30.7054C36.8203 16.4621 41.7951 14.7175 41.7951 12.7828V5.26009C41.7951 4.99235 41.9592 4.72461 42.3306 4.72461C42.5984 4.72461 42.8661 4.88871 42.8661 5.26009V12.7828C42.8834 13.4306 42.6329 14.0438 42.1147 14.6052C40.4823 16.3412 35.9998 17.5849 30.7054 17.7749H30.5586Z" fill="#FF00FF"/>
<path d="M30.6797 25.1768V24.0281H30.8438C33.8321 23.9072 36.6046 23.4322 38.6601 22.698C40.6812 21.9725 41.7867 21.0657 41.7867 20.1415V17.015C41.7867 16.7472 41.9508 16.4795 42.3222 16.4795C42.5899 16.4795 42.8577 16.6436 42.8577 17.015V20.1415C42.9181 21.938 40.8539 23.0867 39.1179 23.7345C36.9414 24.5463 33.9962 25.0559 30.8265 25.1768H30.6797Z" fill="#FF00FF"/>
<path d="M30.5059 32.7599V31.6717H30.67C33.7015 31.568 36.5257 31.1016 38.6331 30.3502C40.6455 29.6247 41.8029 28.6919 41.8029 27.7851V24.6585C41.8029 24.3908 41.967 24.123 42.3384 24.123C42.6061 24.123 42.8738 24.2871 42.8738 24.6585V27.7851C42.8911 28.4328 42.632 29.0374 42.1224 29.5643C40.4728 31.3348 35.973 32.5872 30.6527 32.7599H30.5059Z" fill="#FF00FF"/>
</g>
<defs>
<clipPath id="clip0">
<rect width="44.2207" height="44.2207" fill="white" transform="translate(0.21875)"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/views/resources/img/icons/multisig.svg ---
<svg width="52" height="45" viewBox="0 0 52 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path d="M26.0683 10.1912C24.7468 10.1912 23.4945 9.67303 22.5444 8.72297C21.603 7.78156 21.0762 6.52921 21.0762 5.19914C21.0762 3.8777 21.5944 2.62535 22.5444 1.6753C23.4599 0.742517 24.7468 0.207031 26.0683 0.207031C27.3897 0.207031 28.6421 0.725243 29.5921 1.6753C30.5422 2.62535 31.0604 3.86906 31.0604 5.19914C31.0604 6.52921 30.5422 7.77292 29.5921 8.72297C28.6421 9.67303 27.3984 10.1912 26.0683 10.1912ZM26.0683 1.07072C24.9541 1.07072 23.9177 1.50256 23.1404 2.27988C22.3631 3.05719 21.9312 4.10225 21.9312 5.20777C21.9312 6.32193 22.3631 7.35835 23.1404 8.13567C23.9177 8.91298 24.9628 9.34483 26.0683 9.34483C27.1824 9.34483 28.2189 8.91298 28.9962 8.13567C29.7735 7.35835 30.2053 6.31329 30.2053 5.20777C30.2053 4.09362 29.7735 3.05719 28.9962 2.27988C28.2189 1.50256 27.1824 1.07072 26.0683 1.07072Z" fill="#44004E"/>
<path d="M17.6816 16.3844V15.3653C17.6816 14.0611 18.1308 12.7656 18.934 11.7292C19.7372 10.6841 20.8859 9.93269 22.1642 9.61313C22.1901 9.60449 22.2246 9.60449 22.2505 9.60449C22.4146 9.60449 22.5701 9.6995 22.6392 9.84632C23.0019 10.4336 23.4856 10.9 24.0729 11.2282C24.6602 11.5651 25.3166 11.7378 26.0248 11.7378C26.6985 11.7378 27.3722 11.5564 27.9768 11.2282C28.5727 10.9 29.0823 10.4077 29.4364 9.81178C29.5141 9.68222 29.6437 9.60449 29.7905 9.60449C29.8337 9.60449 29.8769 9.61313 29.9114 9.62177C31.1724 9.94997 32.3125 10.7014 33.1243 11.7378C33.9448 12.7915 34.3767 14.0525 34.3767 15.3739V16.324H34.3335C34.2126 16.3153 34.083 16.3153 33.9621 16.3153C33.8326 16.3153 33.7116 16.3067 33.5821 16.2981H33.5389V15.3739C33.5389 14.2338 33.1675 13.1629 32.4679 12.256C31.8288 11.4355 30.9738 10.8396 29.9719 10.5114C29.5573 11.0987 29.0218 11.5823 28.3827 11.9537C27.6486 12.3596 26.854 12.5669 26.0162 12.5669C25.1784 12.5669 24.3838 12.3596 23.6497 11.9537C23.0106 11.591 22.4751 11.1073 22.0605 10.5114C21.0759 10.8309 20.2122 11.4355 19.5817 12.256C18.8822 13.1542 18.5108 14.2338 18.5108 15.3739V16.3931H17.6816V16.3844Z" fill="#44004E"/>
<path d="M8.94132 33.6492C7.61988 33.6492 6.36754 33.131 5.41748 32.181C4.47607 31.2396 3.94922 29.9872 3.94922 28.6571C3.94922 27.3271 4.46743 26.0834 5.41748 25.1333C6.3589 24.1919 7.61125 23.665 8.94132 23.665C10.2628 23.665 11.5151 24.1833 12.4652 25.1333C13.4066 26.0747 13.9334 27.3271 13.9334 28.6571C13.9334 29.9872 13.4152 31.2309 12.4652 32.181C11.5151 33.1224 10.2628 33.6492 8.94132 33.6492ZM8.94996 24.5201C7.83581 24.5201 6.79938 24.9519 6.02206 25.7292C5.24475 26.5066 4.8129 27.5516 4.8129 28.6571C4.8129 29.7627 5.24475 30.8077 6.02206 31.585C6.79938 32.3624 7.84444 32.7942 8.94996 32.7942C10.0641 32.7942 11.1005 32.3624 11.8779 31.585C12.6552 30.8077 13.087 29.7627 13.087 28.6571C13.087 27.5516 12.6552 26.5066 11.8779 25.7292C11.1005 24.9519 10.0641 24.5201 8.94996 24.5201Z" fill="#44004E"/>
<path d="M8.92328 44.2119C7.36865 44.2119 5.84856 43.8837 4.40621 43.2445C3.01567 42.6227 1.72878 41.6726 0.68372 40.498C0.614626 40.4116 0.580078 40.3253 0.580078 40.2216V38.8311C0.580078 37.5097 1.01192 36.2487 1.83242 35.195C2.63565 34.1499 3.78435 33.3985 5.06261 33.0789C5.09716 33.0703 5.1317 33.0703 5.16625 33.0703C5.33899 33.0703 5.48581 33.1653 5.54627 33.3121C5.90902 33.8908 6.39268 34.3572 6.97999 34.694C7.58457 35.0309 8.25825 35.2036 8.93192 35.2036C9.62287 35.2036 10.3052 35.0222 10.8839 34.694C11.4798 34.3658 11.9894 33.8735 12.3521 33.2776C12.4298 33.148 12.5594 33.0703 12.7062 33.0703C12.7494 33.0703 12.7926 33.079 12.8271 33.0876C14.0881 33.4072 15.2368 34.1586 16.0401 35.2036C16.8519 36.24 17.2924 37.5356 17.2924 38.8397V40.2303C17.2751 40.3425 17.2319 40.4376 17.1542 40.5239C16.1005 41.6985 14.8568 42.614 13.4576 43.2445C12.0326 43.8837 10.5125 44.2119 8.92328 44.2119ZM1.41785 40.0662C2.35927 41.094 3.51661 41.9317 4.75168 42.4845C6.04721 43.0718 7.4982 43.3741 8.92328 43.3741C10.3656 43.3741 11.7648 43.0718 13.0949 42.4845C14.3731 41.9058 15.4959 41.094 16.4287 40.0662V38.8397C16.4287 37.6997 16.0573 36.6287 15.3577 35.7218C14.7273 34.91 13.8636 34.3054 12.879 33.9772C12.4644 34.5645 11.9289 35.0482 11.2898 35.4195C10.5557 35.8255 9.76106 36.0328 8.92328 36.0328C8.08551 36.0328 7.29092 35.8255 6.55678 35.4195C5.91766 35.0568 5.38217 34.5645 4.9676 33.9772C3.97436 34.2881 3.11931 34.8927 2.48882 35.7218C1.78924 36.6201 1.41785 37.6997 1.41785 38.8397V40.0662Z" fill="#44004E"/>
<path d="M42.6835 33.5203C41.3621 33.5203 40.1097 33.0021 39.1597 32.0521C38.2183 31.1107 37.6914 29.8583 37.6914 28.5282C37.6914 27.1982 38.2096 25.9545 39.1597 25.0044C40.1097 24.0543 41.3534 23.5361 42.6835 23.5361C44.0136 23.5361 45.2573 24.0543 46.2073 25.0044C47.1488 25.9458 47.6756 27.1982 47.6756 28.5282C47.6756 29.8583 47.1574 31.102 46.2073 32.0521C45.2573 32.9935 44.0049 33.5203 42.6835 33.5203ZM42.6921 24.3912C41.578 24.3912 40.5416 24.823 39.7643 25.6003C38.9869 26.3777 38.5551 27.4227 38.5551 28.5282C38.5551 29.6338 38.9869 30.6788 39.7643 31.4561C40.5416 32.2334 41.5866 32.6653 42.6921 32.6653C43.7977 32.6653 44.8427 32.2334 45.62 31.4561C46.3974 30.6788 46.8292 29.6338 46.8292 28.5282C46.8292 27.4227 46.3974 26.3777 45.62 25.6003C44.8427 24.823 43.8063 24.3912 42.6921 24.3912Z" fill="#44004E"/>
<path d="M42.6674 44.083C41.1128 44.083 39.5927 43.7548 38.1503 43.1156C36.7598 42.4938 35.4729 41.5437 34.4279 40.3691C34.3588 40.2827 34.3242 40.1964 34.3242 40.0927V38.7022C34.3242 37.3808 34.7561 36.1198 35.5766 35.0661C36.3798 34.021 37.5285 33.2696 38.8067 32.95C38.8413 32.9414 38.8758 32.9414 38.9104 32.9414C39.0831 32.9414 39.23 33.0364 39.2904 33.1832C39.6532 33.7619 40.1368 34.2283 40.7241 34.5651C41.3287 34.902 42.0024 35.0747 42.6761 35.0747C43.367 35.0747 44.0493 34.8933 44.628 34.5651C45.2239 34.2369 45.7335 33.7446 46.0963 33.1487C46.174 33.0191 46.3035 32.9414 46.4504 32.9414C46.4936 32.9414 46.5367 32.95 46.5713 32.9587C47.8323 33.2782 48.981 34.0297 49.7842 35.0747C50.5961 36.1111 51.0365 37.4067 51.0365 38.7108V40.1014C51.0193 40.2136 50.9761 40.3086 50.8983 40.395C49.8447 41.5696 48.6009 42.4851 47.2018 43.1156C45.7767 43.7548 44.2566 44.083 42.6674 44.083ZM35.162 39.9373C36.1034 40.965 37.2607 41.8028 38.4958 42.3556C39.7913 42.9429 41.2423 43.2452 42.6674 43.2452C44.1098 43.2452 45.509 42.9429 46.839 42.3556C48.1173 41.7769 49.2401 40.965 50.1729 39.9373V38.7108C50.1729 37.5708 49.8015 36.4998 49.1019 35.5929C48.4714 34.7811 47.6077 34.1765 46.6231 33.8483C46.2085 34.4356 45.673 34.9192 45.0339 35.2906C44.2998 35.6966 43.4966 35.9039 42.6674 35.9039C41.8296 35.9039 41.0351 35.6966 40.3009 35.2906C39.6618 34.9279 39.1263 34.4356 38.7117 33.8483C37.7271 34.1592 36.8635 34.7638 36.233 35.5929C35.5334 36.4912 35.162 37.5708 35.162 38.7108V39.9373Z" fill="#44004E"/>
<path d="M16.0147 32.2504V32.2072C15.8852 32.1468 15.7988 32.0086 15.7988 31.8531V17.9219C15.7988 17.7059 15.9716 17.5332 16.1875 17.5332H32.6666C33.1675 17.5332 33.6339 17.7319 34.0053 18.086C34.3681 18.4487 34.5581 18.9151 34.5581 19.4247V22.8881C34.5581 23.104 34.3853 23.2767 34.1694 23.2767C33.9535 23.2767 33.7808 23.104 33.7808 22.8881V19.4247C33.7808 19.131 33.6685 18.8546 33.4612 18.6474C33.2453 18.4401 32.9689 18.3278 32.6839 18.3278H16.5848V31.4731H32.6752C32.9689 31.4731 33.2453 31.3608 33.4526 31.1535C33.6599 30.9376 33.7721 30.6612 33.7721 30.3762V26.9128C33.7721 26.6969 33.9449 26.5242 34.1608 26.5242C34.3767 26.5242 34.5494 26.6969 34.5494 26.9128V30.3589C34.5494 30.8599 34.3508 31.3435 33.9967 31.6977C33.6426 32.0518 33.1675 32.2504 32.658 32.2504H16.0147Z" fill="#44004E"/>
<path d="M30.662 27.3095C30.2993 27.3095 29.9538 27.1626 29.6774 26.9035C29.4183 26.6444 29.2715 26.2903 29.2715 25.9189V23.872C29.2715 23.5092 29.4183 23.1638 29.6774 22.8874C29.9538 22.6196 30.2906 22.4814 30.662 22.4814H35.775C36.1378 22.4814 36.4833 22.6283 36.7596 22.8874C37.0187 23.1378 37.1656 23.492 37.1656 23.872V25.9189C37.1656 26.2817 37.0187 26.6271 36.7596 26.9035C36.5092 27.1626 36.1551 27.3095 35.775 27.3095H30.662ZM30.662 23.276C30.5152 23.276 30.3597 23.3365 30.2474 23.4488C30.1438 23.5524 30.0747 23.7165 30.0747 23.8633V25.9103C30.0747 26.0571 30.1352 26.2126 30.2474 26.3248C30.3511 26.4285 30.5152 26.4976 30.662 26.4976H35.775C35.9219 26.4976 36.0773 26.4371 36.1896 26.3248C36.2933 26.2212 36.3623 26.0571 36.3623 25.9103V23.8633C36.3623 23.7165 36.3019 23.5611 36.1896 23.4488C36.0773 23.3365 35.9391 23.276 35.7837 23.276H30.662Z" fill="#44004E"/>
<path d="M32.0948 26.135C31.7925 26.135 31.4816 26.0054 31.2743 25.7895C31.0498 25.565 30.9375 25.2886 30.9375 24.9777C30.9375 24.6754 31.0671 24.3644 31.283 24.1572C31.4903 23.9326 31.7753 23.8203 32.0948 23.8203C32.3971 23.8203 32.7081 23.9499 32.9153 24.1658C33.1399 24.3903 33.2522 24.6667 33.2522 24.9777C33.2522 25.2799 33.1226 25.5909 32.9067 25.7982C32.6994 26.0141 32.3971 26.135 32.0948 26.135ZM32.0948 24.6149C31.9998 24.6149 31.9048 24.6581 31.8357 24.7272C31.7666 24.7963 31.7235 24.8999 31.7235 24.9863C31.7235 25.0813 31.7666 25.1763 31.8357 25.2454C31.9048 25.3145 32.0085 25.3577 32.0948 25.3577C32.1898 25.3577 32.2848 25.3145 32.3539 25.2454C32.423 25.1763 32.4662 25.0727 32.4662 24.9863C32.4662 24.8913 32.4317 24.8049 32.3626 24.7358L32.3539 24.7272C32.2848 24.6581 32.1898 24.6149 32.0948 24.6149Z" fill="#FF00FF"/>
<path d="M32.8041 21.1514C32.5882 21.1514 32.4154 20.9786 32.4154 20.7627C32.4154 20.4691 32.3032 20.1927 32.0959 19.9854C31.88 19.7781 31.6036 19.6658 31.3186 19.6658H26.3437C26.1278 19.6658 25.9551 19.4931 25.9551 19.2772C25.9551 19.0613 26.1278 18.8885 26.3437 18.8885H26.3956L26.4733 18.8799H31.3186C31.8281 18.8799 32.3032 19.0785 32.6573 19.4326C33.0114 19.7868 33.21 20.2618 33.21 20.7714C33.1928 20.9873 33.02 21.1514 32.8041 21.1514Z" fill="#FF00FF"/>
</g>
<defs>
<clipPath id="clip0">
<rect width="50.992" height="44.2207" fill="white" transform="translate(0.285156)"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/views/resources/img/icons/namespace.svg ---
<svg width="46" height="45" viewBox="0 0 46 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M25.8847 43.4436C25.7552 43.4436 25.6256 43.3918 25.5306 43.2967L2.85024 20.6164C2.75524 20.5214 2.72069 20.3918 2.71205 20.3054L1.81382 7.98064C1.79655 7.83381 1.84837 7.68698 1.95201 7.58334L8.60239 0.932959C8.70603 0.837954 8.83559 0.786133 8.9565 0.786133C8.97378 0.786133 8.98241 0.786133 8.99969 0.786133L21.3504 1.68437H21.359C21.4713 1.68437 21.575 1.73619 21.67 1.82256L44.3503 24.4857C44.4454 24.5807 44.4972 24.7016 44.4972 24.8398C44.4972 24.9693 44.4454 25.0989 44.3503 25.1939L26.2302 43.2967C26.1352 43.3918 26.0143 43.4436 25.8847 43.4436ZM2.80706 8.12746L3.67938 20.055L25.8847 42.2603L43.2966 24.8484L21.0913 2.64306L9.16379 1.77937L2.80706 8.12746Z" fill="#44004E"/>
<path d="M9.89835 11.6246C9.15558 11.6246 8.46464 11.3396 7.94642 10.8213C6.86682 9.74174 6.86682 7.99709 7.94642 6.91749C8.46464 6.39927 9.15558 6.11426 9.89835 6.11426C10.6411 6.11426 11.3321 6.39927 11.8503 6.91749C12.9299 7.99709 12.9299 9.74174 11.8503 10.8213C11.3321 11.3396 10.6411 11.6246 9.89835 11.6246ZM9.89835 7.09886C9.43196 7.09886 8.98285 7.28887 8.64601 7.62571C8.30917 7.96255 8.11916 8.41166 8.11916 8.87805C8.11916 9.34444 8.30917 9.79356 8.64601 10.1304C8.98285 10.4672 9.43196 10.6572 9.89835 10.6572C10.3647 10.6572 10.8139 10.4672 11.1507 10.1304C11.8416 9.41354 11.8416 8.31666 11.1507 7.63434C10.8139 7.28023 10.3734 7.09886 9.89835 7.09886Z" fill="#FF00FF"/>
<path d="M25.8832 39.22C25.7536 39.22 25.6327 39.1682 25.529 39.0731L22.3248 35.8689C22.1261 35.6702 22.1261 35.3679 22.3248 35.1693C22.4198 35.0743 22.5407 35.0225 22.6789 35.0225C22.8171 35.0225 22.9293 35.0743 23.033 35.1693L25.8832 38.0195L27.6623 36.2403C27.7573 36.1453 27.8783 36.0934 28.0165 36.0934C28.146 36.0934 28.2669 36.1453 28.3706 36.2403C28.4656 36.3353 28.5174 36.4562 28.5174 36.5944C28.5174 36.7326 28.4656 36.8448 28.3706 36.9485L26.2373 39.0818C26.1336 39.1682 26.0127 39.22 25.8832 39.22Z" fill="#44004E"/>
</svg>

'''
'''--- src/views/resources/img/icons/news.svg ---
<svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.82523 39.091C9.64386 39.091 9.47112 38.9528 9.4193 38.7714L1.49066 15.0719C1.36111 14.5796 1.59431 14.1218 2.04342 13.9663L32.6697 3.44666C32.7561 3.42075 32.8511 3.41211 32.9375 3.41211C33.3261 3.41211 33.6543 3.63667 33.7839 3.99942L37.4114 14.5191H42.7144C42.9562 14.5191 43.1894 14.6228 43.3362 14.8041C43.4658 14.9682 43.5176 15.1669 43.4744 15.3828V38.2532C43.4744 38.7196 43.0944 39.0996 42.628 39.0996H9.82523V39.091ZM42.6626 38.1927V15.4173H10.3003V38.1927H42.6626ZM9.42794 35.9212V15.3742C9.42794 14.9078 9.80796 14.5277 10.2743 14.5277H36.4699L32.9461 4.31898L2.40617 14.7955L9.42794 35.9212ZM12.8481 35.4117C12.6236 35.4117 12.4077 35.1957 12.4077 34.9712C12.4077 34.7034 12.589 34.5307 12.8481 34.5307H25.1729C25.4407 34.5307 25.6134 34.7121 25.6134 34.9712C25.6134 35.2303 25.432 35.4117 25.1729 35.4117H12.8481ZM27.9972 31.9742C27.7294 31.9742 27.5567 31.7928 27.5567 31.5337C27.5567 31.2746 27.7381 31.0932 27.9972 31.0932H40.322C40.5897 31.0932 40.7625 31.2746 40.7625 31.5337C40.7625 31.7928 40.5811 31.9742 40.322 31.9742H27.9972ZM12.8481 28.5799C12.6236 28.5799 12.4077 28.364 12.4077 28.1394C12.4077 27.8717 12.589 27.699 12.8481 27.699H25.1729C25.4407 27.699 25.6134 27.8803 25.6134 28.1394C25.6134 28.3985 25.432 28.5799 25.1729 28.5799H12.8481ZM28.2477 28.3035C28.0231 28.3035 27.7985 28.2085 27.6344 28.0444C27.479 27.8803 27.3926 27.673 27.4012 27.4571V18.2848C27.4012 17.8184 27.7813 17.4384 28.2477 17.4384H39.7606C40.227 17.4384 40.607 17.8184 40.607 18.2848V27.4571C40.607 27.9235 40.227 28.3035 39.7606 28.3035H28.2477ZM39.7174 27.4053V18.3193H28.2908V27.4053H39.7174ZM12.8481 21.7568C12.6236 21.7568 12.4077 21.5409 12.4077 21.3163C12.4077 21.0486 12.589 20.8758 12.8481 20.8758H25.1729C25.4407 20.8758 25.6134 21.0572 25.6134 21.3163C25.6134 21.5841 25.432 21.7568 25.1729 21.7568H12.8481Z" fill="#44004E"/>
<path d="M27.8331 35.4112C27.6171 35.4112 27.3926 35.1867 27.3926 34.9708C27.3926 34.703 27.574 34.5303 27.8331 34.5303H40.1579C40.4256 34.5303 40.5983 34.7116 40.5983 34.9708C40.5983 35.2299 40.417 35.4112 40.1579 35.4112H27.8331Z" fill="#FF00FF"/>
<path d="M13.0108 31.9737C12.743 31.9737 12.5703 31.7924 12.5703 31.5333C12.5703 31.2741 12.7517 31.0928 13.0108 31.0928H25.3356C25.5601 31.0928 25.7761 31.3087 25.7761 31.5333C25.7761 31.801 25.5947 31.9737 25.3356 31.9737H13.0108Z" fill="#FF00FF"/>
<path d="M13.0108 25.1505C12.743 25.1505 12.5703 24.9691 12.5703 24.71C12.5703 24.4509 12.7517 24.2695 13.0108 24.2695H25.3356C25.3356 24.2695 25.3442 24.2695 25.3529 24.2695C25.5688 24.2695 25.7847 24.4941 25.7847 24.7186C25.7847 24.9864 25.6033 25.1591 25.3442 25.1591H13.0108V25.1505Z" fill="#FF00FF"/>
<path d="M13.0108 18.3185C12.743 18.3185 12.5703 18.1371 12.5703 17.878C12.5703 17.6102 12.7517 17.4375 13.0108 17.4375H25.3356C25.6033 17.4375 25.7761 17.6189 25.7761 17.878C25.7761 18.1457 25.5947 18.3185 25.3356 18.3185H13.0108Z" fill="#FF00FF"/>
</svg>

'''
'''--- src/views/resources/img/icons/qr.svg ---
<svg width="51" height="51" viewBox="0 0 51 51" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M16.3898 26.0818C16.0618 26.0818 15.7972 25.8173 15.7972 25.4893V20.0084H0.592528C0.264522 20.0084 0 19.7439 0 19.4159V3.62924C0 1.62945 1.62945 0 3.62924 0H19.4159C19.7439 0 20.0084 0.264522 20.0084 0.592528V6.36968H25.4893C25.8173 6.36968 26.0818 6.6342 26.0818 6.96221V13.0356C26.0818 13.3636 25.8173 13.6282 25.4893 13.6282C25.1507 13.6282 24.8968 13.3742 24.8968 13.0356V7.56532H20.019V19.4159C20.019 19.7439 19.7545 20.0084 19.4265 20.0084H16.9717V25.4893C16.9823 25.6374 16.9294 25.7856 16.8236 25.902C16.6966 26.0183 16.5485 26.0818 16.3898 26.0818ZM18.8234 18.8339V1.19564H3.62924C2.27489 1.19564 1.17448 2.29605 1.17448 3.6504V18.8339H18.8234Z" fill="#44004E"/>
<path d="M6.97339 13.6384C6.64538 13.6384 6.38086 13.3738 6.38086 13.0458V6.97241C6.38086 6.6444 6.64538 6.37988 6.97339 6.37988H13.0468C13.3748 6.37988 13.6393 6.6444 13.6393 6.97241V13.0458C13.6393 13.3738 13.3748 13.6384 13.0468 13.6384H6.97339ZM12.4437 12.4427V7.56494H7.56592V12.4427H12.4437Z" fill="#FF00FF"/>
<path d="M6.97339 44.6091C6.64538 44.6091 6.38086 44.3445 6.38086 44.0165V37.9431C6.38086 37.6151 6.64538 37.3506 6.97339 37.3506H13.0468C13.3748 37.3506 13.6393 37.6151 13.6393 37.9431V44.0165C13.6393 44.3445 13.3748 44.6091 13.0468 44.6091H6.97339ZM12.4437 43.4134V38.5356H7.56592V43.4134H12.4437Z" fill="#FF00FF"/>
<path d="M31.5632 20.0084C31.2352 20.0084 30.9707 19.7439 30.9707 19.4159V0.592528C30.9707 0.264522 31.2352 0 31.5632 0H47.3499C49.3497 0 50.9791 1.62945 50.9791 3.62924V19.4159C50.9791 19.7439 50.7146 20.0084 50.3866 20.0084H31.5632ZM49.8046 18.8234V3.62924C49.8046 2.27489 48.7042 1.17448 47.3499 1.17448H32.1663V18.8234H49.8046Z" fill="#44004E"/>
<path d="M37.9421 13.6384C37.6141 13.6384 37.3496 13.3738 37.3496 13.0458V6.97241C37.3496 6.6444 37.6141 6.37988 37.9421 6.37988H44.0156C44.3436 6.37988 44.6081 6.6444 44.6081 6.97241V13.0458C44.6081 13.3738 44.3436 13.6384 44.0156 13.6384H37.9421ZM43.4124 12.4427V7.56494H38.5347V12.4427H43.4124Z" fill="#FF00FF"/>
<path d="M50.3855 38.5352C50.0575 38.5352 49.793 38.2707 49.793 37.9427V31.573C49.793 31.245 50.0575 30.9805 50.3855 30.9805C50.7241 30.9805 50.978 31.2344 50.978 31.573V37.9427C50.978 38.2707 50.7135 38.5352 50.3855 38.5352Z" fill="#44004E"/>
<path d="M37.9421 50.9783C37.6141 50.9783 37.3496 50.7137 37.3496 50.3857C37.3496 50.0471 37.6036 49.7932 37.9421 49.7932H47.3591C48.7135 49.7932 49.8139 48.6928 49.8139 47.3384V43.9949C49.8139 43.6669 50.0784 43.4023 50.4064 43.4023C50.745 43.4023 50.9989 43.6563 50.9989 43.9949V47.3384C50.9989 49.3382 49.3695 50.9677 47.3697 50.9677H38.0374V50.9888H37.9421V50.9783Z" fill="#44004E"/>
<path d="M31.5632 50.9786C31.2352 50.9786 30.9707 50.714 30.9707 50.386V44.0164C30.9707 43.6884 31.2352 43.4238 31.5632 43.4238C31.9018 43.4238 32.1558 43.6778 32.1558 44.0164V50.386C32.1663 50.714 31.8912 50.9786 31.5632 50.9786Z" fill="#44004E"/>
<path d="M31.5632 38.5355C31.2352 38.5355 30.9707 38.271 30.9707 37.943V31.5733C30.9707 31.2453 31.2352 30.9808 31.5632 30.9808H43.4138V26.103H37.9329C37.6049 26.103 37.3404 25.8385 37.3404 25.5105C37.3404 25.1719 37.5943 24.918 37.9329 24.918H44.0169C44.3449 24.918 44.6094 25.1825 44.6094 25.5105V31.5839C44.6094 31.9119 44.3449 32.1764 44.0169 32.1764H32.1663V37.9536C32.1663 38.2604 31.8912 38.5355 31.5632 38.5355Z" fill="#44004E"/>
<path d="M37.9421 44.6091C37.6141 44.6091 37.3496 44.3445 37.3496 44.0165V37.9431C37.3496 37.6151 37.6141 37.3506 37.9421 37.3506H44.0156C44.3436 37.3506 44.6081 37.6151 44.6081 37.9431V44.0165C44.6081 44.3445 44.3436 44.6091 44.0156 44.6091H37.9421ZM43.4124 43.4134V38.5356H38.5347V43.4134H43.4124Z" fill="#FF00FF"/>
<path d="M25.489 26.0817C25.161 26.0817 24.8965 25.8172 24.8965 25.4892V19.4158C24.8965 19.0878 25.161 18.8232 25.489 18.8232C25.8276 18.8232 26.0815 19.0772 26.0815 19.4158V24.8967H31.5624C31.8904 24.8967 32.155 25.1612 32.155 25.4892C32.155 25.8278 31.901 26.0817 31.5624 26.0817H25.489Z" fill="#44004E"/>
<path d="M25.489 47.9524C25.161 47.9524 24.8965 47.6879 24.8965 47.3599V44.0164C24.8965 43.6884 25.161 43.4238 25.489 43.4238C25.8276 43.4238 26.0815 43.6778 26.0815 44.0164V47.3599C26.0815 47.6773 25.817 47.9524 25.489 47.9524Z" fill="#44004E"/>
<path d="M9.99878 50.978C10.326 50.978 10.5913 50.7127 10.5913 50.3855C10.5913 50.0583 10.326 49.793 9.99878 49.793C9.67153 49.793 9.40625 50.0583 9.40625 50.3855C9.40625 50.7127 9.67153 50.978 9.99878 50.978Z" fill="#44004E"/>
<path d="M14.4632 50.9995V50.9677C14.1881 50.9148 13.9765 50.6715 13.9765 50.3858C13.9765 50.0472 14.2304 49.7933 14.569 49.7933H18.8331V32.1444H1.19482V47.3385C1.19482 48.6928 2.29523 49.7933 3.64958 49.7933H5.46949C5.7975 49.7933 6.06202 50.0578 6.06202 50.3858C6.06202 50.7244 5.80808 50.9783 5.46949 50.9783H3.639C1.63922 50.9783 0.00976562 49.3489 0.00976562 47.3491V31.5624C0.00976562 31.2344 0.274287 30.9699 0.602294 30.9699H3.06764V25.489C3.06764 25.161 3.33216 24.8965 3.66016 24.8965H10.0298C10.3579 24.8965 10.6224 25.161 10.6224 25.489C10.6224 25.8276 10.3684 26.0815 10.0298 26.0815H4.25269V30.9593H19.4468C19.7748 30.9593 20.0393 31.2238 20.0393 31.5518V34.0066H25.4885C25.8165 34.0066 26.081 34.2711 26.081 34.5991V37.9427C26.081 38.2707 25.8165 38.5352 25.4885 38.5352C25.1499 38.5352 24.896 38.2813 24.896 37.9427V35.1917H20.0182V50.3858C20.0182 50.7138 19.7537 50.9783 19.4257 50.9783H14.4632V50.9995Z" fill="#44004E"/>
</svg>

'''
'''--- src/views/resources/img/icons/wallet.svg ---
<svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path d="M1.41787 36.2316C1.1674 36.2316 0.96875 36.0329 0.96875 35.7825V7.26357C0.96875 7.0131 1.1674 6.81445 1.41787 6.81445H35.1621C36.0862 6.81445 36.9672 7.1772 37.6495 7.84224C38.3232 8.51591 38.6773 9.3796 38.6773 10.3297V17.4205C38.6773 17.671 38.4786 17.8696 38.2282 17.8696C37.9777 17.8696 37.779 17.671 37.779 17.4205V10.3297C37.779 9.63007 37.5113 8.98231 37.019 8.49C36.5094 7.9977 35.853 7.72996 35.1793 7.72996H1.87562V35.3593H35.1707C35.8703 35.3593 36.5181 35.0915 37.0104 34.5992C37.5113 34.0724 37.7704 33.4333 37.7704 32.7596V25.6687C37.7704 25.4183 37.9691 25.2196 38.2195 25.2196C38.47 25.2196 38.6686 25.4183 38.6686 25.6687V32.725C38.6686 33.6492 38.2973 34.556 37.6409 35.2125C36.9758 35.8775 36.0949 36.2402 35.1534 36.2402H1.41787V36.2316Z" fill="#44004E"/>
<path d="M31.0675 26.1177C30.4197 26.1177 29.7892 25.8586 29.3056 25.3922C28.8392 24.9258 28.5801 24.3039 28.5801 23.6302V19.4327C28.5801 18.785 28.8392 18.1545 29.3056 17.6708C29.7979 17.1958 30.4025 16.9453 31.0675 16.9453H41.5354C42.1831 16.9453 42.8136 17.2044 43.2973 17.6708C43.7637 18.1199 44.0228 18.7504 44.0228 19.4327V23.6302C44.0228 24.278 43.7637 24.9085 43.2973 25.3922C42.8482 25.8586 42.2177 26.1177 41.5354 26.1177H31.0675ZM31.0675 17.8695C30.6616 17.8695 30.2556 18.0422 29.9706 18.3272C29.6856 18.6122 29.5129 19.0268 29.5129 19.4241V23.6216C29.5129 24.0275 29.6856 24.4335 29.9706 24.7185C30.2556 25.0035 30.6702 25.1762 31.0675 25.1762H41.5354C41.9413 25.1762 42.3472 25.0035 42.6322 24.7185C42.9173 24.4335 43.09 24.0189 43.09 23.6216V19.4241C43.09 19.0182 42.9173 18.6122 42.6322 18.3272C42.33 18.0249 41.9586 17.8695 41.544 17.8695H31.0675Z" fill="#44004E"/>
<path d="M33.9948 23.7259C33.4593 23.7259 32.9325 23.5014 32.5784 23.13C32.1897 22.7413 31.9824 22.249 31.9824 21.7136C31.9824 21.1781 32.207 20.6512 32.5784 20.2971C32.9497 19.9085 33.442 19.7012 33.9948 19.7012C34.5303 19.7012 35.0571 19.9257 35.4113 20.2971C35.7999 20.6858 36.0072 21.1781 36.0072 21.7136C36.0072 22.249 35.7826 22.7759 35.4113 23.13C35.0399 23.51 34.5217 23.7259 33.9948 23.7259ZM33.9948 20.6167C33.7098 20.6167 33.4248 20.7376 33.2175 20.9449C33.0188 21.1435 32.8893 21.4458 32.8893 21.7222C32.8893 22.0072 33.0102 22.2922 33.2175 22.4995C33.4161 22.6982 33.7184 22.8277 33.9948 22.8277C34.2798 22.8277 34.5648 22.7068 34.7721 22.4995C34.9708 22.3009 35.1003 21.9986 35.1003 21.7222C35.1003 21.4458 34.9967 21.1781 34.7894 20.9622L34.7721 20.9449C34.5648 20.729 34.2798 20.6167 33.9948 20.6167Z" fill="#FF00FF"/>
<path d="M35.4472 13.5249C35.1968 13.5249 34.9981 13.3262 34.9981 13.0757C34.9981 12.3762 34.7304 11.7284 34.2381 11.2361C33.7112 10.7352 33.0721 10.4761 32.3984 10.4761H22.2069C21.9565 10.4761 21.7578 10.2774 21.7578 10.0269C21.7578 9.77647 21.9565 9.57782 22.2069 9.57782H22.4833V9.56055H32.3812C33.3226 9.56055 34.2035 9.9233 34.8686 10.5883C35.5336 11.2534 35.8964 12.1343 35.8964 13.0757C35.8964 13.3262 35.6977 13.5249 35.4472 13.5249Z" fill="#FF00FF"/>
</g>
<defs>
<clipPath id="clip0">
<rect width="44.2207" height="44.2207" fill="white" transform="translate(0.148438)"/>
</clipPath>
</defs>
</svg>

'''
'''--- src/views/resources/img/monitor/dash-board/dashboardConfirmed.svg ---
<svg width="225" height="167" viewBox="0 0 225 167" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M94.3583 166.677C93.5613 166.571 91.7016 166.039 90.7452 164.977L90.3733 164.605L3.28763 86.1799C1.74676 84.5859 0.843493 82.9919 0.79036 81.6104L0.737225 81.1854L0.684093 80.7603C0.577826 79.9633 0.896626 79.06 1.58736 78.1568C3.44703 76.7222 5.35983 75.5001 7.0601 75.5001C8.28217 75.5001 8.86663 75.9783 9.2917 76.4565L9.71677 76.9347L92.3923 151.64L214.599 3.18552C216.512 1.64465 218.318 0.847656 219.806 0.847656C220.975 0.847656 221.347 1.06019 222.038 1.80405L222.25 2.01659L222.463 2.22912C224.11 3.87626 224.694 6.0016 224.907 7.48933C225.013 8.3926 224.588 9.45527 223.685 10.4648L223.472 10.6773L96.2711 165.721C95.4209 166.252 94.7302 166.571 94.3583 166.677Z" fill="#44004E"/>
</svg>

'''
'''--- src/views/resources/img/monitor/monitorAssetListPurple.svg ---
<svg width="15" height="13" viewBox="0 0 15 13" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.34375 9.78125H0.46875C0.34443 9.78125 0.225201 9.83064 0.137294 9.91854C0.049386 10.0065 0 10.1257 0 10.25L0 12.125C0 12.2493 0.049386 12.3685 0.137294 12.4565C0.225201 12.5444 0.34443 12.5938 0.46875 12.5938H2.34375C2.46807 12.5938 2.5873 12.5444 2.67521 12.4565C2.76311 12.3685 2.8125 12.2493 2.8125 12.125V10.25C2.8125 10.1257 2.76311 10.0065 2.67521 9.91854C2.5873 9.83064 2.46807 9.78125 2.34375 9.78125ZM2.34375 0.40625H0.46875C0.34443 0.40625 0.225201 0.455636 0.137294 0.543544C0.049386 0.631451 0 0.75068 0 0.875L0 2.75C0 2.87432 0.049386 2.99355 0.137294 3.08146C0.225201 3.16936 0.34443 3.21875 0.46875 3.21875H2.34375C2.46807 3.21875 2.5873 3.16936 2.67521 3.08146C2.76311 2.99355 2.8125 2.87432 2.8125 2.75V0.875C2.8125 0.75068 2.76311 0.631451 2.67521 0.543544C2.5873 0.455636 2.46807 0.40625 2.34375 0.40625ZM2.34375 5.09375H0.46875C0.34443 5.09375 0.225201 5.14314 0.137294 5.23104C0.049386 5.31895 0 5.43818 0 5.5625L0 7.4375C0 7.56182 0.049386 7.68105 0.137294 7.76896C0.225201 7.85686 0.34443 7.90625 0.46875 7.90625H2.34375C2.46807 7.90625 2.5873 7.85686 2.67521 7.76896C2.76311 7.68105 2.8125 7.56182 2.8125 7.4375V5.5625C2.8125 5.43818 2.76311 5.31895 2.67521 5.23104C2.5873 5.14314 2.46807 5.09375 2.34375 5.09375ZM14.5312 10.25H5.15625C5.03193 10.25 4.9127 10.2994 4.82479 10.3873C4.73689 10.4752 4.6875 10.5944 4.6875 10.7188V11.6562C4.6875 11.7806 4.73689 11.8998 4.82479 11.9877C4.9127 12.0756 5.03193 12.125 5.15625 12.125H14.5312C14.6556 12.125 14.7748 12.0756 14.8627 11.9877C14.9506 11.8998 15 11.7806 15 11.6562V10.7188C15 10.5944 14.9506 10.4752 14.8627 10.3873C14.7748 10.2994 14.6556 10.25 14.5312 10.25ZM14.5312 0.875H5.15625C5.03193 0.875 4.9127 0.924386 4.82479 1.01229C4.73689 1.1002 4.6875 1.21943 4.6875 1.34375V2.28125C4.6875 2.40557 4.73689 2.5248 4.82479 2.61271C4.9127 2.70061 5.03193 2.75 5.15625 2.75H14.5312C14.6556 2.75 14.7748 2.70061 14.8627 2.61271C14.9506 2.5248 15 2.40557 15 2.28125V1.34375C15 1.21943 14.9506 1.1002 14.8627 1.01229C14.7748 0.924386 14.6556 0.875 14.5312 0.875ZM14.5312 5.5625H5.15625C5.03193 5.5625 4.9127 5.61189 4.82479 5.69979C4.73689 5.7877 4.6875 5.90693 4.6875 6.03125V6.96875C4.6875 7.09307 4.73689 7.2123 4.82479 7.30021C4.9127 7.38811 5.03193 7.4375 5.15625 7.4375H14.5312C14.6556 7.4375 14.7748 7.38811 14.8627 7.30021C14.9506 7.2123 15 7.09307 15 6.96875V6.03125C15 5.90693 14.9506 5.7877 14.8627 5.69979C14.7748 5.61189 14.6556 5.5625 14.5312 5.5625Z" fill="#4D00BA"/>
</svg>

'''
'''--- src/views/resources/img/monitor/monitorCopyDocument.svg ---
<svg width="16" height="19" viewBox="0 0 16 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.3828 2.57031C15.6992 2.92188 15.875 3.30859 15.875 3.76562V13.1875C15.875 13.6797 15.6992 14.0664 15.3828 14.3828C15.0312 14.7344 14.6445 14.875 14.1875 14.875H11.375V16.5625C11.375 17.0547 11.1992 17.4414 10.8828 17.7578C10.5312 18.1094 10.1445 18.25 9.6875 18.25H1.8125C1.32031 18.25 0.933594 18.1094 0.617188 17.7578C0.265625 17.4414 0.125 17.0547 0.125 16.5625V5.3125C0.125 4.85547 0.265625 4.46875 0.617188 4.11719C0.933594 3.80078 1.32031 3.625 1.8125 3.625H4.625V1.9375C4.625 1.48047 4.76562 1.09375 5.11719 0.742188C5.43359 0.425781 5.82031 0.25 6.3125 0.25H12.3594C12.8164 0.25 13.2031 0.425781 13.5547 0.742188L15.3828 2.57031ZM9.47656 16.5625C9.51172 16.5625 9.54688 16.5625 9.61719 16.4922C9.65234 16.457 9.6875 16.4219 9.6875 16.3516V14.875H6.3125C5.82031 14.875 5.43359 14.7344 5.11719 14.3828C4.76562 14.0664 4.625 13.6797 4.625 13.1875V5.3125H2.02344C1.95312 5.3125 1.91797 5.34766 1.88281 5.38281C1.8125 5.45312 1.8125 5.48828 1.8125 5.52344V16.3516C1.8125 16.4219 1.8125 16.457 1.88281 16.4922C1.91797 16.5625 1.95312 16.5625 2.02344 16.5625H9.47656ZM13.9766 13.1875C14.0117 13.1875 14.0469 13.1875 14.1172 13.1172C14.1523 13.082 14.1875 13.0469 14.1875 12.9766V5.875H11.0938C10.8477 5.875 10.6367 5.80469 10.4961 5.62891C10.3203 5.48828 10.25 5.27734 10.25 5.03125V1.9375H6.52344C6.45312 1.9375 6.41797 1.97266 6.38281 2.00781C6.3125 2.07812 6.3125 2.11328 6.3125 2.14844V12.9766C6.3125 13.0469 6.3125 13.082 6.38281 13.1172C6.41797 13.1875 6.45312 13.1875 6.52344 13.1875H13.9766ZM14.1875 4.1875V3.83594C14.1875 3.80078 14.1523 3.76562 14.1172 3.69531L12.4297 2.00781C12.3594 1.97266 12.3242 1.9375 12.2891 1.9375H11.9375V4.1875H14.1875Z" fill="white"/>
</svg>

'''
'''--- travis/docker.sh ---
#!/bin/sh
set -e

if [ "${DOCKER_IMAGE_NAME}" = "" ]
then
  echo "Docker deployment error. Env DOCKER_IMAGE_NAME has not been provided"
  exit 128
fi

if [ "${DOCKER_USERNAME}" = "" ]
then
  echo "Docker deployment error. Env DOCKER_USERNAME has not been provided"
  exit 128
fi

if [ "${DOCKER_PASSWORD}" = "" ]
then
  echo "Docker deployment error. Env DOCKER_PASSWORD has not been provided"
  exit 128
fi

echo "Login into docker..."
echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

CURRENT_VERSION=$(npm run version --silent)

echo "Creating image ${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}"
docker build -t "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}" .

if [ "$TRAVIS_BRANCH" = "$MAIN_BRANCH" ]
then
    echo "Building for ${MAIN_BRANCH} branch..."

    echo "Docker tagging alpha version"
    docker tag "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}" "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}-alpha"
    docker tag "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}" "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}-alpha-$(date +%Y%m%d%H%M)"

    echo "Docker pushing alpha"
    docker push "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}-alpha"
    docker push "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}-alpha-$(date +%Y%m%d%H%M)"
fi

if [ "$TRAVIS_BRANCH" = "$RELEASE_BRANCH" ]
then
    echo "Building for ${RELEASE_BRANCH} branch..."
    echo "Docker tagging release version"
    docker tag "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}" "${DOCKER_IMAGE_NAME}:release"

    echo "Docker pushing release"
    docker push "${DOCKER_IMAGE_NAME}:release"
    docker push "${DOCKER_IMAGE_NAME}:${CURRENT_VERSION}"
fi

'''
'''--- travis/release.sh ---
#!/usr/bin/env bash
set -e

REMOTE_NAME="origin"
POST_RELEASE_BRANCH="$POST_RELEASE_BRANCH"

git remote rm $REMOTE_NAME

echo "Setting remote url https://github.com/${TRAVIS_REPO_SLUG}.git"
git remote add $REMOTE_NAME "https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git" > /dev/null 2>&1

echo "Checking out $RELEASE_BRANCH as travis leaves the head detached."
git checkout $RELEASE_BRANCH

echo "Releasing packages for Windows, Linux and Mac"
npm run release:all
echo " "

echo "Organizing releases into a new folder"
mkdir release/upload
mv release/*.exe release/upload
mv release/*.dmg release/upload
mv release/*.deb release/upload
mv release/*.snap release/upload
mv release/*.tar.xz release/upload
echo ""

CURRENT_VERSION=$(npm run version --silent)

echo "Current Version"
echo "$CURRENT_VERSION"
echo ""

echo "Testing git remote"
git branch -vv
echo ""

echo "Creating tag v$CURRENT_VERSION"
brew install ghr
ghr v$CURRENT_VERSION release/upload

echo "Increasing package version"
npm version patch -m "Increasing version to %s" --git-tag-version false

CURRENT_VERSION=$(npm run version --silent)

echo "New Version"
echo "$CURRENT_VERSION"
echo ""

git add .
git commit -m "Creating new version $CURRENT_VERSION"

echo "Pushing code to $REMOTE_NAME $POST_RELEASE_BRANCH"
git push --set-upstream $REMOTE_NAME $RELEASE_BRANCH:$POST_RELEASE_BRANCH
echo "Pushing tags to $REMOTE_NAME"
git push --tags $REMOTE_NAME

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es6",
    "module": "esnext",
    "strict": false,
    "jsx": "react",
    "jsxFactory": "h",
    "importHelpers": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "experimentalDecorators": true,
    "strictFunctionTypes": false,
    "allowJs": false,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "noImplicitAny": false,
    "baseUrl": ".",
    "outDir": "./dist/",
    "types": [
      "webpack-env",
      "jest"
    ],
    "paths": {
      "@/*": [
        "src/*"
      ],
      "@MOCKS/*": [
        "__mocks__/*"
      ]
    },
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "__tests__/**/*.ts",
    "__tests__/**/*.tsx",
    "__mocks__/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    "src/views/resources/css",
    "src/views/resources/img"
  ]
}

'''
'''--- vue.config.js ---
const webpack = require('webpack');

const packageVersion = JSON.stringify(require('./package.json').version);
const web = process.env.WEB || false;

console.log(`Building package ${packageVersion} for Web: ${web}`);

module.exports = {
    configureWebpack: () => {
        return {
            plugins: [
                new webpack.DefinePlugin({
                    'process.env': {
                        PACKAGE_VERSION: packageVersion,
                        WEB: web,
                    },
                }),
            ],
        };
    },
};

'''