*GitHub Repository "mehmetlevent/near_todo-crud"*

'''--- README.md ---
# near_todo-crud
patika.dev

'''
'''--- asconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}
'''
'''--- assembly/as_types.d.ts ---
/// <reference types ="near-sdk-as/assembly/as_types" /

'''
'''--- assembly/index.ts ---
// The entry file of your WebAssembly module.
import { Todo, PartialTodo } from "./model";

export function create(task: string): Todo{
  return Todo.insert(task);
}
export function getById(id: u32): Todo{
  return Todo.findById(id);
}
export function get(offset: u32, limit: u32 = 10): Todo[] {
  return Todo.find(offset, limit);
}
export function update(id: u32, updates: PartialTodo): Todo{
  return Todo.findByIdAndUpdate(id, updates);
}
export function del(id: u32): void{
  Todo.findByIdAndDelete(id);
}
'''
'''--- assembly/model.ts ---
import { PersistentUnorderedMap, math } from "near-sdk-as";

export const todos = new PersistentUnorderedMap<u32, Todo>("todos");

@nearBindgen
export class PartialTodo{
    task: string;
    done: bool;
}
@nearBindgen 
export class Todo {
    id: u32;
    task: string;
    done: bool;

    constructor(task: string) {
        this.id = math.hash32<string>(task);
        this.task = task;
        this.done = false;
    }
    static insert(task: string): Todo {
        const todo = new Todo(task);
        todos.set(todo.id, todo);
        return todo;
    }

    static findById(id: u32): Todo{
        return todos.getSome(id);
    }

    static find(offset: u32, limit: u32): Todo[] {
        return todos.values(offset, offset +limit);
    }

    static findByIdAndUpdate(id: u32, partial: PartialTodo): Todo{
        const todo = this.findById(id);
        todo.task = partial.task;
        todo.done =partial.done;
        todos.set(id, todo);
        return todo;
    }
    
    static findByIdAndDelete(id: u32): void {
        todos.delete(id);
    }}
'''
'''--- assembly/tsconfig.json ---
{
  "extends": "near-sdk-as/asconfig.json"
}
'''
'''--- index.html ---
<!DOCTYPE html>
<html lang="en">
<head>
<script type="module">
import { add } from "./build/release.js";
document.body.innerText = add(1, 2);
</script>
</head>
<body></body>
</html>

'''
'''--- package.json ---
{
  "name": "todos-crud",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "dependencies": {
    "@assemblyscript/loader": "^0.20.4",
    "asbuild": "^0.2.0",
    "assemblyscript": "^0.20.4",
    "near-cli": "^3.2.0",
    "near-sdk-as": "^3.2.3"
  },
  "type": "module",
  "exports": {
    ".": {
      "import": "./build/release.js",
      "types": "./build/release.d.ts"
    }
  },
  "scripts": {
    "asbuild:debug": "asc assembly/index.ts --target debug",
    "asbuild:release": "asc assembly/index.ts --target release",
    "asbuild": "yarn asbuild:debug && yarn asbuild:release",
    
    "start": "npx serve .",
    "build:release": "asb",
    "deploy": "near dev-deploy build/release/todos-crud.wasm",
    "dev": "yarn build:release && yarn deploy",
    "test": "asp"
  },
  "devDependencies": {
    "assemblyscript": "^0.20.4"
  }
}
'''
'''--- tests/index.js ---
import assert from "assert";
import { add } from "../build/debug.js";
assert.strictEqual(add(1, 2), 3);
console.log("ok");

'''