*GitHub Repository "near-cli-rs/near-validator-cli-rs"*

'''--- .github/workflows/code_style.yml ---
name: Code Style
on:
  pull_request:

jobs:
  codestyle:
    name: Code Style (fmt + clippy)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Check formatting
      run: cargo fmt --all -- --check
    - name: Install libudev-dev
      run: |
        sudo apt-get update
        sudo apt-get install --assume-yes libudev-dev
    - name: Check lints (cargo clippy)
      run: cargo clippy -- -D warnings

'''
'''--- .github/workflows/publish-to-npm.yml ---
name: Publish to npmjs.com

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_tag_name:
        description: "Release tag name (e.g. v0.3.12)"
        type: string
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Configure credentials
        run: |
          npm set "//registry.npmjs.org/:_authToken" ${{ secrets.NPM_REGISTRY_TOKEN }}
      - name: Publish to npmjs.com
        run: |
          RELEASE_TAG_NAME=${{ inputs.release_tag_name }}
          if [ -z "$RELEASE_TAG_NAME" ]; then
            RELEASE_TAG_NAME=${{ github.event.release.tag_name }}
          fi
          NPM_PACKAGE_NAME=${{ vars.NPM_PACKAGE_NAME }}
          if [ -z "$NPM_PACKAGE_NAME" ]; then
            NPM_PACKAGE_NAME=${GITHUB_REPOSITORY#*/}
          fi
          npm publish "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/$RELEASE_TAG_NAME/$NPM_PACKAGE_NAME-npm-package.tar.gz"

'''
'''--- .github/workflows/release-plz.yml ---
name: Release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install --assume-yes libudev-dev
      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@v0.5
        env:
          # https://marcoieni.github.io/release-plz/github-action.html#triggering-further-workflow-runs
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

'''
'''--- .github/workflows/release.yml ---
# Copyright 2022-2023, axodotdev
# SPDX-License-Identifier: MIT or Apache-2.0
#
# CI that:
#
# * checks for a Git Tag that looks like a release
# * builds artifacts with cargo-dist (archives, installers, hashes)
# * uploads those artifacts to temporary workflow zip
# * on success, uploads the artifacts to a Github Release
#
# Note that the Github Release will be created with a generated
# title/body based on your changelogs.

name: Release

permissions:
  contents: write

# This task will run whenever you push a git tag that looks like a version
# like "1.0.0", "v0.1.0-prerelease.1", "my-app/0.1.0", "releases/v1.0.0", etc.
# Various formats will be parsed into a VERSION and an optional PACKAGE_NAME, where
# PACKAGE_NAME must be the name of a Cargo package in your workspace, and VERSION
# must be a Cargo-style SemVer Version (must have at least major.minor.patch).
#
# If PACKAGE_NAME is specified, then the announcement will be for that
# package (erroring out if it doesn't have the given version or isn't cargo-dist-able).
#
# If PACKAGE_NAME isn't specified, then the announcement will be for all
# (cargo-dist-able) packages in the workspace with that version (this mode is
# intended for workspaces with only one dist-able package, or with all dist-able
# packages versioned/released in lockstep).
#
# If you push multiple tags at once, separate instances of this workflow will
# spin up, creating an independent announcement for each one. However Github
# will hard limit this to 3 tags per commit, as it will assume more tags is a
# mistake.
#
# If there's a prerelease-style suffix to the version, then the release(s)
# will be marked as a prerelease.
on:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  # Run 'cargo dist plan' (or host) to determine what tasks we need to do
  plan:
    runs-on: ubuntu-latest
    outputs:
      val: ${{ steps.plan.outputs.manifest }}
      tag: ${{ !github.event.pull_request && github.ref_name || '' }}
      tag-flag: ${{ !github.event.pull_request && format('--tag={0}', github.ref_name) || '' }}
      publishing: ${{ !github.event.pull_request }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cargo-dist
        # we specify bash to get pipefail; it guards against the `curl` command
        # failing. otherwise `sh` won't catch that `curl` returned non-0
        shell: bash
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/axodotdev/cargo-dist/releases/download/v0.9.0/cargo-dist-installer.sh | sh"
      # sure would be cool if github gave us proper conditionals...
      # so here's a doubly-nested ternary-via-truthiness to try to provide the best possible
      # functionality based on whether this is a pull_request, and whether it's from a fork.
      # (PRs run on the *source* but secrets are usually on the *target* -- that's *good*
      # but also really annoying to build CI around when it needs secrets to work right.)
      - id: plan
        run: |
          cargo dist ${{ (!github.event.pull_request && format('host --steps=create --tag={0}', github.ref_name)) || 'plan' }} --output-format=json > plan-dist-manifest.json
          echo "cargo dist ran successfully"
          cat plan-dist-manifest.json
          echo "manifest=$(jq -c "." plan-dist-manifest.json)" >> "$GITHUB_OUTPUT"
      - name: "Upload dist-manifest.json"
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-plan-dist-manifest
          path: plan-dist-manifest.json

  # Build and packages all the platform-specific things
  build-local-artifacts:
    name: build-local-artifacts (${{ join(matrix.targets, ', ') }})
    # Let the initial task tell us to not run (currently very blunt)
    needs:
      - plan
    if: ${{ fromJson(needs.plan.outputs.val).ci.github.artifacts_matrix.include != null && (needs.plan.outputs.publishing == 'true' || fromJson(needs.plan.outputs.val).ci.github.pr_run_mode == 'upload') }}
    strategy:
      fail-fast: false
      # Target platforms/runners are computed by cargo-dist in create-release.
      # Each member of the matrix has the following arguments:
      #
      # - runner: the github runner
      # - dist-args: cli flags to pass to cargo dist
      # - install-dist: expression to run to install cargo-dist on the runner
      #
      # Typically there will be:
      # - 1 "global" task that builds universal installers
      # - N "local" tasks that build each platform's binaries and platform-specific installers
      matrix: ${{ fromJson(needs.plan.outputs.val).ci.github.artifacts_matrix }}
    runs-on: ${{ matrix.runner }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_MANIFEST_NAME: target/distrib/${{ join(matrix.targets, '-') }}-dist-manifest.json
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: swatinem/rust-cache@v2
      - name: Install cargo-dist
        run: ${{ matrix.install_dist }}
      # Get the dist-manifest
      - name: Fetch local artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          path: target/distrib/
          merge-multiple: true
      - name: Install dependencies
        run: |
          ${{ matrix.packages_install }}
      - name: Build artifacts
        run: |
          # Actually do builds and make zips and whatnot
          cargo dist build ${{ needs.plan.outputs.tag-flag }} --print=linkage --output-format=json ${{ matrix.dist_args }} > dist-manifest.json
          echo "cargo dist ran successfully"
      - id: cargo-dist
        name: Post-build
        # We force bash here just because github makes it really hard to get values up
        # to "real" actions without writing to env-vars, and writing to env-vars has
        # inconsistent syntax between shell and powershell.
        shell: bash
        run: |
          # Parse out what we just built and upload it to scratch storage
          echo "paths<<EOF" >> "$GITHUB_OUTPUT"
          jq --raw-output ".artifacts[]?.path | select( . != null )" dist-manifest.json >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          cp dist-manifest.json "$BUILD_MANIFEST_NAME"
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-build-local-${{ join(matrix.targets, '_') }}
          path: |
            ${{ steps.cargo-dist.outputs.paths }}
            ${{ env.BUILD_MANIFEST_NAME }}

  # Build and package all the platform-agnostic(ish) things
  build-global-artifacts:
    needs:
      - plan
      - build-local-artifacts
    runs-on: "ubuntu-20.04"
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_MANIFEST_NAME: target/distrib/global-dist-manifest.json
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cargo-dist
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/axodotdev/cargo-dist/releases/download/v0.9.0/cargo-dist-installer.sh | sh"
      # Get all the local artifacts for the global tasks to use (for e.g. checksums)
      - name: Fetch local artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          path: target/distrib/
          merge-multiple: true
      - id: cargo-dist
        shell: bash
        run: |
          cargo dist build ${{ needs.plan.outputs.tag-flag }} --output-format=json "--artifacts=global" > dist-manifest.json
          echo "cargo dist ran successfully"

          # Parse out what we just built and upload it to scratch storage
          echo "paths<<EOF" >> "$GITHUB_OUTPUT"
          jq --raw-output ".artifacts[]?.path | select( . != null )" dist-manifest.json >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          cp dist-manifest.json "$BUILD_MANIFEST_NAME"
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-build-global
          path: |
            ${{ steps.cargo-dist.outputs.paths }}
            ${{ env.BUILD_MANIFEST_NAME }}
  # Determines if we should publish/announce
  host:
    needs:
      - plan
      - build-local-artifacts
      - build-global-artifacts
    # Only run if we're "publishing", and only if local and global didn't fail (skipped is fine)
    if: ${{ always() && needs.plan.outputs.publishing == 'true' && (needs.build-global-artifacts.result == 'skipped' || needs.build-global-artifacts.result == 'success') && (needs.build-local-artifacts.result == 'skipped' || needs.build-local-artifacts.result == 'success') }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: "ubuntu-20.04"
    outputs:
      val: ${{ steps.host.outputs.manifest }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cargo-dist
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/axodotdev/cargo-dist/releases/download/v0.9.0/cargo-dist-installer.sh | sh"
      # Fetch artifacts from scratch-storage
      - name: Fetch artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          path: target/distrib/
          merge-multiple: true
      # This is a harmless no-op for Github Releases, hosting for that happens in "announce"
      - id: host
        shell: bash
        run: |
          cargo dist host ${{ needs.plan.outputs.tag-flag }} --steps=upload --steps=release --output-format=json > dist-manifest.json
          echo "artifacts uploaded and released successfully"
          cat dist-manifest.json
          echo "manifest=$(jq -c "." dist-manifest.json)" >> "$GITHUB_OUTPUT"
      - name: "Upload dist-manifest.json"
        uses: actions/upload-artifact@v4
        with:
          # Overwrite the previous copy
          name: artifacts-dist-manifest
          path: dist-manifest.json

  # Create a Github Release while uploading all files to it
  announce:
    needs:
      - plan
      - host
    # use "always() && ..." to allow us to wait for all publish jobs while
    # still allowing individual publish jobs to skip themselves (for prereleases).
    # "host" however must run to completion, no skipping allowed!
    if: ${{ always() && needs.host.result == 'success' }}
    runs-on: "ubuntu-20.04"
    env:
      GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: "Download Github Artifacts"
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          path: artifacts
          merge-multiple: true
      - name: Cleanup
        run: |
          # Remove the granular manifests
          rm -f artifacts/*-dist-manifest.json
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.plan.outputs.tag }}
          name: ${{ fromJson(needs.host.outputs.val).announcement_title }}
          body: ${{ fromJson(needs.host.outputs.val).announcement_github_body }}
          prerelease: ${{ fromJson(needs.host.outputs.val).announcement_is_prerelease }}
          artifacts: "artifacts/*"
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

'''
'''--- CHANGELOG.md ---
# Changelog
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.1.2](https://github.com/near-cli-rs/near-validator-cli-rs/compare/v0.1.1...v0.1.2) - 2024-02-03

### Other
- Updated binary releases pipeline to use cargo-dist v0.9.0 (previously v0.7.2) ([#8](https://github.com/near-cli-rs/near-validator-cli-rs/pull/8))

## [0.1.1](https://github.com/near-cli-rs/near-validator-cli-rs/compare/v0.1.0...v0.1.1) - 2024-01-27

### Other
- removed explicit rust-toolchain, so let's use the latest stable by default
- Upgraded NEAR crates to 0.20.0 release ([#5](https://github.com/near-cli-rs/near-validator-cli-rs/pull/5))
- fixed code_style.yml to use ubuntu-latest instead of ubuntu-20.04
- removed old CI integrations that are now replaced by cargo-dist (release.yml workflow)

'''
'''--- Cargo.toml ---
[package]
name = "near-validator"
version = "0.1.2"
authors = [
    "FroVolod <frol_off@meta.ua>",
    "frol <frolvlad@gmail.com>",
    "Near Inc <hello@nearprotocol.com>",
]
license = "MIT OR Apache-2.0"
edition = "2021"
repository = "https://github.com/near-cli-rs/near-validator-cli-rs"
description = "near-validator is your human-friendly companion that helps to interact with NEAR Validators from command line."

[package.metadata.wix]
upgrade-guid = "C5573F8E-07D3-4504-8A6D-F77C90CB42C3"
path-guid = "A985F448-11E8-41B9-A8A4-F23CCD7ECC5C"
license = false
eula = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "near-validator"
path = "src/main.rs"

[dependencies]
clap = { version = "4.0.18", features = ["derive"] }
inquire = "0.6"
strum = { version = "0.24", features = ["derive"] }
strum_macros = "0.24"

tokio = { version = "1.0", features = ["rt-multi-thread"] }
futures = "0.3"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.57"

shell-words = "1.0.0"
prettytable = "0.10.0"

color-eyre = "0.6"

num-rational = "0.3.2"

near-crypto = "0.20.0"
near-primitives = "0.20.0"
near-jsonrpc-client = "0.8.0"
near-jsonrpc-primitives = "0.20.0"

interactive-clap = "0.2.8"
interactive-clap-derive = "0.2.8"

near-cli-rs = { version = "0.7.7", default-features = false }

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.9.0"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Publish jobs to run in CI
pr-run-mode = "upload"
# XXX: In order to use custom GITHUB_TOKEN to trigger npm-publish workflow, 
# we allow dirty CI scripts to avoid cargo-dist complains.
allow-dirty = ["ci"]

[workspace.metadata.dist.dependencies.apt]
libudev-dev = { version = "*", targets = ["x86_64-unknown-linux-gnu"] }

'''
'''--- README.md ---
# NEAR Validator CLI Extension

*near-validator* is your **human-friendly** companion that helps to interact with [NEAR Validators](https://pages.near.org/papers/economics-in-sharded-blockchain/#validators) from command line.

_It works the best in combination with [near CLI](https://near.cli.rs)._

<p>
  <img src="docs/media/example.svg" alt="" width="1200">
</p>

## Install

You can find binary releases of `near-validator` CLI for your OS on the [Releases page](https://github.com/near-cli-rs/near-validator-cli-rs/releases/).

<details>
  <summary>Install prebuilt binaries via shell script (macOS, Linux, WSL)</summary>

```sh
curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near-cli-rs/near-validator-cli-rs/releases/latest/download/near-validator-installer.sh | sh
```
</details>

<details>
  <summary>Install prebuilt binaries via powershell script (Windows)</summary>

```sh
irm https://github.com/near-cli-rs/near-validator-cli-rs/releases/latest/download/near-validator-installer.ps1 | iex
```
</details>

<details>
  <summary>Run prebuilt binaries with npx (Node.js)</summary>

```sh
npx near-validator
```
</details>

<details>
  <summary>Install prebuilt binaries into your npm project (Node.js)</summary>

```sh
npm install near-validator
```
</details>

<details>
  <summary>Install from source code (Cargo)</summary>

Install it with `cargo`, just make sure you have [Rust](https://rustup.rs) installed on your computer.

```bash
cargo install near-validator
```

or, install the most recent version from git repository:

```bash
$ cargo install --git https://github.com/near-cli-rs/near-validator-cli-rs
```
</details>

## Available commands:

### validators
With this command you can lookup validators for a given epoch. Epoch can be specifyed by EpochId, BlockId, Block hight or `Latest` keyword.
In the terminal command line type:

```sh
near-validator validators network-config testnet now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Validators (total: 90, seat price: 53085.036224843075206029910443 NEAR)
+-------------------------------------------+----------------------------------------+----------+-----------------+-----------------+-----------------+-----------------+
| Validator Id                              | Stake                                  | Online   | Blocks produced | Blocks expected | Chunks produced | Chunks expected |
+-------------------------------------------+----------------------------------------+----------+-----------------+-----------------+-----------------+-----------------+
| node2                                     | 42463456.377087193379078729276997 NEAR |  99.99 % | 5269            | 5271            | 18766           | 18767           |
| node1                                     | 42455461.454552359341703906982801 NEAR |  99.95 % | 5226            | 5230            | 18459           | 18467           |
| node3                                     | 42438161.018506526315943976152203 NEAR |  99.98 % | 5297            | 5299            | 18416           | 18418           |
| node0                                     | 42334729.937985819822434707258555 NEAR | 100.00 % | 5237            | 5237            | 18520           | 18520           |
| aurora.pool.f863973.m0                    | 31177850.233547788240331244407559 NEAR |  99.91 % | 3802            | 3808            | 13358           | 13367           |
| 01node.pool.f863973.m0                    | 15719906.892540506860671479938212 NEAR |  99.98 % | 1891            | 1891            | 6882            | 6884            |
| cryptogarik.pool.f863973.m0               | 14146118.880582007333099210276014 NEAR |   0.00 % | 0               | 1792            | 0               | 6207            |
| legends.pool.f863973.m0                   | 13232045.564115859383036538973294 NEAR |  99.97 % | 1665            | 1665            | 5733            | 5735            |
| stakely_v2.pool.f863973.m0                | 11308412.76413255794143406084197 NEAR  |  99.98 % | 1407            | 1408            | 4762            | 4762            |
| everstake.pool.f863973.m0                 | 11080661.442432259407194895864464 NEAR |  99.95 % | 1400            | 1400            | 4791            | 4794            |
| chorusone.pool.f863973.m0                 | 9629377.891168433658816361005072 NEAR  | 100.00 % | 1201            | 1201            | 4212            | 4212            |
| ni.pool.f863973.m0                        | 8822038.178787812833888556031977 NEAR  |  99.92 % | 1066            | 1067            | 3795            | 3798            |
| kiln.pool.f863973.m0                      | 6079613.843956031425391305083783 NEAR  |  99.88 % | 792             | 792             | 2641            | 2645            |
| staked.pool.f863973.m0                    | 4999757.888727011980090322499078 NEAR  |   0.00 % | 0               | 613             | 0               | 2203            |
| foundryusa.pool.f863973.m0                | 2412323.288338062508844224434456 NEAR  | 100.00 % | 312             | 312             | 1032            | 1032            |
| chorus-one.pool.f863973.m0                | 2219222.836168428864972611997445 NEAR  |  99.84 % | 284             | 284             | 990             | 992             |
| lunanova2.pool.f863973.m0                 | 2122700.547698656819828381670739 NEAR  | 100.00 % | 234             | 234             | 922             | 922             |
| tribe-pool.pool.f863973.m0                | 1602734.408040514998117022773702 NEAR  |   0.00 % | 0               | 204             | 0               | 700             |
| sweden.pool.f863973.m0                    | 1548522.293510958519275997113481 NEAR  |   0.00 % | 0               | 208             | 0               | 691             |
| stakesstone.pool.f863973.m0               | 1495620.398863776083560667101079 NEAR  |  99.62 % | 187             | 187             | 598             | 601             |
| pathrocknetwork.pool.f863973.m0           | 1489110.822070197011527074788129 NEAR  | 100.00 % | 195             | 195             | 663             | 663             |
| bee1stake.pool.f863973.m0                 | 1458170.384325998236160607279491 NEAR  | 100.00 % | 183             | 183             | 654             | 654             |
| alexandruast.pool.f863973.m0              | 1421069.05632136355769699266569 NEAR   |   0.00 % | 0               | 153             | 0               | 641             |
| dsrvlabs.pool.f863973.m0                  | 1360015.07176394889137508520043 NEAR   |  98.94 % | 144             | 145             | 604             | 611             |
| leadnode.pool.f863973.m0                  | 1275260.096422084948847089180765 NEAR  | 100.00 % | 155             | 155             | 543             | 543             |
| basilisk-stake.pool.f863973.m0            | 911982.673163498653723855407971 NEAR   |   0.00 % | 0               | 136             | 0               | 413             |
| namdokmai.pool.f863973.m0                 | 911474.339828150411737273056685 NEAR   |   0.00 % | 0               | 105             | 0               | 355             |
| solidstate.pool.f863973.m0                | 902587.046139049484585657411276 NEAR   |   0.00 % | 0               | 112             | 0               | 393             |
| chelovek_iz_naroda.pool.f863973.m0        | 814633.60270815969401901915999 NEAR    |   0.00 % | 0               | 109             | 0               | 374             |
| optimusvalidatornetwork.pool.f863973.m0   | 814536.394051230138804706693949 NEAR   |   0.00 % | 0               | 93              | 0               | 341             |
| tayang.pool.f863973.m0                    | 737378.959040357990001747402769 NEAR   |   0.00 % | 0               | 80              | 0               | 339             |
| blockngine.pool.f863973.m0                | 639345.96536088610582681658546 NEAR    |   0.00 % | 0               | 79              | 0               | 264             |
| bflame.pool.f863973.m0                    | 604958.879804267092172663214773 NEAR   |   0.00 % | 0               | 62              | 0               | 264             |
| genesislab.pool.f863973.m0                | 577654.162821521726556213824992 NEAR   |   0.00 % | 0               | 66              | 0               | 266             |
| squatch.pool.f863973.m0                   | 553395.136322010026324042602167 NEAR   |   0.00 % | 0               | 74              | 0               | 224             |
| stake2grow.pool.f863973.m0                | 535861.079658259760801920488481 NEAR   |   0.00 % | 0               | 73              | 0               | 211             |
| stgr.pool.f863973.m0                      | 528380.848075029588345471059098 NEAR   |   0.00 % | 0               | 70              | 0               | 233             |
| onin.pool.f863973.m0                      | 524123.873966987768556970647187 NEAR   |   0.00 % | 0               | 68              | 0               | 225             |
| fibocrypto.pool.f863973.m0                | 520520.353322425852655787808568 NEAR   |   0.00 % | 0               | 83              | 0               | 232             |
| anchikovproduction.pool.f863973.m0        | 497897.493465086603547487431967 NEAR   |   0.00 % | 0               | 64              | 0               | 217             |
| darvin.pool.f863973.m0                    | 494852.176425715690951019987015 NEAR   |   0.00 % | 0               | 65              | 0               | 219             |
| moonlet.pool.f863973.m0                   | 480808.594675834324997215741764 NEAR   |   0.00 % | 0               | 57              | 0               | 204             |
| pontiff.pool.f863973.m0                   | 468365.719851475515168941238586 NEAR   |   0.00 % | 0               | 54              | 0               | 195             |
| aquarius.pool.f863973.m0                  | 440148.228029800480983617468605 NEAR   |   0.00 % | 0               | 53              | 0               | 206             |
| casualpooltest.pool.f863973.m0            | 437487.300611972413125697142006 NEAR   |   0.00 % | 0               | 62              | 0               | 198             |
| pennyvalidators.pool.f863973.m0           | 405728.663157549880430291114589 NEAR   |   0.00 % | 0               | 56              | 0               | 175             |
| bazilik.pool.f863973.m0                   | 403050.129599256640576660181764 NEAR   |   0.00 % | 0               | 52              | 0               | 185             |
| mondlicht.pool.devnet                     | 382179.974090138353447112728888 NEAR   | 100.00 % | 45              | 45              | 152             | 152             |
| stingray.pool.f863973.m0                  | 359535.994275044281045666367836 NEAR   |   0.00 % | 0               | 40              | 0               | 154             |
| nw.pool.devnet                            | 314305.897488098565334510551894 NEAR   | 100.00 % | 30              | 30              | 125             | 125             |
| infiniteloop.pool.f863973.m0              | 312813.239752153752739566624169 NEAR   |   0.00 % | 0               | 30              | 0               | 148             |
| gargoyle.pool.f863973.m0                  | 292432.815062289613304478068761 NEAR   | 100.00 % | 29              | 29              | 141             | 141             |
| lastnode.pool.f863973.m0                  | 221061.38599926302676468391151 NEAR    |   0.00 % | 0               | 23              | 0               | 115             |
| gettingnear.pool.f863973.m0               | 205244.215299155470451571795811 NEAR   | 100.00 % | 28              | 28              | 86              | 86              |
| zainy.pool.f863973.m0                     | 196532.135232203214129734163032 NEAR   |   0.00 % | 0               | 32              | 0               | 88              |
| spectrum.pool.f863973.m0                  | 187756.424163657235865226822981 NEAR   |   0.00 % | 0               | 21              | 0               | 77              |
| kronos.pool.f863973.m0                    | 171375.749635294004952803904532 NEAR   |   0.00 % | 0               | 16              | 0               | 67              |
| sashamaxymchuk.pool.f863973.m0            | 152924.123495250792923696161646 NEAR   |   0.00 % | 0               | 17              | 0               | 57              |
| idtcn3.pool.f863973.m0                    | 115576.047411466110628506181867 NEAR   |   0.00 % | 0               | 16              | 0               | 52              |
| sssuryansh.pool.f863973.m0                | 89998.886291308720730791178863 NEAR    |   0.00 % | 0               | 5               | 0               | 30              |
| blueprint.pool.f863973.m0                 | 78978.68796349885502102929427 NEAR     |  98.15 % | 12              | 13              | 41              | 41              |
| hahaha.pool.devnet                        | 64337.498161220467461479588097 NEAR    | 100.00 % | 2               | 2               | 31              | 31              |
| jstaking.pool.f863973.m0                  | 59249.07109749876737048778665 NEAR     |   0.00 % | 0               | 8               | 0               | 16              |
| derori_validator_pool.pool.f863973.m0     | 58645.575112263099871994258981 NEAR    | 100.00 % | 6               | 6               | 26              | 26              |
| ibb.pool.f863973.m0                       | 54704.833517287745250191173298 NEAR    |   0.00 % | 0               | 7               | 0               | 14              |
| happystake.pool.f863973.m0                | 53720.240145927988351697242033 NEAR    |   0.00 % | 0               | 5               | 0               | 25              |
| kuutamo.pool.f863973.m0                   | 50898.649507219560792919189598 NEAR    |   0.00 % | 0               | 0               | 0               | 25              |
| bgpntx.pool.f863973.m0                    | 49788.123993303798255829538717 NEAR    |   0.00 % | 0               | 0               | 0               | 25              |
| grassets.pool.f863973.m0                  | 48754.250378643643185317807387 NEAR    |   0.00 % | 0               | 0               | 0               | 14              |
| pandateam.pool.f863973.m0                 | 47663.661681818850522112907251 NEAR    |   0.00 % | 0               | 0               | 0               | 20              |
| domanodes.pool.f863973.m0                 | 46932.503319601361625002798 NEAR       |   0.00 % | 0               | 0               | 0               | 19              |
| x50capital.pool.f863973.m0                | 45928.257745845634881269534446 NEAR    |   0.00 % | 0               | 0               | 0               | 20              |
| twinstake.pool.f863973.m0                 | 44750.061857222259043729329193 NEAR    | 100.00 % | 0               | 0               | 19              | 19              |
| 4ire-pool.pool.f863973.m0                 | 44394.746192552157237523710969 NEAR    |   0.00 % | 0               | 0               | 0               | 22              |
| twintest1.pool.f863973.m0                 | 43560.75819603592053714114437 NEAR     |   0.00 % | 0               | 0               | 0               | 18              |
| sevennines-t0.pool.f863973.m0             | 43217.387754730002508230464604 NEAR    |   0.00 % | 0               | 0               | 0               | 15              |
| commons_pnw.pool.f863973.m0               | 41307.46845724409836625299375 NEAR     |   0.00 % | 0               | 0               | 0               | 17              |
| cryptolions.pool.f863973.m0               | 38585.308044335751252004590272 NEAR    |   0.00 % | 0               | 0               | 0               | 26              |
| omnistake_v5.factory01.littlefarm.testnet | 38539.722508482341332079252916 NEAR    |   0.00 % | 0               | 0               | 0               | 13              |
| cex2.pool.f863973.m0                      | 37778.83295188551769335374954 NEAR     |   0.00 % | 0               | 0               | 0               | 16              |
| lnc.pool.f863973.m0                       | 37491.208479267156735023643816 NEAR    |   0.00 % | 0               | 0               | 0               | 15              |
| alanpool.pool.f863973.m0                  | 36228.667912753203223689239387 NEAR    |   0.00 % | 0               | 0               | 0               | 15              |
| dialogue.pool.f863973.m0                  | 35963.563252341589944110547084 NEAR    |   0.00 % | 0               | 0               | 0               | 8               |
| stakingpodalliance.pool.f863973.m0        | 35047.110469586773652462433208 NEAR    |   0.00 % | 0               | 0               | 0               | 16              |
| dehashed.pool.f863973.m0                  | 32769.300253705312947757304866 NEAR    |   0.00 % | 0               | 0               | 0               | 8               |
| dav_kuutamo.pool.f863973.m0               | 30330.117372193371695000000001 NEAR    |   0.00 % | 0               | 0               | 0               | 17              |
| lavenderfive.pool.f863973.m0              | 30227.016444935378828600648379 NEAR    |   0.00 % | 0               | 0               | 0               | 11              |
| machfund.pool.f863973.m0                  | 23570.872249580298614866762038 NEAR    |   0.00 % | 0               | 0               | 0               | 16              |
| lusienda.pool.f863973.m0                  | 14635.888149639641051205948527 NEAR    |   0.00 % | 0               | 0               | 0               | 10              |
| gp-validator-testnet.pool.f863973.m0      | 14226.94217859214090210446257 NEAR     |   0.00 % | 0               | 0               | 0               | 4               |
+-------------------------------------------+----------------------------------------+----------+-----------------+-----------------+-----------------+-----------------+
```
</details>

### proposals
Show both new proposals in the current epoch as well as current validators who are implicitly proposing:

```sh
near-validator proposals network-config testnet
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Proposals for the epoch after next (new: 25, passing: 62, expected seat price = 54039.777430965844435406680899 NEAR)
+----+--------------------+-------------------------------------------+----------------------------------------+----------------------------------------+
| #  | Status             | Validator Id                              | Stake                                  | New Stake                              |
+----+--------------------+-------------------------------------------+----------------------------------------+----------------------------------------+
| 1  | Rollover           | node2                                     | 42463456.377087193379078729276997 NEAR |                                        |
| 2  | Rollover           | node1                                     | 42455461.454552359341703906982801 NEAR |                                        |
| 3  | Rollover           | node3                                     | 42438161.018506526315943976152203 NEAR |                                        |
| 4  | Rollover           | node0                                     | 42334729.937985819822434707258555 NEAR |                                        |
| 5  | Proposal(Accepted) | aurora.pool.f863973.m0                    | 31177850.233547788240331244407559 NEAR | 31193131.192966929723681068481055 NEAR |
| 6  | Rollover           | 01node.pool.f863973.m0                    | 15719906.892540506860671479938212 NEAR |                                        |
| 7  | Proposal(Accepted) | cryptogarik.pool.f863973.m0               | 14146118.880582007333099210276014 NEAR | 14146130.926226277756099420604526 NEAR |
| 8  | Proposal(Accepted) | legends.pool.f863973.m0                   | 13232045.564115859383036538973294 NEAR | 13238044.769643487245621788479017 NEAR |
| 9  | Proposal(Accepted) | stakely_v2.pool.f863973.m0                | 11308412.76413255794143406084197 NEAR  | 11313710.776257739953163284584824 NEAR |
| 10 | Rollover           | everstake.pool.f863973.m0                 | 11080661.442432259407194895864464 NEAR |                                        |
| 11 | Rollover           | chorusone.pool.f863973.m0                 | 9629377.891168433658816361005072 NEAR  |                                        |
| 12 | Proposal(Accepted) | ni.pool.f863973.m0                        | 8822038.178787812833888556031977 NEAR  | 8825232.420561305823830133509952 NEAR  |
| 13 | Proposal(Accepted) | nodeasy.pool.f863973.m0                   |                                        | 7934172.945372108536470046666193 NEAR  |
| 14 | Proposal(Accepted) | kiln.pool.f863973.m0                      | 6079613.843956031425391305083783 NEAR  | 6089293.096542765174318484627714 NEAR  |
| 15 | Rollover           | staked.pool.f863973.m0                    | 4999757.888727011980090322499078 NEAR  |                                        |
| 16 | Rollover           | foundryusa.pool.f863973.m0                | 2412323.288338062508844224434456 NEAR  |                                        |
| 17 | Rollover           | chorus-one.pool.f863973.m0                | 2219222.836168428864972611997445 NEAR  |                                        |
| 18 | Rollover           | lunanova2.pool.f863973.m0                 | 2122700.547698656819828381670739 NEAR  |                                        |
| 19 | Rollover           | tribe-pool.pool.f863973.m0                | 1602734.408040514998117022773702 NEAR  |                                        |
| 20 | Rollover           | sweden.pool.f863973.m0                    | 1548522.293510958519275997113481 NEAR  |                                        |
| 21 | Proposal(Accepted) | stakesstone.pool.f863973.m0               | 1495620.398863776083560667101079 NEAR  | 1496166.078305000144619938927897 NEAR  |
| 22 | Proposal(Accepted) | pathrocknetwork.pool.f863973.m0           | 1489110.822070197011527074788129 NEAR  | 1489649.148331873661555724498084 NEAR  |
| 23 | Rollover           | bee1stake.pool.f863973.m0                 | 1458170.384325998236160607279491 NEAR  |                                        |
| 24 | Rollover           | alexandruast.pool.f863973.m0              | 1421069.05632136355769699266569 NEAR   |                                        |
| 25 | Rollover           | dsrvlabs.pool.f863973.m0                  | 1360015.07176394889137508520043 NEAR   |                                        |
| 26 | Rollover           | leadnode.pool.f863973.m0                  | 1275260.096422084948847089180765 NEAR  |                                        |
| 27 | Rollover           | namdokmai.pool.f863973.m0                 | 911474.339828150411737273056685 NEAR   |                                        |
| 28 | Rollover           | solidstate.pool.f863973.m0                | 902587.046139049484585657411276 NEAR   |                                        |
| 29 | Proposal(Accepted) | chelovek_iz_naroda.pool.f863973.m0        | 814633.60270815969401901915999 NEAR    | 814643.602843622897090819159989 NEAR   |
| 30 | Proposal(Accepted) | optimusvalidatornetwork.pool.f863973.m0   | 814536.394051230138804706693949 NEAR   | 814525.597100869446858861876735 NEAR   |
| 31 | Rollover           | tayang.pool.f863973.m0                    | 737378.959040357990001747402769 NEAR   |                                        |
| 32 | Rollover           | blockngine.pool.f863973.m0                | 639345.96536088610582681658546 NEAR    |                                        |
| 33 | Rollover           | bflame.pool.f863973.m0                    | 604958.879804267092172663214773 NEAR   |                                        |
| 34 | Rollover           | genesislab.pool.f863973.m0                | 577654.162821521726556213824992 NEAR   |                                        |
| 35 | Rollover           | squatch.pool.f863973.m0                   | 553395.136322010026324042602167 NEAR   |                                        |
| 36 | Rollover           | stake2grow.pool.f863973.m0                | 535861.079658259760801920488481 NEAR   |                                        |
| 37 | Rollover           | onin.pool.f863973.m0                      | 524123.873966987768556970647187 NEAR   |                                        |
| 38 | Rollover           | fibocrypto.pool.f863973.m0                | 520520.353322425852655787808568 NEAR   |                                        |
| 39 | Rollover           | anchikovproduction.pool.f863973.m0        | 497897.493465086603547487431967 NEAR   |                                        |
| 40 | Rollover           | darvin.pool.f863973.m0                    | 494852.176425715690951019987015 NEAR   |                                        |
| 41 | Proposal(Accepted) | infstones.pool.f863973.m0                 |                                        | 490042.289162263103709480311607 NEAR   |
| 42 | Rollover           | moonlet.pool.f863973.m0                   | 480808.594675834324997215741764 NEAR   |                                        |
| 43 | Rollover           | aquarius.pool.f863973.m0                  | 440148.228029800480983617468605 NEAR   |                                        |
| 44 | Proposal(Accepted) | casualpooltest.pool.f863973.m0            | 437487.300611972413125697142006 NEAR   | 437487.304290901270779497142006 NEAR   |
| 45 | Rollover           | pennyvalidators.pool.f863973.m0           | 405728.663157549880430291114589 NEAR   |                                        |
| 46 | Proposal(Accepted) | mondlicht.pool.devnet                     | 382179.974090138353447112728888 NEAR   | 382518.134699398818830702935521 NEAR   |
| 47 | Rollover           | stingray.pool.f863973.m0                  | 359535.994275044281045666367836 NEAR   |                                        |
| 48 | Rollover           | nw.pool.devnet                            | 314305.897488098565334510551894 NEAR   |                                        |
| 49 | Proposal(Accepted) | infiniteloop.pool.f863973.m0              | 312813.239752153752739566624169 NEAR   | 312813.240053274445572066624169 NEAR   |
| 50 | Rollover           | gargoyle.pool.f863973.m0                  | 292432.815062289613304478068761 NEAR   |                                        |
| 51 | Proposal(Accepted) | lastnode.pool.f863973.m0                  | 221061.38599926302676468391151 NEAR    | 221061.38627961502993308391151 NEAR    |
| 52 | Proposal(Accepted) | gettingnear.pool.f863973.m0               | 205244.215299155470451571795811 NEAR   | 205828.309465759993436213346325 NEAR   |
| 53 | Rollover           | spectrum.pool.f863973.m0                  | 187756.424163657235865226822981 NEAR   |                                        |
| 54 | Rollover           | kronos.pool.f863973.m0                    | 171375.749635294004952803904532 NEAR   |                                        |
| 55 | Rollover           | idtcn3.pool.f863973.m0                    | 115576.047411466110628506181867 NEAR   |                                        |
| 56 | Proposal(Accepted) | kuutamocharlie.pool.devnet                |                                        | 81955.191886364504871018375552 NEAR    |
| 57 | Rollover           | blueprint.pool.f863973.m0                 | 78978.68796349885502102929427 NEAR     |                                        |
| 58 | Rollover           | hahaha.pool.devnet                        | 64337.498161220467461479588097 NEAR    |                                        |
| 59 | Proposal(Accepted) | forked.pool.f863973.m0                    |                                        | 60212.05554749766575529530327 NEAR     |
| 60 | Rollover           | jstaking.pool.f863973.m0                  | 59249.07109749876737048778665 NEAR     |                                        |
| 61 | Rollover           | derori_validator_pool.pool.f863973.m0     | 58645.575112263099871994258981 NEAR    |                                        |
| 62 | Rollover           | ibb.pool.f863973.m0                       | 54704.833517287745250191173298 NEAR    |                                        |
| 63 | Kicked out         | happystake.pool.f863973.m0                | 53720.240145927988351697242033 NEAR    |                                        |
| 64 | Kicked out         | kuutamo.pool.f863973.m0                   | 50898.649507219560792919189598 NEAR    |                                        |
| 65 | Proposal(Declined) | bgpntx.pool.f863973.m0                    | 49788.123993303798255829538717 NEAR    | 49788.124271479370135129538717 NEAR    |
| 66 | Kicked out         | grassets.pool.f863973.m0                  | 48754.250378643643185317807387 NEAR    |                                        |
| 67 | Kicked out         | pandateam.pool.f863973.m0                 | 47663.661681818850522112907251 NEAR    |                                        |
| 68 | Kicked out         | domanodes.pool.f863973.m0                 | 46932.503319601361625002798 NEAR       |                                        |
| 69 | Kicked out         | x50capital.pool.f863973.m0                | 45928.257745845634881269534446 NEAR    |                                        |
| 70 | Kicked out         | twinstake.pool.f863973.m0                 | 44750.061857222259043729329193 NEAR    |                                        |
| 71 | Kicked out         | 4ire-pool.pool.f863973.m0                 | 44394.746192552157237523710969 NEAR    |                                        |
| 72 | Kicked out         | twintest1.pool.f863973.m0                 | 43560.75819603592053714114437 NEAR     |                                        |
| 73 | Kicked out         | sevennines-t0.pool.f863973.m0             | 43217.387754730002508230464604 NEAR    |                                        |
| 74 | Kicked out         | commons_pnw.pool.f863973.m0               | 41307.46845724409836625299375 NEAR     |                                        |
| 75 | Proposal(Declined) | cryptolions.pool.f863973.m0               | 38585.308044335751252004590272 NEAR    | 38585.308374159098843004590272 NEAR    |
| 76 | Kicked out         | omnistake_v5.factory01.littlefarm.testnet | 38539.722508482341332079252916 NEAR    |                                        |
| 77 | Kicked out         | cex2.pool.f863973.m0                      | 37778.83295188551769335374954 NEAR     |                                        |
| 78 | Kicked out         | lnc.pool.f863973.m0                       | 37491.208479267156735023643816 NEAR    |                                        |
| 79 | Kicked out         | alanpool.pool.f863973.m0                  | 36228.667912753203223689239387 NEAR    |                                        |
| 80 | Kicked out         | dialogue.pool.f863973.m0                  | 35963.563252341589944110547084 NEAR    |                                        |
| 81 | Kicked out         | stakingpodalliance.pool.f863973.m0        | 35047.110469586773652462433208 NEAR    |                                        |
| 82 | Kicked out         | dehashed.pool.f863973.m0                  | 32769.300253705312947757304866 NEAR    |                                        |
| 83 | Proposal(Declined) | do0k13-kuutamod.pool.devnet               |                                        | 31893.204026221938212322781368 NEAR    |
| 84 | Kicked out         | dav_kuutamo.pool.f863973.m0               | 30330.117372193371695000000001 NEAR    |                                        |
| 85 | Proposal(Declined) | lavenderfive.pool.f863973.m0              | 30227.016444935378828600648379 NEAR    | 30227.016817078602784800648379 NEAR    |
| 86 | Kicked out         | machfund.pool.f863973.m0                  | 23570.872249580298614866762038 NEAR    |                                        |
| 87 | Kicked out         | lusienda.pool.f863973.m0                  | 14635.888149639641051205948527 NEAR    |                                        |
| 88 | Proposal(Declined) | 1inc4.pool.f863973.m0                     |                                        | 8970.16910365545105495283601 NEAR      |
| 89 | Proposal(Declined) | wolfedge-capital-testnet.pool.f863973.m0  |                                        | 4110.352445422739638628282042 NEAR     |
+----+--------------------+-------------------------------------------+----------------------------------------+----------------------------------------+
```
</details>

### staking
For validators, there is an option to staking without deploying a staking pool smart contract.
- [view-stake](#view-stake---View-validator-stake)
- [stake-proposal](#stake-proposal---To-stake-NEAR-directly-without-a-staking-pool)
- [unstake-proposal](#unstake-proposal---To-unstake-NEAR-directly-without-a-staking-pool)

#### view-stake - View validator stake

To view the validator's stake on the last block, you need to enter in the terminal command line:

```sh
near-validator staking view-stake volodymyr.testnet network-config testnet now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Validator volodymyr.testnet staked amount 0 NEAR
```
</details>

#### stake-proposal - To stake NEAR directly without a staking pool

To stake the amount you must enter in the terminal command line:

```sh
near-validator staking stake-proposal volodymyr.testnet ed25519:AiEo5xepXjY7ChihZJ6AsfoDAaUowhPgvQp997qnFuRP '1500 NEAR' network-config testnet sign-with-keychain send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Validator <volodymyr.testnet> has successfully staked 1500 NEAR.
```
</details>

#### unstake-proposal - To unstake NEAR directly without a staking pool

To unstake you must enter in the terminal command line:

```sh
near-validator staking unstake-proposal volodymyr.testnet ed25519:AiEo5xepXjY7ChihZJ6AsfoDAaUowhPgvQp997qnFuRP network-config testnet sign-with-keychain send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Validator <volodymyr.testnet> successfully unstaked.
```
</details>

'''
'''--- docs/media/example.svg ---
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="2560" height="1042.08"><rect width="2560" height="1042.08" rx="0" ry="0" class="a"/><svg height="1042.08" viewBox="0 0 256 104.208" width="2560" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><style>@keyframes h{0%{transform:translateX(0)}.1%{transform:translateX(-256px)}4.2%{transform:translateX(-512px)}7.2%{transform:translateX(-768px)}8.7%{transform:translateX(-1024px)}10.1%{transform:translateX(-1280px)}15.9%{transform:translateX(-1536px)}26.2%{transform:translateX(-1792px)}29.1%{transform:translateX(-2048px)}35.4%{transform:translateX(-2304px)}35.5%{transform:translateX(-3328px)}42.3%{transform:translateX(-3840px)}44.7%{transform:translateX(-4352px)}48.4%{transform:translateX(-4608px)}52%{transform:translateX(-4864px)}55.5%{transform:translateX(-5632px)}63.9%{transform:translateX(-6144px)}71.3%{transform:translateX(-7424px)}82.3%{transform:translateX(-7936px)}89.8%{transform:translateX(-11008px)}to{transform:translateX(-11264px)}}.a{fill:#282d35}.c,.d,.e{fill:#b9c0cb;white-space:pre}.d,.e{fill:#a8cc8c}.e{fill:#66c2cd}</style><g font-family="Monaco,Consolas,Menlo,'Bitstream Vera Sans Mono','Powerline Symbols',monospace" font-size="1.67"><defs><symbol id="1"><text y="1.67" class="c">The</text><text x="4.008" y="1.67" class="c">default</text><text x="12.024" y="1.67" class="c">interactive</text><text x="24.048" y="1.67" class="c">shell</text><text x="30.06" y="1.67" class="c">is</text><text x="33.066" y="1.67" class="c">now</text><text x="37.074" y="1.67" class="c">zsh.</text></symbol><symbol id="2"><text y="1.67" class="c">To</text><text x="3.006" y="1.67" class="c">update</text><text x="10.02" y="1.67" class="c">your</text><text x="15.03" y="1.67" class="c">account</text><text x="23.046" y="1.67" class="c">to</text><text x="26.052" y="1.67" class="c">use</text><text x="30.06" y="1.67" class="c">zsh,</text><text x="35.07" y="1.67" class="c">please</text><text x="42.084" y="1.67" class="c">run</text><text x="46.092" y="1.67" class="c">`chsh</text><text x="52.104" y="1.67" class="c">-s</text><text x="55.11" y="1.67" class="c">/bin/zsh`.</text></symbol><symbol id="3"><text y="1.67" class="c">For</text><text x="4.008" y="1.67" class="c">more</text><text x="9.018" y="1.67" class="c">details,</text><text x="18.036" y="1.67" class="c">please</text><text x="25.05" y="1.67" class="c">visit</text><text x="31.062" y="1.67" class="c">https://support.apple.com/kb/HT208050.</text></symbol><symbol id="4"><text y="1.67" class="c">bash-3.2$</text></symbol><symbol id="5"><text y="1.67" class="c">bash-3.2$</text><text x="10.02" y="1.67" class="c">near-validator</text></symbol><symbol id="6"><text y="1.67" class="d">?</text><text x="2.004" y="1.67" class="c">What</text><text x="7.014" y="1.67" class="c">are</text><text x="11.022" y="1.67" class="c">you</text><text x="15.03" y="1.67" class="c">up</text><text x="18.036" y="1.67" class="c">to?</text><text x="22.044" y="1.67" class="c">(select</text><text x="30.06" y="1.67" class="c">one</text><text x="34.068" y="1.67" class="c">of</text><text x="37.074" y="1.67" class="c">the</text><text x="41.082" y="1.67" class="c">options</text><text x="49.098" y="1.67" class="c">with</text><text x="54.108" y="1.67" class="c">the</text><text x="58.116" y="1.67" class="c">up-down</text><text x="66.132" y="1.67" class="c">arrows</text><text x="73.146" y="1.67" class="c">on</text><text x="76.152" y="1.67" class="c">your</text><text x="81.162" y="1.67" class="c">keyboard</text><text x="90.18" y="1.67" class="c">and</text><text x="94.188" y="1.67" class="c">press</text><text x="100.2" y="1.67" class="c">Enter)</text></symbol><symbol id="7"><text y="1.67" class="e">&gt;</text><text x="2.004" y="1.67" class="e">validators</text><text x="15.03" y="1.67" class="e">-</text><text x="19.038" y="1.67" class="e">Lookup</text><text x="26.052" y="1.67" class="e">validators</text><text x="37.074" y="1.67" class="e">for</text><text x="41.082" y="1.67" class="e">given</text><text x="47.094" y="1.67" class="e">epoch</text></symbol><symbol id="8"><text x="2.004" y="1.67" class="c">proposals</text><text x="15.03" y="1.67" class="c">-</text><text x="19.038" y="1.67" class="c">Show</text><text x="24.048" y="1.67" class="c">both</text><text x="29.058" y="1.67" class="c">new</text><text x="33.066" y="1.67" class="c">proposals</text><text x="43.086" y="1.67" class="c">in</text><text x="46.092" y="1.67" class="c">the</text><text x="50.1" y="1.67" class="c">current</text><text x="58.116" y="1.67" class="c">epoch</text><text x="64.128" y="1.67" class="c">as</text><text x="67.134" y="1.67" class="c">well</text><text x="72.144" y="1.67" class="c">as</text><text x="75.15" y="1.67" class="c">current</text><text x="83.166" y="1.67" class="c">validators</text><text x="94.188" y="1.67" class="c">who</text><text x="98.196" y="1.67" class="c">are</text><text x="102.204" y="1.67" class="c">implicitly</text><text x="113.226" y="1.67" class="c">proposing</text></symbol><symbol id="9"><text x="2.004" y="1.67" class="c">staking</text><text x="15.03" y="1.67" class="c">-</text><text x="19.038" y="1.67" class="c">For</text><text x="23.046" y="1.67" class="c">validators,</text><text x="35.07" y="1.67" class="c">there</text><text x="41.082" y="1.67" class="c">is</text><text x="44.088" y="1.67" class="c">an</text><text x="47.094" y="1.67" class="c">option</text><text x="54.108" y="1.67" class="c">to</text><text x="57.114" y="1.67" class="c">staking</text><text x="65.13" y="1.67" class="c">without</text><text x="73.146" y="1.67" class="c">deploying</text><text x="83.166" y="1.67" class="c">a</text><text x="85.17" y="1.67" class="c">staking</text><text x="93.186" y="1.67" class="c">pool</text><text x="98.196" y="1.67" class="c">smart</text><text x="104.208" y="1.67" class="c">contract</text><text x="113.226" y="1.67" class="c">(stake,</text><text x="121.242" y="1.67" class="c">unstake,</text><text x="130.26" y="1.67" class="c">view</text><text x="135.27" y="1.67" class="c">stake)</text></symbol><symbol id="10"><text y="1.67" class="e">[↑↓</text><text x="4.008" y="1.67" class="e">to</text><text x="7.014" y="1.67" class="e">move,</text><text x="13.026" y="1.67" class="e">enter</text><text x="19.038" y="1.67" class="e">to</text><text x="22.044" y="1.67" class="e">select,</text><text x="30.06" y="1.67" class="e">type</text><text x="35.07" y="1.67" class="e">to</text><text x="38.076" y="1.67" class="e">filter]</text></symbol><symbol id="11"><text x="2.004" y="1.67" class="c">validators</text><text x="15.03" y="1.67" class="c">-</text><text x="19.038" y="1.67" class="c">Lookup</text><text x="26.052" y="1.67" class="c">validators</text><text x="37.074" y="1.67" class="c">for</text><text x="41.082" y="1.67" class="c">given</text><text x="47.094" y="1.67" class="c">epoch</text></symbol><symbol id="12"><text y="1.67" class="e">&gt;</text><text x="2.004" y="1.67" class="e">proposals</text><text x="15.03" y="1.67" class="e">-</text><text x="19.038" y="1.67" class="e">Show</text><text x="24.048" y="1.67" class="e">both</text><text x="29.058" y="1.67" class="e">new</text><text x="33.066" y="1.67" class="e">proposals</text><text x="43.086" y="1.67" class="e">in</text><text x="46.092" y="1.67" class="e">the</text><text x="50.1" y="1.67" class="e">current</text><text x="58.116" y="1.67" class="e">epoch</text><text x="64.128" y="1.67" class="e">as</text><text x="67.134" y="1.67" class="e">well</text><text x="72.144" y="1.67" class="e">as</text><text x="75.15" y="1.67" class="e">current</text><text x="83.166" y="1.67" class="e">validators</text><text x="94.188" y="1.67" class="e">who</text><text x="98.196" y="1.67" class="e">are</text><text x="102.204" y="1.67" class="e">implicitly</text><text x="113.226" y="1.67" class="e">proposing</text></symbol><symbol id="13"><text y="1.67" class="d">&gt;</text><text x="2.004" y="1.67" class="c">What</text><text x="7.014" y="1.67" class="c">are</text><text x="11.022" y="1.67" class="c">you</text><text x="15.03" y="1.67" class="c">up</text><text x="18.036" y="1.67" class="c">to?</text><text x="22.044" y="1.67" class="c">(select</text><text x="30.06" y="1.67" class="c">one</text><text x="34.068" y="1.67" class="c">of</text><text x="37.074" y="1.67" class="c">the</text><text x="41.082" y="1.67" class="c">options</text><text x="49.098" y="1.67" class="c">with</text><text x="54.108" y="1.67" class="c">the</text><text x="58.116" y="1.67" class="c">up-down</text><text x="66.132" y="1.67" class="c">arrows</text><text x="73.146" y="1.67" class="c">on</text><text x="76.152" y="1.67" class="c">your</text><text x="81.162" y="1.67" class="c">keyboard</text><text x="90.18" y="1.67" class="c">and</text><text x="94.188" y="1.67" class="c">press</text><text x="100.2" y="1.67" class="c">Enter)</text><text x="107.214" y="1.67" class="e">validators</text><text x="120.24" y="1.67" class="e">-</text><text x="124.248" y="1.67" class="e">Lookup</text><text x="131.262" y="1.67" class="e">validators</text><text x="142.284" y="1.67" class="e">for</text><text x="146.292" y="1.67" class="e">given</text><text x="152.304" y="1.67" class="e">epoch</text></symbol><symbol id="14"><text y="1.67" class="d">?</text><text x="2.004" y="1.67" class="c">What</text><text x="7.014" y="1.67" class="c">is</text><text x="10.02" y="1.67" class="c">the</text><text x="14.028" y="1.67" class="c">name</text><text x="19.038" y="1.67" class="c">of</text><text x="22.044" y="1.67" class="c">the</text><text x="26.052" y="1.67" class="c">network?</text></symbol><symbol id="15"><text y="1.67" class="e">&gt;</text><text x="2.004" y="1.67" class="e">mainnet</text></symbol><symbol id="16"><text x="2.004" y="1.67" class="c">testnet</text></symbol><symbol id="17"><text x="2.004" y="1.67" class="c">meta-testnet</text></symbol><symbol id="18"><text x="2.004" y="1.67" class="c">pagoda-testnet</text></symbol><symbol id="19"><text y="1.67" class="d">&gt;</text><text x="2.004" y="1.67" class="c">What</text><text x="7.014" y="1.67" class="c">is</text><text x="10.02" y="1.67" class="c">the</text><text x="14.028" y="1.67" class="c">name</text><text x="19.038" y="1.67" class="c">of</text><text x="22.044" y="1.67" class="c">the</text><text x="26.052" y="1.67" class="c">network?</text><text x="35.07" y="1.67" class="e">testnet</text></symbol><symbol id="20"><text y="1.67" class="d">?</text><text x="2.004" y="1.67" class="c">Choose</text><text x="9.018" y="1.67" class="c">block</text><text x="15.03" y="1.67" class="c">for</text><text x="19.038" y="1.67" class="c">view:</text></symbol><symbol id="21"><text y="1.67" class="e">&gt;</text><text x="2.004" y="1.67" class="e">latest</text><text x="20.04" y="1.67" class="e">-</text><text x="24.048" y="1.67" class="e">View</text><text x="29.058" y="1.67" class="e">latest</text><text x="36.072" y="1.67" class="e">validators</text></symbol><symbol id="22"><text x="2.004" y="1.67" class="c">next</text><text x="20.04" y="1.67" class="c">-</text><text x="24.048" y="1.67" class="c">View</text><text x="29.058" y="1.67" class="c">next</text><text x="34.068" y="1.67" class="c">validators</text></symbol><symbol id="23"><text x="2.004" y="1.67" class="c">at-block-height</text><text x="20.04" y="1.67" class="c">-</text><text x="22.044" y="1.67" class="c">View</text><text x="27.054" y="1.67" class="c">validators</text><text x="38.076" y="1.67" class="c">in</text><text x="41.082" y="1.67" class="c">a</text><text x="43.086" y="1.67" class="c">height-selected</text><text x="59.118" y="1.67" class="c">block</text></symbol><symbol id="24"><text x="2.004" y="1.67" class="c">at-block-hash</text><text x="20.04" y="1.67" class="c">-</text><text x="22.044" y="1.67" class="c">View</text><text x="27.054" y="1.67" class="c">validators</text><text x="38.076" y="1.67" class="c">in</text><text x="41.082" y="1.67" class="c">a</text><text x="43.086" y="1.67" class="c">hash-selected</text><text x="57.114" y="1.67" class="c">block</text></symbol><symbol id="25"><text x="2.004" y="1.67" class="c">back</text></symbol><symbol id="26"><text y="1.67" class="d">&gt;</text><text x="2.004" y="1.67" class="c">Choose</text><text x="9.018" y="1.67" class="c">block</text><text x="15.03" y="1.67" class="c">for</text><text x="19.038" y="1.67" class="c">view:</text><text x="25.05" y="1.67" class="e">latest</text><text x="43.086" y="1.67" class="e">-</text><text x="47.094" y="1.67" class="e">View</text><text x="52.104" y="1.67" class="e">latest</text><text x="59.118" y="1.67" class="e">validators</text></symbol><symbol id="27"><text y="1.67" class="c">Validators</text><text x="11.022" y="1.67" class="c">(total:</text><text x="19.038" y="1.67" class="c">33,</text><text x="23.046" y="1.67" class="c">seat</text><text x="28.056" y="1.67" class="c">price:</text><text x="35.07" y="1.67" class="c">42930.850497004088629425391653</text><text x="66.132" y="1.67" class="c">NEAR)</text></symbol><symbol id="28"><text y="1.67" class="c">+---------------------------------------+----------------------------------------+----------+-----------------+-----------------+-----------------+-----------------+</text></symbol><symbol id="29"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="d">Validator</text><text x="12.024" y="1.67" class="d">Id</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="d">Stake</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="d">Online</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="d">Blocks</text><text x="101.202" y="1.67" class="d">produced</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="d">Blocks</text><text x="119.238" y="1.67" class="d">expected</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="d">Chunks</text><text x="137.274" y="1.67" class="d">produced</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="d">Chunks</text><text x="155.31" y="1.67" class="d">expected</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="30"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">node1</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">45782760.132109828776463745319418</text><text x="76.152" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">4839</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">4840</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">18507</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">18507</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="31"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">node2</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">45777572.13065537660105386002629</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">4744</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">4744</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">18432</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">18432</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="32"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">node3</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">45739770.333335879608048481779526</text><text x="76.152" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">4892</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">4892</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">18532</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">18532</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="33"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">node0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">45647359.936190498922988361304637</text><text x="76.152" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">4823</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">4823</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">18440</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">18440</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="34"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">aurora.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">16615374.360793598552632516163175</text><text x="76.152" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="84.168" y="1.67" class="c">99.94</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">1749</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">1749</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">6755</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">6760</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="35"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">legends.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">14290967.273490005919765285981509</text><text x="76.152" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="84.168" y="1.67" class="c">99.93</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">1500</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">1500</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">5741</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">5746</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="36"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">01node.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">9830652.212104487079183558686918</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="84.168" y="1.67" class="c">99.82</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">1031</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">1033</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">3985</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">3992</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="37"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">kiln.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">6414105.331956331716995409577156</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="84.168" y="1.67" class="c">99.94</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">690</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">690</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">2668</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">2670</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="38"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">masternode24.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">5434414.175448179692977074642582</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">562</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">2158</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="39"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">stakely_v2.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">5003805.725754412306158354104148</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">552</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">552</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">1996</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">1996</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="40"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">chorusone.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">3375783.692565938202162550804472</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">367</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">367</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">1376</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">1376</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="41"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">everstake.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">3080745.628408860284715548968291</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">301</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">301</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">1229</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">1229</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="42"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">ni.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">2733157.584646741278128301577247</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">303</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">303</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">1124</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">1124</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="43"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">foundryusa.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">2609521.393500617701338012207582</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">277</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">277</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">1050</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">1050</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="44"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">nodeasy.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">2420020.237802674351889625566846</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">236</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">963</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="45"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">chorus-one.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">2387852.858957629635326403950489</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">240</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">240</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">987</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">987</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="46"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">lunanova2.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">2310521.945995146882467182187896</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">259</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">259</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">981</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">981</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="47"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">stakesstone.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">1639254.173625604299174549021146</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">168</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">168</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">628</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">628</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="48"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">pathrocknetwork.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">1495234.317257993856801137814923</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">155</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">155</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">594</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">594</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="49"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">dsrvlabs.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">1472351.393471098604522952004557</text><text x="75.15" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">165</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">165</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">584</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">584</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="50"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">al3c5.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">975143.604895569712045847233466</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">97</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">396</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="51"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">phet90testnet.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">739426.73419984323164609164242</text><text x="73.146" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">67</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">302</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="52"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">infstones.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">485531.909527061907417562828443</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">48</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">177</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="53"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">casualpooltest.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">445225.138948242924398777595923</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">49</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">183</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="54"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">mondlicht.pool.devnet</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">412087.414876251453309938650647</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">46</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">151</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="55"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">gargoyle.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">277311.409132059037144613368982</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">16</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">103</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="56"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">gettingnear.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">222455.678956231585723821486644</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">20</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">20</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">84</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">84</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="57"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">lastnode.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">222305.811604103984937465758702</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">23</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">97</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="58"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">bg-1.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">194918.584387377325066394667774</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">18</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">66</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="59"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">blueprint.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">101322.484764959944413258846404</text><text x="74.148" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">11</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">11</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">33</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">33</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="60"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">derori_validator_pool.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">93261.780424467596372900047123</text><text x="73.146" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">11</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">11</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">37</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">37</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="61"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">nadyka.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">57337.165579474864863432810825</text><text x="73.146" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="83.166" y="1.67" class="c">100.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">10</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">10</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">37</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">37</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="62"><text y="1.67" class="c">|</text><text x="2.004" y="1.67" class="c">lavenderfive.pool.f863973.m0</text><text x="40.08" y="1.67" class="c">|</text><text x="42.084" y="1.67" class="c">30263.050909006093775681207166</text><text x="73.146" y="1.67" class="c">NEAR</text><text x="81.162" y="1.67" class="c">|</text><text x="85.17" y="1.67" class="c">0.00</text><text x="90.18" y="1.67" class="c">%</text><text x="92.184" y="1.67" class="c">|</text><text x="94.188" y="1.67" class="c">0</text><text x="110.22" y="1.67" class="c">|</text><text x="112.224" y="1.67" class="c">0</text><text x="128.256" y="1.67" class="c">|</text><text x="130.26" y="1.67" class="c">0</text><text x="146.292" y="1.67" class="c">|</text><text x="148.296" y="1.67" class="c">13</text><text x="164.328" y="1.67" class="c">|</text></symbol><symbol id="63"><text y="1.67" class="c">Your</text><text x="5.01" y="1.67" class="c">console</text><text x="13.026" y="1.67" class="c">command:</text></symbol><symbol id="64"><text y="1.67" class="c">near-validator</text><text x="15.03" y="1.67" class="c">validators</text><text x="26.052" y="1.67" class="c">network-config</text><text x="41.082" y="1.67" class="c">testnet</text><text x="49.098" y="1.67" class="c">now</text></symbol><symbol id="a"><path fill="transparent" d="M0 0h256v48H0z"/></symbol><symbol id="b"><path fill="#6f7683" d="M0 0h1.102v2.171H0z"/></symbol></defs><path class="a" d="M0 0h256v104.208H0z"/><g style="animation-duration:16.570246s;animation-iteration-count:infinite;animation-name:h;animation-timing-function:steps(1,end)"><svg width="11520"><svg><use xlink:href="#a"/><use xlink:href="#b" x="-.004"/></svg><svg x="256"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#4" y="8.684"/></svg><svg x="512"><use xlink:href="#a"/><use xlink:href="#b" x="10.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">n</text></svg><svg x="768"><use xlink:href="#a"/><use xlink:href="#b" x="11.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">ne</text></svg><svg x="1024"><use xlink:href="#a"/><use xlink:href="#b" x="12.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">nea</text></svg><svg x="1280"><use xlink:href="#a"/><use xlink:href="#b" x="13.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">near</text></svg><svg x="1536"><use xlink:href="#a"/><use xlink:href="#b" x="14.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">near-</text></svg><svg x="1792"><use xlink:href="#a"/><use xlink:href="#b" x="15.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">near-v</text></svg><svg x="2048"><use xlink:href="#a"/><use xlink:href="#b" x="24.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="2304"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="2560"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="2816"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="3072"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="15.197"/><use xlink:href="#9" y="17.368"/><text y="21.209" class="e">[↑↓</text><text x="4.008" y="21.209" class="e">to</text><text x="7.014" y="21.209" class="e">move,</text><text x="13.026" y="21.209" class="e">enter</text><text x="19.038" y="21.209" class="e">to</text><text x="22.044" y="21.209" class="e">select,</text><text x="30.06" y="21.209" class="e">type</text><text x="35.07" y="21.209" class="e">to</text><text x="38.076" y="21.209" class="e">filter</text></svg><svg x="3328"><use xlink:href="#a"/><use xlink:href="#b" x="106.996" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="15.197"/><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/></svg><svg x="3584"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="15.197"/><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/></svg><svg x="3840"><use xlink:href="#a"/><use xlink:href="#b" x="106.996" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#11" y="13.026"/><use xlink:href="#12" y="15.197"/><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/></svg><svg x="4096"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="4352"><use xlink:href="#a"/><use xlink:href="#b" x="106.996" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#11" y="13.026"/><use xlink:href="#8" y="15.197"/><text y="19.038" class="e">&gt;</text><text x="2.004" y="19.038" class="e">staking</text><text x="15.03" y="19.038" class="e">-</text><text x="19.038" y="19.038" class="e">For</text><text x="23.046" y="19.038" class="e">validators,</text><text x="35.07" y="19.038" class="e">there</text><text x="41.082" y="19.038" class="e">is</text><text x="44.088" y="19.038" class="e">an</text><text x="47.094" y="19.038" class="e">option</text><text x="54.108" y="19.038" class="e">to</text><text x="57.114" y="19.038" class="e">staking</text><text x="65.13" y="19.038" class="e">without</text><text x="73.146" y="19.038" class="e">deploying</text><text x="83.166" y="19.038" class="e">a</text><text x="85.17" y="19.038" class="e">staking</text><text x="93.186" y="19.038" class="e">pool</text><text x="98.196" y="19.038" class="e">smart</text><text x="104.208" y="19.038" class="e">contract</text><text x="113.226" y="19.038" class="e">(stake,</text><text x="121.242" y="19.038" class="e">unstake,</text><text x="130.26" y="19.038" class="e">view</text><text x="135.27" y="19.038" class="e">stake)</text><use xlink:href="#10" y="19.539"/></svg><svg x="4608"><use xlink:href="#a"/><use xlink:href="#b" x="106.996" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#11" y="13.026"/><use xlink:href="#12" y="15.197"/><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/></svg><svg x="4864"><use xlink:href="#a"/><use xlink:href="#b" x="106.996" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="15.197"/><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/></svg><svg x="5120"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="10.855"/></svg><svg x="5376"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#14" y="13.026"/></svg><svg x="5632"><use xlink:href="#a"/><use xlink:href="#b" x="34.996" y="13.001"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#14" y="13.026"/><use xlink:href="#15" y="15.197"/><use xlink:href="#16" y="17.368"/><use xlink:href="#17" y="19.539"/><use xlink:href="#18" y="21.71"/><use xlink:href="#10" y="23.881"/></svg><svg x="5888"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#14" y="13.026"/><use xlink:href="#15" y="15.197"/><use xlink:href="#16" y="17.368"/><use xlink:href="#17" y="19.539"/></svg><svg x="6144"><use xlink:href="#a"/><use xlink:href="#b" x="34.996" y="13.001"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#14" y="13.026"/><text x="2.004" y="16.867" class="c">mainnet</text><text y="19.038" class="e">&gt;</text><text x="2.004" y="19.038" class="e">testnet</text><use xlink:href="#17" y="19.539"/><use xlink:href="#18" y="21.71"/><use xlink:href="#10" y="23.881"/></svg><svg x="6400"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/></svg><svg x="6656"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="15.172"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/></svg><svg x="6912"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#20" y="15.197"/><use xlink:href="#21" y="17.368"/><use xlink:href="#22" y="19.539"/><use xlink:href="#23" y="21.71"/><use xlink:href="#24" y="23.881"/><use xlink:href="#25" y="26.052"/><text y="29.893" class="e">[</text></svg><svg x="7168"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#20" y="15.197"/><use xlink:href="#21" y="17.368"/><use xlink:href="#22" y="19.539"/><use xlink:href="#23" y="21.71"/><use xlink:href="#24" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#10" y="28.223"/></svg><svg x="7424"><use xlink:href="#a"/><use xlink:href="#b" x="24.996" y="15.172"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#20" y="15.197"/><use xlink:href="#21" y="17.368"/><use xlink:href="#22" y="19.539"/><use xlink:href="#23" y="21.71"/><use xlink:href="#24" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#10" y="28.223"/></svg><svg x="7680"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#20" y="15.197"/><use xlink:href="#21" y="17.368"/></svg><svg x="7936"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/></svg><svg x="8192"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="19.514"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/></svg><svg x="8448"><use xlink:href="#a"/><use xlink:href="#b" x="164.996" y="28.198"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/></svg><svg x="8704"><use xlink:href="#a"/><use xlink:href="#b" x="149.996" y="39.053"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><text y="40.748" class="c">|</text><text x="2.004" y="40.748" class="c">01node.pool.f863973.m0</text><text x="40.08" y="40.748" class="c">|</text><text x="42.084" y="40.748" class="c">9830652.212104487079183558686918</text><text x="75.15" y="40.748" class="c">NEAR</text><text x="81.162" y="40.748" class="c">|</text><text x="84.168" y="40.748" class="c">99.82</text><text x="90.18" y="40.748" class="c">%</text><text x="92.184" y="40.748" class="c">|</text><text x="94.188" y="40.748" class="c">1031</text><text x="110.22" y="40.748" class="c">|</text><text x="112.224" y="40.748" class="c">1033</text><text x="128.256" y="40.748" class="c">|</text><text x="130.26" y="40.748" class="c">3985</text><text x="146.292" y="40.748" class="c">|</text><text x="148.296" y="40.748" class="c">39</text></svg><svg x="8960"><use xlink:href="#a"/><use xlink:href="#b" x="134.996" y="49.908"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><text y="51.603" class="c">|</text><text x="2.004" y="51.603" class="c">everstake.pool.f863973.m0</text><text x="40.08" y="51.603" class="c">|</text><text x="42.084" y="51.603" class="c">3080745.628408860284715548968291</text><text x="75.15" y="51.603" class="c">NEAR</text><text x="81.162" y="51.603" class="c">|</text><text x="83.166" y="51.603" class="c">100.00</text><text x="90.18" y="51.603" class="c">%</text><text x="92.184" y="51.603" class="c">|</text><text x="94.188" y="51.603" class="c">301</text><text x="110.22" y="51.603" class="c">|</text><text x="112.224" y="51.603" class="c">301</text><text x="128.256" y="51.603" class="c">|</text><text x="130.26" y="51.603" class="c">1229</text></svg><svg x="9216"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="52.079"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/></svg><svg x="9472"><use xlink:href="#a"/><use xlink:href="#b" x="151.996" y="60.763"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/><use xlink:href="#42" y="52.104"/><use xlink:href="#43" y="54.275"/><use xlink:href="#44" y="56.446"/><use xlink:href="#45" y="58.617"/><text y="62.458" class="c">|</text><text x="2.004" y="62.458" class="c">lunanova2.pool.f863973.m0</text><text x="40.08" y="62.458" class="c">|</text><text x="42.084" y="62.458" class="c">2310521.945995146882467182187896</text><text x="75.15" y="62.458" class="c">NEAR</text><text x="81.162" y="62.458" class="c">|</text><text x="83.166" y="62.458" class="c">100.00</text><text x="90.18" y="62.458" class="c">%</text><text x="92.184" y="62.458" class="c">|</text><text x="94.188" y="62.458" class="c">259</text><text x="110.22" y="62.458" class="c">|</text><text x="112.224" y="62.458" class="c">259</text><text x="128.256" y="62.458" class="c">|</text><text x="130.26" y="62.458" class="c">981</text><text x="146.292" y="62.458" class="c">|</text><text x="148.296" y="62.458" class="c">981</text></svg><svg x="9728"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="71.618"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/><use xlink:href="#42" y="52.104"/><use xlink:href="#43" y="54.275"/><use xlink:href="#44" y="56.446"/><use xlink:href="#45" y="58.617"/><use xlink:href="#46" y="60.788"/><use xlink:href="#47" y="62.959"/><use xlink:href="#48" y="65.13"/><use xlink:href="#49" y="67.301"/><use xlink:href="#50" y="69.472"/></svg><svg x="9984"><use xlink:href="#a"/><use xlink:href="#b" x="151.996" y="80.302"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/><use xlink:href="#42" y="52.104"/><use xlink:href="#43" y="54.275"/><use xlink:href="#44" y="56.446"/><use xlink:href="#45" y="58.617"/><use xlink:href="#46" y="60.788"/><use xlink:href="#47" y="62.959"/><use xlink:href="#48" y="65.13"/><use xlink:href="#49" y="67.301"/><use xlink:href="#50" y="69.472"/><use xlink:href="#51" y="71.643"/><use xlink:href="#52" y="73.814"/><use xlink:href="#53" y="75.985"/><use xlink:href="#54" y="78.156"/><text y="81.997" class="c">|</text><text x="2.004" y="81.997" class="c">gargoyle.pool.f863973.m0</text><text x="40.08" y="81.997" class="c">|</text><text x="42.084" y="81.997" class="c">277311.409132059037144613368982</text><text x="74.148" y="81.997" class="c">NEAR</text><text x="81.162" y="81.997" class="c">|</text><text x="85.17" y="81.997" class="c">0.00</text><text x="90.18" y="81.997" class="c">%</text><text x="92.184" y="81.997" class="c">|</text><text x="94.188" y="81.997" class="c">0</text><text x="110.22" y="81.997" class="c">|</text><text x="112.224" y="81.997" class="c">16</text><text x="128.256" y="81.997" class="c">|</text><text x="130.26" y="81.997" class="c">0</text><text x="146.292" y="81.997" class="c">|</text><text x="148.296" y="81.997" class="c">103</text></svg><svg x="10240"><use xlink:href="#a"/><use xlink:href="#b" x="136.996" y="91.157"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/><use xlink:href="#42" y="52.104"/><use xlink:href="#43" y="54.275"/><use xlink:href="#44" y="56.446"/><use xlink:href="#45" y="58.617"/><use xlink:href="#46" y="60.788"/><use xlink:href="#47" y="62.959"/><use xlink:href="#48" y="65.13"/><use xlink:href="#49" y="67.301"/><use xlink:href="#50" y="69.472"/><use xlink:href="#51" y="71.643"/><use xlink:href="#52" y="73.814"/><use xlink:href="#53" y="75.985"/><use xlink:href="#54" y="78.156"/><use xlink:href="#55" y="80.327"/><use xlink:href="#56" y="82.498"/><use xlink:href="#57" y="84.669"/><use xlink:href="#58" y="86.84"/><use xlink:href="#59" y="89.011"/><text y="92.852" class="c">|</text><text x="2.004" y="92.852" class="c">derori_validator_pool.pool.f863973.m0</text><text x="40.08" y="92.852" class="c">|</text><text x="42.084" y="92.852" class="c">93261.780424467596372900047123</text><text x="73.146" y="92.852" class="c">NEAR</text><text x="81.162" y="92.852" class="c">|</text><text x="83.166" y="92.852" class="c">100.00</text><text x="90.18" y="92.852" class="c">%</text><text x="92.184" y="92.852" class="c">|</text><text x="94.188" y="92.852" class="c">11</text><text x="110.22" y="92.852" class="c">|</text><text x="112.224" y="92.852" class="c">11</text><text x="128.256" y="92.852" class="c">|</text><text x="130.26" y="92.852" class="c">37</text></svg><svg x="10496"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="99.841"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#13" y="10.855"/><use xlink:href="#19" y="13.026"/><use xlink:href="#26" y="15.197"/><use xlink:href="#27" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#29" y="21.71"/><use xlink:href="#28" y="23.881"/><use xlink:href="#30" y="26.052"/><use xlink:href="#31" y="28.223"/><use xlink:href="#32" y="30.394"/><use xlink:href="#33" y="32.565"/><use xlink:href="#34" y="34.736"/><use xlink:href="#35" y="36.907"/><use xlink:href="#36" y="39.078"/><use xlink:href="#37" y="41.249"/><use xlink:href="#38" y="43.42"/><use xlink:href="#39" y="45.591"/><use xlink:href="#40" y="47.762"/><use xlink:href="#41" y="49.933"/><use xlink:href="#42" y="52.104"/><use xlink:href="#43" y="54.275"/><use xlink:href="#44" y="56.446"/><use xlink:href="#45" y="58.617"/><use xlink:href="#46" y="60.788"/><use xlink:href="#47" y="62.959"/><use xlink:href="#48" y="65.13"/><use xlink:href="#49" y="67.301"/><use xlink:href="#50" y="69.472"/><use xlink:href="#51" y="71.643"/><use xlink:href="#52" y="73.814"/><use xlink:href="#53" y="75.985"/><use xlink:href="#54" y="78.156"/><use xlink:href="#55" y="80.327"/><use xlink:href="#56" y="82.498"/><use xlink:href="#57" y="84.669"/><use xlink:href="#58" y="86.84"/><use xlink:href="#59" y="89.011"/><use xlink:href="#60" y="91.182"/><use xlink:href="#61" y="93.353"/><use xlink:href="#62" y="95.524"/><use xlink:href="#28" y="97.695"/></svg><svg x="10752"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="102.012"/><use xlink:href="#1"/><use xlink:href="#2" y="2.171"/><use xlink:href="#3" y="4.342"/><use xlink:href="#5" y="6.513"/><use xlink:href="#13" y="8.684"/><use xlink:href="#19" y="10.855"/><use xlink:href="#26" y="13.026"/><use xlink:href="#27" y="15.197"/><use xlink:href="#28" y="17.368"/><use xlink:href="#29" y="19.539"/><use xlink:href="#28" y="21.71"/><use xlink:href="#30" y="23.881"/><use xlink:href="#31" y="26.052"/><use xlink:href="#32" y="28.223"/><use xlink:href="#33" y="30.394"/><use xlink:href="#34" y="32.565"/><use xlink:href="#35" y="34.736"/><use xlink:href="#36" y="36.907"/><use xlink:href="#37" y="39.078"/><use xlink:href="#38" y="41.249"/><use xlink:href="#39" y="43.42"/><use xlink:href="#40" y="45.591"/><use xlink:href="#41" y="47.762"/><use xlink:href="#42" y="49.933"/><use xlink:href="#43" y="52.104"/><use xlink:href="#44" y="54.275"/><use xlink:href="#45" y="56.446"/><use xlink:href="#46" y="58.617"/><use xlink:href="#47" y="60.788"/><use xlink:href="#48" y="62.959"/><use xlink:href="#49" y="65.13"/><use xlink:href="#50" y="67.301"/><use xlink:href="#51" y="69.472"/><use xlink:href="#52" y="71.643"/><use xlink:href="#53" y="73.814"/><use xlink:href="#54" y="75.985"/><use xlink:href="#55" y="78.156"/><use xlink:href="#56" y="80.327"/><use xlink:href="#57" y="82.498"/><use xlink:href="#58" y="84.669"/><use xlink:href="#59" y="86.84"/><use xlink:href="#60" y="89.011"/><use xlink:href="#61" y="91.182"/><use xlink:href="#62" y="93.353"/><use xlink:href="#28" y="95.524"/><use xlink:href="#63" y="97.695"/><use xlink:href="#64" y="99.866"/></svg><svg x="11008"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="102.012"/><use xlink:href="#1"/><use xlink:href="#2" y="2.171"/><use xlink:href="#3" y="4.342"/><use xlink:href="#5" y="6.513"/><use xlink:href="#13" y="8.684"/><use xlink:href="#19" y="10.855"/><use xlink:href="#26" y="13.026"/><use xlink:href="#27" y="15.197"/><use xlink:href="#28" y="17.368"/><use xlink:href="#29" y="19.539"/><use xlink:href="#28" y="21.71"/><use xlink:href="#30" y="23.881"/><use xlink:href="#31" y="26.052"/><use xlink:href="#32" y="28.223"/><use xlink:href="#33" y="30.394"/><use xlink:href="#34" y="32.565"/><use xlink:href="#35" y="34.736"/><use xlink:href="#36" y="36.907"/><use xlink:href="#37" y="39.078"/><use xlink:href="#38" y="41.249"/><use xlink:href="#39" y="43.42"/><use xlink:href="#40" y="45.591"/><use xlink:href="#41" y="47.762"/><use xlink:href="#42" y="49.933"/><use xlink:href="#43" y="52.104"/><use xlink:href="#44" y="54.275"/><use xlink:href="#45" y="56.446"/><use xlink:href="#46" y="58.617"/><use xlink:href="#47" y="60.788"/><use xlink:href="#48" y="62.959"/><use xlink:href="#49" y="65.13"/><use xlink:href="#50" y="67.301"/><use xlink:href="#51" y="69.472"/><use xlink:href="#52" y="71.643"/><use xlink:href="#53" y="73.814"/><use xlink:href="#54" y="75.985"/><use xlink:href="#55" y="78.156"/><use xlink:href="#56" y="80.327"/><use xlink:href="#57" y="82.498"/><use xlink:href="#58" y="84.669"/><use xlink:href="#59" y="86.84"/><use xlink:href="#60" y="89.011"/><use xlink:href="#61" y="91.182"/><use xlink:href="#62" y="93.353"/><use xlink:href="#28" y="95.524"/><use xlink:href="#63" y="97.695"/><use xlink:href="#64" y="99.866"/><use xlink:href="#4" y="102.037"/></svg><svg x="11264"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="102.012"/><use xlink:href="#2"/><use xlink:href="#3" y="2.171"/><use xlink:href="#5" y="4.342"/><use xlink:href="#13" y="6.513"/><use xlink:href="#19" y="8.684"/><use xlink:href="#26" y="10.855"/><use xlink:href="#27" y="13.026"/><use xlink:href="#28" y="15.197"/><use xlink:href="#29" y="17.368"/><use xlink:href="#28" y="19.539"/><use xlink:href="#30" y="21.71"/><use xlink:href="#31" y="23.881"/><use xlink:href="#32" y="26.052"/><use xlink:href="#33" y="28.223"/><use xlink:href="#34" y="30.394"/><use xlink:href="#35" y="32.565"/><use xlink:href="#36" y="34.736"/><use xlink:href="#37" y="36.907"/><use xlink:href="#38" y="39.078"/><use xlink:href="#39" y="41.249"/><use xlink:href="#40" y="43.42"/><use xlink:href="#41" y="45.591"/><use xlink:href="#42" y="47.762"/><use xlink:href="#43" y="49.933"/><use xlink:href="#44" y="52.104"/><use xlink:href="#45" y="54.275"/><use xlink:href="#46" y="56.446"/><use xlink:href="#47" y="58.617"/><use xlink:href="#48" y="60.788"/><use xlink:href="#49" y="62.959"/><use xlink:href="#50" y="65.13"/><use xlink:href="#51" y="67.301"/><use xlink:href="#52" y="69.472"/><use xlink:href="#53" y="71.643"/><use xlink:href="#54" y="73.814"/><use xlink:href="#55" y="75.985"/><use xlink:href="#56" y="78.156"/><use xlink:href="#57" y="80.327"/><use xlink:href="#58" y="82.498"/><use xlink:href="#59" y="84.669"/><use xlink:href="#60" y="86.84"/><use xlink:href="#61" y="89.011"/><use xlink:href="#62" y="91.182"/><use xlink:href="#28" y="93.353"/><use xlink:href="#63" y="95.524"/><use xlink:href="#64" y="97.695"/><text y="101.536" class="c">bash-3.2$</text><text x="10.02" y="101.536" class="c">exit</text></svg></svg></g></g></svg></svg>
'''
'''--- release-plz.toml ---
[workspace]
git_release_enable = false

'''
'''--- src/common.rs ---
use color_eyre::eyre::{Context, ContextCompat};
use near_cli_rs::types::near_token::NearToken;
use num_rational::Rational32;

/// This implementation is ported from near-api-js:
/// https://github.com/near/near-api-js/blob/bdbf839f54fbc399d7299da8cf9966bbdc426238/packages/utils/src/validators.ts#L12-L22
pub fn find_seat_price(
    stakes: Vec<u128>,
    max_number_of_seats: u64,
    minimum_stake_ratio: Rational32,
    protocol_version: near_primitives::types::ProtocolVersion,
) -> color_eyre::eyre::Result<NearToken> {
    if protocol_version < 49 {
        return find_seat_price_for_protocol_before_49(stakes, max_number_of_seats);
    }
    find_seat_price_for_protocol_after_49(stakes, max_number_of_seats, minimum_stake_ratio)
}

/// This implementation is ported from near-api-js:
/// https://github.com/near/near-api-js/blob/bdbf839f54fbc399d7299da8cf9966bbdc426238/packages/utils/src/validators.ts#L24-L50
fn find_seat_price_for_protocol_before_49(
    stakes: Vec<u128>,
    num_seats: u64,
) -> color_eyre::eyre::Result<NearToken> {
    let stakes_sum: u128 = stakes.iter().sum();
    if stakes_sum < num_seats.into() {
        return Err(color_eyre::eyre::Report::msg("Stakes are below seats"));
    }
    let mut left: u128 = 1;
    let mut right: u128 = stakes_sum + 1;
    while left != (right - 1) {
        let mid = left.saturating_add(right) / 2;
        let mut found = false;
        let mut current_sum: u128 = 0;
        for stake in &stakes {
            current_sum = current_sum.saturating_add(stake.saturating_div(mid));
            if current_sum >= num_seats.into() {
                left = mid;
                found = true;
                break;
            }
        }
        if !found {
            right = mid;
        }
    }
    Ok(NearToken::from_yoctonear(left))
}

/// This implementation is ported from near-api-js:
/// https://github.com/near/near-api-js/blob/bdbf839f54fbc399d7299da8cf9966bbdc426238/packages/utils/src/validators.ts#L52-L64
fn find_seat_price_for_protocol_after_49(
    mut stakes: Vec<u128>,
    max_number_of_seats: u64,
    minimum_stake_ratio: Rational32,
) -> color_eyre::eyre::Result<NearToken> {
    let stakes_sum: u128 = stakes.iter().sum();
    if u64::try_from(stakes.len()).wrap_err("stakes.len() must fit in u64.")? < max_number_of_seats
    {
        return Ok(NearToken::from_yoctonear(
            stakes_sum
                .checked_mul(
                    (*minimum_stake_ratio.numer())
                        .try_into()
                        .wrap_err("minimum_stake_ratio.numer must be positive.")?,
                )
                .wrap_err("Can't multiply these numbers")?
                .checked_div(
                    (*minimum_stake_ratio.denom())
                        .try_into()
                        .wrap_err("minimum_stake_ratio.denom must be positive.")?,
                )
                .wrap_err("Can't divide these numbers")?,
        ));
    };
    stakes.sort();

    Ok(NearToken::from_yoctonear(stakes[0] + 1))
}

'''
'''--- src/main.rs ---
#![allow(clippy::large_enum_variant)]
use interactive_clap::ToCliArgs;
pub use near_cli_rs::CliResult;
use strum::{EnumDiscriminants, EnumIter, EnumMessage};

mod common;
mod proposals;
mod staking;
mod validators;

/// near-cli is a toolbox for interacting with NEAR protocol

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = near_cli_rs::GlobalContext)]
struct Cmd {
    #[interactive_clap(subcommand)]
    command: self::Command,
}

#[derive(Debug, EnumDiscriminants, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = near_cli_rs::GlobalContext)]
#[strum_discriminants(derive(EnumMessage, EnumIter))]
#[interactive_clap(disable_back)]
/// What are you up to? (select one of the options with the up-down arrows on your keyboard and press Enter)
pub enum Command {
    #[strum_discriminants(strum(message = "validators   -   Lookup validators for given epoch"))]
    /// Lookup validators for given epoch
    Validators(self::validators::Validators),
    #[strum_discriminants(strum(
        message = "proposals    -   Show both new proposals in the current epoch as well as current validators who are implicitly proposing"
    ))]
    /// Show both new proposals in the current epoch as well as current validators who are implicitly proposing
    Proposals(self::proposals::Proposals),
    #[strum_discriminants(strum(
        message = "staking      -   For validators, there is an option to staking without deploying a staking pool smart contract (stake, unstake, view stake)"
    ))]
    /// For validators, there is an option to staking without deploying a staking pool smart contract (stake, unstake, view stake)
    Staking(self::staking::Staking),
}

fn main() -> CliResult {
    let config = near_cli_rs::common::get_config_toml()?;

    color_eyre::install()?;

    let cli = match Cmd::try_parse() {
        Ok(cli) => cli,
        Err(error) => error.exit(),
    };

    let global_context = near_cli_rs::GlobalContext {
        config,
        offline: false,
    };

    loop {
        match <Cmd as interactive_clap::FromCli>::from_cli(
            Some(cli.clone()),
            global_context.clone(),
        ) {
            interactive_clap::ResultFromCli::Ok(cli_cmd)
            | interactive_clap::ResultFromCli::Cancel(Some(cli_cmd)) => {
                eprintln!(
                    "Your console command:\n{} {}",
                    std::env::args().next().as_deref().unwrap_or("./validator"),
                    shell_words::join(cli_cmd.to_cli_args())
                );
                return Ok(());
            }
            interactive_clap::ResultFromCli::Cancel(None) => {
                eprintln!("Goodbye!");
                return Ok(());
            }
            interactive_clap::ResultFromCli::Back => {}
            interactive_clap::ResultFromCli::Err(optional_cli_cmd, err) => {
                if let Some(cli_cmd) = optional_cli_cmd {
                    eprintln!(
                        "Your console command:\n{} {}",
                        std::env::args().next().as_deref().unwrap_or("./validator"),
                        shell_words::join(cli_cmd.to_cli_args())
                    );
                }
                return Err(err);
            }
        }
    }
}

'''
'''--- src/proposals/mod.rs ---
use color_eyre::eyre::Context;
use prettytable::Table;

use near_jsonrpc_client::methods::{
    validators::RpcValidatorRequest, EXPERIMENTAL_genesis_config::RpcGenesisConfigRequest,
    EXPERIMENTAL_protocol_config::RpcProtocolConfigRequest,
};
use near_primitives::types::{BlockReference, EpochReference, Finality};

use near_cli_rs::common::JsonRpcClientExt;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = near_cli_rs::GlobalContext)]
#[interactive_clap(output_context = ProposalsContext)]
pub struct Proposals {
    #[interactive_clap(named_arg)]
    /// Select network
    network_config: near_cli_rs::network::Network,
}

#[derive(Clone)]
pub struct ProposalsContext(near_cli_rs::network::NetworkContext);

impl ProposalsContext {
    pub fn from_previous_context(
        previous_context: near_cli_rs::GlobalContext,
        _scope: &<Proposals as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        let on_after_getting_network_callback: near_cli_rs::network::OnAfterGettingNetworkCallback =
            std::sync::Arc::new(display_proposals_info);
        Ok(Self(near_cli_rs::network::NetworkContext {
            config: previous_context.config,
            interacting_with_account_ids: vec![],
            on_after_getting_network_callback,
        }))
    }
}

impl From<ProposalsContext> for near_cli_rs::network::NetworkContext {
    fn from(item: ProposalsContext) -> Self {
        item.0
    }
}

pub fn display_proposals_info(
    network_config: &near_cli_rs::config::NetworkConfig,
) -> crate::CliResult {
    let json_rpc_client = network_config.json_rpc_client();

    let epoch_validator_info = json_rpc_client
        .blocking_call(&RpcValidatorRequest {
            epoch_reference: EpochReference::Latest,
        })
        .wrap_err("Failed to get epoch validators information request.")?;

    let current_proposals = epoch_validator_info.current_proposals;
    let current_proposals_stake: std::collections::HashMap<
        near_primitives::types::AccountId,
        near_primitives::types::Balance,
    > = current_proposals
        .clone()
        .into_iter()
        .map(|validator_stake_view| {
            let validator_stake = validator_stake_view.into_validator_stake();
            validator_stake.account_and_stake()
        })
        .collect();

    let current_validators = epoch_validator_info.current_validators;
    let current_validators_stake: std::collections::HashMap<
        near_primitives::types::AccountId,
        near_primitives::types::Balance,
    > = current_validators
        .into_iter()
        .map(|current_epoch_validator_info| {
            (
                current_epoch_validator_info.account_id,
                current_epoch_validator_info.stake,
            )
        })
        .collect();

    let next_validators = epoch_validator_info.next_validators;
    let mut next_validators_stake: std::collections::HashMap<
        near_primitives::types::AccountId,
        near_primitives::types::Balance,
    > = next_validators
        .into_iter()
        .map(|next_epoch_validator_info| {
            (
                next_epoch_validator_info.account_id,
                next_epoch_validator_info.stake,
            )
        })
        .collect();

    next_validators_stake.extend(current_proposals_stake.clone());

    let mut combine_validators_and_proposals: std::collections::HashMap<
        near_primitives::types::AccountId,
        ProposalsTable,
    > = std::collections::HashMap::new();
    for (account_id, stake) in next_validators_stake {
        if let Some(new_stake) = current_proposals_stake.get(&account_id) {
            let proposals_table = ProposalsTable {
                account_id: account_id.clone(),
                status: "Proposal(Accepted)".to_string(),
                stake,
                new_stake: Some(*new_stake),
            };
            combine_validators_and_proposals.insert(account_id, proposals_table)
        } else {
            let proposals_table = ProposalsTable {
                account_id: account_id.clone(),
                status: "Rollover".to_string(),
                stake,
                new_stake: None,
            };
            combine_validators_and_proposals.insert(account_id, proposals_table)
        };
    }
    let mut combine_validators_and_proposals_table: Vec<ProposalsTable> =
        combine_validators_and_proposals.into_values().collect();
    combine_validators_and_proposals_table.sort_by(|a, b| b.stake.cmp(&a.stake));

    let genesis_config = json_rpc_client
        .blocking_call(&RpcGenesisConfigRequest)
        .wrap_err("Failed to get genesis config.")?;

    let protocol_config = json_rpc_client
        .blocking_call(&RpcProtocolConfigRequest {
            block_reference: BlockReference::Finality(Finality::Final),
        })
        .wrap_err("Failed to get protocol config.")?;

    let max_number_of_seats = protocol_config.num_block_producer_seats
        + protocol_config
            .avg_hidden_validator_seats_per_shard
            .iter()
            .sum::<u64>();

    let expected_seat_price = crate::common::find_seat_price(
        combine_validators_and_proposals_table
            .iter()
            .map(|proposal| proposal.stake)
            .collect(),
        max_number_of_seats,
        genesis_config.minimum_stake_ratio,
        protocol_config.protocol_version,
    )?;

    let passing_proposals = combine_validators_and_proposals_table
        .iter()
        .map(|proposals| match proposals.new_stake {
            Some(new_stake) => new_stake,
            None => proposals.stake,
        })
        .filter(|stake| stake >= &expected_seat_price.as_yoctonear())
        .count();

    eprintln!(
        "Proposals for the epoch after next (new: {}, passing: {}, expected seat price = {})",
        current_proposals.len(),
        passing_proposals,
        expected_seat_price
    );

    let mut table = Table::new();
    table.set_titles(prettytable::row![Fg=>"#", "Status", "Validator Id", "Stake", "New Stake"]);

    for (index, proposals) in combine_validators_and_proposals_table
        .into_iter()
        .enumerate()
    {
        let (new_stake, status) = match proposals.new_stake {
            Some(new_stake) => {
                let status = if new_stake <= expected_seat_price.as_yoctonear() {
                    "Proposal(Declined)".to_string()
                } else {
                    proposals.status
                };
                (
                    near_cli_rs::types::near_token::NearToken::from_yoctonear(new_stake)
                        .to_string(),
                    status,
                )
            }
            None => {
                let status = if proposals.stake <= expected_seat_price.as_yoctonear() {
                    "Kicked out".to_string()
                } else {
                    proposals.status
                };

                ("".to_string(), status)
            }
        };
        let stake = match current_validators_stake.get(&proposals.account_id) {
            Some(stake) => {
                near_cli_rs::types::near_token::NearToken::from_yoctonear(*stake).to_string()
            }
            None => "".to_string(),
        };

        table.add_row(prettytable::row![
            Fg->index + 1,
            status,
            proposals.account_id,
            stake,
            new_stake
        ]);
    }
    table.set_format(*prettytable::format::consts::FORMAT_NO_LINESEP_WITH_TITLE);
    table.printstd();
    Ok(())
}

#[derive(serde::Serialize, serde::Deserialize, Debug, PartialEq, Eq, Clone)]
pub struct ProposalsTable {
    pub account_id: near_primitives::types::AccountId,
    pub status: String,
    pub stake: near_primitives::types::Balance,
    pub new_stake: Option<near_primitives::types::Balance>,
}

'''
'''--- src/staking/mod.rs ---
use strum::{EnumDiscriminants, EnumIter, EnumMessage};

mod stake_proposal;
mod unstake_proposal;
mod view_stake;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = near_cli_rs::GlobalContext)]
pub struct Staking {
    #[interactive_clap(subcommand)]
    staking_command: StakingCommand,
}

#[derive(Debug, EnumDiscriminants, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = near_cli_rs::GlobalContext)]
#[strum_discriminants(derive(EnumMessage, EnumIter))]
/// What are you up to? (select one of the options with the up-down arrows on your keyboard and press Enter)
pub enum StakingCommand {
    #[strum_discriminants(strum(message = "view-stake          -   View validator stake"))]
    /// View validator stake
    ViewStake(self::view_stake::ViewStake),
    #[strum_discriminants(strum(
        message = "stake-proposal      -   To stake NEAR directly without a staking pool"
    ))]
    /// To stake NEAR directly without a staking pool
    StakeProposal(self::stake_proposal::StakeProposal),
    #[strum_discriminants(strum(
        message = "unstake-proposal    -   To unstake NEAR directly without a staking pool"
    ))]
    /// To unstake NEAR directly without a staking pool
    UnstakeProposal(self::unstake_proposal::UnstakeProposal),
}

'''
'''--- src/staking/stake_proposal.rs ---
use inquire::CustomType;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = near_cli_rs::GlobalContext)]
#[interactive_clap(output_context = StakeProposalContext)]
pub struct StakeProposal {
    #[interactive_clap(skip_default_input_arg)]
    /// What is the validator account ID?
    validator: near_cli_rs::types::account_id::AccountId,
    /// Validator key which will be used to sign transactions on behalf of signer_id:
    public_key: near_cli_rs::types::public_key::PublicKey,
    #[interactive_clap(skip_default_input_arg)]
    /// Enter the amount to stake:
    stake: near_cli_rs::types::near_token::NearToken,
    #[interactive_clap(named_arg)]
    /// Select network
    network_config: near_cli_rs::network_for_transaction::NetworkForTransactionArgs,
}

#[derive(Debug, Clone)]
pub struct StakeProposalContext {
    global_context: near_cli_rs::GlobalContext,
    validator: near_primitives::types::AccountId,
    public_key: near_crypto::PublicKey,
    stake: near_cli_rs::types::near_token::NearToken,
}

impl StakeProposalContext {
    pub fn from_previous_context(
        previous_context: near_cli_rs::GlobalContext,
        scope: &<StakeProposal as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        Ok(Self {
            global_context: previous_context,
            validator: scope.validator.clone().into(),
            public_key: scope.public_key.clone().into(),
            stake: scope.stake,
        })
    }
}

impl From<StakeProposalContext> for near_cli_rs::commands::ActionContext {
    fn from(item: StakeProposalContext) -> Self {
        let on_after_getting_network_callback: near_cli_rs::commands::OnAfterGettingNetworkCallback =
            {
                let validator = item.validator.clone();
                std::sync::Arc::new(move |_network_config| {
                Ok(near_cli_rs::commands::PrepopulatedTransaction {
                    signer_id: validator.clone(),
                    receiver_id: validator.clone(),
                    actions: vec![near_primitives::transaction::Action::Stake(
                        Box::new(near_primitives::transaction::StakeAction {
                            stake: item.stake.as_yoctonear(),
                            public_key: item.public_key.clone(),
                        }),
                    )],
                })
            })};
        Self {
            global_context: item.global_context,
            interacting_with_account_ids: vec![item.validator],
            on_after_getting_network_callback,
            on_before_signing_callback: std::sync::Arc::new(
                |_prepolulated_unsinged_transaction, _network_config| Ok(()),
            ),
            on_before_sending_transaction_callback: std::sync::Arc::new(
                |_signed_transaction, _network_config, _message| Ok(()),
            ),
            on_after_sending_transaction_callback: std::sync::Arc::new(
                |_outcome_view, _network_config| Ok(()),
            ),
        }
    }
}

impl StakeProposal {
    pub fn input_validator(
        context: &near_cli_rs::GlobalContext,
    ) -> color_eyre::eyre::Result<Option<near_cli_rs::types::account_id::AccountId>> {
        near_cli_rs::common::input_signer_account_id_from_used_account_list(
            &context.config.credentials_home_dir,
            "What is the validator account ID?",
        )
    }

    fn input_stake(
        _context: &near_cli_rs::GlobalContext,
    ) -> color_eyre::eyre::Result<Option<near_cli_rs::types::near_token::NearToken>> {
        let input_amount =
            CustomType::new("Enter the amount to stake: (example: 10000NEAR)").prompt()?;
        Ok(Some(input_amount))
    }
}

'''
'''--- src/staking/unstake_proposal.rs ---
#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = near_cli_rs::GlobalContext)]
#[interactive_clap(output_context = UnstakeProposalContext)]
pub struct UnstakeProposal {
    #[interactive_clap(skip_default_input_arg)]
    /// What is the validator account ID?
    validator: near_cli_rs::types::account_id::AccountId,
    /// Validator key which will be used to sign transactions on behalf of signer_id:
    public_key: near_cli_rs::types::public_key::PublicKey,
    #[interactive_clap(named_arg)]
    /// Select network
    network_config: near_cli_rs::network_for_transaction::NetworkForTransactionArgs,
}

#[derive(Debug, Clone)]
pub struct UnstakeProposalContext {
    global_context: near_cli_rs::GlobalContext,
    validator: near_primitives::types::AccountId,
    public_key: near_crypto::PublicKey,
}

impl UnstakeProposalContext {
    pub fn from_previous_context(
        previous_context: near_cli_rs::GlobalContext,
        scope: &<UnstakeProposal as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        Ok(Self {
            global_context: previous_context,
            validator: scope.validator.clone().into(),
            public_key: scope.public_key.clone().into(),
        })
    }
}

impl From<UnstakeProposalContext> for near_cli_rs::commands::ActionContext {
    fn from(item: UnstakeProposalContext) -> Self {
        let on_after_getting_network_callback: near_cli_rs::commands::OnAfterGettingNetworkCallback =
            {
                let validator = item.validator.clone();
                std::sync::Arc::new(move |_network_config| {
                Ok(near_cli_rs::commands::PrepopulatedTransaction {
                    signer_id: validator.clone(),
                    receiver_id: validator.clone(),
                    actions: vec![near_primitives::transaction::Action::Stake(
                        Box::new(near_primitives::transaction::StakeAction {
                            stake: 0,
                            public_key: item.public_key.clone(),
                        }),
                    )],
                })
            })};
        Self {
            global_context: item.global_context,
            interacting_with_account_ids: vec![item.validator],
            on_after_getting_network_callback,
            on_before_signing_callback: std::sync::Arc::new(
                |_prepolulated_unsinged_transaction, _network_config| Ok(()),
            ),
            on_before_sending_transaction_callback: std::sync::Arc::new(
                |_signed_transaction, _network_config, _message| Ok(()),
            ),
            on_after_sending_transaction_callback: std::sync::Arc::new(
                |_outcome_view, _network_config| Ok(()),
            ),
        }
    }
}

impl UnstakeProposal {
    pub fn input_validator(
        context: &near_cli_rs::GlobalContext,
    ) -> color_eyre::eyre::Result<Option<near_cli_rs::types::account_id::AccountId>> {
        near_cli_rs::common::input_signer_account_id_from_used_account_list(
            &context.config.credentials_home_dir,
            "What is the validator account ID?",
        )
    }
}

'''
'''--- src/staking/view_stake.rs ---
use color_eyre::eyre::Context;

use near_cli_rs::common::{JsonRpcClientExt, RpcQueryResponseExt};

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = near_cli_rs::GlobalContext)]
#[interactive_clap(output_context = ViewStakeContext)]
pub struct ViewStake {
    #[interactive_clap(skip_default_input_arg)]
    /// Enter validator account ID to view stake:
    validator_account_id: near_cli_rs::types::account_id::AccountId,
    #[interactive_clap(named_arg)]
    /// Select network
    network_config: near_cli_rs::network_view_at_block::NetworkViewAtBlockArgs,
}

#[derive(Clone)]
pub struct ViewStakeContext(near_cli_rs::network_view_at_block::ArgsForViewContext);

impl ViewStakeContext {
    pub fn from_previous_context(
        previous_context: near_cli_rs::GlobalContext,
        scope: &<ViewStake as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        let on_after_getting_block_reference_callback: near_cli_rs::network_view_at_block::OnAfterGettingBlockReferenceCallback = std::sync::Arc::new({
            let validator_account_id: near_primitives::types::AccountId = scope.validator_account_id.clone().into();

            move |network_config, block_reference| {
                let json_rpc_client = network_config.json_rpc_client();

                let rpc_query_response = json_rpc_client
                    .blocking_call_view_account(&validator_account_id.clone(), block_reference.clone())
                    .wrap_err_with(|| {
                        format!(
                            "Failed to fetch query ViewAccount for <{}>",
                            &validator_account_id
                        )
                    })?;
                let account_view = rpc_query_response.account_view()?;
                eprintln!("Validator {validator_account_id} staked amount {}",
                    near_cli_rs::types::near_token::NearToken::from_yoctonear(account_view.locked)
                );

                Ok(())
            }
        });
        Ok(Self(
            near_cli_rs::network_view_at_block::ArgsForViewContext {
                config: previous_context.config,
                interacting_with_account_ids: vec![scope.validator_account_id.clone().into()],
                on_after_getting_block_reference_callback,
            },
        ))
    }
}

impl From<ViewStakeContext> for near_cli_rs::network_view_at_block::ArgsForViewContext {
    fn from(item: ViewStakeContext) -> Self {
        item.0
    }
}

impl ViewStake {
    pub fn input_validator_account_id(
        context: &near_cli_rs::GlobalContext,
    ) -> color_eyre::eyre::Result<Option<near_cli_rs::types::account_id::AccountId>> {
        near_cli_rs::common::input_non_signer_account_id_from_used_account_list(
            &context.config.credentials_home_dir,
            "What Account ID do you need to view?",
        )
    }
}

'''
'''--- src/validators/block_id/mod.rs ---
use color_eyre::eyre::Context;
use prettytable::Table;

use near_jsonrpc_client::methods::{
    validators::RpcValidatorRequest, EXPERIMENTAL_genesis_config::RpcGenesisConfigRequest,
    EXPERIMENTAL_protocol_config::RpcProtocolConfigRequest,
};
use near_primitives::types::{BlockId, BlockReference, EpochReference, Finality};

use near_cli_rs::common::JsonRpcClientExt;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = super::network_view_at_block::NetworkViewAtBlockArgsContext)]
#[interactive_clap(output_context = AtBlockHeightContext)]
pub struct AtBlockHeight {
    /// Type the block height:
    block_height: near_primitives::types::BlockHeight,
}

#[derive(Debug, Clone)]
pub struct AtBlockHeightContext;

impl AtBlockHeightContext {
    pub fn from_previous_context(
        previous_context: super::network_view_at_block::NetworkViewAtBlockArgsContext,
        scope: &<AtBlockHeight as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        let epoch_reference = EpochReference::BlockId(BlockId::Height(scope.block_height));
        display_current_validators_info(epoch_reference, &previous_context.network_config)?;
        Ok(Self)
    }
}

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = super::network_view_at_block::NetworkViewAtBlockArgsContext)]
#[interactive_clap(output_context = AtBlockHashContext)]
pub struct AtBlockHash {
    /// Type the block hash:
    block_hash: near_cli_rs::types::crypto_hash::CryptoHash,
}

#[derive(Debug, Clone)]
pub struct AtBlockHashContext;

impl AtBlockHashContext {
    pub fn from_previous_context(
        previous_context: super::network_view_at_block::NetworkViewAtBlockArgsContext,
        scope: &<AtBlockHash as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        let epoch_reference = EpochReference::BlockId(BlockId::Hash(scope.block_hash.into()));
        display_current_validators_info(epoch_reference, &previous_context.network_config)?;
        Ok(Self)
    }
}

pub fn display_current_validators_info(
    epoch_reference: near_primitives::types::EpochReference,
    network_config: &near_cli_rs::config::NetworkConfig,
) -> crate::CliResult {
    let block_reference = match &epoch_reference {
        EpochReference::Latest => BlockReference::Finality(Finality::Final),
        EpochReference::BlockId(block_id) => BlockReference::BlockId(block_id.clone()),
        _ => {
            return Err(color_eyre::eyre::ErrReport::msg(
                "BlockReference: incorrect value entered",
            ))
        }
    };

    let json_rpc_client = network_config.json_rpc_client();

    let mut current_validators = json_rpc_client
        .blocking_call(&RpcValidatorRequest { epoch_reference })
        .wrap_err("Failed to get epoch validators information request.")?
        .current_validators;
    current_validators.sort_by(|a, b| b.stake.cmp(&a.stake));

    let genesis_config = json_rpc_client
        .blocking_call(&RpcGenesisConfigRequest)
        .wrap_err("Failed to get genesis config.")?;

    let protocol_config = json_rpc_client
        .blocking_call(&RpcProtocolConfigRequest { block_reference })
        .wrap_err("Failed to get protocol config.")?;

    let max_number_of_seats = protocol_config.num_block_producer_seats
        + protocol_config
            .avg_hidden_validator_seats_per_shard
            .iter()
            .sum::<u64>();
    eprintln!(
        "Validators (total: {}, seat price: {})",
        current_validators.len(),
        crate::common::find_seat_price(
            current_validators
                .iter()
                .map(|current_validator| current_validator.stake)
                .collect(),
            max_number_of_seats,
            genesis_config.minimum_stake_ratio,
            protocol_config.protocol_version
        )?
    );

    let mut table = Table::new();
    table.set_titles(prettytable::row![Fg=>"Validator Id", "Stake", "Online", "Blocks produced", "Blocks expected", "Chunks produced", "Chunks expected"]);

    for validator in &current_validators {
        let online = if validator.num_expected_blocks + validator.num_expected_chunks == 0 {
            "NaN".to_string()
        } else {
            format!(
                "{:>6.2} %",
                ((validator.num_produced_blocks + validator.num_produced_chunks) * 100) as f64
                    / (validator.num_expected_blocks + validator.num_expected_chunks) as f64
            )
        };
        table.add_row(prettytable::row![
            validator.account_id,
            near_cli_rs::types::near_token::NearToken::from_yoctonear(validator.stake),
            online,
            validator.num_produced_blocks,
            validator.num_expected_blocks,
            validator.num_produced_chunks,
            validator.num_expected_chunks
        ]);
    }
    table.set_format(*prettytable::format::consts::FORMAT_NO_LINESEP_WITH_TITLE);
    table.printstd();
    Ok(())
}

'''
'''--- src/validators/epoch_id/latest.rs ---
#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = crate::validators::network_view_at_block::NetworkViewAtBlockArgsContext)]
#[interactive_clap(output_context = LatestContext)]
pub struct Latest {}

#[derive(Debug, Clone)]
pub struct LatestContext;

impl LatestContext {
    pub fn from_previous_context(
        previous_context: crate::validators::network_view_at_block::NetworkViewAtBlockArgsContext,
        _scope: &<Latest as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        crate::validators::block_id::display_current_validators_info(
            near_primitives::types::EpochReference::Latest,
            &previous_context.network_config,
        )?;
        Ok(Self)
    }
}

'''
'''--- src/validators/epoch_id/mod.rs ---
pub mod latest;
pub mod next;

'''
'''--- src/validators/epoch_id/next.rs ---
use color_eyre::eyre::Context;
use prettytable::Table;

use near_jsonrpc_client::methods::{
    validators::RpcValidatorRequest, EXPERIMENTAL_genesis_config::RpcGenesisConfigRequest,
    EXPERIMENTAL_protocol_config::RpcProtocolConfigRequest,
};
use near_primitives::types::{BlockReference, EpochReference, Finality};

use near_cli_rs::common::JsonRpcClientExt;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = crate::validators::network_view_at_block::NetworkViewAtBlockArgsContext)]
#[interactive_clap(output_context = NextContext)]
pub struct Next {}

#[derive(Debug, Clone)]
pub struct NextContext;

impl NextContext {
    pub fn from_previous_context(
        previous_context: crate::validators::network_view_at_block::NetworkViewAtBlockArgsContext,
        _scope: &<Next as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        display_next_validators_info(&previous_context.network_config)?;
        Ok(Self)
    }
}

fn display_next_validators_info(
    network_config: &near_cli_rs::config::NetworkConfig,
) -> crate::CliResult {
    let json_rpc_client = network_config.json_rpc_client();

    let epoch_validator_info = json_rpc_client
        .blocking_call(&RpcValidatorRequest {
            epoch_reference: EpochReference::Latest,
        })
        .wrap_err("Failed to get epoch validators information request.")?;

    let current_validators = epoch_validator_info.current_validators;
    let mut current_validators_stake: std::collections::HashMap<
        near_primitives::types::AccountId,
        near_primitives::types::Balance,
    > = current_validators
        .into_iter()
        .map(|current_epoch_validator_info| {
            (
                current_epoch_validator_info.account_id,
                current_epoch_validator_info.stake,
            )
        })
        .collect();

    let mut next_validators = epoch_validator_info.next_validators;
    next_validators.sort_by(|a, b| b.stake.cmp(&a.stake));

    let genesis_config = json_rpc_client
        .blocking_call(&RpcGenesisConfigRequest)
        .wrap_err("Failed to get genesis config.")?;

    let protocol_config = json_rpc_client
        .blocking_call(&RpcProtocolConfigRequest {
            block_reference: BlockReference::Finality(Finality::Final),
        })
        .wrap_err("Failed to get protocol config.")?;

    let max_number_of_seats = protocol_config.num_block_producer_seats
        + protocol_config
            .avg_hidden_validator_seats_per_shard
            .iter()
            .sum::<u64>();
    let seat_price = crate::common::find_seat_price(
        next_validators
            .iter()
            .map(|next_validator| next_validator.stake)
            .collect(),
        max_number_of_seats,
        genesis_config.minimum_stake_ratio,
        protocol_config.protocol_version,
    )?;
    eprintln!(
        "Next validators (total: {}, seat price: {}):",
        next_validators.len(),
        seat_price
    );

    let mut table = Table::new();
    table.set_titles(
        prettytable::row![Fg=>"#", "Status", "Validator Id", "Previous Stake", "Stake"],
    );

    for (index, validator) in next_validators.into_iter().enumerate() {
        let mut previous_stake = "".to_string();
        let mut status = "New".to_string();
        if let Some(stake) = current_validators_stake.remove(&validator.account_id) {
            previous_stake =
                near_cli_rs::types::near_token::NearToken::from_yoctonear(stake).to_string();
            status = "Rewarded".to_string();
        };
        table.add_row(prettytable::row![
            Fg->index + 1,
            status,
            validator.account_id,
            previous_stake,
            near_cli_rs::types::near_token::NearToken::from_yoctonear(validator.stake),
        ]);
    }
    for (account_id, previous_stake) in current_validators_stake {
        table.add_row(prettytable::row![
            "",
            "Kicked out",
            account_id,
            near_cli_rs::types::near_token::NearToken::from_yoctonear(previous_stake),
            ""
        ]);
    }

    table.set_format(*prettytable::format::consts::FORMAT_NO_LINESEP_WITH_TITLE);
    table.printstd();
    Ok(())
}

'''
'''--- src/validators/mod.rs ---
mod block_id;
mod epoch_id;
mod network_view_at_block;

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = near_cli_rs::GlobalContext)]
pub struct Validators {
    #[interactive_clap(named_arg)]
    /// Select network
    network_config: self::network_view_at_block::NetworkViewAtBlockArgs,
}

'''
'''--- src/validators/network_view_at_block/mod.rs ---
use strum::{EnumDiscriminants, EnumIter, EnumMessage};

#[derive(Debug, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(input_context = near_cli_rs::GlobalContext)]
#[interactive_clap(output_context = NetworkViewAtBlockArgsContext)]
pub struct NetworkViewAtBlockArgs {
    /// What is the name of the network?
    #[interactive_clap(skip_default_input_arg)]
    network_name: String,
    #[interactive_clap(subcommand)]
    next: ViewAtBlock,
}

#[derive(Clone)]
pub struct NetworkViewAtBlockArgsContext {
    pub network_config: near_cli_rs::config::NetworkConfig,
}

impl NetworkViewAtBlockArgsContext {
    pub fn from_previous_context(
        previous_context: near_cli_rs::GlobalContext,
        scope: &<NetworkViewAtBlockArgs as interactive_clap::ToInteractiveClapContextScope>::InteractiveClapContextScope,
    ) -> color_eyre::eyre::Result<Self> {
        let network_connection = previous_context.config.network_connection;
        let network_config = network_connection
            .get(&scope.network_name)
            .expect("Failed to get network config!")
            .clone();
        Ok(Self { network_config })
    }
}

impl NetworkViewAtBlockArgs {
    fn input_network_name(
        context: &near_cli_rs::GlobalContext,
    ) -> color_eyre::eyre::Result<Option<String>> {
        near_cli_rs::common::input_network_name(&context.config, &[])
    }
}

#[derive(Debug, EnumDiscriminants, Clone, interactive_clap::InteractiveClap)]
#[interactive_clap(context = NetworkViewAtBlockArgsContext)]
#[strum_discriminants(derive(EnumMessage, EnumIter))]
/// Choose block for view:
pub enum ViewAtBlock {
    #[strum_discriminants(strum(message = "latest            -   View latest validators"))]
    /// View latest validators
    Now(super::epoch_id::latest::Latest),
    #[strum_discriminants(strum(message = "next              -   View next validators"))]
    /// View next validators
    Next(super::epoch_id::next::Next),
    #[strum_discriminants(strum(
        message = "at-block-height   - View validators in a height-selected block"
    ))]
    /// View validators in a height-selected block
    AtBlockHeight(super::block_id::AtBlockHeight),
    #[strum_discriminants(strum(
        message = "at-block-hash     - View validators in a hash-selected block"
    ))]
    /// View validators in a hash-selected block
    AtBlockHash(super::block_id::AtBlockHash),
}

'''