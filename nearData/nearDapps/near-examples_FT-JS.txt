*GitHub Repository "near-examples/FT-JS"*

'''--- .github/workflows/tests.yml ---
name: Tests
on: push
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm install
      - name: Build contract
        run: npm run build
      - name: Run tests
        run: npm test

'''
'''--- CONTRIBUTING.md ---
 # Contributing to NEAR

NEAR welcomes help in many forms including development, code review, documentation improvements, and outreach.
Please visit [the contribution overview](https://docs.nearprotocol.com/docs/contribution/contribution-overview) for more information.

## Using Github issues and pull requests

Some repositories have specific issue templates that will be helpful for maintainers and community contributors. Please use the templates whenever available.

Please include steps to reproduction, if reporting an error. Information on all applicable versions is quite helpful. Some versions can be found using the command line. (For example: `node --version` or `rustc --version`.) Other version information may be packaged as dependencies. (For example: in `package.json` or `Cargo.toml`.)

If there are verbosity flags available, please include those to offer as much information as possible.

When opening a pull request, please use the typical open-source flow of forking the desired repository and opening a pull request from your forked repository. (More information on [technical contributions here](https://docs.nearprotocol.com/docs/contribution/technical-contribution).)

## Testing

Please note that for technical contributions, NEAR runs a battery of continuous integration tools and tests for each pull request.

It's encouraged to write unit tests on new features. Many NEAR repositories have built-in scripts that run tests locally. Tests may check linting and must be addressed.

For this repository, please follow testing directions outlined in the `README.md` file.

### Thank you

NEAR values all contributors to the projects in the ecosystem and invites public discussion on the tech and vision. Please feel free to join the conversation using the links offered at [near.help](https://near.help).

'''
'''--- README.md ---
# FT-JS

Example implementation of a [Fungible Token](https://docs.near.org/develop/relevant-contracts/ft) contract which implements storage management and testing. This is a contract-only example.

## Pre-requisites

- [Node.js](https://nodejs.org/en/download/) = 16

### Operating Systems

Currently this example is only supported on Linux and Mac OS. Windows is not supported.

## Setup

1. Install dependencies

```bash
npm install
```

2. Build the contract

```bash
npm run build
```

3. Run tests

```bash
npm test
```

## Contribute

If you have any questions, please [join our community on Discord](https://discord.gg/near) and ask in the `#dev-support` channel. Also make sure to read CONTRIBUTING.md before contributing.

'''
'''--- babel.config.json ---
{
  "plugins": [
    "near-sdk-js/lib/build-tools/include-bytes",
    "near-sdk-js/lib/build-tools/near-bindgen-exporter",
    ["@babel/plugin-proposal-decorators", { "version": "legacy" }]
  ],
  "presets": ["@babel/preset-typescript"]
}
'''
'''--- build/builder.c ---
#include <string.h>
#include "../node_modules/near-sdk-js/cli/deps/quickjs/quickjs-libc-min.h"
#include "../node_modules/near-sdk-js/cli/deps/quickjs/libbf.h"
#include "code.h"

static JSContext *JS_NewCustomContext(JSRuntime *rt)
{
  JSContext *ctx = JS_NewContextRaw(rt);
  if (!ctx)
    return NULL;
  JS_AddIntrinsicBaseObjects(ctx);
  JS_AddIntrinsicDate(ctx);
  JS_AddIntrinsicEval(ctx);
  JS_AddIntrinsicStringNormalize(ctx);
  JS_AddIntrinsicRegExp(ctx);
  JS_AddIntrinsicJSON(ctx);
  JS_AddIntrinsicProxy(ctx);
  JS_AddIntrinsicMapSet(ctx);
  JS_AddIntrinsicTypedArrays(ctx);
  JS_AddIntrinsicPromise(ctx);
  JS_AddIntrinsicBigInt(ctx);
  return ctx;
}

#define DEFINE_NEAR_METHOD(name) \
  void name () __attribute__((export_name(#name))) {\
    JSRuntime *rt;\
    JSContext *ctx;\
    JSValue mod_obj, fun_obj, result, error, error_message, error_stack;\
    const char *error_message_c, *error_stack_c;\
    char *error_c;\
    size_t msg_len, stack_len;\
    rt = JS_NewRuntime();\
    ctx = JS_NewCustomContext(rt);\
    js_add_near_host_functions(ctx);\
    mod_obj = js_load_module_binary(ctx, code, code_size);\
    fun_obj = JS_GetProperty(ctx, mod_obj, JS_NewAtom(ctx, #name));\
    result = JS_Call(ctx, fun_obj, mod_obj, 0, NULL);\
    if (JS_IsException(result)) {\
      error = JS_GetException(ctx);\
      error_message = JS_GetPropertyStr(ctx, error, "message");\
      error_stack = JS_GetPropertyStr(ctx, error, "stack");\
      error_message_c = JS_ToCStringLen(ctx, &msg_len, error_message);\
      error_stack_c = JS_ToCStringLen(ctx, &stack_len, error_stack);\
      error_c = malloc(msg_len+1+stack_len);\
      strncpy(error_c, error_message_c, msg_len);\
      error_c[msg_len] = '\n';\
      strncpy(error_c+msg_len+1, error_stack_c, stack_len);\
      panic_utf8(msg_len+1+stack_len, (uint64_t)error_c);\
    }\
    js_std_loop(ctx);\
  }

// #############
// # Registers #
// #############
extern void read_register(uint64_t register_id, uint64_t ptr);
extern uint64_t register_len(uint64_t register_id);
extern void write_register(uint64_t register_id, uint64_t data_len, uint64_t data_ptr);
// ###############
// # Context API #
// ###############
extern void current_account_id(uint64_t register_id);
extern void signer_account_id(uint64_t register_id);
extern void signer_account_pk(uint64_t register_id);
extern void predecessor_account_id(uint64_t register_id);
extern void input(uint64_t register_id);
extern uint64_t block_index();
extern uint64_t block_timestamp();
extern uint64_t epoch_height();
extern uint64_t storage_usage();
// #################
// # Economics API #
// #################
extern void account_balance(uint64_t balance_ptr);
extern void account_locked_balance(uint64_t balance_ptr);
extern void attached_deposit(uint64_t balance_ptr);
extern uint64_t prepaid_gas();
extern uint64_t used_gas();
// ############
// # Math API #
// ############
extern void random_seed(uint64_t register_id);
extern void sha256(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern void keccak256(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern void keccak512(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern void ripemd160(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern uint64_t ecrecover(uint64_t hash_len, uint64_t hash_ptr, uint64_t sign_len, uint64_t sig_ptr, uint64_t v, uint64_t malleability_flag, uint64_t register_id);
// #####################
// # Miscellaneous API #
// #####################
extern void value_return(uint64_t value_len, uint64_t value_ptr);
extern void panic(void);
extern void panic_utf8(uint64_t len, uint64_t ptr);
extern void log_utf8(uint64_t len, uint64_t ptr);
extern void log_utf16(uint64_t len, uint64_t ptr);
// Name confliction with WASI. Can be re-exported with a different name on NEAR side with a protocol upgrade
// Or, this is actually not a primitive, can be implement with log and panic host functions in C side or JS side. 
// extern void abort(uint32_t msg_ptr, uint32_t filename_ptr, uint32_t u32, uint32_t col);
// ################
// # Promises API #
// ################
extern uint64_t promise_create(uint64_t account_id_len, uint64_t account_id_ptr, uint64_t method_name_len, uint64_t method_name_ptr, uint64_t arguments_len, uint64_t arguments_ptr, uint64_t amount_ptr, uint64_t gas);
extern uint64_t promise_then(uint64_t promise_index, uint64_t account_id_len, uint64_t account_id_ptr, uint64_t method_name_len, uint64_t method_name_ptr, uint64_t arguments_len, uint64_t arguments_ptr, uint64_t amount_ptr, uint64_t gas);
extern uint64_t promise_and(uint64_t promise_idx_ptr, uint64_t promise_idx_count);
extern uint64_t promise_batch_create(uint64_t account_id_len, uint64_t account_id_ptr);
extern uint64_t promise_batch_then(uint64_t promise_index, uint64_t account_id_len, uint64_t account_id_ptr);
// #######################
// # Promise API actions #
// #######################
extern void promise_batch_action_create_account(uint64_t promise_index);
extern void promise_batch_action_deploy_contract(uint64_t promise_index, uint64_t code_len, uint64_t code_ptr);
extern void promise_batch_action_function_call(uint64_t promise_index, uint64_t method_name_len, uint64_t method_name_ptr, uint64_t arguments_len, uint64_t arguments_ptr, uint64_t amount_ptr, uint64_t gas);
extern void promise_batch_action_transfer(uint64_t promise_index, uint64_t amount_ptr);
extern void promise_batch_action_stake(uint64_t promise_index, uint64_t amount_ptr, uint64_t public_key_len, uint64_t public_key_ptr);
extern void promise_batch_action_add_key_with_full_access(uint64_t promise_index, uint64_t public_key_len, uint64_t public_key_ptr, uint64_t nonce);
extern void promise_batch_action_add_key_with_function_call(uint64_t promise_index, uint64_t public_key_len, uint64_t public_key_ptr, uint64_t nonce, uint64_t allowance_ptr, uint64_t receiver_id_len, uint64_t receiver_id_ptr, uint64_t method_names_len, uint64_t method_names_ptr);
extern void promise_batch_action_delete_key(uint64_t promise_index, uint64_t public_key_len, uint64_t public_key_ptr);
extern void promise_batch_action_delete_account(uint64_t promise_index, uint64_t beneficiary_id_len, uint64_t beneficiary_id_ptr);
extern void promise_batch_action_function_call_weight(uint64_t promise_index, uint64_t function_name_len, uint64_t function_name_ptr, uint64_t arguments_len, uint64_t arguments_ptr, uint64_t amount_ptr, uint64_t gas, uint64_t weight);
// #######################
// # Promise API results #
// #######################
extern uint64_t promise_results_count(void);
extern uint64_t promise_result(uint64_t result_idx, uint64_t register_id);
extern void promise_return(uint64_t promise_idx);
// ###############
// # Storage API #
// ###############
extern uint64_t storage_write(uint64_t key_len, uint64_t key_ptr, uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern uint64_t storage_read(uint64_t key_len, uint64_t key_ptr, uint64_t register_id);
extern uint64_t storage_remove(uint64_t key_len, uint64_t key_ptr, uint64_t register_id);
extern uint64_t storage_has_key(uint64_t key_len, uint64_t key_ptr);
// #################
// # Validator API #
// #################
extern void validator_stake(uint64_t account_id_len, uint64_t account_id_ptr, uint64_t stake_ptr);
extern void validator_total_stake(uint64_t stake_ptr);
// #############
// # Alt BN128 #
// #############
#ifdef NIGHTLY
extern void alt_bn128_g1_multiexp(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern void alt_bn128_g1_sum(uint64_t value_len, uint64_t value_ptr, uint64_t register_id);
extern uint64_t alt_bn128_pairing_check(uint64_t value_len, uint64_t value_ptr);
#endif

static JSValue near_read_register(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  char *data;
  uint64_t data_len;
  JSValue ret;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  data_len = register_len(register_id);
  if (data_len != UINT64_MAX) {
    data = malloc(data_len);
    read_register(register_id, (uint64_t)data);
    ret = JS_NewStringLenRaw(ctx, data, data_len);
    free(data);
    return ret;
  } else {
    return JS_UNDEFINED;
  }
}

static JSValue near_register_len(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id, len;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  len = register_len(register_id);
  return JS_NewBigUint64(ctx, len);
}

static JSValue near_write_register(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[1]);

  write_register(register_id, data_len, (uint64_t)data_ptr);
  return JS_UNDEFINED;
}

static JSValue near_current_account_id(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  current_account_id(register_id);
  return JS_UNDEFINED;
}

static JSValue near_signer_account_id(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv) {
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  signer_account_id(register_id);
  return JS_UNDEFINED;
}

static JSValue near_signer_account_pk(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv) {
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  signer_account_pk(register_id);
  return JS_UNDEFINED;
}

static JSValue near_predecessor_account_id(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv) {
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  predecessor_account_id(register_id);
  return JS_UNDEFINED;
}

static JSValue near_input(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  input(register_id);
  return JS_UNDEFINED;
}

static JSValue near_block_index(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = block_index();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_block_timestamp(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = block_timestamp();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_epoch_height(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = epoch_height();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_storage_usage(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = storage_usage();
  return JS_NewBigUint64(ctx, value);
}

// ptr[0] ptr[1] is little-endian u128.
static JSValue u128_to_quickjs(JSContext *ctx, uint64_t* ptr) {
  JSValue value;
  bf_t* bn;
  bf_t b;

  value = JS_NewBigInt(ctx);
  bn = JS_GetBigInt(value);
  // from ptr[] to bn
  // high 64 bits
  bf_set_ui(bn, ptr[1]);
  bf_mul_2exp(bn, 64, BF_PREC_INF, BF_RNDZ);
  // low 64 bits
  bf_init(bn->ctx, &b);
  bf_set_ui(&b, ptr[0]);
  bf_add(bn, bn, &b, BF_PREC_INF, BF_RNDZ);
  bf_delete(&b);
  
  return value;
}

static int quickjs_bigint_to_u128(JSContext *ctx, JSValueConst val, uint64_t* ptr) {
  bf_t* a;
  bf_t q, r, b, one, u128max;
  a = JS_GetBigInt(val);
  bf_init(a->ctx, &u128max);
  bf_set_ui(&u128max, 1);
  bf_mul_2exp(&u128max, 128, BF_PREC_INF, BF_RNDZ);
  if (bf_cmp_le(&u128max, a)) {
    return 1;
  }
  bf_init(a->ctx, &q);
  bf_init(a->ctx, &r);
  bf_init(a->ctx, &b);
  bf_init(a->ctx, &one);
  bf_set_ui(&b, UINT64_MAX);
  bf_set_ui(&one, 1);
  bf_add(&b, &b, &one, BF_PREC_INF, BF_RNDZ);
  bf_divrem(&q, &r, a, &b, BF_PREC_INF, BF_RNDZ, BF_RNDZ);
  
  bf_get_uint64(ptr, &r);
  bf_get_uint64(ptr+1, &q);
  return 0;
}

static int quickjs_int_to_u128(JSContext *ctx, JSValueConst val, uint64_t* ptr) {
  if (JS_ToUint64Ext(ctx, ptr, val) < 0) {
    return 1;
  }
  ptr[1] = 0;
  return 0;
}

static int quickjs_to_u128(JSContext *ctx, JSValueConst val, uint64_t* ptr) {
  if (JS_IsBigInt(ctx, val))
    return quickjs_bigint_to_u128(ctx, val, ptr);
  else {
    return quickjs_int_to_u128(ctx, val, ptr);
  }
}

static JSValue near_account_balance(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{  
  uint64_t ptr[2];

  account_balance((uint64_t)ptr); 
  return u128_to_quickjs(ctx, ptr);
}

static JSValue near_account_locked_balance(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t ptr[2];

  account_locked_balance((uint64_t)ptr);
  return u128_to_quickjs(ctx, ptr);
}

static JSValue near_attached_deposit(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t ptr[2];

  attached_deposit((uint64_t)ptr);
  return u128_to_quickjs(ctx, ptr);
}

static JSValue near_prepaid_gas(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = prepaid_gas();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_used_gas(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = used_gas();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_random_seed(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;

  if (JS_ToUint64Ext(ctx, &register_id, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  random_seed(register_id);
  return JS_UNDEFINED;
}

static JSValue near_sha256(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  
  sha256(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_keccak256(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }  
  keccak256(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_keccak512(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  
  keccak512(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_ripemd160(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  
  ripemd160(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_ecrecover(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t malleability_flag, v, register_id, result;
  const char *hash_ptr, *sig_ptr;
  size_t hash_len, sign_len;

  hash_ptr = JS_ToCStringLenRaw(ctx, &hash_len, argv[0]);
  sig_ptr = JS_ToCStringLenRaw(ctx, &sign_len, argv[1]);
  if (JS_ToUint64Ext(ctx, &malleability_flag, argv[2]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for malleability_flag");
  }
  if (JS_ToUint64Ext(ctx, &v, argv[3]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for v");
  }
  if (JS_ToUint64Ext(ctx, &register_id, argv[4]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
 
  result = ecrecover(hash_len, (uint64_t)hash_ptr, sign_len, (uint64_t)sig_ptr, malleability_flag, v, register_id);
  return JS_NewBigUint64(ctx, result);
}

static JSValue near_value_return(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv) 
{
  const char *value_ptr;
  size_t value_len;

  value_ptr = JS_ToCStringLenRaw(ctx, &value_len, argv[0]);
  value_return(value_len, (uint64_t)value_ptr);
  return JS_UNDEFINED;
}

static JSValue near_panic(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;

  if (argc == 1) {
    data_ptr = JS_ToCStringLen(ctx, &data_len, argv[0]);
    panic_utf8(data_len, (uint64_t)data_ptr);
  } else {
    panic();
  }
  return JS_UNDEFINED;
}

static JSValue near_panic_utf8(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  
  panic_utf8(data_len, (uint64_t)data_ptr);
  return JS_UNDEFINED;
}

static JSValue near_log(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLen(ctx, &data_len, argv[0]);
  
  log_utf8(data_len, (uint64_t)data_ptr);
  return JS_UNDEFINED;
}

static JSValue near_log_utf8(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  
  log_utf8(data_len, (uint64_t)data_ptr);
  return JS_UNDEFINED;
}

static JSValue near_log_utf16(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  log_utf16(data_len, (uint64_t)data_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_create(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *account_id_ptr, *method_name_ptr, *arguments_ptr;
  size_t account_id_len, method_name_len, arguments_len;
  uint64_t amount_ptr[2]; // amount is u128
  uint64_t gas, ret;

  account_id_ptr = JS_ToCStringLen(ctx, &account_id_len, argv[0]);
  method_name_ptr = JS_ToCStringLen(ctx, &method_name_len, argv[1]);
  arguments_ptr = JS_ToCStringLenRaw(ctx, &arguments_len, argv[2]);
  if (quickjs_to_u128(ctx, argv[3], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  if (JS_ToUint64Ext(ctx, &gas, argv[4]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for gas");
  }

  ret = promise_create(account_id_len, (uint64_t)account_id_ptr, method_name_len, (uint64_t)method_name_ptr, arguments_len, (uint64_t)arguments_ptr, (uint64_t)amount_ptr, gas);
  
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_then(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *account_id_ptr, *method_name_ptr, *arguments_ptr;
  size_t account_id_len, method_name_len, arguments_len;
  uint64_t amount_ptr[2]; // amount is u128
  uint64_t gas, ret;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  account_id_ptr = JS_ToCStringLen(ctx, &account_id_len, argv[1]);
  method_name_ptr = JS_ToCStringLen(ctx, &method_name_len, argv[2]);
  arguments_ptr = JS_ToCStringLenRaw(ctx, &arguments_len, argv[3]);
  if (quickjs_to_u128(ctx, argv[4], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  if (JS_ToUint64Ext(ctx, &gas, argv[5]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for gas");
  }

  ret = promise_then(promise_index, account_id_len, (uint64_t)account_id_ptr, method_name_len, (uint64_t)method_name_ptr, arguments_len, (uint64_t)arguments_ptr, (uint64_t)amount_ptr, gas);
  
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_and(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_idx_ptr[argc], ret;

  for(int i = 0; i < argc; i++) {
    if (JS_ToUint64Ext(ctx, &promise_idx_ptr[i], argv[i]) < 0) {
      return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_id");
    }
  }
  ret = promise_and((uint64_t)promise_idx_ptr, argc);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_batch_create(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *account_id_ptr;
  size_t account_id_len;
  uint64_t ret;

  account_id_ptr = JS_ToCStringLen(ctx, &account_id_len, argv[0]);
  ret = promise_batch_create(account_id_len, (uint64_t)account_id_ptr);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_batch_then(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *account_id_ptr;
  size_t account_id_len;
  uint64_t ret;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  account_id_ptr = JS_ToCStringLen(ctx, &account_id_len, argv[1]);
  ret = promise_batch_then(promise_index, account_id_len, (uint64_t)account_id_ptr);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_batch_action_create_account(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  promise_batch_action_create_account(promise_index);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_deploy_contract(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *code_ptr;
  size_t code_len;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  code_ptr = JS_ToCStringLenRaw(ctx, &code_len, argv[1]);
  promise_batch_action_deploy_contract(promise_index, code_len, (uint64_t)code_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_function_call(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *method_name_ptr, *arguments_ptr;
  size_t method_name_len, arguments_len;
  uint64_t amount_ptr[2]; // amount is u128
  uint64_t gas;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  method_name_ptr = JS_ToCStringLen(ctx, &method_name_len, argv[1]);
  arguments_ptr = JS_ToCStringLenRaw(ctx, &arguments_len, argv[2]);
  if (quickjs_to_u128(ctx, argv[3], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  if (JS_ToUint64Ext(ctx, &gas, argv[4]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for gas");
  }
  promise_batch_action_function_call(promise_index, method_name_len, (uint64_t)method_name_ptr, arguments_len, (uint64_t)arguments_ptr, (uint64_t)amount_ptr, gas);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_transfer(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  uint64_t amount_ptr[2]; // amount is u128

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  if (quickjs_to_u128(ctx, argv[1], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  promise_batch_action_transfer(promise_index, (uint64_t)amount_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_stake(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  uint64_t amount_ptr[2];
  const char *public_key_ptr;
  size_t public_key_len;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  if (quickjs_to_u128(ctx, argv[1], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  public_key_ptr = JS_ToCStringLenRaw(ctx, &public_key_len, argv[2]);

  promise_batch_action_stake(promise_index, (uint64_t)amount_ptr, public_key_len, (uint64_t)public_key_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_add_key_with_full_access(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *public_key_ptr;
  size_t public_key_len;
  uint64_t nonce;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  public_key_ptr = JS_ToCStringLenRaw(ctx, &public_key_len, argv[1]);
  if (JS_ToUint64Ext(ctx, &nonce, argv[2]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for nonce");
  }
  promise_batch_action_add_key_with_full_access(promise_index, public_key_len, (uint64_t)public_key_ptr, nonce);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_add_key_with_function_call(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *public_key_ptr, *receiver_id_ptr, *method_names_ptr;
  size_t public_key_len, receiver_id_len, method_names_len;
  uint64_t nonce, allowance_ptr[2];

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  public_key_ptr = JS_ToCStringLenRaw(ctx, &public_key_len, argv[1]);
  if (JS_ToUint64Ext(ctx, &nonce, argv[2]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for nonce");
  }
  if (quickjs_to_u128(ctx, argv[3], allowance_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for allowance");
  }
  receiver_id_ptr = JS_ToCStringLen(ctx, &receiver_id_len, argv[4]);
  method_names_ptr = JS_ToCStringLen(ctx, &method_names_len, argv[5]);

  promise_batch_action_add_key_with_function_call(promise_index, public_key_len, (uint64_t)public_key_ptr, nonce, (uint64_t)allowance_ptr, receiver_id_len, (uint64_t)receiver_id_ptr, method_names_len, (uint64_t)method_names_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_delete_key(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *public_key_ptr;
  size_t public_key_len;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  public_key_ptr = JS_ToCStringLenRaw(ctx, &public_key_len, argv[1]);
  promise_batch_action_delete_key(promise_index, public_key_len, (uint64_t)public_key_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_function_call_weight(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *method_name_ptr, *arguments_ptr;
  size_t method_name_len, arguments_len;
  uint64_t amount_ptr[2]; // amount is u128
  uint64_t gas;
  uint64_t weight;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  method_name_ptr = JS_ToCStringLen(ctx, &method_name_len, argv[1]);
  arguments_ptr = JS_ToCStringLenRaw(ctx, &arguments_len, argv[2]);
  if (quickjs_to_u128(ctx, argv[3], amount_ptr) != 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint128 for amount");
  }
  if (JS_ToUint64Ext(ctx, &gas, argv[4]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for gas");
  }
  if (JS_ToUint64Ext(ctx, &weight, argv[5]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for weight");
  }
  promise_batch_action_function_call_weight(promise_index, method_name_len, (uint64_t)method_name_ptr, arguments_len, (uint64_t)arguments_ptr, (uint64_t)amount_ptr, gas, weight);
  return JS_UNDEFINED;
}

static JSValue near_promise_batch_action_delete_account(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_index;
  const char *beneficiary_id_ptr;
  size_t beneficiary_id_len;

  if (JS_ToUint64Ext(ctx, &promise_index, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_index");
  }
  beneficiary_id_ptr = JS_ToCStringLen(ctx, &beneficiary_id_len, argv[1]);
  promise_batch_action_delete_account(promise_index, beneficiary_id_len, (uint64_t)beneficiary_id_ptr);
  return JS_UNDEFINED;
}

static JSValue near_promise_results_count(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t value;

  value = promise_results_count();
  return JS_NewBigUint64(ctx, value);
}

static JSValue near_promise_result(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t result_idx, register_id;
  uint64_t ret;

  if (JS_ToUint64Ext(ctx, &result_idx, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for result_idx");
  }
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  ret = promise_result(result_idx, register_id);

  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_promise_return(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t promise_idx;
  if (JS_ToUint64Ext(ctx, &promise_idx, argv[0]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for promise_idx");
  }
  promise_return(promise_idx);
  
  return JS_UNDEFINED;
}

static JSValue near_storage_write(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *key_ptr, *value_ptr;
  size_t key_len, value_len;
  uint64_t register_id, ret;

  key_ptr = JS_ToCStringLenRaw(ctx, &key_len, argv[0]);
  value_ptr = JS_ToCStringLenRaw(ctx, &value_len, argv[1]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[2]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  ret = storage_write(key_len, (uint64_t)key_ptr, value_len, (uint64_t)value_ptr, register_id);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_storage_read(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *key_ptr;
  size_t key_len;
  uint64_t register_id;
  uint64_t ret;

  key_ptr = JS_ToCStringLenRaw(ctx, &key_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  ret = storage_read(key_len, (uint64_t)key_ptr, register_id);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_storage_remove(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *key_ptr;
  size_t key_len;
  uint64_t register_id;
  uint64_t ret;

  key_ptr = JS_ToCStringLenRaw(ctx, &key_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }
  ret = storage_remove(key_len, (uint64_t)key_ptr, register_id);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_storage_has_key(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *key_ptr;
  size_t key_len;
  uint64_t ret;

  key_ptr = JS_ToCStringLenRaw(ctx, &key_len, argv[0]);
  ret = storage_has_key(key_len, (uint64_t)key_ptr);
  return JS_NewBigUint64(ctx, ret);
}

static JSValue near_validator_stake(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *account_id_ptr;
  size_t account_id_len;
  uint64_t stake_ptr[2];

  account_id_ptr = JS_ToCStringLen(ctx, &account_id_len, argv[0]);
  validator_stake(account_id_len, (uint64_t)account_id_ptr, (uint64_t)stake_ptr);

  return u128_to_quickjs(ctx, stake_ptr);
}

static JSValue near_validator_total_stake(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t stake_ptr[2];

  validator_total_stake((uint64_t)stake_ptr);
  return u128_to_quickjs(ctx, stake_ptr);
}

#ifdef NIGHTLY
static JSValue near_alt_bn128_g1_multiexp(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }

  alt_bn128_g1_multiexp(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_alt_bn128_g1_sum(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  uint64_t register_id;
  const char *data_ptr;
  size_t data_len;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  if (JS_ToUint64Ext(ctx, &register_id, argv[1]) < 0) {
    return JS_ThrowTypeError(ctx, "Expect Uint64 for register_id");
  }

  alt_bn128_g1_sum(data_len, (uint64_t)data_ptr, register_id);
  return JS_UNDEFINED;
}

static JSValue near_alt_bn128_pairing_check(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv)
{
  const char *data_ptr;
  size_t data_len;
  uint64_t ret;

  data_ptr = JS_ToCStringLenRaw(ctx, &data_len, argv[0]);
  
  ret = alt_bn128_pairing_check(data_len, (uint64_t)data_ptr);
  return JS_NewBigUint64(ctx, ret);
}
#endif

static void js_add_near_host_functions(JSContext* ctx) {
  JSValue global_obj, env;

  global_obj = JS_GetGlobalObject(ctx);
  env = JS_NewObject(ctx);

  JS_SetPropertyStr(ctx, env, "read_register", JS_NewCFunction(ctx, near_read_register, "read_register", 1));
  JS_SetPropertyStr(ctx, env, "register_len", JS_NewCFunction(ctx, near_register_len, "register_len", 1));
  JS_SetPropertyStr(ctx, env, "write_register", JS_NewCFunction(ctx, near_write_register, "write_register", 2));
  JS_SetPropertyStr(ctx, env, "current_account_id", JS_NewCFunction(ctx, near_current_account_id, "current_account_id", 1));
  JS_SetPropertyStr(ctx, env, "signer_account_id", JS_NewCFunction(ctx, near_signer_account_id, "signer_account_id", 1));
  JS_SetPropertyStr(ctx, env, "signer_account_pk", JS_NewCFunction(ctx, near_signer_account_pk, "signer_account_pk", 1));
  JS_SetPropertyStr(ctx, env, "predecessor_account_id", JS_NewCFunction(ctx, near_predecessor_account_id, "predecessor_account_id", 1));
  JS_SetPropertyStr(ctx, env, "input", JS_NewCFunction(ctx, near_input, "input", 1));
  JS_SetPropertyStr(ctx, env, "block_index", JS_NewCFunction(ctx, near_block_index, "block_index", 0));
  JS_SetPropertyStr(ctx, env, "block_timestamp", JS_NewCFunction(ctx, near_block_timestamp, "block_timestamp", 0));
  JS_SetPropertyStr(ctx, env, "epoch_height", JS_NewCFunction(ctx, near_epoch_height, "epoch_height", 0));
  JS_SetPropertyStr(ctx, env, "storage_usage", JS_NewCFunction(ctx, near_storage_usage, "storage_usage", 0));
  JS_SetPropertyStr(ctx, env, "account_balance", JS_NewCFunction(ctx, near_account_balance, "account_balance", 0));
  JS_SetPropertyStr(ctx, env, "account_locked_balance", JS_NewCFunction(ctx, near_account_locked_balance, "account_locked_balance", 0));
  JS_SetPropertyStr(ctx, env, "attached_deposit", JS_NewCFunction(ctx, near_attached_deposit, "attached_deposit", 0));
  JS_SetPropertyStr(ctx, env, "prepaid_gas", JS_NewCFunction(ctx, near_prepaid_gas, "prepaid_gas", 0));
  JS_SetPropertyStr(ctx, env, "used_gas", JS_NewCFunction(ctx, near_used_gas, "used_gas", 0));
  JS_SetPropertyStr(ctx, env, "random_seed", JS_NewCFunction(ctx, near_random_seed, "random_seed", 1));
  JS_SetPropertyStr(ctx, env, "sha256", JS_NewCFunction(ctx, near_sha256, "sha256", 2));
  JS_SetPropertyStr(ctx, env, "keccak256", JS_NewCFunction(ctx, near_keccak256, "keccak256", 2));
  JS_SetPropertyStr(ctx, env, "keccak512", JS_NewCFunction(ctx, near_keccak512, "keccak512", 2));
  JS_SetPropertyStr(ctx, env, "ripemd160", JS_NewCFunction(ctx, near_ripemd160, "ripemd160", 2));
  JS_SetPropertyStr(ctx, env, "ecrecover", JS_NewCFunction(ctx, near_ecrecover, "ecrecover", 5));
  JS_SetPropertyStr(ctx, env, "value_return", JS_NewCFunction(ctx, near_value_return, "value_return", 1));
  JS_SetPropertyStr(ctx, env, "panic", JS_NewCFunction(ctx, near_panic, "panic", 1));
  JS_SetPropertyStr(ctx, env, "panic_utf8", JS_NewCFunction(ctx, near_panic_utf8, "panic_utf8", 1));
  JS_SetPropertyStr(ctx, env, "log", JS_NewCFunction(ctx, near_log, "log", 1));
  JS_SetPropertyStr(ctx, env, "log_utf8", JS_NewCFunction(ctx, near_log_utf8, "log_utf8", 1));
  JS_SetPropertyStr(ctx, env, "log_utf16", JS_NewCFunction(ctx, near_log_utf16, "log_utf16", 1));
  JS_SetPropertyStr(ctx, env, "promise_create", JS_NewCFunction(ctx, near_promise_create, "promise_create", 5));
  JS_SetPropertyStr(ctx, env, "promise_then", JS_NewCFunction(ctx, near_promise_then, "promise_then", 6));
  JS_SetPropertyStr(ctx, env, "promise_and", JS_NewCFunction(ctx, near_promise_and, "promise_and", 1));
  JS_SetPropertyStr(ctx, env, "promise_batch_create", JS_NewCFunction(ctx, near_promise_batch_create, "promise_batch_create", 1));
  JS_SetPropertyStr(ctx, env, "promise_batch_then", JS_NewCFunction(ctx, near_promise_batch_then, "promise_batch_then", 2));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_create_account", JS_NewCFunction(ctx, near_promise_batch_action_create_account, "promise_batch_action_create_account", 1));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_deploy_contract", JS_NewCFunction(ctx, near_promise_batch_action_deploy_contract, "promise_batch_action_deploy_contract", 2));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_function_call", JS_NewCFunction(ctx, near_promise_batch_action_function_call, "promise_batch_action_function_call", 5));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_transfer", JS_NewCFunction(ctx, near_promise_batch_action_transfer, "promise_batch_action_transfer", 2));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_stake", JS_NewCFunction(ctx, near_promise_batch_action_stake, "promise_batch_action_stake", 3));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_add_key_with_full_access", JS_NewCFunction(ctx, near_promise_batch_action_add_key_with_full_access, "promise_batch_action_add_key_with_full_access", 3));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_add_key_with_function_call", JS_NewCFunction(ctx, near_promise_batch_action_add_key_with_function_call, "promise_batch_action_add_key_with_function_call", 6));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_delete_key", JS_NewCFunction(ctx, near_promise_batch_action_delete_key, "promise_batch_action_delete_key", 2));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_delete_account", JS_NewCFunction(ctx, near_promise_batch_action_delete_account, "promise_batch_action_delete_account", 2));
  JS_SetPropertyStr(ctx, env, "promise_batch_action_function_call_weight", JS_NewCFunction(ctx, near_promise_batch_action_function_call_weight, "promise_batch_action_function_call_weight", 6));
  JS_SetPropertyStr(ctx, env, "promise_results_count", JS_NewCFunction(ctx, near_promise_results_count, "promise_results_count", 0));
  JS_SetPropertyStr(ctx, env, "promise_result", JS_NewCFunction(ctx, near_promise_result, "promise_result", 2));
  JS_SetPropertyStr(ctx, env, "promise_return", JS_NewCFunction(ctx, near_promise_return, "promise_return", 1));
  JS_SetPropertyStr(ctx, env, "storage_write", JS_NewCFunction(ctx, near_storage_write, "storage_write", 2));
  JS_SetPropertyStr(ctx, env, "storage_read", JS_NewCFunction(ctx, near_storage_read, "storage_read", 2));
  JS_SetPropertyStr(ctx, env, "storage_remove", JS_NewCFunction(ctx, near_storage_remove, "storage_remove", 2));
  JS_SetPropertyStr(ctx, env, "storage_has_key", JS_NewCFunction(ctx, near_storage_has_key, "storage_has_key", 2));
  JS_SetPropertyStr(ctx, env, "validator_stake", JS_NewCFunction(ctx, near_validator_stake, "validator_stake", 2));
  JS_SetPropertyStr(ctx, env, "validator_total_stake", JS_NewCFunction(ctx, near_validator_total_stake, "validator_total_stake", 1));
  #ifdef NIGHTLY
  // as of Jun 24, 2022, alt_bn128 is not a nightly protocol feature any more. It's part of protocol version 55. But, testnet
// is at protocol version 54 and mainnet is at protocol version 53. We'll enable and add alt_bn128 as they in testnet.
  JS_SetPropertyStr(ctx, env, "alt_bn128_g1_multiexp", JS_NewCFunction(ctx, near_alt_bn128_g1_multiexp, "alt_bn128_g1_multiexp", 2));
  JS_SetPropertyStr(ctx, env, "alt_bn128_g1_sum", JS_NewCFunction(ctx, near_alt_bn128_g1_sum, "alt_bn128_g1_sum", 2));
  JS_SetPropertyStr(ctx, env, "alt_bn128_pairing_check", JS_NewCFunction(ctx, near_alt_bn128_pairing_check, "alt_bn128_pairing_check", 1));
  #endif

  JS_SetPropertyStr(ctx, global_obj, "env", env);
}

JSValue JS_Call(JSContext *ctx, JSValueConst func_obj, JSValueConst this_obj,
                int argc, JSValueConst *argv);

void _start() {}

#include "methods.h"

'''
'''--- build/code.h ---
/* File generated automatically by the QuickJS compiler. */

#include <inttypes.h>

const uint32_t code_size = 14673;

const uint8_t code[14673] = {
 0x02, 0x8d, 0x02, 0x3c, 0x62, 0x75, 0x69, 0x6c,
 0x64, 0x2f, 0x66, 0x75, 0x6e, 0x67, 0x69, 0x62,
 0x6c, 0x65, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e,
 0x6a, 0x73, 0x1c, 0x66, 0x74, 0x5f, 0x6f, 0x6e,
 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
 0x72, 0x22, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f,
 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64,
 0x61, 0x74, 0x61, 0x26, 0x46, 0x75, 0x6e, 0x67,
 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
 0x6e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x32,
 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65,
 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x44,
 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
 0x72, 0x1a, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73,
 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x45,
 0x72, 0x72, 0x6f, 0x72, 0x18, 0x61, 0x73, 0x73,
 0x65, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
 0x72, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x10,
 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74,
 0x0e, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
 0x12, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69,
 0x7a, 0x65, 0x18, 0x63, 0x6f, 0x6e, 0x76, 0x65,
 0x72, 0x74, 0x52, 0x61, 0x64, 0x69, 0x78, 0x06,
 0x67, 0x63, 0x64, 0x16, 0x72, 0x61, 0x64, 0x69,
 0x78, 0x32, 0x63, 0x61, 0x72, 0x72, 0x79, 0x1a,
 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52,
 0x61, 0x64, 0x69, 0x78, 0x32, 0x0a, 0x72, 0x61,
 0x64, 0x69, 0x78, 0x0c, 0x72, 0x61, 0x64, 0x69,
 0x78, 0x32, 0x1a, 0x75, 0x6e, 0x73, 0x61, 0x66,
 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
 0x0c, 0x62, 0x61, 0x73, 0x65, 0x31, 0x36, 0x0c,
 0x62, 0x61, 0x73, 0x65, 0x33, 0x32, 0x0c, 0x62,
 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x62, 0x61,
 0x73, 0x65, 0x36, 0x34, 0x75, 0x72, 0x6c, 0x12,
 0x67, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x35,
 0x38, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38,
 0x1a, 0x58, 0x4d, 0x52, 0x5f, 0x42, 0x4c, 0x4f,
 0x43, 0x4b, 0x5f, 0x4c, 0x45, 0x4e, 0x12, 0x62,
 0x61, 0x73, 0x65, 0x35, 0x38, 0x78, 0x6d, 0x72,
 0x1a, 0x42, 0x45, 0x43, 0x48, 0x5f, 0x41, 0x4c,
 0x50, 0x48, 0x41, 0x42, 0x45, 0x54, 0x24, 0x50,
 0x4f, 0x4c, 0x59, 0x4d, 0x4f, 0x44, 0x5f, 0x47,
 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52,
 0x53, 0x1a, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32,
 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x6f, 0x64, 0x18,
 0x62, 0x65, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63,
 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x67, 0x65, 0x6e,
 0x42, 0x65, 0x63, 0x68, 0x33, 0x32, 0x08, 0x75,
 0x74, 0x66, 0x38, 0x06, 0x68, 0x65, 0x78, 0x0c,
 0x43, 0x4f, 0x44, 0x45, 0x52, 0x53, 0x12, 0x43,
 0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
 0x0e, 0x55, 0x36, 0x34, 0x5f, 0x4d, 0x41, 0x58,
 0x20, 0x45, 0x56, 0x49, 0x43, 0x54, 0x45, 0x44,
 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
 0x52, 0x28, 0x70, 0x72, 0x65, 0x64, 0x65, 0x63,
 0x65, 0x73, 0x73, 0x6f, 0x72, 0x41, 0x63, 0x63,
 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1e, 0x61,
 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x44,
 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x16, 0x73,
 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
 0x61, 0x64, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65,
 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
 0x74, 0x49, 0x64, 0x18, 0x73, 0x74, 0x6f, 0x72,
 0x61, 0x67, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65,
 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x08, 0x76, 0x69,
 0x65, 0x77, 0x16, 0x4e, 0x65, 0x61, 0x72, 0x42,
 0x69, 0x6e, 0x64, 0x67, 0x65, 0x6e, 0x08, 0x5f,
 0x64, 0x65, 0x63, 0x0a, 0x5f, 0x64, 0x65, 0x63,
 0x32, 0x0a, 0x5f, 0x64, 0x65, 0x63, 0x33, 0x0c,
 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x0e, 0x5f,
 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x20, 0x30,
 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x40,
 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50,
 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
 0x59, 0x5a, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
 0x40, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45,
 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d,
 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55,
 0x56, 0x40, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35,
 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44,
 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4d, 0x4e,
 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58,
 0x59, 0x5a, 0x80, 0x01, 0x41, 0x42, 0x43, 0x44,
 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c,
 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54,
 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x61, 0x62,
 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a,
 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72,
 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a,
 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
 0x38, 0x39, 0x2b, 0x2f, 0x80, 0x01, 0x41, 0x42,
 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a,
 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52,
 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a,
 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70,
 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
 0x79, 0x7a, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35,
 0x36, 0x37, 0x38, 0x39, 0x2d, 0x5f, 0x74, 0x31,
 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52,
 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a,
 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
 0x69, 0x6a, 0x6b, 0x6d, 0x6e, 0x6f, 0x70, 0x71,
 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
 0x7a, 0x74, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65,
 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6d, 0x6e,
 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
 0x77, 0x78, 0x79, 0x7a, 0x41, 0x42, 0x43, 0x44,
 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d,
 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56,
 0x57, 0x58, 0x59, 0x5a, 0x74, 0x72, 0x70, 0x73,
 0x68, 0x6e, 0x61, 0x66, 0x33, 0x39, 0x77, 0x42,
 0x55, 0x44, 0x4e, 0x45, 0x47, 0x48, 0x4a, 0x4b,
 0x4c, 0x4d, 0x34, 0x50, 0x51, 0x52, 0x53, 0x54,
 0x37, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x32, 0x62,
 0x63, 0x64, 0x65, 0x43, 0x67, 0x36, 0x35, 0x6a,
 0x6b, 0x6d, 0x38, 0x6f, 0x46, 0x71, 0x69, 0x31,
 0x74, 0x75, 0x76, 0x41, 0x78, 0x79, 0x7a, 0x0c,
 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x0c, 0x64,
 0x65, 0x63, 0x6f, 0x64, 0x65, 0x40, 0x71, 0x70,
 0x7a, 0x72, 0x79, 0x39, 0x78, 0x38, 0x67, 0x66,
 0x32, 0x74, 0x76, 0x64, 0x77, 0x30, 0x73, 0x33,
 0x6a, 0x6e, 0x35, 0x34, 0x6b, 0x68, 0x63, 0x65,
 0x36, 0x6d, 0x75, 0x61, 0x37, 0x6c, 0x0c, 0x62,
 0x65, 0x63, 0x68, 0x33, 0x32, 0x0e, 0x62, 0x65,
 0x63, 0x68, 0x33, 0x32, 0x6d, 0x20, 0x30, 0x31,
 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x50, 0x49,
 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65,
 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x20,
 0x74, 0x79, 0x70, 0x65, 0x2e, 0x20, 0x41, 0x76,
 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20,
 0x74, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x20, 0x08,
 0x6b, 0x65, 0x79, 0x73, 0x04, 0x2c, 0x20, 0x10,
 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
 0x14, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
 0x6f, 0x72, 0x73, 0x14, 0x64, 0x65, 0x73, 0x63,
 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x0e, 0x63,
 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x08, 0x64,
 0x65, 0x73, 0x63, 0x0e, 0x66, 0x6f, 0x72, 0x45,
 0x61, 0x63, 0x68, 0x16, 0x69, 0x6e, 0x69, 0x74,
 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x0a,
 0x73, 0x6c, 0x69, 0x63, 0x65, 0x0e, 0x72, 0x65,
 0x76, 0x65, 0x72, 0x73, 0x65, 0x0c, 0x72, 0x65,
 0x64, 0x75, 0x63, 0x65, 0x06, 0x6b, 0x65, 0x79,
 0x12, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
 0x6f, 0x72, 0x10, 0x4e, 0x6f, 0x74, 0x52, 0x65,
 0x61, 0x64, 0x79, 0x14, 0x53, 0x75, 0x63, 0x63,
 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x0c, 0x46,
 0x61, 0x69, 0x6c, 0x65, 0x64, 0x02, 0x6e, 0x1a,
 0x69, 0x73, 0x53, 0x61, 0x66, 0x65, 0x49, 0x6e,
 0x74, 0x65, 0x67, 0x65, 0x72, 0x1e, 0x57, 0x72,
 0x6f, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x74, 0x65,
 0x67, 0x65, 0x72, 0x3a, 0x20, 0x08, 0x61, 0x72,
 0x67, 0x73, 0x08, 0x77, 0x72, 0x61, 0x70, 0x02,
 0x61, 0x02, 0x62, 0x02, 0x63, 0x06, 0x61, 0x63,
 0x63, 0x02, 0x69, 0x0c, 0x64, 0x69, 0x67, 0x69,
 0x74, 0x73, 0x0e, 0x69, 0x73, 0x41, 0x72, 0x72,
 0x61, 0x79, 0x66, 0x61, 0x6c, 0x70, 0x68, 0x61,
 0x62, 0x65, 0x74, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
 0x64, 0x65, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74,
 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20,
 0x62, 0x65, 0x20, 0x61, 0x6e, 0x20, 0x61, 0x72,
 0x72, 0x61, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x6e,
 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x06, 0x6d,
 0x61, 0x70, 0x3c, 0x44, 0x69, 0x67, 0x69, 0x74,
 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x6f,
 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x20, 0x61,
 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x3a,
 0x20, 0x18, 0x20, 0x28, 0x61, 0x6c, 0x70, 0x68,
 0x61, 0x62, 0x65, 0x74, 0x3a, 0x20, 0x02, 0x29,
 0x60, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65,
 0x74, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x73,
 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,
 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6f,
 0x66, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x73, 0x0c, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
 0x48, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65,
 0x74, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
 0x3a, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x74,
 0x72, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6c, 0x65,
 0x6d, 0x65, 0x6e, 0x74, 0x3d, 0x0e, 0x69, 0x6e,
 0x64, 0x65, 0x78, 0x4f, 0x66, 0x22, 0x55, 0x6e,
 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x6c, 0x65,
 0x74, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x22, 0x18,
 0x22, 0x2e, 0x20, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
 0x65, 0x64, 0x3a, 0x20, 0x12, 0x73, 0x65, 0x70,
 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3e, 0x6a,
 0x6f, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x70, 0x61,
 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x73, 0x68,
 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20,
 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x58, 0x6a,
 0x6f, 0x69, 0x6e, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
 0x64, 0x65, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74,
 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20,
 0x62, 0x65, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79,
 0x20, 0x6f, 0x66, 0x20, 0x73, 0x74, 0x72, 0x69,
 0x6e, 0x67, 0x73, 0x3c, 0x6a, 0x6f, 0x69, 0x6e,
 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x3a,
 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x72,
 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x70, 0x75,
 0x74, 0x3d, 0x04, 0x74, 0x6f, 0x44, 0x6a, 0x6f,
 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64,
 0x65, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20,
 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62,
 0x65, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x08, 0x62, 0x69, 0x74, 0x73, 0x06, 0x63, 0x68,
 0x72, 0x02, 0x3d, 0x38, 0x70, 0x61, 0x64, 0x64,
 0x69, 0x6e, 0x67, 0x20, 0x63, 0x68, 0x72, 0x20,
 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62,
 0x65, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x08, 0x64, 0x61, 0x74, 0x61, 0x5e, 0x70, 0x61,
 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e,
 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x70,
 0x75, 0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c,
 0x64, 0x20, 0x62, 0x65, 0x20, 0x61, 0x72, 0x72,
 0x61, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x74,
 0x72, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x70, 0x61,
 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e,
 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x20, 0x6e, 0x6f,
 0x6e, 0x2d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3d, 0x08,
 0x70, 0x75, 0x73, 0x68, 0x06, 0x65, 0x6e, 0x64,
 0x42, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x3a,
 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x72,
 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x70, 0x75,
 0x74, 0x3d, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c,
 0x69, 0x64, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69,
 0x6e, 0x67, 0x3a, 0x20, 0x73, 0x74, 0x72, 0x69,
 0x6e, 0x67, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c,
 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x77,
 0x68, 0x6f, 0x6c, 0x65, 0x20, 0x6e, 0x75, 0x6d,
 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x62,
 0x79, 0x74, 0x65, 0x73, 0x58, 0x49, 0x6e, 0x76,
 0x61, 0x6c, 0x69, 0x64, 0x20, 0x70, 0x61, 0x64,
 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x20, 0x73, 0x74,
 0x72, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x61, 0x73,
 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6d, 0x75, 0x63,
 0x68, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
 0x67, 0x04, 0x66, 0x6e, 0x3e, 0x6e, 0x6f, 0x72,
 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x66,
 0x6e, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
 0x20, 0x62, 0x65, 0x20, 0x66, 0x75, 0x6e, 0x63,
 0x74, 0x69, 0x6f, 0x6e, 0x06, 0x70, 0x6f, 0x73,
 0x06, 0x72, 0x65, 0x73, 0x0a, 0x63, 0x61, 0x72,
 0x72, 0x79, 0x0a, 0x64, 0x69, 0x67, 0x69, 0x74,
 0x12, 0x64, 0x69, 0x67, 0x69, 0x74, 0x42, 0x61,
 0x73, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x76, 0x65,
 0x72, 0x74, 0x52, 0x61, 0x64, 0x69, 0x78, 0x3a,
 0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x66,
 0x72, 0x6f, 0x6d, 0x3d, 0x38, 0x2c, 0x20, 0x62,
 0x61, 0x73, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x6e,
 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x65,
 0x73, 0x73, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20,
 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
 0x74, 0x52, 0x61, 0x64, 0x69, 0x78, 0x3a, 0x20,
 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f,
 0x3d, 0x44, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
 0x74, 0x52, 0x61, 0x64, 0x69, 0x78, 0x3a, 0x20,
 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x68, 0x6f,
 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x61,
 0x72, 0x72, 0x61, 0x79, 0x38, 0x63, 0x6f, 0x6e,
 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x64, 0x69,
 0x78, 0x3a, 0x20, 0x63, 0x61, 0x72, 0x72, 0x79,
 0x20, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f,
 0x77, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x02,
 0x64, 0x08, 0x6d, 0x61, 0x73, 0x6b, 0x46, 0x63,
 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61,
 0x64, 0x69, 0x78, 0x32, 0x3a, 0x20, 0x64, 0x61,
 0x74, 0x61, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c,
 0x64, 0x20, 0x62, 0x65, 0x20, 0x61, 0x72, 0x72,
 0x61, 0x79, 0x34, 0x63, 0x6f, 0x6e, 0x76, 0x65,
 0x72, 0x74, 0x52, 0x61, 0x64, 0x69, 0x78, 0x32,
 0x3a, 0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20,
 0x66, 0x72, 0x6f, 0x6d, 0x3d, 0x30, 0x63, 0x6f,
 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x64,
 0x69, 0x78, 0x32, 0x3a, 0x20, 0x77, 0x72, 0x6f,
 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x3d, 0x46, 0x63,
 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61,
 0x64, 0x69, 0x78, 0x32, 0x3a, 0x20, 0x63, 0x61,
 0x72, 0x72, 0x79, 0x20, 0x6f, 0x76, 0x65, 0x72,
 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x66, 0x72, 0x6f,
 0x6d, 0x3d, 0x08, 0x20, 0x74, 0x6f, 0x3d, 0x16,
 0x20, 0x63, 0x61, 0x72, 0x72, 0x79, 0x42, 0x69,
 0x74, 0x73, 0x3d, 0x42, 0x63, 0x6f, 0x6e, 0x76,
 0x65, 0x72, 0x74, 0x52, 0x61, 0x64, 0x69, 0x78,
 0x32, 0x3a, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c,
 0x69, 0x64, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
 0x77, 0x6f, 0x72, 0x64, 0x3d, 0x0c, 0x20, 0x66,
 0x72, 0x6f, 0x6d, 0x3d, 0x44, 0x63, 0x6f, 0x6e,
 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x64, 0x69,
 0x78, 0x32, 0x3a, 0x20, 0x63, 0x61, 0x72, 0x72,
 0x79, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c,
 0x6f, 0x77, 0x20, 0x70, 0x6f, 0x73, 0x3d, 0x1c,
 0x45, 0x78, 0x63, 0x65, 0x73, 0x73, 0x20, 0x70,
 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x24, 0x4e,
 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20,
 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x3a,
 0x20, 0x06, 0x6e, 0x75, 0x6d, 0x0a, 0x62, 0x79,
 0x74, 0x65, 0x73, 0x4e, 0x72, 0x61, 0x64, 0x69,
 0x78, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x73,
 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,
 0x20, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x41, 0x72,
 0x72, 0x61, 0x79, 0x5a, 0x72, 0x61, 0x64, 0x69,
 0x78, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x73,
 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,
 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6f,
 0x66, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x73, 0x14, 0x72, 0x65, 0x76, 0x50, 0x61, 0x64,
 0x64, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x61, 0x64,
 0x69, 0x78, 0x32, 0x3a, 0x20, 0x62, 0x69, 0x74,
 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
 0x20, 0x62, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x28,
 0x30, 0x2e, 0x2e, 0x33, 0x32, 0x5d, 0x2c, 0x72,
 0x61, 0x64, 0x69, 0x78, 0x32, 0x3a, 0x20, 0x63,
 0x61, 0x72, 0x72, 0x79, 0x20, 0x6f, 0x76, 0x65,
 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x61,
 0x64, 0x69, 0x78, 0x32, 0x2e, 0x65, 0x6e, 0x63,
 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x70, 0x75,
 0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
 0x20, 0x62, 0x65, 0x20, 0x55, 0x69, 0x6e, 0x74,
 0x38, 0x41, 0x72, 0x72, 0x61, 0x79, 0x5c, 0x72,
 0x61, 0x64, 0x69, 0x78, 0x32, 0x2e, 0x64, 0x65,
 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x70,
 0x75, 0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c,
 0x64, 0x20, 0x62, 0x65, 0x20, 0x61, 0x72, 0x72,
 0x61, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x74,
 0x72, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x75, 0x6e,
 0x73, 0x61, 0x66, 0x65, 0x57, 0x72, 0x61, 0x70,
 0x70, 0x65, 0x72, 0x20, 0x66, 0x6e, 0x20, 0x73,
 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,
 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
 0x6e, 0x02, 0x65, 0x02, 0x73, 0x16, 0x74, 0x6f,
 0x55, 0x70, 0x70, 0x65, 0x72, 0x43, 0x61, 0x73,
 0x65, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
 0x65, 0x06, 0x61, 0x62, 0x63, 0x0a, 0x62, 0x6c,
 0x6f, 0x63, 0x6b, 0x10, 0x73, 0x75, 0x62, 0x61,
 0x72, 0x72, 0x61, 0x79, 0x10, 0x70, 0x61, 0x64,
 0x53, 0x74, 0x61, 0x72, 0x74, 0x06, 0x73, 0x74,
 0x72, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
 0x65, 0x6e, 0x02, 0x6a, 0x30, 0x62, 0x61, 0x73,
 0x65, 0x35, 0x38, 0x78, 0x6d, 0x72, 0x3a, 0x20,
 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x70, 0x61,
 0x64, 0x64, 0x69, 0x6e, 0x67, 0x06, 0x70, 0x72,
 0x65, 0x06, 0x63, 0x68, 0x6b, 0x0c, 0x70, 0x72,
 0x65, 0x66, 0x69, 0x78, 0x0a, 0x77, 0x6f, 0x72,
 0x64, 0x73, 0x1a, 0x65, 0x6e, 0x63, 0x6f, 0x64,
 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74,
 0x06, 0x6c, 0x65, 0x6e, 0x02, 0x76, 0x14, 0x63,
 0x68, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41,
 0x74, 0x20, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
 0x64, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
 0x20, 0x28, 0x10, 0x65, 0x6e, 0x63, 0x6f, 0x64,
 0x69, 0x6e, 0x67, 0x1c, 0x45, 0x4e, 0x43, 0x4f,
 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e,
 0x53, 0x54, 0x0c, 0x5f, 0x77, 0x6f, 0x72, 0x64,
 0x73, 0x12, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x6f,
 0x72, 0x64, 0x73, 0x0e, 0x74, 0x6f, 0x57, 0x6f,
 0x72, 0x64, 0x73, 0x1e, 0x66, 0x72, 0x6f, 0x6d,
 0x57, 0x6f, 0x72, 0x64, 0x73, 0x55, 0x6e, 0x73,
 0x61, 0x66, 0x65, 0x18, 0x64, 0x65, 0x63, 0x6f,
 0x64, 0x65, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65,
 0x1a, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x54,
 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x0a, 0x6c,
 0x69, 0x6d, 0x69, 0x74, 0x18, 0x61, 0x63, 0x74,
 0x75, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74,
 0x68, 0x56, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32,
 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x20,
 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x20, 0x73,
 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65,
 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2c,
 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x62, 0x65,
 0x63, 0x68, 0x33, 0x32, 0x2e, 0x65, 0x6e, 0x63,
 0x6f, 0x64, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x64,
 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
 0x20, 0x62, 0x65, 0x20, 0x61, 0x72, 0x72, 0x61,
 0x79, 0x20, 0x6f, 0x66, 0x20, 0x6e, 0x75, 0x6d,
 0x62, 0x65, 0x72, 0x73, 0x2c, 0x20, 0x6e, 0x6f,
 0x74, 0x20, 0x0e, 0x4c, 0x65, 0x6e, 0x67, 0x74,
 0x68, 0x20, 0x1e, 0x20, 0x65, 0x78, 0x63, 0x65,
 0x65, 0x64, 0x73, 0x20, 0x6c, 0x69, 0x6d, 0x69,
 0x74, 0x20, 0x16, 0x74, 0x6f, 0x4c, 0x6f, 0x77,
 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x0e, 0x6c,
 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x10, 0x73,
 0x65, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x06,
 0x73, 0x75, 0x6d, 0x54, 0x62, 0x65, 0x63, 0x68,
 0x33, 0x32, 0x2e, 0x64, 0x65, 0x63, 0x6f, 0x64,
 0x65, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20,
 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62,
 0x65, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
 0x2c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x2a, 0x57,
 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x72,
 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x65, 0x6e, 0x67,
 0x74, 0x68, 0x3a, 0x20, 0x04, 0x20, 0x28, 0x20,
 0x29, 0x2e, 0x20, 0x45, 0x78, 0x70, 0x65, 0x63,
 0x74, 0x65, 0x64, 0x20, 0x28, 0x38, 0x2e, 0x2e,
 0x4a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20,
 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20,
 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x63, 0x61, 0x73,
 0x65, 0x20, 0x6f, 0x72, 0x20, 0x75, 0x70, 0x70,
 0x65, 0x72, 0x63, 0x61, 0x73, 0x65, 0x16, 0x6c,
 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
 0x4f, 0x66, 0x6e, 0x4c, 0x65, 0x74, 0x74, 0x65,
 0x72, 0x20, 0x22, 0x31, 0x22, 0x20, 0x6d, 0x75,
 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72,
 0x65, 0x73, 0x65, 0x6e, 0x74, 0x20, 0x62, 0x65,
 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x72,
 0x65, 0x66, 0x69, 0x78, 0x20, 0x61, 0x6e, 0x64,
 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x6e,
 0x6c, 0x79, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x20,
 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20,
 0x61, 0x74, 0x20, 0x6c, 0x65, 0x61, 0x73, 0x74,
 0x20, 0x36, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61,
 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6c, 0x6f,
 0x6e, 0x67, 0x10, 0x65, 0x6e, 0x64, 0x73, 0x57,
 0x69, 0x74, 0x68, 0x28, 0x49, 0x6e, 0x76, 0x61,
 0x6c, 0x69, 0x64, 0x20, 0x63, 0x68, 0x65, 0x63,
 0x6b, 0x73, 0x75, 0x6d, 0x20, 0x69, 0x6e, 0x20,
 0x18, 0x3a, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63,
 0x74, 0x65, 0x64, 0x20, 0x22, 0x02, 0x22, 0x16,
 0x54, 0x65, 0x78, 0x74, 0x44, 0x65, 0x63, 0x6f,
 0x64, 0x65, 0x72, 0x16, 0x54, 0x65, 0x78, 0x74,
 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x42,
 0x68, 0x65, 0x78, 0x2e, 0x64, 0x65, 0x63, 0x6f,
 0x64, 0x65, 0x3a, 0x20, 0x65, 0x78, 0x70, 0x65,
 0x63, 0x74, 0x65, 0x64, 0x20, 0x73, 0x74, 0x72,
 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x67, 0x6f, 0x74,
 0x20, 0x1a, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20,
 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x0e,
 0x45, 0x44, 0x32, 0x35, 0x35, 0x31, 0x39, 0x12,
 0x53, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x4b,
 0x31, 0x06, 0x65, 0x6e, 0x76, 0x2c, 0x70, 0x72,
 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f,
 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
 0x74, 0x5f, 0x69, 0x64, 0x1a, 0x72, 0x65, 0x61,
 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
 0x65, 0x72, 0x20, 0x61, 0x74, 0x74, 0x61, 0x63,
 0x68, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6f,
 0x73, 0x69, 0x74, 0x06, 0x72, 0x65, 0x74, 0x18,
 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
 0x72, 0x65, 0x61, 0x64, 0x24, 0x63, 0x75, 0x72,
 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63,
 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x0a,
 0x65, 0x78, 0x69, 0x73, 0x74, 0x1a, 0x73, 0x74,
 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x72,
 0x69, 0x74, 0x65, 0x1e, 0x70, 0x72, 0x69, 0x76,
 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
 0x69, 0x6f, 0x6e, 0x1e, 0x70, 0x61, 0x79, 0x61,
 0x62, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
 0x69, 0x6f, 0x6e, 0x1c, 0x6f, 0x72, 0x69, 0x67,
 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68,
 0x6f, 0x64, 0x26, 0x46, 0x75, 0x6e, 0x63, 0x74,
 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x70,
 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x46,
 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20,
 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x70,
 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x16, 0x72,
 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x6e,
 0x69, 0x74, 0x0e, 0x5f, 0x63, 0x72, 0x65, 0x61,
 0x74, 0x65, 0x12, 0x5f, 0x67, 0x65, 0x74, 0x53,
 0x74, 0x61, 0x74, 0x65, 0x1c, 0x5f, 0x73, 0x61,
 0x76, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x72,
 0x61, 0x67, 0x65, 0x10, 0x5f, 0x67, 0x65, 0x74,
 0x41, 0x72, 0x67, 0x73, 0x14, 0x5f, 0x73, 0x65,
 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18,
 0x5f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61,
 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x5f, 0x72, 0x65,
 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
 0x74, 0x18, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
 0x72, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x72,
 0x61, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x0a,
 0x53, 0x54, 0x41, 0x54, 0x45, 0x06, 0x6f, 0x62,
 0x6a, 0x0a, 0x70, 0x61, 0x72, 0x73, 0x65, 0x04,
 0x7b, 0x7d, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e,
 0x67, 0x69, 0x66, 0x79, 0x16, 0x63, 0x6c, 0x61,
 0x73, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
 0x16, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4f, 0x62,
 0x6a, 0x65, 0x63, 0x74, 0x08, 0x69, 0x74, 0x65,
 0x6d, 0x16, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69,
 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x73, 0x65,
 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x0c,
 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x06, 0x6d,
 0x73, 0x67, 0x16, 0x72, 0x65, 0x63, 0x65, 0x69,
 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x63,
 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x53, 0x74, 0x72,
 0x69, 0x6e, 0x67, 0x02, 0x5b, 0x0c, 0x20, 0x66,
 0x72, 0x6f, 0x6d, 0x20, 0x08, 0x20, 0x74, 0x6f,
 0x20, 0x04, 0x5d, 0x20, 0x02, 0x20, 0x0c, 0x5f,
 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x63,
 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x0a,
 0x5f, 0x61, 0x72, 0x67, 0x73, 0x0e, 0x5f, 0x72,
 0x65, 0x73, 0x75, 0x6c, 0x74, 0x38, 0x43, 0x6f,
 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x20, 0x6d,
 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x69,
 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
 0x65, 0x64, 0x16, 0x4e, 0x65, 0x61, 0x72, 0x50,
 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x10, 0x6f,
 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18,
 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65,
 0x74, 0x75, 0x72, 0x6e, 0x0f, 0xbc, 0x03, 0x00,
 0x02, 0x00, 0x33, 0xbe, 0x03, 0x00, 0x32, 0xc0,
 0x03, 0x00, 0x00, 0x0e, 0x00, 0x06, 0x01, 0xa0,
 0x01, 0x00, 0x02, 0x00, 0x09, 0x34, 0x2d, 0x9d,
 0x07, 0x02, 0xc2, 0x03, 0x02, 0x00, 0x30, 0xec,
 0x01, 0x03, 0x01, 0x70, 0xc4, 0x03, 0x00, 0x01,
 0xc6, 0x03, 0x01, 0x01, 0xc8, 0x03, 0x02, 0x01,
 0xca, 0x03, 0x03, 0x01, 0xcc, 0x03, 0x04, 0x01,
 0xce, 0x03, 0x05, 0x01, 0xb6, 0x01, 0x06, 0x01,
 0xd0, 0x03, 0x07, 0x01, 0xd2, 0x03, 0x08, 0x01,
 0xd4, 0x03, 0x09, 0x01, 0xd6, 0x03, 0x0a, 0x0d,
 0xd8, 0x03, 0x0b, 0x0d, 0xda, 0x03, 0x0c, 0x01,
 0xdc, 0x03, 0x0d, 0x01, 0xde, 0x03, 0x0e, 0x01,
 0xe0, 0x03, 0x0f, 0x01, 0xe2, 0x03, 0x10, 0x0d,
 0xe4, 0x03, 0x11, 0x0d, 0xe6, 0x03, 0x12, 0x0d,
 0xe8, 0x03, 0x13, 0x0d, 0xea, 0x03, 0x14, 0x0d,
 0xec, 0x03, 0x15, 0x0d, 0xee, 0x03, 0x16, 0x0d,
 0xf0, 0x03, 0x17, 0x0d, 0xf2, 0x03, 0x18, 0x0d,
 0xf4, 0x03, 0x19, 0x0d, 0xf6, 0x03, 0x1a, 0x01,
 0xf8, 0x03, 0x1b, 0x01, 0xfa, 0x03, 0x1c, 0x01,
 0xfc, 0x03, 0x1d, 0x0d, 0xfe, 0x03, 0x1e, 0x0d,
 0x80, 0x04, 0x1f, 0x0d, 0x82, 0x04, 0x20, 0x01,
 0x84, 0x04, 0x21, 0x0d, 0x86, 0x04, 0x22, 0x0d,
 0x88, 0x04, 0x23, 0x01, 0x8a, 0x04, 0x24, 0x01,
 0x8c, 0x04, 0x25, 0x01, 0x8e, 0x04, 0x26, 0x01,
 0xb0, 0x01, 0x27, 0x01, 0x90, 0x04, 0x28, 0x01,
 0x92, 0x04, 0x29, 0x01, 0x94, 0x04, 0x2a, 0x01,
 0x96, 0x04, 0x2b, 0x01, 0x98, 0x04, 0x2c, 0x01,
 0x9a, 0x04, 0x2d, 0x01, 0x9c, 0x04, 0x2e, 0x01,
 0x9e, 0x04, 0x2f, 0x01, 0xa0, 0x04, 0x30, 0x01,
 0xc2, 0x03, 0x31, 0x09, 0xc0, 0x03, 0x32, 0x01,
 0xbe, 0x03, 0x33, 0x01, 0x08, 0x69, 0x83, 0x00,
 0x00, 0x00, 0xc0, 0x00, 0xe1, 0xc0, 0x03, 0xe4,
 0xc0, 0x04, 0x5f, 0x04, 0x00, 0xc0, 0x05, 0x5f,
 0x05, 0x00, 0xc0, 0x06, 0x5f, 0x06, 0x00, 0xc0,
 0x07, 0x5f, 0x07, 0x00, 0xc0, 0x08, 0x5f, 0x08,
 0x00, 0xc0, 0x09, 0x5f, 0x09, 0x00, 0xc0, 0x0c,
 0x5f, 0x0c, 0x00, 0xc0, 0x0d, 0x5f, 0x0d, 0x00,
 0xc0, 0x0e, 0x5f, 0x0e, 0x00, 0xc0, 0x0f, 0x5f,
 0x0f, 0x00, 0xc0, 0x14, 0x5f, 0x1a, 0x00, 0xc0,
 0x15, 0x5f, 0x1b, 0x00, 0xc0, 0x16, 0x5f, 0x1c,
 0x00, 0xc0, 0x1f, 0x5f, 0x23, 0x00, 0xc0, 0x20,
 0x5f, 0x24, 0x00, 0xc0, 0x21, 0x5f, 0x25, 0x00,
 0xc0, 0x22, 0x5f, 0x26, 0x00, 0xc0, 0x23, 0x5f,
 0x27, 0x00, 0xc0, 0x24, 0x5f, 0x28, 0x00, 0xc0,
 0x25, 0x5f, 0x29, 0x00, 0xc0, 0x26, 0x5f, 0x2a,
 0x00, 0xc0, 0x27, 0x5f, 0x2b, 0x00, 0xc0, 0x2b,
 0x5f, 0x32, 0x00, 0xc0, 0x2c, 0x5f, 0x33, 0x00,
 0x29, 0xc0, 0x01, 0xde, 0x11, 0xeb, 0x04, 0x0e,
 0x0b, 0xe6, 0xef, 0x0e, 0xc0, 0x02, 0xdf, 0x11,
 0xeb, 0x04, 0x0e, 0x0b, 0xe7, 0xef, 0x0e, 0xc0,
 0x0a, 0x4d, 0xeb, 0x00, 0x00, 0x00, 0x5f, 0x0a,
 0x00, 0xc0, 0x0b, 0x4d, 0xec, 0x00, 0x00, 0x00,
 0x5f, 0x0b, 0x00, 0x5e, 0x04, 0x00, 0x5e, 0x0e,
 0x00, 0xb9, 0xef, 0x5e, 0x05, 0x00, 0x04, 0x11,
 0x01, 0x00, 0x00, 0xef, 0x5e, 0x06, 0x00, 0xc1,
 0xef, 0xf1, 0x5f, 0x10, 0x00, 0x5e, 0x04, 0x00,
 0x5e, 0x0e, 0x00, 0xba, 0xef, 0x5e, 0x05, 0x00,
 0x04, 0x12, 0x01, 0x00, 0x00, 0xef, 0x5e, 0x07,
 0x00, 0xba, 0xef, 0x5e, 0x06, 0x00, 0xc1, 0xef,
 0x22, 0x04, 0x00, 0x5f, 0x11, 0x00, 0x5e, 0x04,
 0x00, 0x5e, 0x0e, 0x00, 0xba, 0xef, 0x5e, 0x05,
 0x00, 0x04, 0x13, 0x01, 0x00, 0x00, 0xef, 0x5e,
 0x07, 0x00, 0xba, 0xef, 0x5e, 0x06, 0x00, 0xc1,
 0xef, 0x22, 0x04, 0x00, 0x0e, 0x5e, 0x04, 0x00,
 0x5e, 0x0e, 0x00, 0xba, 0xef, 0x5e, 0x05, 0x00,
 0x04, 0x14, 0x01, 0x00, 0x00, 0xef, 0x5e, 0x06,
 0x00, 0xc1, 0xef, 0x5e, 0x08, 0x00, 0xc0, 0x10,
 0xef, 0x22, 0x04, 0x00, 0x0e, 0x5e, 0x04, 0x00,
 0x5e, 0x0e, 0x00, 0xbb, 0xef, 0x5e, 0x05, 0x00,
 0x04, 0x15, 0x01, 0x00, 0x00, 0xef, 0x5e, 0x07,
 0x00, 0xbb, 0xef, 0x5e, 0x06, 0x00, 0xc1, 0xef,
 0x22, 0x04, 0x00, 0x5f, 0x12, 0x00, 0x5e, 0x04,
 0x00, 0x5e, 0x0e, 0x00, 0xbb, 0xef, 0x5e, 0x05,
 0x00, 0x04, 0x16, 0x01, 0x00, 0x00, 0xef, 0x5e,
 0x07, 0x00, 0xbb, 0xef, 0x5e, 0x06, 0x00, 0xc1,
 0xef, 0x22, 0x04, 0x00, 0x5f, 0x13, 0x00, 0xc0,
 0x11, 0x4d, 0xf5, 0x00, 0x00, 0x00, 0x5f, 0x14,
 0x00, 0x65, 0x14, 0x00, 0x04, 0x17, 0x01, 0x00,
 0x00, 0xef, 0x5f, 0x15, 0x00, 0x65, 0x14, 0x00,
 0x04, 0x18, 0x01, 0x00, 0x00, 0xef, 0x0e, 0x65,
 0x14, 0x00, 0x04, 0x19, 0x01, 0x00, 0x00, 0xef,
 0x0e, 0xb5, 0xb7, 0xb8, 0xba, 0xbb, 0xbc, 0xbd,
 0x09, 0xbd, 0x0a, 0xbd, 0x0b, 0x26, 0x09, 0x00,
 0x5f, 0x16, 0x00, 0x0b, 0xc0, 0x12, 0x54, 0x1a,
 0x01, 0x00, 0x00, 0x04, 0xc0, 0x13, 0x54, 0x1b,
 0x01, 0x00, 0x00, 0x04, 0x5f, 0x17, 0x00, 0x5e,
 0x04, 0x00, 0x5e, 0x05, 0x00, 0x04, 0x1c, 0x01,
 0x00, 0x00, 0xef, 0x5e, 0x06, 0x00, 0xc1, 0xef,
 0xf0, 0x5f, 0x18, 0x00, 0x01, 0xb2, 0x57, 0x6a,
 0x3b, 0x01, 0x6d, 0x8e, 0x50, 0x26, 0x01, 0xfa,
 0x19, 0xa1, 0x1e, 0x01, 0xdd, 0x33, 0x42, 0x3d,
 0x01, 0xb3, 0x62, 0x14, 0x2a, 0x26, 0x05, 0x00,
 0x5f, 0x19, 0x00, 0x5e, 0x1c, 0x00, 0x04, 0x1d,
 0x01, 0x00, 0x00, 0xef, 0x0e, 0x5e, 0x1c, 0x00,
 0x04, 0x1e, 0x01, 0x00, 0x00, 0xef, 0x0e, 0x0b,
 0xc0, 0x17, 0x4d, 0x1a, 0x01, 0x00, 0x00, 0x4c,
 0x1a, 0x01, 0x00, 0x00, 0xc0, 0x18, 0x4d, 0x1b,
 0x01, 0x00, 0x00, 0x4c, 0x1b, 0x01, 0x00, 0x00,
 0x5f, 0x1d, 0x00, 0x5e, 0x04, 0x00, 0x5e, 0x0e,
 0x00, 0xb9, 0xef, 0x5e, 0x05, 0x00, 0x04, 0x1f,
 0x01, 0x00, 0x00, 0xef, 0x5e, 0x06, 0x00, 0xc1,
 0xef, 0x5e, 0x08, 0x00, 0xc0, 0x19, 0xef, 0x22,
 0x04, 0x00, 0x5f, 0x1e, 0x00, 0x0b, 0x65, 0x1d,
 0x00, 0x4c, 0xfe, 0x00, 0x00, 0x00, 0x65, 0x1e,
 0x00, 0x4c, 0xff, 0x00, 0x00, 0x00, 0x65, 0x10,
 0x00, 0x4c, 0xf1, 0x00, 0x00, 0x00, 0x65, 0x11,
 0x00, 0x4c, 0xf2, 0x00, 0x00, 0x00, 0x65, 0x12,
 0x00, 0x4c, 0xf3, 0x00, 0x00, 0x00, 0x65, 0x13,
 0x00, 0x4c, 0xf4, 0x00, 0x00, 0x00, 0x65, 0x15,
 0x00, 0x4c, 0xf6, 0x00, 0x00, 0x00, 0x65, 0x17,
 0x00, 0x4c, 0xf8, 0x00, 0x00, 0x00, 0x5f, 0x1f,
 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x42, 0x5c,
 0x00, 0x00, 0x00, 0x38, 0x92, 0x00, 0x00, 0x00,
 0x42, 0x21, 0x01, 0x00, 0x00, 0x65, 0x1f, 0x00,
 0x24, 0x01, 0x00, 0x42, 0x5b, 0x00, 0x00, 0x00,
 0x04, 0x22, 0x01, 0x00, 0x00, 0x24, 0x01, 0x00,
 0x24, 0x01, 0x00, 0x0e, 0xc0, 0x1a, 0x5e, 0x20,
 0x00, 0x11, 0xeb, 0x06, 0x0e, 0x0b, 0x60, 0x20,
 0x00, 0xef, 0x0e, 0xbf, 0x1b, 0xbf, 0x1c, 0x9f,
 0xbf, 0x1d, 0x9e, 0x5f, 0x21, 0x00, 0x65, 0x21,
 0x00, 0xbf, 0x1e, 0x9e, 0x5f, 0x22, 0x00, 0x5e,
 0x2b, 0x00, 0x0b, 0xef, 0x5f, 0x2c, 0x00, 0x5e,
 0x29, 0x00, 0x0b, 0xef, 0x5f, 0x2d, 0x00, 0x5e,
 0x2a, 0x00, 0x0b, 0xef, 0x5f, 0x2e, 0x00, 0x5e,
 0x2c, 0x00, 0x61, 0x00, 0x00, 0x06, 0x61, 0x01,
 0x00, 0xbf, 0x28, 0x56, 0xe1, 0x00, 0x00, 0x00,
 0x00, 0xc0, 0x29, 0x54, 0xdf, 0x00, 0x00, 0x00,
 0x00, 0xc0, 0x2a, 0x54, 0xe0, 0x00, 0x00, 0x00,
 0x00, 0x06, 0xca, 0x0e, 0xcd, 0x68, 0x01, 0x00,
 0x5f, 0x30, 0x00, 0xdd, 0x5e, 0x30, 0x00, 0x41,
 0x3b, 0x00, 0x00, 0x00, 0x04, 0xdf, 0x00, 0x00,
 0x00, 0x5e, 0x2d, 0x00, 0x26, 0x01, 0x00, 0x38,
 0x92, 0x00, 0x00, 0x00, 0x42, 0x66, 0x00, 0x00,
 0x00, 0x5e, 0x30, 0x00, 0x41, 0x3b, 0x00, 0x00,
 0x00, 0x04, 0xdf, 0x00, 0x00, 0x00, 0x24, 0x02,
 0x00, 0x5e, 0x30, 0x00, 0x41, 0x3b, 0x00, 0x00,
 0x00, 0x22, 0x05, 0x00, 0x0e, 0xdd, 0x5e, 0x30,
 0x00, 0x41, 0x3b, 0x00, 0x00, 0x00, 0x04, 0xe0,
 0x00, 0x00, 0x00, 0x5e, 0x2e, 0x00, 0x26, 0x01,
 0x00, 0x38, 0x92, 0x00, 0x00, 0x00, 0x42, 0x66,
 0x00, 0x00, 0x00, 0x5e, 0x30, 0x00, 0x41, 0x3b,
 0x00, 0x00, 0x00, 0x04, 0xe0, 0x00, 0x00, 0x00,
 0x24, 0x02, 0x00, 0x5e, 0x30, 0x00, 0x41, 0x3b,
 0x00, 0x00, 0x00, 0x22, 0x05, 0x00, 0x0e, 0x5e,
 0x30, 0x00, 0x60, 0x2f, 0x00, 0xef, 0x11, 0xeb,
 0x05, 0x0e, 0x5e, 0x2f, 0x00, 0x5f, 0x31, 0x00,
 0x29, 0xbc, 0x03, 0x01, 0x4f, 0x01, 0x00, 0x85,
 0x01, 0x48, 0x00, 0x0b, 0x0e, 0x00, 0x0b, 0x92,
 0x02, 0x36, 0x00, 0x0a, 0x92, 0x01, 0x85, 0xa8,
 0x9e, 0xa3, 0xa8, 0xa9, 0x36, 0x3f, 0x35, 0x35,
 0x5d, 0x00, 0x01, 0x14, 0x00, 0x08, 0x24, 0x2c,
 0x12, 0x6c, 0x00, 0x1f, 0xc8, 0x01, 0x35, 0x35,
 0x08, 0x3f, 0x3f, 0x12, 0x82, 0x30, 0x08, 0x2b,
 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x44,
 0x00, 0x21, 0x0e, 0x4f, 0x3a, 0x00, 0x09, 0xda,
 0x01, 0x00, 0x2a, 0x1a, 0x00, 0x08, 0x08, 0x2c,
 0x00, 0x8f, 0x01, 0x52, 0x0e, 0x43, 0x06, 0x01,
 0xc4, 0x03, 0x05, 0x01, 0x05, 0x05, 0x00, 0x02,
 0xc8, 0x01, 0x06, 0xac, 0x01, 0x00, 0x01, 0x40,
 0xc6, 0x04, 0x00, 0x01, 0x40, 0xc8, 0x04, 0x00,
 0x01, 0x00, 0xca, 0x04, 0x00, 0x01, 0x40, 0xcc,
 0x04, 0x00, 0x01, 0x00, 0xce, 0x04, 0x00, 0x00,
 0x40, 0x0b, 0xc9, 0x38, 0x92, 0x00, 0x00, 0x00,
 0x42, 0x21, 0x01, 0x00, 0x00, 0xd4, 0x24, 0x01,
 0x00, 0x42, 0x28, 0x01, 0x00, 0x00, 0xc0, 0x00,
 0x24, 0x01, 0x00, 0x0e, 0xc5, 0xc5, 0x41, 0x3f,
 0x00, 0x00, 0x00, 0x96, 0x96, 0x43, 0x3f, 0x00,
 0x00, 0x00, 0xc5, 0xc5, 0x41, 0x3d, 0x00, 0x00,
 0x00, 0x96, 0x96, 0x43, 0x3d, 0x00, 0x00, 0x00,
 0x04, 0x40, 0x00, 0x00, 0x00, 0xc5, 0xa8, 0x11,
 0xeb, 0x08, 0x0e, 0xc5, 0x41, 0x29, 0x01, 0x00,
 0x00, 0xea, 0x08, 0xc5, 0x0a, 0x43, 0x3e, 0x00,
 0x00, 0x00, 0xd3, 0x42, 0x2a, 0x01, 0x00, 0x00,
 0x24, 0x00, 0x00, 0x42, 0x2b, 0x01, 0x00, 0x00,
 0x24, 0x00, 0x00, 0x42, 0x2c, 0x01, 0x00, 0x00,
 0xc0, 0x01, 0xc5, 0x24, 0x02, 0x00, 0xc9, 0x5b,
 0x04, 0x00, 0xea, 0x38, 0xc5, 0x41, 0x29, 0x01,
 0x00, 0x00, 0x06, 0xac, 0xea, 0x2e, 0xc5, 0xc5,
 0x41, 0x29, 0x01, 0x00, 0x00, 0xea, 0x14, 0xc5,
 0x41, 0x29, 0x01, 0x00, 0x00, 0x42, 0x09, 0x01,
 0x00, 0x00, 0x5b, 0x04, 0x00, 0x24, 0x01, 0x00,
 0xec, 0x02, 0x06, 0x43, 0x40, 0x00, 0x00, 0x00,
 0xc5, 0x38, 0x45, 0x00, 0x00, 0x00, 0x43, 0x29,
 0x01, 0x00, 0x00, 0xc5, 0x41, 0x29, 0x01, 0x00,
 0x00, 0xf2, 0xea, 0x14, 0x38, 0x92, 0x00, 0x00,
 0x00, 0x42, 0x65, 0x00, 0x00, 0x00, 0xd1, 0xd2,
 0xc5, 0x24, 0x03, 0x00, 0x0e, 0x07, 0xc9, 0xc5,
 0x28, 0xbc, 0x03, 0x01, 0x10, 0x03, 0x0d, 0x63,
 0x21, 0x49, 0x4a, 0x62, 0x28, 0x72, 0x27, 0x4e,
 0xad, 0x3c, 0x30, 0x58, 0x0f, 0x0e, 0x43, 0x06,
 0x01, 0x00, 0x01, 0x00, 0x01, 0x04, 0x02, 0x00,
 0x08, 0x01, 0xda, 0x04, 0x00, 0x01, 0x00, 0xce,
 0x04, 0x00, 0x01, 0xca, 0x04, 0x03, 0x03, 0xdd,
 0xd1, 0x71, 0xde, 0xd1, 0x47, 0x49, 0x29, 0xbc,
 0x03, 0x03, 0x02, 0x03, 0x26, 0x0e, 0x43, 0x06,
 0x01, 0x00, 0x02, 0x00, 0x02, 0x04, 0x02, 0x00,
 0x0b, 0x02, 0xce, 0x04, 0x00, 0x01, 0x00, 0xdc,
 0x04, 0x00, 0x01, 0x00, 0xac, 0x01, 0x00, 0x03,
 0xc6, 0x04, 0x01, 0x03, 0xd2, 0xdd, 0xde, 0xd1,
 0xf1, 0x11, 0xeb, 0x03, 0x0e, 0xd1, 0x28, 0xbc,
 0x03, 0x0d, 0x01, 0x03, 0x0e, 0x43, 0x06, 0x01,
 0x00, 0x01, 0x00, 0x01, 0x05, 0x00, 0x00, 0x34,
 0x01, 0xc6, 0x03, 0x00, 0x01, 0x00, 0xd1, 0xd1,
 0x04, 0x2f, 0x01, 0x00, 0x00, 0x71, 0xb5, 0x16,
 0x49, 0x04, 0x2f, 0x01, 0x00, 0x00, 0x49, 0xd1,
 0xd1, 0x04, 0x30, 0x01, 0x00, 0x00, 0x71, 0xb6,
 0x16, 0x49, 0x04, 0x30, 0x01, 0x00, 0x00, 0x49,
 0xd1, 0xd1, 0x04, 0x31, 0x01, 0x00, 0x00, 0x71,
 0xb7, 0x16, 0x49, 0x04, 0x31, 0x01, 0x00, 0x00,
 0x49, 0x29, 0xbc, 0x03, 0x20, 0x04, 0x03, 0x58,
 0x58, 0x58, 0x0e, 0x43, 0x06, 0x01, 0x00, 0x01,
 0x00, 0x01, 0x05, 0x00, 0x00, 0x23, 0x01, 0xc8,
 0x03, 0x00, 0x01, 0x00, 0xd1, 0xd1, 0x04, 0x31,
 0x01, 0x00, 0x00, 0x71, 0xb5, 0x16, 0x49, 0x04,
 0x31, 0x01, 0x00, 0x00, 0x49, 0xd1, 0xd1, 0x04,
 0x2f, 0x01, 0x00, 0x00, 0x71, 0xb6, 0x16, 0x49,
 0x04, 0x2f, 0x01, 0x00, 0x00, 0x49, 0x29, 0xbc,
 0x03, 0x28, 0x03, 0x03, 0x58, 0x58, 0x0e, 0x43,
 0x06, 0x01, 0xca, 0x03, 0x01, 0x00, 0x01, 0x05,
 0x00, 0x00, 0x2a, 0x01, 0xe4, 0x04, 0x00, 0x01,
 0x00, 0x38, 0x95, 0x00, 0x00, 0x00, 0x42, 0x33,
 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0x96,
 0xea, 0x19, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x34, 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00,
 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0x29, 0xbc, 0x03, 0x2e, 0x02, 0x03,
 0xd0, 0x0e, 0x41, 0x06, 0x01, 0xcc, 0x03, 0x01,
 0x03, 0x00, 0x04, 0x00, 0x03, 0x5e, 0x04, 0xea,
 0x04, 0x00, 0x01, 0x00, 0xec, 0x04, 0x01, 0x00,
 0x70, 0xb4, 0x04, 0x01, 0x01, 0x30, 0xb6, 0x04,
 0x01, 0x02, 0x30, 0x0d, 0x00, 0x00, 0xd5, 0x61,
 0x02, 0x00, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00,
 0xc0, 0x00, 0x4d, 0x36, 0x01, 0x00, 0x00, 0xc9,
 0x38, 0x93, 0x00, 0x00, 0x00, 0x42, 0x7a, 0x00,
 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0x42, 0x2b,
 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0x42, 0x2c,
 0x01, 0x00, 0x00, 0xc0, 0x01, 0x38, 0x45, 0x00,
 0x00, 0x00, 0x24, 0x02, 0x00, 0xca, 0xd1, 0x42,
 0x2c, 0x01, 0x00, 0x00, 0xc0, 0x02, 0x38, 0x45,
 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, 0xcb, 0x0b,
 0x62, 0x01, 0x00, 0x4c, 0x1a, 0x01, 0x00, 0x00,
 0x62, 0x02, 0x00, 0x4c, 0x1b, 0x01, 0x00, 0x00,
 0x28, 0xbc, 0x03, 0x32, 0x07, 0x44, 0x2c, 0xc1,
 0x58, 0x08, 0x2b, 0x2b, 0x0e, 0x42, 0x06, 0x01,
 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x01, 0x03,
 0x02, 0xee, 0x04, 0x00, 0x01, 0x40, 0xf0, 0x04,
 0x00, 0x01, 0x40, 0xc0, 0x00, 0x28, 0xbc, 0x03,
 0x33, 0x00, 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01,
 0x00, 0x01, 0x03, 0x02, 0x00, 0x07, 0x01, 0xf2,
 0x04, 0x00, 0x01, 0x00, 0xee, 0x04, 0x00, 0x03,
 0xf0, 0x04, 0x01, 0x03, 0xdd, 0xde, 0xd1, 0xef,
 0x23, 0x01, 0x00, 0xbc, 0x03, 0x33, 0x00, 0x0e,
 0x42, 0x06, 0x01, 0x00, 0x02, 0x00, 0x02, 0x03,
 0x01, 0x00, 0x16, 0x02, 0xf4, 0x04, 0x00, 0x01,
 0x00, 0xf6, 0x04, 0x00, 0x01, 0x00, 0xec, 0x04,
 0x00, 0x0d, 0xd1, 0xea, 0x0d, 0x65, 0x00, 0x00,
 0xd1, 0xd2, 0x41, 0x1a, 0x01, 0x00, 0x00, 0xf0,
 0x28, 0xd2, 0x41, 0x1a, 0x01, 0x00, 0x00, 0x28,
 0xbc, 0x03, 0x35, 0x00, 0x0e, 0x42, 0x06, 0x01,
 0x00, 0x02, 0x00, 0x02, 0x03, 0x01, 0x00, 0x16,
 0x02, 0xf4, 0x04, 0x00, 0x01, 0x00, 0xf6, 0x04,
 0x00, 0x01, 0x00, 0xec, 0x04, 0x00, 0x0d, 0xd1,
 0xea, 0x0d, 0x65, 0x00, 0x00, 0xd1, 0xd2, 0x41,
 0x1b, 0x01, 0x00, 0x00, 0xf0, 0x28, 0xd2, 0x41,
 0x1b, 0x01, 0x00, 0x00, 0x28, 0xbc, 0x03, 0x36,
 0x00, 0x0e, 0x43, 0x06, 0x01, 0xce, 0x03, 0x01,
 0x00, 0x01, 0x02, 0x01, 0x02, 0x1a, 0x01, 0xce,
 0x03, 0x00, 0x01, 0x40, 0xca, 0x03, 0x03, 0x00,
 0x0b, 0xc0, 0x00, 0x4d, 0x1a, 0x01, 0x00, 0x00,
 0x4c, 0x1a, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x4d,
 0x1b, 0x01, 0x00, 0x00, 0x4c, 0x1b, 0x01, 0x00,
 0x00, 0x28, 0xbc, 0x03, 0x3d, 0x08, 0x03, 0x00,
 0x01, 0x10, 0x00, 0x0c, 0x12, 0x3f, 0x0e, 0x42,
 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x03, 0x02,
 0x01, 0x3d, 0x01, 0xf8, 0x04, 0x00, 0x01, 0x00,
 0xca, 0x03, 0x00, 0x00, 0xce, 0x03, 0x00, 0x03,
 0x38, 0x93, 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01,
 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0x96, 0x11,
 0xeb, 0x10, 0x0e, 0xd1, 0xe9, 0xea, 0x1c, 0xd1,
 0xb5, 0x47, 0x97, 0x04, 0x46, 0x00, 0x00, 0x00,
 0xac, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x3e, 0x01, 0x00, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0xd1, 0x42, 0x3f, 0x01, 0x00, 0x00,
 0xc0, 0x00, 0x25, 0x01, 0x00, 0xbc, 0x03, 0x3f,
 0x05, 0x03, 0xfd, 0x00, 0x06, 0x08, 0x0e, 0x42,
 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x02,
 0x00, 0x39, 0x01, 0xf6, 0x04, 0x00, 0x01, 0x00,
 0xca, 0x03, 0x00, 0x00, 0xce, 0x03, 0x01, 0x02,
 0xdd, 0xd1, 0xef, 0x0e, 0xd1, 0xb5, 0xa3, 0x11,
 0xeb, 0x06, 0x0e, 0xd1, 0xde, 0xe9, 0xa6, 0xea,
 0x25, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x40, 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00,
 0x00, 0xd1, 0x04, 0x41, 0x01, 0x00, 0x00, 0xde,
 0xe9, 0x04, 0x42, 0x01, 0x00, 0x00, 0x24, 0x04,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0xde, 0xd1, 0x47,
 0x28, 0xbc, 0x03, 0x41, 0x03, 0x03, 0x17, 0xf8,
 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01,
 0x03, 0x01, 0x01, 0x3d, 0x01, 0xb0, 0x01, 0x00,
 0x01, 0x00, 0xce, 0x03, 0x00, 0x03, 0x38, 0x93,
 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01, 0x00, 0x00,
 0xd1, 0x24, 0x01, 0x00, 0x96, 0x11, 0xeb, 0x10,
 0x0e, 0xd1, 0xe9, 0xea, 0x1c, 0xd1, 0xb5, 0x47,
 0x97, 0x04, 0x48, 0x00, 0x00, 0x00, 0xac, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x43, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0xd1, 0x42, 0x3f, 0x01, 0x00, 0x00, 0xc0, 0x00,
 0x25, 0x01, 0x00, 0xbc, 0x03, 0x47, 0x05, 0x03,
 0xfd, 0x00, 0x06, 0x0a, 0x0e, 0x42, 0x06, 0x01,
 0x00, 0x01, 0x01, 0x01, 0x07, 0x01, 0x00, 0x59,
 0x02, 0x88, 0x05, 0x00, 0x01, 0x00, 0xae, 0x01,
 0x01, 0x00, 0x30, 0xce, 0x03, 0x00, 0x02, 0x61,
 0x00, 0x00, 0xd1, 0x97, 0x04, 0x48, 0x00, 0x00,
 0x00, 0xac, 0xea, 0x19, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x45, 0x01, 0x00, 0x00, 0x42,
 0x5c, 0x00, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00,
 0x21, 0x01, 0x00, 0x2f, 0xdd, 0x42, 0x46, 0x01,
 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0xc9, 0x62,
 0x00, 0x00, 0xb4, 0xab, 0xea, 0x1f, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x11, 0x04, 0x47, 0x01, 0x00,
 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1, 0x04,
 0x48, 0x01, 0x00, 0x00, 0xdd, 0x24, 0x03, 0x00,
 0x21, 0x01, 0x00, 0x2f, 0x62, 0x00, 0x00, 0x28,
 0xbc, 0x03, 0x49, 0x04, 0x12, 0xad, 0x3a, 0xbc,
 0x0e, 0x41, 0x06, 0x01, 0xb6, 0x01, 0x01, 0x01,
 0x00, 0x03, 0x00, 0x02, 0x3f, 0x02, 0x92, 0x05,
 0x00, 0x01, 0x40, 0x92, 0x05, 0x01, 0xff, 0xff,
 0xff, 0xff, 0x0f, 0x20, 0x61, 0x00, 0x00, 0xd1,
 0x11, 0xf2, 0xea, 0x04, 0x0e, 0xc1, 0xd9, 0xc9,
 0xd1, 0x97, 0x04, 0x48, 0x00, 0x00, 0x00, 0xac,
 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x4a, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00,
 0x2f, 0x0b, 0xc0, 0x00, 0x4d, 0x1a, 0x01, 0x00,
 0x00, 0x4c, 0x1a, 0x01, 0x00, 0x00, 0xc0, 0x01,
 0x4d, 0x1b, 0x01, 0x00, 0x00, 0x4c, 0x1b, 0x01,
 0x00, 0x00, 0x28, 0xbc, 0x03, 0x53, 0x09, 0x3f,
 0x80, 0x00, 0x01, 0x0e, 0x00, 0x0c, 0x08, 0x3f,
 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01, 0x01, 0x01,
 0x08, 0x01, 0x00, 0x70, 0x02, 0xf4, 0x01, 0x00,
 0x01, 0x00, 0xf6, 0x04, 0x03, 0x00, 0x20, 0x92,
 0x05, 0x00, 0x03, 0x38, 0x93, 0x00, 0x00, 0x00,
 0x42, 0x3d, 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01,
 0x00, 0x96, 0x11, 0xeb, 0x10, 0x0e, 0xd1, 0xe9,
 0xea, 0x1c, 0xd1, 0xb5, 0x47, 0x97, 0x04, 0x48,
 0x00, 0x00, 0x00, 0xac, 0xea, 0x10, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x11, 0x04, 0x4b, 0x01, 0x00,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x61, 0x00, 0x00,
 0xd1, 0x7d, 0xec, 0x28, 0xc9, 0x62, 0x00, 0x00,
 0x97, 0x04, 0x48, 0x00, 0x00, 0x00, 0xac, 0xea,
 0x1b, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x4c, 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00,
 0x00, 0x62, 0x00, 0x00, 0x24, 0x01, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0x80, 0x00, 0xea, 0xd6, 0x0e,
 0x83, 0xd1, 0x42, 0x5b, 0x00, 0x00, 0x00, 0xdd,
 0x25, 0x01, 0x00, 0xbc, 0x03, 0x56, 0x05, 0x03,
 0xfe, 0x00, 0x34, 0x04, 0x0e, 0x42, 0x06, 0x01,
 0x00, 0x01, 0x00, 0x01, 0x03, 0x01, 0x00, 0x23,
 0x01, 0x9a, 0x05, 0x00, 0x01, 0x00, 0x92, 0x05,
 0x00, 0x03, 0xd1, 0x97, 0x04, 0x48, 0x00, 0x00,
 0x00, 0xac, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x4e, 0x01, 0x00, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0xd1, 0x42, 0x5d, 0x00, 0x00,
 0x00, 0xdd, 0x25, 0x01, 0x00, 0xbc, 0x03, 0x5d,
 0x02, 0x03, 0x80, 0x0e, 0x41, 0x06, 0x01, 0xd0,
 0x03, 0x02, 0x02, 0x01, 0x03, 0x01, 0x02, 0x44,
 0x04, 0x9e, 0x05, 0x00, 0x01, 0x40, 0xa0, 0x05,
 0x00, 0x01, 0x40, 0x9e, 0x05, 0x01, 0xff, 0xff,
 0xff, 0xff, 0x0f, 0x20, 0xa0, 0x05, 0x01, 0x01,
 0x20, 0xca, 0x03, 0x03, 0x00, 0x61, 0x01, 0x00,
 0x61, 0x00, 0x00, 0xd1, 0xc9, 0xd2, 0x11, 0xf2,
 0xea, 0x08, 0x0e, 0x04, 0x51, 0x01, 0x00, 0x00,
 0xda, 0xca, 0xdd, 0xd1, 0xef, 0x0e, 0xd2, 0x97,
 0x04, 0x48, 0x00, 0x00, 0x00, 0xac, 0xea, 0x10,
 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0x52,
 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x0b,
 0xc0, 0x00, 0x54, 0x1a, 0x01, 0x00, 0x00, 0x04,
 0xc0, 0x01, 0x54, 0x1b, 0x01, 0x00, 0x00, 0x04,
 0x28, 0xbc, 0x03, 0x64, 0x0a, 0x6c, 0x17, 0x80,
 0x00, 0x01, 0x12, 0x00, 0x08, 0x1e, 0x2c, 0x0e,
 0x42, 0x07, 0x01, 0x00, 0x01, 0x01, 0x01, 0x08,
 0x02, 0x00, 0x7e, 0x02, 0xa6, 0x05, 0x00, 0x01,
 0x00, 0xf6, 0x04, 0x03, 0x00, 0x20, 0x9e, 0x05,
 0x00, 0x03, 0xa0, 0x05, 0x01, 0x03, 0x38, 0x93,
 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01, 0x00, 0x00,
 0xd1, 0x24, 0x01, 0x00, 0x96, 0x11, 0xeb, 0x10,
 0x0e, 0xd1, 0xe9, 0xea, 0x1c, 0xd1, 0xb5, 0x47,
 0x97, 0x04, 0x48, 0x00, 0x00, 0x00, 0xac, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x54, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0x61, 0x00, 0x00, 0xd1, 0x7d, 0xec, 0x28, 0xc9,
 0x62, 0x00, 0x00, 0x97, 0x04, 0x48, 0x00, 0x00,
 0x00, 0xac, 0xea, 0x1b, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x55, 0x01, 0x00, 0x00, 0x42,
 0x5c, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x24,
 0x01, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x80, 0x00,
 0xea, 0xd6, 0x0e, 0x83, 0xd1, 0xe9, 0xdd, 0x9a,
 0xbd, 0x08, 0x9c, 0xea, 0x0e, 0xd1, 0x42, 0x56,
 0x01, 0x00, 0x00, 0xde, 0x24, 0x01, 0x00, 0x0e,
 0xec, 0xeb, 0xd1, 0x28, 0xbc, 0x03, 0x68, 0x06,
 0x03, 0xfe, 0x00, 0x34, 0x04, 0x72, 0x0e, 0x42,
 0x07, 0x01, 0x00, 0x01, 0x02, 0x01, 0x08, 0x02,
 0x00, 0xca, 0x01, 0x03, 0xb0, 0x01, 0x00, 0x01,
 0x00, 0xf6, 0x04, 0x03, 0x02, 0x20, 0xae, 0x05,
 0x01, 0x00, 0x20, 0x9e, 0x05, 0x00, 0x03, 0xa0,
 0x05, 0x01, 0x03, 0x61, 0x01, 0x00, 0x38, 0x93,
 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01, 0x00, 0x00,
 0xd1, 0x24, 0x01, 0x00, 0x96, 0x11, 0xeb, 0x10,
 0x0e, 0xd1, 0xe9, 0xea, 0x1c, 0xd1, 0xb5, 0x47,
 0x97, 0x04, 0x48, 0x00, 0x00, 0x00, 0xac, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x54, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0x61, 0x00, 0x00, 0xd1, 0x7d, 0xec, 0x28, 0xc9,
 0x62, 0x00, 0x00, 0x97, 0x04, 0x48, 0x00, 0x00,
 0x00, 0xac, 0xea, 0x1b, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x58, 0x01, 0x00, 0x00, 0x42,
 0x5c, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x24,
 0x01, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x80, 0x00,
 0xea, 0xd6, 0x0e, 0x83, 0xd1, 0xe9, 0xca, 0x62,
 0x01, 0x00, 0xdd, 0x9a, 0xbd, 0x08, 0x9c, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x59, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0x62, 0x01, 0x00, 0xb5, 0xa5, 0xea, 0x32, 0xd1,
 0x62, 0x01, 0x00, 0xb6, 0x9e, 0x47, 0xde, 0xab,
 0xea, 0x27, 0x62, 0x01, 0x00, 0xb6, 0x9e, 0xdd,
 0x9a, 0xbd, 0x08, 0x9c, 0x96, 0xea, 0x10, 0x38,
 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0x5a, 0x01,
 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x62, 0x01,
 0x00, 0x90, 0x63, 0x01, 0x00, 0x0e, 0xec, 0xc9,
 0xd1, 0x42, 0x2a, 0x01, 0x00, 0x00, 0xb5, 0x62,
 0x01, 0x00, 0x25, 0x02, 0x00, 0xbc, 0x03, 0x72,
 0x0a, 0x12, 0xfe, 0x00, 0x34, 0x04, 0x12, 0x81,
 0x5d, 0x8f, 0x36, 0x0e, 0x43, 0x06, 0x01, 0xd2,
 0x03, 0x01, 0x00, 0x01, 0x03, 0x00, 0x02, 0x2d,
 0x01, 0xb6, 0x05, 0x00, 0x01, 0x40, 0xd1, 0xf5,
 0xeb, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x5c, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00,
 0x2f, 0x0b, 0xc0, 0x00, 0x4d, 0x1a, 0x01, 0x00,
 0x00, 0x4c, 0x1a, 0x01, 0x00, 0x00, 0xc0, 0x01,
 0x4d, 0x1b, 0x01, 0x00, 0x00, 0x4c, 0x1b, 0x01,
 0x00, 0x00, 0x28, 0xbc, 0x03, 0x84, 0x01, 0x05,
 0x03, 0x62, 0x08, 0x3f, 0x3f, 0x0e, 0x42, 0x06,
 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00,
 0x02, 0x01, 0xf4, 0x01, 0x00, 0x01, 0x00, 0xd1,
 0x28, 0xbc, 0x03, 0x87, 0x01, 0x00, 0x0e, 0x42,
 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x02, 0x01,
 0x00, 0x05, 0x01, 0x9a, 0x05, 0x00, 0x01, 0x00,
 0xb6, 0x05, 0x00, 0x03, 0xdd, 0xd1, 0x23, 0x01,
 0x00, 0xbc, 0x03, 0x88, 0x01, 0x00, 0x0e, 0x43,
 0x06, 0x01, 0xd4, 0x03, 0x03, 0x09, 0x03, 0x06,
 0x01, 0x01, 0xf1, 0x03, 0x0c, 0xa6, 0x05, 0x00,
 0x01, 0x00, 0xf4, 0x01, 0x00, 0x01, 0x40, 0x9a,
 0x05, 0x00, 0x01, 0x00, 0xba, 0x05, 0x01, 0x00,
 0x20, 0xbc, 0x05, 0x01, 0x01, 0x30, 0xf8, 0x04,
 0x01, 0x02, 0x30, 0xbe, 0x05, 0x06, 0x03, 0x20,
 0xd2, 0x01, 0x06, 0x04, 0x20, 0xf6, 0x04, 0x07,
 0x05, 0x20, 0xc0, 0x05, 0x08, 0x06, 0x30, 0xc2,
 0x05, 0x08, 0x07, 0x30, 0xf6, 0x04, 0x0f, 0x03,
 0x20, 0xca, 0x03, 0x03, 0x00, 0x61, 0x02, 0x00,
 0x61, 0x01, 0x00, 0x61, 0x00, 0x00, 0xd2, 0xb7,
 0xa3, 0xea, 0x1e, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x62, 0x01, 0x00, 0x00, 0x42, 0x5c,
 0x00, 0x00, 0x00, 0xd2, 0x04, 0x63, 0x01, 0x00,
 0x00, 0x24, 0x02, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0xd3, 0xb7, 0xa3, 0xea, 0x1e, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x64, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd3, 0x04, 0x63,
 0x01, 0x00, 0x00, 0x24, 0x02, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0x38, 0x93, 0x00, 0x00, 0x00, 0x42,
 0x3d, 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00,
 0x96, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x65, 0x01, 0x00, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0xd1, 0xe9, 0x96, 0xea, 0x05, 0x26,
 0x00, 0x00, 0x28, 0xb5, 0xc9, 0x26, 0x00, 0x00,
 0xca, 0x38, 0x93, 0x00, 0x00, 0x00, 0x42, 0x7a,
 0x00, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0xcb,
 0x62, 0x02, 0x00, 0x42, 0x28, 0x01, 0x00, 0x00,
 0xc0, 0x00, 0x24, 0x01, 0x00, 0x0e, 0x61, 0x04,
 0x00, 0x61, 0x03, 0x00, 0xb5, 0xcc, 0x0a, 0xc3,
 0x04, 0x61, 0x05, 0x00, 0x62, 0x00, 0x00, 0xc3,
 0x05, 0x62, 0x05, 0x00, 0x62, 0x02, 0x00, 0xe9,
 0xa3, 0x69, 0xea, 0x00, 0x00, 0x00, 0x61, 0x07,
 0x00, 0x61, 0x06, 0x00, 0x62, 0x02, 0x00, 0x62,
 0x05, 0x00, 0x47, 0xc3, 0x06, 0xd2, 0x62, 0x03,
 0x00, 0x9a, 0x62, 0x06, 0x00, 0x9d, 0xc3, 0x07,
 0x38, 0x95, 0x00, 0x00, 0x00, 0x42, 0x33, 0x01,
 0x00, 0x00, 0x62, 0x07, 0x00, 0x24, 0x01, 0x00,
 0x96, 0x11, 0xeb, 0x1e, 0x0e, 0xd2, 0x62, 0x03,
 0x00, 0x9a, 0xd2, 0x9b, 0x62, 0x03, 0x00, 0xac,
 0x11, 0xeb, 0x0f, 0x0e, 0x62, 0x07, 0x00, 0x62,
 0x06, 0x00, 0x9e, 0xd2, 0x62, 0x03, 0x00, 0x9a,
 0xac, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x66, 0x01, 0x00, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0x62, 0x07, 0x00, 0xd3, 0x9c, 0x11,
 0x63, 0x03, 0x00, 0x0e, 0x62, 0x02, 0x00, 0x62,
 0x05, 0x00, 0x71, 0x38, 0x9a, 0x00, 0x00, 0x00,
 0x42, 0x67, 0x01, 0x00, 0x00, 0x62, 0x07, 0x00,
 0xd3, 0x9b, 0x24, 0x01, 0x00, 0x49, 0x38, 0x95,
 0x00, 0x00, 0x00, 0x42, 0x33, 0x01, 0x00, 0x00,
 0x62, 0x02, 0x00, 0x62, 0x05, 0x00, 0x47, 0x24,
 0x01, 0x00, 0x96, 0x11, 0xeb, 0x13, 0x0e, 0x62,
 0x02, 0x00, 0x62, 0x05, 0x00, 0x47, 0xd3, 0x9a,
 0x62, 0x03, 0x00, 0x9d, 0x62, 0x07, 0x00, 0xac,
 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x66, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00,
 0x2f, 0x62, 0x04, 0x00, 0x96, 0xeb, 0x1b, 0x62,
 0x02, 0x00, 0x62, 0x05, 0x00, 0x47, 0x96, 0xea,
 0x0b, 0x62, 0x05, 0x00, 0x11, 0x63, 0x00, 0x00,
 0x0e, 0xec, 0x07, 0x09, 0x11, 0x63, 0x04, 0x00,
 0x0e, 0x62, 0x05, 0x00, 0x91, 0x63, 0x05, 0x00,
 0x0e, 0xed, 0x0f, 0xff, 0x62, 0x01, 0x00, 0x42,
 0x56, 0x01, 0x00, 0x00, 0x62, 0x03, 0x00, 0x24,
 0x01, 0x00, 0x0e, 0x62, 0x04, 0x00, 0xeb, 0x04,
 0xed, 0xe5, 0xfe, 0x61, 0x08, 0x00, 0xb5, 0xc3,
 0x08, 0x62, 0x08, 0x00, 0xd1, 0xe9, 0xb6, 0x9e,
 0xa3, 0xea, 0x21, 0xd1, 0x62, 0x08, 0x00, 0x47,
 0xb5, 0xab, 0xea, 0x18, 0x62, 0x01, 0x00, 0x42,
 0x56, 0x01, 0x00, 0x00, 0xb5, 0x24, 0x01, 0x00,
 0x0e, 0x62, 0x08, 0x00, 0x91, 0x63, 0x08, 0x00,
 0x0e, 0xec, 0xd7, 0x62, 0x01, 0x00, 0x42, 0x2b,
 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0xbc, 0x03,
 0x8c, 0x01, 0x20, 0x30, 0xad, 0xad, 0xa3, 0x30,
 0x0d, 0x17, 0x4e, 0x2d, 0x22, 0x21, 0x0d, 0x13,
 0x8a, 0x30, 0x3b, 0x00, 0x33, 0x02, 0x49, 0x09,
 0x35, 0x85, 0x00, 0x3b, 0x02, 0xa3, 0x3b, 0x4e,
 0x1c, 0x13, 0xf4, 0x0e, 0x42, 0x06, 0x01, 0x00,
 0x01, 0x00, 0x01, 0x05, 0x02, 0x00, 0x29, 0x01,
 0xd0, 0x05, 0x00, 0x01, 0x00, 0xca, 0x03, 0x00,
 0x00, 0xf4, 0x01, 0x01, 0x03, 0xdd, 0xd1, 0xef,
 0x0e, 0xd1, 0xb5, 0xa3, 0x11, 0xeb, 0x05, 0x0e,
 0xd1, 0xde, 0xa6, 0xea, 0x19, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x34, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1, 0x24, 0x01,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x29, 0xbc, 0x03,
 0x94, 0x01, 0x03, 0x03, 0x17, 0xb7, 0x0e, 0x02,
 0x06, 0x01, 0x00, 0x02, 0x00, 0x02, 0x04, 0x01,
 0x00, 0x0f, 0x02, 0xee, 0x04, 0x00, 0x01, 0x00,
 0xf0, 0x04, 0x00, 0x01, 0x00, 0xd6, 0x03, 0x0a,
 0x0c, 0xd2, 0x96, 0xea, 0x03, 0xd1, 0x28, 0x65,
 0x00, 0x00, 0xd2, 0xd1, 0xd2, 0x9c, 0xf0, 0x28,
 0xbc, 0x03, 0xb4, 0x01, 0x00, 0x0e, 0x02, 0x06,
 0x01, 0x00, 0x02, 0x00, 0x02, 0x05, 0x01, 0x00,
 0x0b, 0x02, 0xf4, 0x01, 0x00, 0x01, 0x00, 0x9a,
 0x05, 0x00, 0x01, 0x00, 0xd6, 0x03, 0x0a, 0x0c,
 0xd1, 0xd2, 0x65, 0x00, 0x00, 0xd1, 0xd2, 0xf0,
 0x9e, 0x9d, 0x28, 0xbc, 0x03, 0xb6, 0x01, 0x00,
 0x0e, 0x43, 0x06, 0x01, 0xda, 0x03, 0x04, 0x05,
 0x04, 0x0b, 0x02, 0x00, 0xe8, 0x03, 0x09, 0xa6,
 0x05, 0x00, 0x01, 0x00, 0xf4, 0x01, 0x00, 0x01,
 0x00, 0x9a, 0x05, 0x00, 0x01, 0x00, 0xd0, 0x03,
 0x00, 0x01, 0x00, 0xbe, 0x05, 0x01, 0x00, 0x20,
 0xba, 0x05, 0x01, 0x01, 0x20, 0xd2, 0x05, 0x01,
 0x02, 0x30, 0xbc, 0x05, 0x01, 0x03, 0x30, 0xe4,
 0x04, 0x07, 0x04, 0x30, 0xd8, 0x03, 0x0b, 0x0c,
 0xca, 0x03, 0x03, 0x00, 0x61, 0x03, 0x00, 0x61,
 0x02, 0x00, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00,
 0x38, 0x93, 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01,
 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00, 0x96, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0x6a, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0xd2, 0xb5, 0xa4, 0x11, 0xeb, 0x06, 0x0e, 0xd2,
 0xbd, 0x20, 0xa5, 0xea, 0x19, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x6b, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd2, 0x24, 0x01,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0xd3, 0xb5, 0xa4,
 0x11, 0xeb, 0x06, 0x0e, 0xd3, 0xbd, 0x20, 0xa5,
 0xea, 0x19, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x6c, 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00,
 0x00, 0x00, 0xd3, 0x24, 0x01, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0x65, 0x00, 0x00, 0xd2, 0xd3, 0xf0,
 0xbd, 0x20, 0xa5, 0xea, 0x2a, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x6d, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd2, 0x04, 0x6e,
 0x01, 0x00, 0x00, 0xd3, 0x04, 0x6f, 0x01, 0x00,
 0x00, 0x65, 0x00, 0x00, 0xd2, 0xd3, 0xf0, 0x24,
 0x05, 0x00, 0x21, 0x01, 0x00, 0x2f, 0xb5, 0xc9,
 0xb5, 0xca, 0xb7, 0xd3, 0x9f, 0xb6, 0x9e, 0xcb,
 0x26, 0x00, 0x00, 0xcc, 0x61, 0x04, 0x00, 0xd1,
 0x7d, 0xed, 0xb3, 0x00, 0xc3, 0x04, 0xde, 0x62,
 0x04, 0x00, 0xef, 0x0e, 0x62, 0x04, 0x00, 0xb7,
 0xd2, 0x9f, 0xa6, 0xea, 0x21, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x70, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0x62, 0x04, 0x00,
 0x04, 0x71, 0x01, 0x00, 0x00, 0xd2, 0x24, 0x03,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x62, 0x00, 0x00,
 0xd2, 0xa0, 0x62, 0x04, 0x00, 0xaf, 0x11, 0x63,
 0x00, 0x00, 0x0e, 0x62, 0x01, 0x00, 0xd2, 0x9d,
 0xbd, 0x20, 0xa5, 0xea, 0x21, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x72, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0x62, 0x01, 0x00,
 0x04, 0x71, 0x01, 0x00, 0x00, 0xd2, 0x24, 0x03,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x62, 0x01, 0x00,
 0xd2, 0x9d, 0x11, 0x63, 0x01, 0x00, 0x0e, 0x62,
 0x01, 0x00, 0xd3, 0xa6, 0xea, 0x28, 0x62, 0x03,
 0x00, 0x42, 0x56, 0x01, 0x00, 0x00, 0x62, 0x00,
 0x00, 0x62, 0x01, 0x00, 0xd3, 0x9e, 0xa1, 0x62,
 0x02, 0x00, 0xad, 0xb5, 0xa2, 0x24, 0x01, 0x00,
 0x0e, 0x62, 0x01, 0x00, 0xd3, 0x9e, 0x11, 0x63,
 0x01, 0x00, 0x0e, 0xec, 0xd3, 0x62, 0x00, 0x00,
 0xb7, 0x62, 0x01, 0x00, 0x9f, 0xb6, 0x9e, 0xad,
 0x11, 0x63, 0x00, 0x00, 0x0e, 0x80, 0x00, 0x69,
 0x4c, 0xff, 0xff, 0xff, 0x0e, 0x83, 0x62, 0x00,
 0x00, 0xd3, 0x62, 0x01, 0x00, 0x9e, 0xa0, 0x62,
 0x02, 0x00, 0xad, 0x11, 0x63, 0x00, 0x00, 0x0e,
 0xd4, 0x96, 0xea, 0x17, 0x62, 0x01, 0x00, 0xd2,
 0xa6, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x73, 0x01, 0x00, 0x00, 0x21, 0x01,
 0x00, 0x2f, 0xd4, 0x96, 0xea, 0x20, 0x62, 0x00,
 0x00, 0xea, 0x1b, 0x38, 0x94, 0x00, 0x00, 0x00,
 0x11, 0x04, 0x74, 0x01, 0x00, 0x00, 0x42, 0x5c,
 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x24, 0x01,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0xd4, 0xea, 0x19,
 0x62, 0x01, 0x00, 0xb5, 0xa5, 0xea, 0x12, 0x62,
 0x03, 0x00, 0x42, 0x56, 0x01, 0x00, 0x00, 0x62,
 0x00, 0x00, 0xb5, 0xa2, 0x24, 0x01, 0x00, 0x0e,
 0x62, 0x03, 0x00, 0x28, 0xbc, 0x03, 0xb8, 0x01,
 0x18, 0x3f, 0xa3, 0xbc, 0xbd, 0x3a, 0xcb, 0x09,
 0x0d, 0x0d, 0x21, 0x18, 0x35, 0x21, 0xd0, 0x49,
 0xd5, 0x36, 0xea, 0x53, 0x31, 0x5d, 0x85, 0xb2,
 0x8a, 0x0e, 0x43, 0x06, 0x01, 0xdc, 0x03, 0x01,
 0x00, 0x01, 0x02, 0x02, 0x02, 0x1e, 0x01, 0xea,
 0x05, 0x00, 0x01, 0x40, 0xd4, 0x03, 0x09, 0x00,
 0xca, 0x03, 0x03, 0x00, 0xde, 0xd1, 0xef, 0x0e,
 0x0b, 0xc0, 0x00, 0x4d, 0x1a, 0x01, 0x00, 0x00,
 0x4c, 0x1a, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x4d,
 0x1b, 0x01, 0x00, 0x00, 0x4c, 0x1b, 0x01, 0x00,
 0x00, 0x28, 0xbc, 0x03, 0xd9, 0x01, 0x09, 0x03,
 0x17, 0x00, 0x01, 0x08, 0x00, 0x0c, 0x08, 0x3f,
 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01,
 0x04, 0x02, 0x00, 0x30, 0x01, 0xec, 0x05, 0x00,
 0x01, 0x00, 0xd4, 0x03, 0x00, 0x00, 0xea, 0x05,
 0x00, 0x03, 0xd1, 0x38, 0xa5, 0x00, 0x00, 0x00,
 0xa7, 0x96, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x77, 0x01, 0x00, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0xdd, 0x38, 0x93, 0x00, 0x00,
 0x00, 0x42, 0x7a, 0x00, 0x00, 0x00, 0xd1, 0x24,
 0x01, 0x00, 0xb7, 0xbd, 0x08, 0x9f, 0xde, 0x23,
 0x03, 0x00, 0xbc, 0x03, 0xdc, 0x01, 0x02, 0x03,
 0x80, 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01, 0x00,
 0x01, 0x07, 0x02, 0x00, 0x47, 0x01, 0xf8, 0x04,
 0x00, 0x01, 0x00, 0xd4, 0x03, 0x00, 0x00, 0xea,
 0x05, 0x00, 0x03, 0x38, 0x93, 0x00, 0x00, 0x00,
 0x42, 0x3d, 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01,
 0x00, 0x96, 0x11, 0xeb, 0x10, 0x0e, 0xd1, 0xe9,
 0xea, 0x1c, 0xd1, 0xb5, 0x47, 0x97, 0x04, 0x46,
 0x00, 0x00, 0x00, 0xac, 0xea, 0x10, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x11, 0x04, 0x78, 0x01, 0x00,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x38, 0xa5, 0x00,
 0x00, 0x00, 0x42, 0x7a, 0x00, 0x00, 0x00, 0xdd,
 0xd1, 0xde, 0xb7, 0xbd, 0x08, 0x9f, 0xf1, 0x25,
 0x01, 0x00, 0xbc, 0x03, 0xe0, 0x01, 0x02, 0x03,
 0xfd, 0x0e, 0x41, 0x06, 0x01, 0xde, 0x03, 0x02,
 0x02, 0x01, 0x03, 0x03, 0x02, 0x74, 0x04, 0x9e,
 0x05, 0x00, 0x01, 0x40, 0xf2, 0x05, 0x00, 0x01,
 0x40, 0x9e, 0x05, 0x01, 0xff, 0xff, 0xff, 0xff,
 0x0f, 0x20, 0xf2, 0x05, 0x01, 0x01, 0x20, 0xda,
 0x03, 0x0c, 0x00, 0xca, 0x03, 0x03, 0x00, 0xd8,
 0x03, 0x0b, 0x0c, 0x61, 0x01, 0x00, 0x61, 0x00,
 0x00, 0xd1, 0xc9, 0xd2, 0x11, 0xf2, 0xea, 0x04,
 0x0e, 0x09, 0xda, 0xca, 0xde, 0xd1, 0xef, 0x0e,
 0xd1, 0xb5, 0xa4, 0x11, 0xeb, 0x06, 0x0e, 0xd1,
 0xbd, 0x20, 0xa5, 0xea, 0x10, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x7a, 0x01, 0x00, 0x00,
 0x21, 0x01, 0x00, 0x2f, 0x65, 0x02, 0x00, 0xbd,
 0x08, 0xd1, 0xf0, 0xbd, 0x20, 0xa5, 0x11, 0xeb,
 0x0c, 0x0e, 0x65, 0x02, 0x00, 0xd1, 0xbd, 0x08,
 0xf0, 0xbd, 0x20, 0xa5, 0xea, 0x10, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x11, 0x04, 0x7b, 0x01, 0x00,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x0b, 0xc0, 0x00,
 0x4d, 0x1a, 0x01, 0x00, 0x00, 0x4c, 0x1a, 0x01,
 0x00, 0x00, 0xc0, 0x01, 0x4d, 0x1b, 0x01, 0x00,
 0x00, 0x4c, 0x1b, 0x01, 0x00, 0x00, 0x28, 0xbc,
 0x03, 0xe7, 0x01, 0x0b, 0x58, 0x17, 0x8f, 0xd0,
 0x00, 0x01, 0x08, 0x00, 0x0c, 0x08, 0x3f, 0x0e,
 0x42, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x05,
 0x03, 0x00, 0x30, 0x01, 0xec, 0x05, 0x00, 0x01,
 0x00, 0xda, 0x03, 0x00, 0x00, 0x9e, 0x05, 0x00,
 0x03, 0xf2, 0x05, 0x01, 0x03, 0xd1, 0x38, 0xa5,
 0x00, 0x00, 0x00, 0xa7, 0x96, 0xea, 0x10, 0x38,
 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0x7c, 0x01,
 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0xdd, 0x38,
 0x93, 0x00, 0x00, 0x00, 0x42, 0x7a, 0x00, 0x00,
 0x00, 0xd1, 0x24, 0x01, 0x00, 0xbd, 0x08, 0xde,
 0xdf, 0x96, 0x23, 0x04, 0x00, 0xbc, 0x03, 0xec,
 0x01, 0x02, 0x03, 0x80, 0x0e, 0x42, 0x06, 0x01,
 0x00, 0x01, 0x00, 0x01, 0x07, 0x03, 0x00, 0x48,
 0x01, 0xf8, 0x04, 0x00, 0x01, 0x00, 0xda, 0x03,
 0x00, 0x00, 0x9e, 0x05, 0x00, 0x03, 0xf2, 0x05,
 0x01, 0x03, 0x38, 0x93, 0x00, 0x00, 0x00, 0x42,
 0x3d, 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00,
 0x96, 0x11, 0xeb, 0x10, 0x0e, 0xd1, 0xe9, 0xea,
 0x1c, 0xd1, 0xb5, 0x47, 0x97, 0x04, 0x46, 0x00,
 0x00, 0x00, 0xac, 0xea, 0x10, 0x38, 0x94, 0x00,
 0x00, 0x00, 0x11, 0x04, 0x7d, 0x01, 0x00, 0x00,
 0x21, 0x01, 0x00, 0x2f, 0x38, 0xa5, 0x00, 0x00,
 0x00, 0x42, 0x7a, 0x00, 0x00, 0x00, 0xdd, 0xd1,
 0xde, 0xbd, 0x08, 0xdf, 0x22, 0x04, 0x00, 0x25,
 0x01, 0x00, 0xbc, 0x03, 0xf0, 0x01, 0x02, 0x03,
 0xfd, 0x0e, 0x43, 0x06, 0x01, 0xe0, 0x03, 0x01,
 0x00, 0x01, 0x03, 0x00, 0x01, 0x16, 0x01, 0xb6,
 0x05, 0x00, 0x01, 0x40, 0xd1, 0xf5, 0xeb, 0x10,
 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0x7e,
 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0xc0,
 0x00, 0x28, 0xbc, 0x03, 0xf7, 0x01, 0x04, 0x03,
 0x00, 0x13, 0x0a, 0x0e, 0x41, 0x06, 0x01, 0x00,
 0x01, 0x01, 0x00, 0x05, 0x01, 0x00, 0x1f, 0x02,
 0xea, 0x04, 0x00, 0x01, 0x00, 0xfe, 0x05, 0x03,
 0x00, 0x03, 0xb6, 0x05, 0x00, 0x03, 0x0d, 0x00,
 0x00, 0xd5, 0x6c, 0x11, 0x00, 0x00, 0x00, 0xdd,
 0x42, 0x5a, 0x00, 0x00, 0x00, 0x07, 0xd1, 0x24,
 0x02, 0x00, 0x0f, 0x28, 0xc9, 0x6c, 0x06, 0x00,
 0x00, 0x00, 0x0e, 0x29, 0x2f, 0xbc, 0x03, 0xf9,
 0x01, 0x04, 0x17, 0x1c, 0x3f, 0x30, 0x0e, 0x02,
 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x04, 0x00,
 0x06, 0x27, 0x01, 0x80, 0x06, 0x00, 0x01, 0x00,
 0xd1, 0x42, 0x81, 0x01, 0x00, 0x00, 0x24, 0x00,
 0x00, 0x42, 0x82, 0x01, 0x00, 0x00, 0xbf, 0x00,
 0xbf, 0x01, 0x33, 0xbf, 0x02, 0x24, 0x02, 0x00,
 0x42, 0x82, 0x01, 0x00, 0x00, 0xbf, 0x03, 0xbf,
 0x04, 0x33, 0xbf, 0x05, 0x25, 0x02, 0x00, 0xbc,
 0x03, 0x82, 0x02, 0x00, 0x07, 0x02, 0x4f, 0x07,
 0x34, 0x01, 0x01, 0x00, 0x13, 0x00, 0x00, 0x00,
 0x08, 0x06, 0x00, 0x00, 0x00, 0x04, 0x07, 0xf5,
 0xff, 0xff, 0xff, 0x0b, 0x00, 0x01, 0x4f, 0x00,
 0x0c, 0x00, 0x0a, 0x07, 0x02, 0x30, 0x07, 0x08,
 0x5b, 0x49, 0x4c, 0x5d, 0x07, 0x44, 0x01, 0x01,
 0x00, 0x1b, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00,
 0x00, 0x00, 0x04, 0x07, 0xf5, 0xff, 0xff, 0xff,
 0x0b, 0x00, 0x15, 0x02, 0x00, 0x49, 0x00, 0x49,
 0x00, 0x4c, 0x00, 0x4c, 0x00, 0x0c, 0x00, 0x0a,
 0x07, 0x02, 0x31, 0x0e, 0x02, 0x06, 0x01, 0x00,
 0x01, 0x00, 0x01, 0x05, 0x04, 0x00, 0x0e, 0x01,
 0x86, 0x06, 0x00, 0x01, 0x00, 0xcc, 0x03, 0x04,
 0x00, 0xdc, 0x03, 0x0d, 0x00, 0xce, 0x03, 0x05,
 0x00, 0xb6, 0x01, 0x06, 0x00, 0xdd, 0xde, 0xbd,
 0x3a, 0xef, 0xdf, 0xd1, 0xef, 0xe0, 0xc1, 0xef,
 0x23, 0x03, 0x00, 0xbc, 0x03, 0x86, 0x02, 0x00,
 0x0e, 0x42, 0x07, 0x01, 0x00, 0x01, 0x03, 0x01,
 0x05, 0x02, 0x01, 0x62, 0x04, 0xa6, 0x05, 0x00,
 0x01, 0x00, 0xbc, 0x05, 0x01, 0x00, 0x20, 0xf6,
 0x04, 0x02, 0x01, 0x20, 0x88, 0x06, 0x03, 0x02,
 0x30, 0xec, 0x03, 0x15, 0x0c, 0xee, 0x03, 0x16,
 0x0c, 0x61, 0x00, 0x00, 0xc1, 0xc9, 0x61, 0x01,
 0x00, 0xb5, 0xca, 0x62, 0x01, 0x00, 0xd1, 0xe9,
 0xa3, 0xea, 0x4d, 0x61, 0x02, 0x00, 0xd1, 0x42,
 0x85, 0x01, 0x00, 0x00, 0x62, 0x01, 0x00, 0x62,
 0x01, 0x00, 0xbd, 0x08, 0x9d, 0x24, 0x02, 0x00,
 0xcb, 0x62, 0x00, 0x00, 0x65, 0x00, 0x00, 0x42,
 0x1a, 0x01, 0x00, 0x00, 0x62, 0x02, 0x00, 0x24,
 0x01, 0x00, 0x42, 0x86, 0x01, 0x00, 0x00, 0x65,
 0x01, 0x00, 0x62, 0x02, 0x00, 0xe9, 0x47, 0xbf,
 0x00, 0x24, 0x02, 0x00, 0x9d, 0x11, 0x63, 0x00,
 0x00, 0x0e, 0x62, 0x01, 0x00, 0xbd, 0x08, 0x9d,
 0x11, 0x63, 0x01, 0x00, 0x0e, 0xec, 0xad, 0x62,
 0x00, 0x00, 0x28, 0xbc, 0x03, 0x8d, 0x02, 0x06,
 0x12, 0x0e, 0x53, 0x62, 0xd0, 0x45, 0x07, 0x02,
 0x31, 0x0e, 0x42, 0x07, 0x01, 0x00, 0x01, 0x06,
 0x01, 0x08, 0x02, 0x00, 0xd9, 0x01, 0x07, 0x8e,
 0x06, 0x00, 0x01, 0x00, 0xbc, 0x05, 0x01, 0x00,
 0x20, 0xf6, 0x04, 0x02, 0x01, 0x20, 0xd4, 0x04,
 0x03, 0x02, 0x30, 0x90, 0x06, 0x03, 0x03, 0x30,
 0x88, 0x06, 0x03, 0x04, 0x30, 0x92, 0x06, 0x04,
 0x05, 0x20, 0xee, 0x03, 0x16, 0x0c, 0xec, 0x03,
 0x15, 0x0c, 0x61, 0x00, 0x00, 0x26, 0x00, 0x00,
 0xc9, 0x61, 0x01, 0x00, 0xb5, 0xca, 0x62, 0x01,
 0x00, 0xd1, 0xe9, 0xa3, 0x69, 0xb6, 0x00, 0x00,
 0x00, 0x61, 0x04, 0x00, 0x61, 0x03, 0x00, 0x61,
 0x02, 0x00, 0xd1, 0x42, 0x2a, 0x01, 0x00, 0x00,
 0x62, 0x01, 0x00, 0x62, 0x01, 0x00, 0xbd, 0x0b,
 0x9d, 0x24, 0x02, 0x00, 0xcb, 0x65, 0x00, 0x00,
 0x42, 0x46, 0x01, 0x00, 0x00, 0x62, 0x02, 0x00,
 0xe9, 0x24, 0x01, 0x00, 0xcc, 0x65, 0x01, 0x00,
 0x42, 0x1b, 0x01, 0x00, 0x00, 0x62, 0x02, 0x00,
 0x24, 0x01, 0x00, 0xc3, 0x04, 0x61, 0x05, 0x00,
 0xb5, 0xc3, 0x05, 0x62, 0x05, 0x00, 0x62, 0x04,
 0x00, 0xe9, 0x62, 0x03, 0x00, 0x9e, 0xa3, 0xea,
 0x25, 0x62, 0x04, 0x00, 0x62, 0x05, 0x00, 0x47,
 0xb5, 0xac, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0x8a, 0x01, 0x00, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0x62, 0x05, 0x00, 0x91, 0x63,
 0x05, 0x00, 0x0e, 0xec, 0xcf, 0x62, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0x38, 0x93, 0x00,
 0x00, 0x00, 0x42, 0x7a, 0x00, 0x00, 0x00, 0x62,
 0x04, 0x00, 0x42, 0x2a, 0x01, 0x00, 0x00, 0x62,
 0x04, 0x00, 0xe9, 0x62, 0x03, 0x00, 0x9e, 0x24,
 0x01, 0x00, 0x24, 0x01, 0x00, 0x24, 0x01, 0x00,
 0x11, 0x63, 0x00, 0x00, 0x0e, 0x62, 0x01, 0x00,
 0xbd, 0x0b, 0x9d, 0x11, 0x63, 0x01, 0x00, 0x0e,
 0xed, 0x45, 0xff, 0x38, 0xa5, 0x00, 0x00, 0x00,
 0x42, 0x7a, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00,
 0x25, 0x01, 0x00, 0xbc, 0x03, 0x98, 0x02, 0x0b,
 0x12, 0x18, 0x80, 0x62, 0x53, 0x54, 0x67, 0x85,
 0x36, 0xf3, 0x4a, 0x0e, 0x43, 0x06, 0x01, 0xf6,
 0x03, 0x01, 0x03, 0x01, 0x03, 0x01, 0x00, 0x4f,
 0x04, 0x96, 0x06, 0x00, 0x01, 0x00, 0xf0, 0x04,
 0x01, 0x00, 0x30, 0x98, 0x06, 0x01, 0x01, 0x20,
 0xf6, 0x04, 0x02, 0x02, 0x20, 0xf4, 0x03, 0x19,
 0x0c, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00, 0xd1,
 0xbd, 0x19, 0xa1, 0xc9, 0xd1, 0x01, 0xff, 0xff,
 0xff, 0x01, 0xad, 0xba, 0xa0, 0xca, 0x61, 0x02,
 0x00, 0xb5, 0xcb, 0x62, 0x02, 0x00, 0x65, 0x00,
 0x00, 0xe9, 0xa3, 0xea, 0x28, 0x62, 0x00, 0x00,
 0x62, 0x02, 0x00, 0xa1, 0xb6, 0xad, 0xb6, 0xab,
 0xea, 0x11, 0x62, 0x01, 0x00, 0x65, 0x00, 0x00,
 0x62, 0x02, 0x00, 0x47, 0xae, 0x11, 0x63, 0x01,
 0x00, 0x0e, 0x62, 0x02, 0x00, 0x91, 0x63, 0x02,
 0x00, 0x0e, 0xec, 0xd0, 0x62, 0x01, 0x00, 0x28,
 0xbc, 0x03, 0xae, 0x02, 0x06, 0x21, 0x1c, 0x36,
 0x4e, 0x94, 0x36, 0x0e, 0x41, 0x06, 0x01, 0xf8,
 0x03, 0x03, 0x0a, 0x02, 0x07, 0x03, 0x00, 0xae,
 0x02, 0x0d, 0x9a, 0x06, 0x00, 0x01, 0x00, 0x9c,
 0x06, 0x00, 0x01, 0x00, 0x9e, 0x06, 0x00, 0x01,
 0x00, 0x9a, 0x06, 0x01, 0xff, 0xff, 0xff, 0xff,
 0x0f, 0x20, 0x9c, 0x06, 0x01, 0x01, 0x20, 0x9e,
 0x06, 0x01, 0x02, 0x20, 0xa0, 0x06, 0x02, 0x00,
 0x30, 0x98, 0x06, 0x02, 0x04, 0x20, 0xf6, 0x04,
 0x03, 0x05, 0x20, 0xf2, 0x04, 0x04, 0x06, 0x30,
 0xf6, 0x04, 0x06, 0x05, 0x20, 0xa2, 0x06, 0x07,
 0x05, 0x20, 0xf6, 0x04, 0x08, 0x05, 0x20, 0xf6,
 0x03, 0x1a, 0x00, 0xf2, 0x03, 0x18, 0x0c, 0xda,
 0x03, 0x0c, 0x00, 0x61, 0x02, 0x00, 0x61, 0x01,
 0x00, 0x61, 0x00, 0x00, 0xd1, 0xc9, 0xd2, 0xca,
 0xd3, 0x11, 0xf2, 0xea, 0x04, 0x0e, 0xb6, 0xdb,
 0xcb, 0x61, 0x04, 0x00, 0x61, 0x03, 0x00, 0xd1,
 0xe9, 0xcc, 0xb6, 0xc3, 0x04, 0x61, 0x05, 0x00,
 0xb5, 0xc3, 0x05, 0x62, 0x05, 0x00, 0x62, 0x03,
 0x00, 0xa3, 0xea, 0x5b, 0x61, 0x06, 0x00, 0xd1,
 0x42, 0x92, 0x01, 0x00, 0x00, 0x62, 0x05, 0x00,
 0x24, 0x01, 0x00, 0xc3, 0x06, 0x62, 0x06, 0x00,
 0xbd, 0x21, 0xa3, 0x11, 0xeb, 0x08, 0x0e, 0x62,
 0x06, 0x00, 0xbd, 0x7e, 0xa5, 0xea, 0x1e, 0x38,
 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0x93, 0x01,
 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1,
 0x04, 0x42, 0x01, 0x00, 0x00, 0x24, 0x02, 0x00,
 0x21, 0x01, 0x00, 0x2f, 0xdd, 0x62, 0x04, 0x00,
 0xef, 0x62, 0x06, 0x00, 0xba, 0xa1, 0xae, 0x11,
 0x63, 0x04, 0x00, 0x0e, 0x62, 0x05, 0x00, 0x91,
 0x63, 0x05, 0x00, 0x0e, 0xec, 0x9e, 0xdd, 0x62,
 0x04, 0x00, 0xef, 0x11, 0x63, 0x04, 0x00, 0x0e,
 0x61, 0x07, 0x00, 0xb5, 0xc3, 0x07, 0x62, 0x07,
 0x00, 0x62, 0x03, 0x00, 0xa3, 0xea, 0x25, 0xdd,
 0x62, 0x04, 0x00, 0xef, 0xd1, 0x42, 0x92, 0x01,
 0x00, 0x00, 0x62, 0x07, 0x00, 0x24, 0x01, 0x00,
 0xbd, 0x1f, 0xad, 0xae, 0x11, 0x63, 0x04, 0x00,
 0x0e, 0x62, 0x07, 0x00, 0x91, 0x63, 0x07, 0x00,
 0x0e, 0xec, 0xd4, 0x61, 0x08, 0x00, 0xd2, 0x7d,
 0xec, 0x11, 0xc3, 0x08, 0xdd, 0x62, 0x04, 0x00,
 0xef, 0x62, 0x08, 0x00, 0xae, 0x11, 0x63, 0x04,
 0x00, 0x0e, 0x80, 0x00, 0xea, 0xed, 0x0e, 0x83,
 0x61, 0x09, 0x00, 0xb5, 0xc3, 0x09, 0x62, 0x09,
 0x00, 0xbb, 0xa3, 0xea, 0x15, 0xdd, 0x62, 0x04,
 0x00, 0xef, 0x11, 0x63, 0x04, 0x00, 0x0e, 0x62,
 0x09, 0x00, 0x91, 0x63, 0x09, 0x00, 0x0e, 0xec,
 0xe6, 0x62, 0x04, 0x00, 0xd3, 0xae, 0x11, 0x63,
 0x04, 0x00, 0x0e, 0x65, 0x01, 0x00, 0x42, 0x1a,
 0x01, 0x00, 0x00, 0xdf, 0x62, 0x04, 0x00, 0xb7,
 0xbd, 0x1e, 0x9f, 0x9c, 0x26, 0x01, 0x00, 0xbd,
 0x1e, 0xba, 0x09, 0x22, 0x04, 0x00, 0x25, 0x01,
 0x00, 0xbc, 0x03, 0xb9, 0x02, 0x0f, 0x8f, 0x12,
 0x13, 0x5d, 0x49, 0xee, 0x53, 0x36, 0x36, 0x00,
 0x33, 0x04, 0x95, 0xa9, 0x35, 0x0e, 0x43, 0x06,
 0x01, 0xfa, 0x03, 0x01, 0x09, 0x01, 0x02, 0x04,
 0x03, 0x8a, 0x01, 0x0a, 0xa8, 0x06, 0x00, 0x01,
 0x00, 0xaa, 0x06, 0x01, 0x00, 0x70, 0xac, 0x06,
 0x01, 0x01, 0x30, 0xae, 0x06, 0x01, 0x02, 0x70,
 0xb0, 0x06, 0x01, 0x03, 0x30, 0xb2, 0x06, 0x01,
 0x04, 0x30, 0xb4, 0x04, 0x00, 0x00, 0x00, 0xb6,
 0x04, 0x00, 0x06, 0x40, 0xb4, 0x06, 0x01, 0x05,
 0x30, 0xb6, 0x06, 0x00, 0x07, 0x00, 0xf2, 0x03,
 0x18, 0x0c, 0xf8, 0x03, 0x1b, 0x00, 0xde, 0x03,
 0x0e, 0x00, 0xe0, 0x03, 0x0f, 0x00, 0xc0, 0x00,
 0xc3, 0x05, 0xc0, 0x01, 0xc3, 0x06, 0xc0, 0x02,
 0xc3, 0x08, 0x61, 0x07, 0x00, 0x61, 0x04, 0x00,
 0x61, 0x03, 0x00, 0x61, 0x02, 0x00, 0x61, 0x01,
 0x00, 0x61, 0x00, 0x00, 0xd1, 0x04, 0x1d, 0x01,
 0x00, 0x00, 0xab, 0xea, 0x04, 0xb6, 0xec, 0x06,
 0x01, 0xa3, 0x30, 0xc8, 0x2b, 0xc9, 0xdf, 0xba,
 0xef, 0xca, 0x62, 0x01, 0x00, 0x41, 0x1b, 0x01,
 0x00, 0x00, 0xcb, 0x62, 0x01, 0x00, 0x41, 0x1a,
 0x01, 0x00, 0x00, 0xcc, 0xe0, 0x62, 0x02, 0x00,
 0xef, 0xc3, 0x04, 0xe0, 0xc2, 0x06, 0xef, 0xc3,
 0x07, 0x0b, 0xc2, 0x05, 0x4c, 0x1a, 0x01, 0x00,
 0x00, 0xc2, 0x06, 0x4c, 0x1b, 0x01, 0x00, 0x00,
 0xc2, 0x08, 0x4c, 0x9b, 0x01, 0x00, 0x00, 0x62,
 0x07, 0x00, 0x4c, 0x9a, 0x01, 0x00, 0x00, 0x62,
 0x02, 0x00, 0x4c, 0x97, 0x01, 0x00, 0x00, 0x62,
 0x04, 0x00, 0x4c, 0x99, 0x01, 0x00, 0x00, 0x62,
 0x03, 0x00, 0x4c, 0x98, 0x01, 0x00, 0x00, 0x28,
 0xbc, 0x03, 0xcf, 0x02, 0x13, 0x99, 0x5e, 0x18,
 0x30, 0x30, 0x00, 0x07, 0x42, 0x00, 0x06, 0x1c,
 0x08, 0x26, 0x26, 0x26, 0x2b, 0x2b, 0x2b, 0x2b,
 0x0e, 0x41, 0x06, 0x01, 0xb4, 0x04, 0x03, 0x04,
 0x02, 0x09, 0x03, 0x01, 0xd6, 0x01, 0x07, 0x9a,
 0x06, 0x00, 0x01, 0x00, 0x9c, 0x06, 0x00, 0x01,
 0x00, 0xb8, 0x06, 0x00, 0x01, 0x00, 0x9a, 0x06,
 0x01, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x20, 0x9c,
 0x06, 0x01, 0x01, 0x20, 0xb8, 0x06, 0x01, 0x02,
 0x20, 0xba, 0x06, 0x02, 0x00, 0x30, 0xf2, 0x03,
 0x00, 0x0c, 0xf8, 0x03, 0x01, 0x00, 0xaa, 0x06,
 0x00, 0x0d, 0x61, 0x02, 0x00, 0x61, 0x01, 0x00,
 0x61, 0x00, 0x00, 0xd1, 0xc9, 0xd2, 0xca, 0xd3,
 0x11, 0xf2, 0xea, 0x05, 0x0e, 0xbd, 0x5a, 0xdb,
 0xcb, 0x61, 0x03, 0x00, 0xd1, 0x97, 0x04, 0x48,
 0x00, 0x00, 0x00, 0xac, 0xea, 0x1a, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x11, 0x04, 0x9e, 0x01, 0x00,
 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1, 0x97,
 0x24, 0x01, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x38,
 0x93, 0x00, 0x00, 0x00, 0x42, 0x3d, 0x01, 0x00,
 0x00, 0xd2, 0x24, 0x01, 0x00, 0x96, 0x11, 0xeb,
 0x10, 0x0e, 0xd2, 0xe9, 0xea, 0x26, 0xd2, 0xb5,
 0x47, 0x97, 0x04, 0x46, 0x00, 0x00, 0x00, 0xac,
 0xea, 0x1a, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0x9f, 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00,
 0x00, 0x00, 0xd2, 0x97, 0x24, 0x01, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0xd1, 0xe9, 0xbc, 0x9d, 0xd2,
 0xe9, 0x9d, 0xcc, 0xd3, 0x09, 0xac, 0xea, 0x28,
 0x62, 0x03, 0x00, 0xd3, 0xa5, 0xea, 0x21, 0x38,
 0xcc, 0x00, 0x00, 0x00, 0x11, 0x04, 0xa0, 0x01,
 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00, 0x62,
 0x03, 0x00, 0x04, 0xa1, 0x01, 0x00, 0x00, 0xd3,
 0x24, 0x03, 0x00, 0x21, 0x01, 0x00, 0x2f, 0xd1,
 0x42, 0xa2, 0x01, 0x00, 0x00, 0x24, 0x00, 0x00,
 0xd5, 0xc1, 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1,
 0xbf, 0x00, 0x65, 0x00, 0x00, 0x42, 0x1a, 0x01,
 0x00, 0x00, 0xd2, 0x24, 0x01, 0x00, 0xde, 0xd1,
 0xd2, 0x65, 0x02, 0x00, 0xf1, 0x25, 0x04, 0x00,
 0xbc, 0x03, 0xd8, 0x02, 0x08, 0x85, 0xb2, 0x00,
 0x3c, 0x02, 0x2b, 0xdf, 0x35, 0x07, 0x02, 0x31,
 0x0e, 0x41, 0x06, 0x01, 0xb6, 0x04, 0x02, 0x08,
 0x01, 0x0a, 0x03, 0x01, 0x86, 0x03, 0x0a, 0x8e,
 0x06, 0x00, 0x01, 0x00, 0xb8, 0x06, 0x00, 0x01,
 0x00, 0x8e, 0x06, 0x01, 0xff, 0xff, 0xff, 0xff,
 0x0f, 0x20, 0xb8, 0x06, 0x01, 0x01, 0x20, 0xc6,
 0x06, 0x02, 0x00, 0x30, 0xc8, 0x06, 0x02, 0x03,
 0x30, 0x9a, 0x06, 0x02, 0x04, 0x30, 0xac, 0x06,
 0x02, 0x05, 0x30, 0x9c, 0x06, 0x02, 0x06, 0x30,
 0xca, 0x06, 0x02, 0x07, 0x30, 0xf2, 0x03, 0x00,
 0x0c, 0xf8, 0x03, 0x01, 0x00, 0xaa, 0x06, 0x00,
 0x0d, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00, 0xd1,
 0xc9, 0xd2, 0x11, 0xf2, 0xea, 0x05, 0x0e, 0xbd,
 0x5a, 0xda, 0xca, 0x61, 0x07, 0x00, 0x61, 0x06,
 0x00, 0x61, 0x05, 0x00, 0x61, 0x04, 0x00, 0x61,
 0x03, 0x00, 0x61, 0x02, 0x00, 0xd1, 0x97, 0x04,
 0x48, 0x00, 0x00, 0x00, 0xac, 0xea, 0x1a, 0x38,
 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0xa6, 0x01,
 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1,
 0x97, 0x24, 0x01, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0xd1, 0xe9, 0xbd, 0x08, 0xa3, 0x11, 0xeb, 0x0b,
 0x0e, 0xd2, 0x09, 0xac, 0xea, 0x31, 0xd1, 0xe9,
 0xd2, 0xa5, 0xea, 0x2b, 0x38, 0xcc, 0x00, 0x00,
 0x00, 0x11, 0x04, 0xa7, 0x01, 0x00, 0x00, 0x42,
 0x5c, 0x00, 0x00, 0x00, 0xd1, 0xe9, 0x04, 0xa8,
 0x01, 0x00, 0x00, 0xd1, 0x04, 0xa9, 0x01, 0x00,
 0x00, 0xd2, 0x04, 0x42, 0x01, 0x00, 0x00, 0x24,
 0x06, 0x00, 0x21, 0x01, 0x00, 0x2f, 0xd1, 0x42,
 0xa2, 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0xcb,
 0xd1, 0x62, 0x02, 0x00, 0xac, 0xea, 0x1d, 0xd1,
 0xd1, 0x42, 0x81, 0x01, 0x00, 0x00, 0x24, 0x00,
 0x00, 0xac, 0xea, 0x10, 0x38, 0x94, 0x00, 0x00,
 0x00, 0x11, 0x04, 0xaa, 0x01, 0x00, 0x00, 0x21,
 0x01, 0x00, 0x2f, 0x62, 0x02, 0x00, 0xd9, 0x42,
 0xab, 0x01, 0x00, 0x00, 0xbf, 0x00, 0x24, 0x01,
 0x00, 0xcc, 0x62, 0x03, 0x00, 0xb5, 0xab, 0x11,
 0xeb, 0x07, 0x0e, 0x62, 0x03, 0x00, 0xb4, 0xab,
 0xea, 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11,
 0x04, 0xac, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00,
 0x2f, 0xd1, 0x42, 0x2a, 0x01, 0x00, 0x00, 0xb5,
 0x62, 0x03, 0x00, 0x24, 0x02, 0x00, 0xc3, 0x04,
 0xd1, 0x42, 0x2a, 0x01, 0x00, 0x00, 0x62, 0x03,
 0x00, 0xb6, 0x9d, 0x24, 0x01, 0x00, 0xc3, 0x05,
 0x62, 0x05, 0x00, 0xe9, 0xbb, 0xa3, 0xea, 0x10,
 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0xad,
 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x65,
 0x00, 0x00, 0x42, 0x1b, 0x01, 0x00, 0x00, 0x62,
 0x05, 0x00, 0x24, 0x01, 0x00, 0x42, 0x2a, 0x01,
 0x00, 0x00, 0xb5, 0xbd, 0xfa, 0x24, 0x02, 0x00,
 0xc3, 0x06, 0xde, 0x62, 0x04, 0x00, 0x62, 0x06,
 0x00, 0x65, 0x02, 0x00, 0xf1, 0xc3, 0x07, 0x62,
 0x05, 0x00, 0x42, 0xae, 0x01, 0x00, 0x00, 0x62,
 0x07, 0x00, 0x24, 0x01, 0x00, 0x96, 0xea, 0x26,
 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0xaf,
 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00,
 0xd1, 0x04, 0xb0, 0x01, 0x00, 0x00, 0x62, 0x07,
 0x00, 0x04, 0xb1, 0x01, 0x00, 0x00, 0x24, 0x04,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0x0b, 0x62, 0x04,
 0x00, 0x4c, 0x8d, 0x01, 0x00, 0x00, 0x62, 0x06,
 0x00, 0x4c, 0x8e, 0x01, 0x00, 0x00, 0x28, 0xbc,
 0x03, 0xe1, 0x02, 0x15, 0xb7, 0xb2, 0x00, 0x3e,
 0x02, 0x35, 0xb2, 0x17, 0x3a, 0x9e, 0x4f, 0x54,
 0x76, 0x8a, 0x44, 0x00, 0x36, 0x02, 0x08, 0x2b,
 0x2b, 0x07, 0x02, 0x31, 0x0e, 0x43, 0x06, 0x01,
 0xb6, 0x06, 0x01, 0x02, 0x01, 0x03, 0x02, 0x00,
 0x40, 0x03, 0x8e, 0x06, 0x00, 0x01, 0x00, 0x9a,
 0x06, 0x01, 0x00, 0x30, 0x9c, 0x06, 0x01, 0x01,
 0x30, 0xb6, 0x04, 0x06, 0x01, 0xae, 0x06, 0x02,
 0x0d, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00, 0x06,
 0x11, 0xf2, 0xeb, 0x11, 0x6f, 0x42, 0x8d, 0x01,
 0x00, 0x00, 0xc9, 0x42, 0x8e, 0x01, 0x00, 0x00,
 0xca, 0x0e, 0xec, 0x08, 0x0e, 0xdd, 0xd1, 0x09,
 0xf0, 0xec, 0xea, 0x0b, 0x62, 0x00, 0x00, 0x4c,
 0x8d, 0x01, 0x00, 0x00, 0x62, 0x01, 0x00, 0x4c,
 0x8e, 0x01, 0x00, 0x00, 0x65, 0x01, 0x00, 0x62,
 0x01, 0x00, 0xef, 0x4c, 0x76, 0x01, 0x00, 0x00,
 0x28, 0xbc, 0x03, 0xf9, 0x02, 0x09, 0x21, 0x21,
 0x21, 0x26, 0x30, 0x08, 0x2b, 0x2b, 0x3f, 0x0e,
 0x02, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01, 0x03,
 0x00, 0x00, 0x12, 0x01, 0xa6, 0x05, 0x00, 0x01,
 0x00, 0x38, 0xb2, 0x01, 0x00, 0x00, 0x11, 0x21,
 0x00, 0x00, 0x42, 0x1b, 0x01, 0x00, 0x00, 0xd1,
 0x25, 0x01, 0x00, 0xbc, 0x03, 0x93, 0x03, 0x00,
 0x0e, 0x02, 0x06, 0x01, 0x00, 0x01, 0x00, 0x01,
 0x03, 0x00, 0x00, 0x12, 0x01, 0x8e, 0x06, 0x00,
 0x01, 0x00, 0x38, 0xb3, 0x01, 0x00, 0x00, 0x11,
 0x21, 0x00, 0x00, 0x42, 0x1a, 0x01, 0x00, 0x00,
 0xd1, 0x25, 0x01, 0x00, 0xbc, 0x03, 0x94, 0x03,
 0x00, 0x0e, 0x02, 0x06, 0x01, 0x00, 0x01, 0x00,
 0x01, 0x07, 0x00, 0x00, 0x3b, 0x01, 0x80, 0x06,
 0x00, 0x01, 0x00, 0xd1, 0x97, 0x04, 0x48, 0x00,
 0x00, 0x00, 0xac, 0x11, 0xeb, 0x06, 0x0e, 0xd1,
 0xe9, 0xb7, 0x9c, 0xea, 0x21, 0x38, 0xcc, 0x00,
 0x00, 0x00, 0x11, 0x04, 0xb4, 0x01, 0x00, 0x00,
 0x42, 0x5c, 0x00, 0x00, 0x00, 0xd1, 0x97, 0x04,
 0xb5, 0x01, 0x00, 0x00, 0xd1, 0xe9, 0x24, 0x03,
 0x00, 0x21, 0x01, 0x00, 0x2f, 0xd1, 0x42, 0xa2,
 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0xbc, 0x03,
 0x96, 0x03, 0x02, 0x03, 0xfd, 0x0e, 0x43, 0x06,
 0x01, 0x00, 0x01, 0x00, 0x01, 0x05, 0x00, 0x00,
 0x23, 0x01, 0x82, 0x04, 0x00, 0x01, 0x00, 0xd1,
 0xd1, 0x04, 0xb6, 0x01, 0x00, 0x00, 0x71, 0xb5,
 0x16, 0x49, 0x04, 0xb6, 0x01, 0x00, 0x00, 0x49,
 0xd1, 0xd1, 0x04, 0xb7, 0x01, 0x00, 0x00, 0x71,
 0xb6, 0x16, 0x49, 0x04, 0xb7, 0x01, 0x00, 0x00,
 0x49, 0x29, 0xbc, 0x03, 0xa8, 0x03, 0x03, 0x03,
 0x58, 0x58, 0x0a, 0x14, 0x01, 0x80, 0x0a, 0x28,
 0x01, 0x80, 0x0a, 0x10, 0x01, 0x80, 0x0a, 0x10,
 0x01, 0x80, 0x0e, 0x43, 0x06, 0x01, 0x88, 0x04,
 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x1d, 0x00,
 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42, 0xb9, 0x01,
 0x00, 0x00, 0xb5, 0x24, 0x01, 0x00, 0x0e, 0x38,
 0xb8, 0x01, 0x00, 0x00, 0x42, 0xba, 0x01, 0x00,
 0x00, 0xb5, 0x25, 0x01, 0x00, 0xbc, 0x03, 0xaf,
 0x03, 0x02, 0x03, 0x4e, 0x0e, 0x43, 0x06, 0x01,
 0x8a, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
 0x0d, 0x00, 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42,
 0xbb, 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0xbc,
 0x03, 0xb3, 0x03, 0x01, 0x03, 0x0e, 0x43, 0x06,
 0x01, 0x8c, 0x04, 0x01, 0x01, 0x01, 0x04, 0x00,
 0x01, 0x2b, 0x02, 0xda, 0x04, 0x00, 0x01, 0x00,
 0xf8, 0x06, 0x01, 0x00, 0x20, 0x61, 0x00, 0x00,
 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42, 0xbd, 0x01,
 0x00, 0x00, 0xd1, 0xb5, 0x24, 0x02, 0x00, 0xc9,
 0x62, 0x00, 0x00, 0xbf, 0x00, 0xab, 0xea, 0x0f,
 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42, 0xba, 0x01,
 0x00, 0x00, 0xb5, 0x25, 0x01, 0x00, 0x07, 0x28,
 0xbc, 0x03, 0xb6, 0x03, 0x04, 0x12, 0x54, 0x2b,
 0x4a, 0x0a, 0x10, 0x01, 0x80, 0x0e, 0x43, 0x06,
 0x01, 0x8e, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00,
 0x00, 0x1d, 0x00, 0x38, 0xb8, 0x01, 0x00, 0x00,
 0x42, 0xbe, 0x01, 0x00, 0x00, 0xb5, 0x24, 0x01,
 0x00, 0x0e, 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42,
 0xba, 0x01, 0x00, 0x00, 0xb5, 0x25, 0x01, 0x00,
 0xbc, 0x03, 0xbf, 0x03, 0x02, 0x03, 0x4e, 0x0e,
 0x43, 0x06, 0x01, 0xb0, 0x01, 0x00, 0x00, 0x00,
 0x03, 0x00, 0x00, 0x1d, 0x00, 0x38, 0xb8, 0x01,
 0x00, 0x00, 0x42, 0x58, 0x00, 0x00, 0x00, 0xb5,
 0x24, 0x01, 0x00, 0x0e, 0x38, 0xb8, 0x01, 0x00,
 0x00, 0x42, 0xba, 0x01, 0x00, 0x00, 0xb5, 0x25,
 0x01, 0x00, 0xbc, 0x03, 0xc3, 0x03, 0x02, 0x03,
 0x4e, 0x0e, 0x43, 0x06, 0x01, 0x90, 0x04, 0x02,
 0x01, 0x02, 0x05, 0x01, 0x01, 0x22, 0x03, 0xda,
 0x04, 0x00, 0x01, 0x00, 0x80, 0x01, 0x00, 0x01,
 0x00, 0xfe, 0x06, 0x01, 0x00, 0x20, 0x86, 0x04,
 0x22, 0x0c, 0x61, 0x00, 0x00, 0x38, 0xb8, 0x01,
 0x00, 0x00, 0x42, 0xc0, 0x01, 0x00, 0x00, 0xd1,
 0xd2, 0x65, 0x00, 0x00, 0x24, 0x03, 0x00, 0xc9,
 0x62, 0x00, 0x00, 0xbf, 0x00, 0xab, 0xea, 0x03,
 0x0a, 0x28, 0x09, 0x28, 0xbc, 0x03, 0xc7, 0x03,
 0x05, 0x12, 0x63, 0x2b, 0x08, 0x09, 0x0a, 0x10,
 0x01, 0x80, 0x0e, 0x41, 0x06, 0x01, 0x92, 0x04,
 0x01, 0x04, 0x01, 0x03, 0x03, 0x01, 0x2c, 0x05,
 0x00, 0x00, 0x01, 0x00, 0x82, 0x07, 0x01, 0xff,
 0xff, 0xff, 0xff, 0x0f, 0x20, 0x84, 0x07, 0x01,
 0x01, 0x20, 0x84, 0x07, 0x00, 0x00, 0x40, 0x82,
 0x07, 0x00, 0x03, 0x40, 0x88, 0x04, 0x23, 0x00,
 0x8e, 0x04, 0x26, 0x00, 0x8a, 0x04, 0x24, 0x00,
 0x61, 0x01, 0x00, 0x61, 0x00, 0x00, 0xd1, 0x6f,
 0x42, 0xc1, 0x01, 0x00, 0x00, 0x11, 0xf2, 0xea,
 0x03, 0x0e, 0x09, 0xc9, 0x42, 0xc2, 0x01, 0x00,
 0x00, 0x11, 0xf2, 0xea, 0x03, 0x0e, 0x09, 0xca,
 0x0e, 0x62, 0x01, 0x00, 0xcb, 0x62, 0x00, 0x00,
 0xcc, 0xc0, 0x00, 0x28, 0xbc, 0x03, 0xd1, 0x03,
 0x06, 0x2b, 0x3f, 0x44, 0x00, 0x08, 0x1e, 0x0e,
 0x43, 0x06, 0x01, 0x00, 0x03, 0x01, 0x03, 0x02,
 0x05, 0x01, 0x13, 0x04, 0xac, 0x01, 0x00, 0x01,
 0x00, 0xda, 0x04, 0x00, 0x01, 0x00, 0xca, 0x04,
 0x00, 0x01, 0x00, 0x86, 0x07, 0x01, 0x00, 0x70,
 0x82, 0x07, 0x03, 0x01, 0x88, 0x04, 0x00, 0x00,
 0x8e, 0x04, 0x01, 0x00, 0x84, 0x07, 0x02, 0x01,
 0x8a, 0x04, 0x02, 0x00, 0x61, 0x00, 0x00, 0xd3,
 0x41, 0x40, 0x00, 0x00, 0x00, 0xc9, 0xd3, 0xc0,
 0x00, 0x43, 0x40, 0x00, 0x00, 0x00, 0x29, 0xbc,
 0x03, 0xd5, 0x03, 0x06, 0x12, 0x27, 0x00, 0x01,
 0x14, 0x26, 0x0e, 0x41, 0x06, 0x01, 0x00, 0x01,
 0x01, 0x00, 0x04, 0x06, 0x00, 0x47, 0x02, 0xea,
 0x04, 0x00, 0x01, 0x00, 0x10, 0x00, 0x01, 0x00,
 0x82, 0x07, 0x00, 0x00, 0x88, 0x04, 0x01, 0x00,
 0x8e, 0x04, 0x02, 0x00, 0x84, 0x07, 0x03, 0x00,
 0x8a, 0x04, 0x04, 0x00, 0x86, 0x07, 0x00, 0x0d,
 0x08, 0xc9, 0x0d, 0x00, 0x00, 0xd5, 0xdd, 0xea,
 0x14, 0xde, 0xee, 0xdf, 0xee, 0xac, 0xea, 0x0d,
 0x38, 0x94, 0x00, 0x00, 0x00, 0x04, 0xc4, 0x01,
 0x00, 0x00, 0xef, 0x2f, 0xe0, 0x96, 0xea, 0x1b,
 0x5e, 0x04, 0x00, 0xee, 0x38, 0xaf, 0x00, 0x00,
 0x00, 0xb5, 0xef, 0xa5, 0xea, 0x0d, 0x38, 0x94,
 0x00, 0x00, 0x00, 0x04, 0xc5, 0x01, 0x00, 0x00,
 0xef, 0x2f, 0x65, 0x05, 0x00, 0x42, 0x5a, 0x00,
 0x00, 0x00, 0xc5, 0xd1, 0x25, 0x02, 0x00, 0xbc,
 0x03, 0xd8, 0x03, 0x07, 0x21, 0x35, 0x3a, 0x09,
 0x5d, 0x3a, 0x09, 0x0e, 0x41, 0x06, 0x01, 0x94,
 0x04, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x06,
 0x01, 0x00, 0x00, 0x01, 0x00, 0xd1, 0x6f, 0x0e,
 0xc0, 0x00, 0x28, 0xbc, 0x03, 0xe5, 0x03, 0x01,
 0x12, 0x0e, 0x43, 0x06, 0x01, 0x00, 0x03, 0x00,
 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 0xac, 0x01,
 0x00, 0x01, 0x00, 0xda, 0x04, 0x00, 0x01, 0x00,
 0xca, 0x04, 0x00, 0x01, 0x00, 0x29, 0xbc, 0x03,
 0xe6, 0x03, 0x00, 0x0e, 0x41, 0x06, 0x01, 0x96,
 0x04, 0x01, 0x02, 0x01, 0x03, 0x03, 0x01, 0x19,
 0x03, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x07, 0x01,
 0xff, 0xff, 0xff, 0xff, 0x0f, 0x20, 0x8c, 0x07,
 0x00, 0x00, 0x40, 0x8c, 0x04, 0x25, 0x00, 0x90,
 0x04, 0x28, 0x00, 0xb0, 0x01, 0x27, 0x00, 0x61,
 0x00, 0x00, 0xd1, 0x6f, 0x42, 0xc6, 0x01, 0x00,
 0x00, 0x11, 0xf2, 0xea, 0x03, 0x0e, 0x09, 0xc9,
 0x0e, 0x62, 0x00, 0x00, 0xca, 0xc0, 0x00, 0x28,
 0xbc, 0x03, 0xe8, 0x03, 0x05, 0x1c, 0x44, 0x00,
 0x04, 0x5a, 0x0e, 0x42, 0x06, 0x01, 0x00, 0x01,
 0x01, 0x01, 0x03, 0x04, 0x09, 0x63, 0x02, 0xac,
 0x01, 0x00, 0x01, 0x40, 0xec, 0x01, 0x03, 0x00,
 0x70, 0x8c, 0x04, 0x00, 0x00, 0x90, 0x04, 0x01,
 0x00, 0xb0, 0x01, 0x02, 0x00, 0x8c, 0x07, 0x01,
 0x01, 0xd1, 0x61, 0x00, 0x00, 0xbf, 0x08, 0x56,
 0x2f, 0x00, 0x00, 0x00, 0x01, 0x1b, 0xc0, 0x00,
 0x54, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x1b, 0x1b,
 0xc0, 0x01, 0x54, 0xc8, 0x01, 0x00, 0x00, 0x00,
 0x1b, 0x1b, 0xc0, 0x02, 0x54, 0xc9, 0x01, 0x00,
 0x00, 0x00, 0x1b, 0x1b, 0xc0, 0x03, 0x54, 0xca,
 0x01, 0x00, 0x00, 0x00, 0x1b, 0x1b, 0xc0, 0x04,
 0x54, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x1b, 0x1b,
 0xc0, 0x05, 0x54, 0xcc, 0x01, 0x00, 0x00, 0x00,
 0x1b, 0x1b, 0xc0, 0x06, 0x54, 0xcd, 0x01, 0x00,
 0x00, 0x00, 0x1b, 0x1b, 0xc0, 0x07, 0x54, 0xce,
 0x01, 0x00, 0x00, 0x00, 0x1b, 0x06, 0xc9, 0x0e,
 0x68, 0x00, 0x00, 0x28, 0xbc, 0x03, 0xeb, 0x03,
 0x14, 0x03, 0x3f, 0x09, 0x31, 0x0a, 0x31, 0x09,
 0x31, 0x09, 0x31, 0x09, 0x31, 0x09, 0x31, 0x00,
 0x01, 0x14, 0x31, 0x09, 0x31, 0x0e, 0x42, 0x07,
 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00,
 0x06, 0x00, 0xac, 0x01, 0x00, 0x03, 0xdd, 0x11,
 0x21, 0x00, 0x00, 0x28, 0xbc, 0x03, 0xed, 0x03,
 0x01, 0x03, 0x0e, 0x42, 0x07, 0x01, 0x00, 0x00,
 0x02, 0x00, 0x03, 0x01, 0x00, 0x21, 0x02, 0x9e,
 0x07, 0x01, 0x00, 0x30, 0x10, 0x00, 0x01, 0x00,
 0x8c, 0x04, 0x00, 0x00, 0x08, 0xca, 0x61, 0x00,
 0x00, 0xdd, 0x04, 0xd0, 0x01, 0x00, 0x00, 0xef,
 0xc9, 0x62, 0x00, 0x00, 0xea, 0x0e, 0xc6, 0x42,
 0xcc, 0x01, 0x00, 0x00, 0x62, 0x00, 0x00, 0x24,
 0x01, 0x00, 0x28, 0x07, 0x28, 0xbc, 0x03, 0xf1,
 0x03, 0x02, 0x1c, 0x2b, 0x0e, 0x42, 0x07, 0x01,
 0x00, 0x01, 0x01, 0x01, 0x05, 0x01, 0x00, 0x14,
 0x02, 0xa2, 0x07, 0x00, 0x01, 0x00, 0x10, 0x00,
 0x01, 0x00, 0x90, 0x04, 0x01, 0x00, 0x08, 0xc9,
 0xdd, 0x04, 0xd0, 0x01, 0x00, 0x00, 0xc5, 0x42,
 0xcb, 0x01, 0x00, 0x00, 0xd1, 0x24, 0x01, 0x00,
 0xf0, 0x29, 0xbc, 0x03, 0xf6, 0x03, 0x02, 0x0d,
 0x58, 0x0e, 0x42, 0x07, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x04, 0x01, 0x00, 0x18, 0x00, 0xb0, 0x01,
 0x02, 0x00, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x42,
 0xd2, 0x01, 0x00, 0x00, 0xdd, 0xee, 0x11, 0xeb,
 0x07, 0x0e, 0x04, 0xd3, 0x01, 0x00, 0x00, 0x25,
 0x01, 0x00, 0xbc, 0x03, 0xfa, 0x03, 0x01, 0x03,
 0x0e, 0x42, 0x07, 0x01, 0x00, 0x01, 0x00, 0x01,
 0x03, 0x00, 0x00, 0x0e, 0x01, 0x80, 0x01, 0x00,
 0x01, 0x00, 0x38, 0x9b, 0x00, 0x00, 0x00, 0x42,
 0xd4, 0x01, 0x00, 0x00, 0xd1, 0x25, 0x01, 0x00,
 0xbc, 0x03, 0xfe, 0x03, 0x01, 0x03, 0x0e, 0x42,
 0x07, 0x01, 0x00, 0x01, 0x00, 0x01, 0x03, 0x00,
 0x00, 0x0e, 0x01, 0x80, 0x01, 0x00, 0x01, 0x00,
 0x38, 0x9b, 0x00, 0x00, 0x00, 0x42, 0xd2, 0x01,
 0x00, 0x00, 0xd1, 0x25, 0x01, 0x00, 0xbc, 0x03,
 0x82, 0x04, 0x01, 0x03, 0x0e, 0x42, 0x07, 0x01,
 0x00, 0x02, 0x01, 0x02, 0x07, 0x00, 0x00, 0x58,
 0x03, 0xaa, 0x07, 0x00, 0x01, 0x00, 0xac, 0x07,
 0x00, 0x01, 0x00, 0xae, 0x07, 0x02, 0x00, 0x30,
 0x61, 0x00, 0x00, 0xd1, 0x7c, 0xec, 0x4b, 0xc9,
 0xd1, 0x62, 0x00, 0x00, 0x47, 0x41, 0x3c, 0x00,
 0x00, 0x00, 0x11, 0xb0, 0xea, 0x05, 0x0e, 0x06,
 0xec, 0x06, 0x41, 0xd8, 0x01, 0x00, 0x00, 0x38,
 0x45, 0x00, 0x00, 0x00, 0xac, 0xea, 0x20, 0xd1,
 0x62, 0x00, 0x00, 0x71, 0xd1, 0x62, 0x00, 0x00,
 0x47, 0x41, 0x3c, 0x00, 0x00, 0x00, 0x42, 0xd8,
 0x01, 0x00, 0x00, 0xd2, 0x62, 0x00, 0x00, 0x47,
 0x24, 0x01, 0x00, 0x49, 0xec, 0x0c, 0xd1, 0x62,
 0x00, 0x00, 0x71, 0xd2, 0x62, 0x00, 0x00, 0x47,
 0x49, 0x7f, 0xea, 0xb4, 0x0e, 0x0e, 0xd1, 0x28,
 0xbc, 0x03, 0x86, 0x04, 0x07, 0x03, 0x2b, 0x9e,
 0x94, 0x0d, 0x3b, 0x1d, 0x0e, 0x42, 0x07, 0x01,
 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x02,
 0x00, 0x8c, 0x07, 0x03, 0x00, 0xdd, 0x28, 0xbc,
 0x03, 0x92, 0x04, 0x01, 0x03, 0x0e, 0xc6, 0x07,
 0x01, 0x00, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00,
 0x31, 0x04, 0xe4, 0x01, 0x00, 0x01, 0x00, 0xe2,
 0x01, 0x00, 0x01, 0x00, 0x9a, 0x01, 0x00, 0x01,
 0x00, 0x10, 0x00, 0x01, 0x20, 0xec, 0x01, 0x00,
 0x0d, 0x0c, 0x02, 0xc9, 0x0c, 0x03, 0xca, 0x61,
 0x03, 0x00, 0x0c, 0x00, 0xcb, 0x2b, 0xc5, 0x34,
 0xc6, 0x26, 0x00, 0x00, 0xb5, 0xc7, 0x52, 0x0e,
 0x27, 0x01, 0x00, 0x11, 0x64, 0x03, 0x00, 0x65,
 0x00, 0x00, 0x11, 0xea, 0x08, 0x62, 0x03, 0x00,
 0x1b, 0x24, 0x00, 0x00, 0x0e, 0x0e, 0x62, 0x03,
 0x00, 0x28, 0xbc, 0x03, 0x96, 0x04, 0x00, 0x0e,
 0x42, 0x07, 0x01, 0x00, 0x00, 0x01, 0x00, 0x02,
 0x01, 0x00, 0x17, 0x01, 0x10, 0x00, 0x01, 0x00,
 0xec, 0x01, 0x01, 0x0d, 0x08, 0xc9, 0x2b, 0x65,
 0x00, 0x00, 0x11, 0xea, 0x06, 0xc5, 0x1b, 0x24,
 0x00, 0x00, 0x0e, 0xc5, 0xc1, 0x43, 0x53, 0x01,
 0x00, 0x00, 0x29, 0xbc, 0x03, 0x9c, 0x04, 0x02,
 0x4e, 0x26, 0x0e, 0x40, 0x07, 0x01, 0x00, 0x01,
 0x06, 0x01, 0x0a, 0x00, 0x00, 0x87, 0x01, 0x07,
 0x00, 0x00, 0x01, 0x00, 0xb2, 0x07, 0x00, 0x00,
 0x00, 0xb4, 0x07, 0x00, 0x01, 0x00, 0xb6, 0x07,
 0x00, 0x02, 0x00, 0xb8, 0x07, 0x00, 0x03, 0x00,
 0xba, 0x07, 0x01, 0x00, 0x30, 0x10, 0x00, 0x01,
 0x00, 0x08, 0xc3, 0x05, 0xd1, 0x6f, 0x11, 0x78,
 0xd9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x41,
 0xd9, 0x01, 0x00, 0x00, 0x3d, 0x11, 0x78, 0xda,
 0x01, 0x00, 0x00, 0x01, 0x00, 0x1d, 0x41, 0xda,
 0x01, 0x00, 0x00, 0x3d, 0x11, 0x78, 0xdb, 0x01,
 0x00, 0x00, 0x02, 0x00, 0x1d, 0x41, 0xdb, 0x01,
 0x00, 0x00, 0x3d, 0x11, 0x78, 0xdc, 0x01, 0x00,
 0x00, 0x03, 0x00, 0x1d, 0x41, 0xdc, 0x01, 0x00,
 0x00, 0x3d, 0x0e, 0x61, 0x04, 0x00, 0x04, 0xde,
 0x01, 0x00, 0x00, 0x42, 0x5c, 0x00, 0x00, 0x00,
 0xc6, 0x04, 0xdf, 0x01, 0x00, 0x00, 0xc5, 0x04,
 0xe0, 0x01, 0x00, 0x00, 0xc8, 0x04, 0xe1, 0x01,
 0x00, 0x00, 0xc7, 0x04, 0xe2, 0x01, 0x00, 0x00,
 0x24, 0x08, 0x00, 0xc3, 0x04, 0xc2, 0x05, 0xc2,
 0x05, 0x41, 0x53, 0x01, 0x00, 0x00, 0x42, 0x5c,
 0x00, 0x00, 0x00, 0xc1, 0x62, 0x04, 0x00, 0x24,
 0x02, 0x00, 0x43, 0x53, 0x01, 0x00, 0x00, 0x29,
 0xbc, 0x03, 0xa0, 0x04, 0x08, 0x1c, 0x4e, 0x4e,
 0x4e, 0x53, 0x12, 0xc6, 0x85, 0x0e, 0x42, 0x07,
 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
 0x09, 0x01, 0x10, 0x00, 0x01, 0x00, 0x08, 0xc9,
 0xc5, 0x41, 0x53, 0x01, 0x00, 0x00, 0x28, 0xbc,
 0x03, 0xaa, 0x04, 0x01, 0x0d, 0x0e, 0x43, 0x06,
 0x01, 0xc0, 0x03, 0x00, 0x04, 0x00, 0x05, 0x01,
 0x00, 0xd1, 0x01, 0x04, 0xc6, 0x07, 0x01, 0x00,
 0x20, 0xc8, 0x07, 0x01, 0x01, 0x20, 0xca, 0x07,
 0x01, 0x02, 0x20, 0xcc, 0x07, 0x01, 0x03, 0x20,
 0xc2, 0x03, 0x31, 0x08, 0x61, 0x03, 0x00, 0x61,
 0x02, 0x00, 0x61, 0x01, 0x00, 0x61, 0x00, 0x00,
 0x65, 0x00, 0x00, 0x42, 0xc8, 0x01, 0x00, 0x00,
 0x24, 0x00, 0x00, 0xc9, 0x62, 0x00, 0x00, 0x96,
 0xea, 0x1d, 0x65, 0x00, 0x00, 0x42, 0xce, 0x01,
 0x00, 0x00, 0x24, 0x00, 0x00, 0xea, 0x10, 0x38,
 0x94, 0x00, 0x00, 0x00, 0x11, 0x04, 0xe7, 0x01,
 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f, 0x65, 0x00,
 0x00, 0x42, 0xc7, 0x01, 0x00, 0x00, 0x24, 0x00,
 0x00, 0xca, 0x62, 0x00, 0x00, 0xea, 0x13, 0x65,
 0x00, 0x00, 0x42, 0xcd, 0x01, 0x00, 0x00, 0x62,
 0x01, 0x00, 0x62, 0x00, 0x00, 0x24, 0x02, 0x00,
 0x0e, 0x65, 0x00, 0x00, 0x42, 0xca, 0x01, 0x00,
 0x00, 0x24, 0x00, 0x00, 0xcb, 0x62, 0x01, 0x00,
 0x42, 0xe0, 0x00, 0x00, 0x00, 0x62, 0x02, 0x00,
 0x24, 0x01, 0x00, 0xcc, 0x62, 0x03, 0x00, 0x38,
 0x45, 0x00, 0x00, 0x00, 0xac, 0xea, 0x4e, 0x62,
 0x03, 0x00, 0xea, 0x2d, 0x62, 0x03, 0x00, 0x41,
 0x3c, 0x00, 0x00, 0x00, 0xea, 0x23, 0x62, 0x03,
 0x00, 0x41, 0x3c, 0x00, 0x00, 0x00, 0x41, 0x36,
 0x00, 0x00, 0x00, 0x04, 0xe8, 0x01, 0x00, 0x00,
 0xab, 0xea, 0x0e, 0x62, 0x03, 0x00, 0x42, 0xe9,
 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0x0e, 0x29,
 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42, 0xea, 0x01,
 0x00, 0x00, 0x65, 0x00, 0x00, 0x42, 0xcb, 0x01,
 0x00, 0x00, 0x62, 0x03, 0x00, 0x24, 0x01, 0x00,
 0x24, 0x01, 0x00, 0x0e, 0x29, 0xbc, 0x03, 0xaf,
 0x04, 0x0d, 0x3f, 0x40, 0x62, 0x49, 0x09, 0x40,
 0x1c, 0x5f, 0x40, 0x4e, 0x00, 0x58, 0x02, 0x0e,
 0x43, 0x06, 0x01, 0xbe, 0x03, 0x00, 0x04, 0x00,
 0x05, 0x01, 0x00, 0xe0, 0x01, 0x04, 0xc6, 0x07,
 0x01, 0x00, 0x20, 0xc8, 0x07, 0x01, 0x01, 0x20,
 0xca, 0x07, 0x01, 0x02, 0x20, 0xcc, 0x07, 0x01,
 0x03, 0x20, 0xc2, 0x03, 0x31, 0x08, 0x61, 0x03,
 0x00, 0x61, 0x02, 0x00, 0x61, 0x01, 0x00, 0x61,
 0x00, 0x00, 0x65, 0x00, 0x00, 0x42, 0xc8, 0x01,
 0x00, 0x00, 0x24, 0x00, 0x00, 0xc9, 0x62, 0x00,
 0x00, 0x96, 0xea, 0x1d, 0x65, 0x00, 0x00, 0x42,
 0xce, 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0xea,
 0x10, 0x38, 0x94, 0x00, 0x00, 0x00, 0x11, 0x04,
 0xe7, 0x01, 0x00, 0x00, 0x21, 0x01, 0x00, 0x2f,
 0x65, 0x00, 0x00, 0x42, 0xc7, 0x01, 0x00, 0x00,
 0x24, 0x00, 0x00, 0xca, 0x62, 0x00, 0x00, 0xea,
 0x13, 0x65, 0x00, 0x00, 0x42, 0xcd, 0x01, 0x00,
 0x00, 0x62, 0x01, 0x00, 0x62, 0x00, 0x00, 0x24,
 0x02, 0x00, 0x0e, 0x65, 0x00, 0x00, 0x42, 0xca,
 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0xcb, 0x62,
 0x01, 0x00, 0x42, 0xdf, 0x00, 0x00, 0x00, 0x62,
 0x02, 0x00, 0x24, 0x01, 0x00, 0xcc, 0x65, 0x00,
 0x00, 0x42, 0xc9, 0x01, 0x00, 0x00, 0x62, 0x01,
 0x00, 0x24, 0x01, 0x00, 0x0e, 0x62, 0x03, 0x00,
 0x38, 0x45, 0x00, 0x00, 0x00, 0xac, 0xea, 0x4e,
 0x62, 0x03, 0x00, 0xea, 0x2d, 0x62, 0x03, 0x00,
 0x41, 0x3c, 0x00, 0x00, 0x00, 0xea, 0x23, 0x62,
 0x03, 0x00, 0x41, 0x3c, 0x00, 0x00, 0x00, 0x41,
 0x36, 0x00, 0x00, 0x00, 0x04, 0xe8, 0x01, 0x00,
 0x00, 0xab, 0xea, 0x0e, 0x62, 0x03, 0x00, 0x42,
 0xe9, 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0x0e,
 0x29, 0x38, 0xb8, 0x01, 0x00, 0x00, 0x42, 0xea,
 0x01, 0x00, 0x00, 0x65, 0x00, 0x00, 0x42, 0xcb,
 0x01, 0x00, 0x00, 0x62, 0x03, 0x00, 0x24, 0x01,
 0x00, 0x24, 0x01, 0x00, 0x0e, 0x29, 0xbc, 0x03,
 0xc1, 0x04, 0x0e, 0x3f, 0x40, 0x62, 0x49, 0x09,
 0x40, 0x1c, 0x5f, 0x40, 0x4f, 0x4f, 0x00, 0x58,
 0x02,
};

'''
'''--- build/contract.js ---
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object.keys(descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object.defineProperty(target, property, desc);
    desc = null;
  }

  return desc;
}

var PromiseResult;

(function (PromiseResult) {
  PromiseResult[PromiseResult["NotReady"] = 0] = "NotReady";
  PromiseResult[PromiseResult["Successful"] = 1] = "Successful";
  PromiseResult[PromiseResult["Failed"] = 2] = "Failed";
})(PromiseResult || (PromiseResult = {}));

var PromiseError;

(function (PromiseError) {
  PromiseError[PromiseError["Failed"] = 0] = "Failed";
  PromiseError[PromiseError["NotReady"] = 1] = "NotReady";
})(PromiseError || (PromiseError = {}));

function assert(b, str) {
  if (b) {
    return;
  } else {
    throw Error("assertion failed: " + str);
  }
}

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}

function chain(...args) {
  const wrap = (a, b) => c => a(b(c));

  const encode = Array.from(args).reverse().reduce((acc, i) => acc ? wrap(acc, i.encode) : i.encode, undefined);
  const decode = args.reduce((acc, i) => acc ? wrap(acc, i.decode) : i.decode, undefined);
  return {
    encode,
    decode
  };
}

function alphabet(alphabet) {
  return {
    encode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('alphabet.encode input should be an array of numbers');
      return digits.map(i => {
        assertNumber(i);
        if (i < 0 || i >= alphabet.length) throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
        return alphabet[i];
      });
    },
    decode: input => {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('alphabet.decode input should be array of strings');
      return input.map(letter => {
        if (typeof letter !== 'string') throw new Error(`alphabet.decode: not string element=${letter}`);
        const index = alphabet.indexOf(letter);
        if (index === -1) throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
        return index;
      });
    }
  };
}

function join(separator = '') {
  if (typeof separator !== 'string') throw new Error('join separator should be string');
  return {
    encode: from => {
      if (!Array.isArray(from) || from.length && typeof from[0] !== 'string') throw new Error('join.encode input should be array of strings');

      for (let i of from) if (typeof i !== 'string') throw new Error(`join.encode: non-string input=${i}`);

      return from.join(separator);
    },
    decode: to => {
      if (typeof to !== 'string') throw new Error('join.decode input should be string');
      return to.split(separator);
    }
  };
}

function padding(bits, chr = '=') {
  assertNumber(bits);
  if (typeof chr !== 'string') throw new Error('padding chr should be string');
  return {
    encode(data) {
      if (!Array.isArray(data) || data.length && typeof data[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of data) if (typeof i !== 'string') throw new Error(`padding.encode: non-string input=${i}`);

      while (data.length * bits % 8) data.push(chr);

      return data;
    },

    decode(input) {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of input) if (typeof i !== 'string') throw new Error(`padding.decode: non-string input=${i}`);

      let end = input.length;
      if (end * bits % 8) throw new Error('Invalid padding: string should have whole number of bytes');

      for (; end > 0 && input[end - 1] === chr; end--) {
        if (!((end - 1) * bits % 8)) throw new Error('Invalid padding: string has too much padding');
      }

      return input.slice(0, end);
    }

  };
}

function normalize(fn) {
  if (typeof fn !== 'function') throw new Error('normalize fn should be function');
  return {
    encode: from => from,
    decode: to => fn(to)
  };
}

function convertRadix(data, from, to) {
  if (from < 2) throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);
  if (to < 2) throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);
  if (!Array.isArray(data)) throw new Error('convertRadix: data should be array');
  if (!data.length) return [];
  let pos = 0;
  const res = [];
  const digits = Array.from(data);
  digits.forEach(d => {
    assertNumber(d);
    if (d < 0 || d >= from) throw new Error(`Wrong integer: ${d}`);
  });

  while (true) {
    let carry = 0;
    let done = true;

    for (let i = pos; i < digits.length; i++) {
      const digit = digits[i];
      const digitBase = from * carry + digit;

      if (!Number.isSafeInteger(digitBase) || from * carry / from !== carry || digitBase - digit !== from * carry) {
        throw new Error('convertRadix: carry overflow');
      }

      carry = digitBase % to;
      digits[i] = Math.floor(digitBase / to);
      if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
      if (!done) continue;else if (!digits[i]) pos = i;else done = false;
    }

    res.push(carry);
    if (done) break;
  }

  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);

  return res.reverse();
}

const gcd = (a, b) => !b ? a : gcd(b, a % b);

const radix2carry = (from, to) => from + (to - gcd(from, to));

function convertRadix2(data, from, to, padding) {
  if (!Array.isArray(data)) throw new Error('convertRadix2: data should be array');
  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);

  if (radix2carry(from, to) > 32) {
    throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
  }

  let carry = 0;
  let pos = 0;
  const mask = 2 ** to - 1;
  const res = [];

  for (const n of data) {
    assertNumber(n);
    if (n >= 2 ** from) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
    carry = carry << from | n;
    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
    pos += from;

    for (; pos >= to; pos -= to) res.push((carry >> pos - to & mask) >>> 0);

    carry &= 2 ** pos - 1;
  }

  carry = carry << to - pos & mask;
  if (!padding && pos >= from) throw new Error('Excess padding');
  if (!padding && carry) throw new Error(`Non-zero padding: ${carry}`);
  if (padding && pos > 0) res.push(carry >>> 0);
  return res;
}

function radix(num) {
  assertNumber(num);
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix.encode input should be Uint8Array');
      return convertRadix(Array.from(bytes), 2 ** 8, num);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix.decode input should be array of strings');
      return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
    }
  };
}

function radix2(bits, revPadding = false) {
  assertNumber(bits);
  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix2.encode input should be Uint8Array');
      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix2.decode input should be array of strings');
      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
    }
  };
}

function unsafeWrapper(fn) {
  if (typeof fn !== 'function') throw new Error('unsafeWrapper fn should be function');
  return function (...args) {
    try {
      return fn.apply(null, args);
    } catch (e) {}
  };
}
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize(s => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));

const genBase58 = abc => chain(radix(58), alphabet(abc), join(''));

const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
const base58xmr = {
  encode(data) {
    let res = '';

    for (let i = 0; i < data.length; i += 8) {
      const block = data.subarray(i, i + 8);
      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
    }

    return res;
  },

  decode(str) {
    let res = [];

    for (let i = 0; i < str.length; i += 11) {
      const slice = str.slice(i, i + 11);
      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
      const block = base58.decode(slice);

      for (let j = 0; j < block.length - blockLen; j++) {
        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
      }

      res = res.concat(Array.from(block.slice(block.length - blockLen)));
    }

    return Uint8Array.from(res);
  }

};
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];

function bech32Polymod(pre) {
  const b = pre >> 25;
  let chk = (pre & 0x1ffffff) << 5;

  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
    if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
  }

  return chk;
}

function bechChecksum(prefix, words, encodingConst = 1) {
  const len = prefix.length;
  let chk = 1;

  for (let i = 0; i < len; i++) {
    const c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
    chk = bech32Polymod(chk) ^ c >> 5;
  }

  chk = bech32Polymod(chk);

  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;

  for (let v of words) chk = bech32Polymod(chk) ^ v;

  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);

  chk ^= encodingConst;
  return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}

function genBech32(encoding) {
  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;

  const _words = radix2(5);

  const fromWords = _words.decode;
  const toWords = _words.encode;
  const fromWordsUnsafe = unsafeWrapper(fromWords);

  function encode(prefix, words, limit = 90) {
    if (typeof prefix !== 'string') throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
    if (!Array.isArray(words) || words.length && typeof words[0] !== 'number') throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
    const actualLength = prefix.length + 7 + words.length;
    if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
    prefix = prefix.toLowerCase();
    return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;
  }

  function decode(str, limit = 90) {
    if (typeof str !== 'string') throw new Error(`bech32.decode input should be string, not ${typeof str}`);
    if (str.length < 8 || limit !== false && str.length > limit) throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
    const lowered = str.toLowerCase();
    if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
    str = lowered;
    const sepIndex = str.lastIndexOf('1');
    if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
    const prefix = str.slice(0, sepIndex);

    const _words = str.slice(sepIndex + 1);

    if (_words.length < 6) throw new Error('Data must be at least 6 characters long');
    const words = BECH_ALPHABET.decode(_words).slice(0, -6);
    const sum = bechChecksum(prefix, words, ENCODING_CONST);
    if (!_words.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
    return {
      prefix,
      words
    };
  }

  const decodeUnsafe = unsafeWrapper(decode);

  function decodeToBytes(str) {
    const {
      prefix,
      words
    } = decode(str, false);
    return {
      prefix,
      words,
      bytes: fromWords(words)
    };
  }

  return {
    encode,
    decode,
    decodeToBytes,
    decodeUnsafe,
    fromWords,
    fromWordsUnsafe,
    toWords
  };
}

genBech32('bech32');
genBech32('bech32m');
const utf8 = {
  encode: data => new TextDecoder().decode(data),
  decode: str => new TextEncoder().encode(str)
};
const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize(s => {
  if (typeof s !== 'string' || s.length % 2) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
  return s.toLowerCase();
}));
const CODERS = {
  utf8,
  hex,
  base16,
  base32,
  base64,
  base64url,
  base58,
  base58xmr
};
`Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;

var CurveType;

(function (CurveType) {
  CurveType[CurveType["ED25519"] = 0] = "ED25519";
  CurveType[CurveType["SECP256K1"] = 1] = "SECP256K1";
})(CurveType || (CurveType = {}));

const U64_MAX = 2n ** 64n - 1n;
const EVICTED_REGISTER = U64_MAX - 1n;
function log(...params) {
  env.log(`${params.map(x => x === undefined ? 'undefined' : x) // Stringify undefined
  .map(x => typeof x === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings
  .join(' ')}` // Convert to string
  );
}
function predecessorAccountId() {
  env.predecessor_account_id(0);
  return env.read_register(0);
}
function attachedDeposit() {
  return env.attached_deposit();
}
function storageRead(key) {
  let ret = env.storage_read(key, 0);

  if (ret === 1n) {
    return env.read_register(0);
  } else {
    return null;
  }
}
function storageHasKey(key) {
  let ret = env.storage_has_key(key);

  if (ret === 1n) {
    return true;
  } else {
    return false;
  }
}
function storageGetEvicted() {
  return env.read_register(EVICTED_REGISTER);
}
function currentAccountId() {
  env.current_account_id(0);
  return env.read_register(0);
}
function input() {
  env.input(0);
  return env.read_register(0);
}
function storageUsage() {
  return env.storage_usage();
}
function accountBalance() {
  return env.account_balance();
}
function promiseBatchCreate(accountId) {
  return env.promise_batch_create(accountId);
}
function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {
  env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);
}
function promiseBatchActionTransfer(promiseIndex, amount) {
  env.promise_batch_action_transfer(promiseIndex, amount);
}
function promiseReturn(promiseIdx) {
  env.promise_return(promiseIdx);
}
function storageWrite(key, value) {
  let exist = env.storage_write(key, value, EVICTED_REGISTER);

  if (exist === 1n) {
    return true;
  }

  return false;
}
function storageRemove(key) {
  let exist = env.storage_remove(key, EVICTED_REGISTER);

  if (exist === 1n) {
    return true;
  }

  return false;
}

function initialize({}) {
  return function (target, key, descriptor) {};
}
function call({
  privateFunction = false,
  payableFunction = false
}) {
  return function (target, key, descriptor) {
    const originalMethod = descriptor.value;

    descriptor.value = function (...args) {
      if (privateFunction && predecessorAccountId() !== currentAccountId()) {
        throw Error("Function is private");
      }

      if (!payableFunction && attachedDeposit() > BigInt(0)) {
        throw Error("Function is not payable");
      }

      return originalMethod.apply(this, args);
    };
  };
}
function view({}) {
  return function (target, key, descriptor) {};
}
function NearBindgen({
  requireInit = false
}) {
  return target => {
    return class extends target {
      static _create() {
        return new target();
      }

      static _getState() {
        const rawState = storageRead("STATE");
        return rawState ? this._deserialize(rawState) : null;
      }

      static _saveToStorage(obj) {
        storageWrite("STATE", this._serialize(obj));
      }

      static _getArgs() {
        return JSON.parse(input() || "{}");
      }

      static _serialize(value) {
        return JSON.stringify(value);
      }

      static _deserialize(value) {
        return JSON.parse(value);
      }

      static _reconstruct(classObject, plainObject) {
        for (const item in classObject) {
          if (classObject[item].constructor?.deserialize !== undefined) {
            classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);
          } else {
            classObject[item] = plainObject[item];
          }
        }

        return classObject;
      }

      static _requireInit() {
        return requireInit;
      }

    };
  };
}

class LookupMap {
  constructor(keyPrefix) {
    this.keyPrefix = keyPrefix;
  }

  containsKey(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    return storageHasKey(storageKey);
  }

  get(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    let raw = storageRead(storageKey);

    if (raw !== null) {
      return JSON.parse(raw);
    }

    return null;
  }

  remove(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);

    if (storageRemove(storageKey)) {
      return JSON.parse(storageGetEvicted());
    }

    return null;
  }

  set(key, value) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    let storageValue = JSON.stringify(value);

    if (storageWrite(storageKey, storageValue)) {
      return JSON.parse(storageGetEvicted());
    }

    return null;
  }

  extend(objects) {
    for (let kv of objects) {
      this.set(kv[0], kv[1]);
    }
  }

  serialize() {
    return JSON.stringify(this);
  } // converting plain object to class object

  static deserialize(data) {
    return new LookupMap(data.keyPrefix);
  }

}

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2;

let FungibleToken = (_dec = NearBindgen({
  initRequired: true
}), _dec2 = initialize({}), _dec3 = call({
  payableFunction: true
}), _dec4 = call({
  payableFunction: true
}), _dec5 = call({
  payableFunction: true
}), _dec6 = view({}), _dec7 = view({}), _dec(_class = (_class2 = class FungibleToken {
  accounts = new LookupMap("a");
  accountRegistrants = new LookupMap("r");
  accountDeposits = new LookupMap("c");
  totalSupply = "0";

  init({
    owner_id,
    total_supply
  }) {
    assert(BigInt(total_supply) > BigInt(0), "Total supply should be a positive number");
    assert(this.totalSupply === "0", "Contract is already initialized");
    this.totalSupply = total_supply;
    this.accounts.set(owner_id, this.totalSupply);
  }

  internalGetMaxAccountStorageUsage() {
    const initialStorageUsage = storageUsage();
    const tempAccountId = "a".repeat(64);
    this.accounts.set(tempAccountId, "0");
    const maxAccountStorageUsage = storageUsage() - initialStorageUsage;
    this.accounts.remove(tempAccountId);
    return maxAccountStorageUsage * BigInt(3); // we create an entry in 3 maps
  }

  internalRegisterAccount({
    registrantAccountId,
    accountId,
    amountStr
  }) {
    assert(!this.accounts.containsKey(accountId), "Account is already registered");
    this.accounts.set(accountId, "0");
    this.accountRegistrants.set(accountId, registrantAccountId);
    this.accountDeposits.set(accountId, amountStr);
  }

  internalSendNEAR(receivingAccountId, amountBigInt) {
    assert(amountBigInt > BigInt("0"), "The amount should be a positive number");
    assert(receivingAccountId != currentAccountId(), "Can't transfer to the contract itself");
    assert(amountBigInt < accountBalance(), `Not enough balance ${accountBalance()} to cover transfer of ${amountBigInt} yoctoNEAR`);
    const transferPromiseId = promiseBatchCreate(receivingAccountId);
    promiseBatchActionTransfer(transferPromiseId, amountBigInt);
    promiseReturn(transferPromiseId);
  }

  internalGetBalance(accountId) {
    assert(this.accounts.containsKey(accountId), `Account ${accountId} is not registered`);
    return this.accounts.get(accountId);
  }

  internalDeposit({
    accountId,
    amount
  }) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) + BigInt(amount);
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) + BigInt(amount);
    this.totalSupply = newSupply.toString();
  }

  internalWithdraw({
    accountId,
    amount
  }) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) - BigInt(amount);
    assert(newBalance >= BigInt(0), "The account doesn't have enough balance");
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) - BigInt(amount);
    assert(newSupply >= BigInt(0), "Total supply overflow");
    this.totalSupply = newSupply.toString();
  }

  internalTransfer(senderId, receiverId, amount, memo = null) {
    assert(senderId != receiverId, "Sender and receiver should be different");
    assert(BigInt(amount) > BigInt(0), "The amount should be a positive number");
    this.internalWithdraw({
      accountId: senderId,
      amount
    });
    this.internalDeposit({
      accountId: receiverId,
      amount
    });
  }

  storage_deposit({
    account_id
  }) {
    const accountId = account_id || predecessorAccountId();
    let attachedDeposit$1 = attachedDeposit();

    if (this.accounts.containsKey(accountId)) {
      if (attachedDeposit$1 > 0) {
        this.internalSendNEAR(predecessorAccountId(), attachedDeposit$1);
        return {
          message: "Account is already registered, deposit refunded to predecessor"
        };
      }

      return {
        message: "Account is already registered"
      };
    }

    let storageCost = this.internalGetMaxAccountStorageUsage();

    if (attachedDeposit$1 < storageCost) {
      this.internalSendNEAR(predecessorAccountId(), attachedDeposit$1);
      return {
        message: `Not enough attached deposit to cover storage cost. Required: ${storageCost.toString()}`
      };
    }

    this.internalRegisterAccount({
      registrantAccountId: predecessorAccountId(),
      accountId: accountId,
      amountStr: storageCost.toString()
    });
    let refund = attachedDeposit$1 - storageCost;

    if (refund > 0) {
      log("Storage registration refunding " + refund + " yoctoNEAR to " + predecessorAccountId());
      this.internalSendNEAR(predecessorAccountId(), refund);
    }

    return {
      message: `Account ${accountId} registered with storage deposit of ${storageCost.toString()}`
    };
  }

  ft_transfer({
    receiver_id,
    amount,
    memo
  }) {
    assert(attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to cover storage");
    let senderId = predecessorAccountId();
    log("Transfer " + amount + " token from " + senderId + " to " + receiver_id);
    this.internalTransfer(senderId, receiver_id, amount, memo);
  }

  ft_transfer_call({
    receiver_id,
    amount,
    memo,
    msg
  }) {
    assert(attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to cover storage");
    let senderId = predecessorAccountId();
    this.internalTransfer(senderId, receiver_id, amount, memo);
    const promise = promiseBatchCreate(receiver_id);
    const params = {
      senderId: senderId,
      amount: amount,
      msg: msg,
      receiverId: receiver_id
    };
    promiseBatchActionFunctionCall(promise, "ft_on_transfer", JSON.stringify(params), 0, 30000000000000);
    return promiseReturn();
  }

  ft_total_supply() {
    return this.totalSupply;
  }

  ft_balance_of({
    account_id
  }) {
    return this.internalGetBalance(account_id);
  }

}, (_applyDecoratedDescriptor(_class2.prototype, "init", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "init"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "storage_deposit", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "storage_deposit"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_transfer", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_transfer"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_transfer_call", [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_transfer_call"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_total_supply", [_dec6], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_total_supply"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_balance_of", [_dec7], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_balance_of"), _class2.prototype)), _class2)) || _class);
function ft_balance_of() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_balance_of(_args);
  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_total_supply() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_total_supply(_args);
  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_transfer_call() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_transfer_call(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_transfer() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_transfer(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function storage_deposit() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.storage_deposit(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function init() {
  let _state = FungibleToken._getState();

  if (_state) throw new Error("Contract already initialized");

  let _contract = FungibleToken._create();

  let _args = FungibleToken._getArgs();

  let _result = _contract.init(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}

export { FungibleToken, ft_balance_of, ft_total_supply, ft_transfer, ft_transfer_call, init, storage_deposit };
//# sourceMappingURL=contract.js.map

'''
'''--- build/fungible-token-helper.js ---
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object.keys(descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object.defineProperty(target, property, desc);
    desc = null;
  }

  return desc;
}

var PromiseResult;

(function (PromiseResult) {
  PromiseResult[PromiseResult["NotReady"] = 0] = "NotReady";
  PromiseResult[PromiseResult["Successful"] = 1] = "Successful";
  PromiseResult[PromiseResult["Failed"] = 2] = "Failed";
})(PromiseResult || (PromiseResult = {}));

var PromiseError;

(function (PromiseError) {
  PromiseError[PromiseError["Failed"] = 0] = "Failed";
  PromiseError[PromiseError["NotReady"] = 1] = "NotReady";
})(PromiseError || (PromiseError = {}));

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}

function chain(...args) {
  const wrap = (a, b) => c => a(b(c));

  const encode = Array.from(args).reverse().reduce((acc, i) => acc ? wrap(acc, i.encode) : i.encode, undefined);
  const decode = args.reduce((acc, i) => acc ? wrap(acc, i.decode) : i.decode, undefined);
  return {
    encode,
    decode
  };
}

function alphabet(alphabet) {
  return {
    encode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('alphabet.encode input should be an array of numbers');
      return digits.map(i => {
        assertNumber(i);
        if (i < 0 || i >= alphabet.length) throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
        return alphabet[i];
      });
    },
    decode: input => {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('alphabet.decode input should be array of strings');
      return input.map(letter => {
        if (typeof letter !== 'string') throw new Error(`alphabet.decode: not string element=${letter}`);
        const index = alphabet.indexOf(letter);
        if (index === -1) throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
        return index;
      });
    }
  };
}

function join(separator = '') {
  if (typeof separator !== 'string') throw new Error('join separator should be string');
  return {
    encode: from => {
      if (!Array.isArray(from) || from.length && typeof from[0] !== 'string') throw new Error('join.encode input should be array of strings');

      for (let i of from) if (typeof i !== 'string') throw new Error(`join.encode: non-string input=${i}`);

      return from.join(separator);
    },
    decode: to => {
      if (typeof to !== 'string') throw new Error('join.decode input should be string');
      return to.split(separator);
    }
  };
}

function padding(bits, chr = '=') {
  assertNumber(bits);
  if (typeof chr !== 'string') throw new Error('padding chr should be string');
  return {
    encode(data) {
      if (!Array.isArray(data) || data.length && typeof data[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of data) if (typeof i !== 'string') throw new Error(`padding.encode: non-string input=${i}`);

      while (data.length * bits % 8) data.push(chr);

      return data;
    },

    decode(input) {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of input) if (typeof i !== 'string') throw new Error(`padding.decode: non-string input=${i}`);

      let end = input.length;
      if (end * bits % 8) throw new Error('Invalid padding: string should have whole number of bytes');

      for (; end > 0 && input[end - 1] === chr; end--) {
        if (!((end - 1) * bits % 8)) throw new Error('Invalid padding: string has too much padding');
      }

      return input.slice(0, end);
    }

  };
}

function normalize(fn) {
  if (typeof fn !== 'function') throw new Error('normalize fn should be function');
  return {
    encode: from => from,
    decode: to => fn(to)
  };
}

function convertRadix(data, from, to) {
  if (from < 2) throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);
  if (to < 2) throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);
  if (!Array.isArray(data)) throw new Error('convertRadix: data should be array');
  if (!data.length) return [];
  let pos = 0;
  const res = [];
  const digits = Array.from(data);
  digits.forEach(d => {
    assertNumber(d);
    if (d < 0 || d >= from) throw new Error(`Wrong integer: ${d}`);
  });

  while (true) {
    let carry = 0;
    let done = true;

    for (let i = pos; i < digits.length; i++) {
      const digit = digits[i];
      const digitBase = from * carry + digit;

      if (!Number.isSafeInteger(digitBase) || from * carry / from !== carry || digitBase - digit !== from * carry) {
        throw new Error('convertRadix: carry overflow');
      }

      carry = digitBase % to;
      digits[i] = Math.floor(digitBase / to);
      if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
      if (!done) continue;else if (!digits[i]) pos = i;else done = false;
    }

    res.push(carry);
    if (done) break;
  }

  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);

  return res.reverse();
}

const gcd = (a, b) => !b ? a : gcd(b, a % b);

const radix2carry = (from, to) => from + (to - gcd(from, to));

function convertRadix2(data, from, to, padding) {
  if (!Array.isArray(data)) throw new Error('convertRadix2: data should be array');
  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);

  if (radix2carry(from, to) > 32) {
    throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
  }

  let carry = 0;
  let pos = 0;
  const mask = 2 ** to - 1;
  const res = [];

  for (const n of data) {
    assertNumber(n);
    if (n >= 2 ** from) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
    carry = carry << from | n;
    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
    pos += from;

    for (; pos >= to; pos -= to) res.push((carry >> pos - to & mask) >>> 0);

    carry &= 2 ** pos - 1;
  }

  carry = carry << to - pos & mask;
  if (!padding && pos >= from) throw new Error('Excess padding');
  if (!padding && carry) throw new Error(`Non-zero padding: ${carry}`);
  if (padding && pos > 0) res.push(carry >>> 0);
  return res;
}

function radix(num) {
  assertNumber(num);
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix.encode input should be Uint8Array');
      return convertRadix(Array.from(bytes), 2 ** 8, num);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix.decode input should be array of strings');
      return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
    }
  };
}

function radix2(bits, revPadding = false) {
  assertNumber(bits);
  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix2.encode input should be Uint8Array');
      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix2.decode input should be array of strings');
      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
    }
  };
}

function unsafeWrapper(fn) {
  if (typeof fn !== 'function') throw new Error('unsafeWrapper fn should be function');
  return function (...args) {
    try {
      return fn.apply(null, args);
    } catch (e) {}
  };
}
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize(s => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));

const genBase58 = abc => chain(radix(58), alphabet(abc), join(''));

const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
const base58xmr = {
  encode(data) {
    let res = '';

    for (let i = 0; i < data.length; i += 8) {
      const block = data.subarray(i, i + 8);
      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
    }

    return res;
  },

  decode(str) {
    let res = [];

    for (let i = 0; i < str.length; i += 11) {
      const slice = str.slice(i, i + 11);
      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
      const block = base58.decode(slice);

      for (let j = 0; j < block.length - blockLen; j++) {
        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
      }

      res = res.concat(Array.from(block.slice(block.length - blockLen)));
    }

    return Uint8Array.from(res);
  }

};
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];

function bech32Polymod(pre) {
  const b = pre >> 25;
  let chk = (pre & 0x1ffffff) << 5;

  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
    if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
  }

  return chk;
}

function bechChecksum(prefix, words, encodingConst = 1) {
  const len = prefix.length;
  let chk = 1;

  for (let i = 0; i < len; i++) {
    const c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
    chk = bech32Polymod(chk) ^ c >> 5;
  }

  chk = bech32Polymod(chk);

  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;

  for (let v of words) chk = bech32Polymod(chk) ^ v;

  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);

  chk ^= encodingConst;
  return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}

function genBech32(encoding) {
  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;

  const _words = radix2(5);

  const fromWords = _words.decode;
  const toWords = _words.encode;
  const fromWordsUnsafe = unsafeWrapper(fromWords);

  function encode(prefix, words, limit = 90) {
    if (typeof prefix !== 'string') throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
    if (!Array.isArray(words) || words.length && typeof words[0] !== 'number') throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
    const actualLength = prefix.length + 7 + words.length;
    if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
    prefix = prefix.toLowerCase();
    return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;
  }

  function decode(str, limit = 90) {
    if (typeof str !== 'string') throw new Error(`bech32.decode input should be string, not ${typeof str}`);
    if (str.length < 8 || limit !== false && str.length > limit) throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
    const lowered = str.toLowerCase();
    if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
    str = lowered;
    const sepIndex = str.lastIndexOf('1');
    if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
    const prefix = str.slice(0, sepIndex);

    const _words = str.slice(sepIndex + 1);

    if (_words.length < 6) throw new Error('Data must be at least 6 characters long');
    const words = BECH_ALPHABET.decode(_words).slice(0, -6);
    const sum = bechChecksum(prefix, words, ENCODING_CONST);
    if (!_words.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
    return {
      prefix,
      words
    };
  }

  const decodeUnsafe = unsafeWrapper(decode);

  function decodeToBytes(str) {
    const {
      prefix,
      words
    } = decode(str, false);
    return {
      prefix,
      words,
      bytes: fromWords(words)
    };
  }

  return {
    encode,
    decode,
    decodeToBytes,
    decodeUnsafe,
    fromWords,
    fromWordsUnsafe,
    toWords
  };
}

genBech32('bech32');
genBech32('bech32m');
const utf8 = {
  encode: data => new TextDecoder().decode(data),
  decode: str => new TextEncoder().encode(str)
};
const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize(s => {
  if (typeof s !== 'string' || s.length % 2) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
  return s.toLowerCase();
}));
const CODERS = {
  utf8,
  hex,
  base16,
  base32,
  base64,
  base64url,
  base58,
  base58xmr
};
`Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;

var CurveType;

(function (CurveType) {
  CurveType[CurveType["ED25519"] = 0] = "ED25519";
  CurveType[CurveType["SECP256K1"] = 1] = "SECP256K1";
})(CurveType || (CurveType = {}));

const U64_MAX = 2n ** 64n - 1n;
const EVICTED_REGISTER = U64_MAX - 1n;
function predecessorAccountId() {
  env.predecessor_account_id(0);
  return env.read_register(0);
}
function attachedDeposit() {
  return env.attached_deposit();
}
function storageRead(key) {
  let ret = env.storage_read(key, 0);

  if (ret === 1n) {
    return env.read_register(0);
  } else {
    return null;
  }
}
function currentAccountId() {
  env.current_account_id(0);
  return env.read_register(0);
}
function input() {
  env.input(0);
  return env.read_register(0);
}
function storageWrite(key, value) {
  let exist = env.storage_write(key, value, EVICTED_REGISTER);

  if (exist === 1n) {
    return true;
  }

  return false;
}

function call({
  privateFunction = false,
  payableFunction = false
}) {
  return function (target, key, descriptor) {
    const originalMethod = descriptor.value;

    descriptor.value = function (...args) {
      if (privateFunction && predecessorAccountId() !== currentAccountId()) {
        throw Error("Function is private");
      }

      if (!payableFunction && attachedDeposit() > BigInt(0)) {
        throw Error("Function is not payable");
      }

      return originalMethod.apply(this, args);
    };
  };
}
function view({}) {
  return function (target, key, descriptor) {};
}
function NearBindgen({
  requireInit = false
}) {
  return target => {
    return class extends target {
      static _create() {
        return new target();
      }

      static _getState() {
        const rawState = storageRead("STATE");
        return rawState ? this._deserialize(rawState) : null;
      }

      static _saveToStorage(obj) {
        storageWrite("STATE", this._serialize(obj));
      }

      static _getArgs() {
        return JSON.parse(input() || "{}");
      }

      static _serialize(value) {
        return JSON.stringify(value);
      }

      static _deserialize(value) {
        return JSON.parse(value);
      }

      static _reconstruct(classObject, plainObject) {
        for (const item in classObject) {
          if (classObject[item].constructor?.deserialize !== undefined) {
            classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);
          } else {
            classObject[item] = plainObject[item];
          }
        }

        return classObject;
      }

      static _requireInit() {
        return requireInit;
      }

    };
  };
}

var _dec, _dec2, _dec3, _class, _class2;
let FungibleTokenHelper = (_dec = NearBindgen({}), _dec2 = call({}), _dec3 = view({}), _dec(_class = (_class2 = class FungibleTokenHelper {
  constructor() {
    this.data = "";
  }

  ft_on_transfer({
    sender_id,
    amount,
    msg,
    receiver_id
  }) {
    const concatString = `[${amount} from ${sender_id} to ${receiver_id}] ${msg} `;
    this.data = this.data.concat("", concatString);
  }

  get_contract_data() {
    return this.data;
  }

}, (_applyDecoratedDescriptor(_class2.prototype, "ft_on_transfer", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_on_transfer"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "get_contract_data", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "get_contract_data"), _class2.prototype)), _class2)) || _class);
function get_contract_data() {
  let _state = FungibleTokenHelper._getState();

  if (!_state && FungibleTokenHelper._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleTokenHelper._create();

  if (_state) {
    FungibleTokenHelper._reconstruct(_contract, _state);
  }

  let _args = FungibleTokenHelper._getArgs();

  let _result = _contract.get_contract_data(_args);
  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleTokenHelper._serialize(_result));
}
function ft_on_transfer() {
  let _state = FungibleTokenHelper._getState();

  if (!_state && FungibleTokenHelper._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleTokenHelper._create();

  if (_state) {
    FungibleTokenHelper._reconstruct(_contract, _state);
  }

  let _args = FungibleTokenHelper._getArgs();

  let _result = _contract.ft_on_transfer(_args);

  FungibleTokenHelper._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleTokenHelper._serialize(_result));
}

export { ft_on_transfer, get_contract_data };
//# sourceMappingURL=fungible-token-helper.js.map

'''
'''--- build/fungible-token.js ---
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object.keys(descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object.defineProperty(target, property, desc);
    desc = null;
  }

  return desc;
}

var PromiseResult;

(function (PromiseResult) {
  PromiseResult[PromiseResult["NotReady"] = 0] = "NotReady";
  PromiseResult[PromiseResult["Successful"] = 1] = "Successful";
  PromiseResult[PromiseResult["Failed"] = 2] = "Failed";
})(PromiseResult || (PromiseResult = {}));

var PromiseError;

(function (PromiseError) {
  PromiseError[PromiseError["Failed"] = 0] = "Failed";
  PromiseError[PromiseError["NotReady"] = 1] = "NotReady";
})(PromiseError || (PromiseError = {}));

function assert(b, str) {
  if (b) {
    return;
  } else {
    throw Error("assertion failed: " + str);
  }
}

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}

function chain(...args) {
  const wrap = (a, b) => c => a(b(c));

  const encode = Array.from(args).reverse().reduce((acc, i) => acc ? wrap(acc, i.encode) : i.encode, undefined);
  const decode = args.reduce((acc, i) => acc ? wrap(acc, i.decode) : i.decode, undefined);
  return {
    encode,
    decode
  };
}

function alphabet(alphabet) {
  return {
    encode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('alphabet.encode input should be an array of numbers');
      return digits.map(i => {
        assertNumber(i);
        if (i < 0 || i >= alphabet.length) throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
        return alphabet[i];
      });
    },
    decode: input => {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('alphabet.decode input should be array of strings');
      return input.map(letter => {
        if (typeof letter !== 'string') throw new Error(`alphabet.decode: not string element=${letter}`);
        const index = alphabet.indexOf(letter);
        if (index === -1) throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
        return index;
      });
    }
  };
}

function join(separator = '') {
  if (typeof separator !== 'string') throw new Error('join separator should be string');
  return {
    encode: from => {
      if (!Array.isArray(from) || from.length && typeof from[0] !== 'string') throw new Error('join.encode input should be array of strings');

      for (let i of from) if (typeof i !== 'string') throw new Error(`join.encode: non-string input=${i}`);

      return from.join(separator);
    },
    decode: to => {
      if (typeof to !== 'string') throw new Error('join.decode input should be string');
      return to.split(separator);
    }
  };
}

function padding(bits, chr = '=') {
  assertNumber(bits);
  if (typeof chr !== 'string') throw new Error('padding chr should be string');
  return {
    encode(data) {
      if (!Array.isArray(data) || data.length && typeof data[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of data) if (typeof i !== 'string') throw new Error(`padding.encode: non-string input=${i}`);

      while (data.length * bits % 8) data.push(chr);

      return data;
    },

    decode(input) {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of input) if (typeof i !== 'string') throw new Error(`padding.decode: non-string input=${i}`);

      let end = input.length;
      if (end * bits % 8) throw new Error('Invalid padding: string should have whole number of bytes');

      for (; end > 0 && input[end - 1] === chr; end--) {
        if (!((end - 1) * bits % 8)) throw new Error('Invalid padding: string has too much padding');
      }

      return input.slice(0, end);
    }

  };
}

function normalize(fn) {
  if (typeof fn !== 'function') throw new Error('normalize fn should be function');
  return {
    encode: from => from,
    decode: to => fn(to)
  };
}

function convertRadix(data, from, to) {
  if (from < 2) throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);
  if (to < 2) throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);
  if (!Array.isArray(data)) throw new Error('convertRadix: data should be array');
  if (!data.length) return [];
  let pos = 0;
  const res = [];
  const digits = Array.from(data);
  digits.forEach(d => {
    assertNumber(d);
    if (d < 0 || d >= from) throw new Error(`Wrong integer: ${d}`);
  });

  while (true) {
    let carry = 0;
    let done = true;

    for (let i = pos; i < digits.length; i++) {
      const digit = digits[i];
      const digitBase = from * carry + digit;

      if (!Number.isSafeInteger(digitBase) || from * carry / from !== carry || digitBase - digit !== from * carry) {
        throw new Error('convertRadix: carry overflow');
      }

      carry = digitBase % to;
      digits[i] = Math.floor(digitBase / to);
      if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
      if (!done) continue;else if (!digits[i]) pos = i;else done = false;
    }

    res.push(carry);
    if (done) break;
  }

  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);

  return res.reverse();
}

const gcd = (a, b) => !b ? a : gcd(b, a % b);

const radix2carry = (from, to) => from + (to - gcd(from, to));

function convertRadix2(data, from, to, padding) {
  if (!Array.isArray(data)) throw new Error('convertRadix2: data should be array');
  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);

  if (radix2carry(from, to) > 32) {
    throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
  }

  let carry = 0;
  let pos = 0;
  const mask = 2 ** to - 1;
  const res = [];

  for (const n of data) {
    assertNumber(n);
    if (n >= 2 ** from) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
    carry = carry << from | n;
    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
    pos += from;

    for (; pos >= to; pos -= to) res.push((carry >> pos - to & mask) >>> 0);

    carry &= 2 ** pos - 1;
  }

  carry = carry << to - pos & mask;
  if (!padding && pos >= from) throw new Error('Excess padding');
  if (!padding && carry) throw new Error(`Non-zero padding: ${carry}`);
  if (padding && pos > 0) res.push(carry >>> 0);
  return res;
}

function radix(num) {
  assertNumber(num);
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix.encode input should be Uint8Array');
      return convertRadix(Array.from(bytes), 2 ** 8, num);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix.decode input should be array of strings');
      return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
    }
  };
}

function radix2(bits, revPadding = false) {
  assertNumber(bits);
  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix2.encode input should be Uint8Array');
      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix2.decode input should be array of strings');
      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
    }
  };
}

function unsafeWrapper(fn) {
  if (typeof fn !== 'function') throw new Error('unsafeWrapper fn should be function');
  return function (...args) {
    try {
      return fn.apply(null, args);
    } catch (e) {}
  };
}
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize(s => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));

const genBase58 = abc => chain(radix(58), alphabet(abc), join(''));

const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
const base58xmr = {
  encode(data) {
    let res = '';

    for (let i = 0; i < data.length; i += 8) {
      const block = data.subarray(i, i + 8);
      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
    }

    return res;
  },

  decode(str) {
    let res = [];

    for (let i = 0; i < str.length; i += 11) {
      const slice = str.slice(i, i + 11);
      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
      const block = base58.decode(slice);

      for (let j = 0; j < block.length - blockLen; j++) {
        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
      }

      res = res.concat(Array.from(block.slice(block.length - blockLen)));
    }

    return Uint8Array.from(res);
  }

};
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];

function bech32Polymod(pre) {
  const b = pre >> 25;
  let chk = (pre & 0x1ffffff) << 5;

  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
    if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
  }

  return chk;
}

function bechChecksum(prefix, words, encodingConst = 1) {
  const len = prefix.length;
  let chk = 1;

  for (let i = 0; i < len; i++) {
    const c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
    chk = bech32Polymod(chk) ^ c >> 5;
  }

  chk = bech32Polymod(chk);

  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;

  for (let v of words) chk = bech32Polymod(chk) ^ v;

  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);

  chk ^= encodingConst;
  return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}

function genBech32(encoding) {
  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;

  const _words = radix2(5);

  const fromWords = _words.decode;
  const toWords = _words.encode;
  const fromWordsUnsafe = unsafeWrapper(fromWords);

  function encode(prefix, words, limit = 90) {
    if (typeof prefix !== 'string') throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
    if (!Array.isArray(words) || words.length && typeof words[0] !== 'number') throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
    const actualLength = prefix.length + 7 + words.length;
    if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
    prefix = prefix.toLowerCase();
    return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;
  }

  function decode(str, limit = 90) {
    if (typeof str !== 'string') throw new Error(`bech32.decode input should be string, not ${typeof str}`);
    if (str.length < 8 || limit !== false && str.length > limit) throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
    const lowered = str.toLowerCase();
    if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
    str = lowered;
    const sepIndex = str.lastIndexOf('1');
    if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
    const prefix = str.slice(0, sepIndex);

    const _words = str.slice(sepIndex + 1);

    if (_words.length < 6) throw new Error('Data must be at least 6 characters long');
    const words = BECH_ALPHABET.decode(_words).slice(0, -6);
    const sum = bechChecksum(prefix, words, ENCODING_CONST);
    if (!_words.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
    return {
      prefix,
      words
    };
  }

  const decodeUnsafe = unsafeWrapper(decode);

  function decodeToBytes(str) {
    const {
      prefix,
      words
    } = decode(str, false);
    return {
      prefix,
      words,
      bytes: fromWords(words)
    };
  }

  return {
    encode,
    decode,
    decodeToBytes,
    decodeUnsafe,
    fromWords,
    fromWordsUnsafe,
    toWords
  };
}

genBech32('bech32');
genBech32('bech32m');
const utf8 = {
  encode: data => new TextDecoder().decode(data),
  decode: str => new TextEncoder().encode(str)
};
const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize(s => {
  if (typeof s !== 'string' || s.length % 2) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
  return s.toLowerCase();
}));
const CODERS = {
  utf8,
  hex,
  base16,
  base32,
  base64,
  base64url,
  base58,
  base58xmr
};
`Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;

var CurveType;

(function (CurveType) {
  CurveType[CurveType["ED25519"] = 0] = "ED25519";
  CurveType[CurveType["SECP256K1"] = 1] = "SECP256K1";
})(CurveType || (CurveType = {}));

const U64_MAX = 2n ** 64n - 1n;
const EVICTED_REGISTER = U64_MAX - 1n;
function log(...params) {
  env.log(`${params.map(x => x === undefined ? 'undefined' : x) // Stringify undefined
  .map(x => typeof x === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings
  .join(' ')}` // Convert to string
  );
}
function predecessorAccountId() {
  env.predecessor_account_id(0);
  return env.read_register(0);
}
function attachedDeposit() {
  return env.attached_deposit();
}
function storageRead(key) {
  let ret = env.storage_read(key, 0);

  if (ret === 1n) {
    return env.read_register(0);
  } else {
    return null;
  }
}
function storageHasKey(key) {
  let ret = env.storage_has_key(key);

  if (ret === 1n) {
    return true;
  } else {
    return false;
  }
}
function storageGetEvicted() {
  return env.read_register(EVICTED_REGISTER);
}
function currentAccountId() {
  env.current_account_id(0);
  return env.read_register(0);
}
function input() {
  env.input(0);
  return env.read_register(0);
}
function storageUsage() {
  return env.storage_usage();
}
function accountBalance() {
  return env.account_balance();
}
function promiseBatchCreate(accountId) {
  return env.promise_batch_create(accountId);
}
function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {
  env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);
}
function promiseBatchActionTransfer(promiseIndex, amount) {
  env.promise_batch_action_transfer(promiseIndex, amount);
}
function promiseReturn(promiseIdx) {
  env.promise_return(promiseIdx);
}
function storageWrite(key, value) {
  let exist = env.storage_write(key, value, EVICTED_REGISTER);

  if (exist === 1n) {
    return true;
  }

  return false;
}
function storageRemove(key) {
  let exist = env.storage_remove(key, EVICTED_REGISTER);

  if (exist === 1n) {
    return true;
  }

  return false;
}

function initialize({}) {
  return function (target, key, descriptor) {};
}
function call({
  privateFunction = false,
  payableFunction = false
}) {
  return function (target, key, descriptor) {
    const originalMethod = descriptor.value;

    descriptor.value = function (...args) {
      if (privateFunction && predecessorAccountId() !== currentAccountId()) {
        throw Error("Function is private");
      }

      if (!payableFunction && attachedDeposit() > BigInt(0)) {
        throw Error("Function is not payable");
      }

      return originalMethod.apply(this, args);
    };
  };
}
function view({}) {
  return function (target, key, descriptor) {};
}
function NearBindgen({
  requireInit = false
}) {
  return target => {
    return class extends target {
      static _create() {
        return new target();
      }

      static _getState() {
        const rawState = storageRead("STATE");
        return rawState ? this._deserialize(rawState) : null;
      }

      static _saveToStorage(obj) {
        storageWrite("STATE", this._serialize(obj));
      }

      static _getArgs() {
        return JSON.parse(input() || "{}");
      }

      static _serialize(value) {
        return JSON.stringify(value);
      }

      static _deserialize(value) {
        return JSON.parse(value);
      }

      static _reconstruct(classObject, plainObject) {
        for (const item in classObject) {
          if (classObject[item].constructor?.deserialize !== undefined) {
            classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);
          } else {
            classObject[item] = plainObject[item];
          }
        }

        return classObject;
      }

      static _requireInit() {
        return requireInit;
      }

    };
  };
}

class LookupMap {
  constructor(keyPrefix) {
    this.keyPrefix = keyPrefix;
  }

  containsKey(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    return storageHasKey(storageKey);
  }

  get(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    let raw = storageRead(storageKey);

    if (raw !== null) {
      return JSON.parse(raw);
    }

    return null;
  }

  remove(key) {
    let storageKey = this.keyPrefix + JSON.stringify(key);

    if (storageRemove(storageKey)) {
      return JSON.parse(storageGetEvicted());
    }

    return null;
  }

  set(key, value) {
    let storageKey = this.keyPrefix + JSON.stringify(key);
    let storageValue = JSON.stringify(value);

    if (storageWrite(storageKey, storageValue)) {
      return JSON.parse(storageGetEvicted());
    }

    return null;
  }

  extend(objects) {
    for (let kv of objects) {
      this.set(kv[0], kv[1]);
    }
  }

  serialize() {
    return JSON.stringify(this);
  } // converting plain object to class object

  static deserialize(data) {
    return new LookupMap(data.keyPrefix);
  }

}

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2;

let FungibleToken = (_dec = NearBindgen({
  initRequired: true
}), _dec2 = initialize({}), _dec3 = call({
  payableFunction: true
}), _dec4 = call({
  payableFunction: true
}), _dec5 = call({
  payableFunction: true
}), _dec6 = view({}), _dec7 = view({}), _dec(_class = (_class2 = class FungibleToken {
  accounts = new LookupMap("a");
  accountRegistrants = new LookupMap("r");
  accountDeposits = new LookupMap("c");
  totalSupply = "0";

  init({
    owner_id,
    total_supply
  }) {
    assert(BigInt(total_supply) > BigInt(0), "Total supply should be a positive number");
    assert(this.totalSupply === "0", "Contract is already initialized");
    this.totalSupply = total_supply;
    this.accounts.set(owner_id, this.totalSupply);
  }

  internalGetMaxAccountStorageUsage() {
    const initialStorageUsage = storageUsage();
    const tempAccountId = "a".repeat(64);
    this.accounts.set(tempAccountId, "0");
    const maxAccountStorageUsage = storageUsage() - initialStorageUsage;
    this.accounts.remove(tempAccountId);
    return maxAccountStorageUsage * BigInt(3); // we create an entry in 3 maps
  }

  internalRegisterAccount({
    registrantAccountId,
    accountId,
    amountStr
  }) {
    assert(!this.accounts.containsKey(accountId), "Account is already registered");
    this.accounts.set(accountId, "0");
    this.accountRegistrants.set(accountId, registrantAccountId);
    this.accountDeposits.set(accountId, amountStr);
  }

  internalSendNEAR(receivingAccountId, amountBigInt) {
    assert(amountBigInt > BigInt("0"), "The amount should be a positive number");
    assert(receivingAccountId != currentAccountId(), "Can't transfer to the contract itself");
    assert(amountBigInt < accountBalance(), `Not enough balance ${accountBalance()} to cover transfer of ${amountBigInt} yoctoNEAR`);
    const transferPromiseId = promiseBatchCreate(receivingAccountId);
    promiseBatchActionTransfer(transferPromiseId, amountBigInt);
    promiseReturn(transferPromiseId);
  }

  internalGetBalance(accountId) {
    assert(this.accounts.containsKey(accountId), `Account ${accountId} is not registered`);
    return this.accounts.get(accountId);
  }

  internalDeposit(accountId, amount) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) + BigInt(amount);
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) + BigInt(amount);
    this.totalSupply = newSupply.toString();
  }

  internalWithdraw(accountId, amount) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) - BigInt(amount);
    assert(newBalance >= BigInt(0), "The account doesn't have enough balance");
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) - BigInt(amount);
    assert(newSupply >= BigInt(0), "Total supply overflow");
    this.totalSupply = newSupply.toString();
  }

  internalTransfer(senderId, receiverId, amount, memo = null) {
    assert(senderId != receiverId, "Sender and receiver should be different");
    assert(BigInt(amount) > BigInt(0), "The amount should be a positive number");
    this.internalWithdraw(senderId, amount);
    this.internalDeposit(receiverId, amount);
  }

  storage_deposit({
    account_id
  }) {
    const accountId = account_id || predecessorAccountId();
    let attachedDeposit$1 = attachedDeposit();

    if (this.accounts.containsKey(accountId)) {
      if (attachedDeposit$1 > 0) {
        this.internalSendNEAR(predecessorAccountId(), attachedDeposit$1);
        return {
          message: "Account is already registered, deposit refunded to predecessor"
        };
      }

      return {
        message: "Account is already registered"
      };
    }

    let storageCost = this.internalGetMaxAccountStorageUsage();

    if (attachedDeposit$1 < storageCost) {
      this.internalSendNEAR(predecessorAccountId(), attachedDeposit$1);
      return {
        message: `Not enough attached deposit to cover storage cost. Required: ${storageCost.toString()}`
      };
    }

    this.internalRegisterAccount({
      registrantAccountId: predecessorAccountId(),
      accountId: accountId,
      amountStr: storageCost.toString()
    });
    let refund = attachedDeposit$1 - storageCost;

    if (refund > 0) {
      log("Storage registration refunding " + refund + " yoctoNEAR to " + predecessorAccountId());
      this.internalSendNEAR(predecessorAccountId(), refund);
    }

    return {
      message: `Account ${accountId} registered with storage deposit of ${storageCost.toString()}`
    };
  }

  ft_transfer({
    receiver_id,
    amount,
    memo
  }) {
    assert(attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to ensure signature");
    let senderId = predecessorAccountId();
    log("Transfer " + amount + " token from " + senderId + " to " + receiver_id);
    this.internalTransfer(senderId, receiver_id, amount, memo);
  }

  ft_transfer_call({
    receiver_id,
    amount,
    memo,
    msg
  }) {
    assert(attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to ensure signature");
    let senderId = predecessorAccountId();
    this.internalTransfer(senderId, receiver_id, amount, memo);
    const promise = promiseBatchCreate(receiver_id);
    const params = {
      sender_id: senderId,
      amount: amount,
      msg: msg,
      receiver_id: receiver_id
    };
    log("Transfer call " + amount + " token from " + senderId + " to " + receiver_id + " with message " + msg);
    promiseBatchActionFunctionCall(promise, "ft_on_transfer", JSON.stringify(params), 0, 30000000000000);
    return promiseReturn();
  }

  ft_total_supply() {
    return this.totalSupply;
  }

  ft_balance_of({
    account_id
  }) {
    return this.internalGetBalance(account_id);
  }

}, (_applyDecoratedDescriptor(_class2.prototype, "init", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "init"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "storage_deposit", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "storage_deposit"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_transfer", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_transfer"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_transfer_call", [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_transfer_call"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_total_supply", [_dec6], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_total_supply"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "ft_balance_of", [_dec7], Object.getOwnPropertyDescriptor(_class2.prototype, "ft_balance_of"), _class2.prototype)), _class2)) || _class);
function ft_balance_of() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_balance_of(_args);
  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_total_supply() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_total_supply(_args);
  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_transfer_call() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_transfer_call(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function ft_transfer() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.ft_transfer(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function storage_deposit() {
  let _state = FungibleToken._getState();

  if (!_state && FungibleToken._requireInit()) {
    throw new Error("Contract must be initialized");
  }

  let _contract = FungibleToken._create();

  if (_state) {
    FungibleToken._reconstruct(_contract, _state);
  }

  let _args = FungibleToken._getArgs();

  let _result = _contract.storage_deposit(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}
function init() {
  let _state = FungibleToken._getState();

  if (_state) throw new Error("Contract already initialized");

  let _contract = FungibleToken._create();

  let _args = FungibleToken._getArgs();

  let _result = _contract.init(_args);

  FungibleToken._saveToStorage(_contract);

  if (_result !== undefined) if (_result && _result.constructor && _result.constructor.name === "NearPromise") _result.onReturn();else env.value_return(FungibleToken._serialize(_result));
}

export { FungibleToken, ft_balance_of, ft_total_supply, ft_transfer, ft_transfer_call, init, storage_deposit };
//# sourceMappingURL=fungible-token.js.map

'''
'''--- build/methods.h ---
DEFINE_NEAR_METHOD(ft_on_transfer)
DEFINE_NEAR_METHOD(get_contract_data)

'''
'''--- jsconfig.json ---
{
  "compilerOptions": {
    "experimentalDecorators": true
  },
  "exclude": ["node_modules"]
}

'''
'''--- package-lock.json ---
{
  "name": "ft-js",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "license": "MIT",
      "dependencies": {
        "near-sdk-js": "0.5.0"
      },
      "devDependencies": {
        "ava": "^4.3.3",
        "near-workspaces": "^3.2.2"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dependencies": {
        "@babel/highlight": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.19.3.tgz",
      "integrity": "sha512-prBHMK4JYYK+wDjJF1q99KK4JLL+egWS4nmNqdlMUgCExMZ+iZW0hGhyC3VEbsPjvaN0TBhW//VIFwBrk8sEiw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.19.3.tgz",
      "integrity": "sha512-WneDJxdsjEvyKtXKsaBGbDeiyOjR5vYq4HcShxnIbG0qixpoHjI3MqeZM9NDvsojNCEBItQE4juOo/bU6e72gQ==",
      "dependencies": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.3",
        "@babel/helper-compilation-targets": "^7.19.3",
        "@babel/helper-module-transforms": "^7.19.0",
        "@babel/helpers": "^7.19.0",
        "@babel/parser": "^7.19.3",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.3",
        "@babel/types": "^7.19.3",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.19.3.tgz",
      "integrity": "sha512-fqVZnmp1ncvZU757UzDheKZpfPgatqY59XtW2/j/18H7u76akb8xqvjw82f+i2UKd/ksYsSick/BCLQUUtJ/qQ==",
      "dependencies": {
        "@babel/types": "^7.19.3",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/generator/node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.9"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.19.3.tgz",
      "integrity": "sha512-65ESqLGyGmLvgR0mst5AdW1FkNlj9rQsCKduzEoEPhBCDFGXvz2jW6bXFG6i0/MrV2s7hhXjjb2yAzcPuQlLwg==",
      "dependencies": {
        "@babel/compat-data": "^7.19.3",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.21.3",
        "semver": "^6.3.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.19.0.tgz",
      "integrity": "sha512-NRz8DwF4jT3UfrmUoZjd0Uph9HQnP30t7Ash+weACcyNkiYTywpIjDBgReJMKgr+n86sn2nPVVmJ28Dm053Kqw==",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-function-name": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz",
      "integrity": "sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w==",
      "dependencies": {
        "@babel/template": "^7.18.10",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "dependencies": {
        "@babel/types": "^7.18.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.19.0.tgz",
      "integrity": "sha512-3HBZ377Fe14RbLIA+ac3sY4PTgpxHVkFrESaWhoI5PuyXPBBX8+C34qblV9G89ZtycGJCmCI/Ut+VUDK4bltNQ==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.18.6",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.0",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.19.0.tgz",
      "integrity": "sha512-40Ryx7I8mT+0gaNxm8JGTZFUITNqdLAgdg0hXzeVZxVD6nFsdhQvip6v8dqkRHzsz1VFpFAaOCHNn0vKBL7Czw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.19.1.tgz",
      "integrity": "sha512-T7ahH7wV0Hfs46SFh5Jz3s0B6+o8g3c+7TMxu7xKfmHikg7EAZ3I2Qk9LFhjxXq8sL7UkP5JflezNwoZa8WvWw==",
      "dependencies": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.19.1",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-simple-access": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.18.6.tgz",
      "integrity": "sha512-iNpIgTgyAvDQpDj76POqg+YEt8fPxx3yaNBg3S30dxNKm2SWfYhD0TGrK/Eu9wHpUW63VQU894TsTg+GLbUa1g==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "dependencies": {
        "@babel/types": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.18.10.tgz",
      "integrity": "sha512-XtIfWmeNY3i4t7t4D2t02q50HvqHybPqW2ki1kosnvWCwuCMeo81Jf0gwr85jy/neUdg5XDdeFE/80DXiO+njw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.19.0.tgz",
      "integrity": "sha512-DRBCKGwIEdqY3+rPJgG/dKfQy9+08rHIAJx8q2p+HSWP87s2HCrQmaAMMyMll2kIXKCW0cO1RdQskx15Xakftg==",
      "dependencies": {
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.0",
        "@babel/types": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/highlight/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.19.3.tgz",
      "integrity": "sha512-pJ9xOlNWHiy9+FuFP09DEAFbAn4JskgRsVcc169w2xRBC3FRGuQEwjeIMMND9L2zc0iEhO/tGv4Zq+km+hxNpQ==",
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-proposal-decorators": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.19.3.tgz",
      "integrity": "sha512-MbgXtNXqo7RTKYIXVchVJGPvaVufQH3pxvQyfbGvNw1DObIhph+PesYXJTcd8J4DdWibvf6Z2eanOyItX8WnJg==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/helper-replace-supers": "^7.19.1",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/plugin-syntax-decorators": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-decorators": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.19.0.tgz",
      "integrity": "sha512-xaBZUEDntt4faL1yN8oIFlhfXeQAWJW7CLKYsHTUqriCUbj8xOra8bfxxKGi/UwExPFBuPdH4XfHc9rGQhrVkQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.19.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.18.6.tgz",
      "integrity": "sha512-mAWAuq4rvOepWCBid55JuRNvpTNf2UGVgoz4JV0fXEKolsVZDzsa4NqCef758WZJj/GDu0gVGItjKFiClTAmZA==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typescript": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.19.3.tgz",
      "integrity": "sha512-z6fnuK9ve9u/0X0rRvI9MY0xg+DOUaABDYOe+/SQTxtlptaBB/V9JIUxJn6xp3lMBeb9qe8xSFmHU35oZDXD+w==",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/plugin-syntax-typescript": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.18.6.tgz",
      "integrity": "sha512-s9ik86kXBAnD760aybBucdpnLsAt0jK1xqJn2juOn9lkOvSHV60os5hxoVJsPzMQxvnUJFAlkont2DvvaYEBtQ==",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-typescript": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.19.3.tgz",
      "integrity": "sha512-qh5yf6149zhq2sgIXmwjnsvmnNQC2iw70UFjp4olxucKrWd/dvlUsBI88VSLUsnMNF7/vnOiA+nk1+yLoCqROQ==",
      "dependencies": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.3",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.19.3",
        "@babel/types": "^7.19.3",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.19.3.tgz",
      "integrity": "sha512-hGCaQzIY22DJlDh9CH7NOxgKkFjBk0Cw9xDO1Xmh2151ti7wiGfQ3LauXzL4HP1fmFlTX6XjpRETTpUcv7wQLw==",
      "dependencies": {
        "@babel/helper-string-parser": "^7.18.10",
        "@babel/helper-validator-identifier": "^7.19.1",
        "to-fast-properties": "^2.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "dependencies": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "dependencies": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0",
        "@types/babel__core": "^7.1.9",
        "rollup": "^1.20.0||^2.0.0"
      },
      "peerDependenciesMeta": {
        "@types/babel__core": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.38.3"
      }
    },
    "node_modules/@rollup/plugin-node-resolve": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-13.3.0.tgz",
      "integrity": "sha512-Lus8rbUo1eEcnS4yTFKLZrVumLPY+YayBdWXgFSHYhTT2iJbMhoaaBL3xl5NCdeRytErGr8tZ0L71BMRmnlwSw==",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "deepmerge": "^4.2.2",
        "is-builtin-module": "^3.1.0",
        "is-module": "^1.0.0",
        "resolve": "^1.19.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.42.0"
      }
    },
    "node_modules/@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "dependencies": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0"
      }
    },
    "node_modules/@rollup/pluginutils/node_modules/estree-walker": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
      "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
    },
    "node_modules/@scure/base": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.1.tgz",
      "integrity": "sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ]
    },
    "node_modules/@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/is?sponsor=1"
      }
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
      "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
      "dev": true,
      "dependencies": {
        "defer-to-connect": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@types/cacheable-request": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.2.tgz",
      "integrity": "sha512-B3xVo+dlKM6nnKTcmm5ZtY/OL8bOAOd2Olee9M1zft65ox50OzjEHW91sDiU9j6cvW8Ejg1/Qkf4xd2kugApUA==",
      "dev": true,
      "dependencies": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "*",
        "@types/node": "*",
        "@types/responselike": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "node_modules/@types/http-cache-semantics": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.1.tgz",
      "integrity": "sha512-SZs7ekbP8CN0txVG2xVRH6EgKmEm31BOxA07vkFaETzZz1xh+cbt8BcI0slpymvwhx5dlFnQG2rTlPVQn+iRPQ==",
      "dev": true
    },
    "node_modules/@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "18.7.23",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.23.tgz",
      "integrity": "sha512-DWNcCHolDq0ZKGizjx2DZjR/PqsYwAcYUJmfMWqtVU2MBMG5Mo+xFZrhGId5r/O5HOuMPyQEcM6KUBp5lBZZBg=="
    },
    "node_modules/@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/responselike": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
      "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
      "dev": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/acorn": {
      "version": "8.8.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==",
      "dev": true,
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/aggregate-error": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-4.0.1.tgz",
      "integrity": "sha512-0poP0T7el6Vq3rstR8Mn4V/IQrpBLO6POkUSrN7RhyY+GF/InCFShQzsQ39T25gkHhLgSLByyAz+Kjb+c2L98w==",
      "dev": true,
      "dependencies": {
        "clean-stack": "^4.0.0",
        "indent-string": "^5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.1.1.tgz",
      "integrity": "sha512-qDOv24WjnYuL+wbwHdlsYZFy+cgPtrYw0Tn7GLORicQp9BkQLzrgI3Pm4VyR9ERZ41YTn7KlMPuL1n05WdZvmg==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/array-find-index": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
      "integrity": "sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/arrgv": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/arrgv/-/arrgv-1.0.2.tgz",
      "integrity": "sha512-a4eg4yhp7mmruZDQFqVMlxNRFGi/i1r87pt8SDHy0/I8PqSXoUTlWZRdAZo0VXgvEARcujbtTk8kiZRi1uDGRw==",
      "dev": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/arrify": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-3.0.0.tgz",
      "integrity": "sha512-tLkvA81vQG/XqE2mjDkGQHoOINtMHtysSnemrmoGe6PydDPMRbVugqyk4A6V/WDWEfm3l+0d8anA9r8cv/5Jaw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "bin": {
        "atob": "bin/atob.js"
      },
      "engines": {
        "node": ">= 4.5.0"
      }
    },
    "node_modules/ava": {
      "version": "4.3.3",
      "resolved": "https://registry.npmjs.org/ava/-/ava-4.3.3.tgz",
      "integrity": "sha512-9Egq/d9R74ExrWohHeqUlexjDbgZJX5jA1Wq4KCTqc3wIfpGEK79zVy4rBtofJ9YKIxs4PzhJ8BgbW5PlAYe6w==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.7.1",
        "acorn-walk": "^8.2.0",
        "ansi-styles": "^6.1.0",
        "arrgv": "^1.0.2",
        "arrify": "^3.0.0",
        "callsites": "^4.0.0",
        "cbor": "^8.1.0",
        "chalk": "^5.0.1",
        "chokidar": "^3.5.3",
        "chunkd": "^2.0.1",
        "ci-info": "^3.3.1",
        "ci-parallel-vars": "^1.0.1",
        "clean-yaml-object": "^0.1.0",
        "cli-truncate": "^3.1.0",
        "code-excerpt": "^4.0.0",
        "common-path-prefix": "^3.0.0",
        "concordance": "^5.0.4",
        "currently-unhandled": "^0.4.1",
        "debug": "^4.3.4",
        "del": "^6.1.1",
        "emittery": "^0.11.0",
        "figures": "^4.0.1",
        "globby": "^13.1.1",
        "ignore-by-default": "^2.1.0",
        "indent-string": "^5.0.0",
        "is-error": "^2.2.2",
        "is-plain-object": "^5.0.0",
        "is-promise": "^4.0.0",
        "matcher": "^5.0.0",
        "mem": "^9.0.2",
        "ms": "^2.1.3",
        "p-event": "^5.0.1",
        "p-map": "^5.4.0",
        "picomatch": "^2.3.1",
        "pkg-conf": "^4.0.0",
        "plur": "^5.1.0",
        "pretty-ms": "^7.0.1",
        "resolve-cwd": "^3.0.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.5",
        "strip-ansi": "^7.0.1",
        "supertap": "^3.0.1",
        "temp-dir": "^2.0.0",
        "write-file-atomic": "^4.0.1",
        "yargs": "^17.5.1"
      },
      "bin": {
        "ava": "entrypoints/cli.mjs"
      },
      "engines": {
        "node": ">=12.22 <13 || >=14.17 <15 || >=16.4 <17 || >=18"
      },
      "peerDependencies": {
        "@ava/typescript": "*"
      },
      "peerDependenciesMeta": {
        "@ava/typescript": {
          "optional": true
        }
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dev": true,
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/base64url": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/base64url/-/base64url-3.0.1.tgz",
      "integrity": "sha512-ir1UPr3dkwexU7FdV8qBBbNDRUhMmIekYMFZfi+C/sLNnRESKPl23nB9b2pltqfOQNnGzsDdId90AEtG5tCx4A==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/blueimp-md5": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/blueimp-md5/-/blueimp-md5-2.19.0.tgz",
      "integrity": "sha512-DRQrD6gJyy8FbiE4s+bDoXS9hiW3Vbx5uCdwvcCf3zLHL+Iv7LtGHLpr+GZV8rHG8tK766FGYBwRbu8pELTt+w==",
      "dev": true
    },
    "node_modules/bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==",
      "dev": true
    },
    "node_modules/borsh": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.5.0.tgz",
      "integrity": "sha512-p9w/qGBeeFdUf2GPBPHdX5JQyez8K5VtoFN7PqSfmR+cVUMSmcwAKhP9n2aXoDSKbtS7xZlZt3MVnrJL7GdYhg==",
      "dev": true,
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.21.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.4.tgz",
      "integrity": "sha512-CBHJJdDmgjl3daYjN5Cp5kbTf1mUhZoS+beLklHIvkOWscs83YAhLlF3Wsh/lciQYAcbBJgTOD44VtG31ZM4Hw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001400",
        "electron-to-chromium": "^1.4.251",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.9"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dev": true,
      "dependencies": {
        "base-x": "^3.0.2"
      }
    },
    "node_modules/builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "dev": true,
      "engines": {
        "node": ">=10.6.0"
      }
    },
    "node_modules/cacheable-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.2.tgz",
      "integrity": "sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==",
      "dev": true,
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/callsites": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-4.0.0.tgz",
      "integrity": "sha512-y3jRROutgpKdz5vzEhWM34TidDU8vkJppF8dszITeb1PQmSqV3DTxyV8G/lyO/DNvtE1YTedehmw9MPZsCBHxQ==",
      "dev": true,
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001414",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001414.tgz",
      "integrity": "sha512-t55jfSaWjCdocnFdKQoO+d2ct9C59UZg4dY3OnUlSZ447r8pUtIKdp0hpAzrGFultmTC+Us+KpKi4GZl/LXlFg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        }
      ]
    },
    "node_modules/capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg==",
      "dev": true
    },
    "node_modules/cbor": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/cbor/-/cbor-8.1.0.tgz",
      "integrity": "sha512-DwGjNW9omn6EwP70aXsn7FQJx5kO12tX0bZkaTjzdVFM6/7nhA4t0EENocKGx6D2Bch9PE2KzCUf5SceBdeijg==",
      "dev": true,
      "dependencies": {
        "nofilter": "^3.1.0"
      },
      "engines": {
        "node": ">=12.19"
      }
    },
    "node_modules/chalk": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.0.1.tgz",
      "integrity": "sha512-Fo07WOYGqMfCWHOzSXOt2CxDbC6skS/jO9ynEcmpANMoPrD+W1r1K6Vx7iNm+AQmETU1Xr2t+n8nzkV9t6xh3w==",
      "dev": true,
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "dev": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://paulmillr.com/funding/"
        }
      ],
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chownr": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
      "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/chunkd": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/chunkd/-/chunkd-2.0.1.tgz",
      "integrity": "sha512-7d58XsFmOq0j6el67Ug9mHf9ELUXsQXYJBkyxhH/k+6Ke0qXRnv0kbemx+Twc6fRJ07C49lcbdgm9FL1Ei/6SQ==",
      "dev": true
    },
    "node_modules/ci-info": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.4.0.tgz",
      "integrity": "sha512-t5QdPT5jq3o262DOQ8zA6E1tlH2upmUc4Hlvrbx1pGYJuiiHl7O7rvVNI+l8HTVhd/q3Qc9vqimkNk5yiXsAug==",
      "dev": true
    },
    "node_modules/ci-parallel-vars": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ci-parallel-vars/-/ci-parallel-vars-1.0.1.tgz",
      "integrity": "sha512-uvzpYrpmidaoxvIQHM+rKSrigjOe9feHYbw4uOI2gdfe1C3xIlxO+kVXq83WQWNniTf8bAxVpy+cQeFQsMERKg==",
      "dev": true
    },
    "node_modules/clean-stack": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-4.2.0.tgz",
      "integrity": "sha512-LYv6XPxoyODi36Dp976riBtSY27VmFo+MKqEU9QCCWyTrdEPDog+RWA7xQWHi6Vbp61j5c4cdzzX1NidnwtUWg==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/clean-yaml-object": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz",
      "integrity": "sha512-3yONmlN9CSAkzNwnRCiJQ7Q2xK5mWuEfL3PuTZcAUzhObbXsfsnMptJzXwz93nc5zn9V9TwCVMmV7w4xsm43dw==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/cli-truncate": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-truncate/-/cli-truncate-3.1.0.tgz",
      "integrity": "sha512-wfOBkjXteqSnI59oPcJkcPl/ZmwvMMOj340qUIY1SKZCv0B9Cf4D4fAucRkIKQmsIuYK3x1rrgU7MeGRruiuiA==",
      "dev": true,
      "dependencies": {
        "slice-ansi": "^5.0.0",
        "string-width": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/cliui/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dev": true,
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/code-excerpt": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/code-excerpt/-/code-excerpt-4.0.0.tgz",
      "integrity": "sha512-xxodCmBen3iy2i0WtAK8FlFNrRzjUqjRsMfho58xT/wvZU1YTM3fCnRjcy1gJPMepaRlgm/0e6w8SpWHpn3/cA==",
      "dev": true,
      "dependencies": {
        "convert-to-spaces": "^2.0.1"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/common-path-prefix": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-3.0.0.tgz",
      "integrity": "sha512-QE33hToZseCH3jS0qN96O/bSh3kaw/h+Tq7ngyY9eWDUnTlTNUyqfqvCXioLe5Na5jFsL78ra/wuBU4iuEgd4w==",
      "dev": true
    },
    "node_modules/commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/concordance": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/concordance/-/concordance-5.0.4.tgz",
      "integrity": "sha512-OAcsnTEYu1ARJqWVGwf4zh4JDfHZEaSNlNccFmt8YjB2l/n19/PF2viLINHc57vO4FKIAFl2FWASIGZZWZ2Kxw==",
      "dev": true,
      "dependencies": {
        "date-time": "^3.1.0",
        "esutils": "^2.0.3",
        "fast-diff": "^1.2.0",
        "js-string-escape": "^1.0.1",
        "lodash": "^4.17.15",
        "md5-hex": "^3.0.1",
        "semver": "^7.3.2",
        "well-known-symbols": "^2.0.0"
      },
      "engines": {
        "node": ">=10.18.0 <11 || >=12.14.0 <13 || >=14"
      }
    },
    "node_modules/convert-source-map": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
      "integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
      "dependencies": {
        "safe-buffer": "~5.1.1"
      }
    },
    "node_modules/convert-to-spaces": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/convert-to-spaces/-/convert-to-spaces-2.0.1.tgz",
      "integrity": "sha512-rcQ1bsQO9799wq24uE5AM2tAILy4gXGIK/njFWcVQkGNZ96edlpY+A7bjwvzjYvLDyzmG1MmMLZhpcsb+klNMQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/currently-unhandled": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
      "integrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==",
      "dev": true,
      "dependencies": {
        "array-find-index": "^1.0.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/date-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/date-time/-/date-time-3.1.0.tgz",
      "integrity": "sha512-uqCUKXE5q1PNBXjPqvwhwJf9SwMoAHBgWJ6DcrnS5o+W2JOiIILl0JEdVD8SGujrNS02GGxgwAg2PN2zONgtjg==",
      "dev": true,
      "dependencies": {
        "time-zone": "^1.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/debug/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha512-hjf+xovcEn31w/EUYdTXQh/8smFL/dzYjohQGEIgjyNavaJfBY2p5F527Bo1VPATxv0VYTUC2bOcXvqFwk78Og==",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "dev": true,
      "dependencies": {
        "mimic-response": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/decompress-response/node_modules/mimic-response": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/deepmerge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/del": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-6.1.1.tgz",
      "integrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg==",
      "dev": true,
      "dependencies": {
        "globby": "^11.0.1",
        "graceful-fs": "^4.2.4",
        "is-glob": "^4.0.1",
        "is-path-cwd": "^2.2.0",
        "is-path-inside": "^3.0.2",
        "p-map": "^4.0.0",
        "rimraf": "^3.0.2",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/del/node_modules/aggregate-error": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
      "integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
      "dev": true,
      "dependencies": {
        "clean-stack": "^2.0.0",
        "indent-string": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/del/node_modules/clean-stack": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/del/node_modules/globby": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
      "dev": true,
      "dependencies": {
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.9",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/del/node_modules/indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/del/node_modules/p-map": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
      "integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
      "dev": true,
      "dependencies": {
        "aggregate-error": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true,
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "dependencies": {
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true
    },
    "node_modules/electron-to-chromium": {
      "version": "1.4.269",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.269.tgz",
      "integrity": "sha512-7mHFONwp7MNvdyto1v70fCwk28NJMFgsK79op+iYHzz1BLE8T66a1B2qW5alb8XgE0yi3FL3ZQjSYZpJpF6snw=="
    },
    "node_modules/emittery": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.11.0.tgz",
      "integrity": "sha512-S/7tzL6v5i+4iJd627Nhv9cLFIo5weAIlGccqJFpnBoDB8U1TF2k5tez4J/QNuxyyhWuFqHg1L84Kd3m7iXg6g==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/emittery?sponsor=1"
      }
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true
    },
    "node_modules/end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dev": true,
      "dependencies": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "node_modules/escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true,
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-diff": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.2.0.tgz",
      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.2.12",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.12.tgz",
      "integrity": "sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/figures": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/figures/-/figures-4.0.1.tgz",
      "integrity": "sha512-rElJwkA/xS04Vfg+CaZodpso7VqBknOYbzi6I76hI4X80RUjkSxO2oAyPmGbuXUppywjqndOrQDl817hDnI++w==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-up": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz",
      "integrity": "sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==",
      "dev": true,
      "dependencies": {
        "locate-path": "^7.1.0",
        "path-exists": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/fs-extra": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz",
      "integrity": "sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==",
      "dev": true,
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "dev": true,
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dev": true,
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/globby": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/globby/-/globby-13.1.2.tgz",
      "integrity": "sha512-LKSDZXToac40u8Q1PQtZihbNdTYSNMuWe+K5l+oa6KgDzSvVrHXlJy40hUP522RjAIoNLJYBJi7ow+rbFpIhHQ==",
      "dev": true,
      "dependencies": {
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.11",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^4.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globby/node_modules/slash": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-4.0.0.tgz",
      "integrity": "sha512-3dOsAHXXUkQTpOYcoAxLIorMTp4gIQr5IW3iVb7A7lFIp0VHhnynm9izx6TssdrIcVIESAlVjtnO2K8bg+Coew==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/got": {
      "version": "11.8.5",
      "resolved": "https://registry.npmjs.org/got/-/got-11.8.5.tgz",
      "integrity": "sha512-o0Je4NvQObAuZPHLFoRSkdG2lTgtcynqymzg2Vupdx6PorhaT5MCbIyXG6d4D94kk8ZG57QeosgdiqfJWhEhlQ==",
      "dev": true,
      "dependencies": {
        "@sindresorhus/is": "^4.0.0",
        "@szmarczak/http-timer": "^4.0.5",
        "@types/cacheable-request": "^6.0.1",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^5.0.3",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "http2-wrapper": "^1.0.0-beta.5.2",
        "lowercase-keys": "^2.0.0",
        "p-cancelable": "^2.0.0",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/got?sponsor=1"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "node_modules/http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dev": true,
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/http-errors/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "dev": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/http2-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
      "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
      "dev": true,
      "dependencies": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      }
    },
    "node_modules/ignore": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.2.0.tgz",
      "integrity": "sha512-CmxgYGiEPCLhfLnpPp1MoRmifwEIOgjcHXxOBjv7mY96c+eWScsOP9c112ZyLdWHi0FxHjI+4uVhKYp/gcdRmQ==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/ignore-by-default": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-2.1.0.tgz",
      "integrity": "sha512-yiWd4GVmJp0Q6ghmM2B/V3oZGRmjrKLXvHR3TE1nfoXsmoggllfZUQe74EN0fJdPFZu2NIvNdrMMLm3OsV7Ohw==",
      "dev": true,
      "engines": {
        "node": ">=10 <11 || >=12 <13 || >=14"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/indent-string": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-5.0.0.tgz",
      "integrity": "sha512-m6FAo/spmsW2Ab2fU35JTYwtOKa2yAwXSwgjSv1TJzh4Mh7mC3lzAOVLBprb72XsTrgkEIsl7YrFNAiDiRhIGg==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/irregular-plurals": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-3.3.0.tgz",
      "integrity": "sha512-MVBLKUTangM3EfRPFROhmWQQKRDsrgI83J8GS3jXy+OwYqiR2/aoWndYQ5416jLE3uaGgLH7ncme3X9y09gZ3g==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-builtin-module": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.0.tgz",
      "integrity": "sha512-phDA4oSGt7vl1n5tJvTWooWWAsXLY+2xCnxNqvKhGEzujg+A43wPlPOyDg3C8XQHN+6k/JTQWJ/j0dQh/qr+Hw==",
      "dependencies": {
        "builtin-modules": "^3.3.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "dependencies": {
        "has": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-error": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-error/-/is-error-2.2.2.tgz",
      "integrity": "sha512-IOQqts/aHWbiisY5DuPJQ0gcbvaLFCa7fBa9xoLfxBZvQ+ZI/Zh9xoI7Gk+G64N0FdK4AbibytHht2tWgpJWLg==",
      "dev": true
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-4.0.0.tgz",
      "integrity": "sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-plain-object": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
      "integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-promise": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
      "dev": true
    },
    "node_modules/is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/is-unicode-supported": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
      "dev": true
    },
    "node_modules/js-string-escape": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
      "integrity": "sha512-Smw4xcfIQ5LVjAOuJCvN/zIodzA/BBSsluuoSykP+lUvScIi4U6RJLfwHet5cxFnCswUjISV8oAXaqaJDY3chg==",
      "dev": true,
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true
    },
    "node_modules/json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA==",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "dev": true,
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.0.tgz",
      "integrity": "sha512-2YvuMsA+jnFGtBareKqgANOEKe1mk3HKiXu2fRmAfyxG0MJAywNhi5ttWA3PMjl4NmpyjZNbFifR2vNjW1znfA==",
      "dev": true,
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/load-json-file": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-7.0.1.tgz",
      "integrity": "sha512-Gnxj3ev3mB5TkVBGad0JM6dmLiQL+o0t23JPBZ9sd+yvSLk05mFoqKBw5N8gbbkU4TNXyqCgIrl/VM17OgUIgQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/locate-path": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-7.1.1.tgz",
      "integrity": "sha512-vJXaRMJgRVD3+cUZs3Mncj2mxpt5mP0EmNOsxRSZRMlbqjvxzDEOIUWXGmavo0ZC9+tNZCBLQ66reA11nbpHZg==",
      "dev": true,
      "dependencies": {
        "p-locate": "^6.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "dependencies": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "node_modules/map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "dependencies": {
        "p-defer": "^1.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/matcher": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-5.0.0.tgz",
      "integrity": "sha512-s2EMBOWtXFc8dgqvoAzKJXxNHibcdJMV0gwqKUaw9E2JBJuGUK7DrNKrA6g/i+v72TT16+6sVm5mS3thaMLQUw==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^5.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/md5-hex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/md5-hex/-/md5-hex-3.0.1.tgz",
      "integrity": "sha512-BUiRtTtV39LIJwinWBjqVsU9xhdnz7/i889V859IBFpuqGAj6LuOvHv5XLbgZ2R7ptJoJaEcxkv88/h25T7Ciw==",
      "dev": true,
      "dependencies": {
        "blueimp-md5": "^2.10.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/mem": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/mem/-/mem-9.0.2.tgz",
      "integrity": "sha512-F2t4YIv9XQUBHt6AOJ0y7lSmP1+cY7Fm1DRh9GClTGzKST7UWLMx6ly9WZdLH/G/ppM5RL4MlQfRT71ri9t19A==",
      "dev": true,
      "dependencies": {
        "map-age-cleaner": "^0.1.3",
        "mimic-fn": "^4.0.0"
      },
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/mem?sponsor=1"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
      "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minipass": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.3.4.tgz",
      "integrity": "sha512-I9WPbWHCGu8W+6k1ZiGpPu0GkoKBeorkfKNuAFBNS1HNFJvke82sxvI5bzcCNpWPorkOO5QQ+zomzzwRxejXiw==",
      "dev": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/minizlib": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
      "dev": true,
      "dependencies": {
        "minipass": "^3.0.0",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "dev": true,
      "bin": {
        "mkdirp": "bin/cmd.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "node_modules/mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "dev": true,
      "bin": {
        "mustache": "bin/mustache"
      }
    },
    "node_modules/near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dev": true,
      "dependencies": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node_modules/near-api-js/node_modules/bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==",
      "dev": true
    },
    "node_modules/near-api-js/node_modules/borsh": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
      "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
      "dev": true,
      "dependencies": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "node_modules/near-sandbox": {
      "version": "0.0.14",
      "resolved": "https://registry.npmjs.org/near-sandbox/-/near-sandbox-0.0.14.tgz",
      "integrity": "sha512-wQ1jcD6W6U4V83D0Zxgi2qedMkmTh5iiqm2t/oriKR4rrTql/j8QR/Ip/NfoIH/plFT+vGungKL+B4HxfNyyNg==",
      "dev": true,
      "hasInstallScript": true,
      "dependencies": {
        "got": "^11.8.2",
        "tar": "^6.1.0"
      },
      "bin": {
        "near-sandbox": "run.js",
        "sandbox": "run.js"
      }
    },
    "node_modules/near-sdk-js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/near-sdk-js/-/near-sdk-js-0.5.0.tgz",
      "integrity": "sha512-wwQTCT+7bu0CahlNxlG5RGaxDiUJQSnjT7GwmK/d2p7Y5PkwWv1K5ZBsZMLOTU3fnhv0Y1LJ6lp00O9kZZLR5Q==",
      "hasInstallScript": true,
      "dependencies": {
        "@babel/core": "^7.17.5",
        "@babel/plugin-proposal-decorators": "^7.17.2",
        "@babel/preset-typescript": "^7.18.6",
        "@rollup/plugin-babel": "^5.3.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-node-resolve": "^13.1.1",
        "@scure/base": "^1.1.1",
        "rollup": "^2.61.1",
        "rollup-plugin-sourcemaps": "^0.6.3",
        "yargs": "^17.5.1"
      },
      "bin": {
        "near-sdk-js": "cli/cli.js"
      }
    },
    "node_modules/near-units": {
      "version": "0.1.9",
      "resolved": "https://registry.npmjs.org/near-units/-/near-units-0.1.9.tgz",
      "integrity": "sha512-xiuBjpNsi+ywiu7P6iWRZdgFm7iCr/cfWlVO6+e5uaAqH4mE1rrurElyrL91llNDSnMwogd9XmlZOw5KbbHNsA==",
      "dev": true,
      "dependencies": {
        "bn.js": "^5.2.0"
      },
      "bin": {
        "near-units": "dist/cli.js"
      }
    },
    "node_modules/near-workspaces": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/near-workspaces/-/near-workspaces-3.2.2.tgz",
      "integrity": "sha512-Y26FyPccs3lTKFpOzeWQy5urtSe0hcdME4ePbidzHNQPOXCub06htnvsoVEUNGVejc50f5nVHcdCiYO8mtEdTA==",
      "dev": true,
      "hasInstallScript": true,
      "dependencies": {
        "base64url": "^3.0.1",
        "bn.js": "^5.2.0",
        "borsh": "^0.5.0",
        "bs58": "^4.0.1",
        "callsites": "^4.0.0",
        "fs-extra": "^10.0.0",
        "js-sha256": "^0.9.0",
        "near-api-js": "^0.44.1",
        "near-sandbox": "^0.0.14",
        "near-units": "^0.1.9",
        "node-port-check": "^2.0.1",
        "promisify-child-process": "^4.1.1",
        "pure-uuid": "^1.6.2",
        "rimraf": "^3.0.2",
        "temp-dir": "^2.0.0"
      },
      "engines": {
        "node": ">= 14.0.0",
        "npm": ">= 6.0.0"
      }
    },
    "node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dev": true,
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-port-check": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/node-port-check/-/node-port-check-2.0.1.tgz",
      "integrity": "sha512-PV1tj5OPbWwxvhPcChXxwCIKl/IfVEdPP4u/gQz2lao/VGoeIUXb/4U72KSHLZpTVBmgTnMm0me7yR0wUsIuPg==",
      "dev": true
    },
    "node_modules/node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "node_modules/nofilter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/nofilter/-/nofilter-3.1.0.tgz",
      "integrity": "sha512-l2NNj07e9afPnhAhvgVrCD/oy2Ai1yfLpuo3EpiO1jFTsB4sFz6oIfAfSZyQzVpkZQ9xS8ZS5g1jCBgq4Hwo0g==",
      "dev": true,
      "engines": {
        "node": ">=12.19"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dev": true,
      "dependencies": {
        "capability": "^0.2.5"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/p-cancelable": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
      "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha512-wB3wfAxZpk2AzOfUMJNL+d36xothRSyj8EXOa4f6GMqYDN9BJaaSISbsk+wS9abmnebVw95C2Kb5t85UmpCxuw==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/p-event": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/p-event/-/p-event-5.0.1.tgz",
      "integrity": "sha512-dd589iCQ7m1L0bmC5NLlVYfy3TbBEsMUfWx9PyAgPeIcFZ/E2yaTZ4Rz4MiBmmJShviiftHVXOqfnfzJ6kyMrQ==",
      "dev": true,
      "dependencies": {
        "p-timeout": "^5.0.2"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-limit": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz",
      "integrity": "sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==",
      "dev": true,
      "dependencies": {
        "yocto-queue": "^1.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz",
      "integrity": "sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==",
      "dev": true,
      "dependencies": {
        "p-limit": "^4.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-map": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-5.5.0.tgz",
      "integrity": "sha512-VFqfGDHlx87K66yZrNdI4YGtD70IRyd+zSvgks6mzHPRNkoKy+9EKP4SFC77/vTTQYmRmti7dvqC+m5jBrBAcg==",
      "dev": true,
      "dependencies": {
        "aggregate-error": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-timeout": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-5.1.0.tgz",
      "integrity": "sha512-auFDyzzzGZZZdHz3BtET9VEz0SE/uMEAx7uWfGPucfzEwwe/xH0iVeZibQmANYE/hp9T2+UUZT5m+BKyrDp3Ew==",
      "dev": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parse-ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/parse-ms/-/parse-ms-2.1.0.tgz",
      "integrity": "sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz",
      "integrity": "sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==",
      "dev": true,
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pkg-conf": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pkg-conf/-/pkg-conf-4.0.0.tgz",
      "integrity": "sha512-7dmgi4UY4qk+4mj5Cd8v/GExPo0K+SlY+hulOSdfZ/T6jVH6//y7NtzZo5WrfhDBxuQ0jCa7fLZmNaNh7EWL/w==",
      "dev": true,
      "dependencies": {
        "find-up": "^6.0.0",
        "load-json-file": "^7.0.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/plur": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/plur/-/plur-5.1.0.tgz",
      "integrity": "sha512-VP/72JeXqak2KiOzjgKtQen5y3IZHn+9GOuLDafPv0eXa47xq0At93XahYBs26MsifCQ4enGKwbjBTKgb9QJXg==",
      "dev": true,
      "dependencies": {
        "irregular-plurals": "^3.3.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/pretty-ms": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pretty-ms/-/pretty-ms-7.0.1.tgz",
      "integrity": "sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==",
      "dev": true,
      "dependencies": {
        "parse-ms": "^2.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/promisify-child-process": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/promisify-child-process/-/promisify-child-process-4.1.1.tgz",
      "integrity": "sha512-/sRjHZwoXf1rJ+8s4oWjYjGRVKNK1DUnqfRC1Zek18pl0cN6k3yJ1cCbqd0tWNe4h0Gr+SY4vR42N33+T82WkA==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/pure-uuid": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/pure-uuid/-/pure-uuid-1.6.2.tgz",
      "integrity": "sha512-WQ4xz74ApW6s0BToRuuyuMo9g0VHx1HljY0H2gPng+mqqz/K1yLj7sHZonZZQ2++WfHl/ZzruilWvuz+WtmxjQ==",
      "dev": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "dependencies": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==",
      "dev": true
    },
    "node_modules/resolve-cwd": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
      "dev": true,
      "dependencies": {
        "resolve-from": "^5.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "dev": true,
      "dependencies": {
        "lowercase-keys": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/rollup-plugin-sourcemaps": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/rollup-plugin-sourcemaps/-/rollup-plugin-sourcemaps-0.6.3.tgz",
      "integrity": "sha512-paFu+nT1xvuO1tPFYXGe+XnQvg4Hjqv/eIhG8i5EspfYYPBKL57X7iVbfv55aNVASg3dzWvES9dmWsL2KhfByw==",
      "dependencies": {
        "@rollup/pluginutils": "^3.0.9",
        "source-map-resolve": "^0.6.0"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "@types/node": ">=10.0.0",
        "rollup": ">=0.31.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        }
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dev": true,
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/serialize-error": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
      "dev": true,
      "dependencies": {
        "type-fest": "^0.13.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/slice-ansi": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-5.0.0.tgz",
      "integrity": "sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^6.0.0",
        "is-fullwidth-code-point": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/slice-ansi?sponsor=1"
      }
    },
    "node_modules/source-map-resolve": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.6.0.tgz",
      "integrity": "sha512-KXBr9d/fO/bWo97NXsPIAW1bFSBOuCnjbNTBMO7N59hsv5i9yzRDfcYwwt0l04+VqnKC+EwzvJZIP/qkuMgR/w==",
      "deprecated": "See https://github.com/lydell/source-map-resolve#deprecated",
      "dependencies": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0"
      }
    },
    "node_modules/sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA=="
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "dev": true
    },
    "node_modules/stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "dependencies": {
        "escape-string-regexp": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/stack-utils/node_modules/escape-string-regexp": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
      "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "dev": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/supertap": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/supertap/-/supertap-3.0.1.tgz",
      "integrity": "sha512-u1ZpIBCawJnO+0QePsEiOknOfCRq0yERxiAchT0i4li0WHNUJbf0evXXSXOcCAR4M8iMDoajXYmstm/qO81Isw==",
      "dev": true,
      "dependencies": {
        "indent-string": "^5.0.0",
        "js-yaml": "^3.14.1",
        "serialize-error": "^7.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tar": {
      "version": "6.1.11",
      "resolved": "https://registry.npmjs.org/tar/-/tar-6.1.11.tgz",
      "integrity": "sha512-an/KZQzQUkZCkuoAA64hM92X0Urb6VpRhAFllDzz44U2mcD5scmT3zBc4VgVpkugF580+DQn8eAFSyoQt0tznA==",
      "dev": true,
      "dependencies": {
        "chownr": "^2.0.0",
        "fs-minipass": "^2.0.0",
        "minipass": "^3.0.0",
        "minizlib": "^2.1.1",
        "mkdirp": "^1.0.3",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/temp-dir": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-2.0.0.tgz",
      "integrity": "sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==",
      "dev": true
    },
    "node_modules/time-zone": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/time-zone/-/time-zone-1.0.0.tgz",
      "integrity": "sha512-TIsDdtKo6+XrPtiTm1ssmMngN1sAhyKnTO2kunQWqNPWIVvCm15Wmw4SWInwTVgJ5u/Tr04+8Ei9TNcw4x4ONA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true,
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "dev": true
    },
    "node_modules/tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
      "dev": true
    },
    "node_modules/type-fest": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w==",
      "dev": true
    },
    "node_modules/universalify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
      "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
      "dev": true,
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.9.tgz",
      "integrity": "sha512-/xsqn21EGVdXI3EXSum1Yckj3ZVZugqyOZQ/CxYPBD/R+ko9NSUScf8tFF4dOKY+2pvSSJA/S+5B8s4Zr4kyvg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        }
      ],
      "dependencies": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      },
      "bin": {
        "browserslist-lint": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "dev": true
    },
    "node_modules/well-known-symbols": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/well-known-symbols/-/well-known-symbols-2.0.0.tgz",
      "integrity": "sha512-ZMjC3ho+KXo0BfJb7JgtQ5IBuvnShdlACNkKkdsqBmYw3bPAaJfPeYUo6tLUaT5tG/Gkh7xkpBhKRQ9e7pyg9Q==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dev": true,
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/wrap-ansi/node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "node_modules/wrap-ansi/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/wrap-ansi/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/write-file-atomic": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz",
      "integrity": "sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==",
      "dev": true,
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.7"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "node_modules/yargs": {
      "version": "17.5.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.5.1.tgz",
      "integrity": "sha512-t6YAJcxDkNX7NFYiVtKvWUz8l+PaKTLiL63mJYWR2GnHq2gjEWISzsLp9wg3aY36dY1j+gfIEL3pIF+XlJJfbA==",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/yargs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yocto-queue": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz",
      "integrity": "sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==",
      "dev": true,
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  },
  "dependencies": {
    "@ampproject/remapping": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.0.tgz",
      "integrity": "sha512-qRmjj8nj9qmLTQXXmaR1cck3UXSRMPrbsLJAasZpF+t3riI71BXed5ebIOYwQntykeZuhjsdweEc9BxH5Jc26w==",
      "requires": {
        "@jridgewell/gen-mapping": "^0.1.0",
        "@jridgewell/trace-mapping": "^0.3.9"
      }
    },
    "@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "requires": {
        "@babel/highlight": "^7.18.6"
      }
    },
    "@babel/compat-data": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.19.3.tgz",
      "integrity": "sha512-prBHMK4JYYK+wDjJF1q99KK4JLL+egWS4nmNqdlMUgCExMZ+iZW0hGhyC3VEbsPjvaN0TBhW//VIFwBrk8sEiw=="
    },
    "@babel/core": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.19.3.tgz",
      "integrity": "sha512-WneDJxdsjEvyKtXKsaBGbDeiyOjR5vYq4HcShxnIbG0qixpoHjI3MqeZM9NDvsojNCEBItQE4juOo/bU6e72gQ==",
      "requires": {
        "@ampproject/remapping": "^2.1.0",
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.3",
        "@babel/helper-compilation-targets": "^7.19.3",
        "@babel/helper-module-transforms": "^7.19.0",
        "@babel/helpers": "^7.19.0",
        "@babel/parser": "^7.19.3",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.3",
        "@babel/types": "^7.19.3",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.1",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/generator": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.19.3.tgz",
      "integrity": "sha512-fqVZnmp1ncvZU757UzDheKZpfPgatqY59XtW2/j/18H7u76akb8xqvjw82f+i2UKd/ksYsSick/BCLQUUtJ/qQ==",
      "requires": {
        "@babel/types": "^7.19.3",
        "@jridgewell/gen-mapping": "^0.3.2",
        "jsesc": "^2.5.1"
      },
      "dependencies": {
        "@jridgewell/gen-mapping": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
          "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
          "requires": {
            "@jridgewell/set-array": "^1.0.1",
            "@jridgewell/sourcemap-codec": "^1.4.10",
            "@jridgewell/trace-mapping": "^0.3.9"
          }
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz",
      "integrity": "sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-compilation-targets": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.19.3.tgz",
      "integrity": "sha512-65ESqLGyGmLvgR0mst5AdW1FkNlj9rQsCKduzEoEPhBCDFGXvz2jW6bXFG6i0/MrV2s7hhXjjb2yAzcPuQlLwg==",
      "requires": {
        "@babel/compat-data": "^7.19.3",
        "@babel/helper-validator-option": "^7.18.6",
        "browserslist": "^4.21.3",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
        }
      }
    },
    "@babel/helper-create-class-features-plugin": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.19.0.tgz",
      "integrity": "sha512-NRz8DwF4jT3UfrmUoZjd0Uph9HQnP30t7Ash+weACcyNkiYTywpIjDBgReJMKgr+n86sn2nPVVmJ28Dm053Kqw==",
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.18.6",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/helper-replace-supers": "^7.18.9",
        "@babel/helper-split-export-declaration": "^7.18.6"
      }
    },
    "@babel/helper-environment-visitor": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz",
      "integrity": "sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg=="
    },
    "@babel/helper-function-name": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz",
      "integrity": "sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w==",
      "requires": {
        "@babel/template": "^7.18.10",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz",
      "integrity": "sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.18.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.18.9.tgz",
      "integrity": "sha512-RxifAh2ZoVU67PyKIO4AMi1wTenGfMR/O/ae0CCRqwgBAt5v7xjdtRw7UoSbsreKrQn5t7r89eruK/9JjYHuDg==",
      "requires": {
        "@babel/types": "^7.18.9"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.18.6.tgz",
      "integrity": "sha512-0NFvs3VkuSYbFi1x2Vd6tKrywq+z/cLeYC/RJNFrIX/30Bf5aiGYbtvGXolEktzJH8o5E5KJ3tT+nkxuuZFVlA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.19.0.tgz",
      "integrity": "sha512-3HBZ377Fe14RbLIA+ac3sY4PTgpxHVkFrESaWhoI5PuyXPBBX8+C34qblV9G89ZtycGJCmCI/Ut+VUDK4bltNQ==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-module-imports": "^7.18.6",
        "@babel/helper-simple-access": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/helper-validator-identifier": "^7.18.6",
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.0",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz",
      "integrity": "sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.19.0.tgz",
      "integrity": "sha512-40Ryx7I8mT+0gaNxm8JGTZFUITNqdLAgdg0hXzeVZxVD6nFsdhQvip6v8dqkRHzsz1VFpFAaOCHNn0vKBL7Czw=="
    },
    "@babel/helper-replace-supers": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.19.1.tgz",
      "integrity": "sha512-T7ahH7wV0Hfs46SFh5Jz3s0B6+o8g3c+7TMxu7xKfmHikg7EAZ3I2Qk9LFhjxXq8sL7UkP5JflezNwoZa8WvWw==",
      "requires": {
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-member-expression-to-functions": "^7.18.9",
        "@babel/helper-optimise-call-expression": "^7.18.6",
        "@babel/traverse": "^7.19.1",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.18.6.tgz",
      "integrity": "sha512-iNpIgTgyAvDQpDj76POqg+YEt8fPxx3yaNBg3S30dxNKm2SWfYhD0TGrK/Eu9wHpUW63VQU894TsTg+GLbUa1g==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz",
      "integrity": "sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==",
      "requires": {
        "@babel/types": "^7.18.6"
      }
    },
    "@babel/helper-string-parser": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.18.10.tgz",
      "integrity": "sha512-XtIfWmeNY3i4t7t4D2t02q50HvqHybPqW2ki1kosnvWCwuCMeo81Jf0gwr85jy/neUdg5XDdeFE/80DXiO+njw=="
    },
    "@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w=="
    },
    "@babel/helper-validator-option": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.18.6.tgz",
      "integrity": "sha512-XO7gESt5ouv/LRJdrVjkShckw6STTaB7l9BrpBaAHDeF5YZT+01PCwmR0SJHnkW6i8OwW/EVWRShfi4j2x+KQw=="
    },
    "@babel/helpers": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.19.0.tgz",
      "integrity": "sha512-DRBCKGwIEdqY3+rPJgG/dKfQy9+08rHIAJx8q2p+HSWP87s2HCrQmaAMMyMll2kIXKCW0cO1RdQskx15Xakftg==",
      "requires": {
        "@babel/template": "^7.18.10",
        "@babel/traverse": "^7.19.0",
        "@babel/types": "^7.19.0"
      }
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "requires": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          }
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
        }
      }
    },
    "@babel/parser": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.19.3.tgz",
      "integrity": "sha512-pJ9xOlNWHiy9+FuFP09DEAFbAn4JskgRsVcc169w2xRBC3FRGuQEwjeIMMND9L2zc0iEhO/tGv4Zq+km+hxNpQ=="
    },
    "@babel/plugin-proposal-decorators": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.19.3.tgz",
      "integrity": "sha512-MbgXtNXqo7RTKYIXVchVJGPvaVufQH3pxvQyfbGvNw1DObIhph+PesYXJTcd8J4DdWibvf6Z2eanOyItX8WnJg==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/helper-replace-supers": "^7.19.1",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/plugin-syntax-decorators": "^7.19.0"
      }
    },
    "@babel/plugin-syntax-decorators": {
      "version": "7.19.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.19.0.tgz",
      "integrity": "sha512-xaBZUEDntt4faL1yN8oIFlhfXeQAWJW7CLKYsHTUqriCUbj8xOra8bfxxKGi/UwExPFBuPdH4XfHc9rGQhrVkQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.19.0"
      }
    },
    "@babel/plugin-syntax-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.18.6.tgz",
      "integrity": "sha512-mAWAuq4rvOepWCBid55JuRNvpTNf2UGVgoz4JV0fXEKolsVZDzsa4NqCef758WZJj/GDu0gVGItjKFiClTAmZA==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6"
      }
    },
    "@babel/plugin-transform-typescript": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.19.3.tgz",
      "integrity": "sha512-z6fnuK9ve9u/0X0rRvI9MY0xg+DOUaABDYOe+/SQTxtlptaBB/V9JIUxJn6xp3lMBeb9qe8xSFmHU35oZDXD+w==",
      "requires": {
        "@babel/helper-create-class-features-plugin": "^7.19.0",
        "@babel/helper-plugin-utils": "^7.19.0",
        "@babel/plugin-syntax-typescript": "^7.18.6"
      }
    },
    "@babel/preset-typescript": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.18.6.tgz",
      "integrity": "sha512-s9ik86kXBAnD760aybBucdpnLsAt0jK1xqJn2juOn9lkOvSHV60os5hxoVJsPzMQxvnUJFAlkont2DvvaYEBtQ==",
      "requires": {
        "@babel/helper-plugin-utils": "^7.18.6",
        "@babel/helper-validator-option": "^7.18.6",
        "@babel/plugin-transform-typescript": "^7.18.6"
      }
    },
    "@babel/template": {
      "version": "7.18.10",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz",
      "integrity": "sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA==",
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/parser": "^7.18.10",
        "@babel/types": "^7.18.10"
      }
    },
    "@babel/traverse": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.19.3.tgz",
      "integrity": "sha512-qh5yf6149zhq2sgIXmwjnsvmnNQC2iw70UFjp4olxucKrWd/dvlUsBI88VSLUsnMNF7/vnOiA+nk1+yLoCqROQ==",
      "requires": {
        "@babel/code-frame": "^7.18.6",
        "@babel/generator": "^7.19.3",
        "@babel/helper-environment-visitor": "^7.18.9",
        "@babel/helper-function-name": "^7.19.0",
        "@babel/helper-hoist-variables": "^7.18.6",
        "@babel/helper-split-export-declaration": "^7.18.6",
        "@babel/parser": "^7.19.3",
        "@babel/types": "^7.19.3",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      }
    },
    "@babel/types": {
      "version": "7.19.3",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.19.3.tgz",
      "integrity": "sha512-hGCaQzIY22DJlDh9CH7NOxgKkFjBk0Cw9xDO1Xmh2151ti7wiGfQ3LauXzL4HP1fmFlTX6XjpRETTpUcv7wQLw==",
      "requires": {
        "@babel/helper-string-parser": "^7.18.10",
        "@babel/helper-validator-identifier": "^7.19.1",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@jridgewell/gen-mapping": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
      "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
      "requires": {
        "@jridgewell/set-array": "^1.0.0",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@jridgewell/resolve-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w=="
    },
    "@jridgewell/set-array": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw=="
    },
    "@jridgewell/sourcemap-codec": {
      "version": "1.4.14",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw=="
    },
    "@jridgewell/trace-mapping": {
      "version": "0.3.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.15.tgz",
      "integrity": "sha512-oWZNOULl+UbhsgB51uuZzglikfIKSUBO/M9W2OfEjn7cmqoAiCgmv9lyACTUacZwBz0ITnJ2NqjU8Tx0DHL88g==",
      "requires": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "requires": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      }
    },
    "@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true
    },
    "@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "requires": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      }
    },
    "@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "requires": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      }
    },
    "@rollup/plugin-commonjs": {
      "version": "21.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-21.1.0.tgz",
      "integrity": "sha512-6ZtHx3VHIp2ReNNDxHjuUml6ur+WcQ28N1yHgCQwsbNkQg2suhxGMDQGJOn/KuDxKtd1xuZP5xSTwBA4GQ8hbA==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.1",
        "glob": "^7.1.6",
        "is-reference": "^1.2.1",
        "magic-string": "^0.25.7",
        "resolve": "^1.17.0"
      }
    },
    "@rollup/plugin-node-resolve": {
      "version": "13.3.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-13.3.0.tgz",
      "integrity": "sha512-Lus8rbUo1eEcnS4yTFKLZrVumLPY+YayBdWXgFSHYhTT2iJbMhoaaBL3xl5NCdeRytErGr8tZ0L71BMRmnlwSw==",
      "requires": {
        "@rollup/pluginutils": "^3.1.0",
        "@types/resolve": "1.17.1",
        "deepmerge": "^4.2.2",
        "is-builtin-module": "^3.1.0",
        "is-module": "^1.0.0",
        "resolve": "^1.19.0"
      }
    },
    "@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "requires": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "dependencies": {
        "estree-walker": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
          "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg=="
        }
      }
    },
    "@scure/base": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@scure/base/-/base-1.1.1.tgz",
      "integrity": "sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA=="
    },
    "@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==",
      "dev": true
    },
    "@szmarczak/http-timer": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
      "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
      "dev": true,
      "requires": {
        "defer-to-connect": "^2.0.0"
      }
    },
    "@types/cacheable-request": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.2.tgz",
      "integrity": "sha512-B3xVo+dlKM6nnKTcmm5ZtY/OL8bOAOd2Olee9M1zft65ox50OzjEHW91sDiU9j6cvW8Ejg1/Qkf4xd2kugApUA==",
      "dev": true,
      "requires": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "*",
        "@types/node": "*",
        "@types/responselike": "*"
      }
    },
    "@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
    },
    "@types/http-cache-semantics": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.1.tgz",
      "integrity": "sha512-SZs7ekbP8CN0txVG2xVRH6EgKmEm31BOxA07vkFaETzZz1xh+cbt8BcI0slpymvwhx5dlFnQG2rTlPVQn+iRPQ==",
      "dev": true
    },
    "@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/node": {
      "version": "18.7.23",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.7.23.tgz",
      "integrity": "sha512-DWNcCHolDq0ZKGizjx2DZjR/PqsYwAcYUJmfMWqtVU2MBMG5Mo+xFZrhGId5r/O5HOuMPyQEcM6KUBp5lBZZBg=="
    },
    "@types/resolve": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
      "integrity": "sha512-yy7HuzQhj0dhGpD8RLXSZWEkLsV9ibvxvi6EiJ3bkqLAO1RGo0WbkWQiwpRlSFymTJRz0d3k5LM3kkx8ArDbLw==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/responselike": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz",
      "integrity": "sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "acorn": {
      "version": "8.8.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
      "dev": true
    },
    "acorn-walk": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.2.0.tgz",
      "integrity": "sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==",
      "dev": true
    },
    "aggregate-error": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-4.0.1.tgz",
      "integrity": "sha512-0poP0T7el6Vq3rstR8Mn4V/IQrpBLO6POkUSrN7RhyY+GF/InCFShQzsQ39T25gkHhLgSLByyAz+Kjb+c2L98w==",
      "dev": true,
      "requires": {
        "clean-stack": "^4.0.0",
        "indent-string": "^5.0.0"
      }
    },
    "ansi-regex": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz",
      "integrity": "sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==",
      "dev": true
    },
    "ansi-styles": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.1.1.tgz",
      "integrity": "sha512-qDOv24WjnYuL+wbwHdlsYZFy+cgPtrYw0Tn7GLORicQp9BkQLzrgI3Pm4VyR9ERZ41YTn7KlMPuL1n05WdZvmg==",
      "dev": true
    },
    "anymatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
      "dev": true,
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "array-find-index": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
      "integrity": "sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==",
      "dev": true
    },
    "array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true
    },
    "arrgv": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/arrgv/-/arrgv-1.0.2.tgz",
      "integrity": "sha512-a4eg4yhp7mmruZDQFqVMlxNRFGi/i1r87pt8SDHy0/I8PqSXoUTlWZRdAZo0VXgvEARcujbtTk8kiZRi1uDGRw==",
      "dev": true
    },
    "arrify": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-3.0.0.tgz",
      "integrity": "sha512-tLkvA81vQG/XqE2mjDkGQHoOINtMHtysSnemrmoGe6PydDPMRbVugqyk4A6V/WDWEfm3l+0d8anA9r8cv/5Jaw==",
      "dev": true
    },
    "atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="
    },
    "ava": {
      "version": "4.3.3",
      "resolved": "https://registry.npmjs.org/ava/-/ava-4.3.3.tgz",
      "integrity": "sha512-9Egq/d9R74ExrWohHeqUlexjDbgZJX5jA1Wq4KCTqc3wIfpGEK79zVy4rBtofJ9YKIxs4PzhJ8BgbW5PlAYe6w==",
      "dev": true,
      "requires": {
        "acorn": "^8.7.1",
        "acorn-walk": "^8.2.0",
        "ansi-styles": "^6.1.0",
        "arrgv": "^1.0.2",
        "arrify": "^3.0.0",
        "callsites": "^4.0.0",
        "cbor": "^8.1.0",
        "chalk": "^5.0.1",
        "chokidar": "^3.5.3",
        "chunkd": "^2.0.1",
        "ci-info": "^3.3.1",
        "ci-parallel-vars": "^1.0.1",
        "clean-yaml-object": "^0.1.0",
        "cli-truncate": "^3.1.0",
        "code-excerpt": "^4.0.0",
        "common-path-prefix": "^3.0.0",
        "concordance": "^5.0.4",
        "currently-unhandled": "^0.4.1",
        "debug": "^4.3.4",
        "del": "^6.1.1",
        "emittery": "^0.11.0",
        "figures": "^4.0.1",
        "globby": "^13.1.1",
        "ignore-by-default": "^2.1.0",
        "indent-string": "^5.0.0",
        "is-error": "^2.2.2",
        "is-plain-object": "^5.0.0",
        "is-promise": "^4.0.0",
        "matcher": "^5.0.0",
        "mem": "^9.0.2",
        "ms": "^2.1.3",
        "p-event": "^5.0.1",
        "p-map": "^5.4.0",
        "picomatch": "^2.3.1",
        "pkg-conf": "^4.0.0",
        "plur": "^5.1.0",
        "pretty-ms": "^7.0.1",
        "resolve-cwd": "^3.0.0",
        "slash": "^3.0.0",
        "stack-utils": "^2.0.5",
        "strip-ansi": "^7.0.1",
        "supertap": "^3.0.1",
        "temp-dir": "^2.0.0",
        "write-file-atomic": "^4.0.1",
        "yargs": "^17.5.1"
      }
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base-x": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.9.tgz",
      "integrity": "sha512-H7JU6iBHTal1gp56aKoaa//YUxEaAOUiydvrV/pILqIHXTtqxSkATOnDA2u+jZ/61sD+L/412+7kzXRtWukhpQ==",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64url": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/base64url/-/base64url-3.0.1.tgz",
      "integrity": "sha512-ir1UPr3dkwexU7FdV8qBBbNDRUhMmIekYMFZfi+C/sLNnRESKPl23nB9b2pltqfOQNnGzsDdId90AEtG5tCx4A==",
      "dev": true
    },
    "binary-extensions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
      "integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
      "dev": true
    },
    "blueimp-md5": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/blueimp-md5/-/blueimp-md5-2.19.0.tgz",
      "integrity": "sha512-DRQrD6gJyy8FbiE4s+bDoXS9hiW3Vbx5uCdwvcCf3zLHL+Iv7LtGHLpr+GZV8rHG8tK766FGYBwRbu8pELTt+w==",
      "dev": true
    },
    "bn.js": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.1.tgz",
      "integrity": "sha512-eXRvHzWyYPBuB4NBy0cmYQjGitUrtqwbvlzP3G6VFnNRbsZQIxQ10PbKKHt8gZ/HW/D/747aDl+QkDqg3KQLMQ==",
      "dev": true
    },
    "borsh": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.5.0.tgz",
      "integrity": "sha512-p9w/qGBeeFdUf2GPBPHdX5JQyez8K5VtoFN7PqSfmR+cVUMSmcwAKhP9n2aXoDSKbtS7xZlZt3MVnrJL7GdYhg==",
      "dev": true,
      "requires": {
        "bn.js": "^5.2.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "browserslist": {
      "version": "4.21.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.21.4.tgz",
      "integrity": "sha512-CBHJJdDmgjl3daYjN5Cp5kbTf1mUhZoS+beLklHIvkOWscs83YAhLlF3Wsh/lciQYAcbBJgTOD44VtG31ZM4Hw==",
      "requires": {
        "caniuse-lite": "^1.0.30001400",
        "electron-to-chromium": "^1.4.251",
        "node-releases": "^2.0.6",
        "update-browserslist-db": "^1.0.9"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha512-Ok3Wdf5vOIlBrgCvTq96gBkJw+JUEzdBgyaza5HLtPm7yTHkjRy8+JzNyHF7BHa0bNWOQIp3m5YF0nnFcOIKLw==",
      "dev": true,
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "builtin-modules": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz",
      "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw=="
    },
    "cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "dev": true
    },
    "cacheable-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.2.tgz",
      "integrity": "sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==",
      "dev": true,
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      }
    },
    "callsites": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-4.0.0.tgz",
      "integrity": "sha512-y3jRROutgpKdz5vzEhWM34TidDU8vkJppF8dszITeb1PQmSqV3DTxyV8G/lyO/DNvtE1YTedehmw9MPZsCBHxQ==",
      "dev": true
    },
    "caniuse-lite": {
      "version": "1.0.30001414",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001414.tgz",
      "integrity": "sha512-t55jfSaWjCdocnFdKQoO+d2ct9C59UZg4dY3OnUlSZ447r8pUtIKdp0hpAzrGFultmTC+Us+KpKi4GZl/LXlFg=="
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha512-rsJZYVCgXd08sPqwmaIqjAd5SUTfonV0z/gDJ8D6cN8wQphky1kkAYEqQ+hmDxTw7UihvBfjUVUSY+DBEe44jg==",
      "dev": true
    },
    "cbor": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/cbor/-/cbor-8.1.0.tgz",
      "integrity": "sha512-DwGjNW9omn6EwP70aXsn7FQJx5kO12tX0bZkaTjzdVFM6/7nhA4t0EENocKGx6D2Bch9PE2KzCUf5SceBdeijg==",
      "dev": true,
      "requires": {
        "nofilter": "^3.1.0"
      }
    },
    "chalk": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.0.1.tgz",
      "integrity": "sha512-Fo07WOYGqMfCWHOzSXOt2CxDbC6skS/jO9ynEcmpANMoPrD+W1r1K6Vx7iNm+AQmETU1Xr2t+n8nzkV9t6xh3w==",
      "dev": true
    },
    "chokidar": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz",
      "integrity": "sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==",
      "dev": true,
      "requires": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "fsevents": "~2.3.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      }
    },
    "chownr": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
      "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
      "dev": true
    },
    "chunkd": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/chunkd/-/chunkd-2.0.1.tgz",
      "integrity": "sha512-7d58XsFmOq0j6el67Ug9mHf9ELUXsQXYJBkyxhH/k+6Ke0qXRnv0kbemx+Twc6fRJ07C49lcbdgm9FL1Ei/6SQ==",
      "dev": true
    },
    "ci-info": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-3.4.0.tgz",
      "integrity": "sha512-t5QdPT5jq3o262DOQ8zA6E1tlH2upmUc4Hlvrbx1pGYJuiiHl7O7rvVNI+l8HTVhd/q3Qc9vqimkNk5yiXsAug==",
      "dev": true
    },
    "ci-parallel-vars": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ci-parallel-vars/-/ci-parallel-vars-1.0.1.tgz",
      "integrity": "sha512-uvzpYrpmidaoxvIQHM+rKSrigjOe9feHYbw4uOI2gdfe1C3xIlxO+kVXq83WQWNniTf8bAxVpy+cQeFQsMERKg==",
      "dev": true
    },
    "clean-stack": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-4.2.0.tgz",
      "integrity": "sha512-LYv6XPxoyODi36Dp976riBtSY27VmFo+MKqEU9QCCWyTrdEPDog+RWA7xQWHi6Vbp61j5c4cdzzX1NidnwtUWg==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "5.0.0"
      }
    },
    "clean-yaml-object": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz",
      "integrity": "sha512-3yONmlN9CSAkzNwnRCiJQ7Q2xK5mWuEfL3PuTZcAUzhObbXsfsnMptJzXwz93nc5zn9V9TwCVMmV7w4xsm43dw==",
      "dev": true
    },
    "cli-truncate": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-truncate/-/cli-truncate-3.1.0.tgz",
      "integrity": "sha512-wfOBkjXteqSnI59oPcJkcPl/ZmwvMMOj340qUIY1SKZCv0B9Cf4D4fAucRkIKQmsIuYK3x1rrgU7MeGRruiuiA==",
      "dev": true,
      "requires": {
        "slice-ansi": "^5.0.0",
        "string-width": "^5.0.0"
      }
    },
    "cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "requires": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "dev": true,
      "requires": {
        "mimic-response": "^1.0.0"
      }
    },
    "code-excerpt": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/code-excerpt/-/code-excerpt-4.0.0.tgz",
      "integrity": "sha512-xxodCmBen3iy2i0WtAK8FlFNrRzjUqjRsMfho58xT/wvZU1YTM3fCnRjcy1gJPMepaRlgm/0e6w8SpWHpn3/cA==",
      "dev": true,
      "requires": {
        "convert-to-spaces": "^2.0.1"
      }
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "common-path-prefix": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-3.0.0.tgz",
      "integrity": "sha512-QE33hToZseCH3jS0qN96O/bSh3kaw/h+Tq7ngyY9eWDUnTlTNUyqfqvCXioLe5Na5jFsL78ra/wuBU4iuEgd4w==",
      "dev": true
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg=="
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "concordance": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/concordance/-/concordance-5.0.4.tgz",
      "integrity": "sha512-OAcsnTEYu1ARJqWVGwf4zh4JDfHZEaSNlNccFmt8YjB2l/n19/PF2viLINHc57vO4FKIAFl2FWASIGZZWZ2Kxw==",
      "dev": true,
      "requires": {
        "date-time": "^3.1.0",
        "esutils": "^2.0.3",
        "fast-diff": "^1.2.0",
        "js-string-escape": "^1.0.1",
        "lodash": "^4.17.15",
        "md5-hex": "^3.0.1",
        "semver": "^7.3.2",
        "well-known-symbols": "^2.0.0"
      }
    },
    "convert-source-map": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
      "integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
      "requires": {
        "safe-buffer": "~5.1.1"
      }
    },
    "convert-to-spaces": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/convert-to-spaces/-/convert-to-spaces-2.0.1.tgz",
      "integrity": "sha512-rcQ1bsQO9799wq24uE5AM2tAILy4gXGIK/njFWcVQkGNZ96edlpY+A7bjwvzjYvLDyzmG1MmMLZhpcsb+klNMQ==",
      "dev": true
    },
    "currently-unhandled": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
      "integrity": "sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==",
      "dev": true,
      "requires": {
        "array-find-index": "^1.0.1"
      }
    },
    "date-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/date-time/-/date-time-3.1.0.tgz",
      "integrity": "sha512-uqCUKXE5q1PNBXjPqvwhwJf9SwMoAHBgWJ6DcrnS5o+W2JOiIILl0JEdVD8SGujrNS02GGxgwAg2PN2zONgtjg==",
      "dev": true,
      "requires": {
        "time-zone": "^1.0.0"
      }
    },
    "debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "requires": {
        "ms": "2.1.2"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha512-hjf+xovcEn31w/EUYdTXQh/8smFL/dzYjohQGEIgjyNavaJfBY2p5F527Bo1VPATxv0VYTUC2bOcXvqFwk78Og=="
    },
    "decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "dev": true,
      "requires": {
        "mimic-response": "^3.1.0"
      },
      "dependencies": {
        "mimic-response": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
          "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
          "dev": true
        }
      }
    },
    "deepmerge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg=="
    },
    "defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==",
      "dev": true
    },
    "del": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-6.1.1.tgz",
      "integrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg==",
      "dev": true,
      "requires": {
        "globby": "^11.0.1",
        "graceful-fs": "^4.2.4",
        "is-glob": "^4.0.1",
        "is-path-cwd": "^2.2.0",
        "is-path-inside": "^3.0.2",
        "p-map": "^4.0.0",
        "rimraf": "^3.0.2",
        "slash": "^3.0.0"
      },
      "dependencies": {
        "aggregate-error": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
          "integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
          "dev": true,
          "requires": {
            "clean-stack": "^2.0.0",
            "indent-string": "^4.0.0"
          }
        },
        "clean-stack": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
          "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
          "dev": true
        },
        "globby": {
          "version": "11.1.0",
          "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
          "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
          "dev": true,
          "requires": {
            "array-union": "^2.1.0",
            "dir-glob": "^3.0.1",
            "fast-glob": "^3.2.9",
            "ignore": "^5.2.0",
            "merge2": "^1.4.1",
            "slash": "^3.0.0"
          }
        },
        "indent-string": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
          "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
          "dev": true
        },
        "p-map": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
          "integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
          "dev": true,
          "requires": {
            "aggregate-error": "^3.0.0"
          }
        }
      }
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true
    },
    "dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "requires": {
        "path-type": "^4.0.0"
      }
    },
    "eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true
    },
    "electron-to-chromium": {
      "version": "1.4.269",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.269.tgz",
      "integrity": "sha512-7mHFONwp7MNvdyto1v70fCwk28NJMFgsK79op+iYHzz1BLE8T66a1B2qW5alb8XgE0yi3FL3ZQjSYZpJpF6snw=="
    },
    "emittery": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/emittery/-/emittery-0.11.0.tgz",
      "integrity": "sha512-S/7tzL6v5i+4iJd627Nhv9cLFIo5weAIlGccqJFpnBoDB8U1TF2k5tez4J/QNuxyyhWuFqHg1L84Kd3m7iXg6g==",
      "dev": true
    },
    "emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "requires": {
        "once": "^1.4.0"
      }
    },
    "error-polyfill": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.3.tgz",
      "integrity": "sha512-XHJk60ufE+TG/ydwp4lilOog549iiQF2OAPhkk9DdiYWMrltz5yhDz/xnKuenNwP7gy3dsibssO5QpVhkrSzzg==",
      "dev": true,
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.1"
      }
    },
    "escalade": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
    },
    "escape-string-regexp": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgz",
      "integrity": "sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==",
      "dev": true
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "fast-diff": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.2.0.tgz",
      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==",
      "dev": true
    },
    "fast-glob": {
      "version": "3.2.12",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.12.tgz",
      "integrity": "sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==",
      "dev": true,
      "requires": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      }
    },
    "fastq": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz",
      "integrity": "sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==",
      "dev": true,
      "requires": {
        "reusify": "^1.0.4"
      }
    },
    "figures": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/figures/-/figures-4.0.1.tgz",
      "integrity": "sha512-rElJwkA/xS04Vfg+CaZodpso7VqBknOYbzi6I76hI4X80RUjkSxO2oAyPmGbuXUppywjqndOrQDl817hDnI++w==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^5.0.0",
        "is-unicode-supported": "^1.2.0"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "find-up": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz",
      "integrity": "sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==",
      "dev": true,
      "requires": {
        "locate-path": "^7.1.0",
        "path-exists": "^5.0.0"
      }
    },
    "fs-extra": {
      "version": "10.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz",
      "integrity": "sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      }
    },
    "fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg=="
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg=="
    },
    "get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dev": true,
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA=="
    },
    "globby": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/globby/-/globby-13.1.2.tgz",
      "integrity": "sha512-LKSDZXToac40u8Q1PQtZihbNdTYSNMuWe+K5l+oa6KgDzSvVrHXlJy40hUP522RjAIoNLJYBJi7ow+rbFpIhHQ==",
      "dev": true,
      "requires": {
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.11",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^4.0.0"
      },
      "dependencies": {
        "slash": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/slash/-/slash-4.0.0.tgz",
          "integrity": "sha512-3dOsAHXXUkQTpOYcoAxLIorMTp4gIQr5IW3iVb7A7lFIp0VHhnynm9izx6TssdrIcVIESAlVjtnO2K8bg+Coew==",
          "dev": true
        }
      }
    },
    "got": {
      "version": "11.8.5",
      "resolved": "https://registry.npmjs.org/got/-/got-11.8.5.tgz",
      "integrity": "sha512-o0Je4NvQObAuZPHLFoRSkdG2lTgtcynqymzg2Vupdx6PorhaT5MCbIyXG6d4D94kk8ZG57QeosgdiqfJWhEhlQ==",
      "dev": true,
      "requires": {
        "@sindresorhus/is": "^4.0.0",
        "@szmarczak/http-timer": "^4.0.5",
        "@types/cacheable-request": "^6.0.1",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^5.0.3",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "http2-wrapper": "^1.0.0-beta.5.2",
        "lowercase-keys": "^2.0.0",
        "p-cancelable": "^2.0.0",
        "responselike": "^2.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.2.10",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz",
      "integrity": "sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==",
      "dev": true
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
    },
    "http-cache-semantics": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
      "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
      "dev": true
    },
    "http-errors": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.1.tgz",
      "integrity": "sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==",
      "dev": true,
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.1"
      },
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
          "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
          "dev": true
        }
      }
    },
    "http2-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
      "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
      "dev": true,
      "requires": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      }
    },
    "ignore": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.2.0.tgz",
      "integrity": "sha512-CmxgYGiEPCLhfLnpPp1MoRmifwEIOgjcHXxOBjv7mY96c+eWScsOP9c112ZyLdWHi0FxHjI+4uVhKYp/gcdRmQ==",
      "dev": true
    },
    "ignore-by-default": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-2.1.0.tgz",
      "integrity": "sha512-yiWd4GVmJp0Q6ghmM2B/V3oZGRmjrKLXvHR3TE1nfoXsmoggllfZUQe74EN0fJdPFZu2NIvNdrMMLm3OsV7Ohw==",
      "dev": true
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true
    },
    "indent-string": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-5.0.0.tgz",
      "integrity": "sha512-m6FAo/spmsW2Ab2fU35JTYwtOKa2yAwXSwgjSv1TJzh4Mh7mC3lzAOVLBprb72XsTrgkEIsl7YrFNAiDiRhIGg==",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "irregular-plurals": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/irregular-plurals/-/irregular-plurals-3.3.0.tgz",
      "integrity": "sha512-MVBLKUTangM3EfRPFROhmWQQKRDsrgI83J8GS3jXy+OwYqiR2/aoWndYQ5416jLE3uaGgLH7ncme3X9y09gZ3g==",
      "dev": true
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-builtin-module": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.0.tgz",
      "integrity": "sha512-phDA4oSGt7vl1n5tJvTWooWWAsXLY+2xCnxNqvKhGEzujg+A43wPlPOyDg3C8XQHN+6k/JTQWJ/j0dQh/qr+Hw==",
      "requires": {
        "builtin-modules": "^3.3.0"
      }
    },
    "is-core-module": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.10.0.tgz",
      "integrity": "sha512-Erxj2n/LDAZ7H8WNJXd9tw38GYM3dv8rk8Zcs+jJuxYTW7sozH+SS8NtrSjVL1/vpLvWi1hxy96IzjJ3EHTJJg==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-error": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-error/-/is-error-2.2.2.tgz",
      "integrity": "sha512-IOQqts/aHWbiisY5DuPJQ0gcbvaLFCa7fBa9xoLfxBZvQ+ZI/Zh9xoI7Gk+G64N0FdK4AbibytHht2tWgpJWLg==",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true
    },
    "is-fullwidth-code-point": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-4.0.0.tgz",
      "integrity": "sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==",
      "dev": true
    },
    "is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g=="
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true
    },
    "is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true
    },
    "is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true
    },
    "is-plain-object": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
      "integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
      "dev": true
    },
    "is-promise": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
      "dev": true
    },
    "is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "requires": {
        "@types/estree": "*"
      }
    },
    "is-unicode-supported": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==",
      "dev": true
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
      "dev": true
    },
    "js-string-escape": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/js-string-escape/-/js-string-escape-1.0.1.tgz",
      "integrity": "sha512-Smw4xcfIQ5LVjAOuJCvN/zIodzA/BBSsluuoSykP+lUvScIi4U6RJLfwHet5cxFnCswUjISV8oAXaqaJDY3chg==",
      "dev": true
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="
    },
    "json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true
    },
    "json5": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.1.tgz",
      "integrity": "sha512-1hqLFMSrGHRHxav9q9gNjJ5EXznIxGVO09xQRrwplcS8qs28pZ8s8hupZAmqDwZUmVZ2Qb2jnyPOWcDH8m8dlA=="
    },
    "jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.6",
        "universalify": "^2.0.0"
      }
    },
    "keyv": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.0.tgz",
      "integrity": "sha512-2YvuMsA+jnFGtBareKqgANOEKe1mk3HKiXu2fRmAfyxG0MJAywNhi5ttWA3PMjl4NmpyjZNbFifR2vNjW1znfA==",
      "dev": true,
      "requires": {
        "json-buffer": "3.0.1"
      }
    },
    "load-json-file": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-7.0.1.tgz",
      "integrity": "sha512-Gnxj3ev3mB5TkVBGad0JM6dmLiQL+o0t23JPBZ9sd+yvSLk05mFoqKBw5N8gbbkU4TNXyqCgIrl/VM17OgUIgQ==",
      "dev": true
    },
    "locate-path": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-7.1.1.tgz",
      "integrity": "sha512-vJXaRMJgRVD3+cUZs3Mncj2mxpt5mP0EmNOsxRSZRMlbqjvxzDEOIUWXGmavo0ZC9+tNZCBLQ66reA11nbpHZg==",
      "dev": true,
      "requires": {
        "p-locate": "^6.0.0"
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "dev": true
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "requires": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "requires": {
        "p-defer": "^1.0.0"
      }
    },
    "matcher": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/matcher/-/matcher-5.0.0.tgz",
      "integrity": "sha512-s2EMBOWtXFc8dgqvoAzKJXxNHibcdJMV0gwqKUaw9E2JBJuGUK7DrNKrA6g/i+v72TT16+6sVm5mS3thaMLQUw==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^5.0.0"
      }
    },
    "md5-hex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/md5-hex/-/md5-hex-3.0.1.tgz",
      "integrity": "sha512-BUiRtTtV39LIJwinWBjqVsU9xhdnz7/i889V859IBFpuqGAj6LuOvHv5XLbgZ2R7ptJoJaEcxkv88/h25T7Ciw==",
      "dev": true,
      "requires": {
        "blueimp-md5": "^2.10.0"
      }
    },
    "mem": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/mem/-/mem-9.0.2.tgz",
      "integrity": "sha512-F2t4YIv9XQUBHt6AOJ0y7lSmP1+cY7Fm1DRh9GClTGzKST7UWLMx6ly9WZdLH/G/ppM5RL4MlQfRT71ri9t19A==",
      "dev": true,
      "requires": {
        "map-age-cleaner": "^0.1.3",
        "mimic-fn": "^4.0.0"
      }
    },
    "merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true
    },
    "micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dev": true,
      "requires": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      }
    },
    "mimic-fn": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
      "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
      "dev": true
    },
    "mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "dev": true
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minipass": {
      "version": "3.3.4",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.3.4.tgz",
      "integrity": "sha512-I9WPbWHCGu8W+6k1ZiGpPu0GkoKBeorkfKNuAFBNS1HNFJvke82sxvI5bzcCNpWPorkOO5QQ+zomzzwRxejXiw==",
      "dev": true,
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "minizlib": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0",
        "yallist": "^4.0.0"
      }
    },
    "mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "dev": true
    },
    "ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==",
      "dev": true
    },
    "near-api-js": {
      "version": "0.44.2",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.44.2.tgz",
      "integrity": "sha512-eMnc4V+geggapEUa3nU2p8HSHn/njtloI4P2mceHQWO8vDE1NGpnAw8FuTBrLmXSgIv9m6oocgFc9t3VNf5zwg==",
      "dev": true,
      "requires": {
        "bn.js": "5.2.0",
        "borsh": "^0.6.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.3",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      },
      "dependencies": {
        "bn.js": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
          "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw==",
          "dev": true
        },
        "borsh": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.6.0.tgz",
          "integrity": "sha512-sl5k89ViqsThXQpYa9XDtz1sBl3l1lI313cFUY1HKr+wvMILnb+58xpkqTNrYbelh99dY7K8usxoCusQmqix9Q==",
          "dev": true,
          "requires": {
            "bn.js": "^5.2.0",
            "bs58": "^4.0.0",
            "text-encoding-utf-8": "^1.0.2"
          }
        }
      }
    },
    "near-sandbox": {
      "version": "0.0.14",
      "resolved": "https://registry.npmjs.org/near-sandbox/-/near-sandbox-0.0.14.tgz",
      "integrity": "sha512-wQ1jcD6W6U4V83D0Zxgi2qedMkmTh5iiqm2t/oriKR4rrTql/j8QR/Ip/NfoIH/plFT+vGungKL+B4HxfNyyNg==",
      "dev": true,
      "requires": {
        "got": "^11.8.2",
        "tar": "^6.1.0"
      }
    },
    "near-sdk-js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/near-sdk-js/-/near-sdk-js-0.5.0.tgz",
      "integrity": "sha512-wwQTCT+7bu0CahlNxlG5RGaxDiUJQSnjT7GwmK/d2p7Y5PkwWv1K5ZBsZMLOTU3fnhv0Y1LJ6lp00O9kZZLR5Q==",
      "requires": {
        "@babel/core": "^7.17.5",
        "@babel/plugin-proposal-decorators": "^7.17.2",
        "@babel/preset-typescript": "^7.18.6",
        "@rollup/plugin-babel": "^5.3.1",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-node-resolve": "^13.1.1",
        "@scure/base": "^1.1.1",
        "rollup": "^2.61.1",
        "rollup-plugin-sourcemaps": "^0.6.3",
        "yargs": "^17.5.1"
      }
    },
    "near-units": {
      "version": "0.1.9",
      "resolved": "https://registry.npmjs.org/near-units/-/near-units-0.1.9.tgz",
      "integrity": "sha512-xiuBjpNsi+ywiu7P6iWRZdgFm7iCr/cfWlVO6+e5uaAqH4mE1rrurElyrL91llNDSnMwogd9XmlZOw5KbbHNsA==",
      "dev": true,
      "requires": {
        "bn.js": "^5.2.0"
      }
    },
    "near-workspaces": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/near-workspaces/-/near-workspaces-3.2.2.tgz",
      "integrity": "sha512-Y26FyPccs3lTKFpOzeWQy5urtSe0hcdME4ePbidzHNQPOXCub06htnvsoVEUNGVejc50f5nVHcdCiYO8mtEdTA==",
      "dev": true,
      "requires": {
        "base64url": "^3.0.1",
        "bn.js": "^5.2.0",
        "borsh": "^0.5.0",
        "bs58": "^4.0.1",
        "callsites": "^4.0.0",
        "fs-extra": "^10.0.0",
        "js-sha256": "^0.9.0",
        "near-api-js": "^0.44.1",
        "near-sandbox": "^0.0.14",
        "near-units": "^0.1.9",
        "node-port-check": "^2.0.1",
        "promisify-child-process": "^4.1.1",
        "pure-uuid": "^1.6.2",
        "rimraf": "^3.0.2",
        "temp-dir": "^2.0.0"
      }
    },
    "node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dev": true,
      "requires": {
        "whatwg-url": "^5.0.0"
      }
    },
    "node-port-check": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/node-port-check/-/node-port-check-2.0.1.tgz",
      "integrity": "sha512-PV1tj5OPbWwxvhPcChXxwCIKl/IfVEdPP4u/gQz2lao/VGoeIUXb/4U72KSHLZpTVBmgTnMm0me7yR0wUsIuPg==",
      "dev": true
    },
    "node-releases": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.6.tgz",
      "integrity": "sha512-PiVXnNuFm5+iYkLBNeq5211hvO38y63T0i2KKh2KnUs3RpzJ+JtODFjkD8yjLwnDkTYF1eKXheUwdssR+NRZdg=="
    },
    "nofilter": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/nofilter/-/nofilter-3.1.0.tgz",
      "integrity": "sha512-l2NNj07e9afPnhAhvgVrCD/oy2Ai1yfLpuo3EpiO1jFTsB4sFz6oIfAfSZyQzVpkZQ9xS8ZS5g1jCBgq4Hwo0g==",
      "dev": true
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true
    },
    "normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
      "dev": true
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha512-f+4n+vC6s4ysy7YO7O2gslWZBUu8Qj2i2OUJOvjRxQva7jVjYjB29jrr9NCjmxZQR0gzrOcv1RnqoYOeMs5VRQ==",
      "dev": true,
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "requires": {
        "wrappy": "1"
      }
    },
    "p-cancelable": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
      "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==",
      "dev": true
    },
    "p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha512-wB3wfAxZpk2AzOfUMJNL+d36xothRSyj8EXOa4f6GMqYDN9BJaaSISbsk+wS9abmnebVw95C2Kb5t85UmpCxuw==",
      "dev": true
    },
    "p-event": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/p-event/-/p-event-5.0.1.tgz",
      "integrity": "sha512-dd589iCQ7m1L0bmC5NLlVYfy3TbBEsMUfWx9PyAgPeIcFZ/E2yaTZ4Rz4MiBmmJShviiftHVXOqfnfzJ6kyMrQ==",
      "dev": true,
      "requires": {
        "p-timeout": "^5.0.2"
      }
    },
    "p-limit": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz",
      "integrity": "sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==",
      "dev": true,
      "requires": {
        "yocto-queue": "^1.0.0"
      }
    },
    "p-locate": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz",
      "integrity": "sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==",
      "dev": true,
      "requires": {
        "p-limit": "^4.0.0"
      }
    },
    "p-map": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-5.5.0.tgz",
      "integrity": "sha512-VFqfGDHlx87K66yZrNdI4YGtD70IRyd+zSvgks6mzHPRNkoKy+9EKP4SFC77/vTTQYmRmti7dvqC+m5jBrBAcg==",
      "dev": true,
      "requires": {
        "aggregate-error": "^4.0.0"
      }
    },
    "p-timeout": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-5.1.0.tgz",
      "integrity": "sha512-auFDyzzzGZZZdHz3BtET9VEz0SE/uMEAx7uWfGPucfzEwwe/xH0iVeZibQmANYE/hp9T2+UUZT5m+BKyrDp3Ew==",
      "dev": true
    },
    "parse-ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/parse-ms/-/parse-ms-2.1.0.tgz",
      "integrity": "sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==",
      "dev": true
    },
    "path-exists": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz",
      "integrity": "sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true
    },
    "picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA=="
    },
    "pkg-conf": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pkg-conf/-/pkg-conf-4.0.0.tgz",
      "integrity": "sha512-7dmgi4UY4qk+4mj5Cd8v/GExPo0K+SlY+hulOSdfZ/T6jVH6//y7NtzZo5WrfhDBxuQ0jCa7fLZmNaNh7EWL/w==",
      "dev": true,
      "requires": {
        "find-up": "^6.0.0",
        "load-json-file": "^7.0.0"
      }
    },
    "plur": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/plur/-/plur-5.1.0.tgz",
      "integrity": "sha512-VP/72JeXqak2KiOzjgKtQen5y3IZHn+9GOuLDafPv0eXa47xq0At93XahYBs26MsifCQ4enGKwbjBTKgb9QJXg==",
      "dev": true,
      "requires": {
        "irregular-plurals": "^3.3.0"
      }
    },
    "pretty-ms": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pretty-ms/-/pretty-ms-7.0.1.tgz",
      "integrity": "sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==",
      "dev": true,
      "requires": {
        "parse-ms": "^2.1.0"
      }
    },
    "promisify-child-process": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/promisify-child-process/-/promisify-child-process-4.1.1.tgz",
      "integrity": "sha512-/sRjHZwoXf1rJ+8s4oWjYjGRVKNK1DUnqfRC1Zek18pl0cN6k3yJ1cCbqd0tWNe4h0Gr+SY4vR42N33+T82WkA==",
      "dev": true
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "pure-uuid": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/pure-uuid/-/pure-uuid-1.6.2.tgz",
      "integrity": "sha512-WQ4xz74ApW6s0BToRuuyuMo9g0VHx1HljY0H2gPng+mqqz/K1yLj7sHZonZZQ2++WfHl/ZzruilWvuz+WtmxjQ==",
      "dev": true
    },
    "queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true
    },
    "quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "dev": true
    },
    "readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "requires": {
        "picomatch": "^2.2.1"
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q=="
    },
    "resolve": {
      "version": "1.22.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
      "requires": {
        "is-core-module": "^2.9.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      }
    },
    "resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==",
      "dev": true
    },
    "resolve-cwd": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
      "dev": true,
      "requires": {
        "resolve-from": "^5.0.0"
      }
    },
    "resolve-from": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
      "dev": true
    },
    "responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "dev": true,
      "requires": {
        "lowercase-keys": "^2.0.0"
      }
    },
    "reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "rollup": {
      "version": "2.79.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.1.tgz",
      "integrity": "sha512-uKxbd0IhMZOhjAiD5oAFp7BqvkA4Dv47qpOCtaNvng4HBwdbWtdOh8f5nZNuk2rp51PMGk3bzfWu5oayNEuYnw==",
      "requires": {
        "fsevents": "~2.3.2"
      }
    },
    "rollup-plugin-sourcemaps": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/rollup-plugin-sourcemaps/-/rollup-plugin-sourcemaps-0.6.3.tgz",
      "integrity": "sha512-paFu+nT1xvuO1tPFYXGe+XnQvg4Hjqv/eIhG8i5EspfYYPBKL57X7iVbfv55aNVASg3dzWvES9dmWsL2KhfByw==",
      "requires": {
        "@rollup/pluginutils": "^3.0.9",
        "source-map-resolve": "^0.6.0"
      }
    },
    "run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "requires": {
        "queue-microtask": "^1.2.2"
      }
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "semver": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.7.tgz",
      "integrity": "sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==",
      "dev": true,
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "serialize-error": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
      "dev": true,
      "requires": {
        "type-fest": "^0.13.1"
      }
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true
    },
    "signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true
    },
    "slice-ansi": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-5.0.0.tgz",
      "integrity": "sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^6.0.0",
        "is-fullwidth-code-point": "^4.0.0"
      }
    },
    "source-map-resolve": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.6.0.tgz",
      "integrity": "sha512-KXBr9d/fO/bWo97NXsPIAW1bFSBOuCnjbNTBMO7N59hsv5i9yzRDfcYwwt0l04+VqnKC+EwzvJZIP/qkuMgR/w==",
      "requires": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0"
      }
    },
    "sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA=="
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "dev": true
    },
    "stack-utils": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.5.tgz",
      "integrity": "sha512-xrQcmYhOsn/1kX+Vraq+7j4oE2j/6BFscZ0etmYg81xuM8Gq0022Pxb8+IqgOFUIaxHs0KaSb7T1+OegiNrNFA==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^2.0.0"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
          "dev": true
        }
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "dev": true
    },
    "string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "requires": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      }
    },
    "strip-ansi": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.0.1.tgz",
      "integrity": "sha512-cXNxvT8dFNRVfhVME3JAe98mkXDYN2O1l7jmcwMnOslDeESg1rF/OZMtK0nRAhiari1unG5cD4jG3rapUAkLbw==",
      "dev": true,
      "requires": {
        "ansi-regex": "^6.0.1"
      }
    },
    "supertap": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/supertap/-/supertap-3.0.1.tgz",
      "integrity": "sha512-u1ZpIBCawJnO+0QePsEiOknOfCRq0yERxiAchT0i4li0WHNUJbf0evXXSXOcCAR4M8iMDoajXYmstm/qO81Isw==",
      "dev": true,
      "requires": {
        "indent-string": "^5.0.0",
        "js-yaml": "^3.14.1",
        "serialize-error": "^7.0.1",
        "strip-ansi": "^7.0.1"
      }
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w=="
    },
    "tar": {
      "version": "6.1.11",
      "resolved": "https://registry.npmjs.org/tar/-/tar-6.1.11.tgz",
      "integrity": "sha512-an/KZQzQUkZCkuoAA64hM92X0Urb6VpRhAFllDzz44U2mcD5scmT3zBc4VgVpkugF580+DQn8eAFSyoQt0tznA==",
      "dev": true,
      "requires": {
        "chownr": "^2.0.0",
        "fs-minipass": "^2.0.0",
        "minipass": "^3.0.0",
        "minizlib": "^2.1.1",
        "mkdirp": "^1.0.3",
        "yallist": "^4.0.0"
      }
    },
    "temp-dir": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-2.0.0.tgz",
      "integrity": "sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==",
      "dev": true
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg==",
      "dev": true
    },
    "time-zone": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/time-zone/-/time-zone-1.0.0.tgz",
      "integrity": "sha512-TIsDdtKo6+XrPtiTm1ssmMngN1sAhyKnTO2kunQWqNPWIVvCm15Wmw4SWInwTVgJ5u/Tr04+8Ei9TNcw4x4ONA==",
      "dev": true
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "dev": true
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw==",
      "dev": true
    },
    "type-fest": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
      "dev": true
    },
    "u3": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.1.tgz",
      "integrity": "sha512-+J5D5ir763y+Am/QY6hXNRlwljIeRMZMGs0cT6qqZVVzzT3X3nFPXVyPOFRMOR4kupB0T8JnCdpWdp6Q/iXn3w==",
      "dev": true
    },
    "universalify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
      "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
      "dev": true
    },
    "update-browserslist-db": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.9.tgz",
      "integrity": "sha512-/xsqn21EGVdXI3EXSum1Yckj3ZVZugqyOZQ/CxYPBD/R+ko9NSUScf8tFF4dOKY+2pvSSJA/S+5B8s4Zr4kyvg==",
      "requires": {
        "escalade": "^3.1.1",
        "picocolors": "^1.0.0"
      }
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "dev": true
    },
    "well-known-symbols": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/well-known-symbols/-/well-known-symbols-2.0.0.tgz",
      "integrity": "sha512-ZMjC3ho+KXo0BfJb7JgtQ5IBuvnShdlACNkKkdsqBmYw3bPAaJfPeYUo6tLUaT5tG/Gkh7xkpBhKRQ9e7pyg9Q==",
      "dev": true
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dev": true,
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
        },
        "ansi-styles": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
          "requires": {
            "color-convert": "^2.0.1"
          }
        },
        "color-convert": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
          "requires": {
            "color-name": "~1.1.4"
          }
        },
        "color-name": {
          "version": "1.1.4",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "write-file-atomic": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz",
      "integrity": "sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4",
        "signal-exit": "^3.0.7"
      }
    },
    "y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA=="
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "yargs": {
      "version": "17.5.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.5.1.tgz",
      "integrity": "sha512-t6YAJcxDkNX7NFYiVtKvWUz8l+PaKTLiL63mJYWR2GnHq2gjEWISzsLp9wg3aY36dY1j+gfIEL3pIF+XlJJfbA==",
      "requires": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ=="
        },
        "emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
        },
        "string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          }
        },
        "strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "requires": {
            "ansi-regex": "^5.0.1"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw=="
    },
    "yocto-queue": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz",
      "integrity": "sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==",
      "dev": true
    }
  }
}

'''
'''--- package.json ---
{
  "author": {
    "name": "Dennis",
    "email": "dennis@near.org"
  },
  "license": "MIT",
  "module": "index.js",
  "description": "A simple example for a fungible token contract in JavaScript.",
  "type": "module",
  "scripts": {
    "build": "near-sdk-js build src/index.js build/fungible-token.wasm && near-sdk-js build src/ft-helper.js build/fungible-token-helper.wasm",
    "test": "ava --timeout=2m"
  },
  "dependencies": {
    "near-sdk-js": "0.5.0"
  },
  "devDependencies": {
    "ava": "^4.3.3",
    "near-workspaces": "^3.2.2"
  }
}
'''
'''--- src/ft-helper.js ---
import { NearBindgen, call, view } from "near-sdk-js";

@NearBindgen({})
class FungibleTokenHelper {
    constructor() {
        this.data = "";
    }

    @call({})
    ft_on_transfer({ sender_id, amount, msg, receiver_id }) {
        const concatString = `[${amount} from ${sender_id} to ${receiver_id}] ${msg} `;
        this.data = this.data.concat("", concatString);
    }

    @view({})
    get_contract_data() {
        return this.data;
    }
}
'''
'''--- src/index.js ---
import { NearBindgen, call, view, initialize, near, LookupMap, assert } from "near-sdk-js";

@NearBindgen({ initRequired: true })
export class FungibleToken {
  accounts = new LookupMap("a");
  accountRegistrants = new LookupMap("r");
  accountDeposits = new LookupMap("c");
  totalSupply = "0";

  @initialize({})
  init({ owner_id, total_supply }) {
    assert(BigInt(total_supply) > BigInt(0), "Total supply should be a positive number");
    assert(this.totalSupply === "0", "Contract is already initialized");
    this.totalSupply = total_supply;
    this.accounts.set(owner_id, this.totalSupply);
  }

  internalGetMaxAccountStorageUsage() {
    const initialStorageUsage = near.storageUsage();
    const tempAccountId = "a".repeat(64);
    this.accounts.set(tempAccountId, "0");
    const maxAccountStorageUsage = near.storageUsage() - initialStorageUsage;
    this.accounts.remove(tempAccountId);
    return maxAccountStorageUsage * BigInt(3); // we create an entry in 3 maps
  }

  internalRegisterAccount({ registrantAccountId, accountId, amountStr }) {
    assert(!this.accounts.containsKey(accountId), "Account is already registered");
    this.accounts.set(accountId, "0");
    this.accountRegistrants.set(accountId, registrantAccountId);
    this.accountDeposits.set(accountId, amountStr);
  }

  internalSendNEAR(receivingAccountId, amountBigInt) {
    assert(amountBigInt > BigInt("0"), "The amount should be a positive number");
    assert(receivingAccountId != near.currentAccountId(), "Can't transfer to the contract itself");
    assert(amountBigInt < near.accountBalance(), `Not enough balance ${near.accountBalance()} to cover transfer of ${amountBigInt} yoctoNEAR`);
    const transferPromiseId = near.promiseBatchCreate(receivingAccountId);
    near.promiseBatchActionTransfer(transferPromiseId, amountBigInt);
    near.promiseReturn(transferPromiseId);
  }

  internalGetBalance(accountId) {
    assert(this.accounts.containsKey(accountId), `Account ${accountId} is not registered`);
    return this.accounts.get(accountId);
  }

  internalDeposit(accountId, amount) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) + BigInt(amount);
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) + BigInt(amount);
    this.totalSupply = newSupply.toString();
  }

  internalWithdraw(accountId, amount) {
    let balance = this.internalGetBalance(accountId);
    let newBalance = BigInt(balance) - BigInt(amount);
    assert(newBalance >= BigInt(0), "The account doesn't have enough balance");
    this.accounts.set(accountId, newBalance.toString());
    let newSupply = BigInt(this.totalSupply) - BigInt(amount);
    assert(newSupply >= BigInt(0), "Total supply overflow");
    this.totalSupply = newSupply.toString();
  }

  internalTransfer(senderId, receiverId, amount, memo = null) {
    assert(senderId != receiverId, "Sender and receiver should be different");
    assert(BigInt(amount) > BigInt(0), "The amount should be a positive number");
    this.internalWithdraw(senderId, amount);
    this.internalDeposit(receiverId, amount);
  }

  @call({ payableFunction: true })
  storage_deposit({ account_id }) {
    const accountId = account_id || near.predecessorAccountId();
    let attachedDeposit = near.attachedDeposit();
    if (this.accounts.containsKey(accountId)) {
      if (attachedDeposit > 0) {
        this.internalSendNEAR(near.predecessorAccountId(), attachedDeposit);
        return { message: "Account is already registered, deposit refunded to predecessor" };
      }
      return { message: "Account is already registered" };
    }
    let storageCost = this.internalGetMaxAccountStorageUsage();
    if (attachedDeposit < storageCost) {
      this.internalSendNEAR(near.predecessorAccountId(), attachedDeposit);
      return { message: `Not enough attached deposit to cover storage cost. Required: ${storageCost.toString()}` };
    }
    this.internalRegisterAccount({
      registrantAccountId: near.predecessorAccountId(),
      accountId: accountId,
      amountStr: storageCost.toString(),
    });
    let refund = attachedDeposit - storageCost;
    if (refund > 0) {
      near.log("Storage registration refunding " + refund + " yoctoNEAR to " + near.predecessorAccountId());
      this.internalSendNEAR(near.predecessorAccountId(), refund);
    }
    return { message: `Account ${accountId} registered with storage deposit of ${storageCost.toString()}` };
  }

  @call({ payableFunction: true })
  ft_transfer({ receiver_id, amount, memo }) {
    assert(near.attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to ensure signature");
    let senderId = near.predecessorAccountId();
    near.log("Transfer " + amount + " token from " + senderId + " to " + receiver_id);
    this.internalTransfer(senderId, receiver_id, amount, memo);
  }

  @call({ payableFunction: true })
  ft_transfer_call({ receiver_id, amount, memo, msg }) {
    assert(near.attachedDeposit() > BigInt(0), "Requires at least 1 yoctoNEAR to ensure signature");
    let senderId = near.predecessorAccountId();
    this.internalTransfer(senderId, receiver_id, amount, memo);
    const promise = near.promiseBatchCreate(receiver_id);
    const params = {
      sender_id: senderId,
      amount: amount,
      msg: msg,
      receiver_id: receiver_id,
    };
    near.log("Transfer call " + amount + " token from " + senderId + " to " + receiver_id + " with message " + msg);
    near.promiseBatchActionFunctionCall(promise, "ft_on_transfer", JSON.stringify(params), 0, 30000000000000);
    return near.promiseReturn();
  }

  @view({})
  ft_total_supply() {
    return this.totalSupply;
  }

  @view({})
  ft_balance_of({ account_id }) {
    return this.internalGetBalance(account_id);
  }
}

'''
'''--- tests/main.ava.js ---
import { Worker, NEAR } from "near-workspaces";
import test from "ava";

test.beforeEach(async (t) => {
  const worker = await Worker.init();

  const totalSupply = 1000;
  const yoctoAccountStorage = "330";

  const root = worker.rootAccount;
  const xcc = await root.devDeploy("./build/fungible-token-helper.wasm");
  const ft = await root.createSubAccount("ft");
  await ft.deploy("./build/fungible-token.wasm");
  await root.call(ft, "init", {
    owner_id: root.accountId,
    total_supply: totalSupply.toString(),
  });
  const alice = await root.createSubAccount("alice", { initialBalance: NEAR.parse("10 N").toJSON() });

  t.context.worker = worker;
  t.context.accounts = { root, ft, alice, xcc };
  t.context.variables = { totalSupply, yoctoAccountStorage };
});

test.afterEach.always(async (t) => {
  await t.context.worker.tearDown().catch((error) => {
    console.log("Failed to tear down the worker:", error);
  });
});

test("should register account and pay for storage", async (t) => {
  const { ft, alice } = t.context.accounts;
  const { yoctoAccountStorage } = t.context.variables;
  const result = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  const aliceAfterBalance = await alice.balance();
  const expected = {
    message: `Account ${alice.accountId} registered with storage deposit of ${yoctoAccountStorage}`,
  };
  t.deepEqual(result, expected);
  t.true(aliceAfterBalance.total > NEAR.parse("9 N").toJSON(), "alice should have received a refund");
});

test("should return message when account is already registered and not refund when no deposit is attached", async (t) => {
  const { ft, alice } = t.context.accounts;
  const { yoctoAccountStorage } = t.context.variables;
  const result = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  const expected = {
    message: `Account ${alice.accountId} registered with storage deposit of ${yoctoAccountStorage}`,
  };
  t.deepEqual(result, expected);
  const result2 = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("0 N").toJSON() });
  t.is(result2.message, "Account is already registered");
});

test("should return message and refund predecessor caller when trying to pay for storage for an account that is already registered", async (t) => {
  const { ft, alice } = t.context.accounts;
  const { yoctoAccountStorage } = t.context.variables;
  const result = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  const expected = {
    message: `Account ${alice.accountId} registered with storage deposit of ${yoctoAccountStorage}`,
  };
  t.deepEqual(result, expected);
  const result2 = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  t.is(result2.message, "Account is already registered, deposit refunded to predecessor");
  const aliceBalance = await alice.balance();
  t.is(aliceBalance.total > NEAR.parse("9 N"), true, "alice should have received a refund");
});

test("should return message when trying to pay for storage with less than the required amount and refund predecessor caller", async (t) => {
  const { ft, alice } = t.context.accounts;
  const { yoctoAccountStorage } = t.context.variables;
  const result = await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.from("100").toJSON() });
  t.is(result.message, `Not enough attached deposit to cover storage cost. Required: ${yoctoAccountStorage}`);
});

test("should throw when trying to transfer for an unregistered account", async (t) => {
  const { ft, alice, root } = t.context.accounts;
  try {
    await root.call(ft, "ft_transfer", { receiver_id: alice.accountId, amount: "1" }, { attachedDeposit: NEAR.from("1").toJSON() });
  } catch (error) {
    t.true(error.message.includes(`Account ${alice.accountId} is not registered`));
  }
});

test("Owner has all balance in the beginning", async (t) => {
  const { ft, root } = t.context.accounts;
  const result = await ft.view("ft_balance_of", { account_id: root.accountId });
  t.is(result, "1000");
});

test("Can transfer if balance is sufficient", async (t) => {
  const { alice, ft, root } = t.context.accounts;
  await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  await root.call(ft, "ft_transfer", { receiver_id: alice.accountId, amount: "100" }, { attachedDeposit: NEAR.from("1").toJSON() });
  const aliBalance = await ft.view("ft_balance_of", { account_id: alice.accountId });
  t.is(aliBalance, "100");
  const ownerBalance = await ft.view("ft_balance_of", {
    account_id: root.accountId,
  });
  t.is(ownerBalance, "900");
});

test("Cannot transfer if balance is not sufficient", async (t) => {
  const { alice, root, ft } = t.context.accounts;
  await alice.call(ft, "storage_deposit", { account_id: alice.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  try {
    await alice.call(
      ft,
      "ft_transfer",
      {
        receiverId: root.accountId,
        amount: "100",
      },
      { attachedDeposit: NEAR.from("1").toJSON() }
    );
  } catch (e) {
    t.assert(e.toString().indexOf("Smart contract panicked: assertion failed: The account doesn't have enough balance") >= 0);
  }
});

test("Cross contract transfer", async (t) => {
  const { xcc, ft, root } = t.context.accounts;
  await xcc.call(ft, "storage_deposit", { account_id: xcc.accountId }, { attachedDeposit: NEAR.parse("1 N").toJSON() });
  await root.call(ft, "ft_transfer_call", { receiver_id: xcc.accountId, amount: "900", memo: null, msg: "test msg" }, { gas: 200000000000000, attachedDeposit: NEAR.from("1").toJSON() });
  const xccBalance = await ft.view("ft_balance_of", { account_id: xcc.accountId });
  t.is(xccBalance, "900");
  const aliSubContractData = await xcc.view("get_contract_data");
  t.is(aliSubContractData, `[900 from ${root.accountId} to ${xcc.accountId}] test msg `);
  const ownerBalance = await ft.view("ft_balance_of", { account_id: root.accountId });
  t.is(ownerBalance, "100");
});

'''