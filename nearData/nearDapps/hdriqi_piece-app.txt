*GitHub Repository "hdriqi/piece-app"*

'''--- README.md ---
Piece Interface
==================

The interface for Piece Protocol, An incentivized protocol both for creators and supporters. Piece Protocol is built on top of NEAR blockchain and Sia decentralized storage. 

[Try Piece on Sia](https://siasky.net/_AUBQQJF4mYSB2iqUx30ZA6U4iAMmezZDFeVMERZXXAXZQ)

Video Demo
==========

[<img src="https://i.ibb.co/TtDZfms/5f7324b0dd22apiece-thumbnail.png">](https://www.loom.com/share/af2f558cdd2b43e9a8dae1a5d968447f)

Quick Start
===========

To run this project locally:

1. Prerequisites: Make sure you've installed [Node.js] â‰¥ 12
2. Install dependencies: `yarn install`
3. Run the local development server: `yarn start` (see `package.json` for a
   full list of `scripts` you can run with `yarn`)

Smart Contract
==============

The smart contract was deployed at [dev-v1.piece.testnet](https://explorer.testnet.near.org/accounts/dev-v1.piece.testnet).

You can read the source code for the smart contract [here](https://github.com/hdriqi/piece-protocol). 

'''
'''--- babel.config.js ---
module.exports = {
  presets: ['@babel/preset-env', '@babel/preset-react'],
}

'''
'''--- package.json ---
{
  "name": "piece",
  "version": "0.1.0",
  "license": "UNLICENSED",
  "scripts": {
    "postcss:watch": "postcss src/styles/index.css -o src/styles/tailwind.css --env development -w",
    "postcss:build": "postcss src/styles/index.css -o src/styles/tailwind.css --env production",
    "parcel:serve": "parcel src/index.html",
    "parcel:watch": "parcel watch src/index.html",
    "parcel:build": "parcel build  --public-url './' src/index.html",
    "clean": "rm -rf dist .cache",
    "build": "npm-run-all -s clean postcss:build parcel:build",
    "start": "npm-run-all -s clean -p postcss:watch parcel:serve"
  },
  "devDependencies": {
    "@babel/core": "^7.10.4",
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-react": "^7.9.4",
    "babel-jest": "^26.0.0",
    "env-cmd": "^10.1.0",
    "gh-pages": "^3.0.0",
    "jest": "^26.0.1",
    "jest-environment-node": "^26.0.0",
    "near-cli": "^1.0.1",
    "near-sdk-as": "^1.0.1",
    "nodemon": "^2.0.3",
    "npm-run-all": "^4.1.5",
    "parcel-bundler": "^1.12.4",
    "react-scripts": "^3.4.3",
    "react-test-renderer": "^16.13.1",
    "tailwindcss": "^1.8.10"
  },
  "dependencies": {
    "autoprefixer": "^10.0.0",
    "croppie": "^2.6.5",
    "javascript-time-ago": "^2.0.13",
    "jsbi": "^3.1.4",
    "near-api-js": "^0.29.0",
    "postcss-cli": "^8.0.0",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-infinite-scroller": "^1.2.4",
    "react-router-dom": "^5.2.0",
    "regenerator-runtime": "^0.13.5",
    "skynet-js": "^2.0.4",
    "zustand": "^3.1.2"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/src/jest.init.js"
    ],
    "testEnvironment": "near-cli/test_environment",
    "testPathIgnorePatterns": [
      "<rootDir>/assembly/",
      "<rootDir>/node_modules/"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- postcss.config.js ---
const tailwindcss = require('tailwindcss')
module.exports = {
	plugins: [tailwindcss('./tailwind.config.js')],
}

'''
'''--- src/App.js ---
import 'regenerator-runtime/runtime'
import React, { useEffect } from 'react'
import { HashRouter as Router, Route, Switch } from 'react-router-dom'

import './styles/tailwind.css'
import 'croppie/croppie.css'

import ExplorePage from './pages/Explore'
import HomePage from './pages/Home'
import ProfilePage from './pages/Profile'
import ProfileEditPage from './pages/ProfileEdit'
import LoginPage from './pages/Login'
import Nav from './components/Nav'
import { useStore } from './store'
import {
	isLoggedIn,
	getAccountId,
	contractGetProfile,
	contractUpdateProfile,
} from './near'
import ProfileRewardPage from './pages/ProfileReward'
import ProfileBalancePage from './pages/ProfileBalance'
import Footer from './components/Footer'

export default function App() {
	const { userId, setUserId } = useStore((state) => state)

	const _checkProfile = async (userId) => {
		const profileData = await contractGetProfile({
			userId: userId,
		})
		if (!profileData) {
			const newUser = {
				userId: getAccountId(),
				avatar: 'sia://JACbx1WBFbtWwDu6aXoL5wLb-X9F9q2oL1IFqcJmMS4suw',
				bio: 'User of Piece',
			}
			await contractUpdateProfile(newUser)
		}
	}

	useEffect(() => {
		if (!userId && isLoggedIn()) {
			setUserId(getAccountId())
			_checkProfile(getAccountId())
		}
	}, [userId])

	return (
		<Router>
			<div className="max-w-4xl m-auto p-4">
				<Nav />
			</div>
			<Switch>
				<Route path="/" exact>
					<HomePage />
				</Route>
				<Route path="/login" exact>
					<LoginPage />
				</Route>
				<Route path="/explore" exact>
					<ExplorePage />
				</Route>
				<Route path="/me/balance" exact>
					<ProfileBalancePage />
				</Route>
				<Route path="/me/reward" exact>
					<ProfileRewardPage />
				</Route>
				<Route path="/me/edit" exact>
					<ProfileEditPage />
				</Route>
				<Route path="/:userId" exact>
					<ProfilePage />
				</Route>
			</Switch>
			<div className="max-w-4xl m-auto p-4">
				<Footer />
			</div>
		</Router>
	)
}

'''
'''--- src/assets/how-it-works.svg ---
<svg width="200" height="100" viewBox="0 0 200 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="100" height="100" fill="#F52D3A"/>
<path d="M34.0316 27.2039C33.7367 27.1622 33.426 27.1414 33.0995 27.1414C30.5508 27.1414 28.5708 27.8398 27.1596 29.2365C25.8957 30.4874 25.2638 32.1135 25.2638 34.1148C25.2638 35.8764 25.8062 37.2523 26.891 38.2426C27.881 39.1599 29.2343 39.6498 30.951 39.7123C31.1617 39.7227 31.3723 39.7071 31.5829 39.6654L32.0411 39.5716C32.7572 39.4257 33.1364 39.6029 33.1785 40.1032C33.2101 40.5827 32.694 40.8224 31.6303 40.8224C31.5145 40.8224 31.3986 40.8224 31.2828 40.8224C31.1669 40.8224 30.872 40.812 30.3981 40.7912C29.9242 40.7703 29.2712 40.6452 28.4392 40.4159C27.6177 40.1762 26.8752 39.7905 26.2117 39.2589C24.7372 38.0602 24 36.2621 24 33.8646C24 31.4568 24.9163 29.518 26.7488 28.0482C28.455 26.6827 30.5298 26 32.9731 26C35.7114 26 37.9336 26.86 39.6398 28.5799C41.5145 30.4874 42.4518 33.2392 42.4518 36.8354C42.4518 40.5254 41.4197 43.4544 39.3554 45.6225C37.4176 47.676 34.9531 48.7027 31.9621 48.7027C30.119 48.7027 28.5392 48.3222 27.2227 47.5613C26.2433 46.9984 25.7536 46.4147 25.7536 45.8101C25.7536 45.4662 25.9589 45.2942 26.3697 45.2942C26.5908 45.2942 26.7699 45.3671 26.9068 45.5131L27.2701 45.9352C28.218 47.0714 29.8136 47.6395 32.0569 47.6395C32.7309 47.6395 33.3892 47.5665 34.0316 47.4206V27.2039Z" fill="black"/>
<path d="M54.6793 48.7027C53.2364 48.7027 51.9463 48.4577 50.8088 47.9678C49.6819 47.4779 48.7235 46.7431 47.9336 45.7632C46.3012 43.741 45.485 40.7859 45.485 36.8979C45.485 33.4373 46.3065 30.7584 47.9494 28.8613C49.5924 26.9538 51.9252 26 54.9479 26C57.8547 26 60.0979 26.9642 61.6777 28.8926C63.2259 30.8001 64 33.5415 64 37.1168C64 40.8902 63.168 43.7827 61.5039 45.7945C59.882 47.7333 57.6072 48.7027 54.6793 48.7027ZM54.7899 47.6239C58.5287 47.6239 60.9826 45.7268 62.1517 41.9325C62.5624 40.6087 62.7678 39.0191 62.7678 37.1637C62.7678 35.3083 62.5729 33.7396 62.1833 32.4574C61.7936 31.1753 61.2512 30.133 60.5561 29.3304C59.2185 27.7877 57.3386 27.0163 54.9163 27.0163H54.7425V47.6239H54.7899Z" fill="black"/>
<path d="M67.9338 49C67.7042 49 67.5894 48.881 67.5894 48.6429C67.5894 48.5156 67.6424 48.3882 67.7483 48.2609C67.8602 48.1336 67.9662 48.0173 68.0662 47.9121C68.2605 47.7183 68.5283 47.3668 68.8698 46.8574L74.6976 38.2872C74.9036 37.9772 75.0567 37.7225 75.1567 37.5232C75.2568 37.3183 75.3363 37.1799 75.3951 37.108C75.454 37.036 75.5453 37 75.6689 37C75.7925 37 75.8955 37.0304 75.9779 37.0913C76.0603 37.1522 76.1015 37.2215 76.1015 37.299C76.1015 37.3709 76.0868 37.4374 76.0574 37.4983C76.0338 37.5536 75.9985 37.6145 75.9514 37.681L75.766 37.9301C75.6954 38.0242 75.613 38.1405 75.5188 38.2789L68.8521 48.1612C68.5872 48.5543 68.3929 48.7924 68.2693 48.8754C68.1457 48.9585 68.0338 49 67.9338 49ZM68.9404 42.2983C68.5342 42.2983 68.1486 42.2374 67.7837 42.1156C67.4246 41.9882 67.1126 41.8083 66.8477 41.5758C66.2826 41.0775 66 40.4464 66 39.6824C66 38.9571 66.2884 38.3564 66.8653 37.8803C67.4364 37.4042 68.1398 37.1661 68.9757 37.1661C69.7763 37.1661 70.4474 37.3986 70.989 37.8637C71.5541 38.3453 71.8366 38.9654 71.8366 39.7239C71.8366 40.4602 71.5541 41.0747 70.989 41.5675C70.4415 42.0436 69.7586 42.2872 68.9404 42.2983ZM68.9316 41.7336C69.5673 41.7336 70.0942 41.5647 70.5121 41.227C70.9654 40.8616 71.1921 40.3661 71.1921 39.7405C71.1921 39.1536 70.9684 38.6692 70.521 38.2872C70.0912 37.9163 69.5614 37.7308 68.9316 37.7308H68.8698C68.8462 37.7308 68.8197 37.7336 68.7903 37.7391V41.7336H68.9316ZM72.1898 46.2346C72.1898 45.8581 72.2634 45.5176 72.4106 45.2131C72.5636 44.9031 72.7726 44.6346 73.0375 44.4076C73.6026 43.9315 74.3061 43.6934 75.1479 43.6934C75.9426 43.6934 76.6107 43.926 77.1523 44.391C77.7174 44.8727 78 45.4955 78 46.2595C78 46.9958 77.7174 47.6104 77.1523 48.1031C76.599 48.5903 75.9249 48.8339 75.1302 48.8339C74.2826 48.845 73.5791 48.6042 73.0199 48.1114C72.4665 47.6242 72.1898 46.9986 72.1898 46.2346ZM75.1038 48.2609C75.7277 48.2609 76.2517 48.092 76.6755 47.7543C77.1347 47.3945 77.3642 46.9017 77.3642 46.2761C77.3642 45.6837 77.1405 45.1993 76.6932 44.8228C76.2575 44.4519 75.7277 44.2664 75.1038 44.2664C75.0802 44.2664 75.0567 44.2664 75.0331 44.2664C75.0096 44.2664 74.986 44.2692 74.9625 44.2747V48.2609H75.1038Z" fill="black"/>
<circle cx="50" cy="76" r="19" fill="black"/>
<path d="M28.912 16.388C28.768 16.484 28.572 16.592 28.324 16.712C28.076 16.832 27.784 16.936 27.448 17.024C27.12 17.104 26.76 17.14 26.368 17.132C25.688 17.124 25.08 17.004 24.544 16.772C24.008 16.54 23.548 16.224 23.164 15.824C22.788 15.416 22.5 14.952 22.3 14.432C22.1 13.912 22 13.356 22 12.764C22 12.116 22.104 11.52 22.312 10.976C22.528 10.424 22.828 9.948 23.212 9.548C23.596 9.14 24.048 8.824 24.568 8.6C25.096 8.376 25.672 8.264 26.296 8.264C26.816 8.264 27.288 8.336 27.712 8.48C28.136 8.616 28.5 8.776 28.804 8.96L28.336 10.052C28.096 9.892 27.804 9.74 27.46 9.596C27.116 9.452 26.74 9.38 26.332 9.38C25.908 9.38 25.508 9.468 25.132 9.644C24.756 9.812 24.424 10.048 24.136 10.352C23.848 10.648 23.62 11 23.452 11.408C23.292 11.808 23.212 12.24 23.212 12.704C23.212 13.328 23.34 13.892 23.596 14.396C23.86 14.892 24.228 15.284 24.7 15.572C25.18 15.86 25.74 16.004 26.38 16.004C26.828 16.004 27.22 15.94 27.556 15.812C27.9 15.676 28.184 15.52 28.408 15.344L28.912 16.388Z" fill="black"/>
<path d="M33.188 8.36C33.764 8.36 34.284 8.464 34.748 8.672C35.212 8.872 35.58 9.176 35.852 9.584C36.124 9.984 36.26 10.472 36.26 11.048C36.26 11.544 36.148 12.024 35.924 12.488C35.708 12.952 35.34 13.304 34.82 13.544L37.004 17.036H35.648L33.596 13.832C33.508 13.84 33.416 13.844 33.32 13.844H32.036V17.036H30.872V8.36H33.188ZM33.296 12.716C33.76 12.716 34.116 12.632 34.364 12.464C34.62 12.288 34.8 12.076 34.904 11.828C35.008 11.572 35.06 11.328 35.06 11.096C35.06 10.864 35.004 10.624 34.892 10.376C34.78 10.128 34.6 9.916 34.352 9.74C34.112 9.564 33.788 9.476 33.38 9.476H32.036V12.716H33.296Z" fill="black"/>
<path d="M38.7939 8.36H44.4339V9.476H39.9579V12.116H43.9539V13.232H39.9579V15.908H44.6019V17.036H38.7939V8.36Z" fill="black"/>
<path d="M45.7698 17.036L49.5618 8H49.6338L53.4258 17.036H52.0818L51.1817 14.756H47.8458L46.9217 17.036H45.7698ZM48.2537 13.748H50.7857L49.5497 10.592L48.2537 13.748Z" fill="black"/>
<path d="M53.7438 8.36H59.5038V9.476H57.1758V17.036H56.0118V9.476H53.7438V8.36Z" fill="black"/>
<path d="M60.4609 12.704C60.4609 12.104 60.5729 11.536 60.7969 11C61.0289 10.464 61.3489 9.992 61.7569 9.584C62.1649 9.176 62.6329 8.856 63.1609 8.624C63.6969 8.384 64.2689 8.264 64.8769 8.264C65.4849 8.264 66.0569 8.384 66.5929 8.624C67.1369 8.856 67.6129 9.176 68.0209 9.584C68.4289 9.992 68.7489 10.464 68.9809 11C69.2129 11.536 69.3289 12.104 69.3289 12.704C69.3289 13.32 69.2129 13.896 68.9809 14.432C68.7489 14.96 68.4289 15.428 68.0209 15.836C67.6129 16.244 67.1369 16.564 66.5929 16.796C66.0569 17.02 65.4849 17.132 64.8769 17.132C64.2689 17.132 63.6969 17.02 63.1609 16.796C62.6329 16.572 62.1649 16.26 61.7569 15.86C61.3489 15.46 61.0289 14.992 60.7969 14.456C60.5729 13.912 60.4609 13.328 60.4609 12.704ZM61.6609 12.716C61.6609 13.172 61.7449 13.6 61.9129 14C62.0809 14.392 62.3129 14.74 62.6089 15.044C62.9049 15.348 63.2489 15.584 63.6409 15.752C64.0329 15.92 64.4569 16.004 64.9129 16.004C65.5129 16.004 66.0529 15.86 66.5329 15.572C67.0209 15.276 67.4089 14.88 67.6969 14.384C67.9849 13.88 68.1289 13.32 68.1289 12.704C68.1289 12.248 68.0449 11.82 67.8769 11.42C67.7089 11.012 67.4769 10.656 67.1809 10.352C66.8849 10.048 66.5409 9.812 66.1489 9.644C65.7569 9.468 65.3369 9.38 64.8889 9.38C64.2809 9.38 63.7329 9.532 63.2449 9.836C62.7569 10.14 62.3689 10.544 62.0809 11.048C61.8009 11.552 61.6609 12.108 61.6609 12.716Z" fill="black"/>
<path d="M73.606 8.36C74.182 8.36 74.702 8.464 75.166 8.672C75.63 8.872 75.998 9.176 76.27 9.584C76.542 9.984 76.678 10.472 76.678 11.048C76.678 11.544 76.566 12.024 76.342 12.488C76.126 12.952 75.758 13.304 75.238 13.544L77.422 17.036H76.066L74.014 13.832C73.926 13.84 73.834 13.844 73.738 13.844H72.454V17.036H71.29V8.36H73.606ZM73.714 12.716C74.178 12.716 74.534 12.632 74.782 12.464C75.038 12.288 75.218 12.076 75.322 11.828C75.426 11.572 75.478 11.328 75.478 11.096C75.478 10.864 75.422 10.624 75.31 10.376C75.198 10.128 75.018 9.916 74.77 9.74C74.53 9.564 74.206 9.476 73.798 9.476H72.454V12.716H73.714Z" fill="black"/>
<rect x="100" width="100" height="100" fill="#FFBC29"/>
<circle cx="131.8" cy="61.8" r="4.8" fill="black"/>
<circle cx="168.8" cy="61.8" r="4.8" fill="black"/>
<circle cx="155.8" cy="61.8" r="4.8" fill="black"/>
<circle cx="143.8" cy="61.8" r="4.8" fill="black"/>
<circle cx="131.8" cy="75.8" r="4.8" fill="#FEFEFE"/>
<circle cx="168.8" cy="75.8" r="4.8" fill="#FEFEFE"/>
<circle cx="155.8" cy="75.8" r="4.8" fill="#FEFEFE"/>
<circle cx="143.8" cy="75.8" r="4.8" fill="#FEFEFE"/>
<circle cx="131.8" cy="89.8" r="4.8" fill="#FEFEFE"/>
<circle cx="168.8" cy="89.8" r="4.8" fill="#FEFEFE"/>
<circle cx="155.8" cy="89.8" r="4.8" fill="#FEFEFE"/>
<circle cx="143.8" cy="89.8" r="4.8" fill="#FEFEFE"/>
<path d="M120.148 10.644C119.852 10.492 119.528 10.36 119.176 10.248C118.824 10.136 118.484 10.08 118.156 10.08C117.684 10.08 117.308 10.188 117.028 10.404C116.756 10.62 116.62 10.912 116.62 11.28C116.62 11.544 116.708 11.768 116.884 11.952C117.068 12.136 117.3 12.3 117.58 12.444C117.868 12.58 118.172 12.708 118.492 12.828C118.852 12.964 119.2 13.128 119.536 13.32C119.872 13.512 120.148 13.772 120.364 14.1C120.588 14.42 120.7 14.852 120.7 15.396C120.7 15.86 120.584 16.28 120.352 16.656C120.12 17.024 119.792 17.32 119.368 17.544C118.944 17.76 118.44 17.868 117.856 17.868C117.28 17.868 116.744 17.776 116.248 17.592C115.76 17.408 115.344 17.196 115 16.956L115.516 16.032C115.796 16.248 116.14 16.436 116.548 16.596C116.964 16.756 117.36 16.836 117.736 16.836C118.016 16.836 118.288 16.788 118.552 16.692C118.824 16.596 119.048 16.444 119.224 16.236C119.4 16.02 119.488 15.744 119.488 15.408C119.488 15.12 119.408 14.876 119.248 14.676C119.088 14.476 118.88 14.308 118.624 14.172C118.376 14.028 118.104 13.9 117.808 13.788C117.536 13.692 117.26 13.58 116.98 13.452C116.7 13.324 116.44 13.172 116.2 12.996C115.968 12.812 115.78 12.588 115.636 12.324C115.492 12.06 115.42 11.74 115.42 11.364C115.42 10.908 115.528 10.512 115.744 10.176C115.968 9.832 116.272 9.564 116.656 9.372C117.04 9.172 117.484 9.064 117.988 9.048C118.54 9.048 119.028 9.116 119.452 9.252C119.884 9.388 120.264 9.552 120.592 9.744L120.148 10.644Z" fill="black"/>
<path d="M123.7 14.7C123.7 15.084 123.792 15.432 123.976 15.744C124.16 16.048 124.408 16.292 124.72 16.476C125.04 16.652 125.392 16.74 125.776 16.74C126.184 16.74 126.544 16.652 126.856 16.476C127.176 16.292 127.428 16.048 127.612 15.744C127.804 15.432 127.9 15.084 127.9 14.7V9.096H129.04V14.736C129.04 15.368 128.892 15.92 128.596 16.392C128.308 16.864 127.916 17.228 127.42 17.484C126.932 17.74 126.384 17.868 125.776 17.868C125.168 17.868 124.62 17.74 124.132 17.484C123.644 17.228 123.256 16.864 122.968 16.392C122.68 15.92 122.536 15.368 122.536 14.736V9.096H123.7V14.7Z" fill="black"/>
<path d="M133.761 9.096C134.697 9.096 135.433 9.332 135.969 9.804C136.505 10.276 136.773 10.936 136.773 11.784C136.773 12.128 136.721 12.468 136.617 12.804C136.513 13.132 136.345 13.432 136.113 13.704C135.889 13.968 135.593 14.184 135.225 14.352C134.857 14.512 134.409 14.592 133.881 14.592H132.597V17.772H131.433V9.096H133.761ZM133.881 13.452C134.217 13.452 134.497 13.4 134.721 13.296C134.945 13.184 135.121 13.04 135.249 12.864C135.385 12.688 135.481 12.508 135.537 12.324C135.593 12.132 135.621 11.96 135.621 11.808C135.621 11.576 135.565 11.336 135.453 11.088C135.349 10.84 135.173 10.632 134.925 10.464C134.685 10.296 134.357 10.212 133.941 10.212H132.597V13.452H133.881Z" fill="black"/>
<path d="M140.898 9.096C141.834 9.096 142.57 9.332 143.106 9.804C143.642 10.276 143.91 10.936 143.91 11.784C143.91 12.128 143.858 12.468 143.754 12.804C143.65 13.132 143.482 13.432 143.25 13.704C143.026 13.968 142.73 14.184 142.362 14.352C141.994 14.512 141.546 14.592 141.018 14.592H139.734V17.772H138.57V9.096H140.898ZM141.018 13.452C141.354 13.452 141.634 13.4 141.858 13.296C142.082 13.184 142.258 13.04 142.386 12.864C142.522 12.688 142.618 12.508 142.674 12.324C142.73 12.132 142.758 11.96 142.758 11.808C142.758 11.576 142.702 11.336 142.59 11.088C142.486 10.84 142.31 10.632 142.062 10.464C141.822 10.296 141.494 10.212 141.078 10.212H139.734V13.452H141.018Z" fill="black"/>
<path d="M145.167 13.44C145.167 12.84 145.279 12.272 145.503 11.736C145.735 11.2 146.055 10.728 146.463 10.32C146.871 9.912 147.339 9.592 147.867 9.36C148.403 9.12 148.975 9 149.583 9C150.191 9 150.763 9.12 151.299 9.36C151.843 9.592 152.319 9.912 152.727 10.32C153.135 10.728 153.455 11.2 153.687 11.736C153.919 12.272 154.035 12.84 154.035 13.44C154.035 14.056 153.919 14.632 153.687 15.168C153.455 15.696 153.135 16.164 152.727 16.572C152.319 16.98 151.843 17.3 151.299 17.532C150.763 17.756 150.191 17.868 149.583 17.868C148.975 17.868 148.403 17.756 147.867 17.532C147.339 17.308 146.871 16.996 146.463 16.596C146.055 16.196 145.735 15.728 145.503 15.192C145.279 14.648 145.167 14.064 145.167 13.44ZM146.367 13.452C146.367 13.908 146.451 14.336 146.619 14.736C146.787 15.128 147.019 15.476 147.315 15.78C147.611 16.084 147.955 16.32 148.347 16.488C148.739 16.656 149.163 16.74 149.619 16.74C150.219 16.74 150.759 16.596 151.239 16.308C151.727 16.012 152.115 15.616 152.403 15.12C152.691 14.616 152.835 14.056 152.835 13.44C152.835 12.984 152.751 12.556 152.583 12.156C152.415 11.748 152.183 11.392 151.887 11.088C151.591 10.784 151.247 10.548 150.855 10.38C150.463 10.204 150.043 10.116 149.595 10.116C148.987 10.116 148.439 10.268 147.951 10.572C147.463 10.876 147.075 11.28 146.787 11.784C146.507 12.288 146.367 12.844 146.367 13.452Z" fill="black"/>
<path d="M158.312 9.096C158.888 9.096 159.408 9.2 159.872 9.408C160.336 9.608 160.704 9.912 160.976 10.32C161.248 10.72 161.384 11.208 161.384 11.784C161.384 12.28 161.272 12.76 161.048 13.224C160.832 13.688 160.464 14.04 159.944 14.28L162.128 17.772H160.772L158.72 14.568C158.632 14.576 158.54 14.58 158.444 14.58H157.16V17.772H155.996V9.096H158.312ZM158.42 13.452C158.884 13.452 159.24 13.368 159.488 13.2C159.744 13.024 159.924 12.812 160.028 12.564C160.132 12.308 160.184 12.064 160.184 11.832C160.184 11.6 160.128 11.36 160.016 11.112C159.904 10.864 159.724 10.652 159.476 10.476C159.236 10.3 158.912 10.212 158.504 10.212H157.16V13.452H158.42Z" fill="black"/>
<path d="M163.165 9.096H168.925V10.212H166.597V17.772H165.433V10.212H163.165V9.096Z" fill="black"/>
<path d="M170.785 9.096H176.425V10.212H171.949V12.852H175.945V13.968H171.949V16.644H176.593V17.772H170.785V9.096Z" fill="black"/>
<path d="M180.941 9.096C181.517 9.096 182.037 9.2 182.501 9.408C182.965 9.608 183.333 9.912 183.605 10.32C183.877 10.72 184.013 11.208 184.013 11.784C184.013 12.28 183.901 12.76 183.677 13.224C183.461 13.688 183.093 14.04 182.573 14.28L184.757 17.772H183.401L181.349 14.568C181.261 14.576 181.169 14.58 181.073 14.58H179.789V17.772H178.625V9.096H180.941ZM181.049 13.452C181.513 13.452 181.869 13.368 182.117 13.2C182.373 13.024 182.553 12.812 182.657 12.564C182.761 12.308 182.813 12.064 182.813 11.832C182.813 11.6 182.757 11.36 182.645 11.112C182.533 10.864 182.353 10.652 182.105 10.476C181.865 10.3 181.541 10.212 181.133 10.212H179.789V13.452H181.049Z" fill="black"/>
<path d="M165.402 49C165.172 49 165.057 48.881 165.057 48.6429C165.057 48.5156 165.11 48.3882 165.216 48.2609C165.328 48.1336 165.434 48.0173 165.534 47.9121C165.729 47.7183 165.996 47.3668 166.338 46.8574L172.166 38.2872C172.372 37.9772 172.525 37.7225 172.625 37.5232C172.725 37.3183 172.804 37.1799 172.863 37.108C172.922 37.036 173.013 37 173.137 37C173.261 37 173.364 37.0304 173.446 37.0913C173.528 37.1522 173.57 37.2215 173.57 37.299C173.57 37.3709 173.555 37.4374 173.525 37.4983C173.502 37.5536 173.467 37.6145 173.419 37.681L173.234 37.9301C173.163 38.0242 173.081 38.1405 172.987 38.2789L166.32 48.1612C166.055 48.5543 165.861 48.7924 165.737 48.8754C165.614 48.9585 165.502 49 165.402 49ZM166.408 42.2983C166.002 42.2983 165.617 42.2374 165.252 42.1156C164.893 41.9882 164.581 41.8083 164.316 41.5758C163.751 41.0775 163.468 40.4464 163.468 39.6824C163.468 38.9571 163.756 38.3564 164.333 37.8803C164.904 37.4042 165.608 37.1661 166.444 37.1661C167.244 37.1661 167.915 37.3986 168.457 37.8637C169.022 38.3453 169.305 38.9654 169.305 39.7239C169.305 40.4602 169.022 41.0747 168.457 41.5675C167.91 42.0436 167.227 42.2872 166.408 42.2983ZM166.4 41.7336C167.035 41.7336 167.562 41.5647 167.98 41.227C168.433 40.8616 168.66 40.3661 168.66 39.7405C168.66 39.1536 168.436 38.6692 167.989 38.2872C167.559 37.9163 167.029 37.7308 166.4 37.7308H166.338C166.314 37.7308 166.288 37.7336 166.258 37.7391V41.7336H166.4ZM169.658 46.2346C169.658 45.8581 169.731 45.5176 169.879 45.2131C170.032 44.9031 170.241 44.6346 170.506 44.4076C171.071 43.9315 171.774 43.6934 172.616 43.6934C173.411 43.6934 174.079 43.926 174.62 44.391C175.185 44.8727 175.468 45.4955 175.468 46.2595C175.468 46.9958 175.185 47.6104 174.62 48.1031C174.067 48.5903 173.393 48.8339 172.598 48.8339C171.751 48.845 171.047 48.6042 170.488 48.1114C169.935 47.6242 169.658 46.9986 169.658 46.2346ZM172.572 48.2609C173.196 48.2609 173.72 48.092 174.144 47.7543C174.603 47.3945 174.832 46.9017 174.832 46.2761C174.832 45.6837 174.609 45.1993 174.161 44.8228C173.726 44.4519 173.196 44.2664 172.572 44.2664C172.548 44.2664 172.525 44.2664 172.501 44.2664C172.478 44.2664 172.454 44.2692 172.43 44.2747V48.2609H172.572Z" fill="black"/>
<path d="M129.416 29.5275L128.388 29.8281C127.734 30.0179 127.244 30.1972 126.917 30.3659C126.337 30.6823 125.91 30.8352 125.636 30.8246C125.182 30.8141 124.971 30.619 125.003 30.2393C125.024 29.8492 125.377 29.575 126.063 29.4168C126.453 29.3113 126.843 29.2006 127.233 29.0846L137.5 26V48.6995H129.401L129.416 29.5275Z" fill="black"/>
<path d="M151.135 49C149.69 49 148.399 48.7522 147.26 48.2565C146.131 47.7609 145.172 47.0174 144.381 46.0261C142.746 43.9803 141.929 40.9906 141.929 37.0571C141.929 33.5559 142.751 30.8457 144.396 28.9264C146.042 26.9966 148.377 26.0316 151.404 26.0316C154.315 26.0316 156.561 27.0071 158.143 28.958C159.693 30.8879 160.468 33.6614 160.468 37.2785C160.468 41.0961 159.635 44.0225 157.969 46.0578C156.345 48.0193 154.067 49 151.135 49ZM151.246 47.9085C154.99 47.9085 157.447 45.9892 158.617 42.1506C159.029 40.8113 159.234 39.2031 159.234 37.326C159.234 35.4489 159.039 33.8618 158.649 32.5646C158.259 31.2675 157.716 30.213 157.02 29.401C155.68 27.8402 153.798 27.0598 151.372 27.0598H151.198V47.9085H151.246Z" fill="black"/>
</svg>

'''
'''--- src/components/Activity.js ---
import React from 'react'
import { Link } from 'react-router-dom'
import { parseDateTime, prettyBalance } from '../utils'

const Activity = ({ data }) => {
	return (
		<>
			<p>
				Receive <b>{prettyBalance(data.value, 24, 8)}</b> â“ƒ from{' '}
				<Link to={`/${data.from}`}>
					<b>{data.from}</b>
				</Link>{' '}
			</p>
			<p className="text-sm text-gray-800">
				{parseDateTime(data.createdAt / 10 ** 6)}
			</p>
		</>
	)
}

export default Activity
'''
'''--- src/components/Footer.js ---
import React from 'react'
import { Link } from 'react-router-dom'

const Footer = () => {
	return (
		<div className="flex flex-wrap justify-between pt-32">
			<div className="mt-4 flex w-full md:w-2/3 justify-between md:justify-start">
				<Link to="/">
					<h4 className="text-lg">
						<p>Home</p>
					</h4>
				</Link>
				<Link to="/explore">
					<h4 className="text-lg ml-8">
						<p>Explore</p>
					</h4>
				</Link>
				<a
					className="hover:underline flex ml-8 text-lg"
					target="_blank"
					href="https://github.com/hdriqi/piece-app"
				>
					<p>Github</p>
					<svg
						className="fill-current"
						width="12"
						height="12"
						viewBox="0 0 24 24"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							fillRule="evenodd"
							clipRule="evenodd"
							d="M11.7042 13.7071L18.9971 6.41421V11H20.9971V3H12.9971V5H17.5829L10.29 12.2929L11.7042 13.7071ZM19 19V14H17V19H5V7H10V5H5C3.89543 5 3 5.89543 3 7V19C3 20.1046 3.89543 21 5 21H17C18.1046 21 19 20.1046 19 19Z"
						/>
					</svg>
				</a>
			</div>
			<h4 className="mt-4 w-full md:w-1/3 text-lg flex justify-center md:justify-end">
				<a
					className="hover:underline flex text-gray-800"
					target="_blank"
					href="https://paras.id"
				>
					<p>From Paras Team</p>
					<svg
						className="fill-current"
						width="12"
						height="12"
						viewBox="0 0 24 24"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							fillRule="evenodd"
							clipRule="evenodd"
							d="M11.7042 13.7071L18.9971 6.41421V11H20.9971V3H12.9971V5H17.5829L10.29 12.2929L11.7042 13.7071ZM19 19V14H17V19H5V7H10V5H5C3.89543 5 3 5.89543 3 7V19C3 20.1046 3.89543 21 5 21H17C18.1046 21 19 20.1046 19 19Z"
						/>
					</svg>
				</a>
			</h4>
		</div>
	)
}

export default Footer

'''
'''--- src/components/ImgCrop.js ---
import React, { useState, useEffect, useRef } from 'react'

let cropper = null
let height = 0

const dataURItoBlob = (dataURI) => {
	var byteString = atob(dataURI.split(',')[1])
	var ab = new ArrayBuffer(byteString.length)
	var ia = new Uint8Array(ab)
	for (var i = 0; i < byteString.length; i++) {
		ia[i] = byteString.charCodeAt(i)
	}
	return new Blob([ab], { type: 'image/png' })
}

const readFileAsUrl = (file) => {
	const temporaryFileReader = new FileReader()

	return new Promise((resolve, reject) => {
		temporaryFileReader.onload = () => {
			resolve(temporaryFileReader.result)
		}
		temporaryFileReader.readAsDataURL(file)
	})
}

const ImgCrop = ({
	input,
	type = 'square',
	size = {
		width: 1080,
		height: 1080,
	},
	left,
	right,
}) => {
	const offsetY = 16
	const containerRef = useRef(null)
	const [imgUrl, setImgUrl] = useState('')
	const [firstLoad, setFirstLoad] = useState(true)
	const [showConfirm, setShowConfirm] = useState(false)

	useEffect(() => {
		const readImg = async () => {
			const imgUrl = await readFileAsUrl(input)
			setImgUrl(imgUrl)
		}
		readImg()
	}, [])

	useEffect(() => {
		if (containerRef) {
			height = containerRef.current.offsetWidth - offsetY
		}
	}, [containerRef])

	useEffect(() => {
		if (typeof window !== 'undefined' && imgUrl.length > 0) {
			const Croppie = require('croppie')
			const vWidth = height * 0.56
			const vHeight = height
			cropper = new Croppie(document.getElementById('new-img'), {
				boundary: { width: `100%`, height: vHeight },
				viewport: { width: vWidth, height: vHeight, type: type },
			})
			setFirstLoad(false)
		}
	}, [imgUrl])

	useEffect(() => {
		const onKeydown = (e) => {
			if (e.key === 'Escape') {
				_left()
			}
		}
		document.addEventListener('keydown', onKeydown)

		return () => {
			document.removeEventListener('keydown', onKeydown)
		}
	}, [])

	const _right = async (e) => {
		e.preventDefault()

		const newFile = await cropper.result({
			type: 'blob',
			size: size,
		})
		newFile.lastModifiedDate = new Date()
		newFile.name = `${Math.random().toString(36).substr(2, 9)}.png`
		const newImg = await readFileAsUrl(newFile)

		right({
			type: 'img',
			body: newImg,
			payload: {
				imgFile: newFile,
				imgUrl: newImg,
			},
		})
	}

	const _left = () => {
		left()
	}

	const _bgClick = (e) => {
		if (e.target.id === 'new-modal-bg') {
			_left()
		}
	}

	return (
		<div
			id="new-modal-bg"
			onClick={(e) => _bgClick(e)}
			className={`${!firstLoad ? `visible` : `invisible`}
      fixed inset-0 z-50 flex items-center
      `}
			style={{
				backgroundColor: `rgba(0,0,0,0.86)`,
			}}
		>
			{/* <Confirm
				show={showConfirm}
				onClose={(_) => setShowConfirm(false)}
				onComplete={(_) => {
					setShowConfirm(false)
					left()
				}}
				mainText="Discard current image?"
				leftText="Cancel"
				rightText="Discard"
			/> */}
			<div className="max-w-sm m-auto p-4 w-full">
				<div className="bg-tertiary-color w-full rounded-md overflow-hidden">
					<div className="flex justify-between items-center w-full h-12 bg-dark-12 px-2">
						<div className="w-8 flex items-center">
							<button onClick={(_) => _left()}>
								<svg
									width="24"
									height="24"
									viewBox="0 0 32 32"
									fill="none"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M16 30C23.732 30 30 23.732 30 16C30 8.26801 23.732 2 16 2C8.26801 2 2 8.26801 2 16C2 23.732 8.26801 30 16 30ZM16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z"
										fill="black"
									/>
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M15.9999 17.6979L10.8484 22.8494L9.15137 21.1523L14.3028 16.0009L9.15137 10.8494L10.8484 9.15234L15.9999 14.3038L21.1514 9.15234L22.8484 10.8494L17.697 16.0009L22.8484 21.1523L21.1514 22.8494L15.9999 17.6979Z"
										fill="black"
									/>
								</svg>
							</button>
						</div>
						<div className="flex-auto overflow-hidden px-2 font-bold">
							Edit Image
						</div>
						<div className="w-8 flex items-center justify-end">
							<button>
								<svg
									onClick={(e) => _right(e)}
									width="24"
									height="24"
									viewBox="0 0 32 32"
									fill="none"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M16 30C23.732 30 30 23.732 30 16C30 8.26801 23.732 2 16 2C8.26801 2 2 8.26801 2 16C2 23.732 8.26801 30 16 30ZM16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z"
										fill="#E13128"
									/>
									<circle cx="16" cy="16" r="16" fill="#E13128" />
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M13.7061 19.2929L22.999 10L24.4132 11.4142L13.7061 22.1213L7.99902 16.4142L9.41324 15L13.7061 19.2929Z"
										fill="white"
									/>
								</svg>
							</button>
						</div>
					</div>
					<div
						ref={containerRef}
						className="relative w-full"
						style={{
							minHeight: `${height}px`,
						}}
					>
						<div>
							<img id="new-img" src={imgUrl} />
						</div>
					</div>
				</div>
			</div>
		</div>
	)
}

export default ImgCrop

'''
'''--- src/components/Loading.js ---
import React from 'react'

const Loading = ({ size, color }) => {
	const styles = _styles(size, color)
	return (
		<div style={styles.loading}>
			<div style={styles['loading-child']}>
				<div style={styles['loading-child div']}></div>
			</div>
		</div>
	)
}

const _styles = (size = 20, color = '#ffffff') => ({
	'loading-child div': {
		position: 'absolute',
		width: `${size / 2}px`,
		height: `${size / 2}px`,
		border: `${size / 10}px solid ${color}`,
		borderTopColor: 'transparent',
		borderRadius: '50%',
		animation: 'loading-spinner 1s linear infinite',
		top: `${size / 2}px`,
		left: `${size / 2}px`,
		boxSizing: 'content-box',
	},
	loading: {
		width: `${size}px`,
		height: `${size}px`,
		display: 'inline-block',
		overflow: 'hidden',
		background: 'none',
	},
	'loading-child': {
		width: '100%',
		height: '100%',
		position: 'relative',
		transform: 'translateZ(0) scale(1)',
		backfaceVisibility: 'hidden',
		transformOrigin: '0 0',
	},
})

export default Loading

'''
'''--- src/components/Nav.js ---
import React, { useEffect, useRef, useState } from 'react'
import { Link, useLocation } from 'react-router-dom'
import {
	contractGetReward,
	getAccountId,
	getBalance,
	isLoggedIn,
	logout,
} from '../near'
import { useStore } from '../store'
import { prettyBalance } from '../utils'

const Nav = () => {
	const accModalRef = useRef()
	const location = useLocation()

	const {
		setUserId,
		userBalance,
		setBalance,
		userReward,
		setReward,
	} = useStore((state) => state)
	const [showAccountModal, setShowAccountModal] = useState(false)

	const _getBalance = async () => {
		const balance = await getBalance()
		setBalance(balance.available)
	}

	const _getReward = async () => {
		const reward = await contractGetReward({
			userId: getAccountId(),
		})
		setReward(reward)
	}

	const _logout = () => {
		logout()
		setUserId(null)
	}

	const toggleAccountModal = () => {
		setShowAccountModal(!showAccountModal)
	}

	useEffect(() => {
		const onClickEv = (e) => {
			if (!accModalRef.current.contains(e.target)) {
				setShowAccountModal(false)
			}
		}

		if (showAccountModal) {
			document.body.addEventListener('click', onClickEv)
		}

		return () => {
			document.body.removeEventListener('click', onClickEv)
		}
	}, [showAccountModal])

	useEffect(() => {
		_getBalance()
		_getReward()
	}, [])

	return (
		<nav className="flex items-center justify-between py-6">
			<div className="flex items-center">
				<Link to="/">
					<h3 className="font-title">PIECE</h3>
				</Link>
				<Link to="/explore">
					<h4 className="font-bold text-lg ml-8">
						<p className={`${location.pathname === '/explore' && 'underline'}`}>
							Explore
						</p>
					</h4>
				</Link>
			</div>
			<div className="flex items-center">
				{isLoggedIn() ? (
					<>
						<div className="hidden md:block">
							<Link to="/me/balance">
								<h5 className="text-sm">Balance</h5>
								<h4 className="font-title">
									{prettyBalance(userBalance, 24, 4)} â“ƒ
								</h4>
							</Link>
						</div>
						<div className="hidden md:block ml-8">
							<Link to="/me/reward">
								<h5 className="text-sm">Reward</h5>
								<h4 className="font-title">
									{prettyBalance(userReward, 24, 4)} â“ƒ
								</h4>
							</Link>
						</div>
						<div ref={accModalRef} className="ml-8 relative">
							<div className="flex items-center">
								<h4
									className="cursor-pointer font-bold"
									onClick={toggleAccountModal}
								>
									{getAccountId()}
								</h4>
								<div className="ml-1">
									<svg
										width="12"
										height="19"
										viewBox="0 0 21 19"
										fill="none"
										xmlns="http://www.w3.org/2000/svg"
									>
										<path
											d="M20.7846 0.392303L10.3923 18.3923L0 0.392304L20.7846 0.392303Z"
											fill="black"
										/>
									</svg>
								</div>
							</div>
							{showAccountModal && (
								<div className="absolute right-0 w-32 pt-4 z-10">
									<div className="px-2 pb-2 border-2 border-gray-800 bg-tertiary-color">
										<div className="md:hidden">
											<div className="pt-2">
												<Link onClick={toggleAccountModal} to="/me/balance">
													<h5 className="text-sm">Balance</h5>
													<h4 className="font-title">
														{prettyBalance(userBalance, 24, 4)} â“ƒ
													</h4>
												</Link>
											</div>
											<div className="pt-2">
												<Link onClick={toggleAccountModal} to="/me/reward">
													<h5 className="text-sm">Reward</h5>
													<h4 className="font-title">
														{prettyBalance(userReward, 24, 4)} â“ƒ
													</h4>
												</Link>
											</div>
										</div>
										<Link onClick={toggleAccountModal} to="/me/edit">
											<p className="pt-2 text-gray-800 hover:text-black">
												Edit Profile
											</p>
										</Link>
										<p
											onClick={_logout}
											className="cursor-pointer pt-2 text-gray-800 hover:text-black"
										>
											Logout
										</p>
									</div>
								</div>
							)}
						</div>
					</>
				) : (
					<Link to="/login">
						<h4 className="text-lg">Login</h4>
					</Link>
				)}
			</div>
		</nav>
	)
}

export default Nav

'''
'''--- src/components/ProfileCard.js ---
import React from 'react'
import { Link } from 'react-router-dom'
import { getImgUrl } from '../utils'

const ProfileCard = ({ user }) => {
	return (
		<Link to={{
      pathname:  `/${user.userId}`,
      query: {
        user: user
      }
    }}>
			<div className="w-full">
				<div
					className="relative w-full"
					style={{
						paddingBottom: '177%',
					}}
				>
					<div className="absolute h-full w-full">
						<img className="w-full h-full object-cover bg-black" src={getImgUrl(user.avatar)} />
					</div>
					<div
						className="absolute h-full w-full"
						style={{
							background: `linear-gradient(180deg, rgba(0, 0, 0, 0) 60%, rgba(0, 0, 0, 0.80) 100%)`,
						}}
					>
						<div className="flex h-full items-end">
							<div className="overflow-hidden p-2">
								<h4 className="font-title text-primary-color">{user.userId}</h4>
								<p className="truncate text-white text-sm">{user.bio}</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</Link>
	)
}

export default ProfileCard

'''
'''--- src/config.js ---
const CONTRACT_NAME = 'dev-v1.piece.testnet'

function getConfig(env) {
	return {
		networkId: 'testnet',
		nodeUrl: 'https://rpc.testnet.near.org',
		contractName: CONTRACT_NAME,
		walletUrl: 'https://wallet.testnet.near.org',
		helperUrl: 'https://helper.testnet.near.org',
		explorerUrl: 'https://explorer.testnet.near.org',
	}
}

module.exports = getConfig

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="./assets/piece-logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="./assets/piece-logo.png" />
    <title>Piece - Incentivized Protocol for Creators and Supporters</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="./index.js"></script>
  </body>
</html>

'''
'''--- src/index.js ---
import React from 'react'
import ReactDOM from 'react-dom'
import App from './App'
import { initContract } from './near'

window.nearInitPromise = initContract()
	.then(() => {
		ReactDOM.render(<App />, document.querySelector('#root'))
	})
	.catch(console.error)

'''
'''--- src/near.js ---
import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'
import { parseNearAmount } from 'near-api-js/lib/utils/format'
import getConfig from './config'

const nearConfig = getConfig(process.env.NODE_ENV || 'development')

// Initialize contract & set global variables
export async function initContract() {
	// Initialize connection to the NEAR testnet
	const near = await connect(
		Object.assign(
			{ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },
			nearConfig
		)
	)

	// Initializing Wallet based Account. It can work with NEAR testnet wallet that
	// is hosted at https://wallet.testnet.near.org
	window.walletConnection = new WalletConnection(near)

	// Getting the Account ID. If still unauthorized, it's just empty string
	window.accountId = window.walletConnection.getAccountId()

	window.account = window.walletConnection.account()

	// Initializing our contract APIs by contract name and configuration
	window.contract = await new Contract(
		window.account,
		nearConfig.contractName,
		{
			// View methods are read only. They don't modify the state, but usually return some value.
			viewMethods: [
				'getReward',
				'getProfile',
				'getProfileList',
				'getRewardActivityList',
				'getBalanceActivityList',
			],
			// Change methods can modify the state. But you don't receive the returned value when called.
			changeMethods: ['piece', 'claimReward', 'updateProfile'],
		}
	)
}

export function logout() {
	window.walletConnection.signOut()
	// reload page
	window.location.replace(window.location.origin + window.location.pathname)
}

export function login() {
	// Allow the current app to make calls to the specified contract on the
	// user's behalf.
	// This works by creating a new access key for the user's account and storing
	// the private key in localStorage.
	window.walletConnection.requestSignIn(
		nearConfig.contractName,
		'Piece Protocol'
	)
}

export function isLoggedIn() {
	return window.walletConnection.isSignedIn()
}

export function getBalance() {
	return window.account.getAccountBalance()
}

export function getAccountId() {
	return window.accountId
}

export function contractGetReward(params) {
	return window.contract.getReward(params)
}

export function contractClaimReward() {
	return window.contract.claimReward()
}

export function contractUpdateProfile(params) {
	return window.contract.updateProfile(params)
}

export function contractGetProfile(params) {
	return window.contract.getProfile(params)
}

export function contractGetProfileList(params) {
	return window.contract.getProfileList(params)
}

export function contractGetRewardActivityList(params) {
	return window.contract.getRewardActivityList(params)
}

export function contractGetBalanceActivityList(params) {
	return window.contract.getBalanceActivityList(params)
}

export function contractPiece(params) {
	return window.contract.piece(params, '100000000000000', parseNearAmount('5'))
}

'''
'''--- src/pages/Explore.js ---
import React, { useEffect, useState } from 'react'
import InfiniteScroll from 'react-infinite-scroller'
import Loading from '../components/Loading'
import ProfileCard from '../components/ProfileCard'
import { contractGetProfileList } from '../near'

const ExplorePage = () => {
	const [userList, setUserList] = useState([])
	const [page, setPage] = useState(0)
	const [hasMore, setHasMore] = useState(true)
	const [isLoading, setIsLoading] = useState(false)

	const _getProfileList = async () => {
		if (isLoading) {
			return
		}
		setIsLoading(true)
		const profileList = await contractGetProfileList({
			page: page,
		})
		const newUserList = [...userList].concat(profileList)
		setUserList(newUserList)
		setPage(page + 1)
		if (profileList.length === 0 || profileList.length < 8) {
			setHasMore(false)
		}
		setIsLoading(false)
	}

	useEffect(() => {
		if (userList.length === 0) _getProfileList()
	}, [])

	return (
		<div className="max-w-4xl m-auto px-4">
			<InfiniteScroll
				loadMore={_getProfileList}
				hasMore={hasMore}
				loader={
					<div className="flex items-center justify-center">
						<Loading size={40} color={'#4a5568'} />
					</div>
				}
			>
				<div className="flex flex-wrap -mx-4">
					{userList.map((user) => {
						return (
							<div className="w-full md:w-1/4 p-4">
								<ProfileCard user={user} />
							</div>
						)
					})}
				</div>
			</InfiniteScroll>
		</div>
	)
}

export default ExplorePage

'''
'''--- src/pages/Home.js ---
import React from 'react'
import { Link } from 'react-router-dom'

import assetHowItWorks from '../assets/how-it-works.svg'

const HomePage = () => {
	return (
		<div className="max-w-4xl m-auto px-4">
			<div className="py-24 relative">
				<div className="max-w-xl ">
					<h1 className="font-title text-2xl">
						Piece rewards creators and their supporters.
					</h1>
					<h3 className="mt-2 text-xl text-gray-800">
						Share small portion of your future earning with your supporters, not
						with the platforms.
					</h3>
					<Link to="/explore">
						<button className="mt-8 shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none">
							Explore Creator
						</button>
					</Link>
				</div>
				<div className="absolute bottom-0 w-full m-auto">
					<div
						style={{
							animation: 'up-down 2s linear infinite',
						}}
						className="flex flex-col items-center"
					>
						<p className="text-white-1">Scroll</p>
						<svg
							width="16"
							height="16"
							viewBox="0 0 16 16"
							fill="none"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								className="fill-current"
								fillRule="evenodd"
								clipRule="evenodd"
								d="M12.7072 3.70712L11.293 2.29291L8.00008 5.5858L4.70718 2.29291L3.29297 3.70712L8.00008 8.41423L12.7072 3.70712ZM11.293 7.29291L8.00008 10.5858L4.70718 7.29291L3.29297 8.70712L8.00008 13.4142L12.7072 8.70712L11.293 7.29291Z"
							/>
						</svg>
					</div>
				</div>
			</div>
			<div className="flex flex-wrap -mx-4 py-16">
				<div className="w-full md:w-1/2 py-8 px-4">
					<h1 className="font-title text-2xl text-primary-color">
						For Creator
					</h1>
					<h3 className="mt-2 text-lg text-gray-800">
						Get fund of your creative work. Piece is a way for your supporters
						to give thanks and appreciate your works.
					</h3>
				</div>
				<div className="w-full md:w-1/2 py-8 px-4">
					<h1 className="font-title text-2xl text-secondary-color">
						For Supporter
					</h1>
					<h3 className="mt-2 text-lg text-gray-800">
						Support your favorite creators and receive a small portion of their
						future earning. The earlier you support them, the more you can earn.
					</h3>
				</div>
			</div>
			<div className="pt-16 max-w-lg m-auto">
				<h3 className="mt-2 text-2xl font-title text-center">How it works</h3>
				<div className="mt-4 max-w-sm m-auto ">
					<img className="w-full" src={assetHowItWorks} />
				</div>
				<p className="mt-4 text-lg text-gray-800">
					When someone support a creator, a 10% cut and will be distributed to
					earlier supporters, not with the platforms. At a time, the 10% cut
					will be distributed evenly to 4 supporters in{' '}
					<b className="text-primary-color">rolling queue mechanism</b>. After
					that, that 4 supporters will be moved to the end of queue while the
					new supporter placed at the start of the queue.
				</p>
			</div>
		</div>
	)
}

export default HomePage

'''
'''--- src/pages/Login.js ---
import React, { useEffect } from 'react'
import { useHistory } from 'react-router-dom'
import { isLoggedIn, login } from '../near'

const LoginPage = () => {
	const history = useHistory()

	useEffect(() => {
		if (isLoggedIn()) {
			history.replace('/explore')
		}
	}, [])

	return (
		<div className="max-w-4xl m-auto px-4">
			<div className="max-w-lg pt-24 text-center m-auto">
				<h1 className="font-title text-3xl">PIECE</h1>
				<h3 className="mt-2 text-xl text-gray-800">
					An incentivized protocol both for creators and supporters.
				</h3>
				<button
					onClick={login}
					className="mt-8 shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none"
				>
					Login with NEAR
				</button>
			</div>
		</div>
	)
}

export default LoginPage

'''
'''--- src/pages/Profile.js ---
import React, { useEffect, useState } from 'react'
import { useLocation, useParams } from 'react-router-dom'
import { contractGetProfile, contractPiece } from '../near'
import { getImgUrl } from '../utils'

const ProfilePage = () => {
	const params = useParams()
	const query = useLocation().query

	const [user, setUser] = useState(null)

	console.log(user)

	const _getProfile = async (userId) => {
		const profileData = await contractGetProfile({
			userId: userId,
		})
		setUser(profileData)
	}

	const _piece = async () => {
		const receiverId = params.userId
		try {
			await contractPiece({
				receiverId: receiverId
			})
		} catch (err) {
			console.log(err)
			if(err.message.includes('Cannot find matching key for transaction sent')) {
				alert('Please login to support this creator')
			}
		}
	}

	useEffect(() => {
		if (!user) {
			let userData
			if (query && query.user) {
				userData = query.user
				setUser(userData)
			} else {
				_getProfile(params.userId)
			}
		}
	}, [user, params])

	if (!user) {
		return null
	}

	return (
		<div className="max-w-4xl m-auto px-4">
			<div className="flex flex-wrap -mx-4 py-8">
				<div className="w-full md:w-1/3 px-4 mb-4">
					<div
						className="relative w-full"
						style={{
							paddingBottom: '177%',
						}}
					>
						<div className="absolute h-full w-full">
							<img className="w-full h-full object-cover" src={getImgUrl(user.avatar)} />
						</div>
					</div>
				</div>
				<div className="w-full md:w-2/3 px-4">
					<h1 className="font-title text-3xl">{user.userId}</h1>
					<p className="mt-4 whitespace-pre-line">{user.bio}</p>
					<div className="hidden md:block mt-8">
						{

						}
						<button onClick={_piece} className="shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none">
							Support 5 â“ƒ
						</button>
					</div>
				</div>
				<div className="w-full md:hidden">
					<div className="w-full h-16"></div>
					<div className="fixed bottom-0 left-0 right-0">
						<div className="p-4">
							<button onClick={_piece} className="w-full shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none">
								Support 5 â“ƒ
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	)
}

export default ProfilePage

'''
'''--- src/pages/ProfileBalance.js ---
import React, { useEffect, useState } from 'react'
import InfiniteScroll from 'react-infinite-scroller'
import Activity from '../components/Activity'
import Loading from '../components/Loading'
import { contractGetBalanceActivityList } from '../near'
import { useStore } from '../store'
import { prettyBalance } from '../utils'

const ProfileBalancePage = () => {
	const { userId, userBalance } = useStore((state) => state)

	const [activityList, setActivityList] = useState([])
	const [page, setPage] = useState(0)
  const [hasMore, setHasMore] = useState(true)
  const [isLoading, setIsLoading] = useState(false)

	const _getBalanceActivityList = async () => {
    if (isLoading) {
      return
    }
    setIsLoading(true)
		const balanceActivityList = await contractGetBalanceActivityList({
			userId: userId,
			page: page,
		})
		const newBalanceActivityList = [...activityList].concat(balanceActivityList)
		setActivityList(newBalanceActivityList)
		setPage(page + 1)
		if (balanceActivityList.length < 8) {
			setHasMore(false)
    }
    setIsLoading(false)
	}

	return (
		<div className="max-w-4xl m-auto px-4">
			<div className="flex items-center justify-center">
				<div className="text-center">
					<h4>My Balance</h4>
					<h2 className="font-title text-2xl">
						{prettyBalance(userBalance, 24, 8)} â“ƒ
					</h2>
				</div>
			</div>
			<div className="pt-16 max-w-sm m-auto">
				<h3 className="font-title text-2xl">Activity</h3>
				{userId && (
					<InfiniteScroll
						initialLoad={true}
						loadMore={_getBalanceActivityList}
						hasMore={hasMore}
						loader={
							<div className="flex items-center justify-center">
								<Loading size={40} color={'#4a5568'} />
							</div>
						}
					>
						{activityList.map((act, idx) => {
							return (
								<div key={idx} className="mt-4">
									<Activity data={act} />
								</div>
							)
						})}
					</InfiniteScroll>
				)}
			</div>
		</div>
	)
}

export default ProfileBalancePage

'''
'''--- src/pages/ProfileEdit.js ---
import React, { useEffect, useState } from 'react'
import { useHistory } from 'react-router-dom'
import ImgCrop from '../components/ImgCrop'
import Loading from '../components/Loading'
import { contractGetProfile, contractUpdateProfile, isLoggedIn } from '../near'
import { upload } from '../skynet'
import { useStore } from '../store'
import { getImgUrl } from '../utils'

const ProfileEditPage = ({}) => {
	const { userId } = useStore((state) => state)
	const history = useHistory()
	const [bio, setBio] = useState('')
	const [showImgCrop, setShowImgCrop] = useState(false)
	const [newAvatarFile, setNewAvatarFile] = useState(null)
	const [avatar, setAvatar] = useState('')
	const [isSubmitting, setIsSubmitting] = useState(false)

	const _setImg = async (e) => {
		setNewAvatarFile(e.target.files[0])
		setShowImgCrop(true)
	}

	const _submit = async () => {
		setIsSubmitting(true)
		const newData = {
			userId: userId,
			avatar: avatar,
			bio: bio,
		}
		try {
			if (newAvatarFile && newAvatarFile.imgFile) {
				const skydata = await upload(newAvatarFile.imgFile)
				newData.avatar = skydata
			}
			const response = await contractUpdateProfile(newData)
			console.log(response)
		} catch (err) {
			console.log(err)
		}
		setIsSubmitting(false)
	}

	const _getProfile = async (userId) => {
		const profileData = await contractGetProfile({
			userId: userId,
		})
		setAvatar(profileData.avatar)
		setBio(profileData.bio)
	}

	useEffect(() => {
		if (!isLoggedIn()) {
			history.replace('/explore')
		}
		if (userId) {
			_getProfile(userId)
		}
	}, [userId])

	return (
		<div className="max-w-4xl m-auto px-4">
			{showImgCrop && (
				<ImgCrop
					size={{
						width: 900,
						height: 1600,
					}}
					input={newAvatarFile}
					left={(_) => setShowImgCrop(null)}
					right={(res) => {
						setAvatar(res.body)
						setNewAvatarFile(res.payload)
						setShowImgCrop(false)
					}}
				/>
			)}
			<div className="flex flex-wrap -mx-4 py-8">
				<div className="w-full md:w-1/3 px-4 mb-4">
					<div
						className="relative w-full"
						style={{
							paddingBottom: '177%',
						}}
					>
						<div className="absolute h-full w-full bg-black">
							{
								avatar && (
									<img className="w-full h-full object-cover" src={getImgUrl(avatar)} />
								)
							}
						</div>
						<div
							className="absolute w-full h-full flex items-center justify-center opacity-50 hover:opacity-100"
							style={{
								background: `linear-gradient(180deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 100%)`,
							}}
						>
							<input
								type="file"
								accept="image/*"
								onClick={(e) => {
									e.target.value = null
								}}
								onChange={(e) => _setImg(e)}
								className="w-full h-full absolute opacity-0 cursor-pointer"
							/>
							<svg
								width="32"
								height="32"
								viewBox="0 0 24 24"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fillRule="evenodd"
									clipRule="evenodd"
									d="M6.93702 5.84538C7.00787 5.74688 7.08656 5.62631 7.18689 5.46372C7.22355 5.40433 7.32349 5.23944 7.39792 5.11665L7.39798 5.11654L7.4818 4.97841C8.31079 3.62239 8.91339 3 10 3H14C15.0866 3 15.6892 3.62239 16.5182 4.97841L16.6021 5.11664C16.6765 5.23943 16.7765 5.40433 16.8131 5.46372C16.9134 5.62631 16.9921 5.74688 17.063 5.84538C17.1097 5.91033 17.1505 5.96194 17.1838 6H20C21.6569 6 23 7.34315 23 9V18C23 19.6569 21.6569 21 20 21H4C2.34315 21 1 19.6569 1 18V9C1 7.34315 2.34315 6 4 6H6.8162C6.84949 5.96194 6.8903 5.91033 6.93702 5.84538ZM4 8C3.44772 8 3 8.44772 3 9V18C3 18.5523 3.44772 19 4 19H20C20.5523 19 21 18.5523 21 18V9C21 8.44772 20.5523 8 20 8H17C16.3357 8 15.8876 7.63641 15.4394 7.01326C15.3363 6.86988 15.2341 6.71332 15.1111 6.51409C15.069 6.44583 14.9596 6.26536 14.8846 6.14152L14.8118 6.02159C14.3595 5.28172 14.0867 5 14 5H10C9.91327 5 9.6405 5.28172 9.1882 6.02159L9.11543 6.14152L9.11502 6.14219C9.03998 6.26601 8.93092 6.44596 8.88887 6.51409C8.76592 6.71332 8.66375 6.86988 8.56061 7.01326C8.11237 7.63641 7.66434 8 7 8H4ZM20 10C20 10.5523 19.5523 11 19 11C18.4477 11 18 10.5523 18 10C18 9.44772 18.4477 9 19 9C19.5523 9 20 9.44772 20 10ZM7 13C7 15.7614 9.23858 18 12 18C14.7614 18 17 15.7614 17 13C17 10.2386 14.7614 8 12 8C9.23858 8 7 10.2386 7 13ZM15 13C15 14.6569 13.6569 16 12 16C10.3431 16 9 14.6569 9 13C9 11.3431 10.3431 10 12 10C13.6569 10 15 11.3431 15 13Z"
									fill="white"
								/>
							</svg>
						</div>
					</div>
				</div>
				<div className="w-full md:w-2/3 px-4">
					<div>
						<label className="font-bold">Bio</label>
						<textarea
							type="text"
							value={bio}
							onChange={(e) => setBio(e.target.value)}
							className="mt-2 w-full h-32 p-2 bg-transparent border-2 border-gray-800 focus:border-black"
							placeholder="Write about you"
						/>
					</div>
					<div className="mt-8">
						<button
							onClick={_submit}
							disabled={isSubmitting}
							className="shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none"
						>
							{!isSubmitting ? (
								<p>Save</p>
							) : (
								<div className="flex items-center">
									<p className="mr-2">Saving</p>
									<Loading />
								</div>
							)}
						</button>
					</div>
				</div>
			</div>
		</div>
	)
}

export default ProfileEditPage

'''
'''--- src/pages/ProfileReward.js ---
import JSBI from 'jsbi'
import React, { useEffect, useState } from 'react'
import InfiniteScroll from 'react-infinite-scroller'
import Activity from '../components/Activity'
import Loading from '../components/Loading'
import { contractClaimReward, contractGetRewardActivityList } from '../near'
import { useStore } from '../store'
import { prettyBalance } from '../utils'

const ProfileRewardPage = () => {
	const { userId, userBalance, setBalance, userReward, setReward } = useStore(
		(state) => state
	)

	const [activityList, setActivityList] = useState([])
	const [isSubmitting, setIsSubmitting] = useState(false)
	const [isLoading, setIsLoading] = useState(false)
	const [page, setPage] = useState(0)
	const [hasMore, setHasMore] = useState(true)

	const _getRewardActivityList = async () => {
		if (isLoading) {
			return
		}
		setIsLoading(true)
		const rewardActivityList = await contractGetRewardActivityList({
			userId: userId,
			page: 0,
		})
		const newRewardActivityList = [...activityList].concat(rewardActivityList)
		setActivityList(newRewardActivityList)
		setPage(page + 1)
		if (rewardActivityList.length < 8) {
			setHasMore(false)
		}
		setIsLoading(false)
	}

	useEffect(() => {
		if (userId) {
			_getRewardActivityList()
		}
	}, [userId])

	const _claim = async () => {
		setIsSubmitting(true)
		try {
			await contractClaimReward()
			const newBalance = JSBI.add(
				JSBI.BigInt(userBalance),
				JSBI.BigInt(userReward)
			)
			setBalance(newBalance.toString())
			setReward('0')
		} catch (err) {
			console.log(err)
		}
		setIsSubmitting(false)
	}

	return (
		<div className="max-w-4xl m-auto px-4">
			<div className="flex items-center justify-center">
				<div className="text-center">
					<h4>My Reward</h4>
					<h2 className="font-title text-2xl">
						{prettyBalance(userReward, 24, 8)} â“ƒ
					</h2>
					<button
						disabled={isSubmitting || userReward == 0}
						onClick={_claim}
						className="mt-4 shadow-bold font-title px-6 py-2 bg-primary-color text-white focus:outline-none"
					>
						{!isSubmitting ? (
							<p>Claim Reward</p>
						) : (
							<div className="flex items-center">
								<p className="mr-2">Claiming</p>
								<Loading />
							</div>
						)}
					</button>
				</div>
			</div>
			<div className="pt-16 max-w-sm m-auto">
				<h3 className="font-title text-2xl">Activity</h3>
				{userId && (
					<InfiniteScroll
						loadMore={_getRewardActivityList}
						hasMore={hasMore}
						loader={
							<div className="flex items-center justify-center">
								<Loading size={40} color={'#4a5568'} />
							</div>
						}
					>
						{activityList.map((act, idx) => {
							return (
								<div key={idx} className="mt-4">
									<Activity data={act} />
								</div>
							)
						})}
					</InfiniteScroll>
				)}
			</div>
		</div>
	)
}

export default ProfileRewardPage

'''
'''--- src/skynet.js ---
import { SkynetClient } from 'skynet-js'

const client = new SkynetClient('https://siasky.net/')

export async function upload(file) {
	try {
		const res = await client.uploadFile(file)
		const link = res.split(':')[1]
		const protocol = 'sia://'
		return protocol + link
	} catch (error) {
		console.log(error)
	}
}

'''
'''--- src/store.js ---
import create from 'zustand'

export const useStore = create((set) => ({
	userId: null,
	userBalance: 0,
	userReward: 0,
	setUserId: (userId) => set((state) => ({ userId: userId })),
  setBalance: (balance) => set((state) => ({ userBalance: balance })),
  setReward: (reward) => set((state) => ({ userReward: reward })),
}))

'''
'''--- src/styles/index.css ---
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&family=Limelight&display=swap');

@tailwind base;

@tailwind components;

@tailwind utilities;

html {
	@apply font-body;
}

body {
	@apply bg-tertiary-color;
}

textarea {
	@apply resize-none;
}

textarea:focus {
	@apply outline-none;
}

button:disabled {
	@apply opacity-75 cursor-not-allowed;
}

@keyframes loading-spinner {
  0% { transform: translate(-50%,-50%) rotate(0deg); }
  100% { transform: translate(-50%,-50%) rotate(360deg); }
}

@keyframes up-down {
  0%, 100% {
    transform: translate3d(0,0,0);
  }
  50% {
    transform: translate3d(0,4px,0);
  }
}
'''
'''--- src/styles/tailwind.css ---
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;600;700&family=Limelight&display=swap');

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e2e8f0; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::placeholder,
textarea::placeholder {
  color: #a0aec0;
}

button {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

.bg-transparent{
  background-color: transparent;
}

.bg-black{
  --bg-opacity: 1;
  background-color: #000;
  background-color: rgba(0, 0, 0, var(--bg-opacity));
}

.bg-primary-color{
  --bg-opacity: 1;
  background-color: #F52D3A;
  background-color: rgba(245, 45, 58, var(--bg-opacity));
}

.bg-tertiary-color{
  --bg-opacity: 1;
  background-color: #F7F4ED;
  background-color: rgba(247, 244, 237, var(--bg-opacity));
}

.border-gray-800{
  --border-opacity: 1;
  border-color: #2d3748;
  border-color: rgba(45, 55, 72, var(--border-opacity));
}

.focus\:border-black:focus{
  --border-opacity: 1;
  border-color: #000;
  border-color: rgba(0, 0, 0, var(--border-opacity));
}

.rounded-md{
  border-radius: 0.375rem;
}

.border-2{
  border-width: 2px;
}

.border{
  border-width: 1px;
}

.cursor-pointer{
  cursor: pointer;
}

.inline-block{
  display: inline-block;
}

.flex{
  display: flex;
}

.table{
  display: table;
}

.hidden{
  display: none;
}

.flex-col{
  flex-direction: column;
}

.flex-wrap{
  flex-wrap: wrap;
}

.items-end{
  align-items: flex-end;
}

.items-center{
  align-items: center;
}

.justify-end{
  justify-content: flex-end;
}

.justify-center{
  justify-content: center;
}

.justify-between{
  justify-content: space-between;
}

.flex-auto{
  flex: 1 1 auto;
}

.font-title{
  font-family: Limelight, cursive;
}

.font-bold{
  font-weight: 700;
}

.h-12{
  height: 3rem;
}

.h-16{
  height: 4rem;
}

.h-32{
  height: 8rem;
}

.h-full{
  height: 100%;
}

.text-sm{
  font-size: 0.875rem;
}

.text-lg{
  font-size: 1.125rem;
}

.text-xl{
  font-size: 1.25rem;
}

.text-2xl{
  font-size: 1.5rem;
}

.text-3xl{
  font-size: 1.875rem;
}

.m-auto{
  margin: auto;
}

.-mx-4{
  margin-left: -1rem;
  margin-right: -1rem;
}

.ml-1{
  margin-left: 0.25rem;
}

.mt-2{
  margin-top: 0.5rem;
}

.mr-2{
  margin-right: 0.5rem;
}

.mt-4{
  margin-top: 1rem;
}

.mb-4{
  margin-bottom: 1rem;
}

.mt-8{
  margin-top: 2rem;
}

.ml-8{
  margin-left: 2rem;
}

.max-w-sm{
  max-width: 24rem;
}

.max-w-lg{
  max-width: 32rem;
}

.max-w-xl{
  max-width: 36rem;
}

.max-w-4xl{
  max-width: 56rem;
}

.object-cover{
  object-fit: cover;
}

.opacity-0{
  opacity: 0;
}

.opacity-50{
  opacity: 0.5;
}

.hover\:opacity-100:hover{
  opacity: 1;
}

.focus\:outline-none:focus{
  outline: 0;
}

.overflow-hidden{
  overflow: hidden;
}

.p-2{
  padding: 0.5rem;
}

.p-4{
  padding: 1rem;
}

.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-2{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-6{
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.px-6{
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-8{
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.py-16{
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-24{
  padding-top: 6rem;
  padding-bottom: 6rem;
}

.pt-2{
  padding-top: 0.5rem;
}

.pb-2{
  padding-bottom: 0.5rem;
}

.pt-4{
  padding-top: 1rem;
}

.pt-16{
  padding-top: 4rem;
}

.pt-24{
  padding-top: 6rem;
}

.pt-32{
  padding-top: 8rem;
}

.fixed{
  position: fixed;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.inset-0{
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.right-0{
  right: 0;
}

.bottom-0{
  bottom: 0;
}

.left-0{
  left: 0;
}

.shadow-bold{
  box-shadow: 4px 4px 0px #000000;;
}

.fill-current{
  fill: currentColor;
}

.text-center{
  text-align: center;
}

.text-white{
  --text-opacity: 1;
  color: #fff;
  color: rgba(255, 255, 255, var(--text-opacity));
}

.text-gray-800{
  --text-opacity: 1;
  color: #2d3748;
  color: rgba(45, 55, 72, var(--text-opacity));
}

.text-primary-color{
  --text-opacity: 1;
  color: #F52D3A;
  color: rgba(245, 45, 58, var(--text-opacity));
}

.text-secondary-color{
  --text-opacity: 1;
  color: #FFBC29;
  color: rgba(255, 188, 41, var(--text-opacity));
}

.hover\:text-black:hover{
  --text-opacity: 1;
  color: #000;
  color: rgba(0, 0, 0, var(--text-opacity));
}

.underline{
  text-decoration: underline;
}

.hover\:underline:hover{
  text-decoration: underline;
}

.visible{
  visibility: visible;
}

.invisible{
  visibility: hidden;
}

.whitespace-pre-line{
  white-space: pre-line;
}

.truncate{
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.w-8{
  width: 2rem;
}

.w-32{
  width: 8rem;
}

.w-full{
  width: 100%;
}

.z-10{
  z-index: 10;
}

.z-50{
  z-index: 50;
}

.transform{
  --transform-translate-x: 0;
  --transform-translate-y: 0;
  --transform-rotate: 0;
  --transform-skew-x: 0;
  --transform-skew-y: 0;
  --transform-scale-x: 1;
  --transform-scale-y: 1;
  transform: translateX(var(--transform-translate-x)) translateY(var(--transform-translate-y)) rotate(var(--transform-rotate)) skewX(var(--transform-skew-x)) skewY(var(--transform-skew-y)) scaleX(var(--transform-scale-x)) scaleY(var(--transform-scale-y));
}

@keyframes spin{
  to{
    transform: rotate(360deg);
  }
}

@keyframes ping{
  75%, 100%{
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes pulse{
  50%{
    opacity: .5;
  }
}

@keyframes bounce{
  0%, 100%{
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50%{
    transform: none;
    animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

html {
  font-family: Josefin Sans, sans-serif;
}

body {
  --bg-opacity: 1;
  background-color: #F7F4ED;
  background-color: rgba(247, 244, 237, var(--bg-opacity));
}

textarea {
  resize: none;
}

textarea:focus {
  outline: 0;
}

button:disabled {
  opacity: 0.75;
  cursor: not-allowed;
}

@keyframes loading-spinner {
  0% { transform: translate(-50%,-50%) rotate(0deg);
  }

  100% { transform: translate(-50%,-50%) rotate(360deg);
  }
}

@keyframes up-down {
  0%, 100% {
    transform: translate3d(0,0,0);
  }

  50% {
    transform: translate3d(0,4px,0);
  }
}

@media (min-width: 640px){
}

@media (min-width: 768px){
  .md\:block{
    display: block;
  }

  .md\:hidden{
    display: none;
  }

  .md\:justify-start{
    justify-content: flex-start;
  }

  .md\:justify-end{
    justify-content: flex-end;
  }

  .md\:w-1\/2{
    width: 50%;
  }

  .md\:w-1\/3{
    width: 33.333333%;
  }

  .md\:w-2\/3{
    width: 66.666667%;
  }

  .md\:w-1\/4{
    width: 25%;
  }
}

@media (min-width: 1024px){
}

@media (min-width: 1280px){
}
'''
'''--- src/utils.js ---
import TimeAgo from 'javascript-time-ago'
import en from 'javascript-time-ago/locale/en'

TimeAgo.addLocale(en)

const timeAgo = new TimeAgo('en-US')

export const prettyBalance = (balance, decimals = 18, len = 8) => {
	const diff = balance.toString().length - decimals
	const fixedPoint = len - Math.max(diff, 0)
	const finalBalance = (balance / 10 ** decimals)
		.toFixed(fixedPoint)
		.toLocaleString()
	const [head, tail] = finalBalance.split('.')
	if (head == 0) {
		return `${head}.${tail.substring(0, len - 1)}`
	}
	const formattedHead = head.replace(/\B(?=(\d{3})+(?!\d))/g, ',')
	return `${formattedHead}.${tail}`
}

export const getImgUrl = (url) => {
	const [protocol, link] = url.split('://')
	if (protocol === 'sia') {
		return `https://siasky.net/${link}`
	}
	return url
}

export const parseDateTime = (timestamp) => {
	return timeAgo.format(new Date(timestamp))
}

'''
'''--- tailwind.config.js ---
module.exports = {
	future: {
		removeDeprecatedGapUtilities: true,
		purgeLayersByDefault: true,
	},
	purge: ['./src/**/*.html', './src/**/*.js'],
	theme: {
		fontFamily: {
			title: ['Limelight', 'cursive'],
			body: ['Josefin Sans', 'sans-serif'],
		},
		extend: {
			colors: {
				'primary-color': '#F52D3A',
				'secondary-color': '#FFBC29',
				'tertiary-color': '#F7F4ED',
			},
			boxShadow: {
				bold: '4px 4px 0px #000000;',
			},
		},
	},
	variants: {},
	plugins: [],
}

'''