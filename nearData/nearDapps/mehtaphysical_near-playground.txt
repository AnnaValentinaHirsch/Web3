*GitHub Repository "mehtaphysical/near-playground"*

'''--- .github/workflows/nodejs.yml ---
name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - run: npm ci
    - run: npm test
      env:
        CI: true

'''
'''--- __mocks__/fileMock.js ---
// eslint-disable-next-line
module.exports = '/path/image';

'''
'''--- dist/index.a3fd2fa8.css ---
/*! tailwindcss v2.1.2 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-moz-tab-size:4;-o-tab-size:4;tab-size:4;line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],button{-webkit-appearance:button}legend{padding:0}progress{vertical-align:baseline}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{padding:0;line-height:inherit;color:inherit}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-gray-500{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}.bg-yellow-500{--tw-bg-opacity:1;background-color:rgba(245,158,11,var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(59,130,246,var(--tw-bg-opacity))}.bg-purple-600{--tw-bg-opacity:1;background-color:rgba(124,58,237,var(--tw-bg-opacity))}.bg-pink-500{--tw-bg-opacity:1;background-color:rgba(236,72,153,var(--tw-bg-opacity))}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-r{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.rounded-l{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.border{border-width:1px}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.contents{display:contents}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-center{justify-content:center}.h-8{height:2rem}.h-full{height:100%}.m-auto{margin:auto}.my-2{margin-top:.5rem;margin-bottom:.5rem}.mr-0{margin-right:0}.ml-auto{margin-left:auto}.overflow-scroll{overflow:scroll}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-4{padding:1rem}.px-3{padding-left:.75rem;padding-right:.75rem}.absolute{position:absolute}*{--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.ring-gray-500{--tw-ring-opacity:1;--tw-ring-color:rgba(107,114,128,var(--tw-ring-opacity))}.ring-yellow-500{--tw-ring-opacity:1;--tw-ring-color:rgba(245,158,11,var(--tw-ring-opacity))}.ring-green-500{--tw-ring-opacity:1;--tw-ring-color:rgba(16,185,129,var(--tw-ring-opacity))}.ring-blue-500{--tw-ring-opacity:1;--tw-ring-color:rgba(59,130,246,var(--tw-ring-opacity))}.ring-pink-500{--tw-ring-opacity:1;--tw-ring-color:rgba(236,72,153,var(--tw-ring-opacity))}.text-center{text-align:center}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgba(239,68,68,var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgba(245,158,11,var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgba(16,185,129,var(--tw-text-opacity))}.w-60{width:15rem}.w-1\/4{width:25%}.w-3\/4{width:75%}.w-full{width:100%}.gap-5{gap:1.25rem}.grid-flow-row{grid-auto-flow:row}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.col-span-1{grid-column:span 1/span 1}.grid-rows-2{grid-template-rows:repeat(2,minmax(0,1fr))}@-webkit-keyframes spin{to{transform:rotate(1turn)}}@keyframes spin{to{transform:rotate(1turn)}}@-webkit-keyframes ping{75%,to{transform:scale(2);opacity:0}}@keyframes ping{75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes pulse{50%{opacity:.5}}@keyframes pulse{50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}.animate-pulse{-webkit-animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite;animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}*{box-sizing:border-box}body{background-color:#151515}#root{height:100vh}
/*# sourceMappingURL=index.a3fd2fa8.css.map */

'''
'''--- dist/index.html ---
<!DOCTYPE html><html lang="en"><head><link rel="stylesheet" href="/index.a3fd2fa8.css"><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta http-equiv="X-UA-Compatible" content="ie=edge"><title>near-playground</title></head><body> <div id="root"></div> <script src="/index.6336d233.js"></script> </body></html>
'''
'''--- fs.js ---
const fs = require('fs');

const getFiles = (dir, dirKey = '') => {
  const files = fs.readdirSync(dir, { encoding: 'utf-8' });

  return files
    .filter((file) => !file.includes('git'))
    .reduce((acc, file) => {
      const filePath = `${dirKey}/${file}`;
      if (fs.statSync(`${dir}/${file}`).isDirectory()) {
        return { ...acc, ...getFiles(`${dir}/${file}`, filePath) };
      } else {
        return {
          ...acc,
          [filePath]: fs.readFileSync(`${dir}/${file}`, 'utf-8'),
        };
      }
    }, {});
};

// console.log(getFiles('../../near-sdk-as'));
fs.writeFileSync(
  './src/fs.json',
  JSON.stringify(
    {
      ...getFiles('./node_modules/near-sdk-as', 'node_modules/near-sdk-as'),
      ...getFiles('./node_modules/near-sdk-core', 'node_modules/near-sdk-core'),
      ...getFiles(
        './node_modules/near-sdk-bindgen',
        'node_modules/near-sdk-bindgen'
      ),
      ...getFiles('./node_modules/near-mock-vm', 'node_modules/near-mock-vm'),
      ...getFiles('./node_modules/as-bignum', 'node_modules/as-bignum'),
      ...getFiles(
        './node_modules/assemblyscript-temporal',
        'node_modules/assemblyscript-temporal'
      ),
      ...getFiles(
        './node_modules/assemblyscript-regex',
        'node_modules/assemblyscript-regex'
      ),
      ...getFiles(
        './node_modules/assemblyscript-json',
        'node_modules/assemblyscript-json'
      ),
    },
    null,
    2
  )
);

'''
'''--- package.json ---
{
  "name": "near-playground",
  "version": "1.0.0",
  "description": "",
  "main": "dist/index.html",
  "jest": {
    "setupFilesAfterEnv": [
      "@testing-library/jest-dom/extend-expect",
      "<rootDir>/src/setupTests.js"
    ],
    "moduleNameMapper": {
      "\\.(css)$": "identity-obj-proxy",
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js"
    }
  },
  "scripts": {
    "postinstall": "node fs.js && node post-install.js",
    "start": "parcel serve src/index.html",
    "build": "parcel build src/index.html --no-scope-hoist"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "autoprefixer": "^10.2.6",
    "eslint": "^7.27.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-react": "^7.24.0",
    "parcel": "^2.0.0-beta.2",
    "postcss": "^8.3.0",
    "prettier": "^2.3.1",
    "tailwindcss": "^2.1.2"
  },
  "dependencies": {
    "assemblyscript": "^0.19.0",
    "near-api-js": "^0.41.0",
    "near-sdk-as": "^3.2.0",
    "near-sdk-bindgen": "^3.2.0",
    "react": "^17.0.2",
    "react-ace": "^9.4.0",
    "react-dom": "^17.0.2",
    "react-spinners": "^0.11.0",
    "visitor-as": "^0.6.0"
  }
}

'''
'''--- post-install.js ---
const fs = require('fs');

const visitorAs = fs.readFileSync(
  './node_modules/visitor-as/as/index.js',
  'utf8'
);
fs.writeFileSync(
  './node_modules/visitor-as/as/index.js',
  visitorAs.replace('assemblyscript/cli/asc', 'assemblyscript/dist/asc')
);

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

'''
'''--- src/components/editor/ABITransformer.ts ---
import { Program } from 'assemblyscript';
import { Transform } from 'assemblyscript/cli/transform';
import { ASTBuilder } from 'visitor-as/dist';

export default () => {
  const abi = [];
  class ABITransformer extends Transform {
    afterInitialize(program: Program): void {
      const input = program.filesByName.get('input');

      for (const [name, wrapped] of input.exports?.entries()) {
        const original = input.members.get(
          wrapped.name.replace('__wrapper_', '')
        );

        const params = original.declaration.signature.parameters.map(
          (param) => {
            const [name, type] = ASTBuilder.build(param).split(':');
            return { name: name.trim(), type: type.trim() };
          }
        );
        const returnType = ASTBuilder.build(
          original.declaration.signature.returnType
        );

        abi.push({ params, returnType, name });
      }
    }
  }

  return {
    ABITransformer,
    abi,
  };
};

'''
'''--- src/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
}

body {
  background-color: #151515;
}

#root {
  height: 100vh;
}

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>near-playground</title>
  </head>

  <body>
    <div id="root"></div>
    <script src="./index.js"></script>
  </body>
</html>

'''
'''--- src/index.js ---
import React from 'react';
import { render } from 'react-dom';
import App from './components/app/App';
import './index.css';

render(<App />, document.getElementById('root'));

'''
'''--- src/setupTests.js ---
global.fetch = require('node-fetch');

'''
'''--- tailwind.config.js ---
module.exports = {
  purge: ['./src/**/*.{js,jsx,ts,tsx}', './public/index.html'],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
};

'''