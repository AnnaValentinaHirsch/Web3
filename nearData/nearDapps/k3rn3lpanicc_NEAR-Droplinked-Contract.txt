*GitHub Repository "k3rn3lpanicc/NEAR-Droplinked-Contract"*

'''--- NEARCLI/.rustc_info.json ---
{"rustc_fingerprint":14878175678971060001,"outputs":{"4614504638168534921":{"success":true,"status":"","code":0,"stdout":"rustc 1.65.0 (897e37553 2022-11-02)\nbinary: rustc\ncommit-hash: 897e37553bba8b42751c67658967889d11ecd120\ncommit-date: 2022-11-02\nhost: x86_64-unknown-linux-gnu\nrelease: 1.65.0\nLLVM version: 15.0.0\n","stderr":""}},"successes":{}}
'''
'''--- NEARCLI/Cust.json ---
{"implicit_account_id":"67473bf250df873d9cde19666cabc27fbb3bb085a0fbe4c271570319be2e8f83","master_seed_phrase":"math weapon ring thumb hair acoustic animal velvet license sheriff grain meadow","private_key":"ed25519:47mqtA9JKrx6TCvqobrwzb5YwVP5T87Aj7gikbWinQR8gZEiFVnbx2YfRNzg5271L7omeRXkbZ34NsrtxRCNa9CE","public_key":"ed25519:7x9zaXyLB6iKi1hjajSLZaX4cLLxN9wbu7C6Gty8eCiv","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- NEARCLI/Deployer.json ---
{"implicit_account_id":"c65ac8fafeab42c1d88a240faa29f1adb191f220be0715e45a08f3b99220d66f","master_seed_phrase":"advance end keep duty cash tiny patrol sustain protect radio river beauty","private_key":"ed25519:4uFxMysXZpLyCyG7YbDknYrG2ZVDtqBULtkwVwjMH6dktDJfBz63HxWSfjqe84CpCE6eCfUXakML6QDF5ksnTVf4","public_key":"ed25519:EMJ1sGHVTu9KVJuY19EovR7hrYXZENgVcvC1LpFsN8A2","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- NEARCLI/Prod.json ---
{"implicit_account_id":"264b85a1ffb2f347b21b3c818028f000ec4a921cfd7417597c2a44dd2b00d4e4","master_seed_phrase":"fatal visual attitude payment wife fluid myself pair life narrow effort pupil","private_key":"ed25519:5emVxBKmeLoW8ffQno8Yzbk2tUMYA9usQRV6MH9cgsPm99SD7Cjcz3wu6krs7f1MSDL11brvg1nkdnfE3mZcstfV","public_key":"ed25519:3aVHWFZKX3H94ApLC4Ze6RaV4NG6fo6cVqWmBLedWqGP","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- NEARCLI/Pub.json ---
{"implicit_account_id":"d3b12d30d93f247a6cb762f79dbde6b0f5814c40daccdbb7e73b9421ab35202c","master_seed_phrase":"firm nurse chat change display educate shove story nominee pulp morning collect","private_key":"ed25519:66ufHJ4YAwrMGcT4bdMAxrocMPb54Wri9bB2mgZsA8syZ79RxDaSv9zEokxgEsPBJqkpVVf5PFFp2gRnZuzgKN6w","public_key":"ed25519:FFMimEc2FR3xs5Gm7LCjDPF5Qg7CVgQXNM3cJ73dqQ9Z","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- NEARCLI/README.md ---
# NEAR CLI

near-cli is your **human-friendly** companion that helps to interact with [NEAR Protocol](https://near.org) from command line.

Just run `near-cli` and let it guide you through!

<p>
  <img src="docs/media/create-account.svg" alt="" width="1200">
</p>

## Install

Download pre-compiled version of near-cli for your OS from the [Releases page](https://github.com/near/near-cli-rs/releases/) or install it with `cargo` if you have [Rust](https://rustup.rs) installed on your computer:

```bash
$ cargo install near-cli-rs
```

Here is the expected output when you run it:

```bash
$ near-cli

?  What are you up to? (select one of the options with the up-down arrows on your keyboard and press Enter)
> account     - Manage accounts
  tokens      - Manage token assets such as NEAR, FT, NFT
  contract    - Manage smart-contracts: deploy code, call functions
  transaction - Operate transactions
  config      - Manage connections in a configuration file (config.toml)
[↑↓ to move, enter to select, type to filter]
```

or, install the most recent version from git repository:

```bash
$ cargo install --git https://github.com/near/near-cli-rs
```

## [README in English](docs/README.en.md)  
  - [Usage](docs/README.en.md#usage)
  - [Installation](docs/README.en.md#installation)
  - [User Guide](docs/README.en.md#user-guide)
  - [Config](docs/README.en.md#config)
  - [Building](docs/README.en.md#building)

## [README на Русском (in Russian)](docs/README.ru.md)
  - [Применение](docs/README.ru.md#применение)
  - [Установка](docs/README.ru.md#установка)
  - [Инструкция](docs/README.ru.md#инструкция)
  - [Конфигурационный файл](docs/README.ru.md#конфигурационный-файл)
  - [Сборка](docs/README.ru.md#сборка)

'''
'''--- NEARCLI/deploy.bat ---
near-cli.exe contract deploy c65ac8fafeab42c1d88a240faa29f1adb191f220be0715e45a08f3b99220d66f use-file status_message.wasm without-init-call network-config testnet sign-with-access-key-file Deployer.json
del status_message.wasm
'''
'''--- NEARCLI/docs/GUIDE.en.md ---
## User Guide

This guide is intended to give a detailed description of _near-cli_ and an
overview of its capabilities. This guide assumes that _near-cli_ is
[installed](README.md#installation)
and that readers have passing familiarity with using command line tools. This
also assumes a Unix-like system, although most commands are probably easily
translatable to any command line shell environment.

Before proceeding to the description of specific commands, it is necessary to consider two points common to these commands:

1. Sign transaction

    _near-cli_ offers several ways to sign the created transaction. Let's take a closer look at each.

    - _sign-with-macos-keychain - Sign the transaction with a key saved in macOS keychain_

        The operating system _MacOS_ has its own application _[Keychain Access](https://support.apple.com/guide/keychain-access/welcome/mac)_, with the help of which _near-cli_ will independently find access keys and sign the created transaction.

    - _sign-with-keychain - Sign the transaction with a key saved in legacy keychain (compatible with the old near CLI)_

        _near-cli_ will independently find access keys and sign the created transaction.  
        Directory with access keys defined in [config](#config---manage-connections-in-a-configuration-file).
        The access keys must be in the _public-key.json_ file located in _/Users/user/.near-credentials/network-name/user-name/_  
        For example, _/Users/frovolod/.near-credentials/testnet/volodymyr.testnet/ed25519_8h7kFK4quSUJRkUwo3LLiK83sraEm2jnQTECuZhWu8HC.json_

        <details><summary><i>Demonstration of the command in interactive mode</i></summary>
        <a href="https://asciinema.org/a/30jHxm9lRevRG4K1h0GWlEciV?autoplay=1&t=1&speed=2">
            <img src="https://asciinema.org/a/30jHxm9lRevRG4K1h0GWlEciV.png" width="836"/>
        </a>
        </details>

    - _sign-with-ledger - Sign the transaction with Ledger Nano device_
    
        This option involves signing the created transaction using a ledger.

    - _sign-with-plaintext-private-key - Sign the transaction with a plaintext private key_

        When choosing this signature option, _near-cli_ will ask the user to enter access keys:
          "public_key":"ed25519:Ebx7...",
          "private_key":"ed25519:2qM8..."

2. Actions with a signed transaction

   A signed transaction can be sent for immediate execution:

   - _send - Send the transaction to the network_

   or display in base64 format to send:

   - _display - Print only base64 encoded transaction for JSON RPC input and exit_

### Command groups

- [account     - Manage accounts](#account---Manage-accounts)
- [tokens      - Manage token assets such as NEAR, FT, NFT](#tokens---Manage-token-assets-such-as-NEAR-FT-NFT)
- [contract    - Manage smart-contracts: deploy code, call functions](#contract---Manage-smart-contracts-deploy-code-call-functions)
- [transaction - Operate transactions](#transaction---Operate-transactions)
- [config      - Manage connections in a configuration file](#config---Manage-connections-in-a-configuration-file)

### account - Manage accounts

View account details ([View properties for an account](#view-account-summary---view-properties-for-an-account)) and view account access keys ([View a list of access keys of an account](#list-keys---View-a-list-of-access-keys-of-an-account)) is possible at the current time (***now***) and at a certain point in the past by specifying the block (***at-block-height*** or ***at-block-hash***). The examples below show how these modes can be used.

- [view-account-summary](#view-account-summary---View-properties-for-an-account)
- [import-account](#import-account---import-existing-account-aka-sign-in)
- [create-account](#create-account---Create-a-new-account)
- [delete-account](#delete-account---Delete-an-account)
- [list-keys](#list-keys---View-a-list-of-access-keys-of-an-account)
- [add-key](#add-key---Add-an-access-key-to-an-account)
- [delete-key](#delete-key---Delete-an-access-key-from-an-account)

#### view-account-summary - View properties for an account

- [now](#now---View-properties-in-the-final-block)
- [at-block-height](#at-block-height---View-properties-in-a-height-selected-block)
- [at-block-hash](#at-block-hash---View-properties-in-a-hash-selected-block)

##### now - View properties in the final block

To view an account summary for the last block, in the terminal command line type:

```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #97804915 (5G8HHWMJMHRMMaHTjeZLSvL7ruYMtH9tXq25Q6BPUivu)
Native account balance: 182.685021399504861699999997 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288962 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 14
   1. ed25519:2QFAeUutKUDpmgKDyHXm7Wcz1uhjxk92fK6zY2dB7FCD (nonce: 97492076000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   2. ed25519:3p1HbrTDYxY4q3V6QznW14qkuv3Bq1phFpCTsbrJpbEC (nonce: 94363284000000) is granted to full access
   3. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000002) is granted to full access
   4. ed25519:6YU78BezKwQNrz5vmtkSCALtx7cPDC1JBs9DhjeSJ39X (nonce: 97490513000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   5. ed25519:7YCfA1KrToJtAYGTBgAMe4LWfQEi4iwLGcH2q5SvGKzD (nonce: 94982716000000) is granted to only do [] function calls on mintspace2.testnet with an allowance of 0.25 NEAR
   6. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   7. ed25519:9nyDySTNAGPywxC9pG4DPdnF3eEVexDgrfzZYsoahPsV (nonce: 76057805000000) is granted to full access
   8. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   9. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000021) is granted to full access
  10. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
  11. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000007) is granted to full access
  12. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
  13. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
  14. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/WA7eNU7hbmv7oa5lNLrmJzmRu?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/WA7eNU7hbmv7oa5lNLrmJzmRu.png" width="836"/>
</a>
</details>

##### at-block-height - View properties in a height-selected block

To view an account summary for a specific block, you can specify the height of that block. To do this, at the terminal command line, type:
```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    at-block-height 73069245
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #73069245 (HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY)
Native account balance: 198.9924766125790117 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288660 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 12
   1. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000001) is granted to full access
   2. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   3. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   4. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000009) is granted to full access
   5. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
   6. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000001) is granted to full access
   7. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
   8. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
   9. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
  10. ed25519:H5A5WfckocSLeXC7h22PcnscrWWrADHaRzrVWFMYT5o9 (nonce: 72254265000000) is granted to full access
  11. ed25519:HXHM2GTqDzCZnd7UQzPtL7VwcFfcm7n8Z8voo1ArE4Tr (nonce: 72263503000002) is granted to full access
  12. ed25519:HjzSeCGdWT15iSj2TybmKV2dZteu1VYYAaYvNYVNZY2W (nonce: 72253750000000) is granted to full access
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/oKL2H2gbDntOt0MHqpjsPnZZv?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/oKL2H2gbDntOt0MHqpjsPnZZv.png" width="836"/>
</a>
</details>

##### at-block-hash - View properties in a hash-selected block

To view an account summary for a specific block, you can specify the hash of that block. To do this, at the terminal command line, type:
```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    at-block-hash HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY
````

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #73069245 (HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY)
Native account balance: 198.9924766125790117 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288660 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 12
   1. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000001) is granted to full access
   2. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   3. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   4. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000009) is granted to full access
   5. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
   6. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000001) is granted to full access
   7. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
   8. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
   9. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
  10. ed25519:H5A5WfckocSLeXC7h22PcnscrWWrADHaRzrVWFMYT5o9 (nonce: 72254265000000) is granted to full access
  11. ed25519:HXHM2GTqDzCZnd7UQzPtL7VwcFfcm7n8Z8voo1ArE4Tr (nonce: 72263503000002) is granted to full access
  12. ed25519:HjzSeCGdWT15iSj2TybmKV2dZteu1VYYAaYvNYVNZY2W (nonce: 72253750000000) is granted to full access
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/TqhSdwjoc9PMxbLZtTWSnCRR5?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/TqhSdwjoc9PMxbLZtTWSnCRR5.png" width="836"/>
</a>
</details>

#### import-account - Import existing account (a.k.a. "sign in")

To authorize the user, in the terminal command line type:
```txt
./near-cli account \
    import-account \
    network-config testnet
```

You will be redirected to the browser for authorization. After successful authorization in _[NEAR Wallet](https://wallet.near.org/)_, you need to return to the terminal and enter your login.
<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
The data for the access key is saved in a file /Users/frovolod/.near-credentials/testnet/fro_volod.testnet/ed25519_GicfpXn1Ebb71gkBAoXKsoU1Nwv2hBppiMexxSFRHjyM.json
The file: /Users/frovolod/.near-credentials/testnet/fro_volod.testnet.json already exists! Therefore it was not overwritten.
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/ham4fYGgVjOJq3U2gfwwySIvj?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/ham4fYGgVjOJq3U2gfwwySIvj.png" width="836"/>
</a>
</details>

#### create-account - Create a new account

- sponsor-by-linkdrop (Not implemented yet)
- sponsor-by-wallet (testnet only) (Not implemented yet)
- [fund-myself](#fund-myself---I-would-like-fund-myself-to-cover-the-cost-of-creating-an-account)
- [fund-later](#fund-later---Create-an-implicit-account)

#### fund-myself - I would like fund myself to cover the cost of creating an account

With this command, you can create both a sub account and a "short name" account.  
In order to create a sub-account, in the terminal command line type:
```txt
./near-cli account \
    create-account fund-myself new.fro_volod.testnet '1 NEAR' \
    autogenerate-new-keypair \
    save-to-keychain \
    sign-as \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
New account <new.fro_volod.testnet> created successfully.
Transaction ID: DRT3EpCK9iT5APyGgfcgSoLPCLCYYKtnrVgDhGLDEZFo
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/DRT3EpCK9iT5APyGgfcgSoLPCLCYYKtnrVgDhGLDEZFo

The data for the access key is saved in a file /Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet/ed25519_3ngtirechhepHKrzfkdgqqtwqSMtdbSLR6N1c4ivnzu6.json 
The data for the access key is saved in a file "/Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet.json"
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/62q0BKhCtXV8hQ3sxDpnO1CQl?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/62q0BKhCtXV8hQ3sxDpnO1CQl.png" width="836"/>
</a>
</details>

In order to create a "short name" account, in the terminal command line type:
```txt
./near-cli account \
    create-account fund-myself new7.testnet '0.1 NEAR' \
    autogenerate-new-keypair \
    save-to-keychain \
    sign-as fro_volod.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
New account <new7.testnet> created successfully.
Transaction ID: GxZRjmYxZyo6X6Mn1kfuRJhfUnxsUVCiHZAZKqrLtR27
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/GxZRjmYxZyo6X6Mn1kfuRJhfUnxsUVCiHZAZKqrLtR27

The data for the access key is saved in a file "/Users/frovolod/.near-credentials/testnet/new7.testnet/ed25519_EX1qK1S1T4WxXJFLH7qZvKxnGQtcKfEEsiA4BNxAZ6mP.json"
The file: /Users/frovolod/.near-credentials/testnet/new7.testnet.json already exists! Therefore it was not overwritten.
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/MxmfDRdKPeP0VdXUiENmV2UXr?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/MxmfDRdKPeP0VdXUiENmV2UXr.png" width="836"/>
</a>
</details>

#### fund-later - Create an implicit-account

- [use-auto-generation](#use-auto-generation---Use-auto-generation-to-create-an-implicit-account)
- [use-ledger](#use-ledger---Use-ledger-to-create-an-implicit-account)

##### use-auto-generation - Use auto-generation to create an implicit account

This command automatically generates access keys and saves them to a file named _implicit-account-id_.
In order to execute this command, in the terminal command line type: 
```txt
./near-cli account \
    create-account \
    fund-later \
    use-auto-generation \
    save-to-folder /Users/frovolod/.near-credentials/implicit
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
The file "/Users/frovolod/.near-credentials/implicit/1573066d3fa7a2d56357aa5ddbc84295d94c61590390000981f5900b04e2f55f.json" was saved successfully
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/qPqMPP3tKwliWw2cu5vwCRfJi?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/qPqMPP3tKwliWw2cu5vwCRfJi.png" width="836"/>
</a>
</details>

##### use-ledger - Use ledger to create an implicit account

This command creates an account with access keys using the ledger and saves them in a file named _implicit-account-id_.
In order to execute this command, in the terminal command line type: 
```txt
./near-cli account \
    create-account \
    fund-later \
    use-ledger \
    save-to-folder /Users/frovolod/.near-credentials/implicit/ledger
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
The file "/Users/frovolod/.near-credentials/implicit/ledger/739c872c3057cd5d812c49345248b9fdd318c8ad33ace6cf0468109eae972c8e.json" was saved successfully
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/kL5x9MXNrlSZWS83YjVkxnsf7?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/kL5x9MXNrlSZWS83YjVkxnsf7.png" width="836"/>
</a>
</details>

#### delete-account - Delete an account

This command is designed to delete the current account. It is important to remember that all tokens of the deleted account will be transferred to the "_beneficiary_" account.
In order to execute this command, in the terminal command line type:
```txt
./near-cli account \
    delete-account 2.fro_volod.testnet \
    beneficiary volodymyr.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
Account <2.fro_volod.testnet> has been successfully deleted.
Transaction ID: EHvB47npN8Z46qhsrw5XpKmD3n3jDn4MGiD85YSqw7cy
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/EHvB47npN8Z46qhsrw5XpKmD3n3jDn4MGiD85YSqw7cy
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/bicRQEA5bhRG6e7nKaF8ghzVm?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/bicRQEA5bhRG6e7nKaF8ghzVm.png" width="836"/>
</a>
</details>

#### list-keys - View a list of access keys of an account

Viewing account access keys is possible at the current time (***now***) and at a certain point in the past by specifying a block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

To view the list of access keys, type the following in the terminal command line:
```txt
./near-cli account \
    list-keys fro_volod.testnet \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Number of access keys: 14
   1. ed25519:2QFAeUutKUDpmgKDyHXm7Wcz1uhjxk92fK6zY2dB7FCD (nonce: 97492076000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   2. ed25519:3p1HbrTDYxY4q3V6QznW14qkuv3Bq1phFpCTsbrJpbEC (nonce: 94363284000000) is granted to full access
   3. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000002) is granted to full access
   4. ed25519:6YU78BezKwQNrz5vmtkSCALtx7cPDC1JBs9DhjeSJ39X (nonce: 97490513000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   5. ed25519:7YCfA1KrToJtAYGTBgAMe4LWfQEi4iwLGcH2q5SvGKzD (nonce: 94982716000000) is granted to only do [] function calls on mintspace2.testnet with an allowance of 0.25 NEAR
   6. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   7. ed25519:9nyDySTNAGPywxC9pG4DPdnF3eEVexDgrfzZYsoahPsV (nonce: 76057805000000) is granted to full access
   8. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   9. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000021) is granted to full access
  10. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
  11. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000007) is granted to full access
  12. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
  13. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
  14. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/KVfcCCyj2dEHEm4TcDkjtiW6s?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/KVfcCCyj2dEHEm4TcDkjtiW6s.png" width="836"/>
</a>
</details>

#### add-key - Add an access key to an account

Let's execute the command to add a new pair of access keys to the account with the following conditions:
  - the public key will be entered manually
  - keys will have full access
  - the transaction will be signed automatically (if there is a file with access keys)
In order to execute this command, in the terminal command line type:
```txt
./near-cli account \
    add-key fro_volod.testnet \
    grant-full-access \
    use-manually-provided-public-key ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
Added access key = ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 to fro_volod.testnet.
Transaction ID: 2oVDKopcWphN3qrUoq7XjFMpRuCUjz6jSU327q8trAQ5
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/2oVDKopcWphN3qrUoq7XjFMpRuCUjz6jSU327q8trAQ5
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/H4BfrteW1ClAzrLcRx9m8gQAV?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/H4BfrteW1ClAzrLcRx9m8gQAV.png" width="836"/>
</a>
</details>

Let's change our parameters to add access keys:
  - keys will be generated automatically
  - keys will have functional access
  - the transaction will be signed with key pair
In order to execute this command, in the terminal command line type:
```txt
./near-cli account \
    add-key fro_volod.testnet \
    grant-function-call-access \
        --allowance '1 NEAR' \
        --receiver-account-id 'meta.pool.testnet' \
        --method-names 'set_a, set_b' \
    autogenerate-new-keypair \
    save-to-keychain \
    network-config testnet \
    sign-with-plaintext-private-key \
        --signer-public-key ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB \
        --signer-private-key  ed25519:3UVo1GAatRz12iX3CRuKAuK3MPLDD9bPf4LXJD5DkHs13er3UeJLW7aRPAVsFQ2FjopUw6DEApEngac8FPtnnkYB \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
Added access key = ed25519:27R66L6yevyHbsk4fESZDC8QUQBwCdx6vvkk1uQmG7NY to fro_volod.testnet.
Transaction ID: DaJySrNtSUZU7KPyvfUMbh6xYi9vZeMvnj4Umo7ZzdB3
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/DaJySrNtSUZU7KPyvfUMbh6xYi9vZeMvnj4Umo7ZzdB3
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/h08oydOTq3njf6mt1FNRMHGVs?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/h08oydOTq3njf6mt1FNRMHGVs.png" width="836"/>
</a>
</details>

#### delete-key - Delete an access key from an account

In order to remove access keys, in the terminal command line type:
```txt
./near-cli account \
    delete-key fro_volod.testnet \
    ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
Access key <ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3> for account <fro_volod.testnet> has been successfully deleted.
Transaction ID: 6S7bJ76QNFypUvP7PCB1hkLM7X5GxPxP2gn4rnDHMzPz
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/6S7bJ76QNFypUvP7PCB1hkLM7X5GxPxP2gn4rnDHMzPz
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/IYaNEYcMHtmSe6zKc2L63Okph?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/IYaNEYcMHtmSe6zKc2L63Okph.png" width="836"/>
</a>
</details>

### tokens - Manage token assets such as NEAR, FT, NFT
- [send-near](#send-near---The-transfer-is-carried-out-in-NEAR-tokens)
- [send-ft](#send-ft---The-transfer-is-carried-out-in-FT-tokens)
- [send-nft](#send-nft---The-transfer-is-carried-out-in-NFT-tokens)
- [view-near-balance](#view-near-balance---View-the-balance-of-Near-tokens)
- [view-ft-balance](#view-ft-balance---View-the-balance-of-FT-tokens)
- [view-nft-assets](#view-nft-assets---View-the-balance-of-NFT-tokens)

#### send-near - The transfer is carried out in NEAR tokens

This command is used to transfer tokens between accounts. Please note that the amount of tokens forwarded is indicated together with the dimensional unit (this is NEAR or yoctoNEAR).
In order to execute this command, in the terminal command line type:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-near volodymyr.testnet 0.1NEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
<fro_volod.testnet> has transferred 0.1 NEAR to <volodymyr.testnet> successfully.
Transaction ID: 8BbB674VDxeg36egMzdHFsCUExpkLWAWeYqEfd9u9ZaD
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/8BbB674VDxeg36egMzdHFsCUExpkLWAWeYqEfd9u9ZaD
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/U1pNSHZw812e4BHvnFGpefVs4?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/U1pNSHZw812e4BHvnFGpefVs4.png" width="836"/>
</a>
</details>

#### send-ft - The transfer is carried out in FT tokens

This command is used to transfer FT tokens between accounts. Please note that the amount of tokens forwarded is indicated together in dimensionless units.
In order to execute this command, in the terminal command line type:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-ft usdn.testnet volodymyr.testnet 10000000000000000000 \
        --prepaid-gas 100.000TeraGas \
        --attached-deposit 1yoctoNEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
The "ft_transfer" call to <usdn.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 5a7YmANdpimiqUm6WC6n4dd91b6A9PafNNhad8HWKugN
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/5a7YmANdpimiqUm6WC6n4dd91b6A9PafNNhad8HWKugN
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/uvZGcJUpufJZdB10GsQlfXwW1?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/uvZGcJUpufJZdB10GsQlfXwW1.png" width="836"/>
</a>
</details>

#### send-nft - The transfer is carried out in NFT tokens

This command is used to transfer NFT tokens between accounts.
In order to execute this command, in the terminal command line type:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-nft paras-token-v2.testnet volodymyr.testnet 1604:4 \
        --prepaid-gas 100.000TeraGas \
        --attached-deposit 1yoctoNEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
The "nft_transfer" call to <paras-token-v2.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 9q2VbakZbj5ja6GAFXpFnbtbYHijEHyT7Ry34GQ6cvLB
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/9q2VbakZbj5ja6GAFXpFnbtbYHijEHyT7Ry34GQ6cvLB
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/iFXW6ryGQSdsWML0c3qAw3qGY?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/iFXW6ryGQSdsWML0c3qAw3qGY.png" width="836"/>
</a>
</details>

#### view-near-balance - View the balance of Near tokens

Viewing the account balance is possible at the current time (***now***) and at a certain moment in the past by specifying the block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

To view the amount in NEAR tokens on the account, type the following in the terminal command line:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-near-balance \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
fro_volod.testnet account has 169.589001320890476999999994 NEAR available for transfer (the total balance is 172.482461320890476999999994 NEAR, but 2.89246 NEAR is locked for storage and the transfer transaction fee is ~0.001 NEAR)
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/lKGalzAxt3zCSxOsreqdykO8X?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/lKGalzAxt3zCSxOsreqdykO8X.png" width="836"/>
</a>
</details>

#### view-ft-balance - View the balance of FT tokens

Viewing the account balance is possible at the current time (***now***) and at a certain moment in the past by specifying the block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

To view funds in FT tokens on the account, type the following in the terminal command line:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-ft-balance usdn.testnet \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
fro_volod.testnet account has "31942967677775774595" FT tokens (FT-contract: usdn.testnet)
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/k7Bz5r20x2Bo5RIX7Q1VnpNZC?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/k7Bz5r20x2Bo5RIX7Q1VnpNZC.png" width="836"/>
</a>
</details>

#### view-nft-assets - View the balance of NFT tokens

Viewing the account balance is possible at the current time (***now***) and at a certain moment in the past by specifying the block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

To view funds in NFT tokens on the account, type the following in the terminal command line:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-nft-assets paras-token-v2.testnet \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
fro_volod.testnet account has NFT tokens:
[
  {
    "approved_account_ids": {},
    "metadata": {
      "copies": 100,
      "description": null,
      "expires_at": null,
      "extra": null,
      "issued_at": "1657613801537412611",
      "media": "bafybeib65t37t2tagukok4m7f5rldfirzb5ykvdq3yqbwnbcrtllpggg6u",
      "media_hash": null,
      "reference": "bafkreidmbv4j2qylxc2mngsup7cxakw7gwyd7lu2zycznrdtqw4kc52cwu",
      "reference_hash": null,
      "starts_at": null,
      "title": "Apollo42 #01 #4",
      "updated_at": null
    },
    "owner_id": "fro_volod.testnet",
    "token_id": "1604:4"
  }
]
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/znmY5yzIlSTjOlRRRUHzeeuzJ?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/znmY5yzIlSTjOlRRRUHzeeuzJ.png" width="836"/>
</a>
</details>

### contract - Manage smart-contracts: deploy code, call functions

- [call-function](#call-function---Execute-function-contract-method)
- [deploy](#deploy---Add-a-new-contract-code)
- [download-wasm](#download-wasm---Download-wasm)

#### call-function - Execute function (contract method)

- [as-read-only](#as-read-only---Calling-a-view-method)
- [as-transaction](#as-transaction---Calling-a-change-method)

##### as-read-only - Calling a view method

Viewing data is possible at the current time (***now***) and at a certain point in the past by specifying a block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

To run this command, type the following in the terminal command line:
```txt
./near-cli contract \
    call-function \
    as-read-only zavodil.poolv1.near get_accounts \
    json-args '{"from_index": 0, "limit": 3}' \
    network-config mainnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
[
  {
    "account_id": "zavodil.near",
    "can_withdraw": false,
    "staked_balance": "107480661091559500516766891",
    "unstaked_balance": "1307739180247557404925470405"
  },
  {
    "account_id": "gagdiez.near",
    "can_withdraw": true,
    "staked_balance": "4387193990112136827894210960",
    "unstaked_balance": "1"
  },
  {
    "account_id": "gibby49.near",
    "can_withdraw": true,
    "staked_balance": "1105950300133283278041226",
    "unstaked_balance": "1"
  }
]
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/OHhdlJEaoA4nLJSDtybgc7kCR?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/OHhdlJEaoA4nLJSDtybgc7kCR.png" width="836"/>
</a>
</details>

##### as-transaction - Calling a change method

To run this command, type the following in the terminal command line:
```txt
./near-cli contract \
    call-function \
    as-transaction turbo.volodymyr.testnet rate \
    json-args '{"other_user":"volodymyr.testnet", "vote":5}' \
    prepaid-gas '3 Tgas' \
    attached-deposit '1 NEAR' \
    sign-as fro_volod.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
The "rate" call to <turbo.volodymyr.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 7RuoSAdCctSEw63GKsfQJg1YXRzH3msUCo4oygzauPko
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/7RuoSAdCctSEw63GKsfQJg1YXRzH3msUCo4oygzauPko
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/S6LHwINBHskznxMrJPHzUmgxM?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/S6LHwINBHskznxMrJPHzUmgxM.png" width="836"/>
</a>
</details>

#### deploy - Add a new contract code

In order to add a new contract, in the terminal command line type:
```txt
./near-cli contract \
    deploy \
    262.volodymyr.testnet \
    use-file /Users/frovolod/Documents/NEAR/rust-counter/contract/target/wasm32-unknown-unknown/release/rust_counter_tutorial.wasm \
    with-init-call increment {} \
        --prepaid-gas '1 TGas' \
        --attached-deposit '0 NEAR' \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction sent ...
Successful transaction
Contract code has been successfully deployed.
The "increment" call to <262.volodymyr.testnet> on behalf of <262.volodymyr.testnet> succeeded.
Transaction ID: 4YGGhF88aevNGpF5uaXNGHfQprHRqkia7eTpyxegJVms
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/4YGGhF88aevNGpF5uaXNGHfQprHRqkia7eTpyxegJVms
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/7KD9gM9tj2AWtgGpjUmytkPg9?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/7KD9gM9tj2AWtgGpjUmytkPg9.png" width="836"/>
</a>
</details>

#### download-wasm - Download wasm

You can download the contract file for the current moment (***now***) and for a certain moment in the past by specifying the block (***at-block-height*** or ***at-block-hash***).  
Examples of the use of these parameters are discussed in the ([View properties for an account](#view-account-summary---view-properties-for-an-account)).

In order to get the contract file, type the following in the terminal command line:

```txt
./near-cli contract \
    download-wasm 262.volodymyr.testnet \
    to-folder /Users/frovolod/Downloads \
    network-config testnet \
    now
```

<details><summary><i>The result of this command will be as follows:</i></summary>
```txt
The file "/Users/frovolod/Downloads/contract_262_volodymyr_testnet.wasm" was downloaded successfully
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/2UbeTzLJq16qtCUR015wuRFmN?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/2UbeTzLJq16qtCUR015wuRFmN.png" width="836"/>
</a>
</details>

### transaction - Operate transactions

- [view-status](#view-status---View-a-transaction-status)
- [construct-transaction](#construct-transaction---Construct-a-new-transaction)

#### view-status - View a transaction status

To view the status of the desired transaction, type its hash in the terminal command line:
```txt
./near-cli transaction \
    view-status GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank \
    volodymyr.testnet \
    network-config testnet
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Transaction status: FinalExecutionOutcomeWithReceiptView {
    final_outcome: FinalExecutionOutcome {
        status: SuccessValue(``),
        transaction: SignedTransactionView {
            signer_id: AccountId(
                "volodymyr.testnet",
            ),
            public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
            nonce: 165,
            receiver_id: AccountId(
                "qweqweqwe.volodymyr.testnet",
            ),
            actions: [
                CreateAccount,
                Transfer {
                    deposit: 100000000000000000000000000,
                },
                AddKey {
                    public_key: ed25519:AgVv8qjZ7yix3pTo7BimT1zoDYUSTGcg73RBssC5JMRf,
                    access_key: AccessKeyView {
                        nonce: 0,
                        permission: FullAccess,
                    },
                },
            ],
            signature: ed25519:266jBRjvnaxe4mDyHRGwv3TJesvgRo2umJBqkZU26fRwmhVHciu3tBSLqRZFjEuqLTiwDTrFvfxpJ8Sbd2PqHHhv,
            hash: `GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank`,
        },
        transaction_outcome: ExecutionOutcomeWithIdView {
            proof: [],
            block_hash: `AQH6jDqqxpBYj5NSZv3Skg5hUZQRsn16jvDuphCTugSQ`,
            id: `GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank`,
            outcome: ExecutionOutcomeView {
                logs: [],
                receipt_ids: [
                    `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
                ],
                gas_burnt: 424555062500,
                tokens_burnt: 42455506250000000000,
                executor_id: AccountId(
                    "volodymyr.testnet",
                ),
                status: SuccessReceiptId(5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh),
                metadata: ExecutionMetadataView {
                    version: 1,
                    gas_profile: None,
                },
            },
        },
        receipts_outcome: [
            ExecutionOutcomeWithIdView {
                proof: [],
                block_hash: `DBUpiLVVDBQwSAPU8ZTE8KQnX5skDD1dTsBjJQ8kV24R`,
                id: `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
                outcome: ExecutionOutcomeView {
                    logs: [],
                    receipt_ids: [
                        `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
                    ],
                    gas_burnt: 424555062500,
                    tokens_burnt: 42455506250000000000,
                    executor_id: AccountId(
                        "qweqweqwe.volodymyr.testnet",
                    ),
                    status: SuccessValue(``),
                    metadata: ExecutionMetadataView {
                        version: 1,
                        gas_profile: None,
                    },
                },
            },
            ExecutionOutcomeWithIdView {
                proof: [],
                block_hash: `BSjrH3WyKnXhD17drR94YfM725Ho59us9N4msXrrgHEw`,
                id: `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
                outcome: ExecutionOutcomeView {
                    logs: [],
                    receipt_ids: [],
                    gas_burnt: 0,
                    tokens_burnt: 0,
                    executor_id: AccountId(
                        "volodymyr.testnet",
                    ),
                    status: SuccessValue(``),
                    metadata: ExecutionMetadataView {
                        version: 1,
                        gas_profile: None,
                    },
                },
            },
        ],
    },
    receipts: [
        ReceiptView {
            predecessor_id: AccountId(
                "volodymyr.testnet",
            ),
            receiver_id: AccountId(
                "qweqweqwe.volodymyr.testnet",
            ),
            receipt_id: `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
            receipt: Action {
                signer_id: AccountId(
                    "volodymyr.testnet",
                ),
                signer_public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
                gas_price: 103000000,
                output_data_receivers: [],
                input_data_ids: [],
                actions: [
                    CreateAccount,
                    Transfer {
                        deposit: 100000000000000000000000000,
                    },
                    AddKey {
                        public_key: ed25519:AgVv8qjZ7yix3pTo7BimT1zoDYUSTGcg73RBssC5JMRf,
                        access_key: AccessKeyView {
                            nonce: 0,
                            permission: FullAccess,
                        },
                    },
                ],
            },
        },
        ReceiptView {
            predecessor_id: AccountId(
                "system",
            ),
            receiver_id: AccountId(
                "volodymyr.testnet",
            ),
            receipt_id: `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
            receipt: Action {
                signer_id: AccountId(
                    "volodymyr.testnet",
                ),
                signer_public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
                gas_price: 0,
                output_data_receivers: [],
                input_data_ids: [],
                actions: [
                    Transfer {
                        deposit: 1273665187500000000,
                    },
                ],
            },
        },
    ],
}
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/xf69gJEha7yO27E27CZszkN97?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/xf69gJEha7yO27E27CZszkN97.png" width="836"/>
</a>
</details>

#### construct-transaction - Construct a new transaction
  
Let's consider an example when it is necessary to perform several actions within one transaction:
1. Create an account
2. Add access keys to the created account
3. Transfer tokens to the created account

To do this, we will use the transaction constructor:

<details><summary>Demonstration of the command in interactive mode</summary>
<a href="https://asciinema.org/a/WNbxN1GB861q2sBbiKbQyVl3S?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/WNbxN1GB861q2sBbiKbQyVl3S.png" width="836"/>
</a>
</details>

### config - Manage connections in a configuration file

- [show-connections](#show-connections---Show-a-list-of-network-connections)
- [add-connection](#add-connection---Add-a-network-connection)
- [delete-connection](#delete-connection---Delete-a-network-connection)

#### show-connections - Show a list of network connections

To view the data of the configuration file (_config.toml_), you can use the interactive mode or type in the terminal command line:
```txt
./near-cli config show-connections
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
credentials_home_dir = "/Users/frovolod/.near-credentials"
[networks.mainnet]
network_name = "mainnet"
rpc_url = "https://archival-rpc.mainnet.near.org/"
wallet_url = "https://wallet.mainnet.near.org/"
explorer_transaction_url = "https://explorer.mainnet.near.org/transactions/"
linkdrop_account_id = "near"

[networks.testnet]
network_name = "testnet"
rpc_url = "https://archival-rpc.testnet.near.org/"
wallet_url = "https://wallet.testnet.near.org/"
explorer_transaction_url = "https://explorer.testnet.near.org/transactions/"
linkdrop_account_id = "testnet"

[networks.shardnet]
network_name = "shardnet"
rpc_url = "https://rpc.shardnet.near.org/"
wallet_url = "https://wallet.shardnet.near.org/"
explorer_transaction_url = "https://explorer.shardnet.near.org/transactions/"
linkdrop_account_id = "shardnet"

[networks.pagoda-testnet]
network_name = "pagoda-testnet"
rpc_url = "https://near-testnet.api.pagoda.co/rpc/v1/"
rpc_api_key = "c0a25b3c-39c2-4f62-a621-50e208b88e64"
wallet_url = "https://wallet.testnet.near.org/"
explorer_transaction_url = "https://explorer.testnet.near.org/transactions/"
linkdrop_account_id = "testnet"
```
</details>

#### add-connection - Add a network connection

To add network details to the configuration file (_config.toml_), you can use interactive mode or type in the terminal command line:
```txt
./near-cli config \
    add-connection \
        --network-name pagoda-testnet \
        --connection-name pagoda-testnet \
        --rpc-url https://near-testnet.api.pagoda.co/rpc/v1/ \
        --wallet-url https://wallet.testnet.near.org/ \
        --explorer-transaction-url https://explorer.testnet.near.org/transactions/ \
        --rpc-api-key 'c0a25b3c-39c2-4f62-a621-50e208b88e64' \
        --linkdrop-account-id testnet
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
Network connection "pagoda-testnet" was successfully added to config.toml
```
</details>

<details><summary><i>Demonstration of the command in interactive mode</i></summary>
<a href="https://asciinema.org/a/49s6yuDmxQyaA2XgEqlBC6cpN?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/49s6yuDmxQyaA2XgEqlBC6cpN.png" width="836"/>
</a>
</details>

#### delete-connection - Delete a network connection

To remove the network from the configuration file (_config.toml_), you can use interactive mode or type in the terminal command line:
```txt
./near-cli config delete-connection pagoda-testnet
```

<details><summary><i>The result of this command will be as follows:</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
Network connection "pagoda-testnet" was successfully removed from config.toml
```
</details>

'''
'''--- NEARCLI/docs/GUIDE.ru.md ---
## Инструкция

Это руководство предназначено для того, чтобы дать подробное описание утилиты _near-cli_ и
обзор её возможностей. Предполагается, что утилита _near-cli_
[установлена](README.ru.md#installation)
и пользователи знакомы с использованием инструментов командной строки. Также предполагается Unix-подобная система, хотя большинство команд, вероятно, легко
переводимы в любую среду оболочки командной строки.

Прежде, чем перейти к описанию конкретных команд, необходимо рассмотреть два общих для этих команд пункта:

1. Подпись транзакции

   _near-cli_ предполагает несколько способов подписи созданной транзакции. Рассмотрим подробнее каждый.

    - _sign-with-macos-keychain - Sign the transaction with a key saved in macOS keychain_

        Операционная система _MacOS_ имеет собственное приложение _[Keychain Access](https://support.apple.com/ru-ru/guide/keychain-access/welcome/mac)_, с помощью которого _near-cli_ самостоятельно найдет ключи доступа и подпишет созданную транзакцию.

    - _sign-with-keychain - Sign the transaction with a key saved in legacy keychain (compatible with the old near CLI)_

        _near-cli_ самостоятельно найдет ключи доступа и подпишет созданную транзакцию.
        Каталог с ключами доступа определен в [конфигурационном файле](#config---manage-connections-in-a-configuration-file).  
        Ключи доступа должны находиться в файле _публичный-ключ.json_, расположенном в _/Users/user/.near-credentials/имя-сети/имя-пользователя/_.  
        Например, _/Users/frovolod/.near-credentials/testnet/volodymyr.testnet/ed25519_8h7kFK4quSUJRkUwo3LLiK83sraEm2jnQTECuZhWu8HC.json_

        <details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
        <a href="https://asciinema.org/a/30jHxm9lRevRG4K1h0GWlEciV?autoplay=1&t=1&speed=2">
            <img src="https://asciinema.org/a/30jHxm9lRevRG4K1h0GWlEciV.png" width="836"/>
        </a>
        </details>

    - _sign-with-ledger - Sign the transaction with Ledger Nano device_

        Этот вариант предполагает подписание созданной транзакции при помощи леджера.

    - _sign-with-plaintext-private-key - Sign the transaction with a plaintext private key_

        При выборе этого варианта подписи _near-cli_ попросит пользователя ввести ключи доступа:
        - "public_key":"ed25519:Ebx7...",
        - "private_key":"ed25519:2qM8..."

2. Действия с подписанной транзакцией

   Подписанную транзакцию можно либо немедленно отправить на выполнение:

   - _send - Send the transaction to the network_

   либо вывести на экран в формате base64 для последующей отправки:

   - _display - Print only base64 encoded transaction for JSON RPC input and exit_

### Группы команд

- [account     - Manage accounts](#account---Manage-accounts)
- [tokens      - Manage token assets such as NEAR, FT, NFT](#tokens---Manage-token-assets-such-as-NEAR-FT-NFT)
- [contract    - Manage smart-contracts: deploy code, call functions](#contract---Manage-smart-contracts-deploy-code-call-functions)
- [transaction - Operate transactions](#transaction---Operate-transactions)
- [config      - Manage connections in a configuration file](#config---Manage-connections-in-a-configuration-file)

### account - Manage accounts

Просмотреть сведения об аккаунте ([View properties for an account](#view-account-summary---view-properties-for-an-account)) и просмотреть ключи доступа к аккаунту ([View a list of access keys of an account](#list-keys---View-a-list-of-access-keys-of-an-account)) возможно на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***). На примерах ниже показаны варианты применения этих режимов.

- [view-account-summary](#view-account-summary---View-properties-for-an-account)
- [import-account](#import-account---import-existing-account-aka-sign-in)
- [create-account](#create-account---Create-a-new-account)
- [delete-account](#delete-account---Delete-an-account)
- [list-keys](#list-keys---View-a-list-of-access-keys-of-an-account)
- [add-key](#add-key---Add-an-access-key-to-an-account)
- [delete-key](#delete-key---Delete-an-access-key-from-an-account)

#### view-account-summary - View properties for an account

- [now](#now---View-properties-in-the-final-block)
- [at-block-height](#at-block-height---View-properties-in-a-height-selected-block)
- [at-block-hash](#at-block-hash---View-properties-in-a-hash-selected-block)

##### now - View properties in the final block

Для просмотра сведений об аккаунте на последнем блоке необходимо ввести в командной строке терминала:

```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #97804915 (5G8HHWMJMHRMMaHTjeZLSvL7ruYMtH9tXq25Q6BPUivu)
Native account balance: 182.685021399504861699999997 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288962 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 14
   1. ed25519:2QFAeUutKUDpmgKDyHXm7Wcz1uhjxk92fK6zY2dB7FCD (nonce: 97492076000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   2. ed25519:3p1HbrTDYxY4q3V6QznW14qkuv3Bq1phFpCTsbrJpbEC (nonce: 94363284000000) is granted to full access
   3. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000002) is granted to full access
   4. ed25519:6YU78BezKwQNrz5vmtkSCALtx7cPDC1JBs9DhjeSJ39X (nonce: 97490513000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   5. ed25519:7YCfA1KrToJtAYGTBgAMe4LWfQEi4iwLGcH2q5SvGKzD (nonce: 94982716000000) is granted to only do [] function calls on mintspace2.testnet with an allowance of 0.25 NEAR
   6. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   7. ed25519:9nyDySTNAGPywxC9pG4DPdnF3eEVexDgrfzZYsoahPsV (nonce: 76057805000000) is granted to full access
   8. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   9. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000021) is granted to full access
  10. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
  11. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000007) is granted to full access
  12. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
  13. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
  14. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/WA7eNU7hbmv7oa5lNLrmJzmRu?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/WA7eNU7hbmv7oa5lNLrmJzmRu.png" width="836"/>
</a>
</details>

##### at-block-height - View properties in a height-selected block

Для просмотра сведений об аккаунте на конктретном блоке можно указать высоту данного блока. Для этого нужно ввести в командной строке терминала:
```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    at-block-height 73069245
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #73069245 (HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY)
Native account balance: 198.9924766125790117 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288660 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 12
   1. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000001) is granted to full access
   2. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   3. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   4. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000009) is granted to full access
   5. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
   6. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000001) is granted to full access
   7. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
   8. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
   9. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
  10. ed25519:H5A5WfckocSLeXC7h22PcnscrWWrADHaRzrVWFMYT5o9 (nonce: 72254265000000) is granted to full access
  11. ed25519:HXHM2GTqDzCZnd7UQzPtL7VwcFfcm7n8Z8voo1ArE4Tr (nonce: 72263503000002) is granted to full access
  12. ed25519:HjzSeCGdWT15iSj2TybmKV2dZteu1VYYAaYvNYVNZY2W (nonce: 72253750000000) is granted to full access
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/oKL2H2gbDntOt0MHqpjsPnZZv?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/oKL2H2gbDntOt0MHqpjsPnZZv.png" width="836"/>
</a>
</details>

##### at-block-hash - View properties in a hash-selected block

Для просмотра сведений об аккаунте необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    view-account-summary fro_volod.testnet \
    network-config testnet \
    at-block-hash HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY
````

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Account details for 'fro_volod.testnet' at block #73069245 (HCUJq3vQ3ztyCZAhmRmHR3cwSDcoE4zEbaWkhAjFuxUY)
Native account balance: 198.9924766125790117 NEAR
Validator stake: 0 NEAR
Storage used by the account: 288660 bytes
Contract code SHA-256 checksum (hex): fd999145baf49ece7d09fca7d030d384c4ea8ed4df651c6e87a015c4dfa6c0ec
Number of access keys: 12
   1. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000001) is granted to full access
   2. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   3. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   4. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000009) is granted to full access
   5. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
   6. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000001) is granted to full access
   7. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
   8. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
   9. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
  10. ed25519:H5A5WfckocSLeXC7h22PcnscrWWrADHaRzrVWFMYT5o9 (nonce: 72254265000000) is granted to full access
  11. ed25519:HXHM2GTqDzCZnd7UQzPtL7VwcFfcm7n8Z8voo1ArE4Tr (nonce: 72263503000002) is granted to full access
  12. ed25519:HjzSeCGdWT15iSj2TybmKV2dZteu1VYYAaYvNYVNZY2W (nonce: 72253750000000) is granted to full access
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/TqhSdwjoc9PMxbLZtTWSnCRR5?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/TqhSdwjoc9PMxbLZtTWSnCRR5.png" width="836"/>
</a>
</details>

#### import-account - Import existing account (a.k.a. "sign in")

Для авторизации пользователя необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    import-account \
    network-config testnet
```

Вы будете перенаправлены браузер для авторизации. После успешной авторизации в _[NEAR Wallet](https://wallet.near.org/)_ необходимо вернуться в терминал и ввести имя пользователя.
<details><summary><i>Результат выполнения команды</i></summary>

```txt
The data for the access key is saved in a file /Users/frovolod/.near-credentials/testnet/fro_volod.testnet/ed25519_GicfpXn1Ebb71gkBAoXKsoU1Nwv2hBppiMexxSFRHjyM.json
The file: /Users/frovolod/.near-credentials/testnet/fro_volod.testnet.json already exists! Therefore it was not overwritten.
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/ham4fYGgVjOJq3U2gfwwySIvj?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/ham4fYGgVjOJq3U2gfwwySIvj.png" width="836"/>
</a>
</details>

#### create-account - Create a new account

- sponsor-by-linkdrop (Находится в разработке)
- sponsor-by-wallet (testnet only) (Находится в разработке)
- [fund-myself](#fund-myself---I-would-like-fund-myself-to-cover-the-cost-of-creating-an-account)
- [fund-later](#fund-later---Create-an-implicit-account)

#### fund-myself - I would like fund myself to cover the cost of creating an account

С помощью этой команды можно создать как суб-аккаунт, так и аккаунт с коротким именем, например, alice.near или alice.testnet (в сети testnet).  
Для создания суб-аккаунта необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    create-account fund-myself new.fro_volod.testnet '1 NEAR' \
    autogenerate-new-keypair \
    save-to-keychain \
    sign-as \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
New account <new.fro_volod.testnet> created successfully.
Transaction ID: DRT3EpCK9iT5APyGgfcgSoLPCLCYYKtnrVgDhGLDEZFo
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/DRT3EpCK9iT5APyGgfcgSoLPCLCYYKtnrVgDhGLDEZFo

The data for the access key is saved in a file /Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet/ed25519_3ngtirechhepHKrzfkdgqqtwqSMtdbSLR6N1c4ivnzu6.json 
The data for the access key is saved in a file "/Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet.json"
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/62q0BKhCtXV8hQ3sxDpnO1CQl?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/62q0BKhCtXV8hQ3sxDpnO1CQl.png" width="836"/>
</a>
</details>

Для создания аккаунта с коротким именем необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    create-account fund-myself new7.testnet '0.1 NEAR' \
    autogenerate-new-keypair \
    save-to-keychain \
    sign-as fro_volod.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
New account <new7.testnet> created successfully.
Transaction ID: GxZRjmYxZyo6X6Mn1kfuRJhfUnxsUVCiHZAZKqrLtR27
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/GxZRjmYxZyo6X6Mn1kfuRJhfUnxsUVCiHZAZKqrLtR27

The data for the access key is saved in a file "/Users/frovolod/.near-credentials/testnet/new7.testnet/ed25519_EX1qK1S1T4WxXJFLH7qZvKxnGQtcKfEEsiA4BNxAZ6mP.json"
The file: /Users/frovolod/.near-credentials/testnet/new7.testnet.json already exists! Therefore it was not overwritten.
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/MxmfDRdKPeP0VdXUiENmV2UXr?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/MxmfDRdKPeP0VdXUiENmV2UXr.png" width="836"/>
</a>
</details>

#### fund-later - Create an implicit-account

- [use-auto-generation](#use-auto-generation---Use-auto-generation-to-create-an-implicit-account)
- [use-ledger](#use-ledger---Use-ledger-to-create-an-implicit-account)

##### use-auto-generation - Use auto-generation to create an implicit account

Данная команда автоматически генерирует аккаунт с ключами доступа и сохраняет их в файле с именем _implicit-account-id_.
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    create-account \
    fund-later \
    use-auto-generation \
    save-to-folder /Users/frovolod/.near-credentials/implicit
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
The file "/Users/frovolod/.near-credentials/implicit/1573066d3fa7a2d56357aa5ddbc84295d94c61590390000981f5900b04e2f55f.json" was saved successfully
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/qPqMPP3tKwliWw2cu5vwCRfJi?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/qPqMPP3tKwliWw2cu5vwCRfJi.png" width="836"/>
</a>
</details>

##### use-ledger - Use ledger to create an implicit account

Данная команда с помощью леджера создает аккаунт с ключами доступа и сохраняет их в файле с именем _implicit-account-id_.
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    create-account \
    fund-later \
    use-ledger \
    save-to-folder /Users/frovolod/.near-credentials/implicit/ledger
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
The file "/Users/frovolod/.near-credentials/implicit/ledger/739c872c3057cd5d812c49345248b9fdd318c8ad33ace6cf0468109eae972c8e.json" was saved successfully
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/kL5x9MXNrlSZWS83YjVkxnsf7?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/kL5x9MXNrlSZWS83YjVkxnsf7.png" width="836"/>
</a>
</details>

#### delete-account - Delete an account

Данная команда предназначена для удаления текущего аккаунта. Важно помнить, что все средства удаляемого аккаунта перейдут на счет "_beneficiary_".
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    delete-account 2.fro_volod.testnet \
    beneficiary volodymyr.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
Account <2.fro_volod.testnet> has been successfully deleted.
Transaction ID: EHvB47npN8Z46qhsrw5XpKmD3n3jDn4MGiD85YSqw7cy
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/EHvB47npN8Z46qhsrw5XpKmD3n3jDn4MGiD85YSqw7cy
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/bicRQEA5bhRG6e7nKaF8ghzVm?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/bicRQEA5bhRG6e7nKaF8ghzVm.png" width="836"/>
</a>
</details>

#### list-keys - View a list of access keys of an account

Просмотр ключей доступа аккаунта возможен на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для просмотра списка ключей доступа необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    list-keys fro_volod.testnet \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Number of access keys: 14
   1. ed25519:2QFAeUutKUDpmgKDyHXm7Wcz1uhjxk92fK6zY2dB7FCD (nonce: 97492076000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   2. ed25519:3p1HbrTDYxY4q3V6QznW14qkuv3Bq1phFpCTsbrJpbEC (nonce: 94363284000000) is granted to full access
   3. ed25519:5UJE4PzyxECS42hBZSD1QQCLdq5j39vCtzshFPbnGdm1 (nonce: 73069087000002) is granted to full access
   4. ed25519:6YU78BezKwQNrz5vmtkSCALtx7cPDC1JBs9DhjeSJ39X (nonce: 97490513000000) is granted to only do [] function calls on v2.ref-farming.testnet with an allowance of 0.25 NEAR
   5. ed25519:7YCfA1KrToJtAYGTBgAMe4LWfQEi4iwLGcH2q5SvGKzD (nonce: 94982716000000) is granted to only do [] function calls on mintspace2.testnet with an allowance of 0.25 NEAR
   6. ed25519:95w5YFsJ3iktzDwRBWUGqLF6Gv5CoJuVifBjcEEdJs8s (nonce: 72253433000003) is granted to full access
   7. ed25519:9nyDySTNAGPywxC9pG4DPdnF3eEVexDgrfzZYsoahPsV (nonce: 76057805000000) is granted to full access
   8. ed25519:AEC4szaeNzT8PQAifsnisdivq4mwswJbBM65DdkT6kdS (nonce: 72263674000000) is granted to full access
   9. ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB (nonce: 72325441000021) is granted to full access
  10. ed25519:DZz4r5oLSBVcLuqFzSoLUEJ3Qv67cpgGbsRHy8SvbGiU (nonce: 72253481000000) is granted to full access
  11. ed25519:DyKmdLkWMqC1HFs6t6PfNhVemjQE16W2RNofWPpW5ZZh (nonce: 72325378000007) is granted to full access
  12. ed25519:EWoYxHNZHtApUfu1nTGC49XHW5dNinoDKABcauHnjevZ (nonce: 73069042000001) is granted to full access
  13. ed25519:EYtsL67TpgfpE1udnga2m41vDoBqeZ2DB32onhsxsVUb (nonce: 72251760000002) is granted to full access
  14. ed25519:G2U7aZ91pgG3TS96gCWov5L1DkNWSi3756RRkwuspZ4L (nonce: 72251684000002) is granted to full access
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/KVfcCCyj2dEHEm4TcDkjtiW6s?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/KVfcCCyj2dEHEm4TcDkjtiW6s.png" width="836"/>
</a>
</details>

#### add-key - Add an access key to an account

Выполним команду добавления новой пары ключей доступа аккаунту с такими условиями:
  - публичный ключ доступа будет введен вручную
  - ключи будут иметь полный доступ
  - транзакция будет подписана автоматически (при наличии файла с ключами доступа)

Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    add-key fro_volod.testnet \
    grant-full-access \
    use-manually-provided-public-key ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
Added access key = ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 to fro_volod.testnet.
Transaction ID: 2oVDKopcWphN3qrUoq7XjFMpRuCUjz6jSU327q8trAQ5
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/2oVDKopcWphN3qrUoq7XjFMpRuCUjz6jSU327q8trAQ5
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/H4BfrteW1ClAzrLcRx9m8gQAV?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/H4BfrteW1ClAzrLcRx9m8gQAV.png" width="836"/>
</a>
</details>

Изменим наши парамерты для добавления кючей доступа:
  - ключи будут сгенерированы автоматически
  - будут иметь функциональный доступ
  - транзакция будет подписана вручную

Для этого введем следующую команду:
```txt
./near-cli account \
    add-key fro_volod.testnet \
    grant-function-call-access \
        --allowance '1 NEAR' \
        --receiver-account-id 'meta.pool.testnet' \
        --method-names 'set_a, set_b' \
    autogenerate-new-keypair \
    save-to-keychain \
    network-config testnet \
    sign-with-plaintext-private-key \
        --signer-public-key ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB \
        --signer-private-key  ed25519:3UVo1GAatRz12iX3CRuKAuK3MPLDD9bPf4LXJD5DkHs13er3UeJLW7aRPAVsFQ2FjopUw6DEApEngac8FPtnnkYB \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
Added access key = ed25519:27R66L6yevyHbsk4fESZDC8QUQBwCdx6vvkk1uQmG7NY to fro_volod.testnet.
Transaction ID: DaJySrNtSUZU7KPyvfUMbh6xYi9vZeMvnj4Umo7ZzdB3
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/DaJySrNtSUZU7KPyvfUMbh6xYi9vZeMvnj4Umo7ZzdB3
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/h08oydOTq3njf6mt1FNRMHGVs?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/h08oydOTq3njf6mt1FNRMHGVs.png" width="836"/>
</a>
</details>

#### delete-key - Delete an access key from an account

Для удаления ключей доступа необходимо ввести в командной строке терминала:
```txt
./near-cli account \
    delete-key fro_volod.testnet \
    ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3 \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
Access key <ed25519:75a5ZgVZ9DFTxs4THtFxPtLj7AY3YzpxtapTQBdcMXx3> for account <fro_volod.testnet> has been successfully deleted.
Transaction ID: 6S7bJ76QNFypUvP7PCB1hkLM7X5GxPxP2gn4rnDHMzPz
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/6S7bJ76QNFypUvP7PCB1hkLM7X5GxPxP2gn4rnDHMzPz
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/IYaNEYcMHtmSe6zKc2L63Okph?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/IYaNEYcMHtmSe6zKc2L63Okph.png" width="836"/>
</a>
</details>

### tokens - Manage token assets such as NEAR, FT, NFT
- [send-near](#send-near---The-transfer-is-carried-out-in-NEAR-tokens)
- [send-ft](#send-ft---The-transfer-is-carried-out-in-FT-tokens)
- [send-nft](#send-nft---The-transfer-is-carried-out-in-NFT-tokens)
- [view-near-balance](#view-near-balance---View-the-balance-of-Near-tokens)
- [view-ft-balance](#view-ft-balance---View-the-balance-of-FT-tokens)
- [view-nft-assets](#view-nft-assets---View-the-balance-of-NFT-tokens)

#### send-near - The transfer is carried out in NEAR tokens

Данная команда служит для перевода средств NEAR токенах между аккаунтами. Обратите внимание, что количество пересылаемых токенов указывается совместно с размерной единицей (это NEAR либо yoctoNEAR).
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-near volodymyr.testnet 0.1NEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
<fro_volod.testnet> has transferred 0.1 NEAR to <volodymyr.testnet> successfully.
Transaction ID: 8BbB674VDxeg36egMzdHFsCUExpkLWAWeYqEfd9u9ZaD
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/8BbB674VDxeg36egMzdHFsCUExpkLWAWeYqEfd9u9ZaD
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/U1pNSHZw812e4BHvnFGpefVs4?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/U1pNSHZw812e4BHvnFGpefVs4.png" width="836"/>
</a>
</details>

#### send-ft - The transfer is carried out in FT tokens

Данная команда служит для перевода средств в FT токенах между аккаунтами. Обратите внимание, что количество пересылаемых токенов указывается в безразмерных единицах.
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-ft usdn.testnet volodymyr.testnet 10000000000000000000 \
        --prepaid-gas 100.000TeraGas \
        --attached-deposit 1yoctoNEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
The "ft_transfer" call to <usdn.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 5a7YmANdpimiqUm6WC6n4dd91b6A9PafNNhad8HWKugN
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/5a7YmANdpimiqUm6WC6n4dd91b6A9PafNNhad8HWKugN
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/uvZGcJUpufJZdB10GsQlfXwW1?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/uvZGcJUpufJZdB10GsQlfXwW1.png" width="836"/>
</a>
</details>

#### send-nft - The transfer is carried out in NFT tokens

Данная команда служит для перевода средств в NFT токенах между аккаунтами.
Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    send-nft paras-token-v2.testnet volodymyr.testnet 1604:4 \
        --prepaid-gas 100.000TeraGas \
        --attached-deposit 1yoctoNEAR \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
The "nft_transfer" call to <paras-token-v2.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 9q2VbakZbj5ja6GAFXpFnbtbYHijEHyT7Ry34GQ6cvLB
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/9q2VbakZbj5ja6GAFXpFnbtbYHijEHyT7Ry34GQ6cvLB
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/iFXW6ryGQSdsWML0c3qAw3qGY?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/iFXW6ryGQSdsWML0c3qAw3qGY.png" width="836"/>
</a>
</details>

#### view-near-balance - View the balance of Near tokens

Просмотр баланса аккаунта возможен на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для просмотра средств в NEAR токенах на счету аккаунта необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-near-balance \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
fro_volod.testnet account has 169.589001320890476999999994 NEAR available for transfer (the total balance is 172.482461320890476999999994 NEAR, but 2.89246 NEAR is locked for storage and the transfer transaction fee is ~0.001 NEAR)
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/lKGalzAxt3zCSxOsreqdykO8X?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/lKGalzAxt3zCSxOsreqdykO8X.png" width="836"/>
</a>
</details>

#### view-ft-balance - View the balance of FT tokens

Просмотр баланса аккаунта возможен на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для просмотра средств в FT токенах на счету аккаунта необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-ft-balance usdn.testnet \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
fro_volod.testnet account has "31942967677775774595" FT tokens (FT-contract: usdn.testnet)
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/k7Bz5r20x2Bo5RIX7Q1VnpNZC?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/k7Bz5r20x2Bo5RIX7Q1VnpNZC.png" width="836"/>
</a>
</details>

#### view-nft-assets - View the balance of NFT tokens

Просмотр баланса аккаунта возможен на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для просмотра средств в NFT токенах на счету аккаунта необходимо ввести в командной строке терминала:
```txt
./near-cli tokens \
    fro_volod.testnet \
    view-nft-assets paras-token-v2.testnet \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
fro_volod.testnet account has NFT tokens:
[
  {
    "approved_account_ids": {},
    "metadata": {
      "copies": 100,
      "description": null,
      "expires_at": null,
      "extra": null,
      "issued_at": "1657613801537412611",
      "media": "bafybeib65t37t2tagukok4m7f5rldfirzb5ykvdq3yqbwnbcrtllpggg6u",
      "media_hash": null,
      "reference": "bafkreidmbv4j2qylxc2mngsup7cxakw7gwyd7lu2zycznrdtqw4kc52cwu",
      "reference_hash": null,
      "starts_at": null,
      "title": "Apollo42 #01 #4",
      "updated_at": null
    },
    "owner_id": "fro_volod.testnet",
    "token_id": "1604:4"
  }
]
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/znmY5yzIlSTjOlRRRUHzeeuzJ?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/znmY5yzIlSTjOlRRRUHzeeuzJ.png" width="836"/>
</a>
</details>

### contract - Manage smart-contracts: deploy code, call functions

- [call-function](#call-function---Execute-function-contract-method)
- [deploy](#deploy---Add-a-new-contract-code)
- [download-wasm](#download-wasm---Download-wasm)

#### call-function - Execute function (contract method)

- [as-read-only](#as-read-only---Calling-a-view-method)
- [as-transaction](#as-transaction---Calling-a-change-method)

##### as-read-only - Calling a view method

Просмотр данных возможен на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli contract \
    call-function \
    as-read-only zavodil.poolv1.near get_accounts \
    json-args '{"from_index": 0, "limit": 3}' \
    network-config mainnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
[
  {
    "account_id": "zavodil.near",
    "can_withdraw": false,
    "staked_balance": "107480661091559500516766891",
    "unstaked_balance": "1307739180247557404925470405"
  },
  {
    "account_id": "gagdiez.near",
    "can_withdraw": true,
    "staked_balance": "4387193990112136827894210960",
    "unstaked_balance": "1"
  },
  {
    "account_id": "gibby49.near",
    "can_withdraw": true,
    "staked_balance": "1105950300133283278041226",
    "unstaked_balance": "1"
  }
]
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/OHhdlJEaoA4nLJSDtybgc7kCR?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/OHhdlJEaoA4nLJSDtybgc7kCR.png" width="836"/>
</a>
</details>

##### as-transaction - Calling a change method

Для выполнения этой команды необходимо ввести в командной строке терминала:
```txt
./near-cli contract \
    call-function \
    as-transaction turbo.volodymyr.testnet rate \
    json-args '{"other_user":"volodymyr.testnet", "vote":5}' \
    prepaid-gas '3 Tgas' \
    attached-deposit '1 NEAR' \
    sign-as fro_volod.testnet \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
The "rate" call to <turbo.volodymyr.testnet> on behalf of <fro_volod.testnet> succeeded.
Transaction ID: 7RuoSAdCctSEw63GKsfQJg1YXRzH3msUCo4oygzauPko
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/7RuoSAdCctSEw63GKsfQJg1YXRzH3msUCo4oygzauPko
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/S6LHwINBHskznxMrJPHzUmgxM?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/S6LHwINBHskznxMrJPHzUmgxM.png" width="836"/>
</a>
</details>

#### deploy - Add a new contract code

Для добавления нового контракта необходимо ввести в командной строке терминала:
```txt
./near-cli contract \
    deploy \
    262.volodymyr.testnet \
    use-file /Users/frovolod/Documents/NEAR/rust-counter/contract/target/wasm32-unknown-unknown/release/rust_counter_tutorial.wasm \
    with-init-call increment {} \
        --prepaid-gas '1 TGas' \
        --attached-deposit '0 NEAR' \
    network-config testnet \
    sign-with-keychain \
    send
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction sent ...
Successful transaction
Contract code has been successfully deployed.
The "increment" call to <262.volodymyr.testnet> on behalf of <262.volodymyr.testnet> succeeded.
Transaction ID: 4YGGhF88aevNGpF5uaXNGHfQprHRqkia7eTpyxegJVms
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/4YGGhF88aevNGpF5uaXNGHfQprHRqkia7eTpyxegJVms
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/7KD9gM9tj2AWtgGpjUmytkPg9?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/7KD9gM9tj2AWtgGpjUmytkPg9.png" width="836"/>
</a>
</details>

#### download-wasm - Download wasm

Скачать файл контракта возможно на текущий момент времени (***now***) и на определеный момент в прошлом, указав блок (***at-block-height*** или ***at-block-hash***).  
Примеры использования этих параметров рассмотрены в разделе [View properties for an account](#view-account-summary---view-properties-for-an-account).

Для получения файла контракта необходимо ввести в командной строке терминала:

```txt
./near-cli contract \
    download-wasm 262.volodymyr.testnet \
    to-folder /Users/frovolod/Downloads \
    network-config testnet \
    now
```

<details><summary><i>Результат выполнения команды</i></summary>
```txt
The file "/Users/frovolod/Downloads/contract_262_volodymyr_testnet.wasm" was downloaded successfully
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/2UbeTzLJq16qtCUR015wuRFmN?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/2UbeTzLJq16qtCUR015wuRFmN.png" width="836"/>
</a>
</details>

### transaction - Operate transactions

- [view-status](#view-status---View-a-transaction-status)
- [construct-transaction](#construct-transaction---Construct-a-new-transaction)

#### view-status - View a transaction status

Для просмотра статуса желаемой транзакции необходимо ввести в командной строке терминала её хэш:
```txt
./near-cli transaction \
    view-status GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank \
    volodymyr.testnet \
    network-config testnet
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Transaction status: FinalExecutionOutcomeWithReceiptView {
    final_outcome: FinalExecutionOutcome {
        status: SuccessValue(``),
        transaction: SignedTransactionView {
            signer_id: AccountId(
                "volodymyr.testnet",
            ),
            public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
            nonce: 165,
            receiver_id: AccountId(
                "qweqweqwe.volodymyr.testnet",
            ),
            actions: [
                CreateAccount,
                Transfer {
                    deposit: 100000000000000000000000000,
                },
                AddKey {
                    public_key: ed25519:AgVv8qjZ7yix3pTo7BimT1zoDYUSTGcg73RBssC5JMRf,
                    access_key: AccessKeyView {
                        nonce: 0,
                        permission: FullAccess,
                    },
                },
            ],
            signature: ed25519:266jBRjvnaxe4mDyHRGwv3TJesvgRo2umJBqkZU26fRwmhVHciu3tBSLqRZFjEuqLTiwDTrFvfxpJ8Sbd2PqHHhv,
            hash: `GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank`,
        },
        transaction_outcome: ExecutionOutcomeWithIdView {
            proof: [],
            block_hash: `AQH6jDqqxpBYj5NSZv3Skg5hUZQRsn16jvDuphCTugSQ`,
            id: `GDoinMecpvnqahzJz9tXLxYycznL4cAoxKTPEnJZ3ank`,
            outcome: ExecutionOutcomeView {
                logs: [],
                receipt_ids: [
                    `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
                ],
                gas_burnt: 424555062500,
                tokens_burnt: 42455506250000000000,
                executor_id: AccountId(
                    "volodymyr.testnet",
                ),
                status: SuccessReceiptId(5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh),
                metadata: ExecutionMetadataView {
                    version: 1,
                    gas_profile: None,
                },
            },
        },
        receipts_outcome: [
            ExecutionOutcomeWithIdView {
                proof: [],
                block_hash: `DBUpiLVVDBQwSAPU8ZTE8KQnX5skDD1dTsBjJQ8kV24R`,
                id: `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
                outcome: ExecutionOutcomeView {
                    logs: [],
                    receipt_ids: [
                        `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
                    ],
                    gas_burnt: 424555062500,
                    tokens_burnt: 42455506250000000000,
                    executor_id: AccountId(
                        "qweqweqwe.volodymyr.testnet",
                    ),
                    status: SuccessValue(``),
                    metadata: ExecutionMetadataView {
                        version: 1,
                        gas_profile: None,
                    },
                },
            },
            ExecutionOutcomeWithIdView {
                proof: [],
                block_hash: `BSjrH3WyKnXhD17drR94YfM725Ho59us9N4msXrrgHEw`,
                id: `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
                outcome: ExecutionOutcomeView {
                    logs: [],
                    receipt_ids: [],
                    gas_burnt: 0,
                    tokens_burnt: 0,
                    executor_id: AccountId(
                        "volodymyr.testnet",
                    ),
                    status: SuccessValue(``),
                    metadata: ExecutionMetadataView {
                        version: 1,
                        gas_profile: None,
                    },
                },
            },
        ],
    },
    receipts: [
        ReceiptView {
            predecessor_id: AccountId(
                "volodymyr.testnet",
            ),
            receiver_id: AccountId(
                "qweqweqwe.volodymyr.testnet",
            ),
            receipt_id: `5DmuFwQaiSbEDiR7dx6sDurjyDyF92c1tK7gfN7bXqPh`,
            receipt: Action {
                signer_id: AccountId(
                    "volodymyr.testnet",
                ),
                signer_public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
                gas_price: 103000000,
                output_data_receivers: [],
                input_data_ids: [],
                actions: [
                    CreateAccount,
                    Transfer {
                        deposit: 100000000000000000000000000,
                    },
                    AddKey {
                        public_key: ed25519:AgVv8qjZ7yix3pTo7BimT1zoDYUSTGcg73RBssC5JMRf,
                        access_key: AccessKeyView {
                            nonce: 0,
                            permission: FullAccess,
                        },
                    },
                ],
            },
        },
        ReceiptView {
            predecessor_id: AccountId(
                "system",
            ),
            receiver_id: AccountId(
                "volodymyr.testnet",
            ),
            receipt_id: `851GMnZZ5FJ2aDSHM34N99yVb1ZkwY8n7F8rUcvuRpUU`,
            receipt: Action {
                signer_id: AccountId(
                    "volodymyr.testnet",
                ),
                signer_public_key: ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS,
                gas_price: 0,
                output_data_receivers: [],
                input_data_ids: [],
                actions: [
                    Transfer {
                        deposit: 1273665187500000000,
                    },
                ],
            },
        },
    ],
}
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/xf69gJEha7yO27E27CZszkN97?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/xf69gJEha7yO27E27CZszkN97.png" width="836"/>
</a>
</details>

#### construct-transaction - Construct a new transaction
  
Рассмотрим пример, когда необходимо выполнить несколько действий в рамках одной транзакции:
1. Создать аккаунт
2. Добавить созданному аккаунту ключи доступа
3. Осуществить перевод токенов на созданный аккаунт

Для этого воспользуемся конструктором транзакции:

<details><summary>Construct a new transaction (демонстрация работы команды)</summary>
<a href="https://asciinema.org/a/WNbxN1GB861q2sBbiKbQyVl3S?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/WNbxN1GB861q2sBbiKbQyVl3S.png" width="836"/>
</a>
</details>

### config - Manage connections in a configuration file

- [show-connections](#show-connections---Show-a-list-of-network-connections)
- [add-connection](#add-connection---Add-a-network-connection)
- [delete-connection](#delete-connection---Delete-a-network-connection)

#### show-connections - Show a list of network connections

Для просмотра данных конфигурационного файла (_config.toml_) можно воспользоваться интерактивным режимом либо ввести в командной строке терминала:
```txt
./near-cli config show-connections
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
credentials_home_dir = "/Users/frovolod/.near-credentials"
[networks.mainnet]
network_name = "mainnet"
rpc_url = "https://archival-rpc.mainnet.near.org/"
wallet_url = "https://wallet.mainnet.near.org/"
explorer_transaction_url = "https://explorer.mainnet.near.org/transactions/"
linkdrop_account_id = "near"

[networks.testnet]
network_name = "testnet"
rpc_url = "https://archival-rpc.testnet.near.org/"
wallet_url = "https://wallet.testnet.near.org/"
explorer_transaction_url = "https://explorer.testnet.near.org/transactions/"
linkdrop_account_id = "testnet"

[networks.shardnet]
network_name = "shardnet"
rpc_url = "https://rpc.shardnet.near.org/"
wallet_url = "https://wallet.shardnet.near.org/"
explorer_transaction_url = "https://explorer.shardnet.near.org/transactions/"
linkdrop_account_id = "shardnet"

[networks.pagoda-testnet]
network_name = "pagoda-testnet"
rpc_url = "https://near-testnet.api.pagoda.co/rpc/v1/"
rpc_api_key = "x-api-key: c0a25b3c-39c2-4f62-a621-50e208b88e64"
wallet_url = "https://wallet.testnet.near.org/"
explorer_transaction_url = "https://explorer.testnet.near.org/transactions/"
linkdrop_account_id = "testnet"
```
</details>

#### add-connection - Add a network connection

Для добавления данных о сети в конфигурационный файл (_config.toml_) можно воспользоваться интерактивным режимом либо ввести в командной строке терминала:
```txt
./near-cli config \
    add-connection \
        --network-name pagoda-testnet \
        --connection-name pagoda-testnet \
        --rpc-url https://near-testnet.api.pagoda.co/rpc/v1/ \
        --wallet-url https://wallet.testnet.near.org/ \
        --explorer-transaction-url https://explorer.testnet.near.org/transactions/ \
        --rpc-api-key 'c0a25b3c-39c2-4f62-a621-50e208b88e64' \
        --linkdrop-account-id testnet
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
Network connection "pagoda-testnet" was successfully added to config.toml
```
</details>

<details><summary><i>Демонстрация работы команды в интерактивном режиме</i></summary>
<a href="https://asciinema.org/a/49s6yuDmxQyaA2XgEqlBC6cpN?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/49s6yuDmxQyaA2XgEqlBC6cpN.png" width="836"/>
</a>
</details>

#### delete-connection - Delete a network connection

Для удаления сети из конфигурационного файла (_config.toml_) можно воспользоваться интерактивным режимом либо ввести в командной строке терминала:
```txt
./near-cli config delete-connection pagoda-testnet
```

<details><summary><i>Результат выполнения команды</i></summary>

```txt
Configuration data is stored in a file "/Users/frovolod/Library/Application Support/near-cli/config.toml"
Network connection "pagoda-testnet" was successfully removed from config.toml
```
</details>

'''
'''--- NEARCLI/docs/NEW_NEAR_CLI_INTERFACE.md ---
# New NEAR CLI interface

NEAR CLI is built for:
- **NEAR dApp developers**, who build smart-contracts, UIs, and tooling on NEAR.
- **Tech-savvy people** automating their routines.
- **Validators**

NEAR CLI is using extensions to satisfy all groups of users.
- **Core NEAR CLI** commands should be usefull for all groups of users.
- **Extensions** are used by a particular group or several groups of users.
- **Core NEAR CLI** is a single binary, there is no extensions that are installed *by default*.
- Each extension is a separate binary that can be installed and executed from **NEAR CLI**.
- **Core NEAR CLI** extensions system only allows to introduce top-level commands through its design.

NEAR CLI UX principles:
- All altering actions should have a confirmation step with an option to skip confirmation with an explicit command line parameter (e.g. `send` at the end of the command)
- All direct children commands of a single parent command should be aligned (either represent an action or a resource, but never a mix of those on the same hierarchy level): `contract` -> `state` (resource) and `contract` -> `deploy` (action) are not aligned, so it should be either `contract` -> `get-state` + `contract` -> `deploy` or `contract` -> `state` -> `view` + `contract` -> `code` -> `deploy`
- Interactive mode should look like: `command - description`. It will help people to learn the commands.

## Core NEAR CLI commands

```
account
  - view-account-summary <account-id> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>

  - create-account
    How do you cover the costs of account creation?
    - sponsor-by-linkdrop (mainnet)
    - sponsor-by-... (mainnet)
    - sponsor-by-wallet (testnet only)
    - fund-myself <new-account-id> <initial-balance>
      - autogenerate-new-keypair
        - save-to-keychain network <"mainnet"|"testnet"|...>
          - transaction signature options here (see below)
        - print-to-terminal network <"mainnet"|"testnet"|...>
          - transaction signature options here (see below)
      - use-manually-provided-seed-prase "twelve words goes here" network <"mainnet"|"testnet"|...>
        - transaction signature options here (see below)
      - use-manually-provided-public-key "ed25519:..." network <"mainnet"|"testnet"|...>
        - transaction signature options here (see below)
    - fund-later <initial-balance>  (implicit account creation)

  - import-account (a.k.a "log in" / "sign in")
    - using-web-wallet network-config <"mainnet"|"testnet">
    - using-seed-phrase <seed-phrase> --hd-path "m/44'/397'/0'" network-config <"mainnet"|"testnet">
    - using-private-key <private-key> network-config <"mainnet"|"testnet">

  - delete-account <account-id> beneficiary <beneficiary-account-id> network <"mainnet"|"testnet"|...>
    - transaction signature options here (see below)

  - list-keys <account-id> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>

  - add-key <account-id>
    - grant-full-access
      - autogenerate-new-keypair
        - save-to-keychain network <"mainnet"|"testnet"|...>
          - transaction signature options here (see below)
        - print-to-terminal network <"mainnet"|"testnet"|...>
          - transaction signature options here (see below)
      - use-manually-provided-seed-phrase "twelve words goes here" network <"mainnet"|"testnet"|...>
        - transaction signature options here (see below)
      - use-manually-provided-public-key "ed25519:..." network <"mainnet"|"testnet"|...>
        - transaction signature options here (see below)
    - grant-function-call-access --receiver-account-id <account-id> --method-names 'comma,separated,list' --allowance '0.25NEAR'
      - (use the same follow-up parameters as for `grant-full-access`)

  - delete-key <account-id> <public-key> network <"mainnet"|"testnet"|...>
    - transaction signature options here (see below)

```

```
contract
  - call-function
    - as-read-only <account-id> <function-name> <function-args> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>
    - as-transaction <account-id> <function-name> <function-args> --prepaid-gas <prepaid-gas> --attached-deposit <deposit-amount> network <"mainnet"|"testnet"|...>
      - transaction signature options here (see below)

  - deploy <account-id> use-file <path-to-wasm-file>

    - with-init-call <function-name> <function-args> --prepaid-gas <prepaid-gas> --attached-deposit <deposit-amount>
      - transaction signature options here (see below)
    - without-init-call
      - transaction signature options here (see below)

  - download-wasm <account-id> to-folder <path-to-download-folder> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>
```

```
tokens <owner-account-id>
  - send-near <receiver-account-id> <amount-in-NEAR> network <"mainnet"|"testnet"|...>
    - transaction signature options here (see below)

  - send-ft <ft-contract-account-id> <receiver-account-id> <amount-in-fungible-tokens> network <"mainnet"|"testnet"|...>
    - transaction signature options here (see below)

  - send-nft <nft-contract-account-id> <receiver-account-id> <token-id> network <"mainnet"|"testnet"|...>
    - transaction signature options here (see below)

  - view-near-balance network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>

  - view-ft-balance <ft-contract-account-id> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>

  - view-nft-assets <nft-contract-account-id> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>
```

```
transaction
  - view-status <transaction-hash> <signer-account-id> network <"mainnet"|"testnet"|...>

  - construct-transaction (TODO: keep the current command structure for now)
```

```
extensions
(WIP)
  - explore
  - install
  - list-installed
  - uninstall
```

```
config
(WIP)
  - connections
    - show-selected
    - select <connection-name>
    - list
    - add <connection-name> <> <network-name>  <url1> <url1> <...>
    - delete <connection-name>
  - cli
    - set <parameter> <value>
    - get <parameter>
```

```
local-keys
(WIP: maybe merge into the `account` command)
  - add-using
    - near-wallet
    - seed-phrase <seed-phrase>
    - ledger
    - private-key <private-key>
  - generate
```

Transaction signature options:
  * `sign-with-macos-keychain`
  * `sign-with-keychain`
  * `sign-with-ledger`
  * `sign-with-access-key-file <path.json>`
  * `sign-with-seed-phrase <seed-phrase> --hd-path "m/44'/397'/0'"`
  * `sign-with-plaintext-private-key "ed25519:..."`

### Top-level `Core NEAR CLI` flags
```txt
--verbose (print all available error info)
--json (show answer in json format)
--scripting (turn off interactive mode)
```

## Extensions
Extensions design is a work in progress. They are here mostly to show that we haven't forgotten about particular functionality and that this functionality will not be a part of `Core NEAR CLI`.

### `developer` extension
```txt
- dev-deploy-code <wasm-file>
- inspect-storage <account-id> key-prefix <storage-key-prefix> network <"mainnet"|"testnet"|...> <now|at-timestamp|at-block-height|at-block-hash>
- ...
```

### `explorer` extension
```txt
- get-recent-block-hash
- get-transaction-status <transaction-hash>
- get-epoch-status <epoch>
- ...
```

### `transaction-constructor` extension
```txt
- constract-transaction
- sign-transaction-with-private-key
- combine-unsigned-transaction-with-signature
- sign-transaction-with-ledger
- send-signed-transaction
- deserialize-bytes-from-base64
- ...
```

### `staking-for-delegators` extension
```txt
- make-new-stake-proposal
- stake
- unstake
- ...
```

### `validators` extension
```txt
- stake
- validators
- proposals
- ...
```

### Other extensions
- `NFT`
- `FT`
- `lockup`
- `multisig`

'''
'''--- NEARCLI/docs/README.en.md ---
near-cli
--------
near-cli is a command line utility for working with the Near Protocol blockchain.

## README.md

* ru [Русский](README.ru.md)

## Documentation quick links

- [Usage](#usage)
- [Installation](#installation)
- [User Guide](#user-guide)
- [Config](#config)
- [Building](#building)

## Usage

In general, it is difficult for a beginner to immediately understand how commands work.  
For example, I consider having the following command to do a transfer:
```txt
./near-cli tokens \
    'volodymyr.testnet' \
    send-near \
    'fro_volod.testnet' \
    '1 NEAR' \
    network testnet \
    sign-with-keychain \
    send
```
This is the complete version of the command. The result of this command will be as follows:
```txt
Successful transaction
<volodymyr.testnet> has transferred 1 NEAR to <fro_volod.testnet> successfully.
Transaction ID: G4t6Sgz2FjnNpruYjPP1ZJAKfRmBffVaqmj8Nup2TaAg
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/G4t6Sgz2FjnNpruYjPP1ZJAKfRmBffVaqmj8Nup2TaAg
```
Typing this or another command manually, you can make a mistake or forget the sequence of the command.  
It is not a problem. `--help` will tell you how to build a command properly.  
However, using _near-cli_, you can press _Enter_ anywhere in the command line and the interactive mode of the program will continue to compose the command from the place where you finished entering the necessary parameters.

<details><summary><i>Demonstration of the utility with a partially recruited command</i></summary>
<a href="https://asciinema.org/a/AfxLN1QtJi1z1qXuowTj2nDw2?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/AfxLN1QtJi1z1qXuowTj2nDw2.png" width="836"/>
</a>
</details>

## Installation

At this stage of the development of the utility, installation of the program is not required.  
It is enough to [download](https://github.com/FroVolod/near-cli/releases/) the archive file suitable for your operating system installed on the computer and unzip it.  
The resulting directory contains the executable file _near-cli_, which is accompanied by detailed [user guide](GUIDE.en.md).

## User Guide

Detailed user guide is available in the file [GUIDE.en.md](GUIDE.en.md).

## Config

The directory with access keys and available connection networks are defined in the configuration file (`near-cli/config.toml`), which is located depending on the operating system in the following places:

- macOS: `$HOME/Library/Application Support` (e.g. `/Users/Alice/Library/Application Support`)
- Linux: `$XDG_CONFIG_HOME` or `$HOME/.config` (e.g. `/home/alice/.config`)
- Windows: `{FOLDERID*RoamingAppData}` (e.g. `C:\Users\Alice\AppData\Roaming`)

You can learn more about working with the configuration file [here](GUIDE.en.md#config---manage-connections-in-a-configuration-file).

## Building

_near-cli_ is written in Rust, so you'll need to grab a
[Rust installation](https://www.rust-lang.org/) in order to compile it.
_near-cli_ compiles with Rust 1.64.0 (stable) or newer. In general, _near-cli_ tracks the latest stable release of the Rust compiler.

To build _near-cli_:

```txt
$ git clone https://github.com/near/near-cli-rs.git
$ cd near-cli-rs
$ cargo build --release
$ ./target/release/near-cli --version
near-cli 0.2.0
```

'''
'''--- NEARCLI/docs/README.ru.md ---
near-cli
--------
_near-cli_ – это утилита командной строки для работы с блокчейном Near Protocol.

## README.md

- en [English](README.en.md)

## Оглавление

- [Применение](#применение)
- [Установка](#установка)
- [Инструкция](#инструкция)
- [Конфигурационный файл](#конфигурационный-файл)
- [Сборка](#сборка)

## Применение

Вцелом новичку трудно сразу разобраться как устроены команды.  
Например, для осуществления перевода токенов необходимо набрать в терминале такую команду:

```txt
./near-cli tokens \
    'volodymyr.testnet' \
    send-near \
    'fro_volod.testnet' \
    '1 NEAR' \
    network testnet \
    sign-with-keychain \
    send
```

Это полная команда. Результат ее работы будет такой:

```txt
Successful transaction
<volodymyr.testnet> has transferred 1 NEAR to <fro_volod.testnet> successfully.
Transaction ID: G4t6Sgz2FjnNpruYjPP1ZJAKfRmBffVaqmj8Nup2TaAg
To see the transaction in the transaction explorer, please open this url in your browser:
https://explorer.testnet.near.org/transactions/G4t6Sgz2FjnNpruYjPP1ZJAKfRmBffVaqmj8Nup2TaAg
```

Набирая эту или другую команду вручную, Вы можете допустить ошибку, либо забыть последовательность набора команды.  
Не проблема, `--help` подскажет как правильно выстроить команду.  
Однако, используя _near-cli_, Вы __в любом месте набора команды__ можете нажать Enter и интерактивный режим программы продолжит работу по составлению команды с того места, где Вы закончили вводить необходимые параметры.

<details><summary><i>Демонстрация работы утилиты с частично набранной командой</i></summary>
<a href="https://asciinema.org/a/AfxLN1QtJi1z1qXuowTj2nDw2?autoplay=1&t=1&speed=2">
    <img src="https://asciinema.org/a/AfxLN1QtJi1z1qXuowTj2nDw2.png" width="836"/>
</a>
</details>

## Установка

На данном этапе разработки утилиты установка программы не требуется.  
Достаточно [загрузить](https://github.com/FroVolod/near-cli/releases/) архивный файл, подходящий к Вашей операциой системе, установленной на компьютере, и разархивировать его.  
В полученном каталоге находится исполняемый файл _near-cli_, к которому прилагается [подробная инструкция для пользователя](GUIDE.ru.md).  
Если необходимо скомпилировать CLI из исходного кода, перейдите к разделу [Сборка](#сборка).

## Инструкция

Подробная инструкция доступна в файле [GUIDE.ru.md](GUIDE.ru.md).

## Конфигурационный файл

Каталог с ключами доступа и доступные сети подключения определены в конфигурационном файле (`near-cli/config.toml`), который находится в зависимости от операциооной системы в следующих местах:

- macOS: `$HOME/Library/Application Support` (например, `/Users/Alice/Library/Application Support`)
- Linux: `$XDG_CONFIG_HOME` или `$HOME/.config` (например, `/home/alice/.config`)
- Windows: `{FOLDERID*RoamingAppData}` (например, `C:\Users\Alice\AppData\Roaming`)

Подробнее о работе с конфигурационным файлом можно ознакомиться [здесь](GUIDE.ru.md#config---manage-connections-in-a-configuration-file).

## Сборка

_near-cli_ написан на Rust. Поэтому необходимо
[установить Rust](https://www.rust-lang.org/) для компиляции программы.
_near-cli_ компилируется на версии Rust 1.64.0 (stable) или новее.

Сборка _near-cli_:

```txt
$ git clone https://github.com/near/near-cli-rs.git
$ cd near-cli-rs
$ cargo build --release
$ ./target/release/near-cli --version
near-cli 0.2.0
```

'''
'''--- NEARCLI/docs/media/create-account.svg ---
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1870" height="564.46"><rect width="1870" height="564.46" rx="0" ry="0" class="a"/><svg height="564.46" viewBox="0 0 187 56.446" width="1870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><style>@keyframes j{0%{transform:translateX(0)}.02%{transform:translateX(-187px)}.03%{transform:translateX(-374px)}3.58%{transform:translateX(-561px)}3.76%{transform:translateX(-748px)}6.13%{transform:translateX(-935px)}6.93%{transform:translateX(-1122px)}9.32%{transform:translateX(-1309px)}9.37%{transform:translateX(-1496px)}14.19%{transform:translateX(-2057px)}17.09%{transform:translateX(-2431px)}17.93%{transform:translateX(-2805px)}19.81%{transform:translateX(-3179px)}23.95%{transform:translateX(-3553px)}28.95%{transform:translateX(-3740px)}30.81%{transform:translateX(-3927px)}31.06%{transform:translateX(-4114px)}34.41%{transform:translateX(-4301px)}37.94%{transform:translateX(-7480px)}41.09%{transform:translateX(-7667px)}41.1%{transform:translateX(-7854px)}46.74%{transform:translateX(-8041px)}48.02%{transform:translateX(-8228px)}48.23%{transform:translateX(-8415px)}48.45%{transform:translateX(-8602px)}48.66%{transform:translateX(-8789px)}48.88%{transform:translateX(-8976px)}52.3%{transform:translateX(-9163px)}52.71%{transform:translateX(-9350px)}54.88%{transform:translateX(-9724px)}61.44%{transform:translateX(-10098px)}64.12%{transform:translateX(-10472px)}65.98%{transform:translateX(-11033px)}68.94%{transform:translateX(-11220px)}71.48%{transform:translateX(-11594px)}73.6%{transform:translateX(-11968px)}75.96%{transform:translateX(-12342px)}76.7%{transform:translateX(-12903px)}81.22%{transform:translateX(-13090px)}90.5%{transform:translateX(-13277px)}90.51%{transform:translateX(-14025px)}to{transform:translateX(-14212px)}}.a{fill:#282d35}.c{fill:#b9c0cb;white-space:pre}.d{fill:#a8cc8c}.d,.e,.f,.g,.l{white-space:pre}.e{fill:#b9c0cb;font-weight:700}.f,.g,.l{fill:#6f7783}.g,.l{fill:#dbab79}.l{fill:#66c2cd}</style><g font-family="Monaco,Consolas,Menlo,'Bitstream Vera Sans Mono','Powerline Symbols',monospace" font-size="1.67"><defs><symbol id="1"><text y="1.67" class="c">The</text><text x="4.008" y="1.67" class="c">default</text><text x="12.024" y="1.67" class="c">interactive</text><text x="24.048" y="1.67" class="c">shell</text><text x="30.06" y="1.67" class="c">is</text><text x="33.066" y="1.67" class="c">now</text><text x="37.074" y="1.67" class="c">zsh.</text></symbol><symbol id="2"><text y="1.67" class="c">To</text><text x="3.006" y="1.67" class="c">update</text><text x="10.02" y="1.67" class="c">your</text><text x="15.03" y="1.67" class="c">account</text><text x="23.046" y="1.67" class="c">to</text><text x="26.052" y="1.67" class="c">use</text><text x="30.06" y="1.67" class="c">zsh,</text><text x="35.07" y="1.67" class="c">please</text><text x="42.084" y="1.67" class="c">run</text><text x="46.092" y="1.67" class="c">`chsh</text><text x="52.104" y="1.67" class="c">-s</text><text x="55.11" y="1.67" class="c">/bin/zsh`.</text></symbol><symbol id="3"><text y="1.67" class="c">For</text><text x="4.008" y="1.67" class="c">more</text><text x="9.018" y="1.67" class="c">details,</text><text x="18.036" y="1.67" class="c">please</text><text x="25.05" y="1.67" class="c">visit</text><text x="31.062" y="1.67" class="c">https://support.apple.com/kb/HT208050.</text></symbol><symbol id="4"><text y="1.67" class="c">bash-3.2$</text></symbol><symbol id="5"><text y="1.67" class="c">bash-3.2$</text><text x="10.02" y="1.67" class="c">./near-cli</text></symbol><symbol id="6"><text x="2.004" y="1.67" class="c">config</text><text x="14.028" y="1.67" class="c">-</text><text x="16.032" y="1.67" class="c">Manage</text><text x="23.046" y="1.67" class="c">connections</text><text x="35.07" y="1.67" class="c">in</text><text x="38.076" y="1.67" class="c">a</text><text x="40.08" y="1.67" class="c">configuration</text><text x="54.108" y="1.67" class="c">file</text><text x="59.118" y="1.67" class="c">(config.toml)</text></symbol><symbol id="7"><text y="1.67" class="d">✔</text><text x="3.006" y="1.67" class="e">What</text><text x="8.016" y="1.67" class="e">are</text><text x="12.024" y="1.67" class="e">you</text><text x="16.032" y="1.67" class="e">up</text><text x="19.038" y="1.67" class="e">to?</text><text x="23.046" y="1.67" class="e">(select</text><text x="31.062" y="1.67" class="e">one</text><text x="35.07" y="1.67" class="e">of</text><text x="38.076" y="1.67" class="e">the</text><text x="42.084" y="1.67" class="e">options</text><text x="50.1" y="1.67" class="e">with</text><text x="55.11" y="1.67" class="e">the</text><text x="59.118" y="1.67" class="e">up-down</text><text x="67.134" y="1.67" class="e">arrows</text><text x="74.148" y="1.67" class="e">on</text><text x="77.154" y="1.67" class="e">your</text><text x="82.164" y="1.67" class="e">keyboard</text><text x="91.182" y="1.67" class="e">and</text><text x="95.19" y="1.67" class="e">press</text><text x="101.202" y="1.67" class="e">Enter)</text><text x="108.216" y="1.67" class="f">·</text><text x="110.22" y="1.67" class="d">account</text><text x="122.244" y="1.67" class="d">-</text><text x="124.248" y="1.67" class="d">Manage</text><text x="131.262" y="1.67" class="d">accounts</text></symbol><symbol id="8"><text y="1.67" class="g">?</text><text x="3.006" y="1.67" class="e">What</text><text x="8.016" y="1.67" class="e">do</text><text x="11.022" y="1.67" class="e">you</text><text x="15.03" y="1.67" class="e">want</text><text x="20.04" y="1.67" class="e">to</text><text x="23.046" y="1.67" class="e">do</text><text x="26.052" y="1.67" class="e">with</text><text x="31.062" y="1.67" class="e">an</text><text x="34.068" y="1.67" class="e">account?</text><text x="43.086" y="1.67" class="f">›</text></symbol><symbol id="9"><text x="2.004" y="1.67" class="c">import-account</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">Import</text><text x="35.07" y="1.67" class="c">existing</text><text x="44.088" y="1.67" class="c">account</text><text x="52.104" y="1.67" class="c">(a.k.a.</text><text x="60.12" y="1.67" class="c">&quot;sign</text><text x="66.132" y="1.67" class="c">in&quot;)</text></symbol><symbol id="10"><text x="2.004" y="1.67" class="c">create-account</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">Create</text><text x="35.07" y="1.67" class="c">a</text><text x="37.074" y="1.67" class="c">new</text><text x="41.082" y="1.67" class="c">account</text></symbol><symbol id="11"><text x="2.004" y="1.67" class="c">delete-account</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">Delete</text><text x="35.07" y="1.67" class="c">an</text><text x="38.076" y="1.67" class="c">account</text></symbol><symbol id="12"><text x="2.004" y="1.67" class="c">list-keys</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">View</text><text x="33.066" y="1.67" class="c">a</text><text x="35.07" y="1.67" class="c">list</text><text x="40.08" y="1.67" class="c">of</text><text x="43.086" y="1.67" class="c">access</text><text x="50.1" y="1.67" class="c">keys</text><text x="55.11" y="1.67" class="c">of</text><text x="58.116" y="1.67" class="c">an</text><text x="61.122" y="1.67" class="c">account</text></symbol><symbol id="13"><text x="2.004" y="1.67" class="c">add-key</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">Add</text><text x="32.064" y="1.67" class="c">an</text><text x="35.07" y="1.67" class="c">access</text><text x="42.084" y="1.67" class="c">key</text><text x="46.092" y="1.67" class="c">to</text><text x="49.098" y="1.67" class="c">an</text><text x="52.104" y="1.67" class="c">account</text></symbol><symbol id="14"><text x="2.004" y="1.67" class="c">delete-key</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">Delete</text><text x="35.07" y="1.67" class="c">an</text><text x="38.076" y="1.67" class="c">access</text><text x="45.09" y="1.67" class="c">key</text><text x="49.098" y="1.67" class="c">from</text><text x="54.108" y="1.67" class="c">an</text><text x="57.114" y="1.67" class="c">account</text></symbol><symbol id="15"><text x="2.004" y="1.67" class="c">back</text></symbol><symbol id="16"><text x="2.004" y="1.67" class="c">view-account-summary</text><text x="26.052" y="1.67" class="c">-</text><text x="28.056" y="1.67" class="c">View</text><text x="33.066" y="1.67" class="c">properties</text><text x="44.088" y="1.67" class="c">for</text><text x="48.096" y="1.67" class="c">an</text><text x="51.102" y="1.67" class="c">account</text></symbol><symbol id="17"><text y="1.67" class="d">✔</text><text x="3.006" y="1.67" class="e">What</text><text x="8.016" y="1.67" class="e">do</text><text x="11.022" y="1.67" class="e">you</text><text x="15.03" y="1.67" class="e">want</text><text x="20.04" y="1.67" class="e">to</text><text x="23.046" y="1.67" class="e">do</text><text x="26.052" y="1.67" class="e">with</text><text x="31.062" y="1.67" class="e">an</text><text x="34.068" y="1.67" class="e">account?</text><text x="43.086" y="1.67" class="f">·</text><text x="45.09" y="1.67" class="d">create-account</text><text x="69.138" y="1.67" class="d">-</text><text x="71.142" y="1.67" class="d">Create</text><text x="78.156" y="1.67" class="d">a</text><text x="80.16" y="1.67" class="d">new</text><text x="84.168" y="1.67" class="d">account</text></symbol><symbol id="18"><text y="1.67" class="d">✔</text><text x="2.004" y="1.67" class="e">How</text><text x="6.012" y="1.67" class="e">do</text><text x="9.018" y="1.67" class="e">you</text><text x="13.026" y="1.67" class="e">cover</text><text x="19.038" y="1.67" class="e">the</text><text x="23.046" y="1.67" class="e">costs</text><text x="29.058" y="1.67" class="e">of</text><text x="32.064" y="1.67" class="e">account</text><text x="40.08" y="1.67" class="e">creation?</text><text x="50.1" y="1.67" class="f">·</text><text x="52.104" y="1.67" class="d">fund-myself</text><text x="73.146" y="1.67" class="d">-</text><text x="75.15" y="1.67" class="d">I</text><text x="77.154" y="1.67" class="d">would</text><text x="83.166" y="1.67" class="d">like</text><text x="88.176" y="1.67" class="d">fund</text><text x="93.186" y="1.67" class="d">myself</text><text x="100.2" y="1.67" class="d">to</text><text x="103.206" y="1.67" class="d">cover</text><text x="109.218" y="1.67" class="d">the</text><text x="113.226" y="1.67" class="d">cost</text><text x="118.236" y="1.67" class="d">of</text><text x="121.242" y="1.67" class="d">creating</text><text x="130.26" y="1.67" class="d">an</text><text x="133.266" y="1.67" class="d">account</text></symbol><symbol id="19"><text y="1.67" class="c">What</text><text x="5.01" y="1.67" class="c">is</text><text x="8.016" y="1.67" class="c">the</text><text x="12.024" y="1.67" class="c">new</text><text x="16.032" y="1.67" class="c">account</text><text x="24.048" y="1.67" class="c">ID?:</text><text x="29.058" y="1.67" class="c">new.fro_volod.testnet</text></symbol><symbol id="20"><text y="1.67" class="c">Enter</text><text x="6.012" y="1.67" class="c">deposit</text><text x="14.028" y="1.67" class="c">for</text><text x="18.036" y="1.67" class="c">a</text><text x="20.04" y="1.67" class="c">function</text><text x="29.058" y="1.67" class="c">call</text><text x="34.068" y="1.67" class="c">(example:</text><text x="44.088" y="1.67" class="c">10NEAR</text><text x="51.102" y="1.67" class="c">or</text><text x="54.108" y="1.67" class="c">0.5near</text><text x="62.124" y="1.67" class="c">or</text><text x="65.13" y="1.67" class="c">10000yoctonear).:</text><text x="83.166" y="1.67" class="c">0.1</text><text x="87.174" y="1.67" class="c">NEAR</text></symbol><symbol id="21"><text y="1.67" class="c">Enter</text><text x="6.012" y="1.67" class="c">deposit</text><text x="14.028" y="1.67" class="c">for</text><text x="18.036" y="1.67" class="c">a</text><text x="20.04" y="1.67" class="c">function</text><text x="29.058" y="1.67" class="c">call</text><text x="34.068" y="1.67" class="c">(example:</text><text x="44.088" y="1.67" class="c">10NEAR</text><text x="51.102" y="1.67" class="c">or</text><text x="54.108" y="1.67" class="c">0.5near</text><text x="62.124" y="1.67" class="c">or</text><text x="65.13" y="1.67" class="c">10000yoctonear).:</text><text x="83.166" y="1.67" class="c">1</text><text x="85.17" y="1.67" class="c">NEAR</text></symbol><symbol id="22"><text y="1.67" class="d">✔</text><text x="2.004" y="1.67" class="e">Add</text><text x="6.012" y="1.67" class="e">an</text><text x="9.018" y="1.67" class="e">access</text><text x="16.032" y="1.67" class="e">key</text><text x="20.04" y="1.67" class="e">for</text><text x="24.048" y="1.67" class="e">this</text><text x="29.058" y="1.67" class="e">account</text><text x="37.074" y="1.67" class="f">·</text><text x="39.078" y="1.67" class="d">autogenerate-new-keypair</text><text x="73.146" y="1.67" class="d">-</text><text x="75.15" y="1.67" class="d">Automatically</text><text x="89.178" y="1.67" class="d">generate</text><text x="98.196" y="1.67" class="d">a</text><text x="100.2" y="1.67" class="d">key</text><text x="104.208" y="1.67" class="d">pair</text></symbol><symbol id="23"><text y="1.67" class="g">?</text><text x="2.004" y="1.67" class="e">Save</text><text x="7.014" y="1.67" class="e">an</text><text x="10.02" y="1.67" class="e">access</text><text x="17.034" y="1.67" class="e">key</text><text x="21.042" y="1.67" class="e">for</text><text x="25.05" y="1.67" class="e">this</text><text x="30.06" y="1.67" class="e">account</text><text x="38.076" y="1.67" class="f">›</text></symbol><symbol id="24"><text x="2.004" y="1.67" class="c">print-to-terminal</text><text x="27.054" y="1.67" class="c">-</text><text x="29.058" y="1.67" class="c">Print</text><text x="35.07" y="1.67" class="c">automatically</text><text x="49.098" y="1.67" class="c">generated</text><text x="59.118" y="1.67" class="c">key</text><text x="63.126" y="1.67" class="c">pair</text><text x="68.136" y="1.67" class="c">in</text><text x="71.142" y="1.67" class="c">terminal</text></symbol><symbol id="25"><text y="1.67" class="d">✔</text><text x="2.004" y="1.67" class="e">Save</text><text x="7.014" y="1.67" class="e">an</text><text x="10.02" y="1.67" class="e">access</text><text x="17.034" y="1.67" class="e">key</text><text x="21.042" y="1.67" class="e">for</text><text x="25.05" y="1.67" class="e">this</text><text x="30.06" y="1.67" class="e">account</text><text x="38.076" y="1.67" class="f">·</text><text x="40.08" y="1.67" class="d">save-to-keychain</text><text x="65.13" y="1.67" class="d">-</text><text x="67.134" y="1.67" class="d">Save</text><text x="72.144" y="1.67" class="d">automatically</text><text x="86.172" y="1.67" class="d">generated</text><text x="96.192" y="1.67" class="d">key</text><text x="100.2" y="1.67" class="d">pair</text><text x="105.21" y="1.67" class="d">to</text><text x="108.216" y="1.67" class="d">the</text><text x="112.224" y="1.67" class="d">legacy</text><text x="119.238" y="1.67" class="d">keychain</text><text x="128.256" y="1.67" class="d">(compatible</text><text x="140.28" y="1.67" class="d">with</text><text x="145.29" y="1.67" class="d">JS</text><text x="148.296" y="1.67" class="d">CLI)</text></symbol><symbol id="26"><text y="1.67" class="g">?</text><text x="2.004" y="1.67" class="e">What</text><text x="7.014" y="1.67" class="e">is</text><text x="10.02" y="1.67" class="e">the</text><text x="14.028" y="1.67" class="e">name</text><text x="19.038" y="1.67" class="e">of</text><text x="22.044" y="1.67" class="e">the</text><text x="26.052" y="1.67" class="e">network?</text><text x="35.07" y="1.67" class="f">›</text></symbol><symbol id="27"><text x="2.004" y="1.67" class="c">shardnet</text></symbol><symbol id="28"><text x="2.004" y="1.67" class="c">vova-testnet</text></symbol><symbol id="29"><text x="2.004" y="1.67" class="c">qwe-testnet</text></symbol><symbol id="30"><text y="1.67" class="d">✔</text><text x="2.004" y="1.67" class="e">What</text><text x="7.014" y="1.67" class="e">is</text><text x="10.02" y="1.67" class="e">the</text><text x="14.028" y="1.67" class="e">name</text><text x="19.038" y="1.67" class="e">of</text><text x="22.044" y="1.67" class="e">the</text><text x="26.052" y="1.67" class="e">network?</text><text x="35.07" y="1.67" class="f">·</text><text x="37.074" y="1.67" class="d">testnet</text></symbol><symbol id="31"><text y="1.67" class="g">?</text><text x="3.006" y="1.67" class="e">Select</text><text x="10.02" y="1.67" class="e">a</text><text x="12.024" y="1.67" class="e">tool</text><text x="17.034" y="1.67" class="e">for</text><text x="21.042" y="1.67" class="e">signing</text><text x="29.058" y="1.67" class="e">the</text><text x="33.066" y="1.67" class="e">transaction</text><text x="45.09" y="1.67" class="f">›</text></symbol><symbol id="32"><text x="2.004" y="1.67" class="c">sign-with-ledger</text><text x="35.07" y="1.67" class="c">-</text><text x="37.074" y="1.67" class="c">Sign</text><text x="42.084" y="1.67" class="c">the</text><text x="46.092" y="1.67" class="c">transaction</text><text x="58.116" y="1.67" class="c">with</text><text x="63.126" y="1.67" class="c">Ledger</text><text x="70.14" y="1.67" class="c">Nano</text><text x="75.15" y="1.67" class="c">device</text></symbol><symbol id="33"><text x="2.004" y="1.67" class="c">sign-with-plaintext-private-key</text><text x="35.07" y="1.67" class="c">-</text><text x="37.074" y="1.67" class="c">Sign</text><text x="42.084" y="1.67" class="c">the</text><text x="46.092" y="1.67" class="c">transaction</text><text x="58.116" y="1.67" class="c">with</text><text x="63.126" y="1.67" class="c">a</text><text x="65.13" y="1.67" class="c">plaintext</text><text x="75.15" y="1.67" class="c">private</text><text x="83.166" y="1.67" class="c">key</text></symbol><symbol id="34"><text y="1.67" class="d">✔</text><text x="3.006" y="1.67" class="e">Select</text><text x="10.02" y="1.67" class="e">a</text><text x="12.024" y="1.67" class="e">tool</text><text x="17.034" y="1.67" class="e">for</text><text x="21.042" y="1.67" class="e">signing</text><text x="29.058" y="1.67" class="e">the</text><text x="33.066" y="1.67" class="e">transaction</text><text x="45.09" y="1.67" class="f">·</text><text x="47.094" y="1.67" class="d">sign-with-keychain</text><text x="80.16" y="1.67" class="d">-</text><text x="82.164" y="1.67" class="d">Sign</text><text x="87.174" y="1.67" class="d">the</text><text x="91.182" y="1.67" class="d">transaction</text><text x="103.206" y="1.67" class="d">with</text><text x="108.216" y="1.67" class="d">a</text><text x="110.22" y="1.67" class="d">key</text><text x="114.228" y="1.67" class="d">saved</text><text x="120.24" y="1.67" class="d">in</text><text x="123.246" y="1.67" class="d">legacy</text><text x="130.26" y="1.67" class="d">keychain</text><text x="139.278" y="1.67" class="d">(compatible</text><text x="151.302" y="1.67" class="d">with</text><text x="156.312" y="1.67" class="d">the</text><text x="160.32" y="1.67" class="d">old</text><text x="164.328" y="1.67" class="d">near</text><text x="169.338" y="1.67" class="d">CLI)</text></symbol><symbol id="35"><text y="1.67" class="c">Your</text><text x="5.01" y="1.67" class="c">transaction</text><text x="17.034" y="1.67" class="c">was</text><text x="21.042" y="1.67" class="c">signed</text><text x="28.056" y="1.67" class="c">successfully.</text></symbol><symbol id="36"><text y="1.67" class="c">Signed</text><text x="7.014" y="1.67" class="c">transaction:</text></symbol><symbol id="37"><text y="1.67" class="c">signer_id:</text><text x="14.028" y="1.67" class="c">fro_volod.testnet</text></symbol><symbol id="38"><text y="1.67" class="c">public_key:</text><text x="14.028" y="1.67" class="c">ed25519:D31un5TFeABdNUVMaf3QzeBz3Z3yau2GZA2VPe8XX6GB</text></symbol><symbol id="39"><text y="1.67" class="c">nonce:</text><text x="14.028" y="1.67" class="c">72325441000113</text></symbol><symbol id="40"><text y="1.67" class="c">receiver_id:</text><text x="14.028" y="1.67" class="c">new.fro_volod.testnet</text></symbol><symbol id="41"><text y="1.67" class="c">block_hash:</text><text x="14.028" y="1.67" class="c">CBXcEDBiLsvWFh2vEbkMdoPBVXWZLNofVgwSjGu4vy5P</text></symbol><symbol id="42"><text y="1.67" class="c">actions:</text></symbol><symbol id="43"><text x="3.006" y="1.67" class="c">--</text><text x="6.012" y="1.67" class="c">create</text><text x="13.026" y="1.67" class="c">account:</text><text x="27.054" y="1.67" class="c">new.fro_volod.testnet</text></symbol><symbol id="44"><text x="3.006" y="1.67" class="c">--</text><text x="6.012" y="1.67" class="c">transfer</text><text x="15.03" y="1.67" class="c">deposit:</text><text x="27.054" y="1.67" class="c">1</text><text x="29.058" y="1.67" class="c">NEAR</text></symbol><symbol id="45"><text x="3.006" y="1.67" class="c">--</text><text x="6.012" y="1.67" class="c">add</text><text x="10.02" y="1.67" class="c">access</text><text x="17.034" y="1.67" class="c">key:</text></symbol><symbol id="46"><text x="19.038" y="1.67" class="c">public</text><text x="26.052" y="1.67" class="c">key:</text><text x="33.066" y="1.67" class="c">ed25519:DNPQYZJECUpH8AoqjkAu8RXDRxnYJFn3fhqYd52dD2Y6</text></symbol><symbol id="47"><text x="19.038" y="1.67" class="c">nonce:</text><text x="33.066" y="1.67" class="c">0</text></symbol><symbol id="48"><text x="19.038" y="1.67" class="c">permission:</text><text x="33.066" y="1.67" class="c">FullAccess</text></symbol><symbol id="49"><text y="1.67" class="d">✔</text><text x="2.004" y="1.67" class="e">How</text><text x="6.012" y="1.67" class="e">would</text><text x="12.024" y="1.67" class="e">you</text><text x="16.032" y="1.67" class="e">like</text><text x="21.042" y="1.67" class="e">to</text><text x="24.048" y="1.67" class="e">proceed</text><text x="32.064" y="1.67" class="f">·</text><text x="34.068" y="1.67" class="d">send</text><text x="44.088" y="1.67" class="d">-</text><text x="46.092" y="1.67" class="d">Send</text><text x="51.102" y="1.67" class="d">the</text><text x="55.11" y="1.67" class="d">transaction</text><text x="67.134" y="1.67" class="d">to</text><text x="70.14" y="1.67" class="d">the</text><text x="74.148" y="1.67" class="d">network</text></symbol><symbol id="50"><text y="1.67" class="c">Transaction</text><text x="12.024" y="1.67" class="c">sent</text><text x="17.034" y="1.67" class="c">...</text></symbol><symbol id="51"><text y="1.67" class="c">New</text><text x="4.008" y="1.67" class="c">account</text><text x="12.024" y="1.67" class="c">&lt;new.fro_volod.testnet&gt;</text><text x="36.072" y="1.67" class="c">created</text><text x="44.088" y="1.67" class="c">successfully.</text></symbol><symbol id="52"><text y="1.67" class="c">The</text><text x="4.008" y="1.67" class="c">data</text><text x="9.018" y="1.67" class="c">for</text><text x="13.026" y="1.67" class="c">the</text><text x="17.034" y="1.67" class="c">access</text><text x="24.048" y="1.67" class="c">key</text><text x="28.056" y="1.67" class="c">is</text><text x="31.062" y="1.67" class="c">saved</text><text x="37.074" y="1.67" class="c">in</text><text x="40.08" y="1.67" class="c">a</text><text x="42.084" y="1.67" class="c">file</text><text x="47.094" y="1.67" class="c">&quot;/Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet/ed25519_DNPQYZJECUpH8AoqjkAu8RXDRxnYJFn3fhqYd52dD2Y6.json&quot;</text></symbol><symbol id="53"><text y="1.67" class="c">The</text><text x="4.008" y="1.67" class="c">data</text><text x="9.018" y="1.67" class="c">for</text><text x="13.026" y="1.67" class="c">the</text><text x="17.034" y="1.67" class="c">access</text><text x="24.048" y="1.67" class="c">key</text><text x="28.056" y="1.67" class="c">is</text><text x="31.062" y="1.67" class="c">saved</text><text x="37.074" y="1.67" class="c">in</text><text x="40.08" y="1.67" class="c">a</text><text x="42.084" y="1.67" class="c">file</text><text x="47.094" y="1.67" class="c">&quot;/Users/frovolod/.near-credentials/testnet/new.fro_volod.testnet.json&quot;</text></symbol><symbol id="54"><text y="1.67" class="c">Transaction</text><text x="12.024" y="1.67" class="c">ID:</text><text x="16.032" y="1.67" class="c">6LpNWTKUHwbWT9na3NZwBVzTk7nc4cp9RJZBdt1kpEPY</text></symbol><symbol id="55"><text y="1.67" class="c">To</text><text x="3.006" y="1.67" class="c">see</text><text x="7.014" y="1.67" class="c">the</text><text x="11.022" y="1.67" class="c">transaction</text><text x="23.046" y="1.67" class="c">in</text><text x="26.052" y="1.67" class="c">the</text><text x="30.06" y="1.67" class="c">transaction</text><text x="42.084" y="1.67" class="c">explorer,</text><text x="52.104" y="1.67" class="c">please</text><text x="59.118" y="1.67" class="c">open</text><text x="64.128" y="1.67" class="c">this</text><text x="69.138" y="1.67" class="c">url</text><text x="73.146" y="1.67" class="c">in</text><text x="76.152" y="1.67" class="c">your</text><text x="81.162" y="1.67" class="c">browser:</text></symbol><symbol id="56"><text y="1.67" class="c">https://explorer.testnet.near.org/transactions/6LpNWTKUHwbWT9na3NZwBVzTk7nc4cp9RJZBdt1kpEPY</text></symbol><symbol id="57"><text y="1.67" class="c">Your</text><text x="5.01" y="1.67" class="c">console</text><text x="13.026" y="1.67" class="c">command:</text></symbol><symbol id="58"><text y="1.67" class="c">./near-cli</text><text x="11.022" y="1.67" class="c">account</text><text x="19.038" y="1.67" class="c">create-account</text><text x="34.068" y="1.67" class="c">fund-myself</text><text x="46.092" y="1.67" class="c">new.fro_volod.testnet</text><text x="68.136" y="1.67" class="c">&apos;1</text><text x="71.142" y="1.67" class="c">NEAR&apos;</text><text x="77.154" y="1.67" class="c">autogenerate-new-keypair</text><text x="102.204" y="1.67" class="c">save-to-keychain</text><text x="119.238" y="1.67" class="c">network-config</text><text x="134.268" y="1.67" class="c">testnet</text><text x="142.284" y="1.67" class="c">sign-with-keychain</text></symbol><symbol id="a"><path fill="transparent" d="M0 0h187v26H0z"/></symbol><symbol id="b"><path fill="#6f7683" d="M0 0h1.102v2.171H0z"/></symbol></defs><path class="a" d="M0 0h187v56.446H0z"/><g style="animation-duration:39.126498s;animation-iteration-count:infinite;animation-name:j;animation-timing-function:steps(1,end)"><svg width="14399"><svg><use xlink:href="#a"/><use xlink:href="#b" x="-.004"/></svg><svg x="187"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/></svg><svg x="374"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#4" y="8.684"/></svg><svg x="561"><use xlink:href="#a"/><use xlink:href="#b" x="10.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">.</text></svg><svg x="748"><use xlink:href="#a"/><use xlink:href="#b" x="11.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">./</text></svg><svg x="935"><use xlink:href="#a"/><use xlink:href="#b" x="12.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="c">bash-3.2$</text><text x="10.02" y="10.354" class="c">./n</text></svg><svg x="1122"><use xlink:href="#a"/><use xlink:href="#b" x="20.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="1309"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="1496"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><text y="12.525" class="g">?</text><text x="3.006" y="12.525" class="e">What</text><text x="8.016" y="12.525" class="e">are</text><text x="12.024" y="12.525" class="e">you</text><text x="16.032" y="12.525" class="e">up</text><text x="19.038" y="12.525" class="e">to?</text><text x="23.046" y="12.525" class="e">(select</text><text x="31.062" y="12.525" class="e">one</text><text x="35.07" y="12.525" class="e">of</text><text x="38.076" y="12.525" class="e">the</text><text x="42.084" y="12.525" class="e">options</text><text x="50.1" y="12.525" class="e">with</text><text x="55.11" y="12.525" class="e">the</text><text x="59.118" y="12.525" class="e">up-down</text><text x="67.134" y="12.525" class="e">arrows</text><text x="74.148" y="12.525" class="e">on</text><text x="77.154" y="12.525" class="e">your</text><text x="82.164" y="12.525" class="e">keyboard</text><text x="91.182" y="12.525" class="e">and</text><text x="95.19" y="12.525" class="e">press</text><text x="101.202" y="12.525" class="e">Enter)</text><text x="108.216" y="12.525" class="f">›</text><text y="14.696" class="d">❯</text><text x="2.004" y="14.696" class="l">account</text><text x="14.028" y="14.696" class="l">-</text><text x="16.032" y="14.696" class="l">Manage</text><text x="23.046" y="14.696" class="l">accounts</text><text x="2.004" y="16.867" class="c">tokens</text><text x="14.028" y="16.867" class="c">-</text><text x="16.032" y="16.867" class="c">Manage</text><text x="23.046" y="16.867" class="c">token</text><text x="29.058" y="16.867" class="c">assets</text><text x="36.072" y="16.867" class="c">such</text><text x="41.082" y="16.867" class="c">as</text><text x="44.088" y="16.867" class="c">NEAR,</text><text x="50.1" y="16.867" class="c">FT,</text><text x="54.108" y="16.867" class="c">NFT</text><text x="2.004" y="19.038" class="c">contract</text><text x="14.028" y="19.038" class="c">-</text><text x="16.032" y="19.038" class="c">Manage</text><text x="23.046" y="19.038" class="c">smart-contracts:</text><text x="40.08" y="19.038" class="c">deploy</text><text x="47.094" y="19.038" class="c">code,</text><text x="53.106" y="19.038" class="c">call</text><text x="58.116" y="19.038" class="c">functions</text><text x="2.004" y="21.209" class="c">transaction</text><text x="14.028" y="21.209" class="c">-</text><text x="16.032" y="21.209" class="c">Operate</text><text x="24.048" y="21.209" class="c">transactions</text><use xlink:href="#6" y="21.71"/></svg><svg x="1683"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="21.71"/></svg><svg x="1870"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="13.001"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/></svg><svg x="2057"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#8" y="13.026"/><text y="16.867" class="d">❯</text><text x="2.004" y="16.867" class="l">view-account-summary</text><text x="26.052" y="16.867" class="l">-</text><text x="28.056" y="16.867" class="l">View</text><text x="33.066" y="16.867" class="l">properties</text><text x="44.088" y="16.867" class="l">for</text><text x="48.096" y="16.867" class="l">an</text><text x="51.102" y="16.867" class="l">account</text><use xlink:href="#9" y="17.368"/><use xlink:href="#10" y="19.539"/><use xlink:href="#11" y="21.71"/><use xlink:href="#12" y="23.881"/><use xlink:href="#13" y="26.052"/><use xlink:href="#14" y="28.223"/><use xlink:href="#15" y="30.394"/></svg><svg x="2244"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#8" y="13.026"/></svg><svg x="2431"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#8" y="13.026"/><use xlink:href="#16" y="15.197"/><text y="19.038" class="d">❯</text><text x="2.004" y="19.038" class="l">import-account</text><text x="26.052" y="19.038" class="l">-</text><text x="28.056" y="19.038" class="l">Import</text><text x="35.07" y="19.038" class="l">existing</text><text x="44.088" y="19.038" class="l">account</text><text x="52.104" y="19.038" class="l">(a.k.a.</text><text x="60.12" y="19.038" class="l">&quot;sign</text><text x="66.132" y="19.038" class="l">in&quot;)</text><use xlink:href="#10" y="19.539"/><use xlink:href="#11" y="21.71"/><use xlink:href="#12" y="23.881"/><use xlink:href="#13" y="26.052"/><use xlink:href="#14" y="28.223"/><use xlink:href="#15" y="30.394"/></svg><svg x="2618"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#8" y="13.026"/><use xlink:href="#14" y="28.223"/><use xlink:href="#15" y="30.394"/></svg><svg x="2805"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#8" y="13.026"/><use xlink:href="#16" y="15.197"/><use xlink:href="#9" y="17.368"/><text y="21.209" class="d">❯</text><text x="2.004" y="21.209" class="l">create-account</text><text x="26.052" y="21.209" class="l">-</text><text x="28.056" y="21.209" class="l">Create</text><text x="35.07" y="21.209" class="l">a</text><text x="37.074" y="21.209" class="l">new</text><text x="41.082" y="21.209" class="l">account</text><use xlink:href="#11" y="21.71"/><use xlink:href="#12" y="23.881"/><use xlink:href="#13" y="26.052"/><use xlink:href="#14" y="28.223"/><use xlink:href="#15" y="30.394"/></svg><svg x="2992"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#13" y="26.052"/><use xlink:href="#14" y="28.223"/><use xlink:href="#15" y="30.394"/></svg><svg x="3179"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><text y="16.867" class="g">?</text><text x="2.004" y="16.867" class="e">How</text><text x="6.012" y="16.867" class="e">do</text><text x="9.018" y="16.867" class="e">you</text><text x="13.026" y="16.867" class="e">cover</text><text x="19.038" y="16.867" class="e">the</text><text x="23.046" y="16.867" class="e">costs</text><text x="29.058" y="16.867" class="e">of</text><text x="32.064" y="16.867" class="e">account</text><text x="40.08" y="16.867" class="e">creation?</text><text x="50.1" y="16.867" class="f">›</text><text y="19.038" class="d">❯</text><text x="2.004" y="19.038" class="l">fund-myself</text><text x="23.046" y="19.038" class="l">-</text><text x="25.05" y="19.038" class="l">I</text><text x="27.054" y="19.038" class="l">would</text><text x="33.066" y="19.038" class="l">like</text><text x="38.076" y="19.038" class="l">fund</text><text x="43.086" y="19.038" class="l">myself</text><text x="50.1" y="19.038" class="l">to</text><text x="53.106" y="19.038" class="l">cover</text><text x="59.118" y="19.038" class="l">the</text><text x="63.126" y="19.038" class="l">cost</text><text x="68.136" y="19.038" class="l">of</text><text x="71.142" y="19.038" class="l">creating</text><text x="80.16" y="19.038" class="l">an</text><text x="83.166" y="19.038" class="l">account</text><text x="2.004" y="21.209" class="c">fund-later</text><text x="23.046" y="21.209" class="c">-</text><text x="25.05" y="21.209" class="c">Create</text><text x="32.064" y="21.209" class="c">an</text><text x="35.07" y="21.209" class="c">implicit-account</text><use xlink:href="#15" y="21.71"/></svg><svg x="3366"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/></svg><svg x="3553"><use xlink:href="#a"/><use xlink:href="#b" x="28.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text></svg><svg x="3740"><use xlink:href="#a"/><use xlink:href="#b" x="29.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">n</text></svg><svg x="3927"><use xlink:href="#a"/><use xlink:href="#b" x="30.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">ne</text></svg><svg x="4114"><use xlink:href="#a"/><use xlink:href="#b" x="31.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new</text></svg><svg x="4301"><use xlink:href="#a"/><use xlink:href="#b" x="32.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.</text></svg><svg x="4488"><use xlink:href="#a"/><use xlink:href="#b" x="33.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.f</text></svg><svg x="4675"><use xlink:href="#a"/><use xlink:href="#b" x="34.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fr</text></svg><svg x="4862"><use xlink:href="#a"/><use xlink:href="#b" x="35.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro</text></svg><svg x="5049"><use xlink:href="#a"/><use xlink:href="#b" x="36.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_</text></svg><svg x="5236"><use xlink:href="#a"/><use xlink:href="#b" x="37.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_v</text></svg><svg x="5423"><use xlink:href="#a"/><use xlink:href="#b" x="38.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_vo</text></svg><svg x="5610"><use xlink:href="#a"/><use xlink:href="#b" x="39.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_vol</text></svg><svg x="5797"><use xlink:href="#a"/><use xlink:href="#b" x="40.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volo</text></svg><svg x="5984"><use xlink:href="#a"/><use xlink:href="#b" x="41.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod</text></svg><svg x="6171"><use xlink:href="#a"/><use xlink:href="#b" x="42.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.</text></svg><svg x="6358"><use xlink:href="#a"/><use xlink:href="#b" x="43.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.t</text></svg><svg x="6545"><use xlink:href="#a"/><use xlink:href="#b" x="44.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.te</text></svg><svg x="6732"><use xlink:href="#a"/><use xlink:href="#b" x="45.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.tes</text></svg><svg x="6919"><use xlink:href="#a"/><use xlink:href="#b" x="46.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.test</text></svg><svg x="7106"><use xlink:href="#a"/><use xlink:href="#b" x="47.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.testn</text></svg><svg x="7293"><use xlink:href="#a"/><use xlink:href="#b" x="48.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><text y="19.038" class="c">What</text><text x="5.01" y="19.038" class="c">is</text><text x="8.016" y="19.038" class="c">the</text><text x="12.024" y="19.038" class="c">new</text><text x="16.032" y="19.038" class="c">account</text><text x="24.048" y="19.038" class="c">ID?:</text><text x="29.058" y="19.038" class="c">new.fro_volod.testne</text></svg><svg x="7480"><use xlink:href="#a"/><use xlink:href="#b" x="49.996" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/></svg><svg x="7667"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="17.343"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/></svg><svg x="7854"><use xlink:href="#a"/><use xlink:href="#b" x="90.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8041"><use xlink:href="#a"/><use xlink:href="#b" x="89.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8228"><use xlink:href="#a"/><use xlink:href="#b" x="88.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8415"><use xlink:href="#a"/><use xlink:href="#b" x="87.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8602"><use xlink:href="#a"/><use xlink:href="#b" x="86.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8789"><use xlink:href="#a"/><use xlink:href="#b" x="85.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="8976"><use xlink:href="#a"/><use xlink:href="#b" x="84.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#20" y="21.71"/></svg><svg x="9163"><use xlink:href="#a"/><use xlink:href="#b" x="83.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><text y="23.38" class="c">Enter</text><text x="6.012" y="23.38" class="c">deposit</text><text x="14.028" y="23.38" class="c">for</text><text x="18.036" y="23.38" class="c">a</text><text x="20.04" y="23.38" class="c">function</text><text x="29.058" y="23.38" class="c">call</text><text x="34.068" y="23.38" class="c">(example:</text><text x="44.088" y="23.38" class="c">10NEAR</text><text x="51.102" y="23.38" class="c">or</text><text x="54.108" y="23.38" class="c">0.5near</text><text x="62.124" y="23.38" class="c">or</text><text x="65.13" y="23.38" class="c">10000yoctonear).:</text><text x="83.166" y="23.38" class="c">01</text><text x="86.172" y="23.38" class="c">NEAR</text></svg><svg x="9350"><use xlink:href="#a"/><use xlink:href="#b" x="82.996" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/></svg><svg x="9537"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="21.685"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/></svg><svg x="9724"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><text y="25.551" class="g">?</text><text x="2.004" y="25.551" class="e">Add</text><text x="6.012" y="25.551" class="e">an</text><text x="9.018" y="25.551" class="e">access</text><text x="16.032" y="25.551" class="e">key</text><text x="20.04" y="25.551" class="e">for</text><text x="24.048" y="25.551" class="e">this</text><text x="29.058" y="25.551" class="e">account</text><text x="37.074" y="25.551" class="f">›</text><text y="27.722" class="d">❯</text><text x="2.004" y="27.722" class="l">autogenerate-new-keypair</text><text x="36.072" y="27.722" class="l">-</text><text x="38.076" y="27.722" class="l">Automatically</text><text x="52.104" y="27.722" class="l">generate</text><text x="61.122" y="27.722" class="l">a</text><text x="63.126" y="27.722" class="l">key</text><text x="67.134" y="27.722" class="l">pair</text><text x="2.004" y="29.893" class="c">use-manually-provided-seed-prase</text><text x="36.072" y="29.893" class="c">-</text><text x="38.076" y="29.893" class="c">Use</text><text x="42.084" y="29.893" class="c">the</text><text x="46.092" y="29.893" class="c">provided</text><text x="55.11" y="29.893" class="c">seed</text><text x="60.12" y="29.893" class="c">phrase</text><text x="67.134" y="29.893" class="c">manually</text><text x="2.004" y="32.064" class="c">use-manually-provided-public-key</text><text x="36.072" y="32.064" class="c">-</text><text x="38.076" y="32.064" class="c">Use</text><text x="42.084" y="32.064" class="c">the</text><text x="46.092" y="32.064" class="c">provided</text><text x="55.11" y="32.064" class="c">public</text><text x="62.124" y="32.064" class="c">key</text><text x="66.132" y="32.064" class="c">manually</text><use xlink:href="#15" y="32.565"/></svg><svg x="9911"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/></svg><svg x="10098"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#23" y="26.052"/><text y="29.893" class="d">❯</text><text x="2.004" y="29.893" class="l">save-to-macos-keychain</text><text x="27.054" y="29.893" class="l">-</text><text x="29.058" y="29.893" class="l">Save</text><text x="34.068" y="29.893" class="l">automatically</text><text x="48.096" y="29.893" class="l">generated</text><text x="58.116" y="29.893" class="l">key</text><text x="62.124" y="29.893" class="l">pair</text><text x="67.134" y="29.893" class="l">to</text><text x="70.14" y="29.893" class="l">macOS</text><text x="76.152" y="29.893" class="l">keychain</text><text x="2.004" y="32.064" class="c">save-to-keychain</text><text x="27.054" y="32.064" class="c">-</text><text x="29.058" y="32.064" class="c">Save</text><text x="34.068" y="32.064" class="c">automatically</text><text x="48.096" y="32.064" class="c">generated</text><text x="58.116" y="32.064" class="c">key</text><text x="62.124" y="32.064" class="c">pair</text><text x="67.134" y="32.064" class="c">to</text><text x="70.14" y="32.064" class="c">the</text><text x="74.148" y="32.064" class="c">legacy</text><text x="81.162" y="32.064" class="c">keychain</text><text x="90.18" y="32.064" class="c">(compatible</text><text x="102.204" y="32.064" class="c">with</text><text x="107.214" y="32.064" class="c">JS</text><text x="110.22" y="32.064" class="c">CLI)</text><use xlink:href="#24" y="32.565"/><use xlink:href="#15" y="34.736"/></svg><svg x="10285"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#23" y="26.052"/></svg><svg x="10472"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#23" y="26.052"/><text x="2.004" y="29.893" class="c">save-to-macos-keychain</text><text x="27.054" y="29.893" class="c">-</text><text x="29.058" y="29.893" class="c">Save</text><text x="34.068" y="29.893" class="c">automatically</text><text x="48.096" y="29.893" class="c">generated</text><text x="58.116" y="29.893" class="c">key</text><text x="62.124" y="29.893" class="c">pair</text><text x="67.134" y="29.893" class="c">to</text><text x="70.14" y="29.893" class="c">macOS</text><text x="76.152" y="29.893" class="c">keychain</text><text y="32.064" class="d">❯</text><text x="2.004" y="32.064" class="l">save-to-keychain</text><text x="27.054" y="32.064" class="l">-</text><text x="29.058" y="32.064" class="l">Save</text><text x="34.068" y="32.064" class="l">automatically</text><text x="48.096" y="32.064" class="l">generated</text><text x="58.116" y="32.064" class="l">key</text><text x="62.124" y="32.064" class="l">pair</text><text x="67.134" y="32.064" class="l">to</text><text x="70.14" y="32.064" class="l">the</text><text x="74.148" y="32.064" class="l">legacy</text><text x="81.162" y="32.064" class="l">keychain</text><text x="90.18" y="32.064" class="l">(compatible</text><text x="102.204" y="32.064" class="l">with</text><text x="107.214" y="32.064" class="l">JS</text><text x="110.22" y="32.064" class="l">CLI)</text><use xlink:href="#24" y="32.565"/><use xlink:href="#15" y="34.736"/></svg><svg x="10659"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/></svg><svg x="10846"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/></svg><svg x="11033"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#26" y="28.223"/><text y="32.064" class="d">❯</text><text x="2.004" y="32.064" class="l">mainnet</text><text x="2.004" y="34.235" class="c">testnet</text><use xlink:href="#27" y="34.736"/><use xlink:href="#28" y="36.907"/><use xlink:href="#29" y="39.078"/></svg><svg x="11220"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#26" y="28.223"/><text x="2.004" y="32.064" class="c">mainnet</text><text y="34.235" class="d">❯</text><text x="2.004" y="34.235" class="l">testnet</text><use xlink:href="#27" y="34.736"/><use xlink:href="#28" y="36.907"/><use xlink:href="#29" y="39.078"/></svg><svg x="11407"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#29" y="39.078"/></svg><svg x="11594"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/><use xlink:href="#31" y="30.394"/><text y="34.235" class="d">❯</text><text x="2.004" y="34.235" class="l">sign-with-macos-keychain</text><text x="35.07" y="34.235" class="l">-</text><text x="37.074" y="34.235" class="l">Sign</text><text x="42.084" y="34.235" class="l">the</text><text x="46.092" y="34.235" class="l">transaction</text><text x="58.116" y="34.235" class="l">with</text><text x="63.126" y="34.235" class="l">a</text><text x="65.13" y="34.235" class="l">key</text><text x="69.138" y="34.235" class="l">saved</text><text x="75.15" y="34.235" class="l">in</text><text x="78.156" y="34.235" class="l">macOS</text><text x="84.168" y="34.235" class="l">keychain</text><text x="2.004" y="36.406" class="c">sign-with-keychain</text><text x="35.07" y="36.406" class="c">-</text><text x="37.074" y="36.406" class="c">Sign</text><text x="42.084" y="36.406" class="c">the</text><text x="46.092" y="36.406" class="c">transaction</text><text x="58.116" y="36.406" class="c">with</text><text x="63.126" y="36.406" class="c">a</text><text x="65.13" y="36.406" class="c">key</text><text x="69.138" y="36.406" class="c">saved</text><text x="75.15" y="36.406" class="c">in</text><text x="78.156" y="36.406" class="c">legacy</text><text x="85.17" y="36.406" class="c">keychain</text><text x="94.188" y="36.406" class="c">(compatible</text><text x="106.212" y="36.406" class="c">with</text><text x="111.222" y="36.406" class="c">the</text><text x="115.23" y="36.406" class="c">old</text><text x="119.238" y="36.406" class="c">near</text><text x="124.248" y="36.406" class="c">CLI)</text><use xlink:href="#32" y="36.907"/><use xlink:href="#33" y="39.078"/><use xlink:href="#15" y="41.249"/></svg><svg x="11781"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/><use xlink:href="#31" y="30.394"/></svg><svg x="11968"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/><use xlink:href="#31" y="30.394"/><text x="2.004" y="34.235" class="c">sign-with-macos-keychain</text><text x="35.07" y="34.235" class="c">-</text><text x="37.074" y="34.235" class="c">Sign</text><text x="42.084" y="34.235" class="c">the</text><text x="46.092" y="34.235" class="c">transaction</text><text x="58.116" y="34.235" class="c">with</text><text x="63.126" y="34.235" class="c">a</text><text x="65.13" y="34.235" class="c">key</text><text x="69.138" y="34.235" class="c">saved</text><text x="75.15" y="34.235" class="c">in</text><text x="78.156" y="34.235" class="c">macOS</text><text x="84.168" y="34.235" class="c">keychain</text><text y="36.406" class="d">❯</text><text x="2.004" y="36.406" class="l">sign-with-keychain</text><text x="35.07" y="36.406" class="l">-</text><text x="37.074" y="36.406" class="l">Sign</text><text x="42.084" y="36.406" class="l">the</text><text x="46.092" y="36.406" class="l">transaction</text><text x="58.116" y="36.406" class="l">with</text><text x="63.126" y="36.406" class="l">a</text><text x="65.13" y="36.406" class="l">key</text><text x="69.138" y="36.406" class="l">saved</text><text x="75.15" y="36.406" class="l">in</text><text x="78.156" y="36.406" class="l">legacy</text><text x="85.17" y="36.406" class="l">keychain</text><text x="94.188" y="36.406" class="l">(compatible</text><text x="106.212" y="36.406" class="l">with</text><text x="111.222" y="36.406" class="l">the</text><text x="115.23" y="36.406" class="l">old</text><text x="119.238" y="36.406" class="l">near</text><text x="124.248" y="36.406" class="l">CLI)</text><use xlink:href="#32" y="36.907"/><use xlink:href="#33" y="39.078"/><use xlink:href="#15" y="41.249"/></svg><svg x="12155"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/></svg><svg x="12342"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="32.54"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/><use xlink:href="#34" y="30.394"/></svg><svg x="12529"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="41.224"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="10.855"/><use xlink:href="#17" y="13.026"/><use xlink:href="#18" y="15.197"/><use xlink:href="#19" y="17.368"/><use xlink:href="#21" y="21.71"/><use xlink:href="#22" y="23.881"/><use xlink:href="#25" y="26.052"/><use xlink:href="#30" y="28.223"/><use xlink:href="#34" y="30.394"/><use xlink:href="#35" y="34.736"/><use xlink:href="#36" y="36.907"/></svg><svg x="12716"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#3"/><use xlink:href="#5" y="2.171"/><use xlink:href="#7" y="4.342"/><use xlink:href="#17" y="6.513"/><use xlink:href="#18" y="8.684"/><use xlink:href="#19" y="10.855"/><use xlink:href="#21" y="15.197"/><use xlink:href="#22" y="17.368"/><use xlink:href="#25" y="19.539"/><use xlink:href="#30" y="21.71"/><use xlink:href="#34" y="23.881"/><use xlink:href="#35" y="28.223"/><use xlink:href="#36" y="30.394"/><use xlink:href="#37" y="34.736"/><use xlink:href="#38" y="36.907"/><use xlink:href="#39" y="39.078"/><use xlink:href="#40" y="41.249"/><use xlink:href="#41" y="43.42"/><use xlink:href="#42" y="45.591"/><use xlink:href="#43" y="47.762"/><use xlink:href="#44" y="49.933"/><use xlink:href="#45" y="52.104"/></svg><svg x="12903"><use xlink:href="#a"/><use xlink:href="#21"/><use xlink:href="#22" y="2.171"/><use xlink:href="#25" y="4.342"/><use xlink:href="#30" y="6.513"/><use xlink:href="#34" y="8.684"/><use xlink:href="#35" y="13.026"/><use xlink:href="#36" y="15.197"/><use xlink:href="#37" y="19.539"/><use xlink:href="#38" y="21.71"/><use xlink:href="#39" y="23.881"/><use xlink:href="#40" y="26.052"/><use xlink:href="#41" y="28.223"/><use xlink:href="#42" y="30.394"/><use xlink:href="#43" y="32.565"/><use xlink:href="#44" y="34.736"/><use xlink:href="#45" y="36.907"/><use xlink:href="#46" y="39.078"/><use xlink:href="#47" y="41.249"/><use xlink:href="#48" y="43.42"/><text y="49.432" class="g">?</text><text x="2.004" y="49.432" class="e">How</text><text x="6.012" y="49.432" class="e">would</text><text x="12.024" y="49.432" class="e">you</text><text x="16.032" y="49.432" class="e">like</text><text x="21.042" y="49.432" class="e">to</text><text x="24.048" y="49.432" class="e">proceed</text><text x="32.064" y="49.432" class="f">›</text><text y="51.603" class="d">❯</text><text x="2.004" y="51.603" class="l">send</text><text x="12.024" y="51.603" class="l">-</text><text x="14.028" y="51.603" class="l">Send</text><text x="19.038" y="51.603" class="l">the</text><text x="23.046" y="51.603" class="l">transaction</text><text x="35.07" y="51.603" class="l">to</text><text x="38.076" y="51.603" class="l">the</text><text x="42.084" y="51.603" class="l">network</text><text x="2.004" y="53.774" class="c">display</text><text x="12.024" y="53.774" class="c">-</text><text x="14.028" y="53.774" class="c">Print</text><text x="20.04" y="53.774" class="c">only</text><text x="25.05" y="53.774" class="c">base64</text><text x="32.064" y="53.774" class="c">encoded</text><text x="40.08" y="53.774" class="c">transaction</text><text x="52.104" y="53.774" class="c">for</text><text x="56.112" y="53.774" class="c">JSON</text><text x="61.122" y="53.774" class="c">RPC</text><text x="65.13" y="53.774" class="c">input</text><text x="71.142" y="53.774" class="c">and</text><text x="75.15" y="53.774" class="c">exit</text></svg><svg x="13090"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="52.079"/><use xlink:href="#21"/><use xlink:href="#22" y="2.171"/><use xlink:href="#25" y="4.342"/><use xlink:href="#30" y="6.513"/><use xlink:href="#34" y="8.684"/><use xlink:href="#35" y="13.026"/><use xlink:href="#36" y="15.197"/><use xlink:href="#37" y="19.539"/><use xlink:href="#38" y="21.71"/><use xlink:href="#39" y="23.881"/><use xlink:href="#40" y="26.052"/><use xlink:href="#41" y="28.223"/><use xlink:href="#42" y="30.394"/><use xlink:href="#43" y="32.565"/><use xlink:href="#44" y="34.736"/><use xlink:href="#45" y="36.907"/><use xlink:href="#46" y="39.078"/><use xlink:href="#47" y="41.249"/><use xlink:href="#48" y="43.42"/><use xlink:href="#49" y="47.762"/><use xlink:href="#50" y="49.933"/></svg><svg x="13277"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#21"/><use xlink:href="#22" y="2.171"/><use xlink:href="#25" y="4.342"/><use xlink:href="#30" y="6.513"/><use xlink:href="#34" y="8.684"/><use xlink:href="#35" y="13.026"/><use xlink:href="#36" y="15.197"/><use xlink:href="#37" y="19.539"/><use xlink:href="#38" y="21.71"/><use xlink:href="#39" y="23.881"/><use xlink:href="#40" y="26.052"/><use xlink:href="#41" y="28.223"/><use xlink:href="#42" y="30.394"/><use xlink:href="#43" y="32.565"/><use xlink:href="#44" y="34.736"/><use xlink:href="#45" y="36.907"/><use xlink:href="#46" y="39.078"/><use xlink:href="#47" y="41.249"/><use xlink:href="#48" y="43.42"/><use xlink:href="#49" y="47.762"/><use xlink:href="#50" y="49.933"/><use xlink:href="#51" y="52.104"/></svg><svg x="13464"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#22"/><use xlink:href="#25" y="2.171"/><use xlink:href="#30" y="4.342"/><use xlink:href="#34" y="6.513"/><use xlink:href="#35" y="10.855"/><use xlink:href="#36" y="13.026"/><use xlink:href="#37" y="17.368"/><use xlink:href="#38" y="19.539"/><use xlink:href="#39" y="21.71"/><use xlink:href="#40" y="23.881"/><use xlink:href="#41" y="26.052"/><use xlink:href="#42" y="28.223"/><use xlink:href="#43" y="30.394"/><use xlink:href="#44" y="32.565"/><use xlink:href="#45" y="34.736"/><use xlink:href="#46" y="36.907"/><use xlink:href="#47" y="39.078"/><use xlink:href="#48" y="41.249"/><use xlink:href="#49" y="45.591"/><use xlink:href="#50" y="47.762"/><use xlink:href="#51" y="49.933"/><use xlink:href="#52" y="52.104"/></svg><svg x="13651"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#35"/><use xlink:href="#36" y="2.171"/><use xlink:href="#37" y="6.513"/><use xlink:href="#38" y="8.684"/><use xlink:href="#39" y="10.855"/><use xlink:href="#40" y="13.026"/><use xlink:href="#41" y="15.197"/><use xlink:href="#42" y="17.368"/><use xlink:href="#43" y="19.539"/><use xlink:href="#44" y="21.71"/><use xlink:href="#45" y="23.881"/><use xlink:href="#46" y="26.052"/><use xlink:href="#47" y="28.223"/><use xlink:href="#48" y="30.394"/><use xlink:href="#49" y="34.736"/><use xlink:href="#50" y="36.907"/><use xlink:href="#51" y="39.078"/><use xlink:href="#52" y="41.249"/><use xlink:href="#53" y="43.42"/><use xlink:href="#54" y="45.591"/><use xlink:href="#55" y="47.762"/><use xlink:href="#56" y="49.933"/></svg><svg x="13838"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#37" y="2.171"/><use xlink:href="#38" y="4.342"/><use xlink:href="#39" y="6.513"/><use xlink:href="#40" y="8.684"/><use xlink:href="#41" y="10.855"/><use xlink:href="#42" y="13.026"/><use xlink:href="#43" y="15.197"/><use xlink:href="#44" y="17.368"/><use xlink:href="#45" y="19.539"/><use xlink:href="#46" y="21.71"/><use xlink:href="#47" y="23.881"/><use xlink:href="#48" y="26.052"/><use xlink:href="#49" y="30.394"/><use xlink:href="#50" y="32.565"/><use xlink:href="#51" y="34.736"/><use xlink:href="#52" y="36.907"/><use xlink:href="#53" y="39.078"/><use xlink:href="#54" y="41.249"/><use xlink:href="#55" y="43.42"/><use xlink:href="#56" y="45.591"/><use xlink:href="#57" y="49.933"/><use xlink:href="#58" y="52.104"/></svg><svg x="14025"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="54.25"/><use xlink:href="#37" y="2.171"/><use xlink:href="#38" y="4.342"/><use xlink:href="#39" y="6.513"/><use xlink:href="#40" y="8.684"/><use xlink:href="#41" y="10.855"/><use xlink:href="#42" y="13.026"/><use xlink:href="#43" y="15.197"/><use xlink:href="#44" y="17.368"/><use xlink:href="#45" y="19.539"/><use xlink:href="#46" y="21.71"/><use xlink:href="#47" y="23.881"/><use xlink:href="#48" y="26.052"/><use xlink:href="#49" y="30.394"/><use xlink:href="#50" y="32.565"/><use xlink:href="#51" y="34.736"/><use xlink:href="#52" y="36.907"/><use xlink:href="#53" y="39.078"/><use xlink:href="#54" y="41.249"/><use xlink:href="#55" y="43.42"/><use xlink:href="#56" y="45.591"/><use xlink:href="#57" y="49.933"/><use xlink:href="#58" y="52.104"/><use xlink:href="#4" y="54.275"/></svg><svg x="14212"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="54.25"/><use xlink:href="#37"/><use xlink:href="#38" y="2.171"/><use xlink:href="#39" y="4.342"/><use xlink:href="#40" y="6.513"/><use xlink:href="#41" y="8.684"/><use xlink:href="#42" y="10.855"/><use xlink:href="#43" y="13.026"/><use xlink:href="#44" y="15.197"/><use xlink:href="#45" y="17.368"/><use xlink:href="#46" y="19.539"/><use xlink:href="#47" y="21.71"/><use xlink:href="#48" y="23.881"/><use xlink:href="#49" y="28.223"/><use xlink:href="#50" y="30.394"/><use xlink:href="#51" y="32.565"/><use xlink:href="#52" y="34.736"/><use xlink:href="#53" y="36.907"/><use xlink:href="#54" y="39.078"/><use xlink:href="#55" y="41.249"/><use xlink:href="#56" y="43.42"/><use xlink:href="#57" y="47.762"/><use xlink:href="#58" y="49.933"/><text y="53.774" class="c">bash-3.2$</text><text x="10.02" y="53.774" class="c">exit</text></svg></svg></g></g></svg></svg>
'''
'''--- NEARCLI/docs/media/view-account.svg ---
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="700"><rect width="2180" height="906.69" rx="5" ry="5" class="a"/><svg y="0%" x="0%"><circle cx="20" cy="20" r="6" fill="#ff5f58"/><circle cx="40" cy="20" r="6" fill="#ffbd2e"/><circle cx="60" cy="20" r="6" fill="#18c132"/></svg><svg height="846.69" viewBox="0 0 214 84.669" width="2140" x="15" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="50"><style>@keyframes n{0%{transform:translateX(0)}.04%{transform:translateX(-214px)}.05%{transform:translateX(-428px)}5.47%{transform:translateX(-642px)}5.84%{transform:translateX(-856px)}11.32%{transform:translateX(-1070px)}12.08%{transform:translateX(-1284px)}16.69%{transform:translateX(-1498px)}16.73%{transform:translateX(-1712px)}16.74%{transform:translateX(-1926px)}23.39%{transform:translateX(-2354px)}31.68%{transform:translateX(-2782px)}38.19%{transform:translateX(-3424px)}45.76%{transform:translateX(-3638px)}46.62%{transform:translateX(-3852px)}47.48%{transform:translateX(-4066px)}48.38%{transform:translateX(-4280px)}50.51%{transform:translateX(-4494px)}52.44%{transform:translateX(-4708px)}54.47%{transform:translateX(-4922px)}56.81%{transform:translateX(-5136px)}57.54%{transform:translateX(-5350px)}60.67%{transform:translateX(-5564px)}62.91%{transform:translateX(-5778px)}63.6%{transform:translateX(-5992px)}64.91%{transform:translateX(-6206px)}65.63%{transform:translateX(-6420px)}67.63%{transform:translateX(-6634px)}69.28%{transform:translateX(-6848px)}70%{transform:translateX(-7062px)}74%{transform:translateX(-7704px)}83.92%{transform:translateX(-8132px)}85.29%{transform:translateX(-8346px)}89.15%{transform:translateX(-8774px)}89.7%{transform:translateX(-8988px)}90.23%{transform:translateX(-9202px)}90.25%{transform:translateX(-9416px)}to{transform:translateX(-9630px)}}.a{fill:#282d35}.f{fill:#b9c0cb;white-space:pre}.g{fill:#dbab79}.g,.h,.i,.j,.k{white-space:pre}.h{fill:#b9c0cb;font-weight:700}.i,.j,.k{fill:#6f7783}.j,.k{fill:#a8cc8c}.k{fill:#66c2cd}</style><g font-family="Monaco,Consolas,Menlo,'Bitstream Vera Sans Mono','Powerline Symbols',monospace" font-size="1.67"><defs><symbol id="1"><text y="1.67" class="f">The</text><text x="4.008" y="1.67" class="f">default</text><text x="12.024" y="1.67" class="f">interactive</text><text x="24.048" y="1.67" class="f">shell</text><text x="30.06" y="1.67" class="f">is</text><text x="33.066" y="1.67" class="f">now</text><text x="37.074" y="1.67" class="f">zsh.</text></symbol><symbol id="2"><text y="1.67" class="f">To</text><text x="3.006" y="1.67" class="f">update</text><text x="10.02" y="1.67" class="f">your</text><text x="15.03" y="1.67" class="f">account</text><text x="23.046" y="1.67" class="f">to</text><text x="26.052" y="1.67" class="f">use</text><text x="30.06" y="1.67" class="f">zsh,</text><text x="35.07" y="1.67" class="f">please</text><text x="42.084" y="1.67" class="f">run</text><text x="46.092" y="1.67" class="f">`chsh</text><text x="52.104" y="1.67" class="f">-s</text><text x="55.11" y="1.67" class="f">/bin/zsh`.</text></symbol><symbol id="3"><text y="1.67" class="f">For</text><text x="4.008" y="1.67" class="f">more</text><text x="9.018" y="1.67" class="f">details,</text><text x="18.036" y="1.67" class="f">please</text><text x="25.05" y="1.67" class="f">visit</text><text x="31.062" y="1.67" class="f">https://support.apple.com/kb/HT208050.</text></symbol><symbol id="4"><text y="1.67" class="f">bash-3.2$</text></symbol><symbol id="5"><text y="1.67" class="f">bash-3.2$</text><text x="10.02" y="1.67" class="f">./near-cli</text></symbol><symbol id="6"><text y="1.67" class="g">?</text><text x="2.004" y="1.67" class="h">Choose</text><text x="9.018" y="1.67" class="h">your</text><text x="14.028" y="1.67" class="h">action</text><text x="21.042" y="1.67" class="i">›</text></symbol><symbol id="7"><text y="1.67" class="j">✔</text><text x="2.004" y="1.67" class="h">Choose</text><text x="9.018" y="1.67" class="h">your</text><text x="14.028" y="1.67" class="h">action</text><text x="21.042" y="1.67" class="i">·</text><text x="23.046" y="1.67" class="j">View</text><text x="28.056" y="1.67" class="j">account,</text><text x="37.074" y="1.67" class="j">contract</text><text x="46.092" y="1.67" class="j">code,</text><text x="52.104" y="1.67" class="j">contract</text><text x="61.122" y="1.67" class="j">state,</text><text x="68.136" y="1.67" class="j">transaction</text></symbol><symbol id="8"><text y="1.67" class="j">✔</text><text x="2.004" y="1.67" class="h">Сhoose</text><text x="9.018" y="1.67" class="h">what</text><text x="14.028" y="1.67" class="h">you</text><text x="18.036" y="1.67" class="h">want</text><text x="23.046" y="1.67" class="h">to</text><text x="26.052" y="1.67" class="h">view</text><text x="31.062" y="1.67" class="i">·</text><text x="33.066" y="1.67" class="j">View</text><text x="38.076" y="1.67" class="j">properties</text><text x="49.098" y="1.67" class="j">for</text><text x="53.106" y="1.67" class="j">an</text><text x="56.112" y="1.67" class="j">account</text></symbol><symbol id="9"><text y="1.67" class="j">✔</text><text x="2.004" y="1.67" class="h">Select</text><text x="9.018" y="1.67" class="h">NEAR</text><text x="14.028" y="1.67" class="h">protocol</text><text x="23.046" y="1.67" class="h">RPC</text><text x="27.054" y="1.67" class="h">server:</text><text x="35.07" y="1.67" class="i">·</text><text x="37.074" y="1.67" class="j">Testnet</text></symbol><symbol id="10"><text y="1.67" class="f">What</text><text x="5.01" y="1.67" class="f">Account</text><text x="13.026" y="1.67" class="f">ID</text><text x="16.032" y="1.67" class="f">do</text><text x="19.038" y="1.67" class="f">you</text><text x="23.046" y="1.67" class="f">need</text><text x="28.056" y="1.67" class="f">to</text><text x="31.062" y="1.67" class="f">view?:</text><text x="38.076" y="1.67" class="f">volodymyr.testnet</text></symbol><symbol id="11"><text y="1.67" class="j">❯</text><text x="2.004" y="1.67" class="k">View</text><text x="7.014" y="1.67" class="k">this</text><text x="12.024" y="1.67" class="k">account</text><text x="20.04" y="1.67" class="k">at</text><text x="23.046" y="1.67" class="k">final</text><text x="29.058" y="1.67" class="k">block</text></symbol><symbol id="12"><text x="2.004" y="1.67" class="f">View</text><text x="7.014" y="1.67" class="f">this</text><text x="12.024" y="1.67" class="f">account</text><text x="20.04" y="1.67" class="f">at</text><text x="23.046" y="1.67" class="f">block</text><text x="29.058" y="1.67" class="f">heigt</text></symbol><symbol id="13"><text x="2.004" y="1.67" class="f">View</text><text x="7.014" y="1.67" class="f">this</text><text x="12.024" y="1.67" class="f">account</text><text x="20.04" y="1.67" class="f">at</text><text x="23.046" y="1.67" class="f">block</text><text x="29.058" y="1.67" class="f">hash</text></symbol><symbol id="14"><text x="2.004" y="1.67" class="f">View</text><text x="7.014" y="1.67" class="f">this</text><text x="12.024" y="1.67" class="f">account</text><text x="20.04" y="1.67" class="f">at</text><text x="23.046" y="1.67" class="f">final</text><text x="29.058" y="1.67" class="f">block</text></symbol><symbol id="15"><text y="1.67" class="j">❯</text><text x="2.004" y="1.67" class="k">View</text><text x="7.014" y="1.67" class="k">this</text><text x="12.024" y="1.67" class="k">account</text><text x="20.04" y="1.67" class="k">at</text><text x="23.046" y="1.67" class="k">block</text><text x="29.058" y="1.67" class="k">heigt</text></symbol><symbol id="16"><text y="1.67" class="j">✔</text><text x="2.004" y="1.67" class="h">Choose</text><text x="9.018" y="1.67" class="h">your</text><text x="14.028" y="1.67" class="h">action</text><text x="21.042" y="1.67" class="i">·</text><text x="23.046" y="1.67" class="j">View</text><text x="28.056" y="1.67" class="j">this</text><text x="33.066" y="1.67" class="j">account</text><text x="41.082" y="1.67" class="j">at</text><text x="44.088" y="1.67" class="j">final</text><text x="50.1" y="1.67" class="j">block</text></symbol><symbol id="17"><text y="1.67" class="f">Account</text><text x="8.016" y="1.67" class="f">details</text><text x="16.032" y="1.67" class="f">for</text><text x="20.04" y="1.67" class="f">&apos;volodymyr.testnet&apos;</text><text x="40.08" y="1.67" class="f">at</text><text x="43.086" y="1.67" class="f">block</text><text x="49.098" y="1.67" class="f">#49788132</text><text x="59.118" y="1.67" class="f">(ApumAzJnz5bHnheUwtNNeiHW4nRJ8TZJgqQLBdns3c9d)</text></symbol><symbol id="18"><text y="1.67" class="f">Native</text><text x="7.014" y="1.67" class="f">account</text><text x="15.03" y="1.67" class="f">balance:</text><text x="24.048" y="1.67" class="f">256.718</text><text x="32.064" y="1.67" class="f">NEAR</text></symbol><symbol id="19"><text y="1.67" class="f">Validator</text><text x="10.02" y="1.67" class="f">stake:</text><text x="17.034" y="1.67" class="f">0</text><text x="19.038" y="1.67" class="f">NEAR</text></symbol><symbol id="20"><text y="1.67" class="f">Storage</text><text x="8.016" y="1.67" class="f">used</text><text x="13.026" y="1.67" class="f">by</text><text x="16.032" y="1.67" class="f">the</text><text x="20.04" y="1.67" class="f">account:</text><text x="29.058" y="1.67" class="f">115385</text><text x="36.072" y="1.67" class="f">bytes</text></symbol><symbol id="21"><text y="1.67" class="f">Contract</text><text x="9.018" y="1.67" class="f">code</text><text x="14.028" y="1.67" class="f">SHA-256</text><text x="22.044" y="1.67" class="f">checksum</text><text x="31.062" y="1.67" class="f">(hex):</text><text x="38.076" y="1.67" class="f">4de7df8ee6ff3780cfed298ceafde26e7477041ca8e2af7ae8c749de7068c0f2</text></symbol><symbol id="22"><text y="1.67" class="f">Number</text><text x="7.014" y="1.67" class="f">of</text><text x="10.02" y="1.67" class="f">access</text><text x="17.034" y="1.67" class="f">keys:</text><text x="23.046" y="1.67" class="f">7</text></symbol><symbol id="23"><text x="3.006" y="1.67" class="f">1.</text><text x="6.012" y="1.67" class="f">ed25519:2KZwhWEM5hbtP28kpx9TER3zyz9rL3Az1fcHsgr2Fzd1</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">9)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="24"><text x="3.006" y="1.67" class="f">2.</text><text x="6.012" y="1.67" class="f">ed25519:36u45LFDfgKQYr8ApgBi1kUHN5FpkTQRqvt66cwEdqiK</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">0)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="25"><text x="3.006" y="1.67" class="f">3.</text><text x="6.012" y="1.67" class="f">ed25519:7FmDRADa1v4BcLiiR9MPPdmWQp3Um1iPdAYATvBY1YzS</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">168)</text><text x="72.144" y="1.67" class="f">is</text><text x="75.15" y="1.67" class="f">granted</text><text x="83.166" y="1.67" class="f">to</text><text x="86.172" y="1.67" class="f">full</text><text x="91.182" y="1.67" class="f">access</text></symbol><symbol id="26"><text x="3.006" y="1.67" class="f">4.</text><text x="6.012" y="1.67" class="f">ed25519:8b6ghV9BLNNB7RwaxSxjbH636bfM9m6NL7bmLBSXPqK8</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">2)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="27"><text x="3.006" y="1.67" class="f">5.</text><text x="6.012" y="1.67" class="f">ed25519:937VyVwszEH13quNuPM4nNQTrDssNzRNnLMjPbN92tgu</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">3)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="28"><text x="3.006" y="1.67" class="f">6.</text><text x="6.012" y="1.67" class="f">ed25519:ApWodksvd7grTjFFimCroLxvrVDi7WD6g6gDE7RuhoGH</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">1)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="29"><text x="3.006" y="1.67" class="f">7.</text><text x="6.012" y="1.67" class="f">ed25519:JC5R9H6wjthHeumnUePRjvJNJrRm6ZTFUoi1NYuj9DBZ</text><text x="59.118" y="1.67" class="f">(nonce:</text><text x="67.134" y="1.67" class="f">0)</text><text x="70.14" y="1.67" class="f">is</text><text x="73.146" y="1.67" class="f">granted</text><text x="81.162" y="1.67" class="f">to</text><text x="84.168" y="1.67" class="f">full</text><text x="89.178" y="1.67" class="f">access</text></symbol><symbol id="a"><path fill="transparent" d="M0 0h214v39H0z"/></symbol><symbol id="b"><path fill="#6f7683" d="M0 0h1.102v2.171H0z"/></symbol></defs><path class="a" d="M0 0h214v84.669H0z"/><g style="animation-duration:23.229185s;animation-iteration-count:infinite;animation-name:n;animation-timing-function:steps(1,end)"><svg width="9844"><svg><use xlink:href="#a"/><use xlink:href="#b" x="-.004"/></svg><svg x="214"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/></svg><svg x="428"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#4" y="8.684"/></svg><svg x="642"><use xlink:href="#a"/><use xlink:href="#b" x="10.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="f">bash-3.2$</text><text x="10.02" y="10.354" class="f">.</text></svg><svg x="856"><use xlink:href="#a"/><use xlink:href="#b" x="11.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="f">bash-3.2$</text><text x="10.02" y="10.354" class="f">./</text></svg><svg x="1070"><use xlink:href="#a"/><use xlink:href="#b" x="12.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><text y="10.354" class="f">bash-3.2$</text><text x="10.02" y="10.354" class="f">./n</text></svg><svg x="1284"><use xlink:href="#a"/><use xlink:href="#b" x="20.996" y="8.659"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="1498"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="10.83"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="1712"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="13.001"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="1926"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#6" y="13.026"/><text y="16.867" class="j">❯</text><text x="2.004" y="16.867" class="k">View</text><text x="7.014" y="16.867" class="k">account,</text><text x="16.032" y="16.867" class="k">contract</text><text x="25.05" y="16.867" class="k">code,</text><text x="31.062" y="16.867" class="k">contract</text><text x="40.08" y="16.867" class="k">state,</text><text x="47.094" y="16.867" class="k">transaction</text><text x="2.004" y="19.038" class="f">Transfer</text><text x="11.022" y="19.038" class="f">tokens</text><text x="2.004" y="21.209" class="f">Execute</text><text x="10.02" y="21.209" class="f">function</text><text x="19.038" y="21.209" class="f">(contract</text><text x="29.058" y="21.209" class="f">method)</text><text x="2.004" y="23.38" class="f">Add</text><text x="6.012" y="23.38" class="f">access</text><text x="13.026" y="23.38" class="f">key,</text><text x="18.036" y="23.38" class="f">contract</text><text x="27.054" y="23.38" class="f">code,</text><text x="33.066" y="23.38" class="f">stake</text><text x="39.078" y="23.38" class="f">proposal,</text><text x="49.098" y="23.38" class="f">sub-account,</text><text x="62.124" y="23.38" class="f">implicit-account</text><text x="2.004" y="25.551" class="f">Delete</text><text x="9.018" y="25.551" class="f">access</text><text x="16.032" y="25.551" class="f">key,</text><text x="21.042" y="25.551" class="f">account</text><text x="2.004" y="27.722" class="f">Construct</text><text x="12.024" y="27.722" class="f">a</text><text x="14.028" y="27.722" class="f">new</text><text x="18.036" y="27.722" class="f">transaction</text><text x="2.004" y="29.893" class="f">Helpers</text></svg><svg x="2140"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/></svg><svg x="2354"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><text y="19.038" class="g">?</text><text x="2.004" y="19.038" class="h">Сhoose</text><text x="9.018" y="19.038" class="h">what</text><text x="14.028" y="19.038" class="h">you</text><text x="18.036" y="19.038" class="h">want</text><text x="23.046" y="19.038" class="h">to</text><text x="26.052" y="19.038" class="h">view</text><text x="31.062" y="19.038" class="i">›</text><text y="21.209" class="j">❯</text><text x="2.004" y="21.209" class="k">View</text><text x="7.014" y="21.209" class="k">properties</text><text x="18.036" y="21.209" class="k">for</text><text x="22.044" y="21.209" class="k">an</text><text x="25.05" y="21.209" class="k">account</text><text x="2.004" y="23.38" class="f">View</text><text x="7.014" y="23.38" class="f">a</text><text x="9.018" y="23.38" class="f">contract</text><text x="18.036" y="23.38" class="f">code</text><text x="2.004" y="25.551" class="f">View</text><text x="7.014" y="25.551" class="f">a</text><text x="9.018" y="25.551" class="f">contract</text><text x="18.036" y="25.551" class="f">state</text><text x="2.004" y="27.722" class="f">View</text><text x="7.014" y="27.722" class="f">a</text><text x="9.018" y="27.722" class="f">transaction</text><text x="21.042" y="27.722" class="f">status</text></svg><svg x="2568"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/></svg><svg x="2782"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><text y="23.38" class="g">?</text><text x="2.004" y="23.38" class="h">Select</text><text x="9.018" y="23.38" class="h">NEAR</text><text x="14.028" y="23.38" class="h">protocol</text><text x="23.046" y="23.38" class="h">RPC</text><text x="27.054" y="23.38" class="h">server:</text><text x="35.07" y="23.38" class="i">›</text><text y="25.551" class="j">❯</text><text x="2.004" y="25.551" class="k">Testnet</text><text x="2.004" y="27.722" class="f">Mainnet</text><text x="2.004" y="29.893" class="f">Betanet</text><text x="2.004" y="32.064" class="f">Custom</text></svg><svg x="2996"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/></svg><svg x="3210"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="23.856"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/></svg><svg x="3424"><use xlink:href="#a"/><use xlink:href="#b" x="37.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text></svg><svg x="3638"><use xlink:href="#a"/><use xlink:href="#b" x="38.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">v</text></svg><svg x="3852"><use xlink:href="#a"/><use xlink:href="#b" x="39.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">vo</text></svg><svg x="4066"><use xlink:href="#a"/><use xlink:href="#b" x="40.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">vol</text></svg><svg x="4280"><use xlink:href="#a"/><use xlink:href="#b" x="41.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volo</text></svg><svg x="4494"><use xlink:href="#a"/><use xlink:href="#b" x="42.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volod</text></svg><svg x="4708"><use xlink:href="#a"/><use xlink:href="#b" x="43.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volody</text></svg><svg x="4922"><use xlink:href="#a"/><use xlink:href="#b" x="44.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodym</text></svg><svg x="5136"><use xlink:href="#a"/><use xlink:href="#b" x="45.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymy</text></svg><svg x="5350"><use xlink:href="#a"/><use xlink:href="#b" x="46.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr</text></svg><svg x="5564"><use xlink:href="#a"/><use xlink:href="#b" x="47.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.</text></svg><svg x="5778"><use xlink:href="#a"/><use xlink:href="#b" x="48.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.t</text></svg><svg x="5992"><use xlink:href="#a"/><use xlink:href="#b" x="49.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.te</text></svg><svg x="6206"><use xlink:href="#a"/><use xlink:href="#b" x="50.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.tes</text></svg><svg x="6420"><use xlink:href="#a"/><use xlink:href="#b" x="51.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.test</text></svg><svg x="6634"><use xlink:href="#a"/><use xlink:href="#b" x="52.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.testn</text></svg><svg x="6848"><use xlink:href="#a"/><use xlink:href="#b" x="53.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><text y="27.722" class="f">What</text><text x="5.01" y="27.722" class="f">Account</text><text x="13.026" y="27.722" class="f">ID</text><text x="16.032" y="27.722" class="f">do</text><text x="19.038" y="27.722" class="f">you</text><text x="23.046" y="27.722" class="f">need</text><text x="28.056" y="27.722" class="f">to</text><text x="31.062" y="27.722" class="f">view?:</text><text x="38.076" y="27.722" class="f">volodymyr.testne</text></svg><svg x="7062"><use xlink:href="#a"/><use xlink:href="#b" x="54.996" y="26.027"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/></svg><svg x="7276"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="28.198"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/></svg><svg x="7490"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="30.369"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/></svg><svg x="7704"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#6" y="30.394"/><use xlink:href="#11" y="32.565"/><use xlink:href="#12" y="34.736"/><use xlink:href="#13" y="36.907"/></svg><svg x="7918"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#6" y="30.394"/><use xlink:href="#14" y="32.565"/><use xlink:href="#15" y="34.736"/><use xlink:href="#13" y="36.907"/></svg><svg x="8132"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#6" y="30.394"/><use xlink:href="#14" y="32.565"/><use xlink:href="#15" y="34.736"/><use xlink:href="#13" y="36.907"/></svg><svg x="8346"><use xlink:href="#a"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#6" y="30.394"/><use xlink:href="#11" y="32.565"/><use xlink:href="#12" y="34.736"/><use xlink:href="#13" y="36.907"/></svg><svg x="8560"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="32.54"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/></svg><svg x="8774"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="34.711"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/></svg><svg x="8988"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="45.566"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/><use xlink:href="#17" y="34.736"/><use xlink:href="#18" y="36.907"/><use xlink:href="#19" y="39.078"/><use xlink:href="#20" y="41.249"/><use xlink:href="#21" y="43.42"/></svg><svg x="9202"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="62.934"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/><use xlink:href="#17" y="34.736"/><use xlink:href="#18" y="36.907"/><use xlink:href="#19" y="39.078"/><use xlink:href="#20" y="41.249"/><use xlink:href="#21" y="43.42"/><use xlink:href="#22" y="45.591"/><use xlink:href="#23" y="47.762"/><use xlink:href="#24" y="49.933"/><use xlink:href="#25" y="52.104"/><use xlink:href="#26" y="54.275"/><use xlink:href="#27" y="56.446"/><use xlink:href="#28" y="58.617"/><use xlink:href="#29" y="60.788"/></svg><svg x="9416"><use xlink:href="#a"/><use xlink:href="#b" x="9.996" y="62.934"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/><use xlink:href="#17" y="34.736"/><use xlink:href="#18" y="36.907"/><use xlink:href="#19" y="39.078"/><use xlink:href="#20" y="41.249"/><use xlink:href="#21" y="43.42"/><use xlink:href="#22" y="45.591"/><use xlink:href="#23" y="47.762"/><use xlink:href="#24" y="49.933"/><use xlink:href="#25" y="52.104"/><use xlink:href="#26" y="54.275"/><use xlink:href="#27" y="56.446"/><use xlink:href="#28" y="58.617"/><use xlink:href="#29" y="60.788"/><use xlink:href="#4" y="62.959"/></svg><svg x="9630"><use xlink:href="#a"/><use xlink:href="#b" x="-.004" y="65.105"/><use xlink:href="#1" y="2.171"/><use xlink:href="#2" y="4.342"/><use xlink:href="#3" y="6.513"/><use xlink:href="#5" y="8.684"/><use xlink:href="#7" y="13.026"/><use xlink:href="#8" y="17.368"/><use xlink:href="#9" y="21.71"/><use xlink:href="#10" y="26.052"/><use xlink:href="#16" y="30.394"/><use xlink:href="#17" y="34.736"/><use xlink:href="#18" y="36.907"/><use xlink:href="#19" y="39.078"/><use xlink:href="#20" y="41.249"/><use xlink:href="#21" y="43.42"/><use xlink:href="#22" y="45.591"/><use xlink:href="#23" y="47.762"/><use xlink:href="#24" y="49.933"/><use xlink:href="#25" y="52.104"/><use xlink:href="#26" y="54.275"/><use xlink:href="#27" y="56.446"/><use xlink:href="#28" y="58.617"/><use xlink:href="#29" y="60.788"/><text y="64.629" class="f">bash-3.2$</text><text x="10.02" y="64.629" class="f">exit</text></svg></svg></g></g></svg></svg>

'''
'''--- NEARCLI/k3rn3lpanic.json ---
{"implicit_account_id":"7875e128ffdab2513e27180a406280630476c9a13787da2c6c30677a1a14b936","master_seed_phrase":"    ","private_key":"ed25519:2zbiQ3w85M4LRAnvv8Jg7Rx4X2QdvqpMPiZ8cX7ZASBxsRvCrQ5hBrAqazGMNNwpn45MQ94S747oa1uUNE29y4AZ","public_key":"ed25519:97EBGPGVjBL5h6CZyCjvrqrFN8is48uqVjQZnzFFGhDf","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- README.md ---
# NEAR-Droplinked-Contract
Droplinked contract implementation on NEAR protocol

'''
'''--- droplinked-near/.gitpod.yml ---
image:
  file: .gitpod.Dockerfile
# Options to prebuild the image after github events and set notifications/badges
github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    # enable for all branches in this repo (defaults to false)
    branches: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: true
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: false
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: false

# List the start up tasks. You can start them in parallel in multiple terminals. See https://www.gitpod.io/docs/config-start-tasks/
tasks:
  - before: echo "nvm use default" >> ~/.bashrc && npm install -g near-cli && nvm use default
    init: yarn && yarn dev
    command: source ~/.bashrc; gp open README-Gitpod.md && yarn dev

vscode:
  extensions:
    - hbenl.vscode-test-explorer@2.15.0:koqDUMWDPJzELp/hdS/lWw==
    - Swellaby.vscode-rust-test-adapter@0.11.0:Xg+YeZZQiVpVUsIkH+uiiw==
    - bungcip.better-toml@0.3.2:3QfgGxxYtGHfJKQU7H0nEw==

'''
'''--- droplinked-near/.travis.yml ---
language: node_js
node_js:
  - 12.0
os:
  - linux
  - osx
  - windows
before_install:
  - curl https://sh.rustup.rs -sSf -m 60 | sh -s -- -y -v --default-toolchain stable
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then HOME="/c/Users/travis"; fi
  - export PATH="$HOME/.cargo/bin:$PATH"
  - rustup target add wasm32-unknown-unknown
script:
  - npm run build
  - cargo test --package status-message -- --nocapture
'''
'''--- droplinked-near/Cargo.toml ---
[package]
name = "status-message"
version = "0.1.0"
authors = ["Near Inc <hello@nearprotocol.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
serde = { version = "*", features = ["derive"] }
serde_json = "*"
near-sdk = "4.0.0"
base16 = { version = "0.2", default-features = false, features = ["alloc"] }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

'''
'''--- droplinked-near/README-Gitpod.md ---
Status Message in Rust - Gitpod version
=======================================

This smart contract saves and records the status messages of NEAR accounts that call it.

**Note**: this README is specific to Gitpod and this example. For local development, please see [README.md](README.md).

## Using this contract

### Web app

Deploy the smart contract to a specific account created with the NEAR Wallet. Then interact with the smart contract using near-api-js on the frontend.

In the project root, login with `near-cli` by following the instructions after this command:

```
near login
```

Deploy the contract to your NEAR account:

```bash
near deploy --wasmFile res/status_message.wasm --accountId YOUR_ACCOUNT_NAME
```

Build the frontend:

```bash
npm start
```

If all is successful the app should be live at `localhost:1234`!

### CLI

In Gitpod, a process has automatically created a new NEAR account that's useful for a quick (and likely temporary) usage.
We've set an environment variable in Gitpod with the account name. At the bottom of this screen there's a Terminal.

You may see the NEAR account by running this command:
```bash
echo $CONTRACT_NAME
```

The next command will call the contract's `set_status` method:

```bash
near call $CONTRACT_NAME set_status '{"message": "aloha!"}' --accountId $CONTRACT_NAME
```

To retrieve the message from the contract, call `get_status` with the following:

```bash
near view $CONTRACT_NAME get_status '{"account_id": "'$CONTRACT_NAME'"}' --accountId $CONTRACT_NAME
```

Note that these status messages are stored per account in a `HashMap`. See `src/lib.rs` for the code. We can try the same steps with another account to verify.
**Note**: we're adding `NEW_ACCOUNT_NAME` for the next couple steps.

There are two ways to create a new account:
 - the NEAR Wallet (as we did before)
 - `near create_account NEW_ACCOUNT_NAME --masterAccount $CONTRACT_NAME`

Now call the contract on the first account (where it's deployed):

```bash
near call $CONTRACT_NAME set_status '{"message": "bonjour"}' --accountId NEW_ACCOUNT_NAME
```

```bash
near view $CONTRACT_NAME get_status '{"account_id": "NEW_ACCOUNT_NAME"}'
```

Returns `bonjour`.

Make sure the original status remains:

```bash
near view $CONTRACT_NAME get_status '{"account_id": "$CONTRACT_NAME"}'
```

Now that you've seen this working in Gitpod, feel free to clone this repository and use it as a starting point for your own project.

## Testing
To test run:
```bash
cargo test --package status-message -- --nocapture
```

## Data collection
By using Gitpod in this project, you agree to opt-in to basic, anonymous analytics. No personal information is transmitted. Instead, these usage statistics aid in discovering potential bugs and user flow information.

'''
'''--- droplinked-near/README-Windows.md ---
Status Message
==============

This smart contract saves and records the status messages of NEAR accounts that call it.

**Note**: this README is specific to Windows and this example. For development on OS X or Linux, please see [README.md](README.md).

## Prerequisites
Ensure `near-cli` is installed by running:

```
near --version
```

If needed, install `near-cli`:

```
npm install near-cli -g
```

Ensure `Rust` is installed by running:

```
rustc --version
```

If needed, install `Rust`:

```
curl https://sh.rustup.rs -sSf | sh
```

Install dependencies

```
npm install
```

## Building this contract
To make the build process compatible with multiple operating systems, the build process exists as a script in `package.json`.
There are a number of special flags used to compile the smart contract into the wasm file.
Run this command to build and place the wasm file in the `res` directory:
```bash
npm run build
```

**Note**: Instead of `npm`, users of [yarn](https://yarnpkg.com) may run:
```bash
yarn build
```

### Important
If you encounter an error similar to:
>note: the `wasm32-unknown-unknown` target may not be installed

Then run:

```bash
rustup target add wasm32-unknown-unknown
```

## Using this contract

### Web app

Deploy the smart contract to a specific account created with the NEAR Wallet. Then interact with the smart contract using near-api-js on the frontend.

If you do not have a NEAR account, please create one with [NEAR Wallet](https://wallet.testnet.near.org).

Make sure you have credentials saved locally for the account you want to deploy the contract to. To perform this run the following `near-cli` command:

```
near login
```

Deploy the contract to your NEAR account:

```bash
near deploy --wasmFile res/status_message.wasm --accountId YOUR_ACCOUNT_NAME
```

Build the frontend:

```bash
npm start
```

If all is successful the app should be live at `localhost:1234`!

### Quickest deploy
Build and deploy this smart contract to an development account. This development account will be created automatically and is not intended to be permanent. Please see the "Standard deploy" section for creating a more personalized account to deploy to.

```bash
near dev-deploy --wasmFile res/status_message.wasm --helperUrl https://near-contract-helper.onrender.com
```

Behind the scenes, this is creating an account and deploying a contract to it. On the console, notice a message like:

>Done deploying to dev-1234567890123

In this instance, the account is `dev-1234567890123`. A file has been created containing the key to the account, located at `neardev/dev-account.env`. To make the next few steps easier, we're going to set an environment variable containing this development account id and use that when copy/pasting commands.

If the account name is not immediately visible on the Command Prompt, you may find it by running:

```bash
type neardev\dev-account.env
```

It will display something similar to `CONTRACT_NAME=dev-12345678901234`.
Please set the Windows environment variable by copying that value and running `set` like so:

```bash
set CONTRACT_NAME=dev-12345678901234
```

You can tell if the environment variable is set correctly if your command line prints the account name after this command:
```bash
echo %CONTRACT_NAME%
```

The next command will call the contract's `set_status` method:

```bash
near call %CONTRACT_NAME% set_status "{\"message\": \"aloha!\"}" --accountId %CONTRACT_NAME%
```

**Note**: at the time of this writing, Windows does not handle single quotes `'` well, so these commands must use escaped double-quotes `\"` which, as you may know, equates to a regular double quote `"` when parsed. Apologies for some of the unsightly commands, but it's out of necessity.

To retrieve the message from the contract, call `get_status` with the following:

```bash
near view %CONTRACT_NAME% get_status "{\"account_id\": \""%CONTRACT_NAME%"\"}" --accountId %CONTRACT_NAME%
```

### Standard deploy
In this option, the smart contract will get deployed to a specific account created with the NEAR Wallet.

If you do not have a NEAR account, please create one with [NEAR Wallet](https://wallet.testnet.near.org).

Make sure you have credentials saved locally for the account you want to deploy the contract to. To perform this run the following `near-cli` command:

```
near login
```

Deploy the contract:

```bash
near deploy --wasmFile res/status_message.wasm --accountId YOUR_ACCOUNT_NAME
```

Set a status for your account:

```bash
near call YOUR_ACCOUNT_NAME set_status "{\"message\": \"aloha friend\"}" --accountId YOUR_ACCOUNT_NAME
```

Get the status:

```bash
near view YOUR_ACCOUNT_NAME get_status "{\"account_id\": \"YOUR_ACCOUNT_NAME\"}"
```

Note that these status messages are stored per account in a `HashMap`. See `src/lib.rs` for the code. We can try the same steps with another account to verify.
**Note**: we're adding `NEW_ACCOUNT_NAME` for the next couple steps.

There are two ways to create a new account:
 - the NEAR Wallet (as we did before)
 - `near create_account NEW_ACCOUNT_NAME --masterAccount YOUR_ACCOUNT_NAME`

Now call the contract on the first account (where it's deployed):

```bash
near call YOUR_ACCOUNT_NAME set_status "{\"message\": \"bonjour\"}" --accountId NEW_ACCOUNT_NAME
```

```bash
near view YOUR_ACCOUNT_NAME get_status "{\"account_id\": \"NEW_ACCOUNT_NAME\"}"
```

Returns `bonjour`.

Make sure the original status remains:

```bash
near view YOUR_ACCOUNT_NAME get_status "{\"account_id\": \"YOUR_ACCOUNT_NAME\"}"
```

## Testing
To test run:
```bash
cargo test --package status-message -- --nocapture
```

'''
'''--- droplinked-near/README.md ---
Status Message
==============

[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/near-examples/rust-status-message)

<!-- MAGIC COMMENT: DO NOT DELETE! Everything above this line is hidden on NEAR Examples page -->

This smart contract saves and records the status messages of NEAR accounts that call it.

Windows users: please visit the [Windows-specific README file](README-Windows.md).

## Prerequisites
Ensure `near-cli` is installed by running:

```
near --version
```

If needed, install `near-cli`:

```
npm install near-cli -g
```

Ensure `Rust` is installed by running:

```
rustc --version
```

If needed, install `Rust`:

```
curl https://sh.rustup.rs -sSf | sh
```

Install dependencies

```
npm install
```

## Quick Start
To run this project locally:

1. Prerequisites: Make sure you have Node.js ≥ 12 installed (https://nodejs.org), then use it to install yarn: `npm install --global yarn` (or just `npm i -g yarn`)
2. Run the local development server: `yarn && yarn dev` (see package.json for a full list of scripts you can run with yarn)
Now you'll have a local development environment backed by the NEAR TestNet! Running yarn dev will tell you the URL you can visit in your browser to see the app.

## Building this contract
To make the build process compatible with multiple operating systems, the build process exists as a script in `package.json`.
There are a number of special flags used to compile the smart contract into the wasm file.
Run this command to build and place the wasm file in the `res` directory:
```bash
npm run build
```

**Note**: Instead of `npm`, users of [yarn](https://yarnpkg.com) may run:
```bash
yarn build
```

### Important
If you encounter an error similar to:
>note: the `wasm32-unknown-unknown` target may not be installed

Then run:

```bash
rustup target add wasm32-unknown-unknown
```

## Using this contract

### Web app

Deploy the smart contract to a specific account created with the NEAR Wallet. Then interact with the smart contract using near-api-js on the frontend.

If you do not have a NEAR account, please create one with [NEAR Wallet](https://wallet.testnet.near.org).

Make sure you have credentials saved locally for the account you want to deploy the contract to. To perform this run the following `near-cli` command:

```
near login
```

Deploy the contract to your NEAR account:

```bash
near deploy --wasmFile res/status_message.wasm --accountId YOUR_ACCOUNT_NAME
```

Build the frontend:

```bash
npm start
```

If all is successful the app should be live at `localhost:1234`!

### Quickest deploy
Build and deploy this smart contract to an development account. This development account will be created automatically and is not intended to be permanent. Please see the "Standard deploy" section for creating a more personalized account to deploy to.

```bash
near dev-deploy --wasmFile res/status_message.wasm --helperUrl https://near-contract-helper.onrender.com
```

Behind the scenes, this is creating an account and deploying a contract to it. On the console, notice a message like:

>Done deploying to dev-1234567890123

In this instance, the account is `dev-1234567890123`. A file has been created containing the key to the account, located at `neardev/dev-account`. To make the next few steps easier, we're going to set an environment variable containing this development account id and use that when copy/pasting commands.
Run this command to the environment variable:

```bash
source neardev/dev-account.env
```

You can tell if the environment variable is set correctly if your command line prints the account name after this command:
```bash
echo $CONTRACT_NAME
```

The next command will call the contract's `set_status` method:

```bash
near call $CONTRACT_NAME set_status '{"message": "aloha!"}' --accountId $CONTRACT_NAME
```

To retrieve the message from the contract, call `get_status` with the following:

```bash
near view $CONTRACT_NAME get_status '{"account_id": "'$CONTRACT_NAME'"}'
```

### Standard deploy
In this option, the smart contract will get deployed to a specific account created with the NEAR Wallet.

If you do not have a NEAR account, please create one with [NEAR Wallet](https://wallet.testnet.near.org).

Make sure you have credentials saved locally for the account you want to deploy the contract to. To perform this run the following `near-cli` command:

```
near login
```

Deploy the contract:

```bash
near deploy --wasmFile res/status_message.wasm --accountId YOUR_ACCOUNT_NAME
```

Set a status for your account:

```bash
near call YOUR_ACCOUNT_NAME set_status '{"message": "aloha friend"}' --accountId YOUR_ACCOUNT_NAME
```

Get the status:

```bash
near view YOUR_ACCOUNT_NAME get_status '{"account_id": "YOUR_ACCOUNT_NAME"}'
```

Note that these status messages are stored per account in a `HashMap`. See `src/lib.rs` for the code. We can try the same steps with another account to verify.
**Note**: we're adding `NEW_ACCOUNT_NAME` for the next couple steps.

There are two ways to create a new account:
 - the NEAR Wallet (as we did before)
 - `near create_account NEW_ACCOUNT_NAME --masterAccount YOUR_ACCOUNT_NAME`

Now call the contract on the first account (where it's deployed):

```bash
near call YOUR_ACCOUNT_NAME set_status '{"message": "bonjour"}' --accountId NEW_ACCOUNT_NAME
```

```bash
near view YOUR_ACCOUNT_NAME get_status '{"account_id": "NEW_ACCOUNT_NAME"}'
```

Returns `bonjour`.

Make sure the original status remains:

```bash
near view YOUR_ACCOUNT_NAME get_status '{"account_id": "YOUR_ACCOUNT_NAME"}'
```

## Testing
To test run:
```bash
cargo test --package status-message -- --nocapture
```

'''
'''--- droplinked-near/borsh.js ---
const borsh = require("borsh");

class Assignable {
  constructor(properties) {
    Object.keys(properties).map((key) => {
      this[key] = properties[key];
    });
  }
}

class StatusMessage extends Assignable {}

class Record extends Assignable {}

const schema = new Map([
  [StatusMessage, { kind: "struct", fields: [["records", [Record]]] }],
  [
    Record,
    {
      kind: "struct",
      fields: [
        ["k", "string"],
        ["v", "string"],
      ],
    },
  ],
]);

const stateKey = "U1RBVEU=";
console.log(Buffer.from(stateKey, "base64"));
console.log(Buffer.from(stateKey, "base64").toString());
const stateValue =
  "AgAAAA8AAABhbGljZS50ZXN0Lm5lYXIFAAAAaGVsbG8NAAAAYm9iLnRlc3QubmVhcgUAAAB3b3JsZA==";
const stateValueBuffer = Buffer.from(stateValue, "base64");
let statusMessage = borsh.deserialize(schema, StatusMessage, stateValueBuffer);
console.log(statusMessage);

console.log(
  Buffer.from(borsh.serialize(schema, statusMessage)).toString("base64")
);
statusMessage.records.push(new Record({ k: "alice.near", v: "hello world" }));
console.log(statusMessage);

console.log(
  Buffer.from(borsh.serialize(schema, statusMessage)).toString("base64")
);

'''
'''--- droplinked-near/frontend/App.js ---
import "regenerator-runtime/runtime";
import React, { useState, useEffect } from "react";
import PropTypes from "prop-types";
import Big from "big.js";
import Form from "./components/Form";

const BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();

const App = ({ contract, currentUser, nearConfig, wallet }) => {
  const [status, setStatus] = useState(null);

  useEffect(async () => {
    if (currentUser) {
      const status = await contract.get_status({
        account_id: currentUser.accountId
      });

      setStatus(status);
    }
  });

  const onSubmit = async event => {
    event.preventDefault();

    const { fieldset, message } = event.target.elements;
    fieldset.disabled = true;

    await contract.set_status(
      {
        message: message.value,
        account_id: currentUser.accountId
      },
      BOATLOAD_OF_GAS
    );

    const status = await contract.get_status({
      account_id: currentUser.accountId
    });

    setStatus(status);

    message.value = "";
    fieldset.disabled = false;
    message.focus();
  };

  const signIn = () => {
    wallet.requestSignIn(
      {contractId: nearConfig.contractName, methodNames: ['set_status']},
      "NEAR Status Message"
    );
  };

  const signOut = () => {
    wallet.signOut();
    window.location.replace(window.location.origin + window.location.pathname);
  };

  return (
    <main>
      <header>
        <h1>NEAR Status Message</h1>

        {currentUser ?
          <p>Currently signed in as: <code>{currentUser.accountId}</code></p>
        :
          <p>Update or add a status message! Please login to continue.</p>
        }

        { currentUser
          ? <button onClick={signOut}>Log out</button>
          : <button onClick={signIn}>Log in</button>
        }
      </header>

      {currentUser &&
        <Form
          onSubmit={onSubmit}
          currentUser={currentUser}
        />
      }

      {status ?
        <>
          <p>Your current status:</p>
          <p>
            <code>
              {status}
            </code>
          </p>
        </>
      :
        <p>No status message yet!</p>
      }
    </main>
  );
};

App.propTypes = {
  contract: PropTypes.shape({
    set_status: PropTypes.func.isRequired,
    get_status: PropTypes.func.isRequired
  }).isRequired,
  currentUser: PropTypes.shape({
    accountId: PropTypes.string.isRequired,
    balance: PropTypes.string.isRequired
  }),
  nearConfig: PropTypes.shape({
    contractName: PropTypes.string.isRequired
  }).isRequired,
  wallet: PropTypes.shape({
    requestSignIn: PropTypes.func.isRequired,
    signOut: PropTypes.func.isRequired
  }).isRequired
};

export default App;

'''
'''--- droplinked-near/frontend/config.js ---
const CONTRACT_NAME = process.env.CONTRACT_NAME || "testnet";

function getConfig(env) {
  switch(env) {
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.near.org',
        helperUrl: 'https://helper.mainnet.near.org'
      };
    // This is an example app so production is set to testnet.
    // You can move production to mainnet if that is applicable.
    case 'production':
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org'
      };
    case 'betanet':
      return {
        networkId: 'betanet',
        nodeUrl: 'https://rpc.betanet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.betanet.near.org',
        helperUrl: 'https://helper.betanet.near.org'
      };
    case 'local':
      return {
        networkId: 'local',
        nodeUrl: 'http://localhost:3030',
        keyPath: `${process.env.HOME}/.near/validator_key.json`,
        walletUrl: 'http://localhost:4000/wallet',
        contractName: CONTRACT_NAME
      };
    case 'test':
    case 'ci':
      return {
        networkId: 'shared-test',
        nodeUrl: 'https://rpc.ci-testnet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      };
    case 'ci-betanet':
      return {
        networkId: 'shared-test-staging',
        nodeUrl: 'https://rpc.ci-betanet.near.org',
        contractName: CONTRACT_NAME,
        masterAccount: 'test.near'
      };
    default:
      throw Error(`Unconfigured environment '${env}'. Can be configured in frontend/config.js.`);
  }
}

module.exports = getConfig;

'''
'''--- droplinked-near/frontend/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="./favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <link rel="apple-touch-icon" href="./favicon.ico" />

    <link href="global.scss" rel="stylesheet" />

    <title>NEAR Status Message</title>
    <meta property="og:title" content="NEAR Status Message">
    <meta property="og:description" content="Update a user's status message on the NEAR blockchain">
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>

    <script src="./index.js"></script>
  </body>
</html>

'''
'''--- droplinked-near/frontend/index.js ---
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import getConfig from './config.js';
import * as nearAPI from 'near-api-js';

// Initializing contract
async function initContract() {
  const nearConfig = getConfig(process.env.NODE_ENV || 'testnet');

  // Initializing connection to the NEAR TestNet
  const near = await nearAPI.connect({
    keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),
    ...nearConfig
  });

  // Needed to access wallet
  const walletConnection = new nearAPI.WalletConnection(near);

  // Load in account data
  let currentUser;
  if(walletConnection.getAccountId()) {
    currentUser = {
      accountId: walletConnection.getAccountId(),
      balance: (await walletConnection.account().state()).amount
    };
  }

  // Initializing our contract APIs by contract name and configuration
  const contract = await new nearAPI.Contract(walletConnection.account(), nearConfig.contractName, {
    // View methods are read-only – they don't modify the state, but usually return some value
    viewMethods: ['get_status'],
    // Change methods can modify the state, but you don't receive the returned value when called
    changeMethods: ['set_status'],
    // Sender is the account ID to initialize transactions.
    // getAccountId() will return empty string if user is still unauthorized
    sender: walletConnection.getAccountId()
  });

  return { contract, currentUser, nearConfig, walletConnection };
}

window.nearInitPromise = initContract()
  .then(({ contract, currentUser, nearConfig, walletConnection }) => {
    ReactDOM.render(
      <App
        contract={contract}
        currentUser={currentUser}
        nearConfig={nearConfig}
        wallet={walletConnection}
      />,
      document.getElementById('root')
    );
  });

'''
'''--- droplinked-near/integration-tests/rs/Cargo.toml ---
[package]
name = "rust-status-message-integration-tests"
version = "1.0.0"
publish = false
edition = "2018"

[dev-dependencies]
anyhow = "1.0"
borsh = "0.9"
maplit = "1.0"
near-units = "0.2.0"
# arbitrary_precision enabled for u128 types that workspaces requires for Balance types
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
tokio = { version = "1.18.1", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
workspaces = "0.4.0"
pkg-config = "0.3.1"

[[example]]
name = "integration-tests"
path = "src/tests.rs"

'''
'''--- droplinked-near/integration-tests/rs/src/tests.rs ---
use serde_json::json;
use near_units::parse_near;
use workspaces::prelude::*; 
use workspaces::{network::Sandbox, Account, Contract, Worker};

const WASM_FILEPATH: &str = "../../res/status_message.wasm";

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let worker = workspaces::sandbox().await?;
    let wasm = std::fs::read(WASM_FILEPATH)?;
    let contract = worker.dev_deploy(&wasm).await?;

    // create accounts
    let owner = worker.root_account().unwrap();
    let alice = owner
    .create_subaccount(&worker, "alice")
    .initial_balance(parse_near!("30 N"))
    .transact()
    .await?
    .into_result()?;

    // begin tests  
    test_set_message(&owner, &alice, &contract, &worker).await?;
    test_null_messages(&owner, &alice, &contract, &worker).await?;
    test_differing_statuses(&owner, &alice, &contract, &worker).await?;
    Ok(())
}   

async fn test_set_message(
    owner: &Account,
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    user
        .call(&worker, contract.id(), "set_status")
        .args_json(json!({ "message": "hello" }))?
        .transact()
        .await?;

    let alice_status: String = owner
        .call(&worker, contract.id(), "get_status")
        .args_json(json!({ "account_id": user.id() }))?
        .transact()
        .await?
        .json()?;

    assert_eq!(alice_status, "hello");
    println!("      Passed ✅ set get message");
    Ok(())
}

async fn test_null_messages(
    owner: &Account,
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    let owner_status: Option<String> = user
        .call(&worker, contract.id(), "get_status")
        .args_json(json!({ "account_id": owner.id() }))?
        .transact()
        .await?
        .json()?;

    assert_eq!(owner_status, None);
    println!("      Passed ✅ get nonexistent message");
    Ok(())
}

async fn test_differing_statuses(
    owner: &Account,
    user: &Account,
    contract: &Contract,
    worker: &Worker<Sandbox>,
) -> anyhow::Result<()> {
    owner
        .call(&worker, contract.id(), "set_status")
        .args_json(json!({ "message": "world" }))?
        .transact()
        .await?;

    let alice_status: String = owner
        .call(&worker, contract.id(), "get_status")
        .args_json(json!({ "account_id": user.id() }))?
        .transact()
        .await?
        .json()?;

    assert_eq!(alice_status, "hello");

    let owner_status: String = owner
        .call(&worker, contract.id(), "get_status")
        .args_json(json!({ "account_id": owner.id() }))?
        .transact()
        .await?
        .json()?;

    assert_eq!(owner_status, "world");
    println!("      Passed ✅ root and alice have different statuses");
    Ok(())
}
'''
'''--- droplinked-near/integration-tests/ts/main.ava.ts ---
import { Worker, NEAR, NearAccount } from "near-workspaces";
import anyTest, { TestFn } from "ava";

const test = anyTest as TestFn<{
  worker: Worker;
  accounts: Record<string, NearAccount>;
}>;

test.beforeEach(async (t) => {
  // Init the worker and start a Sandbox server
  const worker = await Worker.init();

  // deploy contract
  const root = worker.rootAccount;
  const contract = await root.devDeploy(
    "./res/status_message.wasm",
    { initialBalance: NEAR.parse("30 N").toJSON() }
  );

  // some test accounts
  const alice = await root.createSubAccount("alice", {
    initialBalance: NEAR.parse("30 N").toJSON(),
  });
  const bob = await root.createSubAccount("bob", {
    initialBalance: NEAR.parse("30 N").toJSON(),
  });
  const charlie = await root.createSubAccount("charlie", {
    initialBalance: NEAR.parse("30 N").toJSON(),
  });

  // Save state for test runs, it is unique for each test
  t.context.worker = worker;
  t.context.accounts = { root, contract, alice, bob, charlie };
});

test.afterEach(async (t) => {
  // Stop Sandbox server
  await t.context.worker.tearDown().catch((error) => {
    console.log("Failed to stop the Sandbox:", error);
  });
});

test("set get message", async (t) => {
  const { contract, alice } = t.context.accounts;
  await alice.call(contract, "set_status", { message: "hello" });
  const aliceStatus = await contract.view("get_status", { account_id: alice });
  t.is(aliceStatus, "hello");
});

test("get nonexistent message", async (t) => {
  const { root, contract } = t.context.accounts;
  const message: null = await contract.view("get_status", {
    account_id: root,
  });
  t.is(message, null);
});

test("root and alice have different statuses", async (t) => {
  const { root, contract, alice } = t.context.accounts;
  await root.call(contract, "set_status", { message: "world" });
  const rootStatus = await contract.view("get_status", { account_id: root });
  t.is(rootStatus, "world");
  const aliceStatus = await contract.view("get_status", { account_id: alice });
  t.is(aliceStatus, null);
});

'''
'''--- droplinked-near/keys/k3rn3lpanic.json ---
{"implicit_account_id":"7875e128ffdab2513e27180a406280630476c9a13787da2c6c30677a1a14b936","master_seed_phrase":"    ","private_key":"ed25519:2zbiQ3w85M4LRAnvv8Jg7Rx4X2QdvqpMPiZ8cX7ZASBxsRvCrQ5hBrAqazGMNNwpn45MQ94S747oa1uUNE29y4AZ","public_key":"ed25519:97EBGPGVjBL5h6CZyCjvrqrFN8is48uqVjQZnzFFGhDf","seed_phrase_hd_path":"m/44'/397'/0'"}
'''
'''--- droplinked-near/package.json ---
{
  "name": "rust-status-message-builder",
  "version": "1.0.0",
  "description": "Compiles NEAR Protocol example of setting and retrieving a status message per NEAR account",
  "scripts": {
    "build": "rustup target add wasm32-unknown-unknown && cargo build --target wasm32-unknown-unknown --release",
    "build:web": "parcel build ./frontend/index.html --public-url ./ --no-minify",
    "postbuild": "cp ./target/wasm32-unknown-unknown/release/status_message.wasm ./res/",
    "deploy:dev": "npm run build && near dev-deploy res/status_message.wasm",
    "dev": "npm run deploy:dev && npm start",
    "start": "npm run build && npm run build:web && env-cmd -f ./neardev/dev-account.env parcel ./frontend/index.html",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "cargo test -- --nocapture",
    "test:integration": "npm run test:integration:rs && npm run test:integration:ts",
    "test:integration:rs": "npm run build && npm run postbuild && cd integration-tests/rs && cargo run --example integration-tests",
    "test:integration:ts": "npm run build && npm run postbuild && ava --verbose"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/near-examples/rust-status-message.git"
  },
  "keywords": [
    "near-protocol",
    "blockchain",
    "rust",
    "smart-contract"
  ],
  "author": "Mike Purvis",
  "license": "(MIT AND Apache-2.0)",
  "bugs": {
    "url": "https://github.com/near-examples/rust-status-message/issues"
  },
  "homepage": "https://github.com/near-examples/rust-status-message#readme",
  "dependencies": {
    "big.js": "^5.2.2",
    "borsh": "^0.4.0",
    "env-cmd": "^10.1.0",
    "near-api-js": "^0.43.1",
    "prop-types": "^15.7.2",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "regenerator-runtime": "^0.13.9"
  },
  "devDependencies": {
    "@babel/core": "^7.14.0",
    "@babel/preset-env": "^7.14.2",
    "@babel/preset-react": "^7.13.13",
    "cssnano": "^5.0.7",
    "gh-pages": "^3.1.0",
    "parcel-bundler": "^1.12.5",
    "postcss": "^8.3.6",
    "sass": "^1.37.0",
    "near-workspaces": "^3.1.0",
    "ava": "^4.2.0",
    "typescript": "^4.6.4",
    "ts-node": "^10.7.0"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- droplinked-near/src/lib.rs ---
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LookupMap, Vector};
use near_sdk::env::block_timestamp_ms;
use near_sdk::{env, near_bindgen, AccountId};

#[derive(BorshSerialize,BorshDeserialize)]
pub struct NFTMetadata{
    name : String,
    token_uri : String,
    checksum : String,
    price : u128
}

#[derive(BorshDeserialize,BorshSerialize)]
pub struct NFTHolder {
    rem_amount : u64,
    amount : u64,
    token_id : u64
}

#[derive(BorshDeserialize,BorshSerialize)]
pub struct ApprovedNFT{
    holder_id : u64,
    amount : u64,
    owner_account : AccountId,
    publisher_account : AccountId,
    token_id : u64,
    comission : u8
}

#[derive(BorshDeserialize,BorshSerialize)]
pub struct PublishRequest{
    holder_id : u64,
    amount : u64,
    comission : u8,
    producer : AccountId,
    publisher : AccountId
}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize)]
pub struct DroplinkedStorage {
    tokens_cnt : u64,
    holders_cnt : u64,
    approved_cnt : u64,
    request_cnt : u64,
    latest_timestamp : u64,
    ratio_verifier : AccountId,
    total_supply : u64,
    requests_objects : LookupMap<u64,PublishRequest>,
    publisher_rejects : LookupMap<AccountId,Vector<u64>>,
    producer_requests : LookupMap<AccountId, Vector<u64>>,
    publisher_requests : LookupMap<AccountId, Vector<u64>>,
    metadatas : LookupMap<u64, NFTMetadata>,
    producer_approved : LookupMap<AccountId,Vector<u64>>,
    publisher_approved : LookupMap<AccountId,Vector<u64>>,
    owners : LookupMap<AccountId,Vector<u64>>,
    holders : LookupMap<u64,NFTHolder>,
    approved : LookupMap<u64,ApprovedNFT>,
    token_id_by_hash : LookupMap<String,u64>
}

impl Default for DroplinkedStorage {
    fn default() -> Self {
        Self {
            tokens_cnt : 0,
            ratio_verifier : "k3rn3lpanicc.testnet".parse().unwrap(),
            metadatas : LookupMap::new(b"m".to_vec()),
            total_supply : 0,
            requests_objects : LookupMap::new(b"r".to_vec()),
            publisher_rejects : LookupMap::new(b"p".to_vec()),
            producer_requests : LookupMap::new(b"q".to_vec()),
            producer_approved : LookupMap::new(b"t".to_vec()),
            publisher_approved : LookupMap::new(b"x".to_vec()),
            owners : LookupMap::new(b"n".to_vec()),
            holders : LookupMap::new(b"k".to_vec()),
            approved : LookupMap::new(b"o".to_vec()),
            token_id_by_hash : LookupMap::new(b"l".to_vec()),
            publisher_requests : LookupMap::new(b"y".to_vec()),
            holders_cnt : 0,
            approved_cnt : 0,
            request_cnt : 0,
            latest_timestamp : 0
        }
    }
}

#[near_bindgen]
impl DroplinkedStorage {
    pub fn get_ratio_verifier(self) -> AccountId{
        self.ratio_verifier
    }
    pub fn mint(&mut self, name : String, token_uri : String, checksum : String, price : u128,amount : u64) -> u64{
        let account_id = env::signer_account_id();
        let metadata_hash = base16::encode_lower(&env::sha256(format!("{}{}{}{}",name,token_uri,checksum,price).as_bytes()));
        let token_id = {
            if self.token_id_by_hash.contains_key(&metadata_hash){
                self.token_id_by_hash.get(&metadata_hash).unwrap()
            }
            else{
                self.tokens_cnt+=1;
                self.token_id_by_hash.insert(&metadata_hash,&self.tokens_cnt);
                self.tokens_cnt
            }
        };
        let metadata = NFTMetadata{
            name,
            token_uri,
            checksum,
            price
        };
        self.metadatas.insert(&token_id,&metadata);

        
        let mut account_holders = self.owners.get(&account_id).unwrap();
        for i in 0..account_holders.len(){
            let mut t = self.holders.get(&account_holders.get(i).unwrap()).unwrap();
            if t.token_id == token_id{
                t.rem_amount += amount;
                t.amount += amount;
                self.holders.insert(&account_holders.get(i).unwrap(),&t);
                return account_holders.get(i).unwrap();
            }
        }
        
        self.holders_cnt += 1;
        let holder_id = self.holders_cnt;
        let holder = NFTHolder{
            rem_amount : amount,
            amount,
            token_id
        };
        
        self.holders.insert(&holder_id,&holder);
        if self.owners.contains_key(&account_id){
            let mut tokens = self.owners.get(&account_id).unwrap();
            tokens.push(&holder_id);
            self.owners.insert(&account_id,&tokens);
        }
        else{
            let mut tokens = Vector::new(format!("n{}",block_timestamp_ms()).as_str().as_bytes().to_vec());
            tokens.push(&holder_id);
            self.owners.insert(&account_id,&tokens);
        }
        self.total_supply += amount;
        holder_id
    }

    pub fn get_owner_tokens(&self, account_id : AccountId) -> Vec<u64>{
        if self.owners.contains_key(&account_id){
            self.owners.get(&account_id).unwrap().to_vec()
        }
        else{
            vec![]
        }
    }

    pub fn get_token_id_by_hash(&self, hash : String) -> Option<u64>{
        self.token_id_by_hash.get(&hash)
    }

    pub fn get_token_hash_by_id(&self, token_id : u64) -> Option<String>{
        let metadata = self.metadatas.get(&token_id).unwrap();
        
        let hash = base16::encode_lower(&env::sha256(format!("{}{}{}{}",metadata.name,metadata.token_uri,metadata.checksum,metadata.price).as_bytes()));
        Some(hash)
    }

    pub fn get_token_metadata(&self, token_id : u64) -> Option<String>{
        let metadata = self.metadatas.get(&token_id).unwrap();
        let json = format!(r#"{{"name":"{}","token_uri":"{}","checksum":"{}","price":{}}}"#,metadata.name,metadata.token_uri,metadata.checksum,metadata.price);
        Some(json)
    }

    pub fn get_holder(&self, holder_id : u64) -> Option<String>{
        let holder = self.holders.get(&holder_id).unwrap();
        let json = format!(r#"{{"rem_amount":{},"amount":{},"token_id":{}}}"#,holder.rem_amount,holder.amount,holder.token_id);
        Some(json)
    }

    pub fn publish_request(&mut self, producer_account : AccountId, amount : u64, holder_id : u64, comission : u8) -> u64{
        let account_id = env::signer_account_id();
        
        //-----------------------Cand be simplified using Maps and Sets-----------------------
        // if producer_account is not owner of holder_id then return error
        let producer_holders = self.owners.get(&producer_account).unwrap();
        let mut is_producer_owner = false;
        for i in 0..producer_holders.len(){
            if producer_holders.get(i).unwrap() == holder_id{
                is_producer_owner = true;
                break;
            }
        }
        if !is_producer_owner{
            env::panic_str("Producer is not owner of holder_id");
        }
        //-----------------------------------------------------------------------------------
        
        let request_id = self.request_cnt + 1;
        let request = PublishRequest{
            amount,
            holder_id,
            comission,
            producer : producer_account.clone(),
            publisher : account_id.clone()
        };
        self.requests_objects.insert(&request_id,&request);
        self.request_cnt = request_id;
        // add request_id to publisher_requests and producer_requests
        if self.publisher_requests.contains_key(&account_id){
            let mut requests = self.publisher_requests.get(&account_id).unwrap();
            requests.push(&request_id);
            self.publisher_requests.insert(&account_id,&requests);
        }
        else{
            let mut requests = Vector::new(format!("y{}",block_timestamp_ms()).as_str().as_bytes().to_vec());
            requests.push(&request_id);
            self.publisher_requests.insert(&account_id,&requests);
        }
        if self.producer_requests.contains_key(&producer_account){
            let mut requests = self.producer_requests.get(&producer_account).unwrap();
            requests.push(&request_id);
            self.producer_requests.insert(&producer_account,&requests);
        }
        else{
            let mut requests = Vector::new(format!("z{}",block_timestamp_ms()).as_str().as_bytes().to_vec());
            requests.push(&request_id);
            self.producer_requests.insert(&producer_account,&requests);
        }
        request_id       
    }

    pub fn get_request(&self, request_id : u64) -> Option<String>{
        let request = self.requests_objects.get(&request_id).unwrap();
        let json = format!(r#"{{"amount":{},"holder_id":{},"comission":{},"producer":"{}","publisher":"{}"}}"#,request.amount,request.holder_id,request.comission,request.producer,request.publisher);
        Some(json)
    }

    pub fn get_publisher_requests(&self, publisher_account : AccountId) -> Option<String>{
        let mut json = String::from("[");
        if self.publisher_requests.contains_key(&publisher_account){
            let requests = self.publisher_requests.get(&publisher_account).unwrap();
            for request_id in requests.iter(){
                let request = self.requests_objects.get(&request_id).unwrap();
                let json_part = format!(r#"{{"request_id":{},"amount":{},"holder_id":{},"comission":{},"producer":"{}","publisher":"{}"}},"#,request_id,request.amount,request.holder_id,request.comission,request.producer,request.publisher);
                json.push_str(&json_part);
            }
        }
        json.push_str("]");
        Some(json)
    }

    pub fn get_producer_requests(&self, producer_account : AccountId) -> Option<String>{
        let mut json = String::from("[");
        if self.producer_requests.contains_key(&producer_account){
            let requests = self.producer_requests.get(&producer_account).unwrap();
            for request_id in requests.iter(){
                let request = self.requests_objects.get(&request_id).unwrap();
                let json_part = format!(r#"{{"request_id":{},"amount":{},"holder_id":{},"comission":{},"producer":"{}","publisher":"{}"}},"#,request_id,request.amount,request.holder_id,request.comission,request.producer,request.publisher);
                json.push_str(&json_part);
            }
        }
        json.push_str("]");
        Some(json)
    }

    pub fn approve(&mut self,request_id : u64) -> u64{
        let account_id = env::signer_account_id();
        let request_wrapped = self.requests_objects.get(&request_id);
        if request_wrapped.is_none(){
            env::panic_str("Request does not exist");
        }
        let request = request_wrapped.unwrap();
        if request.producer != account_id{
            env::panic_str("Caller is not producer");
        }
        
        // check if caller owns holder_id
        let producer_holders = self.owners.get(&account_id).unwrap();
        let mut is_producer_owner = false;
                
        for i in 0..producer_holders.len(){
            if producer_holders.get(i).unwrap() == request.holder_id{
                is_producer_owner = true;
                break;
            }
        }
        if !is_producer_owner{
            env::panic_str("Producer is not owner of holder_id");
        }

        let mut holder = self.holders.get(&request.holder_id).unwrap();
        if holder.rem_amount < request.amount{
            env::panic_str("Not enough tokens in holder");
        }
        holder.rem_amount -= request.amount;
        let approved_holder = ApprovedNFT {
            holder_id : request.holder_id,
            amount : request.amount,
            comission : request.comission,
            owner_account : request.producer.clone(),
            publisher_account : request.publisher.clone(),
            token_id : holder.token_id
        };
        self.holders.insert(&request.holder_id,&holder);

        // get approved cnt and increment it
        self.approved_cnt += 1;
        let approved_id = self.approved_cnt;
        self.approved.insert(&approved_id,&approved_holder);

        //add the approved holder to the publishers approved dictionary
        if self.publisher_approved.contains_key(&request.publisher){
            let mut approved = self.publisher_approved.get(&request.publisher).unwrap();
            approved.push(&approved_id);
            self.publisher_approved.insert(&request.publisher,&approved);
        }
        else{
            let mut approved = Vector::new(format!("x{}",block_timestamp_ms()).as_str().as_bytes().to_vec());
            approved.push(&approved_id);
            self.publisher_approved.insert(&request.publisher,&approved);
        }
        //add the approved holder to the producers approved dictionary
        if self.producer_approved.contains_key(&request.producer){
            let mut approved = self.producer_approved.get(&request.producer).unwrap();
            approved.push(&approved_id);
            self.producer_approved.insert(&request.producer,&approved);
        }
        else{
            let mut approved = Vector::new(format!("y{}",block_timestamp_ms()).as_str().as_bytes().to_vec());
            approved.push(&approved_id);
            self.producer_approved.insert(&request.producer,&approved);
        }
        //remove the request from the publishers requests dictionary and the producers requests dictionary
        let mut publisher_requests = self.publisher_requests.get(&request.publisher).unwrap();
        let index_of_request = publisher_requests.iter().position(|x| x == request_id).unwrap();
        publisher_requests.swap_remove(index_of_request as u64);
        self.publisher_requests.insert(&request.publisher,&publisher_requests);
        let mut producer_requests = self.producer_requests.get(&request.producer).unwrap();
        let index_of_request = producer_requests.iter().position(|x| x == request_id).unwrap();
        producer_requests.swap_remove(index_of_request as u64);
        self.producer_requests.insert(&request.producer,&producer_requests);
        //remove the request from the requests_objects dictionary
        self.requests_objects.remove(&request_id);
        approved_id
    }
    
    pub fn get_approved(&self, approved_id : u64) -> Option<String>{
        let approved = self.approved.get(&approved_id).unwrap();
        let json = format!(r#"{{"approved_id":{},"holder_id":{},"amount":{},"comission":{},"owner_account":"{}","publisher_account":"{}","token_id":{}}}"#,approved_id,approved.holder_id,approved.amount,approved.comission,approved.owner_account,approved.publisher_account,approved.token_id);
        Some(json)
    }

    pub fn disapprove(&mut self,approved_id : u64, amount : u64){
        let account_id = env::signer_account_id();
        let approved = self.approved.get(&approved_id).unwrap();
        if approved.owner_account != account_id{
            env::panic_str("Caller is not owner");
        }
        if approved.amount < amount{
            env::panic_str("Not enough tokens in approved");
        }
        let mut holder = self.holders.get(&approved.holder_id).unwrap();
        holder.rem_amount += amount;
        self.holders.insert(&approved.holder_id,&holder);
        if approved.amount == amount{
            self.approved.remove(&approved_id);
            let mut producer_approved = self.producer_approved.get(&approved.owner_account).unwrap();
            let index_of_approved = producer_approved.iter().position(|x| x == approved_id).unwrap();
            producer_approved.swap_remove(index_of_approved as u64);
            self.producer_approved.insert(&approved.owner_account,&producer_approved);
            let mut publisher_approved = self.publisher_approved.get(&approved.publisher_account).unwrap();
            let index_of_approved = publisher_approved.iter().position(|x| x == approved_id).unwrap();
            publisher_approved.swap_remove(index_of_approved as u64);
            self.publisher_approved.insert(&approved.publisher_account,&publisher_approved);
        }
        else{
            let mut approved = self.approved.get(&approved_id).unwrap();
            approved.amount -= amount;
            self.approved.insert(&approved_id,&approved);
        }
    }

    pub fn cancel_request(&mut self,request_id : u64){
        let account_id = env::signer_account_id();
        let request = self.requests_objects.get(&request_id).unwrap();
        if request.publisher != account_id{
            env::panic_str("Caller is not producer");
        }
        let mut producer_requests = self.producer_requests.get(&request.producer).unwrap();
        let index_of_request = producer_requests.iter().position(|x| x == request_id).unwrap();
        producer_requests.swap_remove(index_of_request as u64);
        self.producer_requests.insert(&request.producer,&producer_requests);
        let mut publisher_requests = self.publisher_requests.get(&request.publisher).unwrap();
        let index_of_request = publisher_requests.iter().position(|x| x == request_id).unwrap();
        publisher_requests.swap_remove(index_of_request as u64);
        self.publisher_requests.insert(&request.publisher,&publisher_requests);
        self.requests_objects.remove(&request_id);
    }

    pub fn producers_approved(&self, producer_account : AccountId) -> Option<Vec<u64>>{
        Some(self.producer_approved.get(&producer_account).unwrap().to_vec())
    }
    pub fn publishers_approved(&self, publisher_account : AccountId) -> Option<Vec<u64>>{
        Some(self.publisher_approved.get(&publisher_account).unwrap().to_vec())
    }
    
    // next function is buy function, it is used to buy tokens from approved holders, it is called by user who wants to buy tokens, it takes approved_id and amount of tokens to buy the "price,timestamp" and a signature of that price and timestamp which is signed by the ratio_verifier account
    // and checks if the signature is true, then gets amount*ratio NEARs from the user and sends them to the producer, and publisher with the comission, and sends the tokens to the user
    // #[payable]
    // pub fn buy(&mut self, approved_id : u64, amount : u64, price : u128, timestamp : u64, signature : String){
    //     let account_id = env::signer_account_id();
    //     let approved = self.approved.get(&approved_id).unwrap();
    //     if approved.amount < amount{
    //         env::panic_str("Not enough tokens in approved");
    //     }
    //     let mut holder = self.holders.get(&approved.holder_id).unwrap();
        
    //     // TODO: check the signature
        
        

    // }
}
'''