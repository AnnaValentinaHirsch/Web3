*GitHub Repository "haoduoyu/wallet-selects"*

'''--- README.md ---
# swap-select

## Project setup
```
yarn install
```

### Compiles and hot-reloads for development
```
yarn serve
```

### Compiles and minifies for production
```
yarn build
```

### Lints and fixes files
```
yarn lint
```

### Customize configuration
See [Configuration Reference](https://cli.vuejs.org/config/).

'''
'''--- babel.config.js ---
module.exports = {
  presets: [
    '@vue/cli-plugin-babel/preset'
  ]
}

'''
'''--- package.json ---
{
  "name": "swap-select",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "NODE_ENV=testnet vue-cli-service build",
    "lint": "vue-cli-service lint"
  },
  "dependencies": {
    "core-js": "^3.6.5",
    "vue": "^2.6.11",
    "vue-router": "^3.2.0",
    "near-api-js": "~0.35.0",
    "regenerator-runtime": "~0.13.5"
  },
  "devDependencies": {
    "@vue/cli-plugin-babel": "~4.5.0",
    "@vue/cli-plugin-eslint": "~4.5.0",
    "@vue/cli-plugin-router": "~4.5.0",
    "@vue/cli-service": "~4.5.0",
    "@vue/eslint-config-standard": "^5.1.2",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.7.2",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.0",
    "eslint-plugin-vue": "^6.2.2",
    "less": "^3.0.4",
    "less-loader": "^5.0.0",
    "lint-staged": "^9.5.0",
    "vue-template-compiler": "^2.6.11",
    "env-cmd": "~10.1.0",
    "gh-pages": "~3.1.0",
    "jest": "~26.6.2",
    "jest-environment-node": "~26.6.2",
    "nodemon": "~2.0.3",
    "parcel-bundler": "~1.12.4",
    "shelljs": "~0.8.4"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "node": true
    },
    "extends": [
      "plugin:vue/essential",
      "@vue/standard"
    ],
    "parserOptions": {
      "parser": "babel-eslint"
    },
    "rules": {}
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ],
  "gitHooks": {
    "pre-commit": "lint-staged"
  },
  "lint-staged": {
    "*.{js,jsx,vue}": [
      "vue-cli-service lint",
      "git add"
    ]
  },
  "jest": {
    "testEnvironment": "near-cli/test_environment",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/"
    ]
  }
}

'''
'''--- public/index.html ---
<!--
 * @Author: your name
 * @Date: 2021-02-15 15:55:31
 * @LastEditTime: 2021-02-18 11:13:27
 * @LastEditors: your name
 * @Description: In User Settings Edit
 * @FilePath: /swap-select/public/index.html
-->
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <!-- <link rel="icon" href="<%= BASE_URL %>favicon.ico"> -->
    <title><%= htmlWebpackPlugin.options.title %></title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <div id="app"></div>
    <!-- built files will be auto injected -->
  </body>
</html>

'''
'''--- src/assets/css/base.css ---
article,aside,dialog,footer,header,section,footer,nav,figure,menu,body, div, dl, dt, dd, ul, ol, li, p, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, button, input, textarea, img, blockquote, th,tr, td { margin:0; padding:0;-webkit-tap-highlight-color: rgba(255, 255, 255, 0);}
ul {list-style:none}
li {list-style:none}
a {text-decoration:none;}
img {border:0px}
input, button, textarea, select,a{ font-size:100%; outline:none; resize:none;border:none;background:none;-webkit-tap-highlight-color:transparent}
table {border-collapse: collapse; border-spacing:0; }
input{vertical-align:middle}table{border-collapse:collapse;border-spacing:0; width:100%}p{word-wrap:break-word}.clr{clear:both;}
.l{float:left}.r{float:right}.undis{display:none}.dis{display:block}.dinl{display:inline-block}.prel{position:relative}.pabs{position:absolute}.bor{border:0}.ovf{overflow:hidden} .vih{ visibility:hidden}
article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}
div,section {word-break: break-all;}
.clear {height:0; clear:both;}
.clearfix { *zoom:1;}
.clearfix:after{clear:both; display:block; height:0; visibility:hidden; line-height:0; content:'\20';}
/*边距*/
*{box-sizing:border-box;    -webkit-box-sizing:border-box;    -moz-box-sizing:border-box;    -o-box-sizing:border-box;}
.left{
    float:left;
}
.right{
    float:right;
}
'''
'''--- src/main.js ---
/*
 * @Author: your name
 * @Date: 2021-02-15 15:55:31
 * @LastEditTime: 2021-02-15 18:29:00
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit'
 * @FilePath: /swap-select/src/main.js
 */
import Vue from 'vue'
import App from './App.vue'
import router from './router'
import './assets/css/base.css'
import { initContract } from './utils/utils'

Vue.config.productionTip = false

new Vue({
  router,
  render: h => h(App),
  async created () {
    await initContract()
  }
}).$mount('#app')

'''
'''--- src/router/index.js ---
/*
 * @Author: your name
 * @Date: 2021-02-15 15:55:31
 * @LastEditTime: 2021-02-18 14:43:40
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /swap-select/src/router/index.js
 */
import Vue from 'vue'
import VueRouter from 'vue-router'
import Index from '../views/Index.vue'
// import Home from '../views/Home.vue'

Vue.use(VueRouter)

const routes = [
  {
    path: '/*',
    // redirect: '/index',
    name: 'Home',
    component: Index
  }
  // {
  //   path: '/about',
  //   name: 'About',
  //   // route level code-splitting
  //   // this generates a separate chunk (about.[hash].js) for this route
  //   // which is lazy-loaded when the route is visited.
  //   component: () => import(/* webpackChunkName: "about" */ '../views/About.vue')
  // }
]

const router = new VueRouter({
  routes
})

export default router

'''
'''--- src/utils/config.js ---
/*
 * @Author: your name
 * @Date: 2021-02-15 17:17:51
 * @LastEditTime: 2021-02-15 17:18:01
 * @LastEditors: your name
 * @Description: In User Settings Edit
 * @FilePath: /swap-select/src/utils/config.js
 */
// const CONTRACT_NAME = process.env.CONTRACT_NAME ||'demo4selector'
// dev-1612856092888-7642477
const CONTRACT_NAME = 'dev-1612856092888-7642477'
function getConfig (env) {
  switch (env) {
    case 'production':
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.near.org',
        helperUrl: 'https://helper.mainnet.near.org',
        explorerUrl: 'https://explorer.mainnet.near.org'
      }
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org',
        explorerUrl: 'https://explorer.testnet.near.org'
      }
    default:
      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)
  }
}

module.exports = getConfig

'''
'''--- src/utils/index.js ---
/*
 * @Author: your name
 * @Date: 2021-02-15 17:17:45
 * @LastEditTime: 2021-02-15 18:14:47
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /swap-select/src/utils/index.js
 */
import 'regenerator-runtime/runtime'

import { initContract } from './utils'

// import getConfig from './config'
// const { networkId } = getConfig(process.env.NODE_ENV || 'development')

// global variable used throughout
// let currentGreeting

// Displaying the signed in flow container and fill in account-specific data
// function signedInFlow () {
//   document.querySelector('#signed-in-flow').style.display = 'block'

//   fetchWallets()
// }

// // update global currentGreeting variable; update DOM with it
// // async function fetchGreeting () {
// //   currentGreeting = await window.contract.get_greeting({ account_id: 'shenzhen.testnet' })
// //   document.querySelectorAll('[data-behavior=greeting]').forEach(el => {
// //     // set divs, spans, etc
// //     el.innerText = currentGreeting
// //   })
// // }

// async function fetchWallets () {
//   currentGreeting = await window.contract.get_wallets({ from_index: 0, limit: 100 })
//   document.querySelectorAll('[data-behavior=greeting]').forEach(el => {
//     // set divs, spans, etc
//     el.innerText = JSON.stringify(currentGreeting)
//   })
// }

// `nearInitPromise` gets called on page load
window.nearInitPromise = initContract()
  .then(() => {
    // signedInFlow()
  })
  .catch(console.error)

'''
'''--- src/utils/utils.js ---
/*
 * @Author: your name
 * @Date: 2021-02-15 17:17:45
 * @LastEditTime: 2021-02-18 11:39:31
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /swap-select/src/utils/utils.js
 */
import { connect, Contract, keyStores, WalletConnection } from 'near-api-js'
import getConfig from './config'

// Initialize contract & set global variables
export async function initContract () {
  const nearConfig = getConfig(process.env.NODE_ENV || 'development')
  // Initialize connection to the NEAR testnet  InMemoryKeyStore
  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.InMemoryKeyStore() } }, nearConfig))
  // const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig))

  // Initializing Wallet based Account. It can work with NEAR testnet wallet that
  // is hosted at https://wallet.testnet.near.org
  window.walletConnection = new WalletConnection(near)

  // Initializing our contract APIs by contract name and configuration
  window.contract = await new Contract(window.walletConnection.account(), nearConfig.contractName, {
    // View methods are read only. They don't modify the state, but usually return some value.
    viewMethods: ['get_greeting', 'get_wallets']
  })
}

'''
'''--- vue.config.js ---
/*
 * @Author: your name
 * @Date: 2021-01-05 16:46:17
 * @LastEditTime: 2021-02-18 14:42:18
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: /near-coin/vue.config.js
 */
const path = require('path')// 引入path模块
const publicPath = '/'
function resolve (dir) {
  return path.join(__dirname, dir)// path.join(__dirname)设置绝对路径
}
module.exports = {
  publicPath,
  devServer: {
    publicPath,
    open: true,
    port: 8000
  },
  chainWebpack: (config) => {
    config.resolve.alias
      .set('@', resolve('./src'))
      .set('components', resolve('./src/components'))
      .set('pages', resolve('./src/pages'))
      .set('assets', resolve('./src/assets'))
      .set('styles', resolve('./src/styles'))
      // set第一个参数：设置的别名，第二个参数：设置的路径
  }
}

'''