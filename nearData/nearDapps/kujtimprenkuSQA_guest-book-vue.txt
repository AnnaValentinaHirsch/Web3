*GitHub Repository "kujtimprenkuSQA/guest-book-vue"*

'''--- .github/workflows/deploy.yml ---
name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    env:
      WALLETCONNECT_PROJECT_ID: ${{ secrets.WALLETCONNECT_PROJECT_ID }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
'''
'''--- .vscode/extensions.json ---
{
  "recommendations": ["Vue.volar"]
}

'''
'''--- README.md ---
## Guest Book + NEAR Wallet Selector with Vue and Vite 3 

Install dependencies:

```bash
yarn
```

Run locally:

```bash
yarn dev
```

Build for production:

```bash
yarn build
```

Preview the build result:

```bash
yarn preview
```

Deploy to gh-pages:

```bash
yarn deploy
```

'''
'''--- index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="utf-8">
      <link rel="icon" type="image/x-icon" href="./favicon.ico">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <meta name="theme-color" content="#000000" />
      <title>NEAR Guest Book</title>
      <meta property="og:title" content="NEAR Guest Book">
      <meta property="og:description" content="A guest book with comments stored on the NEAR blockchain">
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="/src/main.ts"></script>
  </body>
</html>

'''
'''--- package.json ---
{
  "name": "guest-book-vue",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vue-tsc --noEmit && vite build",
    "preview": "vite preview",
    "deploy": "gh-pages -d dist"
  },
  "dependencies": {
    "@near-wallet-selector/account-export": "^8.9.2",
    "@near-wallet-selector/bitget-wallet": "^8.9.2",
    "@near-wallet-selector/coin98-wallet": "^8.9.2",
    "@near-wallet-selector/core": "^8.9.2",
    "@near-wallet-selector/here-wallet": "^8.9.2",
    "@near-wallet-selector/ledger": "^8.9.2",
    "@near-wallet-selector/math-wallet": "^8.9.2",
    "@near-wallet-selector/meteor-wallet": "8.9.2",
    "@near-wallet-selector/mintbase-wallet": "^8.9.2",
    "@near-wallet-selector/modal-ui": "^8.9.2",
    "@near-wallet-selector/my-near-wallet": "^8.9.2",
    "@near-wallet-selector/narwallets": "^8.9.2",
    "@near-wallet-selector/near-mobile-wallet": "^8.9.2",
    "@near-wallet-selector/near-snap": "^8.9.2",
    "@near-wallet-selector/near-wallet": "^8.9.2",
    "@near-wallet-selector/nearfi": "^8.9.2",
    "@near-wallet-selector/neth": "^8.9.2",
    "@near-wallet-selector/nightly": "^8.9.2",
    "@near-wallet-selector/ramper-wallet": "^8.9.2",
    "@near-wallet-selector/sender": "^8.9.2",
    "@near-wallet-selector/wallet-connect": "^8.9.2",
    "@near-wallet-selector/welldone-wallet": "^8.9.2",
    "@near-wallet-selector/xdefi": "^8.9.2",
    "@types/big.js": "^6.1.6",
    "big.js": "^6.2.1",
    "buffer": "^6.0.3",
    "eventemitter3": "^4.0.7",
    "gh-pages": "^4.0.0",
    "near-api-js": "^2.1.4",
    "process": "^0.11.10",
    "rxjs": "^7.8.1",
    "vue": "^3.2.37"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^3.1.0",
    "typescript": "^4.6.4",
    "vite": "^3.1.0",
    "vue-tsc": "^0.40.4"
  }
}

'''
'''--- src/constants.ts ---
export const CONTRACT_ID = "guest-book.near";

'''
'''--- src/interfaces/account.ts ---
import type { AccountView } from "near-api-js/lib/providers/provider";

export type Account = AccountView & {
  account_id: string | null;
};

'''
'''--- src/interfaces/messageType.ts ---
export interface MessageType {
  premium: boolean;
  sender: string;
  text: string;
}

'''
'''--- src/main.ts ---
import { createApp } from "vue";
import "./shims";
import "./style.css";
import "@near-wallet-selector/modal-ui/styles.css";
import App from "./App.vue";

createApp(App).mount("#app");

'''
'''--- src/shims.ts ---
import * as process from "process";
import { Buffer } from "buffer";
Object.assign(self, {
  process,
  global: self,
  Buffer,
});

'''
'''--- src/style.css ---
* {
  box-sizing: border-box;
}
:root {
  --bg: #fff;
  --fg: #25282A;
  --gray: #888;
  --royal: #0072CE;
  --blue: #6AD1E3;
  --primary: #D1CCBD;
  --secondary: var(--royal);
  --tertiary: #FF585D;
}
html {
  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
  font-size: calc(.65em + 0.7vw);
  line-height: 1.3;
}
::selection {
  background: var(--secondary);
  color: var(--bg);
}
@media (prefers-color-scheme: dark) {
  :root {
    --bg: #25282A;
    --fg: #fff;
    --secondary: var(--blue);
  }
  ::selection {
    background: var(--secondary);
    color: var(--fg);
  }
}
body {
  margin: 0 auto;
  padding: 0 1em;
  max-width: 40em;
}
fieldset {
  border: none;
  margin: 0;
  padding: 0;
}
.highlight {
  align-items: center;
  display: flex;
  margin-bottom: 0.5em;
  width: 100%;
}
.highlight label {
  margin-right: 0.5em;
}
.highlight input {
  caret-color: var(--secondary);
}
label {
  color: var(--gray);
}
button, .highlight {
  border-radius: 5px;
  border-color: var(--primary);
  border: 0.1em solid var(--primary);
  padding: 0.5em 1em;
}
button:hover, button:focus, button:focus-within,
.highlight:hover, .highlight:focus, .highlight:focus-within {
  border-color: var(--secondary);
}
input {
  border: none;
  flex: 1;
}
input:read-only {
  color: var(--primary)
}
input[type="number"] {
  text-align: center;
  border-bottom: 0.1em solid var(--primary);
  margin: 0 1em;
  width: 4em;
  padding-left: 0.5em;
}
input[type="number"]:hover, input[type="number"]:focus {
  border-color: var(--secondary);
}
button, input {
  background: transparent;
  color: inherit;
  cursor: pointer;
  font: inherit;
  outline: none;
}
button {
  position: relative;
  transition: top 50ms;
}
button:hover, button:focus {
  top: -1px;
}
button:active {
  background: var(--secondary);
  border-color: var(--secondary);
  top: 1px;
}
.is-premium {
  border-left: 0.25em solid var(--secondary);
  padding-left: 0.25em;
  margin-left: -0.5em;
}

'''
'''--- src/types/index.d.ts ---
import { WalletSelector } from "@near-wallet-selector/core";
import { WalletSelectorModal } from "@near-wallet-selector/modal-ui";

declare global {
  interface Window {
    selector: WalletSelector;
    modal: WalletSelectorModal;
  }
}

'''
'''--- src/vite-env.d.ts ---
/// <reference types="vite/client" />

declare module '*.vue' {
  import type { DefineComponent } from 'vue'
  const component: DefineComponent<{}, {}, any>
  export default component
}

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "ESNext",
    "useDefineForClassFields": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "strict": false,
    "jsx": "preserve",
    "sourceMap": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    "lib": ["ESNext", "DOM"],
    "skipLibCheck": true,
    "typeRoots": ["./node_modules/@types", "./src/types"]
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"],
  "references": [{ "path": "./tsconfig.node.json" }]
}

'''
'''--- tsconfig.node.json ---
{
  "compilerOptions": {
    "composite": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "allowSyntheticDefaultImports": true
  },
  "include": ["vite.config.ts"]
}

'''
'''--- vite.config.ts ---
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
  base: "/guest-book-vue/",
  plugins: [vue()],
  define: {
    global: "globalThis",
  },
  build: {
    commonjsOptions: { include: [] },
  },
  optimizeDeps: {
    disabled: false,
  },
})

'''