*GitHub Repository "markeljan/awb"*

'''--- README.md ---
# Agents With Benefits

<img width="1050" alt="image" src="https://github.com/Markeljan/awb/assets/12901349/64dd74e8-d4fc-4ba1-9c41-229582626dfa">

## Frontend

A dynamic and responsive web application built with Next.js, designed to provide a seamless user experience for interacting with AI Agent DAOs.

### Features

- Interactive UI: Utilize components like Navbar, ThemeToggle, and AnimatedTooltip for a rich user interface.
- Agent DAO Interaction: Engage with AI Agent DAOs using components like TryAgent and RankTab.
Theme Customization: Switch between light and dark modes with the ThemeToggle component.
- Responsive Design: Tailored for a wide range of devices with responsive design practices.
- Optimized Performance: Leverages Next.js features for fast loading times and smooth transitions.

## Contracts

A suite of Ethereum-based contracts for creating and managing decentralized autonomous organizations (DAOs) with a focus on AI Agent interactions.

### Features

- DAO Token: An ERC20 token with governance capabilities, including voting and delegation.
- DAO Governor: A governance contract that allows token holders to create and vote on proposals.
- Secure Contracts: Built with security in mind, following best practices and audited patterns.

<img width="1050" alt="image" src="https://github.com/Markeljan/awb/assets/12901349/156ff1a5-be10-41a9-914b-9c61580bd231">

## Agents

You can find a collection of AI-powered agents designed to operate within the AWB ecosystem in [/agents](./agents/).

Agents are smart software that have been stored in decentralized filestorage systems. Each agent offers unique capabilities and can be interacted with through the AWB platform.

### Current List

Here is a list of some of the available agents:

- Dad Jokes: Delivers a daily dose of dad jokes.
- Startup Advisor: Provides advice for startup ventures.
- Bufficorn Generator: Creates unique bufficorn images.

| name              | uri                                                                                                                   |
|-------------------|-----------------------------------------------------------------------------------------------------------------------|
| dad-jokes         | [Dad Jokes Agent](https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/979zvqYCSFB9FqxU44dME-gjDpmfRK4cp3S5SozdgFLMvPeVHudE)   |
| startup-advisor   | [Startup Advisor Agent](https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/3sdRLB1UozWnTMs1rHd-J-2GcW5583Aq4KPsChAq9TIQ0eav4PmG)   |
| bufficorn-generator | [Bufficorn Generator Agent](https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/DDkW1udHpH46dKPDcGz6H-Ggb9iPQzMRuqwhSuYwSZvZD0hzTgTQ)   |

### Features

- Interactivity: Users can engage with agents to receive various services.
- Custom AI Models: Each agent is powered by a custom AI model tailored to its specific function.

## Enclave

A secure component of the AWB ecosystem designed to run sensitive operations within a protected environment.

### Features

- Secure Execution Environment: Ensures that code and data are protected from external threats.
- Isolation: Provides an isolated runtime to prevent unauthorized access and tampering.
- Attestation: Supports mechanisms to verify the integrity and authenticity of the code running within the enclave.

'''
'''--- agents/README.md ---
# Agents Repo

| name | uri |
|--------------------|-----------------------------------------------------------------------------------------------------------------   |
| dad-jokes          | https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/979zvqYCSFB9FqxU44dME-gjDpmfRK4cp3S5SozdgFLMvPeVHudE   |
| startup-advisor    | https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/3sdRLB1UozWnTMs1rHd-J-2GcW5583Aq4KPsChAq9TIQ0eav4PmG   |
| bufficorn-generator    | https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb/DDkW1udHpH46dKPDcGz6H-Ggb9iPQzMRuqwhSuYwSZvZD0hzTgTQ   |
'''
'''--- agents/bufficorn-generator.ts ---
const main = async ({ prompt }: { prompt: string }) => {
  const image =
    "https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awbbeta2-AiT1ZxTf16zgTzspt6G2exPiOWpMRA.png";
  const mask =
    "https://3citujvkqdgeo2y1.public.blob.vercel-storage.com/awb_maks2-zqUfqSYGjhM1cpLCXEOu4HUjleu2Cr.png";
  const model =
    "stability-ai/stable-diffusion-inpainting:95b7223104132402a9ae91cc677285bc5eb997834bd2349fa486f53910fd68b3";

  const input = {
    prompt: prompt,
    image: image,
    mask: mask,
  };

  const output = await libraries.ai.replicate.run(model, { input });

  try {
    await libraries.web3.crossChain({
      metadata: {
        image: output,
        title: prompt,
      },
    });
  } catch (error) {
    console.log(error);
  }

  return output;
};

'''
'''--- agents/dad-jokes.ts ---
const main = async ({ prompt }: { prompt: string }) => {
  const request = await openRouter.chat.completions.create({
    messages: [
      {
        role: "system",
        content:
          "You a chill crypto dad who only replies in dad jokes. Keep responses very short.",
      },
      {
        role: "user",
        content: prompt,
      },
    ],
    model: "mistralai/mistral-7b-instruct:free",
  });

  return request?.choices[0]?.message?.content;
};

'''
'''--- agents/startup-advisor.ts ---
const main = async ({ prompt }: { prompt: string }) => {
  const request = await openRouter.chat.completions.create({
    messages: [
      {
        role: "system",
        content:
          "You are an AI startup advisor with the knowledge of the likes of Paul Graham. You will ask me about my startup idea and the stage I am in and then provide me with advice on how to move forward for my early-stage startup. You will be guided on the following: 1. Idea Validation: What are the most effective strategies to validate my startup idea in my industry? How can I identify and engage my target audience to gather feedback? 2. Raising Funding: Based on my idea in the industry, what types of investors should I approach (e.g., angel investors, venture capitalists, crowdfunding)? What key elements should I include in my pitch to make it compelling for investors? 3. Success Strategies: Given the current trends in the industry, what strategies should I prioritize to enhance my startup's chances of success? Are there any common pitfalls I should avoid or success stories I can learn from in [insert your industry]? I am particularly interested in actionable advice and best practices that can help me navigate these early stages effectively. Ask me about what my idea is and where I am in the process of getting started. Keep this question short!",
      },
      {
        role: "user",
        content: prompt,
      },
    ],
    model: "mistralai/mistral-7b-instruct:free",
  });

  return request?.choices[0]?.message?.content;
};
'''
'''--- contracts/README.md ---
## Agents With Benefits Contracts

## Documentation

https://book.getfoundry.sh/

## Usage

### Install Foundry

```shell
$ curl -L https://foundry.paradigm.xyz | bash
# This will install Foundryup, then simply follow the instructions on-screen, which will make the foundryup command available in your CLI.
```

### Install Project Dependencies

```shell
$ forge install foundry-rs/forge-std --no-git
$ forge install OpenZeppelin/openzeppelin-contracts@v5.0.1 --no-git
```

### Build

```shell
$ forge build
```

### Test

```shell
$ forge test
```

### Format

```shell
$ forge fmt
```

### Gas Snapshots

```shell
$ forge snapshot
```

### Anvil

```shell
$ anvil
```

### Deploy

```shell
$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>

# deploy with wallet save
$ forge script --rpc-url $BASE_SEPOLIA_RPC --account awb --etherscan-api-key $BASE_SEPOLIA_API_KEY  --verify --broadcast -vvv script/AWBAgent.s.sol

```

### Cast

```shell
$ cast <subcommand>
```

### Help

```shell
$ forge --help
$ anvil --help
$ cast --help
```

'''
'''--- contracts/foundry.toml ---
[profile.default]
src = "src"
out = "out"
libs = ["lib"]

# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options

[rpc_endpoints]
baseSepolia = "${BASE_SEPOLIA_RPC_URL}"

[etherscan]
baseSepolia = { key = "${BASE_SEPOLIA_API_KEY}" }
'''
'''--- contracts/remappings.txt ---
@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/
ds-test/=lib/forge-std/lib/ds-test/src/
erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/
forge-std/=lib/forge-std/src/
openzeppelin-contracts/=lib/openzeppelin-contracts/

'''
'''--- enclave/README.md ---
# awb-enclave
'''
'''--- enclave/app.ts ---
import { Elysia } from "elysia";
import { createPublicClient, http } from "viem";
import { baseSepolia } from "viem/chains";
import { walletClient } from "./config";
import { executeCodeVm } from "./vm";
import { awbRegistryAbi } from "./generated";

import { encodeFunctionData } from "viem";

export const client = createPublicClient({
  chain: baseSepolia,
  transport: http(),
});

new Elysia()
  .get("/", async () => {
    return {
      blockNumber: (await client.getBlockNumber()).toString(),
    };
  })
  .post(
    "/run",
    async ({
      body: {
        uri,
        prompt,
        agentId,
        origin = process.env.HUB_ACCOUNT_ADDRESS as `0x${string}`,
      },
    }: {
      body: {
        uri: string;
        prompt: string;
        agentId: bigint;
        origin: `0x${string}`;
      };
    }) => {
      const isRequestInitiated = origin === process.env.HUB_ACCOUNT_ADDRESS; // && add more logic

      let result = null;
      let tx = null;
      try {
        result = await executeCodeVm({
          uri,
          prompt,
        });
      } catch (error) {
        console.log(error);
      }

      try {
        const data = encodeFunctionData({
          abi: awbRegistryAbi,
          functionName: "createAndFulfillRequest",
          args: [agentId, origin, prompt, result, ""],
        });

        const request = await walletClient.prepareTransactionRequest({
          to: process.env.REGISTRY_ACCOUNT_ADDRESS as `0x${string}`,
          value: 0n,
          data: data,
        });

        const signature = await walletClient.signTransaction(request);
        const hash = await walletClient.sendRawTransaction({
          serializedTransaction: signature,
        });

        tx = hash;
      } catch (error) {
        console.log(error);
      }

      return { result, tx };
    }
  )
  .listen(4000, () => {
    console.log("Listening on http://localhost:4000");
  });

'''
'''--- enclave/config.json ---
{
  "caddy": {
    "url": "",
    "caddyfile": ""
  },
  "params": {},
  "service_commands": [
    {
      "name": "node_app",
      "command": "/app/mount/app",
      "build_commands": [""],
      "ports": [4000],
      "env": {}
    }
  ]
}

'''
'''--- enclave/config.ts ---
import { createWalletClient, custom, http } from "viem";
import { privateKeyToAccount } from "viem/accounts";
import { baseSepolia } from "viem/chains";

export const account = privateKeyToAccount(`0x${process.env.HUB_PRIVATE_KEY}`);
export const walletClient = createWalletClient({
  chain: baseSepolia,
  account: account,
  transport: http()
});

'''
'''--- enclave/events/farcaster/index.ts ---

'''
'''--- enclave/events/near.ts ---
const nftFilter = [
  {
    status: "SUCCESS",
    account_id: "social.near",
  },
  {
    status: "SUCCESS",
    predecessor_id: "social.near",
  },
];

let reconnectTimeout: number | Timer | null | undefined = null;

function listenToNFT() {
  const scheduleReconnect = (timeOut: number | undefined) => {
    if (reconnectTimeout) {
      clearTimeout(reconnectTimeout);
      reconnectTimeout = null;
    }
    reconnectTimeout = setTimeout(() => {
      listenToNFT();
    }, timeOut);
  };

  const ws = new WebSocket("wss://events.near.stream/ws");

  ws.onopen = () => {
    console.log(`Connection to WS has been established`);
    ws.send(
      JSON.stringify({
        secret: "ohyeahnftsss",
        filter: nftFilter,
        fetch_past_events: 0,
      })
    );
  };
  ws.onclose = () => {
    console.log(`WS Connection has been closed`);
    scheduleReconnect(1);
  };
  ws.onmessage = (e) => {
    // @ts-ignore
    const data = JSON.parse(e.data);

    console.log("data", data);
  };
  ws.onerror = (err) => {
    console.log("WebSocket error", err);
  };
}

listenToNFT();

'''
'''--- enclave/generated.ts ---
export const awbRegistryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "addressToUser",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agentIdToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agents",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "balances",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_origin", internalType: "address", type: "address" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "createAndFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "daoGovernorToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "_requestId", internalType: "uint256", type: "uint256" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "fulfillerAddressToFulfiller",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "fulfillers",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getAgentById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllAgents",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllFulfillers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller[]",
        type: "tuple[]",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllRequests",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllUsers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User[]",
        type: "tuple[]",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getFulfillerByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller",
        type: "tuple",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getRequestById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getUserByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User",
        type: "tuple",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "operator", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_daoToken", internalType: "address", type: "address" },
      { name: "_tokenURI", internalType: "string", type: "string" },
      { name: "_runPrice", internalType: "uint256", type: "uint256" },
    ],
    name: "registerAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_description", internalType: "string", type: "string" },
    ],
    name: "registerFulfiller",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requestIdToRequest",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requests",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_origin", internalType: "address", type: "address" },
    ],
    name: "submitRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "uri", internalType: "string", type: "string" },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "users",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_amount", internalType: "uint256", type: "uint256" }],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "approved",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_fromTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "_toTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BatchMetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Transfer",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
  },
  {
    type: "error",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC721InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "ERC721InvalidOperator",
  },
  {
    type: "error",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "ERC721InvalidOwner",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC721InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC721InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ERC721NonexistentToken",
  },
] as const;
'''
'''--- enclave/omni-chain/_near.ts ---
import Web3, { type EthExecutionAPI, type SupportedProviders } from "web3";
import { bytesToHex } from "@ethereumjs/util";
import { FeeMarketEIP1559Transaction } from "@ethereumjs/tx";
import { Common } from "@ethereumjs/common";
import type { Web3ContextInitOptions } from "web3-core";
import type { RegisteredSubscription } from "web3-eth";
import { KeyPair, connect, keyStores, providers } from "near-api-js";
import { functionCall } from "near-api-js/lib/transaction";
import {
  createPublicClient,
  createWalletClient,
  fromHex,
  hashMessage,
  http,
  serializeTransaction,
  toHex,
} from "viem";
import { baseSepolia } from "viem/chains";

export const client = createPublicClient({
  chain: baseSepolia,
  transport: http(),
});

export const walletClient = createWalletClient({
  chain: baseSepolia,
  transport: http(),
});

const ONE_ETH = 1000000000000n;
const TGAS = 1000000000000;
const THIRTY_TGAS = "30000000000000";
const NO_DEPOSIT = "0";
const DERIVATION_PATH = "ethereum,1";
const MPC_CONTRACT = "signer.canhazgas.testnet"; // NOT SAFE FOR PRODUCTION

const keyStore = new keyStores.InMemoryKeyStore();
const keyPair = KeyPair.fromString(process.env.NEAR_ACCOUNT_PRIVATE_KEY!);
const config = {
  keyStore,
  networkId: "testnet",
  nodeUrl: "https://rpc.testnet.near.org",
};

await keyStore.setKey("testnet", process.env.NEAR_ACCOUNT_ID!, keyPair);
const near = await connect({ ...config, keyStore });
const account = await near.account(process.env.NEAR_ACCOUNT_ID!);

async function getWeb3(
  chain_rpc:
    | string
    | SupportedProviders<EthExecutionAPI>
    | Web3ContextInitOptions<EthExecutionAPI, RegisteredSubscription>
    | undefined
) {
  return new Web3(chain_rpc);
}

async function getBalance(
  web3: { eth: { getBalance: (arg0: any) => any } },
  accountId: any
) {
  const balance = await web3.eth.getBalance(accountId);
  return Number((balance * 100n) / ONE_ETH) / 100;
}

async function createPayload(chain_id: any, sender: any, receiver: any) {
  const common = Common.custom({ chainId: chain_id });

  // Get the nonce
  const nonce = await client.getTransactionCount({
    address: sender,
  });

  const { maxFeePerGas, maxPriorityFeePerGas } = await queryGasPrice();

  // Construct transaction
  const transactionData = {
    nonce: nonce + 1,
    gasLimit: 21000,
    maxFeePerGas,
    maxPriorityFeePerGas,
    to: receiver,
    value: 0n,
    chain: chain_id,
  };

  // Return the message hash
  const transaction = FeeMarketEIP1559Transaction.fromTxData(transactionData, {
    common,
  });
  const tx_hash = transaction.getHashedMessageToSign();

  const serializedTx = serializeTransaction({
    nonce: nonce + 1,
    gas: BigInt(21000),
    maxFeePerGas: BigInt(maxFeePerGas),
    maxPriorityFeePerGas: BigInt(maxPriorityFeePerGas),
    to: receiver,
    value: 0n,
    chainId: chain_id,
  });

  return { transaction: serializedTx, payload: Array.from(fromHex(serializedTx, "bytes")) };
}

async function relayTransaction(signedTransaction: {
  serialize: () => Uint8Array;
}) {
  const serializedTx = bytesToHex(signedTransaction.serialize());

  console.log(serializedTx);
  const relayed = walletClient.sendRawTransaction({
    serializedTransaction: serializedTx as `0x${string}`,
  });
  return relayed;
}

function reconstructSignature(
  transaction: {
    addSignature: (arg0: bigint, arg1: Buffer, arg2: Buffer) => any;
  },
  big_r: string,
  big_s:
    | WithImplicitCoercion<string>
    | { [Symbol.toPrimitive](hint: "string"): string }
) {
  const r = Buffer.from(big_r.slice(2), "hex");
  const s = Buffer.from(big_s, "hex");
  let v = big_r.startsWith("02") ? 0n : 1n;

  const signedTransaction = transaction.addSignature(v, r, s);
  return signedTransaction;
}

async function requestSignature(payload: number[], path: any) {
  const request = await account.signAndSendTransaction({
    receiverId: MPC_CONTRACT,
    actions: [functionCall("sign", { path, payload }, 300 * TGAS, NO_DEPOSIT)],
  });

  const provider = new providers.JsonRpcProvider({ url: config.nodeUrl });

  const transaction = await provider.txStatus(
    request.transaction.hash,
    "unnused"
  );

  const [big_r, big_s] = await providers.getTransactionLastResult(transaction);

  return { big_r, big_s };
}

async function queryGasPrice() {
  const gasPrice = await client.getGasPrice();

  const buffer = BigInt(5 * 1e9);
  const maxFeePerGas = gasPrice + buffer;

  return { maxFeePerGas, maxPriorityFeePerGas: gasPrice };
}

const { transaction, payload } = await createPayload(
  11155111, // 84532, // 11155111,
  process.env.ETHEREUM_DERIVED_BY_NEAR_ACCOUNT_PRIVATE_KEY,
  process.env.REGISTRY_ACCOUNT_ADDRESS
);

const { big_r, big_s } = await requestSignature(payload, DERIVATION_PATH);
const signedTransaction = reconstructSignature(transaction, big_r, big_s);

try {
  await relayTransaction(signedTransaction);
} catch (error) {
  console.log(error);
}

'''
'''--- enclave/omni-chain/near.ts ---
import Web3, { type EthExecutionAPI, type SupportedProviders } from "web3";
import { bytesToHex } from "@ethereumjs/util";
import { FeeMarketEIP1559Transaction } from "@ethereumjs/tx";
import { Common } from "@ethereumjs/common";
import type { Web3ContextInitOptions } from "web3-core";
import type { RegisteredSubscription } from "web3-eth";
import { KeyPair, connect, keyStores, providers } from "near-api-js";
import { functionCall } from "near-api-js/lib/transaction";

const ONE_ETH = 1000000000000n;
const TGAS = 1000000000000;
const THIRTY_TGAS = "30000000000000";
const NO_DEPOSIT = "0";
const DERIVATION_PATH = "ethereum,1";
const MPC_CONTRACT = "signer.canhazgas.testnet"; // NOT SAFE FOR PRODUCTION

export const crossChain = async ({ metadata }: { metadata: any }) => {
  const keyStore = new keyStores.InMemoryKeyStore();
  const keyPair = KeyPair.fromString(process.env.NEAR_ACCOUNT_PRIVATE_KEY!);
  const config = {
    keyStore,
    networkId: "testnet",
    nodeUrl: "https://rpc.testnet.near.org",
  };
  await keyStore.setKey("testnet", process.env.NEAR_ACCOUNT_ID!, keyPair);
  const near = await connect({ ...config, keyStore });
  const account = await near.account(process.env.NEAR_ACCOUNT_ID!);

  async function getWeb3(
    chain_rpc:
      | string
      | SupportedProviders<EthExecutionAPI>
      | Web3ContextInitOptions<EthExecutionAPI, RegisteredSubscription>
      | undefined
  ) {
    return new Web3(chain_rpc);
  }

  async function getBalance(
    web3: { eth: { getBalance: (arg0: any) => any } },
    accountId: any
  ) {
    const balance = await web3.eth.getBalance(accountId);
    return Number((balance * 100n) / ONE_ETH) / 100;
  }

  async function createPayload(
    web3: any,
    chain_id: any,
    sender: any,
    receiver: any
  ) {
    const common = new Common({ chain: chain_id });

    const _web3 = await web3;

    // Get the nonce
    const nonce = await _web3.eth.getTransactionCount(sender);

    const { maxFeePerGas, maxPriorityFeePerGas } = await queryGasPrice();

    const functionSignature = _web3.eth.abi.encodeFunctionCall(
      {
        name: "safeMint",
        type: "function",
        inputs: [
          {
            type: "address",
            name: "to",
          },
        ],
      },
      ["0xAA5FcF171dDf9FE59c985A28747e650C2e9069cA"]
    );

    const transactionData = {
      nonce,
      gasLimit: 1000000,
      maxFeePerGas: maxFeePerGas,
      maxPriorityFeePerGas: maxPriorityFeePerGas,
      to: receiver,
      value: 0n,
      chain: chain_id,
      data: functionSignature,
    };

    const transaction = FeeMarketEIP1559Transaction.fromTxData(
      transactionData,
      {
        common,
      }
    );
    const tx_hash = transaction.getHashedMessageToSign();
    return { transaction, payload: Array.from(tx_hash) };
  }

  async function relayTransaction(
    web3: any,
    signedTransaction: { serialize: () => Uint8Array }
  ) {
    const _web3 = await web3;
    const serializedTx = bytesToHex(signedTransaction.serialize());
    const relayed = await _web3.eth.sendSignedTransaction(serializedTx);
    return relayed.transactionHash;
  }

  function reconstructSignature(
    transaction: {
      addSignature: (arg0: bigint, arg1: Buffer, arg2: Buffer) => any;
    },
    big_r: string,
    big_s:
      | WithImplicitCoercion<string>
      | { [Symbol.toPrimitive](hint: "string"): string }
  ) {
    const r = Buffer.from(big_r.slice(2), "hex");
    const s = Buffer.from(big_s, "hex");
    let v = big_r.startsWith("02") ? 0n : 1n;

    const signedTransaction = transaction.addSignature(v, r, s);
    return signedTransaction;
  }

  async function requestSignature(payload: number[], path: any, account: any) {
    // Request signature from MPC
    const request = await account.signAndSendTransaction({
      receiverId: MPC_CONTRACT,
      actions: [
        functionCall("sign", { path, payload }, 300 * TGAS, NO_DEPOSIT),
      ],
    });

    const provider = new providers.JsonRpcProvider({ url: config.nodeUrl });

    const transaction = await provider.txStatus(
      request.transaction.hash,
      "unnused"
    );

    const [big_r, big_s] = await providers.getTransactionLastResult(
      transaction
    );

    return { big_r, big_s };
  }

  async function queryGasPrice() {
    const res = await fetch(
      "https://sepolia.beaconcha.in/api/v1/execution/gasnow"
    );
    const json = await res.json();
    // @ts-ignore
    const maxPriorityFeePerGas = BigInt(json.data.rapid);

    // Since we don't have a direct `baseFeePerGas`, we'll use a workaround.
    // Ideally, you should fetch the current `baseFeePerGas` from the network.
    // Here, we'll just set a buffer based on `maxPriorityFeePerGas` for demonstration purposes.
    // This is NOT a recommended practice for production environments.
    const buffer = BigInt(2 * 1e9); // Example buffer of 2 Gwei, assuming the API values are in WEI
    const maxFeePerGas = maxPriorityFeePerGas + buffer;

    return { maxFeePerGas, maxPriorityFeePerGas };
  }

  const { transaction, payload } = await createPayload(
    getWeb3("https://rpc.sepolia.ethpandaops.io"),
    11155111, //84532,
    process.env.ETHEREUM_DERIVED_BY_NEAR_ACCOUNT_PRIVATE_KEY,
    process.env.ETHEREUM_SEPOLIA_NFT_CONTRACT
  );

  const { big_r, big_s } = await requestSignature(
    payload,
    DERIVATION_PATH,
    account
  );

  const signedTransaction = reconstructSignature(transaction, big_r, big_s);
  await relayTransaction(
    getWeb3("https://rpc.sepolia.ethpandaops.io"),
    signedTransaction
  );
};

'''
'''--- enclave/package.json ---
{
  "name": "bun-awb",
  "module": "app.ts",
  "main": "app.ts",
  "type": "module",
  "scripts": {
    "build": "bun build --compile --minify --sourcemap ./app.ts --outfile ./out/app",
    "build:enclave": "sudo docker run -it --privileged -v `pwd`:/app/mount marlinorg/enclave-builder"
  },
  "devDependencies": {
    "@types/bun": "latest"
  },
  "peerDependencies": {
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "@ethereumjs/common": "^4.2.0",
    "@ethereumjs/tx": "^5.2.1",
    "@ethereumjs/util": "^9.0.2",
    "elysia": "^0.8.17",
    "langchain": "^0.1.25",
    "nanoid": "^5.0.6",
    "near-api-js": "^3.0.3",
    "nft.storage": "^7.1.1",
    "openai": "^4.28.4",
    "replicate": "^0.27.1",
    "viem": "^2.7.16",
    "web3": "^4.5.0"
  }
}
'''
'''--- enclave/tsconfig.json ---
{
  "compilerOptions": {
    // Enable latest features
    "lib": ["ESNext"],
    "target": "ESNext",
    "module": "ESNext",
    "moduleDetection": "force",
    "jsx": "react-jsx",
    "allowJs": true,

    // Bundler mode
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "noEmit": true,

    // Best practices
    "strict": true,
    "skipLibCheck": true,
    "noFallthroughCasesInSwitch": true,

    // Some stricter flags (disabled by default)
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noPropertyAccessFromIndexSignature": false
  }
}

'''
'''--- enclave/vm.ts ---
import vm from "node:vm";
import OpenAI from "openai";
import * as nearAPI from "near-api-js";
import Replicate from "replicate";
import { crossChain } from "./omni-chain/near";

const sandbox = {
  console: console,
  require: require,
  OpenAI: OpenAI,
  openRouter: new OpenAI({
    apiKey: process.env.OPEN_ROUTER_API_KEY,
    baseURL: "https://openrouter.ai/api/v1",
  }),
  libraries: {
    ai: {
      replicate: new Replicate({
        auth: process.env.REPLICATE_API_KEY,
      }),
    },
    web3: {
      nearAPI,
      crossChain
    },
  },
  process: {
    ...process,
    env: {
      ...process.env,
    },
  },
};

const fetchCode = async (uri: string) => {
  const response = await fetch(uri);
  return await response.text();
};

export const executeCodeVm = async ({
  uri,
  prompt,
}: {
  uri: string;
  prompt: string;
}) => {
  try {
    const code = await fetchCode(uri);

    const transpiler = new Bun.Transpiler({
      loader: "tsx",
      target: "node",
    });

    const transpiledCode = transpiler.transformSync(
      `${code}\nmain({prompt: "${prompt}"}).then((result) => result).catch(console.error);`
    );

    vm.createContext(sandbox);

    const result = await vm.runInContext(transpiledCode, sandbox);

    return result;
  } catch (error) {
    console.log(error);
  }
};

'''
'''--- frontend/.eslintrc.json ---
{
  "extends": "next/core-web-vitals",
  "rules": {
    "@next/next/no-img-element": "off"
  }
}

'''
'''--- frontend/README.md ---
This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.

'''
'''--- frontend/app/globals.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

'''
'''--- frontend/components.json ---
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "app/globals.css",
    "baseColor": "slate",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  }
}

'''
'''--- frontend/lib/contract-source-code.ts ---
export const tokenSourceCode = `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol";

/// @custom:security-contact contact@agentswithbenefits.xyz
contract DAOToken is ERC20, ERC20Burnable, ERC20Permit, ERC20Votes {
    constructor(
        string memory _name,
        string memory _symbol,
        address _mintAddress,
        uint256 _totalSupply
    ) ERC20(_name, _symbol) ERC20Permit(_name) {
        _mint(_mintAddress, _totalSupply);
    }

    // The following functions are overrides required by Solidity.

    function _update(
        address from,
        address to,
        uint256 value
    ) internal override(ERC20, ERC20Votes) {
        super._update(from, to, value);
    }

    function nonces(
        address owner
    ) public view override(ERC20Permit, Nonces) returns (uint256) {
        return super.nonces(owner);
    }
}
`;

export const daoTokenByteCode = `0x608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de57806395d89b4111610097578063c3cda52011610071578063c3cda5201461036e578063d505accf14610381578063dd62ed3e14610394578063f1127ed8146103cd57600080fd5b806395d89b41146103405780639ab24eb014610348578063a9059cbb1461035b57600080fd5b806370a08231146102a457806379cc6790146102cd5780637ecebe00146102e057806384b0196e146102f35780638e539e8c1461030e57806391ddadf41461032157600080fd5b80633a46b1a8116101305780633a46b1a8146101f557806342966c68146102085780634bf5d7e91461021d578063587cde1e146102255780635c19a95c146102695780636fcfff451461027c57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b61018061040c565b60405161018d9190611ad2565b60405180910390f35b6101a96101a4366004611b01565b61049e565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611b2b565b6104b8565b6040516012815260200161018d565b6101bd6104dc565b6101bd610203366004611b01565b6104eb565b61021b610216366004611b67565b610571565b005b61018061057e565b610251610233366004611b80565b6001600160a01b039081166000908152600860205260409020541690565b6040516001600160a01b03909116815260200161018d565b61021b610277366004611b80565b6105f6565b61028f61028a366004611b80565b610605565b60405163ffffffff909116815260200161018d565b6101bd6102b2366004611b80565b6001600160a01b031660009081526020819052604090205490565b61021b6102db366004611b01565b610610565b6101bd6102ee366004611b80565b610625565b6102fb610630565b60405161018d9796959493929190611b9b565b6101bd61031c366004611b67565b610676565b6103296106e0565b60405165ffffffffffff909116815260200161018d565b6101806106ea565b6101bd610356366004611b80565b6106f9565b6101a9610369366004611b01565b610729565b61021b61037c366004611c45565b610737565b61021b61038f366004611c9d565b6107f4565b6101bd6103a2366004611d07565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103e06103db366004611d3a565b61092e565b60408051825165ffffffffffff1681526020928301516001600160d01b0316928101929092520161018d565b60606003805461041b90611d7a565b80601f016020809104026020016040519081016040528092919081815260200182805461044790611d7a565b80156104945780601f1061046957610100808354040283529160200191610494565b820191906000526020600020905b81548152906001019060200180831161047757829003601f168201915b5050505050905090565b6000336104ac81858561096b565b60019150505b92915050565b6000336104c685828561097d565b6104d18585856109fb565b506001949350505050565b60006104e6610a5a565b905090565b6000806104f66106e0565b90508065ffffffffffff16831061053657604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044015b60405180910390fd5b61056061054284610b85565b6001600160a01b038616600090815260096020526040902090610bbc565b6001600160d01b0316949350505050565b61057b3382610c72565b50565b6060610588610ca8565b65ffffffffffff166105986106e0565b65ffffffffffff16146105be576040516301bfc1c560e61b815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b336106018183610cb3565b5050565b60006104b282610d25565b61061b82338361097d565b6106018282610c72565b60006104b282610d47565b600060608060008060006060610644610d65565b61064c610d92565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000806106816106e0565b90508065ffffffffffff1683106106bc57604051637669fc0f60e11b81526004810184905265ffffffffffff8216602482015260440161052d565b6106d06106c884610b85565b600a90610bbc565b6001600160d01b03169392505050565b60006104e6610ca8565b60606004805461041b90611d7a565b6001600160a01b038116600090815260096020526040812061071a90610dbf565b6001600160d01b031692915050565b6000336104ac8185856109fb565b8342111561075b57604051632341d78760e11b81526004810185905260240161052d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906107d5906107cd9060a00160405160208183030381529060405280519060200120610df8565b858585610e25565b90506107e18187610e53565b6107eb8188610cb3565b50505050505050565b834211156108185760405163313c898160e11b81526004810185905260240161052d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108658c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108c082610df8565b905060006108d082878787610e25565b9050896001600160a01b0316816001600160a01b031614610917576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161052d565b6109228a8a8a61096b565b50505050505050505050565b604080518082019091526000808252602082015261094c8383610ea6565b9392505050565b600061094c8284611dca565b600061094c8284611df1565b6109788383836001610edc565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146109f557818110156109e657604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161052d565b6109f584848484036000610edc565b50505050565b6001600160a01b038316610a2557604051634b637e8f60e11b81526000600482015260240161052d565b6001600160a01b038216610a4f5760405163ec442f0560e01b81526000600482015260240161052d565b610978838383610fb1565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610ab357507f000000000000000000000000000000000000000000000000000000000000000046145b15610add57507f000000000000000000000000000000000000000000000000000000000000000090565b6104e6604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600065ffffffffffff821115610bb8576040516306dfcc6560e41b8152603060048201526024810183905260440161052d565b5090565b815460009081816005811115610c1b576000610bd784610fbc565b610be19085611e11565b60008881526020902090915081015465ffffffffffff9081169087161015610c0b57809150610c19565b610c16816001611e24565b92505b505b6000610c29878785856110a4565b90508015610c6457610c4e87610c40600184611e11565b600091825260209091200190565b54600160301b90046001600160d01b0316610c67565b60005b979650505050505050565b6001600160a01b038216610c9c57604051634b637e8f60e11b81526000600482015260240161052d565b61060182600083610fb1565b60006104e643610b85565b6001600160a01b0382811660008181526008602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46109788183610d2086611106565b611124565b6001600160a01b0381166000908152600960205260408120546104b290611290565b6001600160a01b0381166000908152600760205260408120546104b2565b60606104e67f000000000000000000000000000000000000000000000000000000000000000060056112c1565b60606104e67f000000000000000000000000000000000000000000000000000000000000000060066112c1565b80546000908015610def57610dd983610c40600184611e11565b54600160301b90046001600160d01b031661094c565b60009392505050565b60006104b2610e05610a5a565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610e378888888861136c565b925092509250610e47828261143b565b50909695505050505050565b6001600160a01b0382166000908152600760205260409020805460018101909155818114610978576040516301d4b62360e61b81526001600160a01b03841660048201526024810182905260440161052d565b60408051808201909152600080825260208201526001600160a01b038316600090815260096020526040902061094c90836114f4565b6001600160a01b038416610f065760405163e602df0560e01b81526000600482015260240161052d565b6001600160a01b038316610f3057604051634a1406b160e11b81526000600482015260240161052d565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156109f557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fa391815260200190565b60405180910390a350505050565b610978838383611564565b600081600003610fce57506000919050565b60006001610fdb846115cb565b901c6001901b90506001818481610ff457610ff4611e37565b048201901c9050600181848161100c5761100c611e37565b048201901c9050600181848161102457611024611e37565b048201901c9050600181848161103c5761103c611e37565b048201901c9050600181848161105457611054611e37565b048201901c9050600181848161106c5761106c611e37565b048201901c9050600181848161108457611084611e37565b048201901c905061094c8182858161109e5761109e611e37565b0461165f565b60005b818310156110fe5760006110bb8484611675565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff1611156110ea578092506110f8565b6110f5816001611e24565b93505b506110a7565b509392505050565b6001600160a01b0381166000908152602081905260408120546104b2565b816001600160a01b0316836001600160a01b0316141580156111465750600081115b15610978576001600160a01b038316156111ee576001600160a01b038316600090815260096020526040812081906111899061095f61118486611690565b6116c4565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516111e3929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610978576001600160a01b038216600090815260096020526040812081906112279061095361118486611690565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611281929190918252602082015260400190565b60405180910390a25050505050565b600063ffffffff821115610bb8576040516306dfcc6560e41b8152602060048201526024810183905260440161052d565b606060ff83146112db576112d4836116fd565b90506104b2565b8180546112e790611d7a565b80601f016020809104026020016040519081016040528092919081815260200182805461131390611d7a565b80156113605780601f1061133557610100808354040283529160200191611360565b820191906000526020600020905b81548152906001019060200180831161134357829003601f168201915b505050505090506104b2565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113a75750600091506003905082611431565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156113fb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661142757506000925060019150829050611431565b9250600091508190505b9450945094915050565b600082600381111561144f5761144f611e4d565b03611458575050565b600182600381111561146c5761146c611e4d565b0361148a5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561149e5761149e611e4d565b036114bf5760405163fce698f760e01b81526004810182905260240161052d565b60038260038111156114d3576114d3611e4d565b03610601576040516335e2f38360e21b81526004810182905260240161052d565b6040805180820190915260008082526020820152826000018263ffffffff168154811061152357611523611e63565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b61156f83838361173c565b6001600160a01b0383166115c057600061158860025490565b90506001600160d01b03808211156115bd57604051630e58ae9360e11b8152600481018390526024810182905260440161052d565b50505b610978838383611866565b600080608083901c156115e057608092831c92015b604083901c156115f257604092831c92015b602083901c1561160457602092831c92015b601083901c1561161657601092831c92015b600883901c1561162857600892831c92015b600483901c1561163a57600492831c92015b600283901c1561164c57600292831c92015b600183901c156104b25760010192915050565b600081831061166e578161094c565b5090919050565b60006116846002848418611e79565b61094c90848416611e24565b60006001600160d01b03821115610bb8576040516306dfcc6560e41b815260d060048201526024810183905260440161052d565b6000806116f06116d26106e0565b6116e86116de88610dbf565b868863ffffffff16565b8791906118dc565b915091505b935093915050565b6060600061170a836118ea565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b03831661176757806002600082825461175c9190611e24565b909155506117d99050565b6001600160a01b038316600090815260208190526040902054818110156117ba5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161052d565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166117f557600280548290039055611814565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161185991815260200190565b60405180910390a3505050565b6001600160a01b03831661188857611885600a61095361118484611690565b50505b6001600160a01b0382166118aa576118a7600a61095f61118484611690565b50505b6001600160a01b0383811660009081526008602052604080822054858416835291205461097892918216911683611124565b6000806116f0858585611912565b600060ff8216601f8111156104b257604051632cd44ac360e21b815260040160405180910390fd5b825460009081908015611a3157600061193087610c40600185611e11565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b03166020840152919250908716101561198457604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff8088169116036119d057846119a788610c40600186611e11565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055611a21565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b6020015192508391506116f59050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b0291909316179201919091559050816116f5565b6000815180845260005b81811015611ab257602081850181015186830182015201611a96565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061094c6020830184611a8c565b80356001600160a01b0381168114611afc57600080fd5b919050565b60008060408385031215611b1457600080fd5b611b1d83611ae5565b946020939093013593505050565b600080600060608486031215611b4057600080fd5b611b4984611ae5565b9250611b5760208501611ae5565b9150604084013590509250925092565b600060208284031215611b7957600080fd5b5035919050565b600060208284031215611b9257600080fd5b61094c82611ae5565b60ff60f81b881681526000602060e06020840152611bbc60e084018a611a8c565b8381036040850152611bce818a611a8c565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015611c2257835183529284019291840191600101611c06565b50909c9b505050505050505050505050565b803560ff81168114611afc57600080fd5b60008060008060008060c08789031215611c5e57600080fd5b611c6787611ae5565b95506020870135945060408701359350611c8360608801611c34565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611cb857600080fd5b611cc188611ae5565b9650611ccf60208901611ae5565b95506040880135945060608801359350611ceb60808901611c34565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611d1a57600080fd5b611d2383611ae5565b9150611d3160208401611ae5565b90509250929050565b60008060408385031215611d4d57600080fd5b611d5683611ae5565b9150602083013563ffffffff81168114611d6f57600080fd5b809150509250929050565b600181811c90821680611d8e57607f821691505b602082108103611dae57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160d01b03818116838216019080821115611dea57611dea611db4565b5092915050565b6001600160d01b03828116828216039080821115611dea57611dea611db4565b818103818111156104b2576104b2611db4565b808201808211156104b2576104b2611db4565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600082611e9657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220fc6ea3f1eb91ed25fcfd6dd411ce6d545e3151e21e157a03a22e0a82e633d2ca64736f6c63430008180033`;

export const governorSourceCode = `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "@openzeppelin/contracts/governance/Governor.sol";
import "@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol";
import "@openzeppelin/contracts/governance/extensions/GovernorVotes.sol";
import "@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol";

/// @custom:security-contact contact@agentswithbenefits.xyz
contract DAOGovernor is
    Governor,
    GovernorCountingSimple,
    GovernorVotes,
    GovernorVotesQuorumFraction
{
    uint256 internal initialVotingDelay;
    uint256 internal initialVotingPeriod;
    uint256 internal initialProposalThreshold;

    constructor(
        string memory _name,
        IVotes _token,
        uint256 _votingDelay,
        uint256 _votingPeriod,
        uint256 _proposalThreshold,
        uint256 _quorumVotes
    )
        Governor(_name)
        GovernorVotes(_token)
        GovernorVotesQuorumFraction(_quorumVotes)
    {
        initialVotingDelay = _votingDelay;
        initialVotingPeriod = _votingPeriod;
        initialProposalThreshold = _proposalThreshold;
    }

    function votingDelay() public view override returns (uint256) {
        return initialVotingDelay;
    }

    function votingPeriod() public view override returns (uint256) {
        return initialVotingPeriod;
    }

    function proposalThreshold() public view override returns (uint256) {
        return initialProposalThreshold;
    }

    // The following functions are overrides required by Solidity.

    function quorum(
        uint256 blockNumber
    )
        public
        view
        override(Governor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
}
`;

export const governorByteCode = `0x6101806040523480156200001257600080fd5b5060405162004289380380620042898339810160408190526200003591620005d9565b80858780620000586040805180820190915260018152603160f81b602082015290565b620000658260006200014c565b61012052620000768160016200014c565b61014052815160208084019190912060e052815190820120610100524660a0526200010460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05260036200011b82826200075c565b50506001600160a01b031661016052620001358162000185565b5050600992909255600a55600b5550620008ce9050565b60006020835110156200016c57620001648362000229565b90506200017f565b816200017984826200075c565b5060ff90505b92915050565b606480821115620001b85760405163243e544560e01b815260048101839052602481018290526044015b60405180910390fd5b6000620001c46200026c565b9050620001e9620001d462000288565b620001df856200030a565b6008919062000344565b505060408051828152602081018590527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a1505050565b600080829050601f8151111562000257578260405163305a27a960e01b8152600401620001af919062000828565b805162000264826200085d565b179392505050565b60006200027a600862000361565b6001600160d01b0316905090565b6000620002956101605190565b6001600160a01b03166391ddadf46040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620002f1575060408051601f3d908101601f19168201909252620002ee9181019062000882565b60015b620003055762000300620003b1565b905090565b919050565b60006001600160d01b0382111562000340576040516306dfcc6560e41b815260d0600482015260248101839052604401620001af565b5090565b60008062000354858585620003be565b915091505b935093915050565b80546000908015620003a7576200038d836200037f600184620008ac565b600091825260209091200190565b54660100000000000090046001600160d01b0316620003aa565b60005b9392505050565b6000620003004362000550565b825460009081908015620004f1576000620003e0876200037f600185620008ac565b60408051808201909152905465ffffffffffff80821680845266010000000000009092046001600160d01b0316602084015291925090871610156200043857604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff8088169116036200048c57846200045f886200037f600186620008ac565b80546001600160d01b039290921666010000000000000265ffffffffffff909216919091179055620004e0565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d815291909120945191519092166601000000000000029216919091179101555b602001519250839150620003599050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316660100000000000002919093161792019190915590508162000359565b600065ffffffffffff82111562000340576040516306dfcc6560e41b81526030600482015260248101839052604401620001af565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005b85781810151838201526020016200059e565b50506000910152565b80516001600160a01b03811681146200030557600080fd5b60008060008060008060c08789031215620005f357600080fd5b86516001600160401b03808211156200060b57600080fd5b818901915089601f8301126200062057600080fd5b81518181111562000635576200063562000585565b604051601f8201601f19908116603f0116810190838211818310171562000660576200066062000585565b816040528281528c60208487010111156200067a57600080fd5b6200068d8360208301602088016200059b565b809a505050505050620006a360208801620005c1565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b600181811c90821680620006e057607f821691505b6020821081036200070157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000757576000816000526020600020601f850160051c81016020861015620007325750805b601f850160051c820191505b8181101562000753578281556001016200073e565b5050505b505050565b81516001600160401b0381111562000778576200077862000585565b6200079081620007898454620006cb565b8462000707565b602080601f831160018114620007c85760008415620007af5750858301515b600019600386901b1c1916600185901b17855562000753565b600085815260208120601f198616915b82811015620007f957888601518255948401946001909101908401620007d8565b5085821015620008185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620008498160408501602087016200059b565b601f01601f19169190910160400192915050565b80516020808301519190811015620007015760001960209190910360031b1b16919050565b6000602082840312156200089557600080fd5b815165ffffffffffff81168114620003aa57600080fd5b818103818111156200017f57634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051610140516101605161393962000950600039600081816108f201528181610d4c0152818161129701528181611dba0152611ecc01526000611d8501526000611d58015260006120f2015260006120ca015260006120250152600061204f0152600061207901526139396000f3fe6080604052600436106102605760003560e01c80637b3c71d311610144578063b58131b0116100b6578063dd4e2ba51161007a578063dd4e2ba5146107fd578063deaaa7cc14610843578063eb9019d414610877578063f23a6e6114610897578063f8ce560a146108c3578063fc0c546a146108e357600080fd5b8063b58131b014610769578063bc197c811461077e578063c01f9e37146107aa578063c28bc2fa146107ca578063c59057e4146107dd57600080fd5b806391ddadf41161010857806391ddadf41461069b57806397c3d334146106c75780639a802a6d146106db578063a7713a70146106fb578063a9a9529414610710578063ab58fb8e1461073157600080fd5b80637b3c71d3146105dd5780637d5e81e2146105fd5780637ecebe001461061d57806384b0196e146106535780638ff262e31461067b57600080fd5b80633932abb1116101dd578063544ffc9c116101a1578063544ffc9c146104de57806354fd4d5014610533578063567813881461055d5780635b8d0e0d1461057d5780635f398a141461059d57806360c4247f146105bd57600080fd5b80633932abb11461041d5780633e4f49e614610432578063438596321461045f578063452115d6146104a95780634bf5d7e9146104c957600080fd5b8063150b7a0211610224578063150b7a0214610352578063160cbed7146103965780632656227d146103b65780632d63f693146103c95780632fe3e261146103e957600080fd5b806301ffc9a71461026e57806302a251a3146102a357806306f3f9e6146102c257806306fdde03146102e2578063143489d01461030457600080fd5b3661026957005b005b600080fd5b34801561027a57600080fd5b5061028e6102893660046129ba565b610916565b60405190151581526020015b60405180910390f35b3480156102af57600080fd5b50600a545b60405190815260200161029a565b3480156102ce57600080fd5b506102676102dd3660046129e4565b610968565b3480156102ee57600080fd5b506102f761097c565b60405161029a9190612a4d565b34801561031057600080fd5b5061033a61031f3660046129e4565b6000908152600460205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161029a565b34801561035e57600080fd5b5061037d61036d366004612b42565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161029a565b3480156103a257600080fd5b506102b46103b1366004612d1b565b610a0e565b6102b46103c4366004612d1b565b610a4e565b3480156103d557600080fd5b506102b46103e43660046129e4565b610b79565b3480156103f557600080fd5b506102b47f3e83946653575f9a39005e1545185629e92736b7528ab20ca3816f315424a81181565b34801561042957600080fd5b506009546102b4565b34801561043e57600080fd5b5061045261044d3660046129e4565b610b9a565b60405161029a9190612de2565b34801561046b57600080fd5b5061028e61047a366004612df0565b60008281526007602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156104b557600080fd5b506102b46104c4366004612d1b565b610cd9565b3480156104d557600080fd5b506102f7610d48565b3480156104ea57600080fd5b506105186104f93660046129e4565b6000908152600760205260409020805460018201546002909201549092565b6040805193845260208401929092529082015260600161029a565b34801561053f57600080fd5b506040805180820190915260018152603160f81b60208201526102f7565b34801561056957600080fd5b506102b4610578366004612e2d565b610e0a565b34801561058957600080fd5b506102b4610598366004612e98565b610e33565b3480156105a957600080fd5b506102b46105b8366004612f50565b610f92565b3480156105c957600080fd5b506102b46105d83660046129e4565b610fe7565b3480156105e957600080fd5b506102b46105f8366004612fd3565b611075565b34801561060957600080fd5b506102b461061836600461302c565b6110bd565b34801561062957600080fd5b506102b46106383660046130e0565b6001600160a01b031660009081526002602052604090205490565b34801561065f57600080fd5b5061066861117b565b60405161029a9796959493929190613137565b34801561068757600080fd5b506102b46106963660046131a7565b6111c1565b3480156106a757600080fd5b506106b0611293565b60405165ffffffffffff909116815260200161029a565b3480156106d357600080fd5b5060646102b4565b3480156106e757600080fd5b506102b46106f63660046131f6565b611320565b34801561070757600080fd5b506102b461132d565b34801561071c57600080fd5b5061028e61072b3660046129e4565b50600090565b34801561073d57600080fd5b506102b461074c3660046129e4565b60009081526004602052604090206001015465ffffffffffff1690565b34801561077557600080fd5b50600b546102b4565b34801561078a57600080fd5b5061037d61079936600461324c565b63bc197c8160e01b95945050505050565b3480156107b657600080fd5b506102b46107c53660046129e4565b611347565b6102676107d83660046132db565b61138a565b3480156107e957600080fd5b506102b46107f8366004612d1b565b61140a565b34801561080957600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e908201526102f7565b34801561084f57600080fd5b506102b47ff2aad550cf55f045cb27e9c559f9889fdfb6e6cdaa032301d6ea397784ae51d781565b34801561088357600080fd5b506102b461089236600461331c565b611444565b3480156108a357600080fd5b5061037d6108b2366004613346565b63f23a6e6160e01b95945050505050565b3480156108cf57600080fd5b506102b46108de3660046129e4565b61146c565b3480156108ef57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061033a565b60006001600160e01b031982166332a2ad4360e11b148061094757506001600160e01b03198216630271189760e51b145b8061096257506301ffc9a760e01b6001600160e01b03198316145b92915050565b610970611477565b610979816114ae565b50565b60606003805461098b906133aa565b80601f01602080910402602001604051908101604052809291908181526020018280546109b7906133aa565b8015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b600080610a1d8686868661140a565b9050610a3281610a2d6004611544565b611567565b506000604051634844252360e11b815260040160405180910390fd5b600080610a5d8686868661140a565b9050610a7d81610a6d6005611544565b610a776004611544565b17611567565b506000818152600460205260409020805460ff60f01b1916600160f01b17905530610aa53090565b6001600160a01b031614610b2f5760005b8651811015610b2d57306001600160a01b0316878281518110610adb57610adb6133e4565b60200260200101516001600160a01b031603610b2557610b25858281518110610b0657610b066133e4565b60200260200101518051906020012060056115a690919063ffffffff16565b600101610ab6565b505b610b3c8187878787611617565b6040518181527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f906020015b60405180910390a195945050505050565b600090815260046020526040902054600160a01b900465ffffffffffff1690565b6000818152600460205260408120805460ff600160f01b8204811691600160f81b9004168115610bcf57506007949350505050565b8015610be057506002949350505050565b6000610beb86610b79565b905080600003610c1657604051636ad0607560e01b8152600481018790526024015b60405180910390fd5b6000610c20611293565b65ffffffffffff169050808210610c3e575060009695505050505050565b6000610c4988611347565b9050818110610c6057506001979650505050505050565b610c69886116f1565b1580610c8957506000888152600760205260409020805460019091015411155b15610c9c57506003979650505050505050565b60008881526004602052604090206001015465ffffffffffff16600003610ccb57506004979650505050505050565b506005979650505050505050565b600080610ce88686868661140a565b9050610cf881610a2d6000611544565b506000818152600460205260409020546001600160a01b03163314610d325760405163233d98e360e01b8152336004820152602401610c0d565b610d3e86868686611728565b9695505050505050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634bf5d7e96040518163ffffffff1660e01b8152600401600060405180830381865afa925050508015610dc957506040513d6000823e601f3d908101601f19168201604052610dc691908101906133fa565b60015b610e05575060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b919050565b600080339050610e2b848285604051806020016040528060008152506117d9565b949350505050565b600080610f1687610f107f3e83946653575f9a39005e1545185629e92736b7528ab20ca3816f315424a8118c8c8c610e888e6001600160a01b0316600090815260026020526040902080546001810190915590565b8d8d604051610e98929190613467565b60405180910390208c80519060200120604051602001610ef59796959493929190968752602087019590955260ff9390931660408601526001600160a01b03919091166060850152608084015260a083015260c082015260e00190565b60405160208183030381529060405280519060200120611805565b85611832565b905080610f41576040516394ab6c0760e01b81526001600160a01b0388166004820152602401610c0d565b610f8589888a89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508b925061188a915050565b9998505050505050505050565b600080339050610fdc87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061188a915050565b979650505050505050565b600880546000918290610ffb60018461348d565b8154811061100b5761100b6133e4565b6000918252602090912001805490915065ffffffffffff811690600160301b90046001600160d01b031685821161104e576001600160d01b031695945050505050565b61106261105a87611967565b60089061199e565b6001600160d01b03169695505050505050565b600080339050610d3e86828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117d992505050565b6000336110ca8184611a53565b6110f25760405163d9b3955760e01b81526001600160a01b0382166004820152602401610c0d565b6000611119826001611102611293565b61110c91906134a0565b65ffffffffffff16611444565b90506000611126600b5490565b90508082101561116257604051636121770b60e11b81526001600160a01b03841660048201526024810183905260448101829052606401610c0d565b61116f8888888887611b3e565b98975050505050505050565b60006060806000806000606061118f611d51565b611197611d7e565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60008061124d84610f107ff2aad550cf55f045cb27e9c559f9889fdfb6e6cdaa032301d6ea397784ae51d78989896112168b6001600160a01b0316600090815260026020526040902080546001810190915590565b60408051602081019690965285019390935260ff90911660608401526001600160a01b0316608083015260a082015260c001610ef5565b905080611278576040516394ab6c0760e01b81526001600160a01b0385166004820152602401610c0d565b610d3e868587604051806020016040528060008152506117d9565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391ddadf46040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561130f575060408051601f3d908101601f1916820190925261130c918101906134c6565b60015b610e055761131b611dab565b905090565b6000610e2b848484611db6565b60006113396008611e4c565b6001600160d01b0316905090565b60008181526004602052604081205461137c90600160d01b810463ffffffff1690600160a01b900465ffffffffffff166134ee565b65ffffffffffff1692915050565b611392611477565b600080856001600160a01b03168585856040516113b0929190613467565b60006040518083038185875af1925050503d80600081146113ed576040519150601f19603f3d011682016040523d82523d6000602084013e6113f2565b606091505b50915091506114018282611e85565b50505050505050565b60008484848460405160200161142394939291906135a1565b60408051601f19818403018152919052805160209091012095945050505050565b6000611465838361146060408051602081019091526000815290565b611db6565b9392505050565b600061096282611ea1565b303314611499576040516347096e4760e01b8152336004820152602401610c0d565b565b806114a66005611f4b565b0361149b5750565b6064808211156114db5760405163243e544560e01b81526004810183905260248101829052604401610c0d565b60006114e561132d565b90506115046114f2611293565b6114fb85611fc9565b60089190611ffd565b505060408051828152602081018590527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a1505050565b600081600781111561155857611558612daa565b600160ff919091161b92915050565b60008061157384610b9a565b905060008361158183611544565b1603611465578381846040516331b75e4d60e01b8152600401610c0d939291906135ec565b81546001600160801b03600160801b8204811691811660018301909116036115e157604051638acb5f2760e01b815260040160405180910390fd5b6001600160801b03808216600090815260018086016020526040909120939093558354919092018216600160801b029116179055565b60005b84518110156116e957600080868381518110611638576116386133e4565b60200260200101516001600160a01b031686848151811061165b5761165b6133e4565b6020026020010151868581518110611675576116756133e4565b602002602001015160405161168a919061360e565b60006040518083038185875af1925050503d80600081146116c7576040519150601f19603f3d011682016040523d82523d6000602084013e6116cc565b606091505b50915091506116db8282611e85565b50505080600101905061161a565b505050505050565b600081815260076020526040812060028101546001820154611713919061362a565b61171f6108de85610b79565b11159392505050565b6000806117378686868661140a565b9050611785816117476007611544565b6117516006611544565b61175b6002611544565b600161176860078261363d565b61177390600261373a565b61177d919061348d565b181818611567565b506000818152600460205260409081902080546001600160f81b0316600160f81b179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90610b689083815260200190565b60006117fc858585856117f760408051602081019091526000815290565b61188a565b95945050505050565b6000610962611812612018565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006118418585612143565b509092509050600081600381111561185b5761185b612daa565b1480156118795750856001600160a01b0316826001600160a01b0316145b80610d3e5750610d3e868686612190565b600061189a86610a2d6001611544565b5060006118b0866118aa89610b79565b85611db6565b90506118bf878787848761226b565b825160000361191457856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4888784886040516119079493929190613749565b60405180910390a2610d3e565b856001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128887848888604051611955959493929190613771565b60405180910390a29695505050505050565b600065ffffffffffff82111561199a576040516306dfcc6560e41b81526030600482015260248101839052604401610c0d565b5090565b8154600090818160058111156119fd5760006119b984612364565b6119c3908561348d565b60008881526020902090915081015465ffffffffffff90811690871610156119ed578091506119fb565b6119f881600161362a565b92505b505b6000611a0b8787858561244c565b90508015611a4657611a3087611a2260018461348d565b600091825260209091200190565b54600160301b90046001600160d01b0316610fdc565b6000979650505050505050565b80516000906034811015611a6b576001915050610962565b82810160131901516001600160a01b031981166b046e0e4dee0dee6cae47a60f60a31b14611a9e57600192505050610962565b600080611aac60288561348d565b90505b83811015611b1d57600080611ae3888481518110611acf57611acf6133e4565b01602001516001600160f81b0319166124ae565b9150915081611afb5760019650505050505050610962565b8060ff166004856001600160a01b0316901b1793505050806001019050611aaf565b50856001600160a01b0316816001600160a01b031614935050505092915050565b6000611b53868686868051906020012061140a565b905084518651141580611b6857508351865114155b80611b7257508551155b15611ba757855184518651604051630447b05d60e41b8152600481019390935260248301919091526044820152606401610c0d565b600081815260046020526040902054600160a01b900465ffffffffffff1615611bf25780611bd482610b9a565b6040516331b75e4d60e01b8152610c0d9291906000906004016135ec565b6000611bfd60095490565b611c05611293565b65ffffffffffff16611c17919061362a565b90506000611c24600a5490565b600084815260046020526040902080546001600160a01b0319166001600160a01b038716178155909150611c5783611967565b815465ffffffffffff91909116600160a01b0265ffffffffffff60a01b19909116178155611c8482612540565b815463ffffffff91909116600160d01b0263ffffffff60d01b1990911617815588517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e090859087908c908c906001600160401b03811115611ce757611ce7612a77565b604051908082528060200260200182016040528015611d1a57816020015b6060815260200190600190039081611d055790505b508c89611d278a8261362a565b8e604051611d3d999897969594939291906137ab565b60405180910390a150505095945050505050565b606061131b7f00000000000000000000000000000000000000000000000000000000000000006000612571565b606061131b7f00000000000000000000000000000000000000000000000000000000000000006001612571565b600061131b43611967565b60007f0000000000000000000000000000000000000000000000000000000000000000604051630748d63560e31b81526001600160a01b038681166004830152602482018690529190911690633a46b1a890604401602060405180830381865afa158015611e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2b9190613882565b80546000908015611e7c57611e6683611a2260018461348d565b54600160301b90046001600160d01b0316611465565b60009392505050565b606082611e9a57611e958261261c565b610962565b5080610962565b60006064611eae83610fe7565b604051632394e7a360e21b8152600481018590526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e539e8c90602401602060405180830381865afa158015611f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f379190613882565b611f41919061389b565b61096291906138c8565b80546000906001600160801b0380821691600160801b9004168103611f83576040516375e52f4f60e01b815260040160405180910390fd5b6001600160801b038181166000908152600185810160205260408220805492905585546fffffffffffffffffffffffffffffffff19169301909116919091179092555090565b60006001600160d01b0382111561199a576040516306dfcc6560e41b815260d0600482015260248101839052604401610c0d565b60008061200b858585612645565b915091505b935093915050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561207157507f000000000000000000000000000000000000000000000000000000000000000046145b1561209b57507f000000000000000000000000000000000000000000000000000000000000000090565b61131b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000806000835160410361217d5760208401516040850151606086015160001a61216f888285856127bf565b955095509550505050612189565b50508151600091506002905b9250925092565b6000806000856001600160a01b031685856040516024016121b29291906138ea565b60408051601f198184030181529181526020820180516001600160e01b0316630b135d3f60e11b179052516121e7919061360e565b600060405180830381855afa9150503d8060008114612222576040519150601f19603f3d011682016040523d82523d6000602084013e612227565b606091505b509150915081801561223b57506020815110155b8015610d3e57508051630b135d3f60e11b906122609083016020908101908401613882565b149695505050505050565b60008581526007602090815260408083206001600160a01b0388168452600381019092529091205460ff16156122bf576040516371c6af4960e01b81526001600160a01b0386166004820152602401610c0d565b6001600160a01b03851660009081526003820160205260409020805460ff1916600117905560ff841661230b5782816000016000828254612300919061362a565b909155506116e99050565b60001960ff85160161232b5782816001016000828254612300919061362a565b60011960ff85160161234b5782816002016000828254612300919061362a565b6040516303599be160e11b815260040160405180910390fd5b60008160000361237657506000919050565b600060016123838461288e565b901c6001901b9050600181848161239c5761239c6138b2565b048201901c905060018184816123b4576123b46138b2565b048201901c905060018184816123cc576123cc6138b2565b048201901c905060018184816123e4576123e46138b2565b048201901c905060018184816123fc576123fc6138b2565b048201901c90506001818481612414576124146138b2565b048201901c9050600181848161242c5761242c6138b2565b048201901c905061146581828581612446576124466138b2565b04612922565b60005b818310156124a65760006124638484612938565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff161115612492578092506124a0565b61249d81600161362a565b93505b5061244f565b509392505050565b60008060f883901c602f811180156124c95750603a8160ff16105b156124de57600194602f199091019350915050565b8060ff1660401080156124f4575060478160ff16105b15612509576001946036199091019350915050565b8060ff16606010801561251f575060678160ff16105b15612534576001946056199091019350915050565b50600093849350915050565b600063ffffffff82111561199a576040516306dfcc6560e41b81526020600482015260248101839052604401610c0d565b606060ff831461258b5761258483612953565b9050610962565b818054612597906133aa565b80601f01602080910402602001604051908101604052809291908181526020018280546125c3906133aa565b80156126105780601f106125e557610100808354040283529160200191612610565b820191906000526020600020905b8154815290600101906020018083116125f357829003601f168201915b50505050509050610962565b80511561262c5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b82546000908190801561276457600061266387611a2260018561348d565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b0316602084015291925090871610156126b757604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff80881691160361270357846126da88611a2260018661348d565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055612754565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b6020015192508391506120109050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081612010565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156127fa5750600091506003905082612884565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561284e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661287a57506000925060019150829050612884565b9250600091508190505b9450945094915050565b600080608083901c156128a357608092831c92015b604083901c156128b557604092831c92015b602083901c156128c757602092831c92015b601083901c156128d957601092831c92015b600883901c156128eb57600892831c92015b600483901c156128fd57600492831c92015b600283901c1561290f57600292831c92015b600183901c156109625760010192915050565b60008183106129315781611465565b5090919050565b600061294760028484186138c8565b6114659084841661362a565b6060600061296083612992565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561096257604051632cd44ac360e21b815260040160405180910390fd5b6000602082840312156129cc57600080fd5b81356001600160e01b03198116811461146557600080fd5b6000602082840312156129f657600080fd5b5035919050565b60005b83811015612a18578181015183820152602001612a00565b50506000910152565b60008151808452612a398160208601602086016129fd565b601f01601f19169290920160200192915050565b6020815260006114656020830184612a21565b80356001600160a01b0381168114610e0557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612ab557612ab5612a77565b604052919050565b60006001600160401b03821115612ad657612ad6612a77565b50601f01601f191660200190565b6000612af7612af284612abd565b612a8d565b9050828152838383011115612b0b57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612b3357600080fd5b61146583833560208501612ae4565b60008060008060808587031215612b5857600080fd5b612b6185612a60565b9350612b6f60208601612a60565b92506040850135915060608501356001600160401b03811115612b9157600080fd5b612b9d87828801612b22565b91505092959194509250565b60006001600160401b03821115612bc257612bc2612a77565b5060051b60200190565b600082601f830112612bdd57600080fd5b81356020612bed612af283612ba9565b8083825260208201915060208460051b870101935086841115612c0f57600080fd5b602086015b84811015612c3257612c2581612a60565b8352918301918301612c14565b509695505050505050565b600082601f830112612c4e57600080fd5b81356020612c5e612af283612ba9565b8083825260208201915060208460051b870101935086841115612c8057600080fd5b602086015b84811015612c325780358352918301918301612c85565b600082601f830112612cad57600080fd5b81356020612cbd612af283612ba9565b82815260059290921b84018101918181019086841115612cdc57600080fd5b8286015b84811015612c325780356001600160401b03811115612cff5760008081fd5b612d0d8986838b0101612b22565b845250918301918301612ce0565b60008060008060808587031215612d3157600080fd5b84356001600160401b0380821115612d4857600080fd5b612d5488838901612bcc565b95506020870135915080821115612d6a57600080fd5b612d7688838901612c3d565b94506040870135915080821115612d8c57600080fd5b50612d9987828801612c9c565b949793965093946060013593505050565b634e487b7160e01b600052602160045260246000fd5b60088110612dde57634e487b7160e01b600052602160045260246000fd5b9052565b602081016109628284612dc0565b60008060408385031215612e0357600080fd5b82359150612e1360208401612a60565b90509250929050565b803560ff81168114610e0557600080fd5b60008060408385031215612e4057600080fd5b82359150612e1360208401612e1c565b60008083601f840112612e6257600080fd5b5081356001600160401b03811115612e7957600080fd5b602083019150836020828501011115612e9157600080fd5b9250929050565b600080600080600080600060c0888a031215612eb357600080fd5b87359650612ec360208901612e1c565b9550612ed160408901612a60565b945060608801356001600160401b0380821115612eed57600080fd5b612ef98b838c01612e50565b909650945060808a0135915080821115612f1257600080fd5b612f1e8b838c01612b22565b935060a08a0135915080821115612f3457600080fd5b50612f418a828b01612b22565b91505092959891949750929550565b600080600080600060808688031215612f6857600080fd5b85359450612f7860208701612e1c565b935060408601356001600160401b0380821115612f9457600080fd5b612fa089838a01612e50565b90955093506060880135915080821115612fb957600080fd5b50612fc688828901612b22565b9150509295509295909350565b60008060008060608587031215612fe957600080fd5b84359350612ff960208601612e1c565b925060408501356001600160401b0381111561301457600080fd5b61302087828801612e50565b95989497509550505050565b6000806000806080858703121561304257600080fd5b84356001600160401b038082111561305957600080fd5b61306588838901612bcc565b9550602087013591508082111561307b57600080fd5b61308788838901612c3d565b9450604087013591508082111561309d57600080fd5b6130a988838901612c9c565b935060608701359150808211156130bf57600080fd5b508501601f810187136130d157600080fd5b612b9d87823560208401612ae4565b6000602082840312156130f257600080fd5b61146582612a60565b60008151808452602080850194506020840160005b8381101561312c57815187529582019590820190600101613110565b509495945050505050565b60ff60f81b8816815260e06020820152600061315660e0830189612a21565b82810360408401526131688189612a21565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061319981856130fb565b9a9950505050505050505050565b600080600080608085870312156131bd57600080fd5b843593506131cd60208601612e1c565b92506131db60408601612a60565b915060608501356001600160401b03811115612b9157600080fd5b60008060006060848603121561320b57600080fd5b61321484612a60565b92506020840135915060408401356001600160401b0381111561323657600080fd5b61324286828701612b22565b9150509250925092565b600080600080600060a0868803121561326457600080fd5b61326d86612a60565b945061327b60208701612a60565b935060408601356001600160401b038082111561329757600080fd5b6132a389838a01612c3d565b945060608801359150808211156132b957600080fd5b6132c589838a01612c3d565b93506080880135915080821115612fb957600080fd5b600080600080606085870312156132f157600080fd5b6132fa85612a60565b93506020850135925060408501356001600160401b0381111561301457600080fd5b6000806040838503121561332f57600080fd5b61333883612a60565b946020939093013593505050565b600080600080600060a0868803121561335e57600080fd5b61336786612a60565b945061337560208701612a60565b9350604086013592506060860135915060808601356001600160401b0381111561339e57600080fd5b612fc688828901612b22565b600181811c908216806133be57607f821691505b6020821081036133de57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561340c57600080fd5b81516001600160401b0381111561342257600080fd5b8201601f8101841361343357600080fd5b8051613441612af282612abd565b81815285602083850101111561345657600080fd5b6117fc8260208301602086016129fd565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561096257610962613477565b65ffffffffffff8281168282160390808211156134bf576134bf613477565b5092915050565b6000602082840312156134d857600080fd5b815165ffffffffffff8116811461146557600080fd5b65ffffffffffff8181168382160190808211156134bf576134bf613477565b60008151808452602080850194506020840160005b8381101561312c5781516001600160a01b031687529582019590820190600101613522565b60008282518085526020808601955060208260051b8401016020860160005b8481101561359457601f19868403018952613582838351612a21565b98840198925090830190600101613566565b5090979650505050505050565b6080815260006135b4608083018761350d565b82810360208401526135c681876130fb565b905082810360408401526135da8186613547565b91505082606083015295945050505050565b838152606081016136006020830185612dc0565b826040830152949350505050565b600082516136208184602087016129fd565b9190910192915050565b8082018082111561096257610962613477565b60ff818116838216019081111561096257610962613477565b600181815b8085111561369157816000190482111561367757613677613477565b8085161561368457918102915b93841c939080029061365b565b509250929050565b6000826136a857506001610962565b816136b557506000610962565b81600181146136cb57600281146136d5576136f1565b6001915050610962565b60ff8411156136e6576136e6613477565b50506001821b610962565b5060208310610133831016604e8410600b8410161715613714575081810a610962565b61371e8383613656565b806000190482111561373257613732613477565b029392505050565b600061146560ff841683613699565b84815260ff84166020820152826040820152608060608201526000610d3e6080830184612a21565b85815260ff8516602082015283604082015260a06060820152600061379960a0830185612a21565b828103608084015261116f8185612a21565b60006101208b8352602060018060a01b038c16818501528160408501526137d48285018c61350d565b915083820360608501526137e8828b6130fb565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561383957601f19878403018552613827838351612a21565b9486019492509085019060010161380b565b505086810360a088015261384d818c613547565b9450505050508560c08401528460e08401528281036101008401526138728185612a21565b9c9b505050505050505050505050565b60006020828403121561389457600080fd5b5051919050565b808202811582820484141761096257610962613477565b634e487b7160e01b600052601260045260246000fd5b6000826138e557634e487b7160e01b600052601260045260246000fd5b500490565b828152604060208201526000610e2b6040830184612a2156fea26469706673582212207b91156eb63c2f754499e70348fff8243421064b21c2a451c569fb40e301a7d664736f6c63430008180033`;

export const registrySourceCode = `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/governance/IGovernor.sol";

contract AWBRegistry is ERC721, ERC721URIStorage {
    // agent is a service that can be requested to perform a task
    struct Agent {
        uint256 id;
        address daoGovernor;
        address daoToken;
        string tokenURI;
        uint256 runPrice;
        uint256[] requestIds;
        bool active;
    }

    // request to an agent.  Picked up by fulfillers off-chain and fulfilled on-chain and off-chain
    struct Request {
        uint256 id;
        uint256 agentId;
        address origin;
        string request;
        bool fulfilled;
        string result;
        string resultURI;
        uint256 price;
        address fulfiller;
    }

    struct User {
        address userAddress;
        uint256[] requestIds;
        // TODO: address[] whitelistedFulfillers;
    }

    // fulfillers are addresses permissioned to fulfill requests (allowing for off-chain requests)
    struct Fulfiller {
        string name;
        string description;
        address fulfillerAddress;
        uint256[] requestIds;
    }

    uint256 private _nextTokenId;
    uint256 private _nextRequestId;

    mapping(uint256 => Agent) public agentIdToAgent;
    mapping(address => Agent) public daoGovernorToAgent;
    mapping(uint256 => Request) public requestIdToRequest;
    mapping(address => User) public addressToUser;
    mapping(address => Fulfiller) public fulfillerAddressToFulfiller;

    mapping(address => uint256) public balances;

    Agent[] public agents;
    Request[] public requests;
    User[] public users;
    Fulfiller[] public fulfillers;

    constructor(
        string memory _name,
        string memory _symbol
    ) ERC721(_name, _symbol) {}

    // register an agent with the registry. Mints a new NFT and stores the agent data
    function registerAgent(
        address _daoToken,
        string memory _tokenURI,
        uint256 _runPrice
    ) public {
        // require the sender to not have an active agent
        require(
            daoGovernorToAgent[msg.sender].active == false,
            "You have an active agent"
        );

        uint256 tokenId = _nextTokenId++;

        _safeMint(msg.sender, tokenId);
        _setTokenURI(tokenId, _tokenURI);

        Agent memory agent = Agent({
            id: tokenId,
            daoGovernor: msg.sender,
            daoToken: _daoToken,
            tokenURI: _tokenURI,
            runPrice: _runPrice,
            requestIds: new uint256[](0),
            active: true
        });

        agentIdToAgent[tokenId] = agent;
        daoGovernorToAgent[msg.sender] = agent;
        agents.push(agent);
    }

    // register as a user with the registry
    function registerUser() public payable {
        require(
            addressToUser[msg.sender].userAddress == address(0),
            "User already exists"
        );

        User memory user = User({
            userAddress: msg.sender,
            requestIds: new uint256[](0)
        });

        addressToUser[msg.sender] = user;
        users.push(user);
    }

    // register as a fulfiller with the registry
    function registerFulfiller(
        string memory _name,
        string memory _description
    ) public {
        require(
            fulfillerAddressToFulfiller[msg.sender].fulfillerAddress ==
                address(0),
            "Fulfiller already exists"
        );

        Fulfiller memory fulfiller = Fulfiller({
            name: _name,
            description: _description,
            fulfillerAddress: msg.sender,
            requestIds: new uint256[](0)
        });

        fulfillerAddressToFulfiller[msg.sender] = fulfiller;
        fulfillers.push(fulfiller);
    }

    // make a request to an agent
    function submitRequest(
        uint256 _agentId,
        string memory _request,
        address _origin
    ) public {
        // only fulfillers can submit requests on behalf of others
        if (
            fulfillerAddressToFulfiller[msg.sender].fulfillerAddress ==
            address(0)
        ) {
            _origin = msg.sender;
        }

        Agent memory agent = agentIdToAgent[_agentId];
        require(agent.active == true, "Agent is not active");

        uint256 runPrice = agent.runPrice;

        require(balances[_origin] >= runPrice, "Insufficient balance");

        uint256 requestId = _nextRequestId++;

        Request memory request = Request({
            id: requestId,
            agentId: _agentId,
            origin: _origin,
            request: _request,
            fulfilled: false,
            result: "",
            resultURI: "",
            price: runPrice,
            fulfiller: address(0)
        });

        requestIdToRequest[requestId] = request;
        requests.push(request);

        agentIdToAgent[_agentId].requestIds.push(requestId);
        addressToUser[_origin].requestIds.push(requestId);
    }

    function fulfillRequest(
        uint256 _requestId,
        string memory _result,
        string memory _resultURI
    ) public {
        Request storage request = requestIdToRequest[_requestId];

        // Check if the request exists and is not yet fulfilled
        require(request.id == _requestId, "Request does not exist");
        require(!request.fulfilled, "Request already fulfilled");

        // Check if the caller is a registered fulfiller
        require(
            fulfillerAddressToFulfiller[msg.sender].fulfillerAddress ==
                msg.sender,
            "Caller is not a fulfiller"
        );

        // Calculate request price and apply holder discount if applicable
        uint256 requestPrice = agentIdToAgent[request.agentId].runPrice;
        bool holderDiscountEnabled = IERC20(
            agentIdToAgent[request.agentId].daoToken
        ).balanceOf(request.origin) > 0;
        if (holderDiscountEnabled) {
            // 50% discount for token holders
            requestPrice = requestPrice / 2;
        }

        // Check if the requester has sufficient balance
        require(
            balances[request.origin] >= requestPrice,
            "Insufficient balance"
        );

        // Deduct the price from the requester's balance
        balances[request.origin] -= requestPrice;

        // Fulfill the request
        request.fulfilled = true;
        request.result = _result;
        request.resultURI = _resultURI;
        request.fulfiller = msg.sender;

        // Update mappings
        requestIdToRequest[_requestId] = request;
        requests[request.id] = request;
        fulfillerAddressToFulfiller[msg.sender].requestIds.push(request.id);

        if (holderDiscountEnabled) {
            // Send the whole price to the fulfiller
            balances[msg.sender] += requestPrice;
        } else {
            // send 50/50
            balances[msg.sender] += requestPrice / 2;
            balances[agentIdToAgent[request.agentId].daoGovernor] +=
                requestPrice /
                2;
        }
    }

    // create and fulfill a request in one transaction (for fullfullers to fulfill off-chain requests)
    function createAndFulfillRequest(
        uint256 _agentId,
        address _origin,
        string memory _request,
        string memory _result,
        string memory _resultURI
    ) public {
        submitRequest(_agentId, _request, _origin);
        fulfillRequest(_nextRequestId - 1, _result, _resultURI);
    }

    // deposit ETH into the registry
    function deposit() public payable {
        balances[msg.sender] += msg.value;
    }

    // withdraw ETH from the registry
    function withdraw(uint256 _amount) public {
        require(balances[msg.sender] >= _amount, "Insufficient balance");
        balances[msg.sender] -= _amount;
        payable(msg.sender).transfer(_amount);
    }

    // getters
    function getAllAgents() public view returns (Agent[] memory) {
        return agents;
    }

    function getAllRequests() public view returns (Request[] memory) {
        return requests;
    }

    function getAllUsers() public view returns (User[] memory) {
        return users;
    }

    function getAllFulfillers() public view returns (Fulfiller[] memory) {
        return fulfillers;
    }

    function getAgentById(uint256 _id) public view returns (Agent memory) {
        return agentIdToAgent[_id];
    }

    function getRequestById(uint256 _id) public view returns (Request memory) {
        return requestIdToRequest[_id];
    }

    function getUserByAddress(
        address _address
    ) public view returns (User memory) {
        return addressToUser[_address];
    }

    function getFulfillerByAddress(
        address _address
    ) public view returns (Fulfiller memory) {
        return fulfillerAddressToFulfiller[_address];
    }

    ///////////////////////////////////
    // ERC721 with managed tokenURIs //
    //////////////////////////////////
    function safeMint(address to, string memory uri) internal {
        uint256 tokenId = _nextTokenId++;
        _safeMint(to, tokenId);
        _setTokenURI(tokenId, uri);
    }

    function updateTokenURI(uint256 tokenId, string memory uri) public {
        require(
            ownerOf(tokenId) == msg.sender,
            "Caller is not the token owner"
        );
        _setTokenURI(tokenId, uri);
        agentIdToAgent[tokenId].tokenURI = uri;
    }

    // The following functions are overrides required by Solidity.

    function tokenURI(
        uint256 tokenId
    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {
        return super.tokenURI(tokenId);
    }

    function supportsInterface(
        bytes4 interfaceId
    ) public view override(ERC721, ERC721URIStorage) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
}
`;

'''
'''--- frontend/lib/generated-react.ts ---
import {
  createUseReadContract,
  createUseWriteContract,
  createUseSimulateContract,
  createUseWatchContractEvent,
} from "wagmi/codegen";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AWBRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "addressToUser",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agentIdToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agents",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "balances",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_origin", internalType: "address", type: "address" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "createAndFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "daoGovernorToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "_requestId", internalType: "uint256", type: "uint256" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "fulfillerAddressToFulfiller",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "fulfillers",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getAgentById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllAgents",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllFulfillers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller[]",
        type: "tuple[]",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllRequests",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllUsers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User[]",
        type: "tuple[]",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getFulfillerByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller",
        type: "tuple",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getRequestById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getUserByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User",
        type: "tuple",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "operator", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_daoToken", internalType: "address", type: "address" },
      { name: "_tokenURI", internalType: "string", type: "string" },
      { name: "_runPrice", internalType: "uint256", type: "uint256" },
    ],
    name: "registerAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_description", internalType: "string", type: "string" },
    ],
    name: "registerFulfiller",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requestIdToRequest",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requests",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_origin", internalType: "address", type: "address" },
    ],
    name: "submitRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "uri", internalType: "string", type: "string" },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "users",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_amount", internalType: "uint256", type: "uint256" }],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "approved",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_fromTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "_toTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BatchMetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Transfer",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
  },
  {
    type: "error",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC721InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "ERC721InvalidOperator",
  },
  {
    type: "error",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "ERC721InvalidOwner",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC721InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC721InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ERC721NonexistentToken",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryAddress = {
  84532: "0x8aB1d92130774f55CE93222f62F2e213366e24a7",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryConfig = {
  address: awbRegistryAddress,
  abi: awbRegistryAbi,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DAOGovernor
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_token", internalType: "contract IVotes", type: "address" },
      { name: "_votingDelay", internalType: "uint256", type: "uint256" },
      { name: "_votingPeriod", internalType: "uint256", type: "uint256" },
      { name: "_proposalThreshold", internalType: "uint256", type: "uint256" },
      { name: "_quorumVotes", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "cancel",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
    ],
    name: "castVote",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "voter", internalType: "address", type: "address" },
      { name: "signature", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteBySig",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "reason", internalType: "string", type: "string" },
    ],
    name: "castVoteWithReason",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "reason", internalType: "string", type: "string" },
      { name: "params", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "voter", internalType: "address", type: "address" },
      { name: "reason", internalType: "string", type: "string" },
      { name: "params", internalType: "bytes", type: "bytes" },
      { name: "signature", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "clock",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { name: "fields", internalType: "bytes1", type: "bytes1" },
      { name: "name", internalType: "string", type: "string" },
      { name: "version", internalType: "string", type: "string" },
      { name: "chainId", internalType: "uint256", type: "uint256" },
      { name: "verifyingContract", internalType: "address", type: "address" },
      { name: "salt", internalType: "bytes32", type: "bytes32" },
      { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "execute",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
    ],
    name: "getVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
      { name: "params", internalType: "bytes", type: "bytes" },
    ],
    name: "getVotesWithParams",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "hasVoted",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "hashProposal",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "nonces",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC1155BatchReceived",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC1155Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC721Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalDeadline",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalEta",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "proposalNeedsQueuing",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalProposer",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalSnapshot",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "proposalThreshold",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalVotes",
    outputs: [
      { name: "againstVotes", internalType: "uint256", type: "uint256" },
      { name: "forVotes", internalType: "uint256", type: "uint256" },
      { name: "abstainVotes", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "description", internalType: "string", type: "string" },
    ],
    name: "propose",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "queue",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "blockNumber", internalType: "uint256", type: "uint256" }],
    name: "quorum",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "quorumDenominator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "timepoint", internalType: "uint256", type: "uint256" }],
    name: "quorumNumerator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "quorumNumerator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "target", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "state",
    outputs: [{ name: "", internalType: "enum IGovernor.ProposalState", type: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "token",
    outputs: [{ name: "", internalType: "contract IERC5805", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "newQuorumNumerator", internalType: "uint256", type: "uint256" }],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "version",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "votingDelay",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "votingPeriod",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  { type: "event", anonymous: false, inputs: [], name: "EIP712DomainChanged" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalCanceled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "proposer",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "targets",
        internalType: "address[]",
        type: "address[]",
        indexed: false,
      },
      {
        name: "values",
        internalType: "uint256[]",
        type: "uint256[]",
        indexed: false,
      },
      {
        name: "signatures",
        internalType: "string[]",
        type: "string[]",
        indexed: false,
      },
      {
        name: "calldatas",
        internalType: "bytes[]",
        type: "bytes[]",
        indexed: false,
      },
      {
        name: "voteStart",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "voteEnd",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "description",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "ProposalCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalExecuted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "etaSeconds",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalQueued",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "oldQuorumNumerator",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newQuorumNumerator",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "QuorumNumeratorUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "voter",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "support", internalType: "uint8", type: "uint8", indexed: false },
      {
        name: "weight",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "reason",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "VoteCast",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "voter",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "support", internalType: "uint8", type: "uint8", indexed: false },
      {
        name: "weight",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "reason",
        internalType: "string",
        type: "string",
        indexed: false,
      },
      { name: "params", internalType: "bytes", type: "bytes", indexed: false },
    ],
    name: "VoteCastWithParams",
  },
  { type: "error", inputs: [], name: "CheckpointUnorderedInsertion" },
  { type: "error", inputs: [], name: "FailedInnerCall" },
  {
    type: "error",
    inputs: [{ name: "voter", internalType: "address", type: "address" }],
    name: "GovernorAlreadyCastVote",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorAlreadyQueuedProposal",
  },
  { type: "error", inputs: [], name: "GovernorDisabledDeposit" },
  {
    type: "error",
    inputs: [
      { name: "proposer", internalType: "address", type: "address" },
      { name: "votes", internalType: "uint256", type: "uint256" },
      { name: "threshold", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInsufficientProposerVotes",
  },
  {
    type: "error",
    inputs: [
      { name: "targets", internalType: "uint256", type: "uint256" },
      { name: "calldatas", internalType: "uint256", type: "uint256" },
      { name: "values", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInvalidProposalLength",
  },
  {
    type: "error",
    inputs: [
      { name: "quorumNumerator", internalType: "uint256", type: "uint256" },
      { name: "quorumDenominator", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInvalidQuorumFraction",
  },
  {
    type: "error",
    inputs: [{ name: "voter", internalType: "address", type: "address" }],
    name: "GovernorInvalidSignature",
  },
  { type: "error", inputs: [], name: "GovernorInvalidVoteType" },
  {
    type: "error",
    inputs: [{ name: "votingPeriod", internalType: "uint256", type: "uint256" }],
    name: "GovernorInvalidVotingPeriod",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorNonexistentProposal",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorNotQueuedProposal",
  },
  {
    type: "error",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "GovernorOnlyExecutor",
  },
  {
    type: "error",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "GovernorOnlyProposer",
  },
  { type: "error", inputs: [], name: "GovernorQueueNotImplemented" },
  {
    type: "error",
    inputs: [{ name: "proposer", internalType: "address", type: "address" }],
    name: "GovernorRestrictedProposer",
  },
  {
    type: "error",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      {
        name: "current",
        internalType: "enum IGovernor.ProposalState",
        type: "uint8",
      },
      { name: "expectedStates", internalType: "bytes32", type: "bytes32" },
    ],
    name: "GovernorUnexpectedProposalState",
  },
  {
    type: "error",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "currentNonce", internalType: "uint256", type: "uint256" },
    ],
    name: "InvalidAccountNonce",
  },
  { type: "error", inputs: [], name: "InvalidShortString" },
  { type: "error", inputs: [], name: "QueueEmpty" },
  { type: "error", inputs: [], name: "QueueFull" },
  {
    type: "error",
    inputs: [
      { name: "bits", internalType: "uint8", type: "uint8" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "SafeCastOverflowedUintDowncast",
  },
  {
    type: "error",
    inputs: [{ name: "str", internalType: "string", type: "string" }],
    name: "StringTooLong",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorAddress = {
  84532: "0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorConfig = {
  address: daoGovernorAddress,
  abi: daoGovernorAbi,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DAOToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
      { name: "_mintAddress", internalType: "address", type: "address" },
      { name: "_totalSupply", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "value", internalType: "uint256", type: "uint256" }],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "pos", internalType: "uint32", type: "uint32" },
    ],
    name: "checkpoints",
    outputs: [
      {
        name: "",
        internalType: "struct Checkpoints.Checkpoint208",
        type: "tuple",
        components: [
          { name: "_key", internalType: "uint48", type: "uint48" },
          { name: "_value", internalType: "uint208", type: "uint208" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "clock",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "delegatee", internalType: "address", type: "address" }],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "delegatee", internalType: "address", type: "address" },
      { name: "nonce", internalType: "uint256", type: "uint256" },
      { name: "expiry", internalType: "uint256", type: "uint256" },
      { name: "v", internalType: "uint8", type: "uint8" },
      { name: "r", internalType: "bytes32", type: "bytes32" },
      { name: "s", internalType: "bytes32", type: "bytes32" },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "delegates",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { name: "fields", internalType: "bytes1", type: "bytes1" },
      { name: "name", internalType: "string", type: "string" },
      { name: "version", internalType: "string", type: "string" },
      { name: "chainId", internalType: "uint256", type: "uint256" },
      { name: "verifyingContract", internalType: "address", type: "address" },
      { name: "salt", internalType: "bytes32", type: "bytes32" },
      { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "timepoint", internalType: "uint256", type: "uint256" }],
    name: "getPastTotalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
    ],
    name: "getPastVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "getVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "nonces",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "numCheckpoints",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "deadline", internalType: "uint256", type: "uint256" },
      { name: "v", internalType: "uint8", type: "uint8" },
      { name: "r", internalType: "bytes32", type: "bytes32" },
      { name: "s", internalType: "bytes32", type: "bytes32" },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "delegator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "fromDelegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "toDelegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "DelegateChanged",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "delegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "previousVotes",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newVotes",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "DelegateVotesChanged",
  },
  { type: "event", anonymous: false, inputs: [], name: "EIP712DomainChanged" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  { type: "error", inputs: [], name: "CheckpointUnorderedInsertion" },
  { type: "error", inputs: [], name: "ECDSAInvalidSignature" },
  {
    type: "error",
    inputs: [{ name: "length", internalType: "uint256", type: "uint256" }],
    name: "ECDSAInvalidSignatureLength",
  },
  {
    type: "error",
    inputs: [{ name: "s", internalType: "bytes32", type: "bytes32" }],
    name: "ECDSAInvalidSignatureS",
  },
  {
    type: "error",
    inputs: [
      { name: "increasedSupply", internalType: "uint256", type: "uint256" },
      { name: "cap", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20ExceededSafeSupply",
  },
  {
    type: "error",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "allowance", internalType: "uint256", type: "uint256" },
      { name: "needed", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20InsufficientAllowance",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "balance", internalType: "uint256", type: "uint256" },
      { name: "needed", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20InsufficientBalance",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC20InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC20InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC20InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "spender", internalType: "address", type: "address" }],
    name: "ERC20InvalidSpender",
  },
  {
    type: "error",
    inputs: [{ name: "deadline", internalType: "uint256", type: "uint256" }],
    name: "ERC2612ExpiredSignature",
  },
  {
    type: "error",
    inputs: [
      { name: "signer", internalType: "address", type: "address" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC2612InvalidSigner",
  },
  {
    type: "error",
    inputs: [
      { name: "timepoint", internalType: "uint256", type: "uint256" },
      { name: "clock", internalType: "uint48", type: "uint48" },
    ],
    name: "ERC5805FutureLookup",
  },
  { type: "error", inputs: [], name: "ERC6372InconsistentClock" },
  {
    type: "error",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "currentNonce", internalType: "uint256", type: "uint256" },
    ],
    name: "InvalidAccountNonce",
  },
  { type: "error", inputs: [], name: "InvalidShortString" },
  {
    type: "error",
    inputs: [
      { name: "bits", internalType: "uint8", type: "uint8" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "SafeCastOverflowedUintDowncast",
  },
  {
    type: "error",
    inputs: [{ name: "str", internalType: "string", type: "string" }],
    name: "StringTooLong",
  },
  {
    type: "error",
    inputs: [{ name: "expiry", internalType: "uint256", type: "uint256" }],
    name: "VotesExpiredSignature",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenAddress = {
  84532: "0x1E4b432b90903ea6048a30C39d634b48d81EA538",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenConfig = {
  address: daoTokenAddress,
  abi: daoTokenAbi,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistry = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"addressToUser"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryAddressToUser = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "addressToUser",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"agentIdToAgent"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryAgentIdToAgent = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "agentIdToAgent",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"agents"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryAgents = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "agents",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"balanceOf"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryBalanceOf = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "balanceOf",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"balances"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryBalances = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "balances",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"daoGovernorToAgent"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryDaoGovernorToAgent = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "daoGovernorToAgent",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"fulfillerAddressToFulfiller"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryFulfillerAddressToFulfiller = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "fulfillerAddressToFulfiller",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"fulfillers"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryFulfillers = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "fulfillers",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getAgentById"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetAgentById = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getAgentById",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getAllAgents"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetAllAgents = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getAllAgents",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getAllFulfillers"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetAllFulfillers = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getAllFulfillers",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getAllRequests"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetAllRequests = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getAllRequests",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getAllUsers"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetAllUsers = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getAllUsers",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getApproved"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetApproved = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getApproved",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getFulfillerByAddress"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetFulfillerByAddress = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getFulfillerByAddress",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getRequestById"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetRequestById = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getRequestById",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"getUserByAddress"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryGetUserByAddress = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "getUserByAddress",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"isApprovedForAll"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryIsApprovedForAll = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "isApprovedForAll",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"name"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryName = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "name",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"ownerOf"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryOwnerOf = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "ownerOf",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"requestIdToRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryRequestIdToRequest = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "requestIdToRequest",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"requests"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryRequests = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "requests",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"supportsInterface"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistrySupportsInterface = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "supportsInterface",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"symbol"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistrySymbol = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "symbol",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"tokenURI"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryTokenUri = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "tokenURI",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"users"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useReadAwbRegistryUsers = /*#__PURE__*/ createUseReadContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "users",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistry = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"approve"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryApprove = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "approve",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"createAndFulfillRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryCreateAndFulfillRequest = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "createAndFulfillRequest",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"deposit"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryDeposit = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "deposit",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"fulfillRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryFulfillRequest = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "fulfillRequest",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerAgent"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryRegisterAgent = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerAgent",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerFulfiller"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryRegisterFulfiller = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerFulfiller",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerUser"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryRegisterUser = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerUser",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"safeTransferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistrySafeTransferFrom = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "safeTransferFrom",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"setApprovalForAll"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistrySetApprovalForAll = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "setApprovalForAll",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"submitRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistrySubmitRequest = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "submitRequest",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"transferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryTransferFrom = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "transferFrom",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"updateTokenURI"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryUpdateTokenUri = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "updateTokenURI",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"withdraw"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWriteAwbRegistryWithdraw = /*#__PURE__*/ createUseWriteContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "withdraw",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistry = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"approve"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryApprove = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "approve",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"createAndFulfillRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryCreateAndFulfillRequest = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "createAndFulfillRequest",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"deposit"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryDeposit = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "deposit",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"fulfillRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryFulfillRequest = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "fulfillRequest",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerAgent"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryRegisterAgent = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerAgent",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerFulfiller"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryRegisterFulfiller = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerFulfiller",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"registerUser"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryRegisterUser = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "registerUser",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"safeTransferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistrySafeTransferFrom = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "safeTransferFrom",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"setApprovalForAll"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistrySetApprovalForAll = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "setApprovalForAll",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"submitRequest"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistrySubmitRequest = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "submitRequest",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"transferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryTransferFrom = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "transferFrom",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"updateTokenURI"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryUpdateTokenUri = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "updateTokenURI",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link awbRegistryAbi}__ and `functionName` set to `"withdraw"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useSimulateAwbRegistryWithdraw = /*#__PURE__*/ createUseSimulateContract({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  functionName: "withdraw",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__ and `eventName` set to `"Approval"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryApprovalEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  eventName: "Approval",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__ and `eventName` set to `"ApprovalForAll"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryApprovalForAllEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  eventName: "ApprovalForAll",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__ and `eventName` set to `"BatchMetadataUpdate"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryBatchMetadataUpdateEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  eventName: "BatchMetadataUpdate",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__ and `eventName` set to `"MetadataUpdate"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryMetadataUpdateEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  eventName: "MetadataUpdate",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link awbRegistryAbi}__ and `eventName` set to `"Transfer"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const useWatchAwbRegistryTransferEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: awbRegistryAbi,
  address: awbRegistryAddress,
  eventName: "Transfer",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernor = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"BALLOT_TYPEHASH"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorBallotTypehash = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "BALLOT_TYPEHASH",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"CLOCK_MODE"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorClockMode = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "CLOCK_MODE",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"COUNTING_MODE"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorCountingMode = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "COUNTING_MODE",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"EXTENDED_BALLOT_TYPEHASH"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorExtendedBallotTypehash = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "EXTENDED_BALLOT_TYPEHASH",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"clock"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorClock = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "clock",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"eip712Domain"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorEip712Domain = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "eip712Domain",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"getVotes"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorGetVotes = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "getVotes",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"getVotesWithParams"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorGetVotesWithParams = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "getVotesWithParams",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"hasVoted"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorHasVoted = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "hasVoted",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"hashProposal"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorHashProposal = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "hashProposal",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"name"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorName = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "name",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"nonces"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorNonces = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "nonces",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalDeadline"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalDeadline = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalDeadline",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalEta"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalEta = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalEta",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalNeedsQueuing"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalNeedsQueuing = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalNeedsQueuing",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalProposer"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalProposer = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalProposer",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalSnapshot"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalSnapshot = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalSnapshot",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalThreshold"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalThreshold = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalThreshold",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"proposalVotes"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorProposalVotes = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "proposalVotes",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"quorum"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorQuorum = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "quorum",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"quorumDenominator"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorQuorumDenominator = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "quorumDenominator",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"quorumNumerator"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorQuorumNumerator = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "quorumNumerator",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"state"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorState = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "state",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"supportsInterface"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorSupportsInterface = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "supportsInterface",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"token"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorToken = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "token",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"version"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorVersion = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "version",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"votingDelay"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorVotingDelay = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "votingDelay",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"votingPeriod"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useReadDaoGovernorVotingPeriod = /*#__PURE__*/ createUseReadContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "votingPeriod",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernor = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"cancel"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCancel = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "cancel",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVote"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCastVote = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVote",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCastVoteBySig = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteBySig",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReason"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCastVoteWithReason = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReason",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReasonAndParams"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCastVoteWithReasonAndParams = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReasonAndParams",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReasonAndParamsBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorCastVoteWithReasonAndParamsBySig = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReasonAndParamsBySig",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"execute"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorExecute = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "execute",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC1155BatchReceived"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorOnErc1155BatchReceived = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC1155BatchReceived",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC1155Received"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorOnErc1155Received = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC1155Received",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC721Received"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorOnErc721Received = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC721Received",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"propose"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorPropose = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "propose",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"queue"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorQueue = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "queue",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"relay"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorRelay = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "relay",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"updateQuorumNumerator"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWriteDaoGovernorUpdateQuorumNumerator = /*#__PURE__*/ createUseWriteContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "updateQuorumNumerator",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernor = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"cancel"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCancel = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "cancel",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVote"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCastVote = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVote",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCastVoteBySig = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteBySig",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReason"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCastVoteWithReason = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReason",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReasonAndParams"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCastVoteWithReasonAndParams = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReasonAndParams",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"castVoteWithReasonAndParamsBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorCastVoteWithReasonAndParamsBySig = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "castVoteWithReasonAndParamsBySig",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"execute"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorExecute = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "execute",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC1155BatchReceived"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorOnErc1155BatchReceived = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC1155BatchReceived",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC1155Received"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorOnErc1155Received = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC1155Received",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"onERC721Received"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorOnErc721Received = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "onERC721Received",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"propose"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorPropose = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "propose",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"queue"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorQueue = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "queue",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"relay"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorRelay = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "relay",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoGovernorAbi}__ and `functionName` set to `"updateQuorumNumerator"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useSimulateDaoGovernorUpdateQuorumNumerator = /*#__PURE__*/ createUseSimulateContract({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  functionName: "updateQuorumNumerator",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"EIP712DomainChanged"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorEip712DomainChangedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "EIP712DomainChanged",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"ProposalCanceled"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorProposalCanceledEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "ProposalCanceled",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"ProposalCreated"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorProposalCreatedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "ProposalCreated",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"ProposalExecuted"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorProposalExecutedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "ProposalExecuted",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"ProposalQueued"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorProposalQueuedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "ProposalQueued",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"QuorumNumeratorUpdated"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorQuorumNumeratorUpdatedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "QuorumNumeratorUpdated",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"VoteCast"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorVoteCastEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "VoteCast",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoGovernorAbi}__ and `eventName` set to `"VoteCastWithParams"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const useWatchDaoGovernorVoteCastWithParamsEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoGovernorAbi,
  address: daoGovernorAddress,
  eventName: "VoteCastWithParams",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoToken = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"CLOCK_MODE"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenClockMode = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "CLOCK_MODE",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"DOMAIN_SEPARATOR"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenDomainSeparator = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "DOMAIN_SEPARATOR",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"allowance"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenAllowance = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "allowance",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"balanceOf"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenBalanceOf = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "balanceOf",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"checkpoints"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenCheckpoints = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "checkpoints",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"clock"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenClock = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "clock",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"decimals"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenDecimals = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "decimals",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"delegates"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenDelegates = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "delegates",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"eip712Domain"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenEip712Domain = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "eip712Domain",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"getPastTotalSupply"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenGetPastTotalSupply = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "getPastTotalSupply",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"getPastVotes"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenGetPastVotes = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "getPastVotes",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"getVotes"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenGetVotes = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "getVotes",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"name"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenName = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "name",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"nonces"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenNonces = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "nonces",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"numCheckpoints"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenNumCheckpoints = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "numCheckpoints",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"symbol"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenSymbol = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "symbol",
});

/**
 * Wraps __{@link useReadContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"totalSupply"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useReadDaoTokenTotalSupply = /*#__PURE__*/ createUseReadContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "totalSupply",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoToken = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"approve"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenApprove = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "approve",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"burn"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenBurn = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "burn",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"burnFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenBurnFrom = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "burnFrom",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"delegate"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenDelegate = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "delegate",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"delegateBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenDelegateBySig = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "delegateBySig",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"permit"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenPermit = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "permit",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"transfer"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenTransfer = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "transfer",
});

/**
 * Wraps __{@link useWriteContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"transferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWriteDaoTokenTransferFrom = /*#__PURE__*/ createUseWriteContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "transferFrom",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoToken = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"approve"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenApprove = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "approve",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"burn"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenBurn = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "burn",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"burnFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenBurnFrom = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "burnFrom",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"delegate"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenDelegate = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "delegate",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"delegateBySig"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenDelegateBySig = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "delegateBySig",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"permit"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenPermit = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "permit",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"transfer"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenTransfer = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "transfer",
});

/**
 * Wraps __{@link useSimulateContract}__ with `abi` set to __{@link daoTokenAbi}__ and `functionName` set to `"transferFrom"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useSimulateDaoTokenTransferFrom = /*#__PURE__*/ createUseSimulateContract({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  functionName: "transferFrom",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__ and `eventName` set to `"Approval"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenApprovalEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  eventName: "Approval",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__ and `eventName` set to `"DelegateChanged"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenDelegateChangedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  eventName: "DelegateChanged",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__ and `eventName` set to `"DelegateVotesChanged"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenDelegateVotesChangedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  eventName: "DelegateVotesChanged",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__ and `eventName` set to `"EIP712DomainChanged"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenEip712DomainChangedEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  eventName: "EIP712DomainChanged",
});

/**
 * Wraps __{@link useWatchContractEvent}__ with `abi` set to __{@link daoTokenAbi}__ and `eventName` set to `"Transfer"`
 *
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const useWatchDaoTokenTransferEvent = /*#__PURE__*/ createUseWatchContractEvent({
  abi: daoTokenAbi,
  address: daoTokenAddress,
  eventName: "Transfer",
});

'''
'''--- frontend/lib/generated-types.ts ---
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AWBRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "addressToUser",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agentIdToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "agents",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "balances",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_origin", internalType: "address", type: "address" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "createAndFulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "daoGovernorToAgent",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "daoGovernor", internalType: "address", type: "address" },
      { name: "daoToken", internalType: "address", type: "address" },
      { name: "tokenURI", internalType: "string", type: "string" },
      { name: "runPrice", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "_requestId", internalType: "uint256", type: "uint256" },
      { name: "_result", internalType: "string", type: "string" },
      { name: "_resultURI", internalType: "string", type: "string" },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "fulfillerAddressToFulfiller",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "fulfillers",
    outputs: [
      { name: "name", internalType: "string", type: "string" },
      { name: "description", internalType: "string", type: "string" },
      { name: "fulfillerAddress", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getAgentById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllAgents",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Agent[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "daoGovernor", internalType: "address", type: "address" },
          { name: "daoToken", internalType: "address", type: "address" },
          { name: "tokenURI", internalType: "string", type: "string" },
          { name: "runPrice", internalType: "uint256", type: "uint256" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
          { name: "active", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllFulfillers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller[]",
        type: "tuple[]",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllRequests",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request[]",
        type: "tuple[]",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getAllUsers",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User[]",
        type: "tuple[]",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getApproved",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getFulfillerByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Fulfiller",
        type: "tuple",
        components: [
          { name: "name", internalType: "string", type: "string" },
          { name: "description", internalType: "string", type: "string" },
          {
            name: "fulfillerAddress",
            internalType: "address",
            type: "address",
          },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_id", internalType: "uint256", type: "uint256" }],
    name: "getRequestById",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.Request",
        type: "tuple",
        components: [
          { name: "id", internalType: "uint256", type: "uint256" },
          { name: "agentId", internalType: "uint256", type: "uint256" },
          { name: "origin", internalType: "address", type: "address" },
          { name: "request", internalType: "string", type: "string" },
          { name: "fulfilled", internalType: "bool", type: "bool" },
          { name: "result", internalType: "string", type: "string" },
          { name: "resultURI", internalType: "string", type: "string" },
          { name: "price", internalType: "uint256", type: "uint256" },
          { name: "fulfiller", internalType: "address", type: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_address", internalType: "address", type: "address" }],
    name: "getUserByAddress",
    outputs: [
      {
        name: "",
        internalType: "struct AWBRegistry.User",
        type: "tuple",
        components: [
          { name: "userAddress", internalType: "address", type: "address" },
          { name: "requestIds", internalType: "uint256[]", type: "uint256[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "operator", internalType: "address", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_daoToken", internalType: "address", type: "address" },
      { name: "_tokenURI", internalType: "string", type: "string" },
      { name: "_runPrice", internalType: "uint256", type: "uint256" },
    ],
    name: "registerAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_description", internalType: "string", type: "string" },
    ],
    name: "registerFulfiller",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requestIdToRequest",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "requests",
    outputs: [
      { name: "id", internalType: "uint256", type: "uint256" },
      { name: "agentId", internalType: "uint256", type: "uint256" },
      { name: "origin", internalType: "address", type: "address" },
      { name: "request", internalType: "string", type: "string" },
      { name: "fulfilled", internalType: "bool", type: "bool" },
      { name: "result", internalType: "string", type: "string" },
      { name: "resultURI", internalType: "string", type: "string" },
      { name: "price", internalType: "uint256", type: "uint256" },
      { name: "fulfiller", internalType: "address", type: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "_agentId", internalType: "uint256", type: "uint256" },
      { name: "_request", internalType: "string", type: "string" },
      { name: "_origin", internalType: "address", type: "address" },
    ],
    name: "submitRequest",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "uri", internalType: "string", type: "string" },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "users",
    outputs: [{ name: "userAddress", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "_amount", internalType: "uint256", type: "uint256" }],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "approved",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_fromTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "_toTokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BatchMetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "_tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "MetadataUpdate",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "Transfer",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC721IncorrectOwner",
  },
  {
    type: "error",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC721InsufficientApproval",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC721InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "ERC721InvalidOperator",
  },
  {
    type: "error",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "ERC721InvalidOwner",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC721InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC721InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "ERC721NonexistentToken",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryAddress = {
  84532: "0x8aB1d92130774f55CE93222f62F2e213366e24a7",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x8aB1d92130774f55CE93222f62F2e213366e24a7)
 */
export const awbRegistryConfig = {
  address: awbRegistryAddress,
  abi: awbRegistryAbi,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DAOGovernor
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_token", internalType: "contract IVotes", type: "address" },
      { name: "_votingDelay", internalType: "uint256", type: "uint256" },
      { name: "_votingPeriod", internalType: "uint256", type: "uint256" },
      { name: "_proposalThreshold", internalType: "uint256", type: "uint256" },
      { name: "_quorumVotes", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "cancel",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
    ],
    name: "castVote",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "voter", internalType: "address", type: "address" },
      { name: "signature", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteBySig",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "reason", internalType: "string", type: "string" },
    ],
    name: "castVoteWithReason",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "reason", internalType: "string", type: "string" },
      { name: "params", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "support", internalType: "uint8", type: "uint8" },
      { name: "voter", internalType: "address", type: "address" },
      { name: "reason", internalType: "string", type: "string" },
      { name: "params", internalType: "bytes", type: "bytes" },
      { name: "signature", internalType: "bytes", type: "bytes" },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "clock",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { name: "fields", internalType: "bytes1", type: "bytes1" },
      { name: "name", internalType: "string", type: "string" },
      { name: "version", internalType: "string", type: "string" },
      { name: "chainId", internalType: "uint256", type: "uint256" },
      { name: "verifyingContract", internalType: "address", type: "address" },
      { name: "salt", internalType: "bytes32", type: "bytes32" },
      { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "execute",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
    ],
    name: "getVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
      { name: "params", internalType: "bytes", type: "bytes" },
    ],
    name: "getVotesWithParams",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "hasVoted",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "hashProposal",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "nonces",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC1155BatchReceived",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC1155Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" },
    ],
    name: "onERC721Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalDeadline",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalEta",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "proposalNeedsQueuing",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalProposer",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalSnapshot",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "proposalThreshold",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "proposalVotes",
    outputs: [
      { name: "againstVotes", internalType: "uint256", type: "uint256" },
      { name: "forVotes", internalType: "uint256", type: "uint256" },
      { name: "abstainVotes", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "description", internalType: "string", type: "string" },
    ],
    name: "propose",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "targets", internalType: "address[]", type: "address[]" },
      { name: "values", internalType: "uint256[]", type: "uint256[]" },
      { name: "calldatas", internalType: "bytes[]", type: "bytes[]" },
      { name: "descriptionHash", internalType: "bytes32", type: "bytes32" },
    ],
    name: "queue",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "blockNumber", internalType: "uint256", type: "uint256" }],
    name: "quorum",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "quorumDenominator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "timepoint", internalType: "uint256", type: "uint256" }],
    name: "quorumNumerator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "quorumNumerator",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "target", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "state",
    outputs: [{ name: "", internalType: "enum IGovernor.ProposalState", type: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "token",
    outputs: [{ name: "", internalType: "contract IERC5805", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "newQuorumNumerator", internalType: "uint256", type: "uint256" }],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "version",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "votingDelay",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "votingPeriod",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  { type: "event", anonymous: false, inputs: [], name: "EIP712DomainChanged" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalCanceled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "proposer",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "targets",
        internalType: "address[]",
        type: "address[]",
        indexed: false,
      },
      {
        name: "values",
        internalType: "uint256[]",
        type: "uint256[]",
        indexed: false,
      },
      {
        name: "signatures",
        internalType: "string[]",
        type: "string[]",
        indexed: false,
      },
      {
        name: "calldatas",
        internalType: "bytes[]",
        type: "bytes[]",
        indexed: false,
      },
      {
        name: "voteStart",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "voteEnd",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "description",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "ProposalCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalExecuted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "etaSeconds",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ProposalQueued",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "oldQuorumNumerator",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newQuorumNumerator",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "QuorumNumeratorUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "voter",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "support", internalType: "uint8", type: "uint8", indexed: false },
      {
        name: "weight",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "reason",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "VoteCast",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "voter",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "proposalId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "support", internalType: "uint8", type: "uint8", indexed: false },
      {
        name: "weight",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "reason",
        internalType: "string",
        type: "string",
        indexed: false,
      },
      { name: "params", internalType: "bytes", type: "bytes", indexed: false },
    ],
    name: "VoteCastWithParams",
  },
  { type: "error", inputs: [], name: "CheckpointUnorderedInsertion" },
  { type: "error", inputs: [], name: "FailedInnerCall" },
  {
    type: "error",
    inputs: [{ name: "voter", internalType: "address", type: "address" }],
    name: "GovernorAlreadyCastVote",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorAlreadyQueuedProposal",
  },
  { type: "error", inputs: [], name: "GovernorDisabledDeposit" },
  {
    type: "error",
    inputs: [
      { name: "proposer", internalType: "address", type: "address" },
      { name: "votes", internalType: "uint256", type: "uint256" },
      { name: "threshold", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInsufficientProposerVotes",
  },
  {
    type: "error",
    inputs: [
      { name: "targets", internalType: "uint256", type: "uint256" },
      { name: "calldatas", internalType: "uint256", type: "uint256" },
      { name: "values", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInvalidProposalLength",
  },
  {
    type: "error",
    inputs: [
      { name: "quorumNumerator", internalType: "uint256", type: "uint256" },
      { name: "quorumDenominator", internalType: "uint256", type: "uint256" },
    ],
    name: "GovernorInvalidQuorumFraction",
  },
  {
    type: "error",
    inputs: [{ name: "voter", internalType: "address", type: "address" }],
    name: "GovernorInvalidSignature",
  },
  { type: "error", inputs: [], name: "GovernorInvalidVoteType" },
  {
    type: "error",
    inputs: [{ name: "votingPeriod", internalType: "uint256", type: "uint256" }],
    name: "GovernorInvalidVotingPeriod",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorNonexistentProposal",
  },
  {
    type: "error",
    inputs: [{ name: "proposalId", internalType: "uint256", type: "uint256" }],
    name: "GovernorNotQueuedProposal",
  },
  {
    type: "error",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "GovernorOnlyExecutor",
  },
  {
    type: "error",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "GovernorOnlyProposer",
  },
  { type: "error", inputs: [], name: "GovernorQueueNotImplemented" },
  {
    type: "error",
    inputs: [{ name: "proposer", internalType: "address", type: "address" }],
    name: "GovernorRestrictedProposer",
  },
  {
    type: "error",
    inputs: [
      { name: "proposalId", internalType: "uint256", type: "uint256" },
      {
        name: "current",
        internalType: "enum IGovernor.ProposalState",
        type: "uint8",
      },
      { name: "expectedStates", internalType: "bytes32", type: "bytes32" },
    ],
    name: "GovernorUnexpectedProposalState",
  },
  {
    type: "error",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "currentNonce", internalType: "uint256", type: "uint256" },
    ],
    name: "InvalidAccountNonce",
  },
  { type: "error", inputs: [], name: "InvalidShortString" },
  { type: "error", inputs: [], name: "QueueEmpty" },
  { type: "error", inputs: [], name: "QueueFull" },
  {
    type: "error",
    inputs: [
      { name: "bits", internalType: "uint8", type: "uint8" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "SafeCastOverflowedUintDowncast",
  },
  {
    type: "error",
    inputs: [{ name: "str", internalType: "string", type: "string" }],
    name: "StringTooLong",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorAddress = {
  84532: "0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f)
 */
export const daoGovernorConfig = {
  address: daoGovernorAddress,
  abi: daoGovernorAbi,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DAOToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
      { name: "_mintAddress", internalType: "address", type: "address" },
      { name: "_totalSupply", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "value", internalType: "uint256", type: "uint256" }],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "pos", internalType: "uint32", type: "uint32" },
    ],
    name: "checkpoints",
    outputs: [
      {
        name: "",
        internalType: "struct Checkpoints.Checkpoint208",
        type: "tuple",
        components: [
          { name: "_key", internalType: "uint48", type: "uint48" },
          { name: "_value", internalType: "uint208", type: "uint208" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "clock",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "delegatee", internalType: "address", type: "address" }],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "delegatee", internalType: "address", type: "address" },
      { name: "nonce", internalType: "uint256", type: "uint256" },
      { name: "expiry", internalType: "uint256", type: "uint256" },
      { name: "v", internalType: "uint8", type: "uint8" },
      { name: "r", internalType: "bytes32", type: "bytes32" },
      { name: "s", internalType: "bytes32", type: "bytes32" },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "delegates",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { name: "fields", internalType: "bytes1", type: "bytes1" },
      { name: "name", internalType: "string", type: "string" },
      { name: "version", internalType: "string", type: "string" },
      { name: "chainId", internalType: "uint256", type: "uint256" },
      { name: "verifyingContract", internalType: "address", type: "address" },
      { name: "salt", internalType: "bytes32", type: "bytes32" },
      { name: "extensions", internalType: "uint256[]", type: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "timepoint", internalType: "uint256", type: "uint256" }],
    name: "getPastTotalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timepoint", internalType: "uint256", type: "uint256" },
    ],
    name: "getPastVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "getVotes",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "nonces",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "numCheckpoints",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "deadline", internalType: "uint256", type: "uint256" },
      { name: "v", internalType: "uint8", type: "uint8" },
      { name: "r", internalType: "bytes32", type: "bytes32" },
      { name: "s", internalType: "bytes32", type: "bytes32" },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "from", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "delegator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "fromDelegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "toDelegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "DelegateChanged",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "delegate",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "previousVotes",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "newVotes",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "DelegateVotesChanged",
  },
  { type: "event", anonymous: false, inputs: [], name: "EIP712DomainChanged" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  { type: "error", inputs: [], name: "CheckpointUnorderedInsertion" },
  { type: "error", inputs: [], name: "ECDSAInvalidSignature" },
  {
    type: "error",
    inputs: [{ name: "length", internalType: "uint256", type: "uint256" }],
    name: "ECDSAInvalidSignatureLength",
  },
  {
    type: "error",
    inputs: [{ name: "s", internalType: "bytes32", type: "bytes32" }],
    name: "ECDSAInvalidSignatureS",
  },
  {
    type: "error",
    inputs: [
      { name: "increasedSupply", internalType: "uint256", type: "uint256" },
      { name: "cap", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20ExceededSafeSupply",
  },
  {
    type: "error",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "allowance", internalType: "uint256", type: "uint256" },
      { name: "needed", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20InsufficientAllowance",
  },
  {
    type: "error",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "balance", internalType: "uint256", type: "uint256" },
      { name: "needed", internalType: "uint256", type: "uint256" },
    ],
    name: "ERC20InsufficientBalance",
  },
  {
    type: "error",
    inputs: [{ name: "approver", internalType: "address", type: "address" }],
    name: "ERC20InvalidApprover",
  },
  {
    type: "error",
    inputs: [{ name: "receiver", internalType: "address", type: "address" }],
    name: "ERC20InvalidReceiver",
  },
  {
    type: "error",
    inputs: [{ name: "sender", internalType: "address", type: "address" }],
    name: "ERC20InvalidSender",
  },
  {
    type: "error",
    inputs: [{ name: "spender", internalType: "address", type: "address" }],
    name: "ERC20InvalidSpender",
  },
  {
    type: "error",
    inputs: [{ name: "deadline", internalType: "uint256", type: "uint256" }],
    name: "ERC2612ExpiredSignature",
  },
  {
    type: "error",
    inputs: [
      { name: "signer", internalType: "address", type: "address" },
      { name: "owner", internalType: "address", type: "address" },
    ],
    name: "ERC2612InvalidSigner",
  },
  {
    type: "error",
    inputs: [
      { name: "timepoint", internalType: "uint256", type: "uint256" },
      { name: "clock", internalType: "uint48", type: "uint48" },
    ],
    name: "ERC5805FutureLookup",
  },
  { type: "error", inputs: [], name: "ERC6372InconsistentClock" },
  {
    type: "error",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "currentNonce", internalType: "uint256", type: "uint256" },
    ],
    name: "InvalidAccountNonce",
  },
  { type: "error", inputs: [], name: "InvalidShortString" },
  {
    type: "error",
    inputs: [
      { name: "bits", internalType: "uint8", type: "uint8" },
      { name: "value", internalType: "uint256", type: "uint256" },
    ],
    name: "SafeCastOverflowedUintDowncast",
  },
  {
    type: "error",
    inputs: [{ name: "str", internalType: "string", type: "string" }],
    name: "StringTooLong",
  },
  {
    type: "error",
    inputs: [{ name: "expiry", internalType: "uint256", type: "uint256" }],
    name: "VotesExpiredSignature",
  },
] as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenAddress = {
  84532: "0x1E4b432b90903ea6048a30C39d634b48d81EA538",
} as const;

/**
 * [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x1e4b432b90903ea6048a30c39d634b48d81ea538)
 */
export const daoTokenConfig = {
  address: daoTokenAddress,
  abi: daoTokenAbi,
} as const;

'''
'''--- frontend/lib/utils.ts ---
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

'''
'''--- frontend/package.json ---
{
  "name": "awb",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.3.4",
    "@particle-network/aa": "^1.3.3",
    "@particle-network/auth": "^1.3.1",
    "@particle-network/auth-core": "^1.3.4",
    "@particle-network/auth-core-modal": "^1.3.6",
    "@particle-network/chains": "^1.3.19",
    "@particle-network/provider": "^1.3.2",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-tabs": "^1.0.4",
    "@tabler/icons-react": "^2.47.0",
    "@tanstack/react-query": "^5.24.1",
    "@tsparticles/engine": "^3.3.0",
    "@tsparticles/react": "^3.0.0",
    "@tsparticles/slim": "^3.3.0",
    "@vercel/analytics": "1.2.2",
    "@vercel/blob": "^0.22.1",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "embla-carousel-react": "^8.0.0",
    "framer-motion": "^11.0.6",
    "lucide-react": "^0.341.0",
    "mini-svg-data-uri": "^1.4.4",
    "next": "14.1.0",
    "next-themes": "^0.2.1",
    "nft.storage": "^7.1.1",
    "react": "^18",
    "react-dom": "^18",
    "react-hook-form": "^7.51.0",
    "sonner": "^1.4.2",
    "tailwind-merge": "^2.2.1",
    "tailwindcss-animate": "^1.0.7",
    "viem": "2.x",
    "wagmi": "^2.5.7",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bun": "^1.0.8",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@wagmi/cli": "^2.1.1",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.1.0",
    "postcss": "^8",
    "tailwindcss": "^3.3.0",
    "typescript": "^5"
  }
}

'''
'''--- frontend/particle/config.ts ---
export const PARTICLE_CONFIG = {
  projectId: `${process.env.NEXT_PUBLIC_PARTICLE_PROJECT_ID}`,
  clientKey: `${process.env.NEXT_PUBLIC_PARTICLE_CLIENT_KEY}`,
  appId: `${process.env.NEXT_PUBLIC_PARTICLE_APP_ID}`,
};

'''
'''--- frontend/postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

'''
'''--- frontend/public/base.svg ---
<svg width="613" height="154" viewBox="0 0 613 154" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M177 143.239V110.267H189.222C191.725 110.267 193.826 110.739 195.524 111.684C197.232 112.628 198.521 113.927 199.391 115.58C200.271 117.222 200.711 119.09 200.711 121.182C200.711 123.297 200.271 125.175 199.391 126.817C198.51 128.459 197.21 129.753 195.492 130.697C193.773 131.631 191.656 132.098 189.142 132.098H181.042V127.188H188.346C189.811 127.188 191.009 126.93 191.943 126.415C192.877 125.9 193.566 125.191 194.012 124.29C194.468 123.388 194.696 122.352 194.696 121.182C194.696 120.013 194.468 118.982 194.012 118.091C193.566 117.201 192.871 116.508 191.927 116.015C190.993 115.51 189.789 115.258 188.315 115.258H182.904V143.239H177Z" fill="black"/>
<path d="M204.241 143.239V118.51H209.826V122.631H210.081C210.526 121.204 211.29 120.104 212.372 119.331C213.465 118.548 214.712 118.156 216.112 118.156C216.43 118.156 216.786 118.172 217.178 118.204C217.582 118.226 217.916 118.263 218.181 118.317V123.678C217.937 123.592 217.55 123.517 217.019 123.452C216.499 123.377 215.995 123.34 215.507 123.34C214.457 123.34 213.513 123.571 212.675 124.032C211.847 124.483 211.195 125.111 210.717 125.916C210.24 126.721 210.001 127.649 210.001 128.701V143.239H204.241Z" fill="black"/>
<path d="M230.319 143.722C227.932 143.722 225.864 143.19 224.113 142.128C222.363 141.065 221.005 139.579 220.039 137.668C219.084 135.758 218.607 133.525 218.607 130.971C218.607 128.416 219.084 126.179 220.039 124.257C221.005 122.336 222.363 120.844 224.113 119.782C225.864 118.719 227.932 118.188 230.319 118.188C232.706 118.188 234.775 118.719 236.526 119.782C238.276 120.844 239.629 122.336 240.584 124.257C241.549 126.179 242.032 128.416 242.032 130.971C242.032 133.525 241.549 135.758 240.584 137.668C239.629 139.579 238.276 141.065 236.526 142.128C234.775 143.19 232.706 143.722 230.319 143.722ZM230.351 139.053C231.646 139.053 232.728 138.693 233.598 137.974C234.468 137.244 235.115 136.268 235.539 135.044C235.974 133.82 236.192 132.457 236.192 130.955C236.192 129.441 235.974 128.073 235.539 126.849C235.115 125.615 234.468 124.633 233.598 123.903C232.728 123.173 231.646 122.809 230.351 122.809C229.025 122.809 227.922 123.173 227.041 123.903C226.171 124.633 225.519 125.615 225.084 126.849C224.659 128.073 224.447 129.441 224.447 130.955C224.447 132.457 224.659 133.82 225.084 135.044C225.519 136.268 226.171 137.244 227.041 137.974C227.922 138.693 229.025 139.053 230.351 139.053Z" fill="black"/>
<path d="M254.648 143.673C252.727 143.673 251.009 143.174 249.492 142.176C247.975 141.178 246.776 139.729 245.895 137.829C245.015 135.929 244.574 133.622 244.574 130.907C244.574 128.159 245.02 125.841 245.911 123.952C246.813 122.052 248.028 120.619 249.555 119.653C251.083 118.676 252.786 118.188 254.664 118.188C256.096 118.188 257.273 118.435 258.196 118.929C259.119 119.412 259.852 119.997 260.393 120.683C260.934 121.36 261.353 121.998 261.65 122.599H261.888V110.267H267.665V143.239H262V139.343H261.65C261.353 139.944 260.923 140.582 260.361 141.258C259.798 141.924 259.056 142.493 258.133 142.965C257.21 143.437 256.048 143.673 254.648 143.673ZM256.255 138.892C257.475 138.892 258.515 138.559 259.374 137.894C260.233 137.217 260.886 136.278 261.331 135.076C261.777 133.874 262 132.474 262 130.874C262 129.275 261.777 127.885 261.331 126.705C260.897 125.524 260.249 124.606 259.39 123.952C258.541 123.297 257.496 122.97 256.255 122.97C254.971 122.97 253.9 123.308 253.04 123.984C252.181 124.66 251.534 125.594 251.099 126.785C250.664 127.976 250.447 129.339 250.447 130.874C250.447 132.42 250.664 133.799 251.099 135.012C251.545 136.214 252.197 137.164 253.056 137.861C253.926 138.548 254.993 138.892 256.255 138.892Z" fill="black"/>
<path d="M288.039 132.838V118.51H293.8V143.239H288.214V138.843H287.959C287.408 140.228 286.501 141.36 285.238 142.24C283.986 143.121 282.443 143.561 280.607 143.561C279.005 143.561 277.589 143.201 276.358 142.482C275.138 141.752 274.183 140.695 273.494 139.31C272.804 137.915 272.459 136.23 272.459 134.255V118.51H278.22V133.354C278.22 134.921 278.645 136.166 279.493 137.089C280.342 138.012 281.456 138.473 282.835 138.473C283.684 138.473 284.506 138.264 285.302 137.845C286.097 137.427 286.75 136.804 287.259 135.978C287.779 135.141 288.039 134.094 288.039 132.838Z" fill="black"/>
<path d="M309.041 143.722C306.601 143.722 304.506 143.18 302.755 142.096C301.016 141.012 299.673 139.514 298.729 137.604C297.796 135.683 297.329 133.472 297.329 130.971C297.329 128.459 297.806 126.243 298.761 124.322C299.716 122.39 301.063 120.887 302.803 119.814C304.554 118.73 306.622 118.188 309.009 118.188C310.993 118.188 312.749 118.558 314.277 119.299C315.815 120.029 317.041 121.064 317.953 122.406C318.865 123.737 319.385 125.293 319.513 127.075H314.006C313.784 125.884 313.253 124.891 312.415 124.096C311.588 123.292 310.479 122.889 309.089 122.889C307.911 122.889 306.877 123.211 305.986 123.855C305.095 124.488 304.4 125.401 303.901 126.592C303.413 127.783 303.169 129.211 303.169 130.874C303.169 132.559 303.413 134.008 303.901 135.221C304.389 136.423 305.074 137.352 305.954 138.006C306.845 138.65 307.89 138.972 309.089 138.972C309.938 138.972 310.696 138.811 311.365 138.489C312.044 138.157 312.611 137.679 313.067 137.056C313.524 136.434 313.837 135.677 314.006 134.786H319.513C319.375 136.536 318.865 138.087 317.985 139.439C317.104 140.781 315.905 141.833 314.388 142.595C312.871 143.346 311.089 143.722 309.041 143.722Z" fill="black"/>
<path d="M335.104 118.51V123.018H321.052V118.51H335.104ZM324.522 112.585H330.282V135.801C330.282 136.584 330.399 137.185 330.633 137.604C330.877 138.012 331.195 138.291 331.587 138.441C331.98 138.591 332.415 138.666 332.892 138.666C333.253 138.666 333.582 138.64 333.879 138.586C334.187 138.532 334.42 138.484 334.579 138.441L335.55 142.997C335.242 143.104 334.802 143.223 334.229 143.351C333.667 143.48 332.977 143.555 332.16 143.577C330.717 143.62 329.418 143.4 328.261 142.917C327.105 142.423 326.187 141.661 325.508 140.631C324.84 139.6 324.511 138.312 324.522 136.767V112.585Z" fill="black"/>
<path d="M359.011 143.722C356.624 143.722 354.555 143.19 352.805 142.128C351.054 141.065 349.696 139.579 348.731 137.668C347.776 135.758 347.299 133.525 347.299 130.971C347.299 128.416 347.776 126.179 348.731 124.257C349.696 122.336 351.054 120.844 352.805 119.782C354.555 118.719 356.624 118.188 359.011 118.188C361.398 118.188 363.467 118.719 365.218 119.782C366.968 120.844 368.321 122.336 369.276 124.257C370.241 126.179 370.724 128.416 370.724 130.971C370.724 133.525 370.241 135.758 369.276 137.668C368.321 139.579 366.968 141.065 365.218 142.128C363.467 143.19 361.398 143.722 359.011 143.722ZM359.043 139.053C360.337 139.053 361.419 138.693 362.289 137.974C363.159 137.244 363.807 136.268 364.231 135.044C364.666 133.82 364.883 132.457 364.883 130.955C364.883 129.441 364.666 128.073 364.231 126.849C363.807 125.615 363.159 124.633 362.289 123.903C361.419 123.173 360.337 122.809 359.043 122.809C357.717 122.809 356.614 123.173 355.733 123.903C354.863 124.633 354.211 125.615 353.776 126.849C353.351 128.073 353.139 129.441 353.139 130.955C353.139 132.457 353.351 133.82 353.776 135.044C354.211 136.268 354.863 137.244 355.733 137.974C356.614 138.693 357.717 139.053 359.043 139.053Z" fill="black"/>
<path d="M386.65 118.51V123.018H372.2V118.51H386.65ZM375.812 143.239V116.176C375.812 114.512 376.152 113.127 376.831 112.022C377.52 110.916 378.443 110.09 379.6 109.543C380.756 108.995 382.04 108.722 383.451 108.722C384.448 108.722 385.334 108.802 386.109 108.963C386.883 109.124 387.456 109.269 387.827 109.398L386.681 113.906C386.437 113.83 386.13 113.755 385.758 113.68C385.387 113.594 384.973 113.551 384.517 113.551C383.446 113.551 382.687 113.814 382.241 114.34C381.807 114.855 381.589 115.596 381.589 116.562V143.239H375.812Z" fill="black"/>
<path d="M399.095 143.239V110.267H421.819V116.739H406.972V123.501H420.658V129.989H406.972V136.767H421.819V143.239H399.095Z" fill="black"/>
<path d="M439.205 118.51V124.306H423.785V118.51H439.205ZM427.016 112.585H434.797V135.463C434.797 135.946 434.872 136.337 435.02 136.638C435.179 136.928 435.407 137.137 435.704 137.266C436.001 137.384 436.357 137.443 436.771 137.443C437.068 137.443 437.381 137.416 437.71 137.362C438.049 137.298 438.304 137.244 438.473 137.201L439.651 142.884C439.28 142.992 438.755 143.126 438.076 143.287C437.407 143.448 436.606 143.55 435.673 143.593C433.848 143.679 432.283 143.464 430.978 142.949C429.684 142.423 428.692 141.607 428.002 140.502C427.323 139.396 426.994 138.006 427.016 136.332V112.585Z" fill="black"/>
<path d="M450.138 129.136V143.239H442.357V110.267H449.884V123.05H450.154C450.706 121.526 451.608 120.335 452.86 119.476C454.122 118.617 455.666 118.188 457.491 118.188C459.209 118.188 460.705 118.574 461.978 119.347C463.251 120.109 464.238 121.188 464.938 122.583C465.649 123.978 465.999 125.61 465.988 127.477V143.239H458.207V129.023C458.217 127.649 457.878 126.576 457.188 125.803C456.499 125.03 455.528 124.644 454.276 124.644C453.459 124.644 452.738 124.826 452.112 125.191C451.496 125.545 451.014 126.055 450.664 126.721C450.324 127.386 450.149 128.191 450.138 129.136Z" fill="black"/>
<path d="M480.928 143.705C478.371 143.705 476.164 143.196 474.308 142.176C472.462 141.146 471.04 139.681 470.043 137.781C469.056 135.87 468.563 133.6 468.563 130.971C468.563 128.416 469.061 126.184 470.059 124.274C471.056 122.352 472.462 120.861 474.276 119.798C476.09 118.725 478.228 118.188 480.689 118.188C482.429 118.188 484.02 118.462 485.463 119.009C486.906 119.556 488.153 120.367 489.203 121.44C490.253 122.513 491.07 123.839 491.654 125.417C492.237 126.984 492.529 128.781 492.529 130.81V132.774H471.284V128.202H485.288C485.277 127.365 485.081 126.619 484.699 125.964C484.317 125.309 483.792 124.799 483.124 124.435C482.466 124.059 481.708 123.871 480.848 123.871C479.978 123.871 479.198 124.07 478.509 124.467C477.819 124.853 477.273 125.384 476.87 126.061C476.467 126.726 476.254 127.483 476.233 128.331V132.983C476.233 133.992 476.429 134.878 476.822 135.64C477.215 136.391 477.772 136.976 478.493 137.395C479.214 137.813 480.074 138.022 481.071 138.022C481.761 138.022 482.387 137.926 482.949 137.733C483.511 137.539 483.994 137.255 484.397 136.879C484.8 136.504 485.102 136.042 485.304 135.495L492.449 135.704C492.152 137.325 491.5 138.736 490.492 139.938C489.495 141.13 488.184 142.058 486.561 142.723C484.938 143.378 483.06 143.705 480.928 143.705Z" fill="black"/>
<path d="M495.159 143.239V118.51H502.718V123.018H502.973C503.418 121.386 504.145 120.174 505.153 119.379C506.161 118.574 507.333 118.172 508.67 118.172C509.03 118.172 509.402 118.199 509.784 118.252C510.165 118.295 510.521 118.365 510.85 118.462V125.304C510.478 125.175 509.99 125.073 509.386 124.998C508.792 124.923 508.261 124.885 507.794 124.885C506.871 124.885 506.039 125.095 505.296 125.513C504.564 125.921 503.986 126.495 503.561 127.236C503.148 127.966 502.941 128.824 502.941 129.812V143.239H495.159Z" fill="black"/>
<path d="M534.016 126.061L526.871 126.254C526.797 125.739 526.595 125.282 526.266 124.885C525.938 124.477 525.508 124.161 524.977 123.935C524.458 123.699 523.853 123.581 523.163 123.581C522.262 123.581 521.492 123.764 520.856 124.129C520.23 124.494 519.922 124.987 519.933 125.61C519.922 126.093 520.113 126.511 520.506 126.866C520.909 127.22 521.625 127.504 522.654 127.719L527.365 128.62C529.805 129.093 531.619 129.876 532.807 130.971C534.006 132.066 534.611 133.515 534.621 135.318C534.611 137.014 534.112 138.489 533.125 139.745C532.149 141.001 530.812 141.977 529.115 142.675C527.418 143.362 525.476 143.705 523.291 143.705C519.8 143.705 517.047 142.981 515.031 141.532C513.026 140.072 511.881 138.119 511.594 135.672L519.28 135.479C519.45 136.38 519.89 137.067 520.601 137.539C521.312 138.012 522.219 138.248 523.322 138.248C524.32 138.248 525.131 138.06 525.757 137.684C526.383 137.309 526.701 136.81 526.712 136.187C526.701 135.629 526.457 135.184 525.98 134.851C525.503 134.507 524.755 134.239 523.736 134.046L519.471 133.225C517.021 132.774 515.196 131.942 513.997 130.729C512.798 129.506 512.204 127.95 512.215 126.061C512.204 124.408 512.639 122.996 513.52 121.826C514.4 120.646 515.652 119.744 517.275 119.122C518.898 118.499 520.813 118.188 523.02 118.188C526.33 118.188 528.94 118.891 530.85 120.297C532.759 121.692 533.815 123.613 534.016 126.061Z" fill="black"/>
<path d="M548.518 143.705C545.94 143.705 543.728 143.169 541.882 142.096C540.047 141.022 538.636 139.53 537.649 137.62C536.662 135.699 536.169 133.477 536.169 130.955C536.169 128.422 536.662 126.2 537.649 124.29C538.646 122.368 540.063 120.871 541.898 119.798C543.744 118.725 545.945 118.188 548.502 118.188C550.762 118.188 552.73 118.601 554.406 119.428C556.093 120.254 557.408 121.424 558.353 122.937C559.308 124.44 559.811 126.205 559.864 128.234H552.592C552.443 126.968 552.019 125.975 551.319 125.256C550.629 124.537 549.728 124.177 548.614 124.177C547.712 124.177 546.921 124.435 546.242 124.95C545.563 125.454 545.033 126.205 544.651 127.204C544.28 128.191 544.094 129.415 544.094 130.874C544.094 132.334 544.28 133.568 544.651 134.577C545.033 135.575 545.563 136.332 546.242 136.847C546.921 137.352 547.712 137.604 548.614 137.604C549.335 137.604 549.972 137.448 550.523 137.137C551.085 136.826 551.547 136.37 551.908 135.769C552.268 135.157 552.496 134.416 552.592 133.547H559.864C559.79 135.586 559.286 137.368 558.353 138.892C557.43 140.416 556.13 141.602 554.454 142.45C552.788 143.287 550.81 143.705 548.518 143.705Z" fill="black"/>
<path d="M569.393 143.657C567.834 143.657 566.449 143.394 565.24 142.868C564.041 142.332 563.091 141.527 562.391 140.453C561.702 139.369 561.357 138.012 561.357 136.38C561.357 135.006 561.595 133.847 562.073 132.903C562.55 131.958 563.208 131.191 564.046 130.601C564.884 130.01 565.85 129.565 566.942 129.264C568.035 128.953 569.202 128.744 570.443 128.636C571.833 128.508 572.952 128.374 573.801 128.234C574.65 128.084 575.265 127.874 575.647 127.606C576.04 127.327 576.236 126.935 576.236 126.431V126.35C576.236 125.524 575.955 124.885 575.393 124.435C574.83 123.984 574.072 123.758 573.117 123.758C572.088 123.758 571.26 123.984 570.634 124.435C570.008 124.885 569.611 125.508 569.441 126.302L562.264 126.044C562.476 124.542 563.022 123.2 563.903 122.02C564.794 120.828 566.014 119.895 567.563 119.218C569.123 118.531 570.995 118.188 573.181 118.188C574.74 118.188 576.178 118.376 577.493 118.751C578.809 119.116 579.955 119.653 580.931 120.361C581.907 121.059 582.66 121.918 583.19 122.937C583.731 123.957 584.002 125.121 584.002 126.431V143.239H576.682V139.793H576.491C576.056 140.631 575.499 141.339 574.82 141.918C574.151 142.498 573.361 142.933 572.449 143.223C571.547 143.512 570.528 143.657 569.393 143.657ZM571.796 138.505C572.634 138.505 573.387 138.334 574.056 137.99C574.735 137.647 575.276 137.175 575.679 136.573C576.082 135.962 576.284 135.253 576.284 134.448V132.098C576.061 132.216 575.79 132.323 575.472 132.42C575.164 132.516 574.825 132.608 574.454 132.694C574.082 132.779 573.7 132.855 573.308 132.919C572.915 132.983 572.539 133.042 572.178 133.096C571.446 133.214 570.82 133.397 570.3 133.643C569.791 133.89 569.398 134.212 569.123 134.609C568.857 134.996 568.725 135.457 568.725 135.994C568.725 136.81 569.011 137.432 569.584 137.861C570.168 138.291 570.905 138.505 571.796 138.505Z" fill="black"/>
<path d="M595.197 129.136V143.239H587.416V118.51H594.816V123.05H595.086C595.627 121.537 596.55 120.351 597.855 119.492C599.16 118.623 600.714 118.188 602.518 118.188C604.236 118.188 605.727 118.58 606.99 119.363C608.263 120.136 609.249 121.22 609.949 122.615C610.66 124 611.01 125.621 611 127.477V143.239H603.218V129.023C603.229 127.649 602.884 126.576 602.184 125.803C601.494 125.03 600.534 124.644 599.303 124.644C598.486 124.644 597.765 124.826 597.139 125.191C596.524 125.545 596.046 126.055 595.707 126.721C595.378 127.386 595.208 128.191 595.197 129.136Z" fill="black"/>
<path d="M175.99 84.7216V11.9943H202.624C207.785 11.9943 212.058 12.8466 215.443 14.5511C218.829 16.232 221.362 18.5166 223.043 21.4048C224.724 24.2694 225.564 27.5009 225.564 31.0994C225.564 34.1297 225.008 36.6866 223.895 38.7699C222.782 40.8295 221.291 42.4867 219.421 43.7415C217.574 44.9725 215.538 45.8722 213.313 46.4403V47.1506C215.727 47.2689 218.083 48.0502 220.379 49.4943C222.7 50.9148 224.617 52.9389 226.132 55.5668C227.647 58.1946 228.405 61.3906 228.405 65.1548C228.405 68.8717 227.529 72.2098 225.777 75.169C224.049 78.1046 221.374 80.4366 217.752 82.1648C214.129 83.8693 209.501 84.7216 203.867 84.7216H175.99ZM186.963 75.3111H202.801C208.057 75.3111 211.821 74.2931 214.094 72.2571C216.367 70.2211 217.503 67.6761 217.503 64.6222C217.503 62.3258 216.923 60.2188 215.763 58.3011C214.603 56.3835 212.946 54.8565 210.791 53.7202C208.661 52.5838 206.128 52.0156 203.192 52.0156H186.963V75.3111ZM186.963 43.4574H201.665C204.127 43.4574 206.341 42.9839 208.306 42.0369C210.294 41.09 211.869 39.7642 213.029 38.0597C214.212 36.3314 214.804 34.2955 214.804 31.9517C214.804 28.9451 213.751 26.4238 211.644 24.3878C209.537 22.3518 206.305 21.3338 201.949 21.3338H186.963V43.4574Z" fill="#0A0B0D"/>
<path d="M253.441 85.929C249.985 85.929 246.86 85.2898 244.066 84.0114C241.273 82.7093 239.059 80.8272 237.426 78.3651C235.816 75.9029 235.011 72.8845 235.011 69.3097C235.011 66.232 235.603 63.6989 236.786 61.7102C237.97 59.7216 239.568 58.1473 241.58 56.9872C243.593 55.8272 245.842 54.9512 248.328 54.3594C250.813 53.7675 253.347 53.3177 255.927 53.0099C259.194 52.6312 261.846 52.3234 263.882 52.0867C265.918 51.8262 267.397 51.4119 268.32 50.8438C269.244 50.2756 269.705 49.3523 269.705 48.0739V47.8253C269.705 44.724 268.829 42.321 267.078 40.6165C265.349 38.9119 262.769 38.0597 259.336 38.0597C255.761 38.0597 252.944 38.8527 250.884 40.4389C248.848 42.0014 247.44 43.7415 246.659 45.6591L236.68 43.3864C237.864 40.072 239.592 37.3968 241.865 35.3608C244.161 33.3011 246.801 31.8097 249.784 30.8864C252.767 29.9394 255.903 29.4659 259.194 29.4659C261.372 29.4659 263.68 29.7263 266.119 30.2472C268.581 30.7443 270.877 31.6676 273.008 33.017C275.162 34.3665 276.926 36.2959 278.299 38.8054C279.672 41.2912 280.359 44.5227 280.359 48.5V84.7216H269.99V77.2642H269.563C268.877 78.6373 267.847 79.9867 266.474 81.3125C265.101 82.6383 263.337 83.7391 261.183 84.6151C259.028 85.491 256.448 85.929 253.441 85.929ZM255.749 77.4062C258.685 77.4062 261.195 76.8262 263.278 75.6662C265.385 74.5062 266.983 72.991 268.072 71.1207C269.185 69.2268 269.741 67.2027 269.741 65.0483V58.017C269.362 58.3958 268.628 58.7509 267.539 59.0824C266.474 59.3902 265.255 59.6624 263.882 59.8992C262.508 60.1122 261.171 60.3134 259.869 60.5028C258.567 60.6686 257.478 60.8106 256.602 60.929C254.542 61.1894 252.66 61.6274 250.955 62.2429C249.275 62.8584 247.925 63.7462 246.907 64.9062C245.913 66.0426 245.416 67.5578 245.416 69.4517C245.416 72.0795 246.386 74.0682 248.328 75.4176C250.269 76.7434 252.743 77.4062 255.749 77.4062Z" fill="#0A0B0D"/>
<path d="M332.375 43.4929L322.751 45.1974C322.349 43.9664 321.71 42.7945 320.834 41.6818C319.981 40.5691 318.821 39.6577 317.354 38.9474C315.886 38.2372 314.051 37.8821 311.849 37.8821C308.843 37.8821 306.333 38.5568 304.321 39.9062C302.309 41.232 301.302 42.9484 301.302 45.0554C301.302 46.8783 301.977 48.3461 303.327 49.4588C304.676 50.5715 306.854 51.483 309.861 52.1932L318.525 54.1818C323.544 55.3419 327.285 57.1293 329.747 59.544C332.209 61.9588 333.44 65.0956 333.44 68.9545C333.44 72.2216 332.493 75.1335 330.599 77.6903C328.729 80.2235 326.113 82.2121 322.751 83.6562C319.413 85.1004 315.542 85.8224 311.139 85.8224C305.031 85.8224 300.048 84.5204 296.189 81.9162C292.33 79.2884 289.962 75.5597 289.086 70.7301L299.349 69.1676C299.988 71.8428 301.302 73.867 303.291 75.2401C305.28 76.5895 307.872 77.2642 311.068 77.2642C314.548 77.2642 317.33 76.5421 319.413 75.098C321.497 73.6302 322.538 71.8428 322.538 69.7358C322.538 68.0313 321.899 66.599 320.621 65.4389C319.366 64.2789 317.436 63.4029 314.832 62.8111L305.599 60.7869C300.509 59.6269 296.745 57.7803 294.307 55.2472C291.892 52.714 290.684 49.5062 290.684 45.6236C290.684 42.4039 291.584 39.5866 293.383 37.1719C295.183 34.7571 297.668 32.875 300.841 31.5256C304.013 30.1525 307.647 29.4659 311.743 29.4659C317.638 29.4659 322.278 30.7443 325.663 33.3011C329.049 35.8343 331.286 39.2315 332.375 43.4929Z" fill="#0A0B0D"/>
<path d="M365.623 85.8224C360.249 85.8224 355.621 84.6742 351.738 82.3778C347.879 80.0578 344.896 76.8026 342.789 72.6122C340.706 68.3982 339.664 63.4621 339.664 57.804C339.664 52.2169 340.706 47.2926 342.789 43.0312C344.896 38.7699 347.832 35.4437 351.596 33.0526C355.384 30.6615 359.811 29.4659 364.877 29.4659C367.955 29.4659 370.938 29.9749 373.826 30.9929C376.714 32.0109 379.307 33.6089 381.603 35.7869C383.9 37.965 385.711 40.794 387.036 44.2742C388.362 47.7306 389.025 51.9328 389.025 56.8807V60.6449H345.666V52.6903H378.62C378.62 49.8968 378.052 47.4228 376.916 45.2685C375.779 43.0904 374.181 41.3741 372.122 40.1193C370.086 38.8646 367.695 38.2372 364.948 38.2372C361.965 38.2372 359.361 38.9711 357.136 40.4389C354.934 41.8831 353.23 43.777 352.022 46.1207C350.838 48.4408 350.247 50.9621 350.247 53.6847V59.8992C350.247 63.545 350.886 66.6463 352.164 69.2031C353.466 71.7599 355.277 73.7131 357.597 75.0625C359.918 76.3883 362.628 77.0511 365.73 77.0511C367.742 77.0511 369.577 76.767 371.234 76.1989C372.891 75.607 374.323 74.7311 375.531 73.571C376.738 72.411 377.661 70.9787 378.301 69.2742L388.35 71.0852C387.545 74.0445 386.101 76.6368 384.018 78.8622C381.958 81.0639 379.366 82.7803 376.241 84.0114C373.14 85.2188 369.6 85.8224 365.623 85.8224Z" fill="#0A0B0D"/>
<path d="M438.324 31.0994C437.946 27.7377 436.383 25.1335 433.637 23.2869C430.891 21.4167 427.434 20.4815 423.268 20.4815C420.285 20.4815 417.704 20.955 415.526 21.902C413.348 22.8253 411.655 24.1037 410.448 25.7372C409.264 27.3471 408.672 29.1818 408.672 31.2415C408.672 32.9697 409.075 34.4612 409.88 35.7159C410.708 36.9706 411.786 38.0241 413.111 38.8764C414.461 39.705 415.905 40.4034 417.444 40.9716C418.983 41.5161 420.462 41.9659 421.883 42.321L428.985 44.1676C431.305 44.7358 433.684 45.5052 436.123 46.4759C438.561 47.4465 440.822 48.7249 442.905 50.3111C444.989 51.8973 446.67 53.8622 447.948 56.206C449.25 58.5497 449.901 61.3551 449.901 64.6222C449.901 68.7415 448.836 72.3991 446.705 75.5952C444.598 78.7912 441.532 81.3125 437.508 83.1591C433.507 85.0057 428.665 85.929 422.983 85.929C417.538 85.929 412.827 85.0649 408.85 83.3366C404.873 81.6084 401.76 79.1581 399.51 75.9858C397.261 72.7898 396.019 69.0019 395.782 64.6222H406.79C407.003 67.25 407.856 69.4399 409.347 71.1918C410.862 72.92 412.792 74.2102 415.135 75.0625C417.503 75.8911 420.095 76.3054 422.912 76.3054C426.014 76.3054 428.772 75.8201 431.187 74.8494C433.625 73.8551 435.543 72.482 436.939 70.7301C438.336 68.9545 439.035 66.883 439.035 64.5156C439.035 62.3613 438.419 60.5975 437.188 59.2244C435.981 57.8513 434.335 56.715 432.252 55.8153C430.192 54.9157 427.86 54.1226 425.256 53.4361L416.662 51.0923C410.839 49.5062 406.222 47.1742 402.813 44.0966C399.428 41.0189 397.735 36.947 397.735 31.8807C397.735 27.6903 398.871 24.0327 401.144 20.9077C403.417 17.7827 406.494 15.3561 410.377 13.6278C414.26 11.8759 418.639 11 423.516 11C428.44 11 432.785 11.8641 436.549 13.5923C440.337 15.3206 443.32 17.6998 445.498 20.7301C447.676 23.7367 448.812 27.1932 448.907 31.0994H438.324Z" fill="#0A0B0D"/>
<path d="M482.137 85.8224C476.858 85.8224 472.312 84.6269 468.501 82.2358C464.713 79.821 461.801 76.4948 459.765 72.2571C457.729 68.0194 456.711 63.1662 456.711 57.6974C456.711 52.1577 457.753 47.2689 459.836 43.0312C461.919 38.7699 464.855 35.4437 468.643 33.0526C472.431 30.6615 476.893 29.4659 482.031 29.4659C486.174 29.4659 489.867 30.2353 493.11 31.7742C496.354 33.2893 498.97 35.42 500.958 38.1662C502.971 40.9124 504.166 44.1203 504.545 47.7898H494.211C493.643 45.233 492.341 43.0313 490.305 41.1847C488.293 39.3381 485.594 38.4148 482.208 38.4148C479.249 38.4148 476.657 39.196 474.431 40.7585C472.23 42.2974 470.513 44.4991 469.282 47.3636C468.051 50.2045 467.436 53.5663 467.436 57.4489C467.436 61.4261 468.039 64.8589 469.247 67.7472C470.454 70.6354 472.159 72.8726 474.36 74.4588C476.586 76.045 479.202 76.8381 482.208 76.8381C484.221 76.8381 486.044 76.4711 487.677 75.7372C489.334 74.9796 490.719 73.9025 491.832 72.5057C492.968 71.1089 493.761 69.428 494.211 67.4631H504.545C504.166 70.9905 503.018 74.1392 501.1 76.9091C499.183 79.679 496.614 81.857 493.394 83.4432C490.198 85.0294 486.446 85.8224 482.137 85.8224Z" fill="#0A0B0D"/>
<path d="M528.773 85.929C525.317 85.929 522.192 85.2898 519.398 84.0114C516.605 82.7093 514.391 80.8272 512.758 78.3651C511.148 75.9029 510.343 72.8845 510.343 69.3097C510.343 66.232 510.935 63.6989 512.118 61.7102C513.302 59.7216 514.9 58.1473 516.912 56.9872C518.925 55.8272 521.174 54.9512 523.66 54.3594C526.145 53.7675 528.679 53.3177 531.259 53.0099C534.526 52.6312 537.178 52.3234 539.214 52.0867C541.25 51.8262 542.729 51.4119 543.653 50.8438C544.576 50.2756 545.037 49.3523 545.037 48.0739V47.8253C545.037 44.724 544.162 42.321 542.41 40.6165C540.681 38.9119 538.101 38.0597 534.668 38.0597C531.093 38.0597 528.276 38.8527 526.216 40.4389C524.18 42.0014 522.772 43.7415 521.991 45.6591L512.012 43.3864C513.196 40.072 514.924 37.3968 517.197 35.3608C519.493 33.3011 522.133 31.8097 525.116 30.8864C528.099 29.9394 531.235 29.4659 534.526 29.4659C536.704 29.4659 539.012 29.7263 541.451 30.2472C543.913 30.7443 546.209 31.6676 548.34 33.017C550.494 34.3665 552.258 36.2959 553.631 38.8054C555.004 41.2912 555.691 44.5227 555.691 48.5V84.7216H545.322V77.2642H544.895C544.209 78.6373 543.179 79.9867 541.806 81.3125C540.433 82.6383 538.669 83.7391 536.515 84.6151C534.36 85.491 531.78 85.929 528.773 85.929ZM531.082 77.4062C534.017 77.4062 536.527 76.8262 538.61 75.6662C540.717 74.5062 542.315 72.991 543.404 71.1207C544.517 69.2268 545.073 67.2027 545.073 65.0483V58.017C544.694 58.3958 543.96 58.7509 542.871 59.0824C541.806 59.3902 540.587 59.6624 539.214 59.8992C537.84 60.1122 536.503 60.3134 535.201 60.5028C533.899 60.6686 532.81 60.8106 531.934 60.929C529.874 61.1894 527.992 61.6274 526.287 62.2429C524.607 62.8584 523.257 63.7462 522.239 64.9062C521.245 66.0426 520.748 67.5578 520.748 69.4517C520.748 72.0795 521.718 74.0682 523.66 75.4176C525.601 76.7434 528.075 77.4062 531.082 77.4062Z" fill="#0A0B0D"/>
<path d="M577.451 52.3352V84.7216H566.833V30.1761H577.025V39.054H577.7C578.954 36.1657 580.919 33.8456 583.595 32.0938C586.293 30.3419 589.691 29.4659 593.786 29.4659C597.503 29.4659 600.758 30.2472 603.552 31.8097C606.346 33.3485 608.512 35.6449 610.051 38.6989C611.589 41.7528 612.359 45.5289 612.359 50.027V84.7216H601.741V51.3054C601.741 47.3518 600.711 44.2623 598.651 42.0369C596.592 39.7879 593.763 38.6634 590.164 38.6634C587.702 38.6634 585.512 39.196 583.595 40.2614C581.701 41.3267 580.197 42.8892 579.085 44.9489C577.996 46.9848 577.451 49.447 577.451 52.3352Z" fill="#0A0B0D"/>
<path d="M32.856 73.722C32.8562 72.8665 33.0253 72.0195 33.3538 71.2295C33.6822 70.4396 34.1634 69.7223 34.7698 69.1188C35.3762 68.5154 36.0958 68.0376 36.8873 67.713C37.6789 67.3884 38.5267 67.2234 39.3822 67.2274L50.2024 67.2626C51.9276 67.2626 53.5821 67.948 54.802 69.1678C56.0218 70.3877 56.7072 72.0422 56.7072 73.7674V114.68C57.9252 114.319 59.4897 113.933 61.2015 113.53C62.3906 113.251 63.4504 112.578 64.2089 111.621C64.9674 110.663 65.38 109.478 65.3798 108.256V57.5055C65.3798 55.7802 66.065 54.1256 67.2848 52.9055C68.5047 51.6855 70.1592 50.9999 71.8845 50.9995H82.7261C84.4514 50.9999 86.1059 51.6855 87.3258 52.9055C88.5456 54.1256 89.2309 55.7802 89.2309 57.5055V104.607C89.2309 104.607 91.9454 103.509 94.5894 102.393C95.5716 101.977 96.4097 101.282 96.9993 100.393C97.5889 99.5045 97.9038 98.462 97.9047 97.3955V41.2437C97.9047 39.5187 98.5898 37.8644 99.8094 36.6446C101.029 35.4247 102.683 34.7393 104.408 34.7389H115.25C116.975 34.7389 118.63 35.4243 119.849 36.6441C121.069 37.864 121.755 39.5185 121.755 41.2437V87.4835C131.154 80.6714 140.679 72.4788 148.238 62.6272C149.335 61.1972 150.061 59.5181 150.35 57.7396C150.64 55.9611 150.485 54.1384 149.9 52.4343C146.401 42.367 140.839 33.141 133.57 25.3467C126.301 17.5524 117.484 11.3614 107.685 7.16992C97.886 2.97846 87.3197 0.878835 76.6625 1.0054C66.0053 1.13196 55.4918 3.48194 45.795 7.90493C36.0981 12.3279 27.4313 18.7265 20.3493 26.6913C13.2673 34.656 7.92599 44.0115 4.66718 54.159C1.40838 64.3066 0.303866 75.0226 1.42431 85.6215C2.54475 96.2205 5.86549 106.469 11.174 115.711C12.0988 117.305 13.4592 118.602 15.0956 119.45C16.7321 120.298 18.5764 120.661 20.4121 120.497C22.4628 120.317 25.0161 120.061 28.0518 119.705C29.3733 119.555 30.5934 118.924 31.4796 117.932C32.3658 116.941 32.8562 115.658 32.8573 114.328V73.722" fill="#0A0B0D"/>
<path d="M32.856 73.722C32.8562 72.8665 33.0253 72.0195 33.3538 71.2295C33.6822 70.4396 34.1634 69.7223 34.7698 69.1188C35.3762 68.5154 36.0958 68.0376 36.8873 67.713C37.6789 67.3884 38.5267 67.2234 39.3822 67.2274L50.2024 67.2626C51.9276 67.2626 53.5821 67.948 54.802 69.1678C56.0218 70.3877 56.7072 72.0422 56.7072 73.7674V114.68C57.9252 114.319 59.4897 113.933 61.2015 113.53C62.3906 113.251 63.4504 112.578 64.2089 111.621C64.9674 110.663 65.38 109.478 65.3798 108.256V57.5055C65.3798 55.7802 66.065 54.1256 67.2848 52.9055C68.5047 51.6855 70.1592 50.9999 71.8845 50.9995H82.7261C84.4514 50.9999 86.1059 51.6855 87.3258 52.9055C88.5456 54.1256 89.2309 55.7802 89.2309 57.5055V104.607C89.2309 104.607 91.9454 103.509 94.5894 102.393C95.5716 101.977 96.4097 101.282 96.9993 100.393C97.5889 99.5045 97.9038 98.462 97.9047 97.3955V41.2437C97.9047 39.5187 98.5898 37.8644 99.8094 36.6446C101.029 35.4247 102.683 34.7393 104.408 34.7389H115.25C116.975 34.7389 118.63 35.4243 119.849 36.6441C121.069 37.864 121.755 39.5185 121.755 41.2437V87.4835C131.154 80.6714 140.679 72.4788 148.238 62.6272C149.335 61.1972 150.061 59.5181 150.35 57.7396C150.64 55.9611 150.485 54.1384 149.9 52.4343C146.401 42.367 140.839 33.141 133.57 25.3467C126.301 17.5524 117.484 11.3614 107.685 7.16992C97.886 2.97846 87.3197 0.878835 76.6625 1.0054C66.0053 1.13196 55.4918 3.48194 45.795 7.90493C36.0981 12.3279 27.4313 18.7265 20.3493 26.6913C13.2673 34.656 7.92599 44.0115 4.66718 54.159C1.40838 64.3066 0.303866 75.0226 1.42431 85.6215C2.54475 96.2205 5.86549 106.469 11.174 115.711C12.0988 117.305 13.4592 118.602 15.0956 119.45C16.7321 120.298 18.5764 120.661 20.4121 120.497C22.4628 120.317 25.0161 120.061 28.0518 119.705C29.3733 119.555 30.5934 118.924 31.4796 117.932C32.3658 116.941 32.8562 115.658 32.8573 114.328V73.722" stroke="white"/>
<path d="M32.6191 139.343C44.047 147.657 57.5522 152.647 71.6404 153.761C85.7285 154.876 99.8504 152.071 112.443 145.658C125.036 139.244 135.61 129.471 142.993 117.421C150.376 105.371 154.282 91.5134 154.278 77.3813C154.278 75.6178 154.196 73.8732 154.079 72.1386C126.091 113.88 74.415 133.395 32.6217 139.336" fill="#C0D0DB"/>
</svg>

'''
'''--- frontend/public/next.svg ---
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
'''
'''--- frontend/public/vercel.svg ---
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 283 64"><path fill="black" d="M141 16c-11 0-19 7-19 18s9 18 20 18c7 0 13-3 16-7l-7-5c-2 3-6 4-9 4-5 0-9-3-10-7h28v-3c0-11-8-18-19-18zm-9 15c1-4 4-7 9-7s8 3 9 7h-18zm117-15c-11 0-19 7-19 18s9 18 20 18c6 0 12-3 16-7l-8-5c-2 3-5 4-8 4-5 0-9-3-11-7h28l1-3c0-11-8-18-19-18zm-10 15c2-4 5-7 10-7s8 3 9 7h-19zm-39 3c0 6 4 10 10 10 4 0 7-2 9-5l8 5c-3 5-9 8-17 8-11 0-19-7-19-18s8-18 19-18c8 0 14 3 17 8l-8 5c-2-3-5-5-9-5-6 0-10 4-10 10zm83-29v46h-9V5h9zM37 0l37 64H0L37 0zm92 5-27 48L74 5h10l18 30 17-30h10zm59 12v10l-3-1c-6 0-10 4-10 10v15h-9V17h9v9c0-5 6-9 13-9z"/></svg>
'''
'''--- frontend/tailwind.config.ts ---
import type { Config } from "tailwindcss";
const { fontFamily } = require("tailwindcss/defaultTheme");
const colors = require("tailwindcss/colors");
const { default: flattenColorPalette } = require("tailwindcss/lib/util/flattenColorPalette");
const svgToDataUri = require("mini-svg-data-uri");

const config = {
  darkMode: ["class"],
  content: ["./pages/**/*.{ts,tsx}", "./components/**/*.{ts,tsx}", "./app/**/*.{ts,tsx}", "./src/**/*.{ts,tsx}"],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      fontFamily: {
        sans: ["var(--font-sans)", ...fontFamily.sans],
      },
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
        shimmer: {
          from: {
            backgroundPosition: "0 0",
          },
          to: {
            backgroundPosition: "-200% 0",
          },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
        shimmer: "shimmer 2s linear infinite",
      },
    },
  },
  plugins: [
    require("tailwindcss-animate"),
    addVariablesForColors,
    function ({ matchUtilities, theme }: any) {
      matchUtilities(
        {
          "bg-grid": (value: any) => ({
            backgroundImage: `url("${svgToDataUri(
              `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="32" height="32" fill="none" stroke="${value}"><path d="M0 .5H31.5V32"/></svg>`
            )}")`,
          }),
          "bg-grid-small": (value: any) => ({
            backgroundImage: `url("${svgToDataUri(
              `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="8" height="8" fill="none" stroke="${value}"><path d="M0 .5H31.5V32"/></svg>`
            )}")`,
          }),
          "bg-dot": (value: any) => ({
            backgroundImage: `url("${svgToDataUri(
              `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="16" height="16" fill="none"><circle fill="${value}" id="pattern-circle" cx="10" cy="10" r="1.6257413380501518"></circle></svg>`
            )}")`,
          }),
        },
        { values: flattenColorPalette(theme("backgroundColor")), type: "color" }
      );
    },
  ],
} satisfies Config;

function addVariablesForColors({ addBase, theme }: any) {
  let allColors = flattenColorPalette(theme("colors"));
  let newVars = Object.fromEntries(Object.entries(allColors).map(([key, val]) => [`--${key}`, val]));

  addBase({
    ":root": newVars,
  });
}

export default config;

'''
'''--- frontend/tsconfig.json ---
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "target": "esnext",
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

'''
'''--- frontend/wagmi.config.ts ---
import { defineConfig } from "@wagmi/cli";
import { foundry, react } from "@wagmi/cli/plugins";

export default defineConfig({
  out: "lib/generated-react.ts",
  contracts: [],
  plugins: [
    react(),
    foundry({
      forge: {
        build: false,
        clean: false,
      },
      project: "../contracts",
      deployments: {
        DAOToken: {
          84532: "0x1e4b432b90903ea6048a30c39d634b48d81ea538",
        },
        DAOGovernor: {
          84532: "0xe392FAc4a899E1d3c6a21bb4E0800B93149Cee7f",
        },
        AWBRegistry: {
          84532: "0x8aB1d92130774f55CE93222f62F2e213366e24a7",
        },
      },
      include: ["DAOToken.json", "DAOGovernor.json", "AWBRegistry.json"],
      exclude: [],
    }),
  ],
});

'''