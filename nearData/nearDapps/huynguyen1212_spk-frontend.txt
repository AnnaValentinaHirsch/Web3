*GitHub Repository "huynguyen1212/spk-frontend"*

'''--- README.md ---
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `yarn start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `yarn test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `yarn build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `yarn eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

'''
'''--- internals/generators/components/index.js ---
/**
 * Component Generator
 */

/* eslint strict: ["off"] */

"use strict";

module.exports = {
  description: "Add an unconnected component",
  prompts: [
    {
      type: "input",
      name: "name",
      message: "What should it be called?",
      default: "Button",
    },
    {
      type: "input",
      name: "path",
      default: "",
      message: "What is path of component ?",
    },
  ],
  actions: (data) => {
    const actions = [
      {
        type: "add",
        path: `../../src/components/${
          data.path ? data.path + "/" : ""
        }{{properCase name}}/index.tsx`,
        templateFile: "./components/index.tsx.hbs",
        abortOnFail: true,
      },
    ];
    return actions;
  },
};

'''
'''--- internals/generators/containers/index.js ---
/**
 * Container Generator
 */

module.exports = {
  description: "Add a container component",
  prompts: [
    {
      type: "input",
      name: "name",
      message: "What should it be called?",
      default: "Home",
    },
    {
      type: "input",
      name: "path",
      default: "",
      message: "What is path ?",
    },
  ],
  actions: (data) => {
    const path = `../../src/containers/${
      data.path ? data.path + "/" : ""
    }{{properCase name}}`;

    const actions = [
      {
        type: "add",
        path: path + "/index.tsx",
        templateFile: "./containers/index.tsx.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/reducers.ts",
        templateFile: "./containers/reducers.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/message-trans.ts",
        templateFile: "./containers/message-trans.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/actions.ts",
        templateFile: "./containers/actions.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/constants.ts",
        templateFile: "./containers/constants.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/types.ts",
        templateFile: "./containers/types.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/store/selecters.ts",
        templateFile: "./containers/selecters.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "add",
        path: path + "/style/index.ts",
        templateFile: "./containers/styles-styled.ts.hbs",
        abortOnFail: true,
      },
      {
        type: "modify",
        path: "../../src/redux/root-reducers.ts",
       pattern: new RegExp(/.*\/\/.*\[IMPORT NEW CONTAINERSTATE ABOVE\].+\n/),
        templateFile: "./containers/importReducer.hbs",
        abortOnFail: true,
      },
      {
        type: "modify",
        path: "../../src/redux/root-reducers.ts",
        pattern: new RegExp(/.*\/\/.*\[INSERT NEW REDUCER KEY ABOVE\].+\n/),
        templateFile: "./containers/combinesReducer.hbs",
        abortOnFail: true,
      },
    ];

    return actions;
  },
};

'''
'''--- internals/generators/index.js ---
/**
 * generator/index.js
 *
 * Exports the generators so plop knows them
 */

const componentGenerator = require("./components/index.js");
const containerGenerator = require("./containers/index.js");

module.exports = (plop) => {
  plop.setGenerator("component", componentGenerator);
  plop.setGenerator("container", containerGenerator);
};

'''
'''--- internals/scripts/extract-language.js ---

'''
'''--- package.json ---
{
  "name": "my-app",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@near-wallet-selector/core": "^7.2.0",
    "@near-wallet-selector/ledger": "^7.2.0",
    "@near-wallet-selector/math-wallet": "^7.2.0",
    "@near-wallet-selector/meteor-wallet": "^7.2.0",
    "@near-wallet-selector/modal-ui": "^7.2.0",
    "@near-wallet-selector/my-near-wallet": "^7.2.0",
    "@near-wallet-selector/near-wallet": "^7.2.0",
    "@near-wallet-selector/nightly": "^7.2.0",
    "@near-wallet-selector/nightly-connect": "^7.2.0",
    "@near-wallet-selector/sender": "^7.2.0",
    "@near-wallet-selector/wallet-connect": "^7.2.0",
    "antd": "^4.24.2",
    "axios": "^0.21.1",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "near-api-js": "^0.44.2",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-hook-form": "^6.8.4",
    "react-intl": "^5.8.2",
    "react-redux": "^7.2.1",
    "react-router-dom": "^5.3.0",
    "react-scripts": "4.0.3",
    "react-slick": "^0.29.0",
    "redux": "^4.0.5",
    "redux-thunk": "^2.3.0",
    "regenerator-runtime": "^0.13.11",
    "slick-carousel": "^1.8.1",
    "styled-bootstrap-grid": "^3.1.2",
    "styled-components": "^5.2.0",
    "sweetalert2": "^10.3.0",
    "typesafe-actions": "^5.1.0",
    "typescript": "^4.1.2",
    "web-vitals": "^1.0.1"
  },
  "scripts": {
    "generate": "plop --plopfile internals/generators/index.js",
    "extract": "extract-messages --flat=true -d=vi --locales=en,vi --output src/assets/languages 'src/**/message*.ts'",
    "start": "react-scripts start",
    "dev": "concurrently --kill-others \"./node_modules/.bin/json-server --watch fake-api/db.js --port 3001 --static fake-api/static --delay 1000\" \"react-scripts start\"",
    "build": "GENERATE_SOURCEMAP=false react-scripts build",
    "test": "react-scripts test"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@formatjs/cli": "^2.11.3",
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^11.1.0",
    "@testing-library/user-event": "^12.1.10",
    "@types/jest": "^26.0.15",
    "@types/node": "^12.0.0",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-redux": "^7.1.9",
    "@types/react-router-dom": "^5.1.5",
    "@types/react-slick": "^0.23.10",
    "@types/styled-components": "^5.1.3",
    "babel-plugin-react-intl": "^8.2.3",
    "babel-plugin-styled-components": "^1.12.0",
    "concurrently": "6.0.0",
    "json-server": "0.16.3",
    "near-cli": "^3.4.2",
    "plop": "^2.7.4",
    "ts-loader": "^8.0.4",
    "typescript": "^4.0.3"
  }
}

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

'''
'''--- public/manifest.json ---
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- server.js ---
const express = require('express');
const path = require('path');
const dotenv = require('dotenv');
const cors = require('cors');

const app = express();

dotenv.config({
  path: path.resolve(__dirname, `.env`),
});

app.use(cors());
app.use(express.static('build'));

app.get('*', (req, res) => {
  res.sendFile(path.resolve(__dirname, 'build', 'index.html'));
});

const port = process.env.PORT || 6061;

console.log('' + new Date().toLocaleTimeString() + ': port', port);

app.listen(port, () => console.log(`Server running on ${port}`));

'''
'''--- src/api/axios.ts ---
import axios, { AxiosRequestConfig } from 'axios';
import store from 'redux/store';
import { changeLoading } from 'containers/App/store/actions';

// define common config for Axios
const instanceAxios = {
  baseURL: process.env.REACT_APP_API,
};

const axiosConfig = axios.create(instanceAxios);

const request = ({ method, url, data, ...rest }: AxiosRequestConfig) =>
  axiosConfig({
    method: method,
    url: url,
    data: data,
    ...rest,
  });

const requestToken = ({ method, url, data, ...rest }: AxiosRequestConfig) => {
  const token = JSON.parse(localStorage.getItem('token') ?? '{}');

  return axiosConfig({
    method: method,
    url: url,
    data: data,
    headers: {
      Authorization: `Bearer ${token}`,
    },
    ...rest,
  });
};

const axiosConfigInter = axios.create(instanceAxios);

// Add a request interceptor
axiosConfigInter.interceptors.request.use(
  function (config) {
    // Do something before request is sent
    store.dispatch(changeLoading(true));
    return config;
  },
  function (error) {
    // Do something with request error
    store.dispatch(changeLoading(false));
    return Promise.reject(error);
  },
);

// Add a response interceptor
axiosConfigInter.interceptors.response.use(
  function (response) {
    store.dispatch(changeLoading(false));
    return response;
  },
  function (error) {
    store.dispatch(changeLoading(false));
    return Promise.reject(error);
  },
);

const requestInter = ({ method, url, data, ...rest }: AxiosRequestConfig) =>
  axiosConfigInter({
    method: method,
    url: url,
    data: data,
    ...rest,
  });

const requestInterToken = ({
  method,
  url,
  data,
  ...rest
}: AxiosRequestConfig) => {
  const token = JSON.parse(localStorage.getItem('token') ?? '{}');

  return axiosConfigInter({
    method: method,
    url: url,
    data: data,
    headers: {
      Authorization: `Bearer ${token}`,
    },
    ...rest,
  });
};

export { request, requestToken, requestInter, requestInterToken };

'''
'''--- src/api/url.ts ---
const API_URL = {
  USER: {
    LOGIN: 'user/login',
    USER_LIST: 'user/list',
    ME: 'user/me',
  },
  LANGUAGE: {
    GET: 'language',
    GET_DETAIL: (id: number) => `language/${id}}`,
  },
  TOPIC: {
    GET: 'topic',
    GET_DETAIL: (id: number) => `/topic/${id}}`,
  },
  BOOKING: {
    POST: 'booking',
    GET: 'booking',
    CONFIRM: 'booking/confirm',
  },
};

export default API_URL;

'''
'''--- src/assets/images/check-solid.svg ---
<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="check" class="svg-inline--fa fa-check fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"></path></svg>
'''
'''--- src/assets/images/home/preloader.svg ---
<svg width="64px"  height="64px"  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="lds-rolling" style="background: none;"><circle cx="50" cy="50" fill="none" ng-attr-stroke="{{config.color}}" ng-attr-stroke-width="{{config.width}}" ng-attr-r="{{config.radius}}" ng-attr-stroke-dasharray="{{config.dasharray}}" stroke="#454ab4" stroke-width="3" r="35" stroke-dasharray="164.93361431346415 56.97787143782138" transform="rotate(315.987 50 50)"><animateTransform attributeName="transform" type="rotate" calcMode="linear" values="0 50 50;360 50 50" keyTimes="0;1" dur="1.5s" begin="0s" repeatCount="indefinite"></animateTransform></circle></svg>
'''
'''--- src/assets/images/img-error.svg ---
<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 511.999 511.999" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve">
<path style="fill:#53515E;" d="M470.637,419.577H41.363c-18.472,0-33.446-14.974-33.446-33.446V45.215
	c0-18.472,14.974-33.446,33.446-33.446h429.275c18.472,0,33.446,14.974,33.446,33.446v340.916
	C504.084,404.603,489.109,419.577,470.637,419.577z"/>
<path style="fill:#6F4BEF;" d="M470.637,11.769H41.363c-18.472,0-33.446,14.975-33.446,33.446v46.983h493.902h2.265V45.215
	C504.084,26.743,489.109,11.769,470.637,11.769z"/>
<path style="fill:#474756;" d="M454.459,315.025H60.021c-16.897,0-30.595,13.698-30.595,30.595v71.755
	c3.708,1.418,7.73,2.202,11.937,2.202h429.275c5.163,0,10.051-1.172,14.416-3.26V345.62
	C485.054,328.723,471.356,315.025,454.459,315.025z"/>
<path style="fill:#FF6B5C;" d="M434.833,500.231H79.646c-15.216,0-27.551-12.335-27.551-27.551V361.006
	c0-15.216,12.335-27.551,27.551-27.551h355.187c15.216,0,27.551,12.335,27.551,27.551v111.675
	C462.384,487.897,450.049,500.231,434.833,500.231z"/>
<path style="fill:#FF5450;" d="M434.833,333.455h-16.629l0,0c0,72.433-58.719,131.152-131.152,131.152H52.096v8.074
	c0,15.216,12.335,27.551,27.551,27.551h355.187c15.216,0,27.551-12.335,27.551-27.551V361.006
	C462.384,345.79,450.049,333.455,434.833,333.455z"/>
<path d="M470.638,3.852H41.363C18.556,3.852,0,22.407,0,45.215v340.916c0,22.808,18.556,41.363,41.363,41.363h2.816v45.186
	c0,19.556,15.911,35.467,35.467,35.467h355.187c19.556,0,35.467-15.91,35.467-35.467v-45.186h0.337
	c22.808,0,41.362-18.556,41.362-41.363V45.215C512,22.407,493.445,3.852,470.638,3.852z M41.363,19.685h429.275
	c14.077,0,25.529,11.452,25.529,25.529V84.28H15.833V45.215C15.833,31.138,27.285,19.685,41.363,19.685z M470.638,411.661h-0.337
	v-50.656c0-19.556-15.911-35.467-35.467-35.467h-65.868V194.122c0-4.372-3.544-7.917-7.917-7.917s-7.917,3.544-7.917,7.917v131.416
	H137.274c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h297.56c10.827,0,19.634,8.807,19.634,19.634v111.676
	c0,10.827-8.807,19.634-19.634,19.634H79.646c-10.827,0-19.634-8.807-19.634-19.634V361.005c0-10.827,8.807-19.634,19.634-19.634
	h14.878c4.373,0,7.917-3.544,7.917-7.917s-3.544-7.917-7.917-7.917H79.646c-19.556,0-35.467,15.911-35.467,35.467v50.656h-2.816
	c-14.078,0-25.53-11.452-25.53-25.53V100.114h337.3v59.967c0,4.372,3.544,7.917,7.917,7.917s7.917-3.544,7.917-7.917v-59.967
	h127.201v286.017C496.167,400.209,484.715,411.661,470.638,411.661z"/>
<path d="M174.438,60.466h147.264c4.373,0,7.917-3.544,7.917-7.917s-3.544-7.917-7.917-7.917H174.438
	c-4.373,0-7.917,3.544-7.917,7.917S170.066,60.466,174.438,60.466z"/>
<circle cx="52.1" cy="52.55" r="7.5"/>
<circle cx="92.88" cy="52.55" r="7.5"/>
<circle cx="131.39" cy="52.55" r="7.5"/>
<circle cx="461.04" cy="52.55" r="7.5"/>
<path d="M111.4,377.796c-1.432,0.896-2.146,2.165-2.146,3.81v68.146c0,1.646,0.714,2.916,2.146,3.809
	c1.431,0.897,3.147,1.342,5.151,1.342h38.205c1.645,0,2.898-0.714,3.756-2.146c0.858-1.431,1.287-3.113,1.287-5.045
	c0-2.074-0.447-3.826-1.341-5.257c-0.896-1.431-2.13-2.146-3.703-2.146h-28.761v-18.244h16.097c1.645,0,2.898-0.644,3.756-1.932
	c0.859-1.287,1.287-2.753,1.287-4.401c0-1.787-0.447-3.326-1.341-4.614c-0.896-1.289-2.13-1.932-3.703-1.932h-16.097V391.05h28.761
	c1.573,0,2.807-0.715,3.703-2.146c0.894-1.431,1.341-3.183,1.341-5.259c0-1.932-0.43-3.612-1.287-5.044
	c-0.859-1.43-2.111-2.146-3.756-2.146H116.55C114.547,376.455,112.831,376.902,111.4,377.796z"/>
<path d="M169.564,453.56c1.645,0.897,3.612,1.342,5.902,1.342c2.289,0,4.256-0.445,5.902-1.342c1.645-0.893,2.469-2.163,2.469-3.809
	v-25.864h7.083l14.702,28.547c1.073,2.076,2.86,3.111,5.365,3.111c2.504,0,4.883-0.928,7.136-2.789
	c2.254-1.86,3.381-3.826,3.381-5.902c0-0.786-0.179-1.431-0.537-1.932l-13.092-23.717c8.656-3.362,12.985-10.625,12.985-21.785
	c0-15.31-8.8-22.965-26.4-22.965h-22.214c-1.502,0-2.737,0.501-3.703,1.502c-0.966,1.003-1.448,2.183-1.448,3.542v68.253
	C167.096,451.398,167.917,452.668,169.564,453.56z M183.837,391.05h10.624c3.148,0,5.544,0.769,7.191,2.307
	c1.645,1.539,2.468,4.096,2.468,7.673c0,3.578-0.823,6.135-2.468,7.673c-1.647,1.538-4.043,2.307-7.191,2.307h-10.624V391.05z"/>
<path d="M232.236,453.56c1.645,0.897,3.612,1.342,5.902,1.342c2.289,0,4.256-0.445,5.902-1.342c1.645-0.893,2.469-2.163,2.469-3.809
	v-25.864h7.083l14.702,28.547c1.073,2.076,2.861,3.111,5.365,3.111s4.883-0.928,7.136-2.789c2.254-1.86,3.381-3.826,3.381-5.902
	c0-0.786-0.179-1.431-0.537-1.932l-13.092-23.717c8.656-3.362,12.985-10.625,12.985-21.785c0-15.31-8.8-22.965-26.4-22.965h-22.214
	c-1.502,0-2.737,0.501-3.703,1.502c-0.966,1.003-1.448,2.183-1.448,3.542v68.253C229.768,451.398,230.59,452.668,232.236,453.56z
	 M246.509,391.05h10.623c3.148,0,5.544,0.769,7.191,2.307c1.645,1.539,2.468,4.096,2.468,7.673c0,3.578-0.823,6.135-2.468,7.673
	c-1.647,1.538-4.043,2.307-7.191,2.307h-10.623L246.509,391.05L246.509,391.05z"/>
<path d="M298.771,449.429c4.792,4.078,11.162,6.117,19.103,6.117c8.011,0,14.415-2.039,19.209-6.117
	c4.792-4.078,7.19-10.479,7.19-19.209v-28.439c0-8.727-2.398-15.131-7.19-19.209c-4.794-4.078-11.198-6.117-19.209-6.117
	c-7.941,0-14.311,2.039-19.103,6.117c-4.793,4.078-7.19,10.482-7.19,19.209v28.439C291.581,438.95,293.978,445.351,298.771,449.429z
	 M308.323,401.781c0-7.153,3.182-10.731,9.551-10.731c6.438,0,9.658,3.578,9.658,10.731v28.439c0,7.155-3.219,10.732-9.658,10.732
	c-6.369,0-9.551-3.577-9.551-10.732V401.781z"/>
<path d="M357.472,453.56c1.645,0.897,3.612,1.342,5.902,1.342c2.289,0,4.256-0.445,5.902-1.342c1.645-0.893,2.469-2.163,2.469-3.809
	v-25.864h7.083l14.702,28.547c1.073,2.076,2.86,3.111,5.365,3.111c2.504,0,4.883-0.928,7.136-2.789
	c2.254-1.86,3.381-3.826,3.381-5.902c0-0.786-0.179-1.431-0.537-1.932l-13.092-23.717c8.656-3.362,12.985-10.625,12.985-21.785
	c0-15.31-8.8-22.965-26.4-22.965h-22.214c-1.502,0-2.737,0.501-3.703,1.502c-0.966,1.003-1.448,2.183-1.448,3.542v68.253
	C355.004,451.398,355.825,452.668,357.472,453.56z M371.745,391.05h10.624c3.148,0,5.544,0.769,7.191,2.307
	c1.645,1.539,2.468,4.096,2.468,7.673c0,3.578-0.823,6.135-2.468,7.673c-1.647,1.538-4.043,2.307-7.191,2.307h-10.624V391.05z"/>
<circle cx="56.17" cy="133.96" r="7.917"/>
<path d="M87.572,141.873h103.663c4.373,0,7.917-3.544,7.917-7.917c0-4.372-3.544-7.917-7.917-7.917H87.572
	c-4.373,0-7.917,3.544-7.917,7.917C79.656,138.329,83.2,141.873,87.572,141.873z"/>
<path d="M471.619,118.123h-77.938c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h77.938
	c4.373,0,7.917-3.544,7.917-7.917C479.536,121.668,475.992,118.123,471.619,118.123z"/>
<path d="M471.619,152.165h-77.938c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h77.938
	c4.373,0,7.917-3.544,7.917-7.917C479.536,155.709,475.992,152.165,471.619,152.165z"/>
<path d="M471.619,186.206h-77.938c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h77.938
	c4.373,0,7.917-3.544,7.917-7.917C479.536,189.751,475.992,186.206,471.619,186.206z"/>
<path d="M471.619,220.247h-77.938c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h77.938
	c4.373,0,7.917-3.544,7.917-7.917C479.536,223.792,475.992,220.247,471.619,220.247z"/>
<path d="M471.619,254.289h-77.938c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h77.938
	c4.373,0,7.917-3.544,7.917-7.917C479.536,257.833,475.992,254.289,471.619,254.289z"/>
<path d="M471.619,288.33h-77.938c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h77.938c4.373,0,7.917-3.544,7.917-7.917
	S475.992,288.33,471.619,288.33z"/>
<circle cx="56.17" cy="167.21" r="7.917"/>
<path d="M87.572,175.123h54.402c4.373,0,7.917-3.544,7.917-7.917c0-4.372-3.544-7.917-7.917-7.917H87.572
	c-4.373,0-7.917,3.544-7.917,7.917C79.656,171.578,83.2,175.123,87.572,175.123z"/>
<circle cx="56.17" cy="265.37" r="7.917"/>
<path d="M169.472,257.456h-81.9c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h81.9c4.373,0,7.917-3.544,7.917-7.917
	S173.845,257.456,169.472,257.456z"/>
<circle cx="56.17" cy="297.83" r="7.917"/>
<path d="M169.472,289.914h-81.9c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h81.9c4.373,0,7.917-3.544,7.917-7.917
	S173.845,289.914,169.472,289.914z"/>
<path d="M224.639,257.456h-28.92c-4.373,0-7.917,3.544-7.917,7.917s3.544,7.917,7.917,7.917h28.92c4.373,0,7.917-3.544,7.917-7.917
	S229.011,257.456,224.639,257.456z"/>
<path d="M166.522,167.206c0,4.372,3.544,7.917,7.917,7.917h54.402c4.373,0,7.917-3.544,7.917-7.917c0-4.372-3.544-7.917-7.917-7.917
	h-54.402C170.066,159.29,166.522,162.834,166.522,167.206z"/>
<circle cx="56.17" cy="200.46" r="7.917"/>
<path d="M120.602,192.539c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h75.116
	c4.373,0,7.917-3.544,7.917-7.917c0-4.372-3.544-7.917-7.917-7.917H120.602z"/>
<circle cx="56.17" cy="232.12" r="7.917"/>
<path d="M257.606,224.206H120.602c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h137.004
	c4.373,0,7.917-3.544,7.917-7.917C265.523,227.75,261.979,224.206,257.606,224.206z"/>
<path d="M303.956,192.539H228.84c-4.373,0-7.917,3.544-7.917,7.917c0,4.372,3.544,7.917,7.917,7.917h75.116
	c4.373,0,7.917-3.544,7.917-7.917C311.873,196.084,308.329,192.539,303.956,192.539z"/>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
<g>
</g>
</svg>

'''
'''--- src/assets/languages/en.json ---
{
  "login.password": "",
  "login.phone": "",
  "login.test": ""
}

'''
'''--- src/assets/languages/vi.json ---
{
  "login.password": "mật khẩu",
  "login.phone": "số điện thoại",
  "login.test": "test"
}
'''
'''--- src/components/Call/jitsi.ts ---
export const jitsiApi = (api: string): Promise<void> => {
  return new Promise((resolve) => {
    const myWindow = window as any;
    if (myWindow.JitsiMeetExternalAPI) {
      resolve(myWindow.JitsiMeetExternalAPI);
    } else {
      const head = document.getElementsByTagName('head')[0];
      const script = document.createElement('script');

      script.setAttribute('type', 'text/javascript');
      script.setAttribute('src', api);

      head.addEventListener(
        'load',
        function (event: any) {
          if (event.target.nodeName === 'SCRIPT') {
            resolve(myWindow.JitsiMeetExternalAPI);
          }
        },
        true
      );

      head.appendChild(script);
    }
  });
};

'''
'''--- src/components/Loading/icon-loading.svg ---
<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<circle cx="84" cy="50" r="10" fill="#e15b64">
    <animate attributeName="r" repeatCount="indefinite" dur="0.25s" calcMode="spline" keyTimes="0;1" values="10;0" keySplines="0 0.5 0.5 1" begin="0s"></animate>
    <animate attributeName="fill" repeatCount="indefinite" dur="1s" calcMode="discrete" keyTimes="0;0.25;0.5;0.75;1" values="#e15b64;#abbd81;#f8b26a;#f47e60;#e15b64" begin="0s"></animate>
</circle><circle cx="16" cy="50" r="10" fill="#e15b64">
  <animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="0s"></animate>
  <animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="0s"></animate>
</circle><circle cx="50" cy="50" r="10" fill="#f47e60">
  <animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.25s"></animate>
  <animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.25s"></animate>
</circle><circle cx="84" cy="50" r="10" fill="#f8b26a">
  <animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.5s"></animate>
  <animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.5s"></animate>
</circle><circle cx="16" cy="50" r="10" fill="#abbd81">
  <animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.75s"></animate>
  <animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.75s"></animate>
</circle>
<!-- [ldio] generated by https://loading.io/ --></svg>
'''
'''--- src/configs/names.ts ---
const NAMES = {};

export default NAMES;

'''
'''--- src/containers/Advisors/store/actions.ts ---
/*
*
* Advisors actions
* make by huynq
*/
import * as types from './constants';
import { action } from 'typesafe-actions';

export const changeLogin = (val: boolean) => action(
 types.GET,
 val,
);
'''
'''--- src/containers/Advisors/store/constants.ts ---
/*
*
* Advisors constants
*  make by huynq
*/

export const GET = 'Advisors/GET';
'''
'''--- src/containers/Advisors/store/message-trans.ts ---
/*
 * Advisors  Messages
 *
 * This contains all the text for the Advisors component.
 */

import { defineMessages } from "react-intl";

export const scope = "Advisors";

export default defineMessages({
  title: {
    id: `${scope}.title`,
    defaultMessage: "title",
  }
});

'''
'''--- src/containers/Advisors/store/reducers.ts ---
/*
*
* Advisors reducers
* make by huynq
*/
import { Reducer } from 'redux';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as types from './constants';
import { ActionsAdvisors, StoreAdvisors } from "./types";

const initState : StoreAdvisors = { };

const reducersAdvisors : Reducer<StoreAdvisors, ActionsAdvisors> = (state = initState, actions: ActionsAdvisors) => {
switch (actions.type) {
default:
return { ...state };
}
};

export default reducersAdvisors;
'''
'''--- src/containers/Advisors/store/selecters.ts ---
/*
*
* Advisors selecters
* make by huynq
*/
import rootReducer from "redux/root-reducers";

export const selectAdvisorsStore = ((state: ReturnType<typeof rootReducer>) => state.Advisors)
'''
'''--- src/containers/Advisors/store/types.ts ---
/*
*
* Advisors types
* make by huynq
*/
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export interface StoreAdvisors {}

export type ActionsAdvisors = ActionType<typeof actions>;
'''
'''--- src/containers/Advisors/style/index.ts ---
/*
*
* Advisors style css file
* make by huynq
*/

import styled from 'styled-components';

const WrapAdvisors = styled.div``;

export default WrapAdvisors;
'''
'''--- src/containers/App/store/actions.ts ---
/*
 *
 * App actions
 *
 */
import * as types from './constants';
import { AppLanguage } from './types';
import { action } from 'typesafe-actions';

export const changeLanguage = (val: AppLanguage) => action(types.LANGUAGE, val);

export const changeLoading = (val: boolean) => action(types.LOADING, val);
export const getMe = (val: any) => action(types.ME, val);

export const setWallet = (val: any) => action(types.WALLET, val);
'''
'''--- src/containers/App/store/constants.ts ---
/*
 *
 * App constants
 *
 */

export const LANGUAGE = 'App/LANGUAGE';
export const LOADING = 'App/LOADING';
export const WALLET = 'App/WALLET';
export const ME = 'App/ME';
// export const LOADING = 'App/LOADING';

'''
'''--- src/containers/App/store/reducers.ts ---
/*
 *
 * App reducers
 *
 */
import { Reducer } from 'redux';
import * as types from './constants';
import { ActionsApp, AppStore } from './types';

const initState: AppStore = {
  lang: 'vi',
  loading: false,
  wallet: undefined,
  contracts: {
    app: undefined,
    token: undefined,
    staking: undefined,
  },
  me: {
    bio: undefined,
    bob: undefined,
    createdAt: undefined,
    deletedAt: undefined,
    email: undefined,
    gender: undefined,
    id: undefined,
    image: undefined,
    languages: undefined,
    name: undefined,
    phone: undefined,
    status: undefined,
    topics: undefined,
    type: undefined,
    updatedAt: undefined,
    walletAddress: undefined,
  },
};

const reducersApp: Reducer<AppStore, ActionsApp> = (
  state = initState,
  actions: ActionsApp,
) => {
  switch (actions.type) {
    case types.LOADING: {
      return { ...state, loading: actions.payload };
    }

    case types.LANGUAGE: {
      return { ...state, lang: actions.payload };
    }
    case types.WALLET: {
      return { ...state, wallet: actions.payload };
    }

    case types.ME: {
      return { ...state, me: actions.payload };
    }

    default:
      return { ...state };
  }
};

export default reducersApp;

'''
'''--- src/containers/App/store/selecters.ts ---
/*
 *
 * App selecters
 *
 */
import rootReducer from "redux/root-reducers";

export const selectAppStore = (state: ReturnType<typeof rootReducer>) =>
  state.App;

'''
'''--- src/containers/App/store/types.ts ---
/*
 *
 * App types
 *
 */
import { Wallet } from 'near-wallet';
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export type AppStore = {
  loading: boolean;
  lang: AppLanguage;
  wallet?: Wallet;
  contracts: {
    app: any;
    staking: any;
    token: any;
  };
  me: {
    bio: any;
    bob: any;
    createdAt: any;
    deletedAt: any;
    email: any;
    gender: any;
    id: any;
    image: any;
    languages: any;
    name: any;
    phone: any;
    status: any;
    topics: any;
    type: any;
    updatedAt: any;
    walletAddress: any;
  };
};

export type ActionsApp = ActionType<typeof actions>;

export type AppLanguage = 'vi' | 'en';

'''
'''--- src/containers/Booking/store/actions.ts ---
/*
 *
 * Booking actions
 * make by huynq
 */
import * as types from './constants';
import { action } from 'typesafe-actions';

export const changeLogin = (val: boolean) => action(types.GET, val);

export const getUsers = (val: any) => action(types.USER_LIST, val);

export const getBookings = (val: any) => action(types.BOOKING_LIST, val);

'''
'''--- src/containers/Booking/store/constants.ts ---
/*
 *
 * Booking constants
 *  make by huynq
 */

export const GET = 'Booking/GET';
export const USER_LIST = 'Booking/USER_LIST';
export const BOOKING_LIST = 'Booking/BOOKING_LIST';

'''
'''--- src/containers/Booking/store/message-trans.ts ---
/*
 * Booking  Messages
 *
 * This contains all the text for the Booking component.
 */

import { defineMessages } from "react-intl";

export const scope = "Booking";

export default defineMessages({
  title: {
    id: `${scope}.title`,
    defaultMessage: "title",
  }
});

'''
'''--- src/containers/Booking/store/reducers.ts ---
/*
 *
 * Booking reducers
 * make by huynq
 */
import { Reducer } from 'redux';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as types from './constants';
import { ActionsBooking, StoreBooking } from './types';

const initState: StoreBooking = {
  advisors: [],
  bookingList: [],
};

const reducersBooking: Reducer<StoreBooking, ActionsBooking> = (
  state = initState,
  actions: ActionsBooking,
) => {
  switch (actions.type) {
    case types.USER_LIST: {
      return {
        ...state,
        advisors: actions.payload,
      };
    }
    case types.BOOKING_LIST: {
      return {
        ...state,
        bookingList: actions.payload,
      };
    }
    default:
      return { ...state };
  }
};

export default reducersBooking;

'''
'''--- src/containers/Booking/store/selecters.ts ---
/*
 *
 * Booking selecters
 * make by huynq
 */
import rootReducer from 'redux/root-reducers';

export const selectBookingStore = (state: ReturnType<typeof rootReducer>) =>
  state.Booking;

'''
'''--- src/containers/Booking/store/types.ts ---
/*
 *
 * Booking types
 * make by huynq
 */
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export interface StoreBooking {
  advisors: any[];
  bookingList: any[];
}

export type ActionsBooking = ActionType<typeof actions>;

'''
'''--- src/containers/Booking/style/index.ts ---
/*
 *
 * Booking style css file
 * make by huynq
 */

import styled from 'styled-components';
import banner from 'assets/images/home/fogg-clip.png';

const WrapBooking = styled.div`
  .banner {
    padding: 1.5rem;
    background-image: url(${banner});
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    background-color: #e4f6fe;
    border-radius: 10px;

    margin-bottom: 30px;

    .title {
      font-weight: 400;
      font-size: 50px;
      margin-bottom: 0.5rem;
      line-height: 1.2;
      color: #111;
      margin-top: 0;
    }

    .title_lit {
      font-weight: 500;
      color: #adb5bd;
      margin-left: 0.25rem;
      margin-top: 0;
      margin-bottom: 0.5rem;
      line-height: 24px;
      font-size: 12px;
    }

    .banner_search {
      margin-bottom: 1rem;
      background-color: #fff;
      border: 1px solid #e1e1f0;
      border-color: #f7f7f7;
      border-radius: 0.3rem;
      padding: 0.5rem;
      margin-top: 1.5rem;

      .wrap_input {
        .input {
          display: flex;
          align-items: center;
          input {
            border: unset;
            height: 40px;
            margin-left: 5px;

            &:focus-visible {
              border: unset;
              outline: unset;
            }
          }
        }
      }

      .btn_search {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;

        button {
          height: 55px;
          line-height: 55px;
          letter-spacing: 1px;
          text-align: center;
          vertical-align: middle;
          cursor: pointer;
          user-select: none;
          border-radius: 0.25rem;
          transition: color 0.15s ease-in-out,
            background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
            box-shadow 0.15s ease-in-out;
          background-color: #05f;
          border: 0;
          width: 80%;
          color: #fff;
          text-transform: uppercase;
          font-size: 12px;
        }
      }
    }
  }

  .advisors {
    margin-bottom: 20px;

    .advisors_content {
      .item {
        margin-right: 10px;
        cursor: pointer;
        border-radius: 4px;
        border: 0;

        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #f0f0f0;
        background-clip: border-box;
        padding: 20px 0;

        .img {
          overflow: hidden;
          margin-bottom: 1rem;
          width: 100%;
          border-radius: 4px;

          img {
            vertical-align: middle;
            border-style: none;
            width: 100%;
          }
        }

        .item_infor {
          min-height: 1px;
          padding: 1.25rem;
          padding-top: 0;

          .name {
            margin-bottom: 0.5rem;
          }

          .desc {
            font-weight: 700;
            margin-top: 1rem;
            font-size: 16px;
            color: #111;
            line-height: 28px;
            margin-bottom: 0.5rem;
          }
        }

        .price {
          display: flex;
          justify-content: center;
          margin-bottom: 20px;
        }

        .date_picker {
          display: flex;
          justify-content: center;
          margin-bottom: 20px;
        }

        .booking {
          display: flex;
          justify-content: center;

          button {
            height: 35px;
            line-height: 40px;
            letter-spacing: 1px;
            text-align: center;
            vertical-align: middle;
            cursor: pointer;
            user-select: none;
            border-radius: 0.25rem;
            transition: color 0.15s ease-in-out,
              background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
              box-shadow 0.15s ease-in-out;
            background-color: #05f;
            border: 0;
            width: 80%;
            color: #fff;
            text-transform: uppercase;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
          }
        }
      }
    }
  }
`;

export default WrapBooking;

'''
'''--- src/containers/Home/data/index.ts ---
export const settingsTopic = {
  // autoplay: true,
  dots: false,
  infinite: true,
  speed: 500,
  slidesToShow: 7,
  slidesToScroll: 3,
  initialSlide: 0,
  responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 5,
        slidesToScroll: 5,
      },
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2,
        initialSlide: 2,
      },
    },
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
      },
    },
  ],
};

export const settingsLanguage = {
  dots: false,
  infinite: true,
  autoplay: true,
  speed: 500,
  slidesToShow: 4,
  slidesToScroll: 2,
  initialSlide: 0,
  responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 3,
      },
    },
  ],
};

'''
'''--- src/containers/Home/message.ts ---
/*
 *  Messages
 *
 * This contains all the text for the  component.
 */
import { defineMessages } from "react-intl";

export const scope = "login";

export default defineMessages({
  phone: {
    id: `${scope}.phone`,
    defaultMessage: "số điện thoại",
  },
  password: {
    id: `${scope}.password`,
    defaultMessage: "mật khẩu",
  },
  test: {
    id: `${scope}.test`,
    defaultMessage: "test",
  },
});

'''
'''--- src/containers/Home/store/actions.ts ---
/*
 *
 * Home actions
 */

import * as types from './constants';
import { action } from 'typesafe-actions';

export const getLanguages = (val: any) => action(types.LANGUAGE, val);

export const getTopics = (val: any) =>action(types.TOPIC, val);

'''
'''--- src/containers/Home/store/constants.ts ---
/*
 *
 * Home constants
 *
 */

export const LANGUAGE = 'HOME/LANGUAGE';
export const TOPIC = 'HOME/TOPIC';

'''
'''--- src/containers/Home/store/reducers.ts ---
/*
 *
 * Home reducers
 *
 */
import { Reducer } from 'redux';
import { ActionsHome, HomeStore } from './types';
import * as types from './constants';
import rootReducer from 'redux/root-reducers';

const initState: HomeStore = {
  languages: [],
  topics: [],
};

const reducersHome: Reducer<HomeStore, ActionsHome> = (
  state = initState,
  actions: ActionsHome,
) => {
  switch (actions.type) {
    case types.LANGUAGE: {
      return {
        ...state,
        languages: actions.payload,
      };
    }
    case types.TOPIC: {
      return {
        ...state,
        topics: actions.payload,
      };
    }
    default:
      return { ...state };
  }
};

export default reducersHome;

export const selectHomeStore = (state: ReturnType<typeof rootReducer>) =>
  state.Home;

'''
'''--- src/containers/Home/store/types.ts ---
import * as actions from './actions';
import { ActionType } from 'typesafe-actions';

export interface HomeStore {
  languages: any[];
  topics:  any[];
}

export type ActionsHome = ActionType<typeof actions>;

'''
'''--- src/containers/Home/styles/index.ts ---
import styled from 'styled-components';
import banner from 'assets/images/home/fogg-clip.png';

export const SHome = styled.div`
  .banner {
    padding: 1.5rem;
    background-image: url(${banner});
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    background-color: #e4f6fe;
    border-radius: 10px;

    margin-bottom: 30px;

    .title {
      font-weight: 400;
      font-size: 50px;
      margin-bottom: 0.5rem;
      line-height: 1.2;
      color: #111;
      margin-top: 0;
    }

    .title_lit {
      font-weight: 500;
      color: #adb5bd;
      margin-left: 0.25rem;
      margin-top: 0;
      margin-bottom: 0.5rem;
      line-height: 24px;
      font-size: 12px;
    }

    .banner_search {
      margin-bottom: 1rem;
      background-color: #fff;
      border: 1px solid #e1e1f0;
      border-color: #f7f7f7;
      border-radius: 0.3rem;
      padding: 1rem;
      margin-top: 1.5rem;

      .wrap_input {
        display: flex;
        align-items: center;
        justify-content: space-between;

        .input {
          display: flex;
          align-items: center;
          input {
            border: unset;
            height: 40px;
            margin-left: 5px;

            &:focus-visible {
              border: unset;
              outline: unset;
            }
          }
        }

        .select_input {
          display: flex;
          align-items: center;

          select {
            line-height: 55px;
            height: 55px;
            width: 100%;
            font-size: 14px;
            font-weight: 500;
            color: #adb5bd;
            padding-left: 3rem;
            border: 0;
            margin: 0;
            outline: 0;
          }
        }
      }

      .btn_search {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;

        button {
          height: 55px;
          line-height: 55px;
          letter-spacing: 1px;
          text-align: center;
          vertical-align: middle;
          cursor: pointer;
          user-select: none;
          border-radius: 0.25rem;
          transition: color 0.15s ease-in-out,
            background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
            box-shadow 0.15s ease-in-out;
          background-color: #05f;
          border: 0;
          width: 80%;
          color: #fff;
          text-transform: uppercase;
          font-size: 12px;
        }
      }
    }

    .popular {
      line-height: 24px;
      font-size: 12px;
      margin-left: 0.25rem;
      color: #adb5bd;
      font-weight: 500;
      margin-top: 0;
      margin-bottom: 0.5rem;

      b {
        color: #343a40;
      }
    }
  }

  .topic {
    margin-bottom: 20px;

    .topic_title {
      font-weight: 400;
      font-size: 25px;
      margin-bottom: 10px;
      font-weight: 400;
      line-height: 1.2;
      color: #111;
      margin-top: 0;
    }

    .topic_content {
      .item {
        margin-right: 10px !important;
        cursor: pointer;
        text-align: center;
        padding: 1.5rem;
        border-radius: 0.3rem;
        border: 0;

        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-clip: border-box;

        width: 160px !important;

        .img_text {
          padding: 0.5rem;
          margin-left: 0.25rem;

          .img {
            background-color: #fff;
            width: 60px;
            height: 60px;
            border-radius: 60px;
            display: inline-block;
            line-height: 60px;
            text-align: center;

            img {
              width: 100%;
              vertical-align: middle;
              display: block;
              border-style: none;
              padding: 0.5rem;
              line-height: 60px;
              transition: all 0.4s ease;
              position: relative;
            }
          }

          .text {
            line-height: 1.2;
            color: #111;
            font-size: 14px;
            margin-bottom: 0;
            margin-top: 1rem;
            font-weight: 600;

            span {
              font-size: 10px;
              display: block;
              margin-top: 0.5rem;
              color: #adb5bd;
              font-weight: 500;
            }
          }
        }
      }

      .bg_fcf1eb {
        background-color: #fcf1eb;
      }

      .bg_dcf4f8 {
        background-color: #dcf4f8;
      }
    }
  }

  .language {
    margin-bottom: 20px;

    .language_title {
      font-weight: 400;
      font-size: 25px;
      margin-bottom: 10px;
      font-weight: 400;
      line-height: 1.2;
      color: #111;
      margin-top: 0;
    }

    .language_content {
      .item {
        margin-right: 10px;
        cursor: pointer;
        border-radius: 4px;
        border: 0;

        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;

        width: 90% !important;

        .img {
          overflow: hidden;
          margin-bottom: 1rem;
          width: 100%;
          border-radius: 4px;

          img {
            vertical-align: middle;
            border-style: none;
            width: 100%;
          }
        }

        .item_infor {
          flex: 1 1 auto;
          min-height: 1px;
          padding: 1.25rem;
          padding-top: 0;

          .name {
          }

          .desc {
            font-weight: 700;
            margin-top: 1rem;
            font-size: 16px;
            color: #111;
            line-height: 28px;
            margin-bottom: 0.5rem;
          }
        }
      }
    }
  }
`;

'''
'''--- src/containers/Layout/store/actions.ts ---
/*
*
* Layout actions
* make by huynq
*/
import * as types from './constants';
import { action } from 'typesafe-actions';

export const changeLogin = (val: boolean) => action(
 types.GET,
 val,
);
'''
'''--- src/containers/Layout/store/constants.ts ---
/*
*
* Layout constants
*  make by huynq
*/

export const GET = 'Layout/GET';
'''
'''--- src/containers/Layout/store/message-trans.ts ---
/*
 * Layout  Messages
 *
 * This contains all the text for the Layout component.
 */

import { defineMessages } from "react-intl";

export const scope = "Layout";

export default defineMessages({
  title: {
    id: `${scope}.title`,
    defaultMessage: "title",
  }
});

'''
'''--- src/containers/Layout/store/reducers.ts ---
/*
*
* Layout reducers
* make by huynq
*/
import { Reducer } from 'redux';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as types from './constants';
import { ActionsLayout, StoreLayout } from "./types";

const initState : StoreLayout = { };

const reducersLayout : Reducer<StoreLayout, ActionsLayout> = (state = initState, actions: ActionsLayout) => {
switch (actions.type) {
default:
return { ...state };
}
};

export default reducersLayout;
'''
'''--- src/containers/Layout/store/selecters.ts ---
/*
*
* Layout selecters
* make by huynq
*/
import rootReducer from "redux/root-reducers";

export const selectLayoutStore = ((state: ReturnType<typeof rootReducer>) => state.Layout)
'''
'''--- src/containers/Layout/store/types.ts ---
/*
*
* Layout types
* make by huynq
*/
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export interface StoreLayout {}

export type ActionsLayout = ActionType<typeof actions>;
'''
'''--- src/containers/Layout/style/index.ts ---
/*
 *
 * Layout style css file
 * make by huynq
 */

import styled from 'styled-components';

const WrapLayout = styled.div`
  .wrap_logo {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px 0;
    margin-bottom: 20px;
    /* border-bottom: 2px solid #eee; */
    height: 64px;

    .logo {
      width: 120px;
      height: auto;
      margin-right: 5px;

      img {
        width: 100%;
        height: 100%;
      }
    }

    span {
      color: #05f;
      line-height: 75px;
      transition: all 0.4s ease;
      font-weight: 600;
      font-size: 28px;
    }
  }

  .wrap_header {
    padding: 0 20px 0 10px;
    display: flex;
    align-items: center;

    .header_handle {
      margin-left: 30px;
      flex: 9;
      display: flex;
      justify-content: space-between;
      align-items: center;

      .search {
        input {
          border: unset;
          height: 40px;
          margin-left: 5px;

          &:focus-visible {
            border: unset;
            outline: unset;
          }
        }
      }

      .handle_right {
        display: flex;
        align-items: center;
        margin: 0 -10px;
        cursor: pointer;

        .sign_near {
          height: 35px;
          line-height: 40px;
          letter-spacing: 1px;
          text-align: center;
          vertical-align: middle;
          cursor: pointer;
          user-select: none;
          border-radius: 0.25rem;
          transition: color 0.15s ease-in-out,
            background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
            box-shadow 0.15s ease-in-out;
          background-color: #05f;
          border: 0;
          width: 80%;
          color: #fff;
          text-transform: uppercase;
          font-size: 12px;
          display: flex;
          align-items: center;
        }

        .handle_right_item {
          margin: 0 10px;
          position: relative;

          .icon {
          }

          .icon_hover {
            display: none;
            content: '';
            position: absolute;
            top: 50px;
            background-color: #fff;
            width: 300px;
            padding: 25px 30px;
            box-shadow: 0 15px 125px rgb(0 0 0 / 22%);
            border-radius: 6px;
            z-index: 999;
            border: 0;
            position: absolute;
            right: -15px;
            text-align: left;
            transition: all 0.4s ease;

            &::before {
              position: absolute;
              content: '';
              clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
              height: 10px;
              width: 20px;
              top: -9px;
              right: 14px;
              background-color: #fff;
            }
            &::after {
              position: absolute;
              content: '';
              height: 10px;
              width: 100%;
              top: -9px;
              right: 0;
              background-color: transparent;
            }
          }

          &:hover {
            .icon_hover {
              display: block;
            }
          }
        }
      }
    }
  }
`;

export default WrapLayout;

'''
'''--- src/containers/Meeting/store/actions.ts ---
/*
*
* Meeting actions
* make by huynq
*/
import * as types from './constants';
import { action } from 'typesafe-actions';

export const changeLogin = (val: boolean) => action(
 types.GET,
 val,
);
'''
'''--- src/containers/Meeting/store/constants.ts ---
/*
*
* Meeting constants
*  make by huynq
*/

export const GET = 'Meeting/GET';
'''
'''--- src/containers/Meeting/store/message-trans.ts ---
/*
 * Meeting  Messages
 *
 * This contains all the text for the Meeting component.
 */

import { defineMessages } from "react-intl";

export const scope = "Meeting";

export default defineMessages({
  title: {
    id: `${scope}.title`,
    defaultMessage: "title",
  }
});

'''
'''--- src/containers/Meeting/store/reducers.ts ---
/*
 *
 * Meeting reducers
 * make by huynq
 */
import { Reducer } from 'redux';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as types from './constants';
import { ActionsMeeting, StoreMeeting } from './types';

const initState: StoreMeeting = {};

const reducersMeeting: Reducer<StoreMeeting, ActionsMeeting> = (
  state = initState,
  actions: ActionsMeeting,
) => {
  switch (actions.type) {
    default:
      return { ...state };
  }
};

export default reducersMeeting;

'''
'''--- src/containers/Meeting/store/selecters.ts ---
/*
 *
 * Meeting selecters
 * make by huynq
 */
import rootReducer from 'redux/root-reducers';

export const selectMeetingStore = (state: ReturnType<typeof rootReducer>) =>
  state.Meeting;

'''
'''--- src/containers/Meeting/store/types.ts ---
/*
*
* Meeting types
* make by huynq
*/
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export interface StoreMeeting {}

export type ActionsMeeting = ActionType<typeof actions>;
'''
'''--- src/containers/Meeting/style/index.ts ---
/*
*
* Meeting style css file
* make by huynq
*/

import styled from 'styled-components';

const WrapMeeting = styled.div``;

export default WrapMeeting;
'''
'''--- src/containers/Students/store/actions.ts ---
/*
*
* Students actions
* make by huynq
*/
import * as types from './constants';
import { action } from 'typesafe-actions';

export const changeLogin = (val: boolean) => action(
 types.GET,
 val,
);
'''
'''--- src/containers/Students/store/constants.ts ---
/*
*
* Students constants
*  make by huynq
*/

export const GET = 'Students/GET';
'''
'''--- src/containers/Students/store/message-trans.ts ---
/*
 * Students  Messages
 *
 * This contains all the text for the Students component.
 */

import { defineMessages } from "react-intl";

export const scope = "Students";

export default defineMessages({
  title: {
    id: `${scope}.title`,
    defaultMessage: "title",
  }
});

'''
'''--- src/containers/Students/store/reducers.ts ---
/*
*
* Students reducers
* make by huynq
*/
import { Reducer } from 'redux';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as types from './constants';
import { ActionsStudents, StoreStudents } from "./types";

const initState : StoreStudents = { };

const reducersStudents : Reducer<StoreStudents, ActionsStudents> = (state = initState, actions: ActionsStudents) => {
switch (actions.type) {
default:
return { ...state };
}
};

export default reducersStudents;
'''
'''--- src/containers/Students/store/selecters.ts ---
/*
*
* Students selecters
* make by huynq
*/
import rootReducer from "redux/root-reducers";

export const selectStudentsStore = ((state: ReturnType<typeof rootReducer>) => state.Students)
'''
'''--- src/containers/Students/store/types.ts ---
/*
*
* Students types
* make by huynq
*/
import { ActionType } from 'typesafe-actions';
import * as actions from './actions';

export interface StoreStudents {}

export type ActionsStudents = ActionType<typeof actions>;
'''
'''--- src/containers/Students/style/index.ts ---
/*
*
* Students style css file
* make by huynq
*/

import styled from 'styled-components';

const WrapStudents = styled.div``;

export default WrapStudents;
'''
'''--- src/helpers/index.ts ---
const helper = {};

export { helper };

'''
'''--- src/helpers/regex.ts ---
const REGEX = {
  NOT_DIGIT: /\D+/,
  PHONE: /((\+84|09|03|04|07|08|05)+([0-9]{8,13})\b)/,
  FAX: /^(\+?\d{1,}(\s?|\\-?)\d*(\s?|\\-?)\(?\d{2,}\)?(\s?|\\-?)\d{3,}\s?\d{3,})$/,
  TEXT: /^([a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ`~!@#$%^&*()-_+={}[\]\\|;:"',<.>/?]+\s)*[a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ`~!@#$%^&*()-_+={}[\]\\|;:"',<.>/?]+$/,
  NAME_COMPANY: /^([a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ%&,().+-:\\/;"']+\s)*[a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ%&,().+-:\\/;"']+$/,
  FULLNAME: /^([a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ]+\s)*[a-zA-ZÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ]+$/,
  FULLNAME_NUMBER: /^([a-zA-Z0-9ÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ]+\s)*[a-zA-Z0-9ÁÀẢÃẠÂẤẦẨẪẬĂẮẰẲẴẶĐÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴáàảãạâấầẩẫậăắằẳẵặđéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵ]+$/,
  EMAIL: /^\w+([\\.-]?\w+)*@\w+([\\.-]?\w+)*(\.\w{2,3})+$/,
  OBJECT_ID: /^[0-9a-fA-F]{24}$/,
  IDENTITY_NUMBER: /^(\d{9}|\d{12})$/,
  USER_NAME: /^[a-zA-Z0-9]+$/,
  PASSWORD: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?^&#.])[A-Za-z\d@$!%*?^&#.]{8,}$/,
  PASSWORD_ANY: /^\S{8,50}$/,
  TAX_NUMBER: /^\d{10}$/,
};

export default REGEX;

'''
'''--- src/helpers/translate.ts ---

import { createIntl, createIntlCache } from 'react-intl';
import { translatesJson } from 'containers/App/LanguageProvider';
import store from '../redux/store';

// This is optional but highly recommended since it prevents memory leak
const cache = createIntlCache();

const intl = () => {
  const { App } = store.getState();

  return createIntl(
    {
      locale: App?.lang || 'vi',
      messages: translatesJson['vi'],
    },
    cache,
  );
};

export default intl;

'''
'''--- src/hooks/useCountRenders.ts ---
/* eslint-disable no-console */
import { useRef } from 'react';

const useCountRenders = (name?: string) => {
  const ref = useRef(0);
  if (ref.current === 0) {
    console.log(`%c ${name} INIT`, 'background: #222; color: yellow');
  } else
    console.log(
      `%c ${name} render: ${ref.current}`,
      'background: #222; color: yellow',
    );
  ref.current++;
};
export default useCountRenders;

'''
'''--- src/hooks/useDetectClickOutSide.ts ---
/** @format */

import { useEffect } from "react";
/**
 * useDetectClickOutSide : detect when user click outside component point
 * @param {*} handler Function hande run if click outside (ref, refParent)
 * @param {*} handlerParent Function hande run if click outside (ref, refParent)
 * @param {*} ref the ref of component, tag want set
 * @param {*} refParent the ref of component, tag is dependent of (ref)
 */
function useDetectClickOutSide(
  handler: Function,
  handlerParent: Function,
  ref: React.MutableRefObject<any>,
  refParent?: React.MutableRefObject<any>
) {
  useEffect(
    () => {
      const listener = (event: Event) => {
        // Do handlerParent if clicking ref's of Parent
        // console.log(event.target, refParent?.current);

        if (refParent?.current.contains(event.target)) {
          handlerParent();
          return;
        }
        // Do nothing if clicking ref's element or descendent elements
        if (!ref.current || ref.current.contains(event.target)) return;
        // run handler if click outside
        handler();
      };

      document.addEventListener("mousedown", listener);
      document.addEventListener("touchstart", listener);

      return () => {
        // console.log('un addEventListener');

        document.removeEventListener("mousedown", listener);
        document.removeEventListener("touchstart", listener);
      };
    },
    // Add ref and handler to effect dependencies
    // It's worth noting that because passed in handler is a new ...
    // ... function on every render that will cause this effect ...
    // ... callback/cleanup to run every render. It's not a big deal ...
    // ... but to optimize you can wrap handler in useCallback before ...
    // ... passing it into this hook.
    [ref, refParent, handler, handlerParent]
  );
}

export default useDetectClickOutSide;

'''
'''--- src/hooks/useModal.ts ---
import * as React from "react";

export interface IModalProps {}

export default function Modal(props: IModalProps) {
  return null;
}

'''
'''--- src/hooks/useScrollTop.ts ---
import { useEffect } from "react";
import { useLocation } from "react-router-dom";

export default function useScrollTop() {
  const location = useLocation();
  useEffect(
    () => () => {
      try {
        window.scroll({
          top: 0,
          left: 0,
          behavior: "smooth",
        });
      } catch (error) {
        window.scrollTo(0, 0);
      }
    },
    [location]
  );
  return null;
}

'''
'''--- src/near-interface.js ---
/* Talking with a contract often involves transforming data, we recommend you to encapsulate that logic into a class */

export class HelloNEAR {
  constructor({ contractId, walletToUse }) {
    this.contractId = contractId;
    this.wallet = walletToUse;    
  }

  async getGreeting() {
    return await this.wallet.viewMethod({ contractId: this.contractId, method: 'get_greeting' });
  }

  async setGreeting(greeting) {
    return await this.wallet.callMethod({ contractId: this.contractId, method: 'set_greeting', args: { message: greeting } });
  }
}
'''
'''--- src/react-app-env.d.ts ---
/// <reference types="react-scripts" />

'''
'''--- src/redux/root-reducers.ts ---
/**
 * This file export all of type the Reducers
 * File is export only type, not the logic
 * huynq
 */

import { combineReducers } from 'redux';
import App from 'containers/App/store/reducers';
import Home from 'containers/Home/store/reducers';
import Layout from 'containers/Layout/store/reducers';
import Students from 'containers/Students/store/reducers';
import Advisors from 'containers/Advisors/store/reducers';
import Meeting from 'containers/Meeting/store/reducers';
import Booking from "containers/Booking/store/reducers";
// [IMPORT NEW CONTAINERSTATE ABOVE] < Needed for generating containers seamlessly

//pages
const rootReducer = combineReducers({
  App,
  Home,
  Layout,
  Students,
  Advisors,
  Meeting,
  Booking,
  // [INSERT NEW REDUCER KEY ABOVE] < Needed for generating containers seamlessly

  });

export default rootReducer;

'''
'''--- src/redux/store.js ---
import {
  createStore,
  applyMiddleware,
  compose,
  combineReducers,
} from 'redux';
import thunk from 'redux-thunk';
import App from 'containers/App/store/reducers';

const hasExtension =
  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();

const composeWith = hasExtension
  ? compose(applyMiddleware(thunk), hasExtension)
  : compose(applyMiddleware(thunk));

const staticReducers = {
  App: App,
};

// Configure the store
function configureStore(initialState) {
  const store = createStore(createReducer(), initialState, composeWith);

  // Add a dictionary to keep track of the registered async reducers
  store.asyncReducers = {};

  // Create an inject reducer function
  // This function adds the async reducer, and creates a new combined reducer
  store.injectReducer = (key, asyncReducer) => {
    store.asyncReducers[key] = asyncReducer;
    store.replaceReducer(createReducer(store.asyncReducers));
  };

  // Return the modified store
  return store;
}

function createReducer(asyncReducers) {
  return combineReducers({
    ...staticReducers,
    ...asyncReducers,
  });
}

const store = configureStore();

export default store;

'''
'''--- src/redux/useInjectReducer.ts ---
import React from 'react';
import { useStore } from 'react-redux';
import { Reducer } from 'redux';

const useInjectReducer = (key: string, reducer: Reducer<any, any>) => {
  const store = useStore();

  const isInjected = React.useRef(false);

  if (!isInjected.current) {
    (store as any).injectReducer(key, reducer);
    isInjected.current = true;
  }
};

export default useInjectReducer;

'''
'''--- src/reportWebVitals.ts ---
import { ReportHandler } from 'web-vitals';

const reportWebVitals = (onPerfEntry?: ReportHandler) => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

'''
'''--- src/serviceWorker.ts ---
// This optional code is used to register a service worker.
// register() is not called by default.

// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, since previously cached
// resources are updated in the background.

// To learn more about the benefits of this model and instructions on how to
// opt-in, read https://bit.ly/CRA-PWA

const isLocalhost = Boolean(
  window.location.hostname === 'localhost' ||
    // [::1] is the IPv6 localhost address.
    window.location.hostname === '[::1]' ||
    // 127.0.0.0/8 are considered localhost for IPv4.
    window.location.hostname.match(
      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
    )
);

type Config = {
  onSuccess?: (registration: ServiceWorkerRegistration) => void;
  onUpdate?: (registration: ServiceWorkerRegistration) => void;
};

export function register(config?: Config) {
  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
    // The URL constructor is available in all browsers that support SW.
    const publicUrl = new URL(
      process.env.PUBLIC_URL,
      window.location.href
    );
    if (publicUrl.origin !== window.location.origin) {
      // Our service worker won't work if PUBLIC_URL is on a different origin
      // from what our page is served on. This might happen if a CDN is used to
      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
      return;
    }

    window.addEventListener('load', () => {
      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;

      if (isLocalhost) {
        // This is running on localhost. Let's check if a service worker still exists or not.
        checkValidServiceWorker(swUrl, config);

        // Add some additional logging to localhost, pointing developers to the
        // service worker/PWA documentation.
        navigator.serviceWorker.ready.then(() => {
          console.log(
            'This web app is being served cache-first by a service ' +
              'worker. To learn more, visit https://bit.ly/CRA-PWA'
          );
        });
      } else {
        // Is not localhost. Just register service worker
        registerValidSW(swUrl, config);
      }
    });
  }
}

function registerValidSW(swUrl: string, config?: Config) {
  navigator.serviceWorker
    .register(swUrl)
    .then(registration => {
      registration.onupdatefound = () => {
        const installingWorker = registration.installing;
        if (installingWorker == null) {
          return;
        }
        installingWorker.onstatechange = () => {
          if (installingWorker.state === 'installed') {
            if (navigator.serviceWorker.controller) {
              // At this point, the updated precached content has been fetched,
              // but the previous service worker will still serve the older
              // content until all client tabs are closed.
              console.log(
                'New content is available and will be used when all ' +
                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'
              );

              // Execute callback
              if (config && config.onUpdate) {
                config.onUpdate(registration);
              }
            } else {
              // At this point, everything has been precached.
              // It's the perfect time to display a
              // "Content is cached for offline use." message.
              console.log('Content is cached for offline use.');

              // Execute callback
              if (config && config.onSuccess) {
                config.onSuccess(registration);
              }
            }
          }
        };
      };
    })
    .catch(error => {
      console.error('Error during service worker registration:', error);
    });
}

function checkValidServiceWorker(swUrl: string, config?: Config) {
  // Check if the service worker can be found. If it can't reload the page.
  fetch(swUrl, {
    headers: { 'Service-Worker': 'script' }
  })
    .then(response => {
      // Ensure service worker exists, and that we really are getting a JS file.
      const contentType = response.headers.get('content-type');
      if (
        response.status === 404 ||
        (contentType != null && contentType.indexOf('javascript') === -1)
      ) {
        // No service worker found. Probably a different app. Reload the page.
        navigator.serviceWorker.ready.then(registration => {
          registration.unregister().then(() => {
            window.location.reload();
          });
        });
      } else {
        // Service worker found. Proceed as normal.
        registerValidSW(swUrl, config);
      }
    })
    .catch(() => {
      console.log(
        'No internet connection found. App is running in offline mode.'
      );
    });
}

export function unregister() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.ready
      .then(registration => {
        registration.unregister();
      })
      .catch(error => {
        console.error(error.message);
      });
  }
}

'''
'''--- src/setupTests.ts ---
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

'''
'''--- src/styles/fonts.css ---
@font-face {
  font-family: "Avo";
  src: url("../assets/fonts/UTM\ Avo.ttf");
}

@font-face {
  font-family: "AvoBold";
  src: url("../assets/fonts/UTM\ AvoBold.ttf");
}

@font-face {
  font-family: "AvoBoldItalic";
  src: url("../assets/fonts/UTM\ AvoBold_Italic.ttf");
}

@font-face {
  font-family: "AvoItalic";
  src: url("../assets/fonts/UTM\ AvoItalic.ttf");
}

'''
'''--- src/styles/readme.md ---
1. config font,... inside global-styles.tsx
1. config color, styles common,... inside theme.ts
'''
'''--- src/styles/theme.ts ---
const theme = {
  fonts: {
    Avo: "Avo",
    AvoBold: "AvoBold",
    AvoBoldItalic: "AvoBoldItalic",
    AvoItalic: "AvoItalic",
  },
  color: {
    bgr: "#e5f5f8",
  },
};

export default theme;

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "baseUrl": "./src",
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": ["src"]
}

'''