*GitHub Repository "Lev-Stambler/malloc-near-2"*

'''--- .gitpod.yml ---
tasks:
  - init: yarn
    command: yarn dev
ports:
  - port: 1234
    onOpen: open-browser

'''
'''--- README.md ---
new-awesome-project
==================

This [React] app was initialized with [create-near-app]

Quick Start
===========

To run this project locally:

1. Prerequisites: Make sure you've installed [Node.js] â‰¥ 12
2. Install dependencies: `yarn install`
3. Run the local development server: `yarn dev` (see `package.json` for a
   full list of `scripts` you can run with `yarn`)

Now you'll have a local development environment backed by the NEAR TestNet!

Go ahead and play with the app and the code. As you make code changes, the app will automatically reload.

Exploring The Code
==================

1. The "backend" code lives in the `/contract` folder. See the README there for
   more info.
2. The frontend code lives in the `/src` folder. `/src/index.html` is a great
   place to start exploring. Note that it loads in `/src/index.js`, where you
   can learn how the frontend connects to the NEAR blockchain.
3. Tests: there are different kinds of tests for the frontend and the smart
   contract. See `contract/README` for info about how it's tested. The frontend
   code gets tested with [jest]. You can run both of these at once with `yarn
   run test`.

Deploy
======

Every smart contract in NEAR has its [own associated account][NEAR accounts]. When you run `yarn dev`, your smart contract gets deployed to the live NEAR TestNet with a throwaway account. When you're ready to make it permanent, here's how.

Step 0: Install near-cli (optional)
-------------------------------------

[near-cli] is a command line interface (CLI) for interacting with the NEAR blockchain. It was installed to the local `node_modules` folder when you ran `yarn install`, but for best ergonomics you may want to install it globally:

    yarn install --global near-cli

Or, if you'd rather use the locally-installed version, you can prefix all `near` commands with `npx`

Ensure that it's installed with `near --version` (or `npx near --version`)

Step 1: Create an account for the contract
------------------------------------------

Each account on NEAR can have at most one contract deployed to it. If you've already created an account such as `your-name.testnet`, you can deploy your contract to `new-awesome-project.your-name.testnet`. Assuming you've already created an account on [NEAR Wallet], here's how to create `new-awesome-project.your-name.testnet`:

1. Authorize NEAR CLI, following the commands it gives you:

      near login

2. Create a subaccount (replace `YOUR-NAME` below with your actual account name):

      near create-account new-awesome-project.YOUR-NAME.testnet --masterAccount YOUR-NAME.testnet

Step 2: set contract name in code
---------------------------------

Modify the line in `src/config.js` that sets the account name of the contract. Set it to the account id you used above.

    const CONTRACT_NAME = process.env.CONTRACT_NAME || 'new-awesome-project.YOUR-NAME.testnet'

Step 3: deploy!
---------------

One command:

    yarn deploy

As you can see in `package.json`, this does two things:

1. builds & deploys smart contract to NEAR TestNet
2. builds & deploys frontend code to GitHub using [gh-pages]. This will only work if the project already has a repository set up on GitHub. Feel free to modify the `deploy` script in `package.json` to deploy elsewhere.

Troubleshooting
===============

On Windows, if you're seeing an error containing `EPERM` it may be related to spaces in your path. Please see [this issue](https://github.com/zkat/npx/issues/209) for more details.

  [React]: https://reactjs.org/
  [create-near-app]: https://github.com/near/create-near-app
  [Node.js]: https://nodejs.org/en/download/package-manager/
  [jest]: https://jestjs.io/
  [NEAR accounts]: https://docs.near.org/docs/concepts/account
  [NEAR Wallet]: https://wallet.testnet.near.org/
  [near-cli]: https://github.com/near/near-cli
  [gh-pages]: https://github.com/tschaub/gh-pages

'''
'''--- TODO.md ---
- [x] Add ft_on_transfer to the main contract (to work with ft_transfer_call) which should register how much a user deposited this would then be used and deducted from when a splitter is run
Working On:
- [ ] Add a way to refund deposits (i.e. refund whatever deposit is left as the last promise). This may require keeping a mapping of how much a user deposited. (This may require disabling native sends, but idk, maybe they would then have to specify the amount in the args
	- [ ] Figure out why ft_transfer_call is not working
	- [ ] Have the malloc calls have a "trusted malloc contract" set in their constructor. Then, this is checked when they are called

<!-- Error: handling and reverting -->
- [ ] Have the retrieve funds function (callable by malloc and/or the owner of the funds)

- [ ] Figure out how to get all funds out of that WCall for ref swap
- [x] Have a better setup for testing the WCalls
- [x] Scripts for Rust
- [ ] Basic frontend
- [ ] Disable native and wrapped call txs in the same splitter. Its j plane confusing

'''
'''--- babel.config.js ---
module.exports = {
  presets: [
    "@babel/preset-env",
    "@babel/preset-react",
    "@babel/preset-typescript",
  ],
};

'''
'''--- lerna.json ---
{
  "packages": [
    "ts-packages/*",
    "rust"
  ],
  "version": "0.0.0"
}

'''
'''--- package.json ---
{
  "name": "new-awesome-project",
  "version": "0.1.0",
  "license": "UNLICENSED",
  "scripts": {
    "build": "npm run build:contract && npm run build:web",
    "build:contract": "node contract/compile.js",
    "build:contract:debug": "node contract/compile.js --debug",
    "build:web": "parcel build src/index.html --public-url ./",
    "dev:deploy:contract": "near dev-deploy",
    "deploy:contract": "near deploy",
    "deploy:pages": "gh-pages -d dist/",
    "deploy": "npm run build && npm run deploy:contract && npm run deploy:pages",
    "prestart": "npm run build:contract:debug && npm run dev:deploy:contract",
    "start": "echo The app is starting! It will automatically open in your browser when ready && env-cmd -f ./neardev/dev-account.env parcel src/index.html --open",
    "dev": "nodemon --watch contract/src -e rs --exec \"npm run start\"",
    "test:contract": "npm run build:contract:debug && cd contract && RUST_BACKTRACE=1 cargo test -- --nocapture",
    "test:integration": "jest test --runInBand",
    "test": "yarn test:contract && yarn test:integration"
  },
  "devDependencies": {
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-react": "~7.13.13",
    "@babel/preset-typescript": "^7.14.5",
    "@baf-wallet/near": "^0.0.22",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.8",
    "babel-jest": "~26.6.2",
    "bs58": "^4.0.1",
    "env-cmd": "~10.1.0",
    "gh-pages": "~3.1.0",
    "jest": "~26.6.2",
    "jest-environment-node": "~26.6.2",
    "lerna": "^4.0.0",
    "near-cli": "~1.6.0",
    "nodemon": "~2.0.3",
    "parcel-bundler": "~1.12.4",
    "react-test-renderer": "~17.0.1",
    "shelljs": "~0.8.4",
    "typescript": "^4.3.4"
  },
  "dependencies": {
    "bn.js": "^5.2.0",
    "near-api-js": "~0.41.0",
    "react": "~17.0.1",
    "react-dom": "~17.0.1",
    "regenerator-runtime": "~0.13.5"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/test-files/jest.init.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/src/",
      "<rootDir>/contract/",
      "<rootDir>/node_modules/"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- rust/babel.config.js ---
module.exports = {
  presets: [
    "@babel/preset-env",
    "@babel/preset-typescript",
  ],
};

'''
'''--- rust/mallocrustcli/README.md ---
mallocrustcli
=============

[![oclif](https://img.shields.io/badge/cli-oclif-brightgreen.svg)](https://oclif.io)
[![Version](https://img.shields.io/npm/v/mallocrustcli.svg)](https://npmjs.org/package/mallocrustcli)
[![Downloads/week](https://img.shields.io/npm/dw/mallocrustcli.svg)](https://npmjs.org/package/mallocrustcli)
[![License](https://img.shields.io/npm/l/mallocrustcli.svg)](https://github.com/Lev-Stambler/mallocrustcli/blob/master/package.json)

<!-- toc -->
* [Usage](#usage)
* [Commands](#commands)
<!-- tocstop -->
# Usage
<!-- usage -->
```sh-session
$ npm install -g mallocrustcli
$ mallocrustcli COMMAND
running command...
$ mallocrustcli (-v|--version|version)
mallocrustcli/0.0.0 linux-x64 node-v14.17.0
$ mallocrustcli --help [COMMAND]
USAGE
  $ mallocrustcli COMMAND
...
```
<!-- usagestop -->
# Commands
<!-- commands -->
* [`mallocrustcli hello [FILE]`](#mallocrustcli-hello-file)
* [`mallocrustcli help [COMMAND]`](#mallocrustcli-help-command)

## `mallocrustcli hello [FILE]`

describe the command here

```
USAGE
  $ mallocrustcli hello [FILE]

OPTIONS
  -f, --force
  -h, --help       show CLI help
  -n, --name=name  name to print

EXAMPLE
  $ mallocrustcli hello
  hello world from ./src/hello.ts!
```

_See code: [src/commands/hello.ts](https://github.com/Lev-Stambler/mallocrustcli/blob/v0.0.0/src/commands/hello.ts)_

## `mallocrustcli help [COMMAND]`

display help for mallocrustcli

```
USAGE
  $ mallocrustcli help [COMMAND]

ARGUMENTS
  COMMAND  command to show help for

OPTIONS
  --all  see all commands in CLI
```

_See code: [@oclif/plugin-help](https://github.com/oclif/plugin-help/blob/v3.2.2/src/commands/help.ts)_
<!-- commandsstop -->

'''
'''--- rust/mallocrustcli/bin/run.cmd ---
@echo off

node "%~dp0\run" %*

'''
'''--- rust/mallocrustcli/package-lock.json ---
{
  "name": "mallocrustcli",
  "version": "0.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "@babel/code-frame": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.14.5.tgz",
      "integrity": "sha512-9pzDqyc6OLDaqe+zbACgFkb6fKMNG6CObKpnYXChRsvYGyEdc7CA2BaqeOM+vOtCS5ndmJicPJhKAwYRI6UfFw==",
      "dev": true,
      "requires": {
        "@babel/highlight": "^7.14.5"
      }
    },
    "@babel/generator": {
      "version": "7.15.0",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.15.0.tgz",
      "integrity": "sha512-eKl4XdMrbpYvuB505KTta4AV9g+wWzmVBW69tX0H2NwKVKd2YJbKgyK6M8j/rgLbmHOYJn6rUklV677nOyJrEQ==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.15.0",
        "jsesc": "^2.5.1",
        "source-map": "^0.5.0"
      }
    },
    "@babel/helper-function-name": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.14.5.tgz",
      "integrity": "sha512-Gjna0AsXWfFvrAuX+VKcN/aNNWonizBj39yGwUzVDVTlMYJMK2Wp6xdpy72mfArFq5uK+NOuexfzZlzI1z9+AQ==",
      "dev": true,
      "requires": {
        "@babel/helper-get-function-arity": "^7.14.5",
        "@babel/template": "^7.14.5",
        "@babel/types": "^7.14.5"
      }
    },
    "@babel/helper-get-function-arity": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.14.5.tgz",
      "integrity": "sha512-I1Db4Shst5lewOM4V+ZKJzQ0JGGaZ6VY1jYvMghRjqs6DWgxLCIyFt30GlnKkfUeFLpJt2vzbMVEXVSXlIFYUg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.14.5"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.14.5.tgz",
      "integrity": "sha512-R1PXiz31Uc0Vxy4OEOm07x0oSjKAdPPCh3tPivn/Eo8cvz6gveAeuyUUPB21Hoiif0uoPQSSdhIPS3352nvdyQ==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.14.5"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.14.5.tgz",
      "integrity": "sha512-hprxVPu6e5Kdp2puZUmvOGjaLv9TCe58E/Fl6hRq4YiVQxIcNvuq6uTM2r1mT/oPskuS9CgR+I94sqAYv0NGKA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.14.5"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.14.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.14.9.tgz",
      "integrity": "sha512-pQYxPY0UP6IHISRitNe8bsijHex4TWZXi2HwKVsjPiltzlhse2znVcm9Ace510VT1kxIHjGJCZZQBX2gJDbo0g==",
      "dev": true
    },
    "@babel/highlight": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz",
      "integrity": "sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==",
      "dev": true,
      "requires": {
        "@babel/helper-validator-identifier": "^7.14.5",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      }
    },
    "@babel/parser": {
      "version": "7.15.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.15.0.tgz",
      "integrity": "sha512-0v7oNOjr6YT9Z2RAOTv4T9aP+ubfx4Q/OhVtAet7PFDt0t9Oy6Jn+/rfC6b8HJ5zEqrQCiMxJfgtHpmIminmJQ==",
      "dev": true
    },
    "@babel/template": {
      "version": "7.14.5",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.14.5.tgz",
      "integrity": "sha512-6Z3Po85sfxRGachLULUhOmvAaOo7xCvqGQtxINai2mEGPFm6pQ4z5QInFnUrRpfoSV60BnjyF5F3c+15fxFV1g==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.14.5",
        "@babel/parser": "^7.14.5",
        "@babel/types": "^7.14.5"
      }
    },
    "@babel/traverse": {
      "version": "7.15.0",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.15.0.tgz",
      "integrity": "sha512-392d8BN0C9eVxVWd8H6x9WfipgVH5IaIoLp23334Sc1vbKKWINnvwRpb4us0xtPaCumlwbTtIYNA0Dv/32sVFw==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.14.5",
        "@babel/generator": "^7.15.0",
        "@babel/helper-function-name": "^7.14.5",
        "@babel/helper-hoist-variables": "^7.14.5",
        "@babel/helper-split-export-declaration": "^7.14.5",
        "@babel/parser": "^7.15.0",
        "@babel/types": "^7.15.0",
        "debug": "^4.1.0",
        "globals": "^11.1.0"
      }
    },
    "@babel/types": {
      "version": "7.15.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.15.0.tgz",
      "integrity": "sha512-OBvfqnllOIdX4ojTHpwZbpvz4j3EWyjkZEdmjH0/cgsd6QOdSgU8rLSk6ard/pcW7rlmjdVSX/AWOaORR1uNOQ==",
      "dev": true,
      "requires": {
        "@babel/helper-validator-identifier": "^7.14.9",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "requires": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      }
    },
    "@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A=="
    },
    "@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "requires": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      }
    },
    "@oclif/command": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/@oclif/command/-/command-1.8.0.tgz",
      "integrity": "sha512-5vwpq6kbvwkQwKqAoOU3L72GZ3Ta8RRrewKj9OJRolx28KLJJ8Dg9Rf7obRwt5jQA9bkYd8gqzMTrI7H3xLfaw==",
      "requires": {
        "@oclif/config": "^1.15.1",
        "@oclif/errors": "^1.3.3",
        "@oclif/parser": "^3.8.3",
        "@oclif/plugin-help": "^3",
        "debug": "^4.1.1",
        "semver": "^7.3.2"
      }
    },
    "@oclif/config": {
      "version": "1.17.0",
      "resolved": "https://registry.npmjs.org/@oclif/config/-/config-1.17.0.tgz",
      "integrity": "sha512-Lmfuf6ubjQ4ifC/9bz1fSCHc6F6E653oyaRXxg+lgT4+bYf9bk+nqrUpAbrXyABkCqgIBiFr3J4zR/kiFdE1PA==",
      "requires": {
        "@oclif/errors": "^1.3.3",
        "@oclif/parser": "^3.8.0",
        "debug": "^4.1.1",
        "globby": "^11.0.1",
        "is-wsl": "^2.1.1",
        "tslib": "^2.0.0"
      },
      "dependencies": {
        "globby": {
          "version": "11.0.4",
          "resolved": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
          "integrity": "sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==",
          "requires": {
            "array-union": "^2.1.0",
            "dir-glob": "^3.0.1",
            "fast-glob": "^3.1.1",
            "ignore": "^5.1.4",
            "merge2": "^1.3.0",
            "slash": "^3.0.0"
          }
        },
        "tslib": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
          "integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg=="
        }
      }
    },
    "@oclif/dev-cli": {
      "version": "1.26.0",
      "resolved": "https://registry.npmjs.org/@oclif/dev-cli/-/dev-cli-1.26.0.tgz",
      "integrity": "sha512-272udZP+bG4qahoAcpWcMTJKiA+V42kRMqQM7n4tgW35brYb2UP5kK+p08PpF8sgSfRTV8MoJVJG9ax5kY82PA==",
      "dev": true,
      "requires": {
        "@oclif/command": "^1.8.0",
        "@oclif/config": "^1.17.0",
        "@oclif/errors": "^1.3.3",
        "@oclif/plugin-help": "^3.2.0",
        "cli-ux": "^5.2.1",
        "debug": "^4.1.1",
        "find-yarn-workspace-root": "^2.0.0",
        "fs-extra": "^8.1",
        "github-slugger": "^1.2.1",
        "lodash": "^4.17.11",
        "normalize-package-data": "^3.0.0",
        "qqjs": "^0.3.10",
        "tslib": "^2.0.3"
      },
      "dependencies": {
        "tslib": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
          "integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg==",
          "dev": true
        }
      }
    },
    "@oclif/errors": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@oclif/errors/-/errors-1.3.5.tgz",
      "integrity": "sha512-OivucXPH/eLLlOT7FkCMoZXiaVYf8I/w1eTAM1+gKzfhALwWTusxEx7wBmW0uzvkSg/9ovWLycPaBgJbM3LOCQ==",
      "requires": {
        "clean-stack": "^3.0.0",
        "fs-extra": "^8.1",
        "indent-string": "^4.0.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "@oclif/linewrap": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@oclif/linewrap/-/linewrap-1.0.0.tgz",
      "integrity": "sha512-Ups2dShK52xXa8w6iBWLgcjPJWjais6KPJQq3gQ/88AY6BXoTX+MIGFPrWQO1KLMiQfoTpcLnUwloN4brrVUHw=="
    },
    "@oclif/parser": {
      "version": "3.8.5",
      "resolved": "https://registry.npmjs.org/@oclif/parser/-/parser-3.8.5.tgz",
      "integrity": "sha512-yojzeEfmSxjjkAvMRj0KzspXlMjCfBzNRPkWw8ZwOSoNWoJn+OCS/m/S+yfV6BvAM4u2lTzX9Y5rCbrFIgkJLg==",
      "requires": {
        "@oclif/errors": "^1.2.2",
        "@oclif/linewrap": "^1.0.0",
        "chalk": "^2.4.2",
        "tslib": "^1.9.3"
      }
    },
    "@oclif/plugin-help": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/@oclif/plugin-help/-/plugin-help-3.2.2.tgz",
      "integrity": "sha512-SPZ8U8PBYK0n4srFjCLedk0jWU4QlxgEYLCXIBShJgOwPhTTQknkUlsEwaMIevvCU4iCQZhfMX+D8Pz5GZjFgA==",
      "requires": {
        "@oclif/command": "^1.5.20",
        "@oclif/config": "^1.15.1",
        "@oclif/errors": "^1.2.2",
        "chalk": "^4.1.0",
        "indent-string": "^4.0.0",
        "lodash.template": "^4.4.0",
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "widest-line": "^3.1.0",
        "wrap-ansi": "^4.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
        },
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "wrap-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-4.0.0.tgz",
          "integrity": "sha512-uMTsj9rDb0/7kk1PbcbCcwvHUxp60fGDB/NNXpVa0Q+ic/e7y5+BwTxKfQ33VYgDppSwi/FBzpetYzo8s6tfbg==",
          "requires": {
            "ansi-styles": "^3.2.0",
            "string-width": "^2.1.1",
            "strip-ansi": "^4.0.0"
          },
          "dependencies": {
            "ansi-styles": {
              "version": "3.2.1",
              "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
              "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
              "requires": {
                "color-convert": "^1.9.0"
              }
            },
            "string-width": {
              "version": "2.1.1",
              "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
              "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
              "requires": {
                "is-fullwidth-code-point": "^2.0.0",
                "strip-ansi": "^4.0.0"
              }
            },
            "strip-ansi": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
              "requires": {
                "ansi-regex": "^3.0.0"
              }
            }
          }
        }
      }
    },
    "@oclif/screen": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@oclif/screen/-/screen-1.0.4.tgz",
      "integrity": "sha512-60CHpq+eqnTxLZQ4PGHYNwUX572hgpMHGPtTWMjdTMsAvlm69lZV/4ly6O3sAYkomo4NggGcomrDpBe34rxUqw==",
      "dev": true
    },
    "@oclif/test": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@oclif/test/-/test-1.2.8.tgz",
      "integrity": "sha512-HCh0qPge1JCqTEw4s2ScnicEZd4Ro4/0VvdjpsfCiX6fuDV53fRZ2uqLTgxKGHrVoqOZnVrRZHyhFyEsFGs+zQ==",
      "dev": true,
      "requires": {
        "fancy-test": "^1.4.3"
      }
    },
    "@sinonjs/commons": {
      "version": "1.8.3",
      "resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
      "integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
      "dev": true,
      "requires": {
        "type-detect": "4.0.8"
      }
    },
    "@sinonjs/fake-timers": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-7.1.2.tgz",
      "integrity": "sha512-iQADsW4LBMISqZ6Ci1dupJL9pprqwcVFTcOsEmQOEhW+KLCVn/Y4Jrvg2k19fIHCp+iFprriYPTdRcQR8NbUPg==",
      "dev": true,
      "requires": {
        "@sinonjs/commons": "^1.7.0"
      }
    },
    "@types/chai": {
      "version": "4.2.21",
      "resolved": "https://registry.npmjs.org/@types/chai/-/chai-4.2.21.tgz",
      "integrity": "sha512-yd+9qKmJxm496BOV9CMNaey8TWsikaZOwMRwPHQIjcOJM9oV+fi9ZMNw3JsVnbEEbo2gRTDnGEBv8pjyn67hNg==",
      "dev": true
    },
    "@types/eslint-visitor-keys": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",
      "integrity": "sha512-OCutwjDZ4aFS6PB1UZ988C4YgwlBHJd6wCeQqaLdmadZ/7e+w79+hbMUFC1QXDNCmdyoRfAFdm0RypzwR+Qpag==",
      "dev": true
    },
    "@types/glob": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.4.tgz",
      "integrity": "sha512-w+LsMxKyYQm347Otw+IfBXOv9UWVjpHpCDdbBMt8Kz/xbvCYNjP+0qPh91Km3iKfSRLBB0P7fAMf0KHrPu+MyA==",
      "dev": true,
      "requires": {
        "@types/minimatch": "*",
        "@types/node": "*"
      }
    },
    "@types/json-schema": {
      "version": "7.0.9",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.9.tgz",
      "integrity": "sha512-qcUXuemtEu+E5wZSJHNxUXeCZhAfXKQ41D+duX+VYPde7xyEVZci+/oXKJL13tnRs9lR2pr4fod59GT6/X1/yQ==",
      "dev": true
    },
    "@types/lodash": {
      "version": "4.14.172",
      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.172.tgz",
      "integrity": "sha512-/BHF5HAx3em7/KkzVKm3LrsD6HZAXuXO1AJZQ3cRRBZj4oHZDviWPYu0aEplAqDFNHZPW6d3G7KN+ONcCCC7pw==",
      "dev": true
    },
    "@types/minimatch": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.5.tgz",
      "integrity": "sha512-Klz949h02Gz2uZCMGwDUSDS1YBlTdDDgbWHi+81l29tQALUtvz4rAYi5uoVhE5Lagoq6DeqAUlbrHvW/mXDgdQ==",
      "dev": true
    },
    "@types/mocha": {
      "version": "5.2.7",
      "resolved": "https://registry.npmjs.org/@types/mocha/-/mocha-5.2.7.tgz",
      "integrity": "sha512-NYrtPht0wGzhwe9+/idPaBB+TqkY9AhTvOLMkThm0IoEfLaiVQZwBwyJ5puCkO3AUCWrmcoePjp2mbFocKy4SQ==",
      "dev": true
    },
    "@types/node": {
      "version": "10.17.60",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.60.tgz",
      "integrity": "sha512-F0KIgDJfy2nA3zMLmWGKxcH2ZVEtCZXHHdOQs2gSaQ27+lNeEfGxzkIw90aXswATX7AZ33tahPbzy6KAfUreVw==",
      "dev": true
    },
    "@types/shelljs": {
      "version": "0.8.9",
      "resolved": "https://registry.npmjs.org/@types/shelljs/-/shelljs-0.8.9.tgz",
      "integrity": "sha512-flVe1dvlrCyQJN/SGrnBxqHG+RzXrVKsmjD8WS/qYHpq5UPjfq7UWFBENP0ZuOl0g6OpAlL6iBoLSvKYUUmyQw==",
      "dev": true,
      "requires": {
        "@types/glob": "*",
        "@types/node": "*"
      }
    },
    "@types/sinon": {
      "version": "10.0.2",
      "resolved": "https://registry.npmjs.org/@types/sinon/-/sinon-10.0.2.tgz",
      "integrity": "sha512-BHn8Bpkapj8Wdfxvh2jWIUoaYB/9/XhsL0oOvBfRagJtKlSl9NWPcFOz2lRukI9szwGxFtYZCTejJSqsGDbdmw==",
      "dev": true,
      "requires": {
        "@sinonjs/fake-timers": "^7.1.0"
      }
    },
    "@typescript-eslint/eslint-plugin": {
      "version": "2.34.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-2.34.0.tgz",
      "integrity": "sha512-4zY3Z88rEE99+CNvTbXSyovv2z9PNOVffTWD2W8QF5s2prBQtwN2zadqERcrHpcR7O/+KMI3fcTAmUUhK/iQcQ==",
      "dev": true,
      "requires": {
        "@typescript-eslint/experimental-utils": "2.34.0",
        "functional-red-black-tree": "^1.0.1",
        "regexpp": "^3.0.0",
        "tsutils": "^3.17.1"
      },
      "dependencies": {
        "regexpp": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz",
          "integrity": "sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==",
          "dev": true
        }
      }
    },
    "@typescript-eslint/experimental-utils": {
      "version": "2.34.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/experimental-utils/-/experimental-utils-2.34.0.tgz",
      "integrity": "sha512-eS6FTkq+wuMJ+sgtuNTtcqavWXqsflWcfBnlYhg/nS4aZ1leewkXGbvBhaapn1q6qf4M71bsR1tez5JTRMuqwA==",
      "dev": true,
      "requires": {
        "@types/json-schema": "^7.0.3",
        "@typescript-eslint/typescript-estree": "2.34.0",
        "eslint-scope": "^5.0.0",
        "eslint-utils": "^2.0.0"
      },
      "dependencies": {
        "eslint-scope": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
          "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
          "dev": true,
          "requires": {
            "esrecurse": "^4.3.0",
            "estraverse": "^4.1.1"
          }
        },
        "eslint-utils": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-2.1.0.tgz",
          "integrity": "sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj9JqgwkwbCYD0/V3Zg==",
          "dev": true,
          "requires": {
            "eslint-visitor-keys": "^1.1.0"
          }
        }
      }
    },
    "@typescript-eslint/parser": {
      "version": "2.34.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-2.34.0.tgz",
      "integrity": "sha512-03ilO0ucSD0EPTw2X4PntSIRFtDPWjrVq7C3/Z3VQHRC7+13YB55rcJI3Jt+YgeHbjUdJPcPa7b23rXCBokuyA==",
      "dev": true,
      "requires": {
        "@types/eslint-visitor-keys": "^1.0.0",
        "@typescript-eslint/experimental-utils": "2.34.0",
        "@typescript-eslint/typescript-estree": "2.34.0",
        "eslint-visitor-keys": "^1.1.0"
      }
    },
    "@typescript-eslint/typescript-estree": {
      "version": "2.34.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-2.34.0.tgz",
      "integrity": "sha512-OMAr+nJWKdlVM9LOqCqh3pQQPwxHAN7Du8DR6dmwCrAmxtiXQnhHJ6tBNtf+cggqfo51SG/FCwnKhXCIM7hnVg==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "eslint-visitor-keys": "^1.1.0",
        "glob": "^7.1.6",
        "is-glob": "^4.0.1",
        "lodash": "^4.17.15",
        "semver": "^7.3.2",
        "tsutils": "^3.17.1"
      }
    },
    "acorn": {
      "version": "6.4.2",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.2.tgz",
      "integrity": "sha512-XtGIhXwF8YM8bJhGxG5kXgjkEuNGLTkoYqVE+KMR+aspr4KGYmKYg7yUe3KghyQ9yheNwLnjmzh/7+gfDBmHCQ==",
      "dev": true
    },
    "acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true
    },
    "ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ansi-escapes": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
      "dev": true,
      "requires": {
        "type-fest": "^0.21.3"
      }
    },
    "ansi-regex": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
      "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg=="
    },
    "ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "requires": {
        "color-convert": "^2.0.1"
      }
    },
    "ansicolors": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz",
      "integrity": "sha1-ZlWX3oap/+Oqm/vmyuXG6kJrSXk=",
      "dev": true
    },
    "append-transform": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/append-transform/-/append-transform-1.0.0.tgz",
      "integrity": "sha512-P009oYkeHyU742iSZJzZZywj4QRJdnTWffaKuJQLablCZ1uz6/cW4yaRgcDaoQ+uwOxxnt0gRUcwfsNP2ri0gw==",
      "dev": true,
      "requires": {
        "default-require-extensions": "^2.0.0"
      }
    },
    "archy": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",
      "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=",
      "dev": true
    },
    "arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "dev": true
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw=="
    },
    "assertion-error": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz",
      "integrity": "sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==",
      "dev": true
    },
    "astral-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",
      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==",
      "dev": true
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "dev": true
    },
    "bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dev": true,
      "requires": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "browser-stdout": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz",
      "integrity": "sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==",
      "dev": true
    },
    "buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "dev": true,
      "requires": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "caching-transform": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/caching-transform/-/caching-transform-3.0.2.tgz",
      "integrity": "sha512-Mtgcv3lh3U0zRii/6qVgQODdPA4G3zhG+jtbCWj39RXuUFTMzH0vcdMtaJS1jPowd+It2Pqr6y3NJMQqOqCE2w==",
      "dev": true,
      "requires": {
        "hasha": "^3.0.0",
        "make-dir": "^2.0.0",
        "package-hash": "^3.0.0",
        "write-file-atomic": "^2.4.2"
      },
      "dependencies": {
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "write-file-atomic": {
          "version": "2.4.3",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.3.tgz",
          "integrity": "sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "imurmurhash": "^0.1.4",
            "signal-exit": "^3.0.2"
          }
        }
      }
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true
    },
    "cardinal": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz",
      "integrity": "sha1-fMEFXYItISlU0HsIXeolHMe8VQU=",
      "dev": true,
      "requires": {
        "ansicolors": "~0.3.2",
        "redeyed": "~2.1.0"
      }
    },
    "chai": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/chai/-/chai-4.3.4.tgz",
      "integrity": "sha512-yS5H68VYOCtN1cjfwumDSuzn/9c+yza4f3reKXlE5rUg7SFcCEy90gJvydNgOYtblyf4Zi6jIWRnXOgErta0KA==",
      "dev": true,
      "requires": {
        "assertion-error": "^1.1.0",
        "check-error": "^1.0.2",
        "deep-eql": "^3.0.1",
        "get-func-name": "^2.0.0",
        "pathval": "^1.1.1",
        "type-detect": "^4.0.5"
      }
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
        }
      }
    },
    "chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
      "dev": true
    },
    "check-error": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/check-error/-/check-error-1.0.2.tgz",
      "integrity": "sha1-V00xLt2Iu13YkS6Sht1sCu1KrII=",
      "dev": true
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
      "dev": true
    },
    "clean-regexp": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/clean-regexp/-/clean-regexp-1.0.0.tgz",
      "integrity": "sha1-jffHquUf02h06PjQW5GAvBGj/tc=",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.5"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
          "dev": true
        }
      }
    },
    "clean-stack": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-3.0.1.tgz",
      "integrity": "sha512-lR9wNiMRcVQjSB3a7xXGLuz4cr4wJuuXlaAEbRutGowQTmlp7R72/DOgN21e8jdwblMWl9UOJMJXarX94pzKdg==",
      "requires": {
        "escape-string-regexp": "4.0.0"
      }
    },
    "cli-cursor": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
      "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
      "dev": true,
      "requires": {
        "restore-cursor": "^2.0.0"
      }
    },
    "cli-progress": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/cli-progress/-/cli-progress-3.9.0.tgz",
      "integrity": "sha512-g7rLWfhAo/7pF+a/STFH/xPyosaL1zgADhI0OM83hl3c7S43iGvJWEAV2QuDOnQ8i6EMBj/u4+NTd0d5L+4JfA==",
      "dev": true,
      "requires": {
        "colors": "^1.1.2",
        "string-width": "^4.2.0"
      }
    },
    "cli-ux": {
      "version": "5.6.3",
      "resolved": "https://registry.npmjs.org/cli-ux/-/cli-ux-5.6.3.tgz",
      "integrity": "sha512-/oDU4v8BiDjX2OKcSunGH0iGDiEtj2rZaGyqNuv9IT4CgcSMyVWAMfn0+rEHaOc4n9ka78B0wo1+N1QX89f7mw==",
      "dev": true,
      "requires": {
        "@oclif/command": "^1.6.0",
        "@oclif/errors": "^1.2.1",
        "@oclif/linewrap": "^1.0.0",
        "@oclif/screen": "^1.0.3",
        "ansi-escapes": "^4.3.0",
        "ansi-styles": "^4.2.0",
        "cardinal": "^2.1.1",
        "chalk": "^4.1.0",
        "clean-stack": "^3.0.0",
        "cli-progress": "^3.4.0",
        "extract-stack": "^2.0.0",
        "fs-extra": "^8.1",
        "hyperlinker": "^1.0.0",
        "indent-string": "^4.0.0",
        "is-wsl": "^2.2.0",
        "js-yaml": "^3.13.1",
        "lodash": "^4.17.11",
        "natural-orderby": "^2.0.1",
        "object-treeify": "^1.1.4",
        "password-prompt": "^1.1.2",
        "semver": "^7.3.2",
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "supports-color": "^8.1.0",
        "supports-hyperlinks": "^2.1.0",
        "tslib": "^2.0.0"
      },
      "dependencies": {
        "chalk": {
          "version": "4.1.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
          "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
          "dev": true,
          "requires": {
            "ansi-styles": "^4.1.0",
            "supports-color": "^7.1.0"
          },
          "dependencies": {
            "supports-color": {
              "version": "7.2.0",
              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
              "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
              "dev": true,
              "requires": {
                "has-flag": "^4.0.0"
              }
            }
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "8.1.1",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
          "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        },
        "tslib": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
          "integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg==",
          "dev": true
        }
      }
    },
    "cli-width": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.1.tgz",
      "integrity": "sha512-GRMWDxpOB6Dgk2E5Uo+3eEBvtOOlimMmpbFiKuLFnQzYDavtLFY3K5ona41jgN/WdRZtG7utuVSVTL4HbZHGkw==",
      "dev": true
    },
    "cliui": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-5.0.0.tgz",
      "integrity": "sha512-PYeGSEmmHM6zvoef2w8TPzlrnNpXIjTipYK780YswmIP9vjxmd6Y2a3CB2Ks6/AU8NHjZugXvo8w3oWM2qnwXA==",
      "dev": true,
      "requires": {
        "string-width": "^3.1.0",
        "strip-ansi": "^5.2.0",
        "wrap-ansi": "^5.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "dev": true,
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "wrap-ansi": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-5.1.0.tgz",
          "integrity": "sha512-QC1/iN/2/RPVJ5jYK8BGttj5z83LmSKmvbvrXPNCLZSEb32KKVDJDl/MOt2N01qU2H/FkzEa9PKto1BqDjtd7Q==",
          "dev": true,
          "requires": {
            "ansi-styles": "^3.2.0",
            "string-width": "^3.0.0",
            "strip-ansi": "^5.0.0"
          }
        }
      }
    },
    "color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "requires": {
        "color-name": "~1.1.4"
      }
    },
    "color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
    },
    "colors": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
      "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
      "dev": true
    },
    "commander": {
      "version": "2.15.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.15.1.tgz",
      "integrity": "sha512-VlfT9F3V0v+jr4yxPc5gg9s62/fIVWsd2Bk2iD435um1NlGMYdVCq+MjcXnhYq2icNOizHr1kK+5TI6H0Hy0ag==",
      "dev": true
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=",
      "dev": true
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
    },
    "content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==",
      "dev": true
    },
    "convert-source-map": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
      "integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.1.1"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
          "dev": true
        }
      }
    },
    "cp-file": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/cp-file/-/cp-file-6.2.0.tgz",
      "integrity": "sha512-fmvV4caBnofhPe8kOcitBwSn2f39QLjnAnGq3gO9dfd75mUytzKNZB1hde6QHunW2Rt+OwuBOMc3i1tNElbszA==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "make-dir": "^2.0.0",
        "nested-error-stacks": "^2.0.0",
        "pify": "^4.0.1",
        "safe-buffer": "^5.0.1"
      },
      "dependencies": {
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "cross-spawn": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
      "dev": true,
      "requires": {
        "nice-try": "^1.0.4",
        "path-key": "^2.0.1",
        "semver": "^5.5.0",
        "shebang-command": "^1.2.0",
        "which": "^1.2.9"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "debug": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.2.tgz",
      "integrity": "sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==",
      "requires": {
        "ms": "2.1.2"
      }
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
      "dev": true
    },
    "deep-eql": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-3.0.1.tgz",
      "integrity": "sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==",
      "dev": true,
      "requires": {
        "type-detect": "^4.0.0"
      }
    },
    "deep-is": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
      "dev": true
    },
    "default-require-extensions": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-2.0.0.tgz",
      "integrity": "sha1-9fj7sYp9bVCyH2QfZJ67Uiz+JPc=",
      "dev": true,
      "requires": {
        "strip-bom": "^3.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "detect-indent": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-6.1.0.tgz",
      "integrity": "sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA==",
      "dev": true
    },
    "diff": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/diff/-/diff-3.5.0.tgz",
      "integrity": "sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==",
      "dev": true
    },
    "dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "requires": {
        "path-type": "^4.0.0"
      }
    },
    "doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dev": true,
      "requires": {
        "esutils": "^2.0.2"
      }
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dev": true,
      "requires": {
        "once": "^1.4.0"
      }
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "es6-error": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz",
      "integrity": "sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==",
      "dev": true
    },
    "escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA=="
    },
    "eslint": {
      "version": "5.16.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-5.16.0.tgz",
      "integrity": "sha512-S3Rz11i7c8AA5JPv7xAH+dOyq/Cu/VXHiHXBPOU1k/JAM5dXqQPt3qcrhpHSorXmrpu2g0gkIBVXAqCpzfoZIg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "ajv": "^6.9.1",
        "chalk": "^2.1.0",
        "cross-spawn": "^6.0.5",
        "debug": "^4.0.1",
        "doctrine": "^3.0.0",
        "eslint-scope": "^4.0.3",
        "eslint-utils": "^1.3.1",
        "eslint-visitor-keys": "^1.0.0",
        "espree": "^5.0.1",
        "esquery": "^1.0.1",
        "esutils": "^2.0.2",
        "file-entry-cache": "^5.0.1",
        "functional-red-black-tree": "^1.0.1",
        "glob": "^7.1.2",
        "globals": "^11.7.0",
        "ignore": "^4.0.6",
        "import-fresh": "^3.0.0",
        "imurmurhash": "^0.1.4",
        "inquirer": "^6.2.2",
        "js-yaml": "^3.13.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.3.0",
        "lodash": "^4.17.11",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "natural-compare": "^1.4.0",
        "optionator": "^0.8.2",
        "path-is-inside": "^1.0.2",
        "progress": "^2.0.0",
        "regexpp": "^2.0.1",
        "semver": "^5.5.1",
        "strip-ansi": "^4.0.0",
        "strip-json-comments": "^2.0.1",
        "table": "^5.2.3",
        "text-table": "^0.2.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "ignore": {
          "version": "4.0.6",
          "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
          "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "eslint-ast-utils": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/eslint-ast-utils/-/eslint-ast-utils-1.1.0.tgz",
      "integrity": "sha512-otzzTim2/1+lVrlH19EfQQJEhVJSu0zOb9ygb3iapN6UlyaDtyRq4b5U1FuW0v1lRa9Fp/GJyHkSwm6NqABgCA==",
      "dev": true,
      "requires": {
        "lodash.get": "^4.4.2",
        "lodash.zip": "^4.2.0"
      }
    },
    "eslint-config-oclif": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/eslint-config-oclif/-/eslint-config-oclif-3.1.0.tgz",
      "integrity": "sha512-Tqgy43cNXsSdhTLWW4RuDYGFhV240sC4ISSv/ZiUEg/zFxExSEUpRE6J+AGnkKY9dYwIW4C9b2YSUVv8z/miMA==",
      "dev": true,
      "requires": {
        "eslint-config-xo-space": "^0.20.0",
        "eslint-plugin-mocha": "^5.2.0",
        "eslint-plugin-node": "^7.0.1",
        "eslint-plugin-unicorn": "^6.0.1"
      }
    },
    "eslint-config-oclif-typescript": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/eslint-config-oclif-typescript/-/eslint-config-oclif-typescript-0.1.0.tgz",
      "integrity": "sha512-BjXNJcH2F02MdaSFml9vJskviUFVkLHbTPGM5tinIt98H6klFNKP7/lQ+fB/Goc2wB45usEuuw6+l/fwAv9i7g==",
      "dev": true,
      "requires": {
        "@typescript-eslint/eslint-plugin": "^2.6.1",
        "@typescript-eslint/parser": "^2.6.1",
        "eslint-config-oclif": "^3.1.0",
        "eslint-config-xo-space": "^0.20.0",
        "eslint-plugin-mocha": "^5.2.0",
        "eslint-plugin-node": "^7.0.1",
        "eslint-plugin-unicorn": "^6.0.1"
      }
    },
    "eslint-config-xo": {
      "version": "0.24.2",
      "resolved": "https://registry.npmjs.org/eslint-config-xo/-/eslint-config-xo-0.24.2.tgz",
      "integrity": "sha512-ivQ7qISScW6gfBp+p31nQntz1rg34UCybd3uvlngcxt5Utsf4PMMi9QoAluLFcPUM5Tvqk4JGraR9qu3msKPKQ==",
      "dev": true
    },
    "eslint-config-xo-space": {
      "version": "0.20.0",
      "resolved": "https://registry.npmjs.org/eslint-config-xo-space/-/eslint-config-xo-space-0.20.0.tgz",
      "integrity": "sha512-bOsoZA8M6v1HviDUIGVq1fLVnSu3mMZzn85m2tqKb73tSzu4GKD4Jd2Py4ZKjCgvCbRRByEB5HPC3fTMnnJ1uw==",
      "dev": true,
      "requires": {
        "eslint-config-xo": "^0.24.0"
      }
    },
    "eslint-plugin-es": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-es/-/eslint-plugin-es-1.4.1.tgz",
      "integrity": "sha512-5fa/gR2yR3NxQf+UXkeLeP8FBBl6tSgdrAz1+cF84v1FMM4twGwQoqTnn+QxFLcPOrF4pdKEJKDB/q9GoyJrCA==",
      "dev": true,
      "requires": {
        "eslint-utils": "^1.4.2",
        "regexpp": "^2.0.1"
      }
    },
    "eslint-plugin-mocha": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-mocha/-/eslint-plugin-mocha-5.3.0.tgz",
      "integrity": "sha512-3uwlJVLijjEmBeNyH60nzqgA1gacUWLUmcKV8PIGNvj1kwP/CTgAWQHn2ayyJVwziX+KETkr9opNwT1qD/RZ5A==",
      "dev": true,
      "requires": {
        "ramda": "^0.26.1"
      }
    },
    "eslint-plugin-node": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-7.0.1.tgz",
      "integrity": "sha512-lfVw3TEqThwq0j2Ba/Ckn2ABdwmL5dkOgAux1rvOk6CO7A6yGyPI2+zIxN6FyNkp1X1X/BSvKOceD6mBWSj4Yw==",
      "dev": true,
      "requires": {
        "eslint-plugin-es": "^1.3.1",
        "eslint-utils": "^1.3.1",
        "ignore": "^4.0.2",
        "minimatch": "^3.0.4",
        "resolve": "^1.8.1",
        "semver": "^5.5.0"
      },
      "dependencies": {
        "ignore": {
          "version": "4.0.6",
          "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
          "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "eslint-plugin-unicorn": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-unicorn/-/eslint-plugin-unicorn-6.0.1.tgz",
      "integrity": "sha512-hjy9LhTdtL7pz8WTrzS0CGXRkWK3VAPLDjihofj8JC+uxQLfXm0WwZPPPB7xKmcjRyoH+jruPHOCrHNEINpG/Q==",
      "dev": true,
      "requires": {
        "clean-regexp": "^1.0.0",
        "eslint-ast-utils": "^1.0.0",
        "import-modules": "^1.1.0",
        "lodash.camelcase": "^4.1.1",
        "lodash.kebabcase": "^4.0.1",
        "lodash.snakecase": "^4.0.1",
        "lodash.upperfirst": "^4.2.0",
        "safe-regex": "^1.1.0"
      }
    },
    "eslint-scope": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",
      "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",
      "dev": true,
      "requires": {
        "esrecurse": "^4.1.0",
        "estraverse": "^4.1.1"
      }
    },
    "eslint-utils": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.4.3.tgz",
      "integrity": "sha512-fbBN5W2xdY45KulGXmLHZ3c3FHfVYmKg0IrAKGOkT/464PQsx2UeIzfz1RmEci+KLm1bBaAzZAh8+/E+XAeZ8Q==",
      "dev": true,
      "requires": {
        "eslint-visitor-keys": "^1.1.0"
      }
    },
    "eslint-visitor-keys": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz",
      "integrity": "sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==",
      "dev": true
    },
    "espree": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-5.0.1.tgz",
      "integrity": "sha512-qWAZcWh4XE/RwzLJejfcofscgMc9CamR6Tn1+XRXNzrvUSSbiAjGOI/fggztjIi7y9VLPqnICMIPiGyr8JaZ0A==",
      "dev": true,
      "requires": {
        "acorn": "^6.0.7",
        "acorn-jsx": "^5.0.0",
        "eslint-visitor-keys": "^1.0.0"
      }
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "esquery": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.4.0.tgz",
      "integrity": "sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro/aZiAQUlQ3qgrYS6D6v8Gc5G5CQsc9w==",
      "dev": true,
      "requires": {
        "estraverse": "^5.1.0"
      },
      "dependencies": {
        "estraverse": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz",
          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
          "dev": true
        }
      }
    },
    "esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "requires": {
        "estraverse": "^5.2.0"
      },
      "dependencies": {
        "estraverse": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz",
          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
          "dev": true
        }
      }
    },
    "estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "execa": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/execa/-/execa-0.10.0.tgz",
      "integrity": "sha512-7XOMnz8Ynx1gGo/3hyV9loYNPWM94jG3+3T3Y8tsfSstFmETmENCMU/A/zj8Lyaj1lkgEepKepvd6240tBRvlw==",
      "dev": true,
      "requires": {
        "cross-spawn": "^6.0.0",
        "get-stream": "^3.0.0",
        "is-stream": "^1.1.0",
        "npm-run-path": "^2.0.0",
        "p-finally": "^1.0.0",
        "signal-exit": "^3.0.0",
        "strip-eof": "^1.0.0"
      },
      "dependencies": {
        "get-stream": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
          "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
          "dev": true
        }
      }
    },
    "external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "dev": true,
      "requires": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      },
      "dependencies": {
        "tmp": {
          "version": "0.0.33",
          "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
          "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
          "dev": true,
          "requires": {
            "os-tmpdir": "~1.0.2"
          }
        }
      }
    },
    "extract-stack": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/extract-stack/-/extract-stack-2.0.0.tgz",
      "integrity": "sha512-AEo4zm+TenK7zQorGK1f9mJ8L14hnTDi2ZQPR+Mub1NX8zimka1mXpV5LpH8x9HoUmFSHZCfLHqWvp0Y4FxxzQ==",
      "dev": true
    },
    "fancy-test": {
      "version": "1.4.10",
      "resolved": "https://registry.npmjs.org/fancy-test/-/fancy-test-1.4.10.tgz",
      "integrity": "sha512-AaUX6wKS7D5OP2YK2q5G7c8PGx2lgoyLUD7Bbg8z323sb9aebBqzb9UN6phzI73UgO/ViihmNfOxF3kdfZLhew==",
      "dev": true,
      "requires": {
        "@types/chai": "*",
        "@types/lodash": "*",
        "@types/node": "*",
        "@types/sinon": "*",
        "lodash": "^4.17.13",
        "mock-stdin": "^1.0.0",
        "nock": "^13.0.0",
        "stdout-stderr": "^0.1.9"
      }
    },
    "fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true
    },
    "fast-glob": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.7.tgz",
      "integrity": "sha512-rYGMRwip6lUMvYD3BTScMwT1HtAs2d71SMv66Vrxs0IekGZEjhM0pcMfjQPnknBt2zeCwQMEupiN02ZP4DiT1Q==",
      "requires": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      }
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true
    },
    "fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
      "dev": true
    },
    "fastq": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.11.1.tgz",
      "integrity": "sha512-HOnr8Mc60eNYl1gzwp6r5RoUyAn5/glBolUzP/Ez6IFVPMPirxn/9phgL6zhOtaTy7ISwPvQ+wT+hfcRZh/bzw==",
      "requires": {
        "reusify": "^1.0.4"
      }
    },
    "figures": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
      "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.5"
      },
      "dependencies": {
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
          "dev": true
        }
      }
    },
    "file-entry-cache": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",
      "integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",
      "dev": true,
      "requires": {
        "flat-cache": "^2.0.1"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "find-cache-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
      "dev": true,
      "requires": {
        "commondir": "^1.0.1",
        "make-dir": "^2.0.0",
        "pkg-dir": "^3.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
          "dev": true,
          "requires": {
            "p-locate": "^3.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "p-locate": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
          "dev": true,
          "requires": {
            "p-limit": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
          "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
          "dev": true
        },
        "pkg-dir": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
          "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
          "dev": true,
          "requires": {
            "find-up": "^3.0.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "requires": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      }
    },
    "find-yarn-workspace-root": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/find-yarn-workspace-root/-/find-yarn-workspace-root-2.0.0.tgz",
      "integrity": "sha512-1IMnbjt4KzsQfnhnzNd8wUEgXZ44IzZaZmnLYx7D5FZlaHt2gW20Cri8Q+E/t5tIj4+epTBub+2Zxu/vNILzqQ==",
      "dev": true,
      "requires": {
        "micromatch": "^4.0.2"
      }
    },
    "flat-cache": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",
      "integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",
      "dev": true,
      "requires": {
        "flatted": "^2.0.0",
        "rimraf": "2.6.3",
        "write": "1.0.3"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.6.3",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
          "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "flatted": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.2.tgz",
      "integrity": "sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i+75zmd8jcKdMR4O6jA==",
      "dev": true
    },
    "foreground-child": {
      "version": "1.5.6",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-1.5.6.tgz",
      "integrity": "sha1-T9ca0t/elnibmApcCilZN8svXOk=",
      "dev": true,
      "requires": {
        "cross-spawn": "^4",
        "signal-exit": "^3.0.0"
      },
      "dependencies": {
        "cross-spawn": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz",
          "integrity": "sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=",
          "dev": true,
          "requires": {
            "lru-cache": "^4.0.1",
            "which": "^1.2.9"
          }
        },
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        }
      }
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
      "dev": true
    },
    "fs-extra": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
      "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
      "requires": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",
      "dev": true
    },
    "get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "dev": true
    },
    "get-func-name": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.0.tgz",
      "integrity": "sha1-6td0q+5y4gQJQzoGY2YCPdaIekE=",
      "dev": true
    },
    "get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dev": true,
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "github-slugger": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/github-slugger/-/github-slugger-1.3.0.tgz",
      "integrity": "sha512-gwJScWVNhFYSRDvURk/8yhcFBee6aFjye2a7Lhb2bUyRulpIoek9p0I9Kt7PT67d/nUlZbFu8L9RLiA0woQN8Q==",
      "dev": true,
      "requires": {
        "emoji-regex": ">=6.0.0 <=6.1.1"
      },
      "dependencies": {
        "emoji-regex": {
          "version": "6.1.1",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-6.1.1.tgz",
          "integrity": "sha1-xs0OwbBkLio8Z6ETfvxeeW2k+I4=",
          "dev": true
        }
      }
    },
    "glob": {
      "version": "7.1.7",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.7.tgz",
      "integrity": "sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "requires": {
        "is-glob": "^4.0.1"
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true
    },
    "globby": {
      "version": "10.0.2",
      "resolved": "https://registry.npmjs.org/globby/-/globby-10.0.2.tgz",
      "integrity": "sha512-7dUi7RvCoT/xast/o/dLN53oqND4yk0nsHkhRgn9w65C4PofCLOoJ39iSOg+qVDdWQPIEj+eszMHQ+aLVwwQSg==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.0.3",
        "glob": "^7.1.3",
        "ignore": "^5.1.1",
        "merge2": "^1.2.3",
        "slash": "^3.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.2.8",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.8.tgz",
      "integrity": "sha512-qkIilPUYcNhJpd33n0GBXTB1MMPp14TxEsEs0pTrsSVucApsYzW5V+Q8Qxhik6KU3evy+qkAAowTByymK0avdg=="
    },
    "growl": {
      "version": "1.10.5",
      "resolved": "https://registry.npmjs.org/growl/-/growl-1.10.5.tgz",
      "integrity": "sha512-qBr4OuELkhPenW6goKVXiv47US3clb3/IbuWF9KNKEijAy9oeHxU9IgzjvJhHkUzhaj7rOUD7+YGWqUjLp5oSA==",
      "dev": true
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
    },
    "hasha": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/hasha/-/hasha-3.0.0.tgz",
      "integrity": "sha1-UqMvq4Vp1BymmmH/GiFPjrfIvTk=",
      "dev": true,
      "requires": {
        "is-stream": "^1.0.1"
      }
    },
    "he": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/he/-/he-1.1.1.tgz",
      "integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
      "dev": true
    },
    "hosted-git-info": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
      "integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
      "dev": true,
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "html-escaper": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
      "dev": true
    },
    "http-call": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/http-call/-/http-call-5.3.0.tgz",
      "integrity": "sha512-ahwimsC23ICE4kPl9xTBjKB4inbRaeLyZeRunC/1Jy/Z6X8tv22MEAjK+KBOMSVLaqXPTTmd8638waVIKLGx2w==",
      "dev": true,
      "requires": {
        "content-type": "^1.0.4",
        "debug": "^4.1.1",
        "is-retry-allowed": "^1.1.0",
        "is-stream": "^2.0.0",
        "parse-json": "^4.0.0",
        "tunnel-agent": "^0.6.0"
      },
      "dependencies": {
        "is-stream": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
          "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
          "dev": true
        }
      }
    },
    "hyperlinker": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hyperlinker/-/hyperlinker-1.0.0.tgz",
      "integrity": "sha512-Ty8UblRWFEcfSuIaajM34LdPXIhbs1ajEX/BBPv24J+enSVaEVY63xQ6lTO9VRYS5LAoghIG0IDJ+p+IPzKUQQ==",
      "dev": true
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dev": true,
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "dev": true
    },
    "ignore": {
      "version": "5.1.8",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.1.8.tgz",
      "integrity": "sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw=="
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dev": true,
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "import-modules": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/import-modules/-/import-modules-1.1.0.tgz",
      "integrity": "sha1-dI23nFzEK7lwHvq0JPiU5yYA6dw=",
      "dev": true
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
      "dev": true
    },
    "indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg=="
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "inquirer": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.5.2.tgz",
      "integrity": "sha512-cntlB5ghuB0iuO65Ovoi8ogLHiWGs/5yNrtUcKjFhSSiVeAIVpD7koaSU9RM8mpXw5YDi9RdYXGQMaOURB7ycQ==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^3.2.0",
        "chalk": "^2.4.2",
        "cli-cursor": "^2.1.0",
        "cli-width": "^2.0.0",
        "external-editor": "^3.0.3",
        "figures": "^2.0.0",
        "lodash": "^4.17.12",
        "mute-stream": "0.0.7",
        "run-async": "^2.2.0",
        "rxjs": "^6.4.0",
        "string-width": "^2.1.0",
        "strip-ansi": "^5.1.0",
        "through": "^2.3.6"
      },
      "dependencies": {
        "ansi-escapes": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
          "dev": true
        },
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
          "dev": true,
          "requires": {
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^4.0.0"
          },
          "dependencies": {
            "strip-ansi": {
              "version": "4.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
              "dev": true,
              "requires": {
                "ansi-regex": "^3.0.0"
              }
            }
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "4.1.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
              "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
              "dev": true
            }
          }
        }
      }
    },
    "interpret": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
      "integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA=="
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
      "dev": true
    },
    "is-core-module": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.5.0.tgz",
      "integrity": "sha512-TXCMSDsEHMEEZ6eCA8rwRDbLu55MRGmrctljsBX/2v1d9/GzqHOxW5c5oPSgrUt2vBFXebu9rGqckXGPWOlYpg==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ=="
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="
    },
    "is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
    },
    "is-glob": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
    },
    "is-plain-obj": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz",
      "integrity": "sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==",
      "dev": true
    },
    "is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg==",
      "dev": true
    },
    "is-stream": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
      "dev": true
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",
      "dev": true
    },
    "is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "requires": {
        "is-docker": "^2.0.0"
      }
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
      "dev": true
    },
    "istanbul-lib-coverage": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
      "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==",
      "dev": true
    },
    "istanbul-lib-hook": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-2.0.7.tgz",
      "integrity": "sha512-vrRztU9VRRFDyC+aklfLoeXyNdTfga2EI3udDGn4cZ6fpSXpHLV9X6CHvfoMCPtggg8zvDDmC4b9xfu0z6/llA==",
      "dev": true,
      "requires": {
        "append-transform": "^1.0.0"
      }
    },
    "istanbul-lib-instrument": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.3.0.tgz",
      "integrity": "sha512-5nnIN4vo5xQZHdXno/YDXJ0G+I3dAm4XgzfSVTPLQpj/zAV2dV6Juy0yaf10/zrJOJeHoN3fraFe+XRq2bFVZA==",
      "dev": true,
      "requires": {
        "@babel/generator": "^7.4.0",
        "@babel/parser": "^7.4.3",
        "@babel/template": "^7.4.0",
        "@babel/traverse": "^7.4.3",
        "@babel/types": "^7.4.0",
        "istanbul-lib-coverage": "^2.0.5",
        "semver": "^6.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "istanbul-lib-report": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.8.tgz",
      "integrity": "sha512-fHBeG573EIihhAblwgxrSenp0Dby6tJMFR/HvlerBsrCTD5bkUuoNtn3gVh29ZCS824cGGBPn7Sg7cNk+2xUsQ==",
      "dev": true,
      "requires": {
        "istanbul-lib-coverage": "^2.0.5",
        "make-dir": "^2.1.0",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "istanbul-lib-source-maps": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.6.tgz",
      "integrity": "sha512-R47KzMtDJH6X4/YW9XTx+jrLnZnscW4VpNN+1PViSYTejLVPWv7oov+Duf8YQSPyVRUvueQqz1TcsC6mooZTXw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "istanbul-lib-coverage": "^2.0.5",
        "make-dir": "^2.1.0",
        "rimraf": "^2.6.3",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "istanbul-reports": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.7.tgz",
      "integrity": "sha512-uu1F/L1o5Y6LzPVSVZXNOoD/KXpJue9aeLRd0sM9uMXfZvzomB0WxVamWb5ue8kA2vVWEmW7EG+A5n3f1kqHKg==",
      "dev": true,
      "requires": {
        "html-escaper": "^2.0.0"
      }
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true
    },
    "js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "dev": true
    },
    "json-parse-better-errors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==",
      "dev": true
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "dev": true
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",
      "dev": true
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
      "dev": true
    },
    "jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "levn": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2"
      }
    },
    "lines-and-columns": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz",
      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA=",
      "dev": true
    },
    "load-json-file": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-6.2.0.tgz",
      "integrity": "sha512-gUD/epcRms75Cw8RT1pUdHugZYM5ce64ucs2GEISABwkRsOQr0q2wm/MV2TKThycIe5e0ytRweW2RZxclogCdQ==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.15",
        "parse-json": "^5.0.0",
        "strip-bom": "^4.0.0",
        "type-fest": "^0.6.0"
      },
      "dependencies": {
        "parse-json": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
          "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.0.0",
            "error-ex": "^1.3.1",
            "json-parse-even-better-errors": "^2.3.0",
            "lines-and-columns": "^1.1.6"
          }
        },
        "type-fest": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
          "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==",
          "dev": true
        }
      }
    },
    "locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dev": true,
      "requires": {
        "p-locate": "^4.1.0"
      }
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "lodash._reinterpolate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
      "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="
    },
    "lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha1-soqmKIorn8ZRA1x3EfZathkDMaY=",
      "dev": true
    },
    "lodash.flattendeep": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.flattendeep/-/lodash.flattendeep-4.4.0.tgz",
      "integrity": "sha1-+wMJF/hqMTTlvJvsDWngAT3f7bI=",
      "dev": true
    },
    "lodash.get": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
      "integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=",
      "dev": true
    },
    "lodash.kebabcase": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.kebabcase/-/lodash.kebabcase-4.1.1.tgz",
      "integrity": "sha1-hImxyw0p/4gZXM7KRI/21swpXDY=",
      "dev": true
    },
    "lodash.set": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/lodash.set/-/lodash.set-4.3.2.tgz",
      "integrity": "sha1-2HV7HagH3eJIFrDWqEvqGnYjCyM=",
      "dev": true
    },
    "lodash.snakecase": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.snakecase/-/lodash.snakecase-4.1.1.tgz",
      "integrity": "sha1-OdcUo1NXFHg3rv1ktdy7Fr7Nj40=",
      "dev": true
    },
    "lodash.template": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-4.5.0.tgz",
      "integrity": "sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==",
      "requires": {
        "lodash._reinterpolate": "^3.0.0",
        "lodash.templatesettings": "^4.0.0"
      }
    },
    "lodash.templatesettings": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.2.0.tgz",
      "integrity": "sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==",
      "requires": {
        "lodash._reinterpolate": "^3.0.0"
      }
    },
    "lodash.upperfirst": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/lodash.upperfirst/-/lodash.upperfirst-4.3.1.tgz",
      "integrity": "sha1-E2Xt9DFIBIHvDRxolXpe2Z1J984=",
      "dev": true
    },
    "lodash.zip": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/lodash.zip/-/lodash.zip-4.2.0.tgz",
      "integrity": "sha1-7GZi5IlkCO1KtsVCo5kLcswIACA=",
      "dev": true
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dev": true,
      "requires": {
        "semver": "^6.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "6.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
          "dev": true
        }
      }
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "merge-source-map": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.1.0.tgz",
      "integrity": "sha512-Qkcp7P2ygktpMPh2mCQZaf3jhN6D3Z/qVZHSdWvQ+2Ef5HgRAPBO57A77+ENm0CPx2+1Ce/MYKi3ymqdfuqibw==",
      "dev": true,
      "requires": {
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg=="
    },
    "micromatch": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz",
      "integrity": "sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==",
      "requires": {
        "braces": "^3.0.1",
        "picomatch": "^2.2.3"
      }
    },
    "mimic-fn": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
      "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
      "dev": true
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==",
      "dev": true
    },
    "mkdirp": {
      "version": "0.5.5",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz",
      "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==",
      "dev": true,
      "requires": {
        "minimist": "^1.2.5"
      }
    },
    "mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
      "dev": true
    },
    "mocha": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/mocha/-/mocha-5.2.0.tgz",
      "integrity": "sha512-2IUgKDhc3J7Uug+FxMXuqIyYzH7gJjXECKe/w43IGgQHTSj3InJi+yAA7T24L9bQMRKiUEHxEX37G5JpVUGLcQ==",
      "dev": true,
      "requires": {
        "browser-stdout": "1.3.1",
        "commander": "2.15.1",
        "debug": "3.1.0",
        "diff": "3.5.0",
        "escape-string-regexp": "1.0.5",
        "glob": "7.1.2",
        "growl": "1.10.5",
        "he": "1.1.1",
        "minimatch": "3.0.4",
        "mkdirp": "0.5.1",
        "supports-color": "5.4.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
          "dev": true
        },
        "glob": {
          "version": "7.1.2",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
          "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "minimist": {
          "version": "0.0.8",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
          "dev": true
        },
        "mkdirp": {
          "version": "0.5.1",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
          "dev": true,
          "requires": {
            "minimist": "0.0.8"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "supports-color": {
          "version": "5.4.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
          "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "mock-stdin": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/mock-stdin/-/mock-stdin-1.0.0.tgz",
      "integrity": "sha512-tukRdb9Beu27t6dN+XztSRHq9J0B/CoAOySGzHfn8UTfmqipA5yNT/sDUEyYdAV3Hpka6Wx6kOMxuObdOex60Q==",
      "dev": true
    },
    "ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "mute-stream": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
      "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=",
      "dev": true
    },
    "natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
      "dev": true
    },
    "natural-orderby": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/natural-orderby/-/natural-orderby-2.0.3.tgz",
      "integrity": "sha512-p7KTHxU0CUrcOXe62Zfrb5Z13nLvPhSWR/so3kFulUQU0sgUll2Z0LwpsLN351eOOD+hRGu/F1g+6xDfPeD++Q==",
      "dev": true
    },
    "nested-error-stacks": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-2.1.0.tgz",
      "integrity": "sha512-AO81vsIO1k1sM4Zrd6Hu7regmJN1NSiAja10gc4bX3F0wd+9rQmcuHQaHVQCYIEC8iFXnE+mavh23GOt7wBgug==",
      "dev": true
    },
    "nice-try": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
      "dev": true
    },
    "nock": {
      "version": "13.1.1",
      "resolved": "https://registry.npmjs.org/nock/-/nock-13.1.1.tgz",
      "integrity": "sha512-YKTR9MjfK3kS9/l4nuTxyYm30cgOExRHzkLNhL8nhEUyU4f8Za/dRxOqjhVT1vGs0svWo3dDnJTUX1qxYeWy5w==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0",
        "json-stringify-safe": "^5.0.1",
        "lodash.set": "^4.3.2",
        "propagate": "^2.0.0"
      }
    },
    "normalize-package-data": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
      "integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
      "dev": true,
      "requires": {
        "hosted-git-info": "^4.0.1",
        "resolve": "^1.20.0",
        "semver": "^7.3.4",
        "validate-npm-package-license": "^3.0.1"
      }
    },
    "npm-run-path": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
      "dev": true,
      "requires": {
        "path-key": "^2.0.0"
      }
    },
    "nyc": {
      "version": "14.1.1",
      "resolved": "https://registry.npmjs.org/nyc/-/nyc-14.1.1.tgz",
      "integrity": "sha512-OI0vm6ZGUnoGZv/tLdZ2esSVzDwUC88SNs+6JoSOMVxA+gKMB8Tk7jBwgemLx4O40lhhvZCVw1C+OYLOBOPXWw==",
      "dev": true,
      "requires": {
        "archy": "^1.0.0",
        "caching-transform": "^3.0.2",
        "convert-source-map": "^1.6.0",
        "cp-file": "^6.2.0",
        "find-cache-dir": "^2.1.0",
        "find-up": "^3.0.0",
        "foreground-child": "^1.5.6",
        "glob": "^7.1.3",
        "istanbul-lib-coverage": "^2.0.5",
        "istanbul-lib-hook": "^2.0.7",
        "istanbul-lib-instrument": "^3.3.0",
        "istanbul-lib-report": "^2.0.8",
        "istanbul-lib-source-maps": "^3.0.6",
        "istanbul-reports": "^2.2.4",
        "js-yaml": "^3.13.1",
        "make-dir": "^2.1.0",
        "merge-source-map": "^1.1.0",
        "resolve-from": "^4.0.0",
        "rimraf": "^2.6.3",
        "signal-exit": "^3.0.2",
        "spawn-wrap": "^1.4.2",
        "test-exclude": "^5.2.3",
        "uuid": "^3.3.2",
        "yargs": "^13.2.2",
        "yargs-parser": "^13.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
          "dev": true,
          "requires": {
            "p-locate": "^3.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "make-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
          "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
          "dev": true,
          "requires": {
            "pify": "^4.0.1",
            "semver": "^5.6.0"
          }
        },
        "p-locate": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
          "dev": true,
          "requires": {
            "p-limit": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
          "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "object-treeify": {
      "version": "1.1.33",
      "resolved": "https://registry.npmjs.org/object-treeify/-/object-treeify-1.1.33.tgz",
      "integrity": "sha512-EFVjAYfzWqWsBMRHPMAXLCDIJnpMhdWAqR7xG6M6a2cs6PMFpl/+Z20w9zDW4vkxOFfddegBKq9Rehd0bxWE7A==",
      "dev": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
      "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
      "dev": true,
      "requires": {
        "mimic-fn": "^1.0.0"
      }
    },
    "optionator": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.3.tgz",
      "integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==",
      "dev": true,
      "requires": {
        "deep-is": "~0.1.3",
        "fast-levenshtein": "~2.0.6",
        "levn": "~0.3.0",
        "prelude-ls": "~1.1.2",
        "type-check": "~0.3.2",
        "word-wrap": "~1.2.3"
      }
    },
    "os-homedir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
      "dev": true
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
      "dev": true
    },
    "p-finally": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",
      "dev": true
    },
    "p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dev": true,
      "requires": {
        "p-limit": "^2.2.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true
    },
    "package-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/package-hash/-/package-hash-3.0.0.tgz",
      "integrity": "sha512-lOtmukMDVvtkL84rJHI7dpTYq+0rli8N2wlnqUcBuDWCfVhRUfOmnR9SsoHFMLpACvEV60dX7rd0rFaYDZI+FA==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.15",
        "hasha": "^3.0.0",
        "lodash.flattendeep": "^4.4.0",
        "release-zalgo": "^1.0.0"
      }
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
      "dev": true,
      "requires": {
        "error-ex": "^1.3.1",
        "json-parse-better-errors": "^1.0.1"
      }
    },
    "password-prompt": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/password-prompt/-/password-prompt-1.1.2.tgz",
      "integrity": "sha512-bpuBhROdrhuN3E7G/koAju0WjVw9/uQOG5Co5mokNj0MiOSBVZS1JTwM4zl55hu0WFmIEFvO9cU9sJQiBIYeIA==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^3.1.0",
        "cross-spawn": "^6.0.5"
      },
      "dependencies": {
        "ansi-escapes": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
          "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
          "dev": true
        }
      }
    },
    "path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
    },
    "path-is-inside": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
      "dev": true
    },
    "path-key": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
    },
    "pathval": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz",
      "integrity": "sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==",
      "dev": true
    },
    "picomatch": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz",
      "integrity": "sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw=="
    },
    "pify": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
      "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
      "dev": true
    },
    "pkg-dir": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
      "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
      "dev": true,
      "requires": {
        "find-up": "^4.0.0"
      }
    },
    "prelude-ls": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
      "dev": true
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "dev": true
    },
    "propagate": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/propagate/-/propagate-2.0.1.tgz",
      "integrity": "sha512-vGrhOavPSTz4QVNuBNdcNXePNdNMaO1xj9yBeH1ScQPjk/rhg9sSlCXPhMkFuaNNW/syTvYqsnbIJxMBfRbbag==",
      "dev": true
    },
    "pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
      "dev": true
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
      "dev": true
    },
    "qqjs": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/qqjs/-/qqjs-0.3.11.tgz",
      "integrity": "sha512-pB2X5AduTl78J+xRSxQiEmga1jQV0j43jOPs/MTgTLApGFEOn6NgdE2dEjp7nvDtjkIOZbvFIojAiYUx6ep3zg==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.1",
        "debug": "^4.1.1",
        "execa": "^0.10.0",
        "fs-extra": "^6.0.1",
        "get-stream": "^5.1.0",
        "glob": "^7.1.2",
        "globby": "^10.0.1",
        "http-call": "^5.1.2",
        "load-json-file": "^6.2.0",
        "pkg-dir": "^4.2.0",
        "tar-fs": "^2.0.0",
        "tmp": "^0.1.0",
        "write-json-file": "^4.1.1"
      },
      "dependencies": {
        "fs-extra": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-6.0.1.tgz",
          "integrity": "sha512-GnyIkKhhzXZUWFCaJzvyDLEEgDkPfb4/TPvJCJVuS8MWZgoSsErf++QpiAlDnKFcqhRlm+tIOcencCjyJE6ZCA==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        }
      }
    },
    "queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A=="
    },
    "ramda": {
      "version": "0.26.1",
      "resolved": "https://registry.npmjs.org/ramda/-/ramda-0.26.1.tgz",
      "integrity": "sha512-hLWjpy7EnsDBb0p+Z3B7rPi3GDeRG5ZtiI33kJhTt+ORCd38AbAIjB/9zRIUoeTbE/AVX5ZkU7m6bznsvrf8eQ==",
      "dev": true
    },
    "read-pkg": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
      "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
      "dev": true,
      "requires": {
        "load-json-file": "^4.0.0",
        "normalize-package-data": "^2.3.2",
        "path-type": "^3.0.0"
      },
      "dependencies": {
        "hosted-git-info": {
          "version": "2.8.9",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz",
          "integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==",
          "dev": true
        },
        "load-json-file": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
          "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "parse-json": "^4.0.0",
            "pify": "^3.0.0",
            "strip-bom": "^3.0.0"
          }
        },
        "normalize-package-data": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
          "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
          "dev": true,
          "requires": {
            "hosted-git-info": "^2.1.4",
            "resolve": "^1.10.0",
            "semver": "2 || 3 || 4 || 5",
            "validate-npm-package-license": "^3.0.1"
          }
        },
        "path-type": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
          "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
          "dev": true,
          "requires": {
            "pify": "^3.0.0"
          }
        },
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "read-pkg-up": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",
      "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",
      "dev": true,
      "requires": {
        "find-up": "^3.0.0",
        "read-pkg": "^3.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "locate-path": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
          "dev": true,
          "requires": {
            "p-locate": "^3.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-locate": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
          "dev": true,
          "requires": {
            "p-limit": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
          "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
          "dev": true
        }
      }
    },
    "readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      }
    },
    "rechoir": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
      "requires": {
        "resolve": "^1.1.6"
      }
    },
    "redeyed": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz",
      "integrity": "sha1-iYS1gV2ZyyIEacme7v/jiRPmzAs=",
      "dev": true,
      "requires": {
        "esprima": "~4.0.0"
      }
    },
    "regexpp": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",
      "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw==",
      "dev": true
    },
    "release-zalgo": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/release-zalgo/-/release-zalgo-1.0.0.tgz",
      "integrity": "sha1-CXALflB0Mpc5Mw5TXFqQ+2eFFzA=",
      "dev": true,
      "requires": {
        "es6-error": "^4.0.1"
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
      "dev": true
    },
    "require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "dev": true
    },
    "resolve": {
      "version": "1.20.0",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.20.0.tgz",
      "integrity": "sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr067wjbmzOG8byDPBX63A==",
      "requires": {
        "is-core-module": "^2.2.0",
        "path-parse": "^1.0.6"
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true
    },
    "restore-cursor": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
      "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
      "dev": true,
      "requires": {
        "onetime": "^2.0.0",
        "signal-exit": "^3.0.2"
      }
    },
    "ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
      "dev": true
    },
    "reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw=="
    },
    "rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "run-async": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
      "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==",
      "dev": true
    },
    "run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "requires": {
        "queue-microtask": "^1.2.2"
      }
    },
    "rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "dev": true,
      "requires": {
        "tslib": "^1.9.0"
      },
      "dependencies": {
        "tslib": {
          "version": "1.14.1",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
          "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
          "dev": true
        }
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "dev": true
    },
    "safe-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
      "dev": true,
      "requires": {
        "ret": "~0.1.10"
      }
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "dev": true
    },
    "semver": {
      "version": "7.3.5",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
      "integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
      "requires": {
        "lru-cache": "^6.0.0"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",
      "dev": true
    },
    "shebang-command": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
      "dev": true,
      "requires": {
        "shebang-regex": "^1.0.0"
      }
    },
    "shebang-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
      "dev": true
    },
    "shelljs": {
      "version": "0.8.4",
      "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.4.tgz",
      "integrity": "sha512-7gk3UZ9kOfPLIAbslLzyWeGiEqx9e3rxwZM0KE6EL8GlGwjym9Mrlx5/p33bWTu9YG6vcS4MBxYZDHYr5lr8BQ==",
      "requires": {
        "glob": "^7.0.0",
        "interpret": "^1.0.0",
        "rechoir": "^0.6.2"
      }
    },
    "signal-exit": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
      "integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==",
      "dev": true
    },
    "slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q=="
    },
    "slice-ansi": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",
      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.0",
        "astral-regex": "^1.0.0",
        "is-fullwidth-code-point": "^2.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "requires": {
            "color-convert": "^1.9.0"
          }
        },
        "color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "dev": true,
          "requires": {
            "color-name": "1.1.3"
          }
        },
        "color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        }
      }
    },
    "sort-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-4.2.0.tgz",
      "integrity": "sha512-aUYIEU/UviqPgc8mHR6IW1EGxkAXpeRETYcrzg8cLAvUPZcpAlleSXHV2mY7G12GphSH6Gzv+4MMVSSkbdteHg==",
      "dev": true,
      "requires": {
        "is-plain-obj": "^2.0.0"
      }
    },
    "source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
      "dev": true
    },
    "source-map-support": {
      "version": "0.5.19",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.19.tgz",
      "integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi/Mdjv7Tip2cyVbLj5o0cFPN4EVkuTwb3GDDyUx2DGnGw==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "spawn-wrap": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/spawn-wrap/-/spawn-wrap-1.4.3.tgz",
      "integrity": "sha512-IgB8md0QW/+tWqcavuFgKYR/qIRvJkRLPJDFaoXtLLUaVcCDK0+HeFTkmQHj3eprcYhc+gOl0aEA1w7qZlYezw==",
      "dev": true,
      "requires": {
        "foreground-child": "^1.5.6",
        "mkdirp": "^0.5.0",
        "os-homedir": "^1.0.1",
        "rimraf": "^2.6.2",
        "signal-exit": "^3.0.2",
        "which": "^1.3.0"
      }
    },
    "spdx-correct": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz",
      "integrity": "sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==",
      "dev": true,
      "requires": {
        "spdx-expression-parse": "^3.0.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-exceptions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz",
      "integrity": "sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==",
      "dev": true
    },
    "spdx-expression-parse": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz",
      "integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==",
      "dev": true,
      "requires": {
        "spdx-exceptions": "^2.1.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-license-ids": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.9.tgz",
      "integrity": "sha512-Ki212dKK4ogX+xDo4CtOZBVIwhsKBEfsEEcwmJfLQzirgc2jIWdzg40Unxz/HzEUqM1WFzVlQSMF9kZZ2HboLQ==",
      "dev": true
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
      "dev": true
    },
    "stdout-stderr": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/stdout-stderr/-/stdout-stderr-0.1.13.tgz",
      "integrity": "sha512-Xnt9/HHHYfjZ7NeQLvuQDyL1LnbsbddgMFKCuaQKwGCdJm8LnstZIXop+uOY36UR1UXXoHXfMbC1KlVdVd2JLA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "strip-ansi": "^6.0.0"
      }
    },
    "string-width": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.2.tgz",
      "integrity": "sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==",
      "requires": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.2.0"
      }
    },
    "strip-ansi": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
      "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
      "requires": {
        "ansi-regex": "^5.0.0"
      }
    },
    "strip-bom": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz",
      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==",
      "dev": true
    },
    "strip-eof": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
      "dev": true
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo=",
      "dev": true
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "supports-hyperlinks": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-2.2.0.tgz",
      "integrity": "sha512-6sXEzV5+I5j8Bmq9/vUphGRM/RJNT9SCURJLjwfOg51heRtguGWDzcaBlgAzKhQa0EVNpPEKzQuBwZ8S8WaCeQ==",
      "dev": true,
      "requires": {
        "has-flag": "^4.0.0",
        "supports-color": "^7.0.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "supports-color": {
          "version": "7.2.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
          "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "table": {
      "version": "5.4.6",
      "resolved": "https://registry.npmjs.org/table/-/table-5.4.6.tgz",
      "integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==",
      "dev": true,
      "requires": {
        "ajv": "^6.10.2",
        "lodash": "^4.17.14",
        "slice-ansi": "^2.1.0",
        "string-width": "^3.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "dev": true,
      "requires": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "dev": true,
      "requires": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      }
    },
    "test-exclude": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.3.tgz",
      "integrity": "sha512-M+oxtseCFO3EDtAaGH7iiej3CBkzXqFMbzqYAACdzKui4eZA+pq3tZEwChvOdNfa7xxy8BfbmgJSIr43cC/+2g==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "read-pkg-up": "^4.0.0",
        "require-main-filename": "^2.0.0"
      }
    },
    "text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
      "dev": true
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
      "dev": true
    },
    "tmp": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.1.0.tgz",
      "integrity": "sha512-J7Z2K08jbGcdA1kkQpJSqLF6T0tdQqpR2pnSUXsIchbPdTI9v3e85cLW0d6WDhwuAleOV71j2xWs8qMPfK7nKw==",
      "dev": true,
      "requires": {
        "rimraf": "^2.6.3"
      }
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
      "dev": true
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "ts-node": {
      "version": "8.10.2",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-8.10.2.tgz",
      "integrity": "sha512-ISJJGgkIpDdBhWVu3jufsWpK3Rzo7bdiIXJjQc0ynKxVOVcg2oIrf2H2cejminGrptVc6q6/uynAHNCuWGbpVA==",
      "dev": true,
      "requires": {
        "arg": "^4.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "source-map-support": "^0.5.17",
        "yn": "3.1.1"
      },
      "dependencies": {
        "diff": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
          "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
          "dev": true
        }
      }
    },
    "tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg=="
    },
    "tsutils": {
      "version": "3.21.0",
      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.21.0.tgz",
      "integrity": "sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKhRMPEmjBRPzs2W7O1OA==",
      "dev": true,
      "requires": {
        "tslib": "^1.8.1"
      },
      "dependencies": {
        "tslib": {
          "version": "1.14.1",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
          "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
          "dev": true
        }
      }
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
      "dev": true,
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "type-check": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
      "dev": true,
      "requires": {
        "prelude-ls": "~1.1.2"
      }
    },
    "type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
      "dev": true
    },
    "type-fest": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
      "dev": true
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typescript": {
      "version": "3.9.10",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.9.10.tgz",
      "integrity": "sha512-w6fIxVE/H1PkLKcCPsFqKE7Kv7QUwhU8qQY2MueZXWx5cPZdwFupLgKK3vntcK98BtNHZtAF4LA/yl2a7k8R6Q==",
      "dev": true
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="
    },
    "uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
      "dev": true
    },
    "uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "dev": true
    },
    "validate-npm-package-license": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
      "dev": true,
      "requires": {
        "spdx-correct": "^3.0.0",
        "spdx-expression-parse": "^3.0.0"
      }
    },
    "which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "dev": true,
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
      "dev": true
    },
    "widest-line": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
      "integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
      "requires": {
        "string-width": "^4.0.0"
      }
    },
    "word-wrap": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
      "integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==",
      "dev": true
    },
    "wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "requires": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
    },
    "write": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",
      "integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",
      "dev": true,
      "requires": {
        "mkdirp": "^0.5.1"
      }
    },
    "write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "write-json-file": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/write-json-file/-/write-json-file-4.3.0.tgz",
      "integrity": "sha512-PxiShnxf0IlnQuMYOPPhPkhExoCQuTUNPOa/2JWCYTmBquU9njyyDuwRKN26IZBlp4yn1nt+Agh2HOOBl+55HQ==",
      "dev": true,
      "requires": {
        "detect-indent": "^6.0.0",
        "graceful-fs": "^4.1.15",
        "is-plain-obj": "^2.0.0",
        "make-dir": "^3.0.0",
        "sort-keys": "^4.0.0",
        "write-file-atomic": "^3.0.0"
      }
    },
    "y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
      "dev": true
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "yargs": {
      "version": "13.3.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.3.2.tgz",
      "integrity": "sha512-AX3Zw5iPruN5ie6xGRIDgqkT+ZhnRlZMLMHAs8tg7nRruy2Nb+i5o9bwghAogtM08q1dpr2LVoS8KSTMYpWXUw==",
      "dev": true,
      "requires": {
        "cliui": "^5.0.0",
        "find-up": "^3.0.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^3.0.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^13.1.2"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "find-up": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
          "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
          "dev": true,
          "requires": {
            "locate-path": "^3.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
          "dev": true
        },
        "locate-path": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
          "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
          "dev": true,
          "requires": {
            "p-locate": "^3.0.0",
            "path-exists": "^3.0.0"
          }
        },
        "p-locate": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
          "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
          "dev": true,
          "requires": {
            "p-limit": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
          "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "yargs-parser": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.2.tgz",
      "integrity": "sha512-3lbsNRf/j+A4QuSZfDRA7HRSfWrzO0YjqTJd5kjAq37Zep1CEgaYmrH9Q3GwPiB9cHyd1Y1UwggGhJGoxipbzg==",
      "dev": true,
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "dev": true
    }
  }
}

'''
'''--- rust/mallocrustcli/package.json ---
{
  "name": "mallocrustcli",
  "version": "0.0.0",
  "author": "Lev Stambler @Lev-Stambler",
  "bin": {
    "mallocrustcli": "./bin/run"
  },
  "bugs": "https://github.com/Lev-Stambler/mallocrustcli/issues",
  "dependencies": {
    "@oclif/command": "^1.8.0",
    "@oclif/config": "^1.17.0",
    "@oclif/plugin-help": "^3.2.2",
    "shelljs": "^0.8.4",
    "tslib": "^1.14.1"
  },
  "devDependencies": {
    "@oclif/dev-cli": "^1.26.0",
    "@oclif/test": "^1.2.8",
    "@types/chai": "^4.2.21",
    "@types/mocha": "^5.2.7",
    "@types/node": "^10.17.60",
    "@types/shelljs": "^0.8.9",
    "chai": "^4.3.4",
    "eslint": "^5.16.0",
    "eslint-config-oclif": "^3.1.0",
    "eslint-config-oclif-typescript": "^0.1.0",
    "globby": "^10.0.2",
    "mocha": "^5.2.0",
    "nyc": "^14.1.1",
    "ts-node": "^8.10.2",
    "typescript": "^3.9.10"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/bin",
    "/lib",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json"
  ],
  "homepage": "https://github.com/Lev-Stambler/mallocrustcli",
  "keywords": [
    "oclif"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "mallocrustcli",
    "plugins": [
      "@oclif/plugin-help"
    ]
  },
  "repository": "Lev-Stambler/mallocrustcli",
  "scripts": {
    "postpack": "rm -f oclif.manifest.json",
    "posttest": "eslint . --ext .ts --config .eslintrc",
    "prepack": "rm -rf lib && tsc -b && oclif-dev manifest && oclif-dev readme",
    "test": "nyc --extension .ts mocha --forbid-only \"test/**/*.test.ts\"",
    "version": "oclif-dev readme && git add README.md"
  },
  "types": "lib/index.d.ts"
}

'''
'''--- rust/mallocrustcli/src/commands/deploy.ts ---
import { Command, flags } from "@oclif/command";
import {
  buildAndSimLink,
  devDeploy,
  getMallocContractDevAccount,
} from "../utils";

export default class Hello extends Command {
  static description = "Deploy a contract and optionally call new";

  static examples = [`$ mallocrustcli deploy <PACKAGE DIRECTORY NAME>`];

  static flags = {
    help: flags.help({ char: "h" }),
    // flag with a value (-n, --name=VALUE)
    caller: flags.string({
      char: "c",
      description: "The caller account ID",
    }),
    callNew: flags.string({
      char: "n",
      description: "Stringified JSON arguments for the new call",
    }),
    includeMallocContractId: flags.boolean({
      description:
        "Include the current dev deployed malloc contract ID in the new call",
      char: "m"
    }),
  };

  static args = [{ name: "package" }];

  async run() {
    const { args, flags } = this.parse(Hello);

    let caller = flags.caller || "levtester.testnet";
    // TODO: have some better way to have a default caller w/o being hardcoded
    // if (!flags.caller) {
    // this.error("Expected the -c (caller) flag to be present");
    // }

    if (!args.package) {
      this.error(
        "Expected the last argument to be the package directory (i.e. contract, malloc-calls/error-malloc-calls etc.)"
      );
    }

    const newFlag = flags.callNew ?? null;
    const mallocContractIdArgs = flags.includeMallocContractId
      ? { malloc_contract_id: getMallocContractDevAccount() }
      : {};

    // this.log(`hello ${name} from ./src/commands/.ts`);
    args.package;
    buildAndSimLink(args.package);

    devDeploy(args.package, {
      callNew: newFlag
        ? {
            caller: caller,
            args: { ...JSON.parse(newFlag), ...mallocContractIdArgs },
          }
        : undefined,
    });
  }
}

'''
'''--- rust/mallocrustcli/src/index.ts ---
export {run} from '@oclif/command'

'''
'''--- rust/mallocrustcli/src/utils/index.ts ---
// This file does two things:
//
// 1. Compile the Rust contract using cargo (see buildCmd below). This will
//    create a wasm file in the 'build' folder.
// 2. Create a symbolic link (symlink) to the generated wasm file in the root
//    project's `out` folder, for easy use with near-cli.
//
// First, import some helper libraries. `shelljs` is included in the
// devDependencies of the root project, which is why it's available here. It
// makes it easy to use *NIX-style scripting (which works on Linux distros,
// macOS, and Unix systems) on Windows as well.
import { readFileSync } from "fs";
import { join } from "path";
import * as sh from "shelljs";

type DevDeployOpts = {
  callNew?: {
    args: object;
    caller: string;
  };
};

const getContractDir = (packageDir: string): string =>
  join(__dirname, "../../../packages", packageDir);

const getMallocContractDir = (): string =>
  join(__dirname, "../../../packages", "contract");

const getPackageName = (contractDir: string) => {
  const match = readFileSync(`${contractDir}/Cargo.toml`)
    .toString()
    .match(/name = "([^"]+)"/);
  if (!match || match?.length < 2) {
    throw "Failed to read Cargo.toml";
  }
  return match[1];
};

const getDevAccount = (contractDir: string) =>
  readFileSync(join(contractDir, "./neardev/dev-account"))
    .toString()
    .replace("\n", "");

export const getMallocContractDevAccount = () =>
  getDevAccount(getMallocContractDir());

export const devDeploy = (projectDir: string, opts?: DevDeployOpts) => {
  const contractDir = getContractDir(projectDir);
  sh.cd(contractDir);
  const deployCmd = `near dev-deploy ./target/wasm32-unknown-unknown/release/${getPackageName(
    contractDir
  ).replace(/-/g, "_")}.wasm`;
  const { code } = sh.exec(deployCmd);
  if (code !== 0) process.exit(code);

  if (opts?.callNew) {
    const newCmd = `near call ${getDevAccount(contractDir)} new --accountId=${
      opts.callNew.caller
    } '${JSON.stringify(opts.callNew.args)}'`;
    try {
      // TODO: get stderr return and check
      const { code } = sh.exec(newCmd);
    } catch (e) {
      if (
        e?.stderr?.indexOf("The contract has already been initialized") !== -1
      )
        console.log("Looks like the contract has already been initialized");
      else throw e;
    }
  }
};

export const buildAndSimLink = (projectDir: string) => {
  const calledFromDir = sh.pwd().toString();
  const contractDir = getContractDir(projectDir);
  sh.cd(contractDir);

  // You can call this script with `action compile.js` or `action compile.js
  // --debug`. Let's set a variable to track whether `--debug` was used.
  const debug = process.argv.pop() === "--debug";

  // You can call this script with `action compile.js` or `action compile.js --debug`.
  // Let's set a variable to track whether `--debug` was used.
  // Note: see other flags in ./cargo/config. Unfortunately, you cannot set the
  // `--target option` in Cargo.toml.
  const buildCmd = debug
    ? "cargo build --target wasm32-unknown-unknown"
    : "cargo build --target wasm32-unknown-unknown --release";

  // Execute the build command, storing exit code for later use
  const { code } = sh.exec(buildCmd);

  if (code !== 0) process.exit(code);
};

// if (require.main === module) {
//   const projectDir = process.argv.pop();
//   if (!projectDir)
//     throw "Expected the last command line argument to be the package's directory";
//   buildAndSimLink(projectDir);
//   devDeploy(projectDir, {
//     callNew: {
//       caller: "levtester.testnet",
//       args: { ref_finance: "ref-finance.testnet" },
//     },
//   });
// }

'''
'''--- rust/mallocrustcli/test/commands/hello.test.ts ---
import {expect, test} from '@oclif/test'

describe('hello', () => {
  test
  .stdout()
  .command(['hello'])
  .it('runs hello', ctx => {
    expect(ctx.stdout).to.contain('hello world')
  })

  test
  .stdout()
  .command(['hello', '--name', 'jeff'])
  .it('runs hello --name jeff', ctx => {
    expect(ctx.stdout).to.contain('hello jeff')
  })
})

'''
'''--- rust/mallocrustcli/test/tsconfig.json ---
{
  "extends": "../tsconfig",
  "compilerOptions": {
    "noEmit": true
  },
  "references": [
    {"path": ".."}
  ]
}

'''
'''--- rust/mallocrustcli/tsconfig.json ---
{
  "compilerOptions": {
    "declaration": true,
    "importHelpers": true,
    "module": "commonjs",
    "outDir": "lib",
    "rootDir": "src",
    "strict": true,
    "target": "es2017"
  },
  "include": [
    "src/**/*",
    "../src/**/*",
  ]
}

'''
'''--- rust/package-lock.json ---
{
	"name": "rust",
	"version": "0.1.0",
	"lockfileVersion": 1,
	"requires": true,
	"dependencies": {
		"@babel/code-frame": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.14.5.tgz",
			"integrity": "sha512-9pzDqyc6OLDaqe+zbACgFkb6fKMNG6CObKpnYXChRsvYGyEdc7CA2BaqeOM+vOtCS5ndmJicPJhKAwYRI6UfFw==",
			"requires": {
				"@babel/highlight": "^7.14.5"
			}
		},
		"@babel/compat-data": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.14.7.tgz",
			"integrity": "sha512-nS6dZaISCXJ3+518CWiBfEr//gHyMO02uDxBkXTKZDN5POruCnOZ1N4YBRZDCabwF8nZMWBpRxIicmXtBs+fvw==",
			"dev": true
		},
		"@babel/core": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/core/-/core-7.14.6.tgz",
			"integrity": "sha512-gJnOEWSqTk96qG5BoIrl5bVtc23DCycmIePPYnamY9RboYdI4nFy5vAQMSl81O5K/W0sLDWfGysnOECC+KUUCA==",
			"dev": true,
			"requires": {
				"@babel/code-frame": "^7.14.5",
				"@babel/generator": "^7.14.5",
				"@babel/helper-compilation-targets": "^7.14.5",
				"@babel/helper-module-transforms": "^7.14.5",
				"@babel/helpers": "^7.14.6",
				"@babel/parser": "^7.14.6",
				"@babel/template": "^7.14.5",
				"@babel/traverse": "^7.14.5",
				"@babel/types": "^7.14.5",
				"convert-source-map": "^1.7.0",
				"debug": "^4.1.0",
				"gensync": "^1.0.0-beta.2",
				"json5": "^2.1.2",
				"semver": "^6.3.0",
				"source-map": "^0.5.0"
			}
		},
		"@babel/generator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.14.5.tgz",
			"integrity": "sha512-y3rlP+/G25OIX3mYKKIOlQRcqj7YgrvHxOLbVmyLJ9bPmi5ttvUmpydVjcFjZphOktWuA7ovbx91ECloWTfjIA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5",
				"jsesc": "^2.5.1",
				"source-map": "^0.5.0"
			}
		},
		"@babel/helper-annotate-as-pure": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.14.5.tgz",
			"integrity": "sha512-EivH9EgBIb+G8ij1B2jAwSH36WnGvkQSEC6CkX/6v6ZFlw5fVOHvsgGF4uiEHO2GzMvunZb6tDLQEQSdrdocrA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-builder-binary-assignment-operator-visitor": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.14.5.tgz",
			"integrity": "sha512-YTA/Twn0vBXDVGJuAX6PwW7x5zQei1luDDo2Pl6q1qZ7hVNl0RZrhHCQG/ArGpR29Vl7ETiB8eJyrvpuRp300w==",
			"dev": true,
			"requires": {
				"@babel/helper-explode-assignable-expression": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-compilation-targets": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.14.5.tgz",
			"integrity": "sha512-v+QtZqXEiOnpO6EYvlImB6zCD2Lel06RzOPzmkz/D/XgQiUu3C/Jb1LOqSt/AIA34TYi/Q+KlT8vTQrgdxkbLw==",
			"dev": true,
			"requires": {
				"@babel/compat-data": "^7.14.5",
				"@babel/helper-validator-option": "^7.14.5",
				"browserslist": "^4.16.6",
				"semver": "^6.3.0"
			}
		},
		"@babel/helper-create-class-features-plugin": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.14.6.tgz",
			"integrity": "sha512-Z6gsfGofTxH/+LQXqYEK45kxmcensbzmk/oi8DmaQytlQCgqNZt9XQF8iqlI/SeXWVjaMNxvYvzaYw+kh42mDg==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-function-name": "^7.14.5",
				"@babel/helper-member-expression-to-functions": "^7.14.5",
				"@babel/helper-optimise-call-expression": "^7.14.5",
				"@babel/helper-replace-supers": "^7.14.5",
				"@babel/helper-split-export-declaration": "^7.14.5"
			}
		},
		"@babel/helper-create-regexp-features-plugin": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.14.5.tgz",
			"integrity": "sha512-TLawwqpOErY2HhWbGJ2nZT5wSkR192QpN+nBg1THfBfftrlvOh+WbhrxXCH4q4xJ9Gl16BGPR/48JA+Ryiho/A==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"regexpu-core": "^4.7.1"
			}
		},
		"@babel/helper-define-polyfill-provider": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.2.3.tgz",
			"integrity": "sha512-RH3QDAfRMzj7+0Nqu5oqgO5q9mFtQEVvCRsi8qCEfzLR9p2BHfn5FzhSB2oj1fF7I2+DcTORkYaQ6aTR9Cofew==",
			"dev": true,
			"requires": {
				"@babel/helper-compilation-targets": "^7.13.0",
				"@babel/helper-module-imports": "^7.12.13",
				"@babel/helper-plugin-utils": "^7.13.0",
				"@babel/traverse": "^7.13.0",
				"debug": "^4.1.1",
				"lodash.debounce": "^4.0.8",
				"resolve": "^1.14.2",
				"semver": "^6.1.2"
			}
		},
		"@babel/helper-explode-assignable-expression": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.14.5.tgz",
			"integrity": "sha512-Htb24gnGJdIGT4vnRKMdoXiOIlqOLmdiUYpAQ0mYfgVT/GDm8GOYhgi4GL+hMKrkiPRohO4ts34ELFsGAPQLDQ==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-function-name": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.14.5.tgz",
			"integrity": "sha512-Gjna0AsXWfFvrAuX+VKcN/aNNWonizBj39yGwUzVDVTlMYJMK2Wp6xdpy72mfArFq5uK+NOuexfzZlzI1z9+AQ==",
			"dev": true,
			"requires": {
				"@babel/helper-get-function-arity": "^7.14.5",
				"@babel/template": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-get-function-arity": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.14.5.tgz",
			"integrity": "sha512-I1Db4Shst5lewOM4V+ZKJzQ0JGGaZ6VY1jYvMghRjqs6DWgxLCIyFt30GlnKkfUeFLpJt2vzbMVEXVSXlIFYUg==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-hoist-variables": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.14.5.tgz",
			"integrity": "sha512-R1PXiz31Uc0Vxy4OEOm07x0oSjKAdPPCh3tPivn/Eo8cvz6gveAeuyUUPB21Hoiif0uoPQSSdhIPS3352nvdyQ==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-member-expression-to-functions": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.14.7.tgz",
			"integrity": "sha512-TMUt4xKxJn6ccjcOW7c4hlwyJArizskAhoSTOCkA0uZ+KghIaci0Qg9R043kUMWI9mtQfgny+NQ5QATnZ+paaA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-module-imports": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.14.5.tgz",
			"integrity": "sha512-SwrNHu5QWS84XlHwGYPDtCxcA0hrSlL2yhWYLgeOc0w7ccOl2qv4s/nARI0aYZW+bSwAL5CukeXA47B/1NKcnQ==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-module-transforms": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.14.5.tgz",
			"integrity": "sha512-iXpX4KW8LVODuAieD7MzhNjmM6dzYY5tfRqT+R9HDXWl0jPn/djKmA+G9s/2C2T9zggw5tK1QNqZ70USfedOwA==",
			"dev": true,
			"requires": {
				"@babel/helper-module-imports": "^7.14.5",
				"@babel/helper-replace-supers": "^7.14.5",
				"@babel/helper-simple-access": "^7.14.5",
				"@babel/helper-split-export-declaration": "^7.14.5",
				"@babel/helper-validator-identifier": "^7.14.5",
				"@babel/template": "^7.14.5",
				"@babel/traverse": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-optimise-call-expression": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.14.5.tgz",
			"integrity": "sha512-IqiLIrODUOdnPU9/F8ib1Fx2ohlgDhxnIDU7OEVi+kAbEZcyiF7BLU8W6PfvPi9LzztjS7kcbzbmL7oG8kD6VA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-plugin-utils": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.14.5.tgz",
			"integrity": "sha512-/37qQCE3K0vvZKwoK4XU/irIJQdIfCJuhU5eKnNxpFDsOkgFaUAwbv+RYw6eYgsC0E4hS7r5KqGULUogqui0fQ==",
			"dev": true
		},
		"@babel/helper-remap-async-to-generator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.14.5.tgz",
			"integrity": "sha512-rLQKdQU+HYlxBwQIj8dk4/0ENOUEhA/Z0l4hN8BexpvmSMN9oA9EagjnhnDpNsRdWCfjwa4mn/HyBXO9yhQP6A==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-wrap-function": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-replace-supers": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.14.5.tgz",
			"integrity": "sha512-3i1Qe9/8x/hCHINujn+iuHy+mMRLoc77b2nI9TB0zjH1hvn9qGlXjWlggdwUcju36PkPCy/lpM7LLUdcTyH4Ow==",
			"dev": true,
			"requires": {
				"@babel/helper-member-expression-to-functions": "^7.14.5",
				"@babel/helper-optimise-call-expression": "^7.14.5",
				"@babel/traverse": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-simple-access": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.14.5.tgz",
			"integrity": "sha512-nfBN9xvmCt6nrMZjfhkl7i0oTV3yxR4/FztsbOASyTvVcoYd0TRHh7eMLdlEcCqobydC0LAF3LtC92Iwxo0wyw==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-skip-transparent-expression-wrappers": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.14.5.tgz",
			"integrity": "sha512-dmqZB7mrb94PZSAOYtr+ZN5qt5owZIAgqtoTuqiFbHFtxgEcmQlRJVI+bO++fciBunXtB6MK7HrzrfcAzIz2NQ==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-split-export-declaration": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.14.5.tgz",
			"integrity": "sha512-hprxVPu6e5Kdp2puZUmvOGjaLv9TCe58E/Fl6hRq4YiVQxIcNvuq6uTM2r1mT/oPskuS9CgR+I94sqAYv0NGKA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helper-validator-identifier": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.14.5.tgz",
			"integrity": "sha512-5lsetuxCLilmVGyiLEfoHBRX8UCFD+1m2x3Rj97WrW3V7H3u4RWRXA4evMjImCsin2J2YT0QaVDGf+z8ondbAg=="
		},
		"@babel/helper-validator-option": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.14.5.tgz",
			"integrity": "sha512-OX8D5eeX4XwcroVW45NMvoYaIuFI+GQpA2a8Gi+X/U/cDUIRsV37qQfF905F0htTRCREQIB4KqPeaveRJUl3Ow==",
			"dev": true
		},
		"@babel/helper-wrap-function": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.14.5.tgz",
			"integrity": "sha512-YEdjTCq+LNuNS1WfxsDCNpgXkJaIyqco6DAelTUjT4f2KIWC1nBcaCaSdHTBqQVLnTBexBcVcFhLSU1KnYuePQ==",
			"dev": true,
			"requires": {
				"@babel/helper-function-name": "^7.14.5",
				"@babel/template": "^7.14.5",
				"@babel/traverse": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/helpers": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.14.6.tgz",
			"integrity": "sha512-yesp1ENQBiLI+iYHSJdoZKUtRpfTlL1grDIX9NRlAVppljLw/4tTyYupIB7uIYmC3stW/imAv8EqaKaS/ibmeA==",
			"dev": true,
			"requires": {
				"@babel/template": "^7.14.5",
				"@babel/traverse": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/highlight": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.14.5.tgz",
			"integrity": "sha512-qf9u2WFWVV0MppaL877j2dBtQIDgmidgjGk5VIMw3OadXvYaXn66U1BFlH2t4+t3i+8PhedppRv+i40ABzd+gg==",
			"requires": {
				"@babel/helper-validator-identifier": "^7.14.5",
				"chalk": "^2.0.0",
				"js-tokens": "^4.0.0"
			}
		},
		"@babel/parser": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.14.7.tgz",
			"integrity": "sha512-X67Z5y+VBJuHB/RjwECp8kSl5uYi0BvRbNeWqkaJCVh+LiTPl19WBUfG627psSgp9rSf6ojuXghQM3ha6qHHdA==",
			"dev": true
		},
		"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.14.5.tgz",
			"integrity": "sha512-ZoJS2XCKPBfTmL122iP6NM9dOg+d4lc9fFk3zxc8iDjvt8Pk4+TlsHSKhIPf6X+L5ORCdBzqMZDjL/WHj7WknQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-skip-transparent-expression-wrappers": "^7.14.5",
				"@babel/plugin-proposal-optional-chaining": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-async-generator-functions": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.14.7.tgz",
			"integrity": "sha512-RK8Wj7lXLY3bqei69/cc25gwS5puEc3dknoFPFbqfy3XxYQBQFvu4ioWpafMBAB+L9NyptQK4nMOa5Xz16og8Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-remap-async-to-generator": "^7.14.5",
				"@babel/plugin-syntax-async-generators": "^7.8.4"
			}
		},
		"@babel/plugin-proposal-class-properties": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.14.5.tgz",
			"integrity": "sha512-q/PLpv5Ko4dVc1LYMpCY7RVAAO4uk55qPwrIuJ5QJ8c6cVuAmhu7I/49JOppXL6gXf7ZHzpRVEUZdYoPLM04Gg==",
			"dev": true,
			"requires": {
				"@babel/helper-create-class-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-class-static-block": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.14.5.tgz",
			"integrity": "sha512-KBAH5ksEnYHCegqseI5N9skTdxgJdmDoAOc0uXa+4QMYKeZD0w5IARh4FMlTNtaHhbB8v+KzMdTgxMMzsIy6Yg==",
			"dev": true,
			"requires": {
				"@babel/helper-create-class-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-class-static-block": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-dynamic-import": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.14.5.tgz",
			"integrity": "sha512-ExjiNYc3HDN5PXJx+bwC50GIx/KKanX2HiggnIUAYedbARdImiCU4RhhHfdf0Kd7JNXGpsBBBCOm+bBVy3Gb0g==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-dynamic-import": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-export-namespace-from": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.14.5.tgz",
			"integrity": "sha512-g5POA32bXPMmSBu5Dx/iZGLGnKmKPc5AiY7qfZgurzrCYgIztDlHFbznSNCoQuv57YQLnQfaDi7dxCtLDIdXdA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-export-namespace-from": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-json-strings": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.14.5.tgz",
			"integrity": "sha512-NSq2fczJYKVRIsUJyNxrVUMhB27zb7N7pOFGQOhBKJrChbGcgEAqyZrmZswkPk18VMurEeJAaICbfm57vUeTbQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-json-strings": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-logical-assignment-operators": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.14.5.tgz",
			"integrity": "sha512-YGn2AvZAo9TwyhlLvCCWxD90Xq8xJ4aSgaX3G5D/8DW94L8aaT+dS5cSP+Z06+rCJERGSr9GxMBZ601xoc2taw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-logical-assignment-operators": "^7.10.4"
			}
		},
		"@babel/plugin-proposal-nullish-coalescing-operator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.14.5.tgz",
			"integrity": "sha512-gun/SOnMqjSb98Nkaq2rTKMwervfdAoz6NphdY0vTfuzMfryj+tDGb2n6UkDKwez+Y8PZDhE3D143v6Gepp4Hg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-numeric-separator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.14.5.tgz",
			"integrity": "sha512-yiclALKe0vyZRZE0pS6RXgjUOt87GWv6FYa5zqj15PvhOGFO69R5DusPlgK/1K5dVnCtegTiWu9UaBSrLLJJBg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-numeric-separator": "^7.10.4"
			}
		},
		"@babel/plugin-proposal-object-rest-spread": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.14.7.tgz",
			"integrity": "sha512-082hsZz+sVabfmDWo1Oct1u1AgbKbUAyVgmX4otIc7bdsRgHBXwTwb3DpDmD4Eyyx6DNiuz5UAATT655k+kL5g==",
			"dev": true,
			"requires": {
				"@babel/compat-data": "^7.14.7",
				"@babel/helper-compilation-targets": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-object-rest-spread": "^7.8.3",
				"@babel/plugin-transform-parameters": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-optional-catch-binding": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.14.5.tgz",
			"integrity": "sha512-3Oyiixm0ur7bzO5ybNcZFlmVsygSIQgdOa7cTfOYCMY+wEPAYhZAJxi3mixKFCTCKUhQXuCTtQ1MzrpL3WT8ZQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-optional-catch-binding": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-optional-chaining": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.14.5.tgz",
			"integrity": "sha512-ycz+VOzo2UbWNI1rQXxIuMOzrDdHGrI23fRiz/Si2R4kv2XZQ1BK8ccdHwehMKBlcH/joGW/tzrUmo67gbJHlQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-skip-transparent-expression-wrappers": "^7.14.5",
				"@babel/plugin-syntax-optional-chaining": "^7.8.3"
			}
		},
		"@babel/plugin-proposal-private-methods": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.14.5.tgz",
			"integrity": "sha512-838DkdUA1u+QTCplatfq4B7+1lnDa/+QMI89x5WZHBcnNv+47N8QEj2k9I2MUU9xIv8XJ4XvPCviM/Dj7Uwt9g==",
			"dev": true,
			"requires": {
				"@babel/helper-create-class-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-private-property-in-object": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.14.5.tgz",
			"integrity": "sha512-62EyfyA3WA0mZiF2e2IV9mc9Ghwxcg8YTu8BS4Wss4Y3PY725OmS9M0qLORbJwLqFtGh+jiE4wAmocK2CTUK2Q==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-create-class-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-private-property-in-object": "^7.14.5"
			}
		},
		"@babel/plugin-proposal-unicode-property-regex": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.14.5.tgz",
			"integrity": "sha512-6axIeOU5LnY471KenAB9vI8I5j7NQ2d652hIYwVyRfgaZT5UpiqFKCuVXCDMSrU+3VFafnu2c5m3lrWIlr6A5Q==",
			"dev": true,
			"requires": {
				"@babel/helper-create-regexp-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-async-generators": {
			"version": "7.8.4",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
			"integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-bigint": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz",
			"integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-class-properties": {
			"version": "7.12.13",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
			"integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.12.13"
			}
		},
		"@babel/plugin-syntax-class-static-block": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
			"integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-dynamic-import": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
			"integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-export-namespace-from": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz",
			"integrity": "sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.3"
			}
		},
		"@babel/plugin-syntax-flow": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-flow/-/plugin-syntax-flow-7.14.5.tgz",
			"integrity": "sha512-9WK5ZwKCdWHxVuU13XNT6X73FGmutAXeor5lGFq6qhOFtMFUF4jkbijuyUdZZlpYq6E2hZeZf/u3959X9wsv0Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-import-meta": {
			"version": "7.10.4",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
			"integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.10.4"
			}
		},
		"@babel/plugin-syntax-json-strings": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
			"integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-jsx": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.14.5.tgz",
			"integrity": "sha512-ohuFIsOMXJnbOMRfX7/w7LocdR6R7whhuRD4ax8IipLcLPlZGJKkBxgHp++U4N/vKyU16/YDQr2f5seajD3jIw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-logical-assignment-operators": {
			"version": "7.10.4",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
			"integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.10.4"
			}
		},
		"@babel/plugin-syntax-nullish-coalescing-operator": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
			"integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-numeric-separator": {
			"version": "7.10.4",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
			"integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.10.4"
			}
		},
		"@babel/plugin-syntax-object-rest-spread": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
			"integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-optional-catch-binding": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
			"integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-optional-chaining": {
			"version": "7.8.3",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
			"integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.8.0"
			}
		},
		"@babel/plugin-syntax-private-property-in-object": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
			"integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-top-level-await": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
			"integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-syntax-typescript": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.14.5.tgz",
			"integrity": "sha512-u6OXzDaIXjEstBRRoBCQ/uKQKlbuaeE5in0RvWdA4pN6AhqxTIwUsnHPU1CFZA/amYObMsuWhYfRl3Ch90HD0Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-arrow-functions": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.14.5.tgz",
			"integrity": "sha512-KOnO0l4+tD5IfOdi4x8C1XmEIRWUjNRV8wc6K2vz/3e8yAOoZZvsRXRRIF/yo/MAOFb4QjtAw9xSxMXbSMRy8A==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-async-to-generator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.14.5.tgz",
			"integrity": "sha512-szkbzQ0mNk0rpu76fzDdqSyPu0MuvpXgC+6rz5rpMb5OIRxdmHfQxrktL8CYolL2d8luMCZTR0DpIMIdL27IjA==",
			"dev": true,
			"requires": {
				"@babel/helper-module-imports": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-remap-async-to-generator": "^7.14.5"
			}
		},
		"@babel/plugin-transform-block-scoped-functions": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.14.5.tgz",
			"integrity": "sha512-dtqWqdWZ5NqBX3KzsVCWfQI3A53Ft5pWFCT2eCVUftWZgjc5DpDponbIF1+c+7cSGk2wN0YK7HGL/ezfRbpKBQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-block-scoping": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.14.5.tgz",
			"integrity": "sha512-LBYm4ZocNgoCqyxMLoOnwpsmQ18HWTQvql64t3GvMUzLQrNoV1BDG0lNftC8QKYERkZgCCT/7J5xWGObGAyHDw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-classes": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.14.5.tgz",
			"integrity": "sha512-J4VxKAMykM06K/64z9rwiL6xnBHgB1+FVspqvlgCdwD1KUbQNfszeKVVOMh59w3sztHYIZDgnhOC4WbdEfHFDA==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-function-name": "^7.14.5",
				"@babel/helper-optimise-call-expression": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-replace-supers": "^7.14.5",
				"@babel/helper-split-export-declaration": "^7.14.5",
				"globals": "^11.1.0"
			}
		},
		"@babel/plugin-transform-computed-properties": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.14.5.tgz",
			"integrity": "sha512-pWM+E4283UxaVzLb8UBXv4EIxMovU4zxT1OPnpHJcmnvyY9QbPPTKZfEj31EUvG3/EQRbYAGaYEUZ4yWOBC2xg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-destructuring": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.14.7.tgz",
			"integrity": "sha512-0mDE99nK+kVh3xlc5vKwB6wnP9ecuSj+zQCa/n0voENtP/zymdT4HH6QEb65wjjcbqr1Jb/7z9Qp7TF5FtwYGw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-dotall-regex": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.14.5.tgz",
			"integrity": "sha512-loGlnBdj02MDsFaHhAIJzh7euK89lBrGIdM9EAtHFo6xKygCUGuuWe07o1oZVk287amtW1n0808sQM99aZt3gw==",
			"dev": true,
			"requires": {
				"@babel/helper-create-regexp-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-duplicate-keys": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.14.5.tgz",
			"integrity": "sha512-iJjbI53huKbPDAsJ8EmVmvCKeeq21bAze4fu9GBQtSLqfvzj2oRuHVx4ZkDwEhg1htQ+5OBZh/Ab0XDf5iBZ7A==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-exponentiation-operator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.14.5.tgz",
			"integrity": "sha512-jFazJhMBc9D27o9jDnIE5ZErI0R0m7PbKXVq77FFvqFbzvTMuv8jaAwLZ5PviOLSFttqKIW0/wxNSDbjLk0tYA==",
			"dev": true,
			"requires": {
				"@babel/helper-builder-binary-assignment-operator-visitor": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-flow-strip-types": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-flow-strip-types/-/plugin-transform-flow-strip-types-7.14.5.tgz",
			"integrity": "sha512-KhcolBKfXbvjwI3TV7r7TkYm8oNXHNBqGOy6JDVwtecFaRoKYsUUqJdS10q0YDKW1c6aZQgO+Ys3LfGkox8pXA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-flow": "^7.14.5"
			}
		},
		"@babel/plugin-transform-for-of": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.14.5.tgz",
			"integrity": "sha512-CfmqxSUZzBl0rSjpoQSFoR9UEj3HzbGuGNL21/iFTmjb5gFggJp3ph0xR1YBhexmLoKRHzgxuFvty2xdSt6gTA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-function-name": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.14.5.tgz",
			"integrity": "sha512-vbO6kv0fIzZ1GpmGQuvbwwm+O4Cbm2NrPzwlup9+/3fdkuzo1YqOZcXw26+YUJB84Ja7j9yURWposEHLYwxUfQ==",
			"dev": true,
			"requires": {
				"@babel/helper-function-name": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-literals": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.14.5.tgz",
			"integrity": "sha512-ql33+epql2F49bi8aHXxvLURHkxJbSmMKl9J5yHqg4PLtdE6Uc48CH1GS6TQvZ86eoB/ApZXwm7jlA+B3kra7A==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-member-expression-literals": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.14.5.tgz",
			"integrity": "sha512-WkNXxH1VXVTKarWFqmso83xl+2V3Eo28YY5utIkbsmXoItO8Q3aZxN4BTS2k0hz9dGUloHK26mJMyQEYfkn/+Q==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-modules-amd": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.14.5.tgz",
			"integrity": "sha512-3lpOU8Vxmp3roC4vzFpSdEpGUWSMsHFreTWOMMLzel2gNGfHE5UWIh/LN6ghHs2xurUp4jRFYMUIZhuFbody1g==",
			"dev": true,
			"requires": {
				"@babel/helper-module-transforms": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"babel-plugin-dynamic-import-node": "^2.3.3"
			}
		},
		"@babel/plugin-transform-modules-commonjs": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.14.5.tgz",
			"integrity": "sha512-en8GfBtgnydoao2PS+87mKyw62k02k7kJ9ltbKe0fXTHrQmG6QZZflYuGI1VVG7sVpx4E1n7KBpNlPb8m78J+A==",
			"dev": true,
			"requires": {
				"@babel/helper-module-transforms": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-simple-access": "^7.14.5",
				"babel-plugin-dynamic-import-node": "^2.3.3"
			}
		},
		"@babel/plugin-transform-modules-systemjs": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.14.5.tgz",
			"integrity": "sha512-mNMQdvBEE5DcMQaL5LbzXFMANrQjd2W7FPzg34Y4yEz7dBgdaC+9B84dSO+/1Wba98zoDbInctCDo4JGxz1VYA==",
			"dev": true,
			"requires": {
				"@babel/helper-hoist-variables": "^7.14.5",
				"@babel/helper-module-transforms": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-validator-identifier": "^7.14.5",
				"babel-plugin-dynamic-import-node": "^2.3.3"
			}
		},
		"@babel/plugin-transform-modules-umd": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.14.5.tgz",
			"integrity": "sha512-RfPGoagSngC06LsGUYyM9QWSXZ8MysEjDJTAea1lqRjNECE3y0qIJF/qbvJxc4oA4s99HumIMdXOrd+TdKaAAA==",
			"dev": true,
			"requires": {
				"@babel/helper-module-transforms": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-named-capturing-groups-regex": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.14.7.tgz",
			"integrity": "sha512-DTNOTaS7TkW97xsDMrp7nycUVh6sn/eq22VaxWfEdzuEbRsiaOU0pqU7DlyUGHVsbQbSghvjKRpEl+nUCKGQSg==",
			"dev": true,
			"requires": {
				"@babel/helper-create-regexp-features-plugin": "^7.14.5"
			}
		},
		"@babel/plugin-transform-new-target": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.14.5.tgz",
			"integrity": "sha512-Nx054zovz6IIRWEB49RDRuXGI4Gy0GMgqG0cII9L3MxqgXz/+rgII+RU58qpo4g7tNEx1jG7rRVH4ihZoP4esQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-object-super": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.14.5.tgz",
			"integrity": "sha512-MKfOBWzK0pZIrav9z/hkRqIk/2bTv9qvxHzPQc12RcVkMOzpIKnFCNYJip00ssKWYkd8Sf5g0Wr7pqJ+cmtuFg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-replace-supers": "^7.14.5"
			}
		},
		"@babel/plugin-transform-parameters": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.14.5.tgz",
			"integrity": "sha512-Tl7LWdr6HUxTmzQtzuU14SqbgrSKmaR77M0OKyq4njZLQTPfOvzblNKyNkGwOfEFCEx7KeYHQHDI0P3F02IVkA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-property-literals": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.14.5.tgz",
			"integrity": "sha512-r1uilDthkgXW8Z1vJz2dKYLV1tuw2xsbrp3MrZmD99Wh9vsfKoob+JTgri5VUb/JqyKRXotlOtwgu4stIYCmnw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-react-display-name": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.14.5.tgz",
			"integrity": "sha512-07aqY1ChoPgIxsuDviptRpVkWCSbXWmzQqcgy65C6YSFOfPFvb/DX3bBRHh7pCd/PMEEYHYWUTSVkCbkVainYQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-react-jsx": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.14.5.tgz",
			"integrity": "sha512-7RylxNeDnxc1OleDm0F5Q/BSL+whYRbOAR+bwgCxIr0L32v7UFh/pz1DLMZideAUxKT6eMoS2zQH6fyODLEi8Q==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-module-imports": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-jsx": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/plugin-transform-react-jsx-development": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.14.5.tgz",
			"integrity": "sha512-rdwG/9jC6QybWxVe2UVOa7q6cnTpw8JRRHOxntG/h6g/guAOe6AhtQHJuJh5FwmnXIT1bdm5vC2/5huV8ZOorQ==",
			"dev": true,
			"requires": {
				"@babel/plugin-transform-react-jsx": "^7.14.5"
			}
		},
		"@babel/plugin-transform-react-pure-annotations": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.14.5.tgz",
			"integrity": "sha512-3X4HpBJimNxW4rhUy/SONPyNQHp5YRr0HhJdT2OH1BRp0of7u3Dkirc7x9FRJMKMqTBI079VZ1hzv7Ouuz///g==",
			"dev": true,
			"requires": {
				"@babel/helper-annotate-as-pure": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-regenerator": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.14.5.tgz",
			"integrity": "sha512-NVIY1W3ITDP5xQl50NgTKlZ0GrotKtLna08/uGY6ErQt6VEQZXla86x/CTddm5gZdcr+5GSsvMeTmWA5Ii6pkg==",
			"dev": true,
			"requires": {
				"regenerator-transform": "^0.14.2"
			}
		},
		"@babel/plugin-transform-reserved-words": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.14.5.tgz",
			"integrity": "sha512-cv4F2rv1nD4qdexOGsRQXJrOcyb5CrgjUH9PKrrtyhSDBNWGxd0UIitjyJiWagS+EbUGjG++22mGH1Pub8D6Vg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-runtime": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.14.5.tgz",
			"integrity": "sha512-fPMBhh1AV8ZyneiCIA+wYYUH1arzlXR1UMcApjvchDhfKxhy2r2lReJv8uHEyihi4IFIGlr1Pdx7S5fkESDQsg==",
			"dev": true,
			"requires": {
				"@babel/helper-module-imports": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"babel-plugin-polyfill-corejs2": "^0.2.2",
				"babel-plugin-polyfill-corejs3": "^0.2.2",
				"babel-plugin-polyfill-regenerator": "^0.2.2",
				"semver": "^6.3.0"
			}
		},
		"@babel/plugin-transform-shorthand-properties": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.14.5.tgz",
			"integrity": "sha512-xLucks6T1VmGsTB+GWK5Pl9Jl5+nRXD1uoFdA5TSO6xtiNjtXTjKkmPdFXVLGlK5A2/or/wQMKfmQ2Y0XJfn5g==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-spread": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.14.6.tgz",
			"integrity": "sha512-Zr0x0YroFJku7n7+/HH3A2eIrGMjbmAIbJSVv0IZ+t3U2WUQUA64S/oeied2e+MaGSjmt4alzBCsK9E8gh+fag==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-skip-transparent-expression-wrappers": "^7.14.5"
			}
		},
		"@babel/plugin-transform-sticky-regex": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.14.5.tgz",
			"integrity": "sha512-Z7F7GyvEMzIIbwnziAZmnSNpdijdr4dWt+FJNBnBLz5mwDFkqIXU9wmBcWWad3QeJF5hMTkRe4dAq2sUZiG+8A==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-template-literals": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.14.5.tgz",
			"integrity": "sha512-22btZeURqiepOfuy/VkFr+zStqlujWaarpMErvay7goJS6BWwdd6BY9zQyDLDa4x2S3VugxFb162IZ4m/S/+Gg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-typeof-symbol": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.14.5.tgz",
			"integrity": "sha512-lXzLD30ffCWseTbMQzrvDWqljvZlHkXU+CnseMhkMNqU1sASnCsz3tSzAaH3vCUXb9PHeUb90ZT1BdFTm1xxJw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-typescript": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.14.6.tgz",
			"integrity": "sha512-XlTdBq7Awr4FYIzqhmYY80WN0V0azF74DMPyFqVHBvf81ZUgc4X7ZOpx6O8eLDK6iM5cCQzeyJw0ynTaefixRA==",
			"dev": true,
			"requires": {
				"@babel/helper-create-class-features-plugin": "^7.14.6",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/plugin-syntax-typescript": "^7.14.5"
			}
		},
		"@babel/plugin-transform-unicode-escapes": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.14.5.tgz",
			"integrity": "sha512-crTo4jATEOjxj7bt9lbYXcBAM3LZaUrbP2uUdxb6WIorLmjNKSpHfIybgY4B8SRpbf8tEVIWH3Vtm7ayCrKocA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/plugin-transform-unicode-regex": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.14.5.tgz",
			"integrity": "sha512-UygduJpC5kHeCiRw/xDVzC+wj8VaYSoKl5JNVmbP7MadpNinAm3SvZCxZ42H37KZBKztz46YC73i9yV34d0Tzw==",
			"dev": true,
			"requires": {
				"@babel/helper-create-regexp-features-plugin": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5"
			}
		},
		"@babel/preset-env": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.14.7.tgz",
			"integrity": "sha512-itOGqCKLsSUl0Y+1nSfhbuuOlTs0MJk2Iv7iSH+XT/mR8U1zRLO7NjWlYXB47yhK4J/7j+HYty/EhFZDYKa/VA==",
			"dev": true,
			"requires": {
				"@babel/compat-data": "^7.14.7",
				"@babel/helper-compilation-targets": "^7.14.5",
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-validator-option": "^7.14.5",
				"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.14.5",
				"@babel/plugin-proposal-async-generator-functions": "^7.14.7",
				"@babel/plugin-proposal-class-properties": "^7.14.5",
				"@babel/plugin-proposal-class-static-block": "^7.14.5",
				"@babel/plugin-proposal-dynamic-import": "^7.14.5",
				"@babel/plugin-proposal-export-namespace-from": "^7.14.5",
				"@babel/plugin-proposal-json-strings": "^7.14.5",
				"@babel/plugin-proposal-logical-assignment-operators": "^7.14.5",
				"@babel/plugin-proposal-nullish-coalescing-operator": "^7.14.5",
				"@babel/plugin-proposal-numeric-separator": "^7.14.5",
				"@babel/plugin-proposal-object-rest-spread": "^7.14.7",
				"@babel/plugin-proposal-optional-catch-binding": "^7.14.5",
				"@babel/plugin-proposal-optional-chaining": "^7.14.5",
				"@babel/plugin-proposal-private-methods": "^7.14.5",
				"@babel/plugin-proposal-private-property-in-object": "^7.14.5",
				"@babel/plugin-proposal-unicode-property-regex": "^7.14.5",
				"@babel/plugin-syntax-async-generators": "^7.8.4",
				"@babel/plugin-syntax-class-properties": "^7.12.13",
				"@babel/plugin-syntax-class-static-block": "^7.14.5",
				"@babel/plugin-syntax-dynamic-import": "^7.8.3",
				"@babel/plugin-syntax-export-namespace-from": "^7.8.3",
				"@babel/plugin-syntax-json-strings": "^7.8.3",
				"@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
				"@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
				"@babel/plugin-syntax-numeric-separator": "^7.10.4",
				"@babel/plugin-syntax-object-rest-spread": "^7.8.3",
				"@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
				"@babel/plugin-syntax-optional-chaining": "^7.8.3",
				"@babel/plugin-syntax-private-property-in-object": "^7.14.5",
				"@babel/plugin-syntax-top-level-await": "^7.14.5",
				"@babel/plugin-transform-arrow-functions": "^7.14.5",
				"@babel/plugin-transform-async-to-generator": "^7.14.5",
				"@babel/plugin-transform-block-scoped-functions": "^7.14.5",
				"@babel/plugin-transform-block-scoping": "^7.14.5",
				"@babel/plugin-transform-classes": "^7.14.5",
				"@babel/plugin-transform-computed-properties": "^7.14.5",
				"@babel/plugin-transform-destructuring": "^7.14.7",
				"@babel/plugin-transform-dotall-regex": "^7.14.5",
				"@babel/plugin-transform-duplicate-keys": "^7.14.5",
				"@babel/plugin-transform-exponentiation-operator": "^7.14.5",
				"@babel/plugin-transform-for-of": "^7.14.5",
				"@babel/plugin-transform-function-name": "^7.14.5",
				"@babel/plugin-transform-literals": "^7.14.5",
				"@babel/plugin-transform-member-expression-literals": "^7.14.5",
				"@babel/plugin-transform-modules-amd": "^7.14.5",
				"@babel/plugin-transform-modules-commonjs": "^7.14.5",
				"@babel/plugin-transform-modules-systemjs": "^7.14.5",
				"@babel/plugin-transform-modules-umd": "^7.14.5",
				"@babel/plugin-transform-named-capturing-groups-regex": "^7.14.7",
				"@babel/plugin-transform-new-target": "^7.14.5",
				"@babel/plugin-transform-object-super": "^7.14.5",
				"@babel/plugin-transform-parameters": "^7.14.5",
				"@babel/plugin-transform-property-literals": "^7.14.5",
				"@babel/plugin-transform-regenerator": "^7.14.5",
				"@babel/plugin-transform-reserved-words": "^7.14.5",
				"@babel/plugin-transform-shorthand-properties": "^7.14.5",
				"@babel/plugin-transform-spread": "^7.14.6",
				"@babel/plugin-transform-sticky-regex": "^7.14.5",
				"@babel/plugin-transform-template-literals": "^7.14.5",
				"@babel/plugin-transform-typeof-symbol": "^7.14.5",
				"@babel/plugin-transform-unicode-escapes": "^7.14.5",
				"@babel/plugin-transform-unicode-regex": "^7.14.5",
				"@babel/preset-modules": "^0.1.4",
				"@babel/types": "^7.14.5",
				"babel-plugin-polyfill-corejs2": "^0.2.2",
				"babel-plugin-polyfill-corejs3": "^0.2.2",
				"babel-plugin-polyfill-regenerator": "^0.2.2",
				"core-js-compat": "^3.15.0",
				"semver": "^6.3.0"
			}
		},
		"@babel/preset-modules": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.4.tgz",
			"integrity": "sha512-J36NhwnfdzpmH41M1DrnkkgAqhZaqr/NBdPfQ677mLzlaXo+oDiv1deyCDtgAhz8p328otdob0Du7+xgHGZbKg==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.0.0",
				"@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
				"@babel/plugin-transform-dotall-regex": "^7.4.4",
				"@babel/types": "^7.4.4",
				"esutils": "^2.0.2"
			}
		},
		"@babel/preset-react": {
			"version": "7.13.13",
			"resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.13.13.tgz",
			"integrity": "sha512-gx+tDLIE06sRjKJkVtpZ/t3mzCDOnPG+ggHZG9lffUbX8+wC739x20YQc9V35Do6ZAxaUc/HhVHIiOzz5MvDmA==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.13.0",
				"@babel/helper-validator-option": "^7.12.17",
				"@babel/plugin-transform-react-display-name": "^7.12.13",
				"@babel/plugin-transform-react-jsx": "^7.13.12",
				"@babel/plugin-transform-react-jsx-development": "^7.12.17",
				"@babel/plugin-transform-react-pure-annotations": "^7.12.1"
			}
		},
		"@babel/preset-typescript": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.14.5.tgz",
			"integrity": "sha512-u4zO6CdbRKbS9TypMqrlGH7sd2TAJppZwn3c/ZRLeO/wGsbddxgbPDUZVNrie3JWYLQ9vpineKlsrWFvO6Pwkw==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.14.5",
				"@babel/helper-validator-option": "^7.14.5",
				"@babel/plugin-transform-typescript": "^7.14.5"
			}
		},
		"@babel/runtime": {
			"version": "7.14.6",
			"resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.14.6.tgz",
			"integrity": "sha512-/PCB2uJ7oM44tz8YhC4Z/6PeOKXp4K588f+5M3clr1M4zbqztlo0XEfJ2LEzj/FgwfgGcIdl8n7YYjTCI0BYwg==",
			"dev": true,
			"requires": {
				"regenerator-runtime": "^0.13.4"
			}
		},
		"@babel/template": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/template/-/template-7.14.5.tgz",
			"integrity": "sha512-6Z3Po85sfxRGachLULUhOmvAaOo7xCvqGQtxINai2mEGPFm6pQ4z5QInFnUrRpfoSV60BnjyF5F3c+15fxFV1g==",
			"dev": true,
			"requires": {
				"@babel/code-frame": "^7.14.5",
				"@babel/parser": "^7.14.5",
				"@babel/types": "^7.14.5"
			}
		},
		"@babel/traverse": {
			"version": "7.14.7",
			"resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.14.7.tgz",
			"integrity": "sha512-9vDr5NzHu27wgwejuKL7kIOm4bwEtaPQ4Z6cpCmjSuaRqpH/7xc4qcGEscwMqlkwgcXl6MvqoAjZkQ24uSdIZQ==",
			"dev": true,
			"requires": {
				"@babel/code-frame": "^7.14.5",
				"@babel/generator": "^7.14.5",
				"@babel/helper-function-name": "^7.14.5",
				"@babel/helper-hoist-variables": "^7.14.5",
				"@babel/helper-split-export-declaration": "^7.14.5",
				"@babel/parser": "^7.14.7",
				"@babel/types": "^7.14.5",
				"debug": "^4.1.0",
				"globals": "^11.1.0"
			}
		},
		"@babel/types": {
			"version": "7.14.5",
			"resolved": "https://registry.npmjs.org/@babel/types/-/types-7.14.5.tgz",
			"integrity": "sha512-M/NzBpEL95I5Hh4dwhin5JlE7EzO5PHMAuzjxss3tiOBD46KfQvVedN/3jEPZvdRvtsK2222XfdHogNIttFgcg==",
			"dev": true,
			"requires": {
				"@babel/helper-validator-identifier": "^7.14.5",
				"to-fast-properties": "^2.0.0"
			}
		},
		"@baf-wallet/baf-contract": {
			"version": "0.0.9",
			"resolved": "https://registry.npmjs.org/@baf-wallet/baf-contract/-/baf-contract-0.0.9.tgz",
			"integrity": "sha512-BrY5xM/ceOJ5G0DWEAJ9bRTr+902f+qgloTFCMB0TfVk1I73ORjPc7n2hnMFr12Qin4hJsmrOjc0T2kCKh9ReQ==",
			"dev": true,
			"requires": {
				"@baf-wallet/crypto": "0.0.15",
				"@baf-wallet/errors": "0.0.10",
				"@baf-wallet/interfaces": "0.0.18",
				"@baf-wallet/utils": "0.0.12",
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"bs58": "^4.0.1",
				"buffer": "^5.7.1",
				"elliptic": "^6.5.4",
				"js-sha256": "^0.9.0",
				"js-sha3": "^0.8.0",
				"near-api-js": "^0.39.0",
				"tweetnacl": "^1.0.3"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@baf-wallet/crypto": {
			"version": "0.0.15",
			"resolved": "https://registry.npmjs.org/@baf-wallet/crypto/-/crypto-0.0.15.tgz",
			"integrity": "sha512-6/RHt3IN+E1vUSXeWT2uVKqrwKjNL3DWDyVRp8rTWVuoUNLKj0e3dFzWIDmsHJ7OK3UJX6caEXfHfkapwuKApw==",
			"dev": true,
			"requires": {
				"@baf-wallet/errors": "0.0.10",
				"@baf-wallet/interfaces": "0.0.18",
				"@baf-wallet/utils": "0.0.12",
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"bs58": "^4.0.1",
				"buffer": "^5.7.1",
				"elliptic": "^6.5.4",
				"js-sha256": "^0.9.0",
				"js-sha3": "^0.8.0",
				"near-api-js": "^0.39.0",
				"tweetnacl": "^1.0.3"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@baf-wallet/errors": {
			"version": "0.0.10",
			"resolved": "https://registry.npmjs.org/@baf-wallet/errors/-/errors-0.0.10.tgz",
			"integrity": "sha512-gzoG+SlP/x0KjbwhWh1odAGfqx8U3mBkoVk1+fLFwJHO294UtbRl0UQqIPCytqo1eSZxH/784lhu8Yl8OtTATQ==",
			"dev": true,
			"requires": {
				"@baf-wallet/interfaces": "0.0.18",
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"buffer": "^5.7.1",
				"near-api-js": "^0.39.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@baf-wallet/interfaces": {
			"version": "0.0.18",
			"resolved": "https://registry.npmjs.org/@baf-wallet/interfaces/-/interfaces-0.0.18.tgz",
			"integrity": "sha512-SG9FUARg3u+h914uFteG2lNhBVNAM7NtLhqhlKf5Qdpefh1fPkWb1L5s6a+IcAgacLlj4dQEabLI3iKT7YunNw==",
			"dev": true,
			"requires": {
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"buffer": "^5.7.1",
				"near-api-js": "^0.39.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@baf-wallet/near": {
			"version": "0.0.22",
			"resolved": "https://registry.npmjs.org/@baf-wallet/near/-/near-0.0.22.tgz",
			"integrity": "sha512-mqcF1RF4wgSqqhZghn2v5QsdJlyvMoT5dqvooWWi1MDhdFRwr8npdjFA/kiyEau+4XSO6f1RXmFpl2nHZ+erkg==",
			"dev": true,
			"requires": {
				"@baf-wallet/baf-contract": "0.0.9",
				"@baf-wallet/crypto": "0.0.15",
				"@baf-wallet/errors": "0.0.10",
				"@baf-wallet/interfaces": "0.0.18",
				"@baf-wallet/utils": "0.0.12",
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"bs58": "^4.0.1",
				"buffer": "^5.7.1",
				"elliptic": "^6.5.4",
				"js-sha256": "^0.9.0",
				"js-sha3": "^0.8.0",
				"near-api-js": "^0.39.0",
				"tweetnacl": "^1.0.3"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@baf-wallet/utils": {
			"version": "0.0.12",
			"resolved": "https://registry.npmjs.org/@baf-wallet/utils/-/utils-0.0.12.tgz",
			"integrity": "sha512-mqV5S8vZIkSe1WK5mujcMV8KYXLpGiXTTrjwEGPodNfXndN6VCfUCEMIeA5yII5hCnktCQfoBT36s39ulnqXUw==",
			"dev": true,
			"requires": {
				"@baf-wallet/errors": "0.0.10",
				"@baf-wallet/interfaces": "0.0.18",
				"@toruslabs/torus-direct-web-sdk": "^4.11.1",
				"bs58": "^4.0.1",
				"buffer": "^5.7.1",
				"near-api-js": "^0.39.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				}
			}
		},
		"@bcoe/v8-coverage": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz",
			"integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==",
			"dev": true
		},
		"@chaitanyapotti/random-id": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/@chaitanyapotti/random-id/-/random-id-1.0.3.tgz",
			"integrity": "sha512-xiVWA2vTL3jQeuZ+yebXAtwIeEbh/13RAFxvRq0YxeUc02RBOGyC9eyDKXjwlN0uxPtnEwWxsELkSwnaH5kxjg==",
			"dev": true
		},
		"@chaitanyapotti/register-service-worker": {
			"version": "1.7.3",
			"resolved": "https://registry.npmjs.org/@chaitanyapotti/register-service-worker/-/register-service-worker-1.7.3.tgz",
			"integrity": "sha512-ywnUSfwvqdHchO3ELFWP6hlnhzc2UUETbk+TaBT/vicuMnJbnBLuDCcoy3aWvUE9bjmzg4QQpssRLSz1iZ7XRA==",
			"dev": true
		},
		"@cnakazawa/watch": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.4.tgz",
			"integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw/N3rWOYy9zkV66ursAoVr0mV15bL8g0c4QZUE6cdDoQ==",
			"dev": true,
			"requires": {
				"exec-sh": "^0.3.2",
				"minimist": "^1.2.0"
			}
		},
		"@ethereumjs/common": {
			"version": "2.4.0",
			"resolved": "https://registry.npmjs.org/@ethereumjs/common/-/common-2.4.0.tgz",
			"integrity": "sha512-UdkhFWzWcJCZVsj1O/H8/oqj/0RVYjLc1OhPjBrQdALAkQHpCp8xXI4WLnuGTADqTdJZww0NtgwG+TRPkXt27w==",
			"dev": true,
			"requires": {
				"crc-32": "^1.2.0",
				"ethereumjs-util": "^7.1.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"ethereumjs-util": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-7.1.0.tgz",
					"integrity": "sha512-kR+vhu++mUDARrsMMhsjjzPduRVAeundLGXucGRHF3B4oEltOUspfgCVco4kckucj3FMlLaZHUl9n7/kdmr6Tw==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.1.2",
						"create-hash": "^1.1.2",
						"ethereum-cryptography": "^0.1.3",
						"ethjs-util": "0.1.6",
						"rlp": "^2.2.4"
					}
				}
			}
		},
		"@ethereumjs/tx": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/@ethereumjs/tx/-/tx-3.3.0.tgz",
			"integrity": "sha512-yTwEj2lVzSMgE6Hjw9Oa1DZks/nKTWM8Wn4ykDNapBPua2f4nXO3qKnni86O6lgDj5fVNRqbDsD0yy7/XNGDEA==",
			"dev": true,
			"requires": {
				"@ethereumjs/common": "^2.4.0",
				"ethereumjs-util": "^7.1.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"ethereumjs-util": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-7.1.0.tgz",
					"integrity": "sha512-kR+vhu++mUDARrsMMhsjjzPduRVAeundLGXucGRHF3B4oEltOUspfgCVco4kckucj3FMlLaZHUl9n7/kdmr6Tw==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.1.2",
						"create-hash": "^1.1.2",
						"ethereum-cryptography": "^0.1.3",
						"ethjs-util": "0.1.6",
						"rlp": "^2.2.4"
					}
				}
			}
		},
		"@ethersproject/abi": {
			"version": "5.0.7",
			"resolved": "https://registry.npmjs.org/@ethersproject/abi/-/abi-5.0.7.tgz",
			"integrity": "sha512-Cqktk+hSIckwP/W8O47Eef60VwmoSC/L3lY0+dIBhQPCNn9E4V7rwmm2aFrNRRDJfFlGuZ1khkQUOc3oBX+niw==",
			"dev": true,
			"requires": {
				"@ethersproject/address": "^5.0.4",
				"@ethersproject/bignumber": "^5.0.7",
				"@ethersproject/bytes": "^5.0.4",
				"@ethersproject/constants": "^5.0.4",
				"@ethersproject/hash": "^5.0.4",
				"@ethersproject/keccak256": "^5.0.3",
				"@ethersproject/logger": "^5.0.5",
				"@ethersproject/properties": "^5.0.3",
				"@ethersproject/strings": "^5.0.4"
			}
		},
		"@ethersproject/abstract-provider": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/abstract-provider/-/abstract-provider-5.4.0.tgz",
			"integrity": "sha512-vPBR7HKUBY0lpdllIn7tLIzNN7DrVnhCLKSzY0l8WAwxz686m/aL7ASDzrVxV93GJtIub6N2t4dfZ29CkPOxgA==",
			"dev": true,
			"requires": {
				"@ethersproject/bignumber": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/networks": "^5.4.0",
				"@ethersproject/properties": "^5.4.0",
				"@ethersproject/transactions": "^5.4.0",
				"@ethersproject/web": "^5.4.0"
			}
		},
		"@ethersproject/abstract-signer": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/abstract-signer/-/abstract-signer-5.4.0.tgz",
			"integrity": "sha512-AieQAzt05HJZS2bMofpuxMEp81AHufA5D6M4ScKwtolj041nrfIbIi8ciNW7+F59VYxXq+V4c3d568Q6l2m8ew==",
			"dev": true,
			"requires": {
				"@ethersproject/abstract-provider": "^5.4.0",
				"@ethersproject/bignumber": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/properties": "^5.4.0"
			}
		},
		"@ethersproject/address": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/address/-/address-5.4.0.tgz",
			"integrity": "sha512-SD0VgOEkcACEG/C6xavlU1Hy3m5DGSXW3CUHkaaEHbAPPsgi0coP5oNPsxau8eTlZOk/bpa/hKeCNoK5IzVI2Q==",
			"dev": true,
			"requires": {
				"@ethersproject/bignumber": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/keccak256": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/rlp": "^5.4.0"
			}
		},
		"@ethersproject/base64": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/base64/-/base64-5.4.0.tgz",
			"integrity": "sha512-CjQw6E17QDSSC5jiM9YpF7N1aSCHmYGMt9bWD8PWv6YPMxjsys2/Q8xLrROKI3IWJ7sFfZ8B3flKDTM5wlWuZQ==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0"
			}
		},
		"@ethersproject/bignumber": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/bignumber/-/bignumber-5.4.0.tgz",
			"integrity": "sha512-OXUu9f9hO3vGRIPxU40cignXZVaYyfx6j9NNMjebKdnaCL3anCLSSy8/b8d03vY6dh7duCC0kW72GEC4tZer2w==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"bn.js": "^4.11.9"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"@ethersproject/bytes": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/bytes/-/bytes-5.4.0.tgz",
			"integrity": "sha512-H60ceqgTHbhzOj4uRc/83SCN9d+BSUnOkrr2intevqdtEMO1JFVZ1XL84OEZV+QjV36OaZYxtnt4lGmxcGsPfA==",
			"dev": true,
			"requires": {
				"@ethersproject/logger": "^5.4.0"
			}
		},
		"@ethersproject/constants": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/constants/-/constants-5.4.0.tgz",
			"integrity": "sha512-tzjn6S7sj9+DIIeKTJLjK9WGN2Tj0P++Z8ONEIlZjyoTkBuODN+0VfhAyYksKi43l1Sx9tX2VlFfzjfmr5Wl3Q==",
			"dev": true,
			"requires": {
				"@ethersproject/bignumber": "^5.4.0"
			}
		},
		"@ethersproject/hash": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/hash/-/hash-5.4.0.tgz",
			"integrity": "sha512-xymAM9tmikKgbktOCjW60Z5sdouiIIurkZUr9oW5NOex5uwxrbsYG09kb5bMcNjlVeJD3yPivTNzViIs1GCbqA==",
			"dev": true,
			"requires": {
				"@ethersproject/abstract-signer": "^5.4.0",
				"@ethersproject/address": "^5.4.0",
				"@ethersproject/bignumber": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/keccak256": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/properties": "^5.4.0",
				"@ethersproject/strings": "^5.4.0"
			}
		},
		"@ethersproject/keccak256": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/keccak256/-/keccak256-5.4.0.tgz",
			"integrity": "sha512-FBI1plWet+dPUvAzPAeHzRKiPpETQzqSUWR1wXJGHVWi4i8bOSrpC3NwpkPjgeXG7MnugVc1B42VbfnQikyC/A==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0",
				"js-sha3": "0.5.7"
			},
			"dependencies": {
				"js-sha3": {
					"version": "0.5.7",
					"resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
					"integrity": "sha1-DU/9gALVMzqrr0oj7tL2N0yfKOc=",
					"dev": true
				}
			}
		},
		"@ethersproject/logger": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/logger/-/logger-5.4.0.tgz",
			"integrity": "sha512-xYdWGGQ9P2cxBayt64d8LC8aPFJk6yWCawQi/4eJ4+oJdMMjEBMrIcIMZ9AxhwpPVmnBPrsB10PcXGmGAqgUEQ==",
			"dev": true
		},
		"@ethersproject/networks": {
			"version": "5.4.1",
			"resolved": "https://registry.npmjs.org/@ethersproject/networks/-/networks-5.4.1.tgz",
			"integrity": "sha512-8SvowCKz9Uf4xC5DTKI8+il8lWqOr78kmiqAVLYT9lzB8aSmJHQMD1GSuJI0CW4hMAnzocpGpZLgiMdzsNSPig==",
			"dev": true,
			"requires": {
				"@ethersproject/logger": "^5.4.0"
			}
		},
		"@ethersproject/properties": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/properties/-/properties-5.4.0.tgz",
			"integrity": "sha512-7jczalGVRAJ+XSRvNA6D5sAwT4gavLq3OXPuV/74o3Rd2wuzSL035IMpIMgei4CYyBdialJMrTqkOnzccLHn4A==",
			"dev": true,
			"requires": {
				"@ethersproject/logger": "^5.4.0"
			}
		},
		"@ethersproject/rlp": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/rlp/-/rlp-5.4.0.tgz",
			"integrity": "sha512-0I7MZKfi+T5+G8atId9QaQKHRvvasM/kqLyAH4XxBCBchAooH2EX5rL9kYZWwcm3awYV+XC7VF6nLhfeQFKVPg==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0"
			}
		},
		"@ethersproject/signing-key": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/signing-key/-/signing-key-5.4.0.tgz",
			"integrity": "sha512-q8POUeywx6AKg2/jX9qBYZIAmKSB4ubGXdQ88l40hmATj29JnG5pp331nAWwwxPn2Qao4JpWHNZsQN+bPiSW9A==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/properties": "^5.4.0",
				"bn.js": "^4.11.9",
				"elliptic": "6.5.4",
				"hash.js": "1.1.7"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"@ethersproject/strings": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/strings/-/strings-5.4.0.tgz",
			"integrity": "sha512-k/9DkH5UGDhv7aReXLluFG5ExurwtIpUfnDNhQA29w896Dw3i4uDTz01Quaptbks1Uj9kI8wo9tmW73wcIEaWA==",
			"dev": true,
			"requires": {
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/constants": "^5.4.0",
				"@ethersproject/logger": "^5.4.0"
			}
		},
		"@ethersproject/transactions": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/transactions/-/transactions-5.4.0.tgz",
			"integrity": "sha512-s3EjZZt7xa4BkLknJZ98QGoIza94rVjaEed0rzZ/jB9WrIuu/1+tjvYCWzVrystXtDswy7TPBeIepyXwSYa4WQ==",
			"dev": true,
			"requires": {
				"@ethersproject/address": "^5.4.0",
				"@ethersproject/bignumber": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/constants": "^5.4.0",
				"@ethersproject/keccak256": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/properties": "^5.4.0",
				"@ethersproject/rlp": "^5.4.0",
				"@ethersproject/signing-key": "^5.4.0"
			}
		},
		"@ethersproject/web": {
			"version": "5.4.0",
			"resolved": "https://registry.npmjs.org/@ethersproject/web/-/web-5.4.0.tgz",
			"integrity": "sha512-1bUusGmcoRLYgMn6c1BLk1tOKUIFuTg8j+6N8lYlbMpDesnle+i3pGSagGNvwjaiLo4Y5gBibwctpPRmjrh4Og==",
			"dev": true,
			"requires": {
				"@ethersproject/base64": "^5.4.0",
				"@ethersproject/bytes": "^5.4.0",
				"@ethersproject/logger": "^5.4.0",
				"@ethersproject/properties": "^5.4.0",
				"@ethersproject/strings": "^5.4.0"
			}
		},
		"@hutson/parse-repository-url": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/@hutson/parse-repository-url/-/parse-repository-url-3.0.2.tgz",
			"integrity": "sha512-H9XAx3hc0BQHY6l+IFSWHDySypcXsvsuLhgYLUGywmJ5pswRVQJUHpOsobnLYp2ZUaUlKiKDrgWWhosOwAEM8Q==",
			"dev": true
		},
		"@iarna/toml": {
			"version": "2.2.5",
			"resolved": "https://registry.npmjs.org/@iarna/toml/-/toml-2.2.5.tgz",
			"integrity": "sha512-trnsAYxU3xnS1gPHPyU961coFyLkh4gAD/0zQ5mymY4yOZ+CYvsPqUbOFSw0aDM4y0tV7tiFxL/1XfXPNC6IPg==",
			"dev": true
		},
		"@istanbuljs/load-nyc-config": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
			"integrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==",
			"dev": true,
			"requires": {
				"camelcase": "^5.3.1",
				"find-up": "^4.1.0",
				"get-package-type": "^0.1.0",
				"js-yaml": "^3.13.1",
				"resolve-from": "^5.0.0"
			}
		},
		"@istanbuljs/schema": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz",
			"integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==",
			"dev": true
		},
		"@jest/console": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/console/-/console-26.6.2.tgz",
			"integrity": "sha512-IY1R2i2aLsLr7Id3S6p2BA82GNWryt4oSvEXLAKc+L2zdi89dSkE8xC1C+0kpATG4JhBJREnQOH7/zmccM2B0g==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"chalk": "^4.0.0",
				"jest-message-util": "^26.6.2",
				"jest-util": "^26.6.2",
				"slash": "^3.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@jest/core": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/@jest/core/-/core-26.6.3.tgz",
			"integrity": "sha512-xvV1kKbhfUqFVuZ8Cyo+JPpipAHHAV3kcDBftiduK8EICXmTFddryy3P7NfZt8Pv37rA9nEJBKCCkglCPt/Xjw==",
			"dev": true,
			"requires": {
				"@jest/console": "^26.6.2",
				"@jest/reporters": "^26.6.2",
				"@jest/test-result": "^26.6.2",
				"@jest/transform": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"ansi-escapes": "^4.2.1",
				"chalk": "^4.0.0",
				"exit": "^0.1.2",
				"graceful-fs": "^4.2.4",
				"jest-changed-files": "^26.6.2",
				"jest-config": "^26.6.3",
				"jest-haste-map": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-regex-util": "^26.0.0",
				"jest-resolve": "^26.6.2",
				"jest-resolve-dependencies": "^26.6.3",
				"jest-runner": "^26.6.3",
				"jest-runtime": "^26.6.3",
				"jest-snapshot": "^26.6.2",
				"jest-util": "^26.6.2",
				"jest-validate": "^26.6.2",
				"jest-watcher": "^26.6.2",
				"micromatch": "^4.0.2",
				"p-each-series": "^2.1.0",
				"rimraf": "^3.0.0",
				"slash": "^3.0.0",
				"strip-ansi": "^6.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@jest/environment": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/environment/-/environment-26.6.2.tgz",
			"integrity": "sha512-nFy+fHl28zUrRsCeMB61VDThV1pVTtlEokBRgqPrcT1JNq4yRNIyTHfyht6PqtUvY9IsuLGTrbG8kPXjSZIZwA==",
			"dev": true,
			"requires": {
				"@jest/fake-timers": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"jest-mock": "^26.6.2"
			}
		},
		"@jest/fake-timers": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-26.6.2.tgz",
			"integrity": "sha512-14Uleatt7jdzefLPYM3KLcnUl1ZNikaKq34enpb5XG9i81JpppDb5muZvonvKyrl7ftEHkKS5L5/eB/kxJ+bvA==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"@sinonjs/fake-timers": "^6.0.1",
				"@types/node": "*",
				"jest-message-util": "^26.6.2",
				"jest-mock": "^26.6.2",
				"jest-util": "^26.6.2"
			}
		},
		"@jest/globals": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/globals/-/globals-26.6.2.tgz",
			"integrity": "sha512-85Ltnm7HlB/KesBUuALwQ68YTU72w9H2xW9FjZ1eL1U3lhtefjjl5c2MiUbpXt/i6LaPRvoOFJ22yCBSfQ0JIA==",
			"dev": true,
			"requires": {
				"@jest/environment": "^26.6.2",
				"@jest/types": "^26.6.2",
				"expect": "^26.6.2"
			}
		},
		"@jest/reporters": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-26.6.2.tgz",
			"integrity": "sha512-h2bW53APG4HvkOnVMo8q3QXa6pcaNt1HkwVsOPMBV6LD/q9oSpxNSYZQYkAnjdMjrJ86UuYeLo+aEZClV6opnw==",
			"dev": true,
			"requires": {
				"@bcoe/v8-coverage": "^0.2.3",
				"@jest/console": "^26.6.2",
				"@jest/test-result": "^26.6.2",
				"@jest/transform": "^26.6.2",
				"@jest/types": "^26.6.2",
				"chalk": "^4.0.0",
				"collect-v8-coverage": "^1.0.0",
				"exit": "^0.1.2",
				"glob": "^7.1.2",
				"graceful-fs": "^4.2.4",
				"istanbul-lib-coverage": "^3.0.0",
				"istanbul-lib-instrument": "^4.0.3",
				"istanbul-lib-report": "^3.0.0",
				"istanbul-lib-source-maps": "^4.0.0",
				"istanbul-reports": "^3.0.2",
				"jest-haste-map": "^26.6.2",
				"jest-resolve": "^26.6.2",
				"jest-util": "^26.6.2",
				"jest-worker": "^26.6.2",
				"node-notifier": "^8.0.0",
				"slash": "^3.0.0",
				"source-map": "^0.6.0",
				"string-length": "^4.0.1",
				"terminal-link": "^2.0.0",
				"v8-to-istanbul": "^7.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@jest/source-map": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-26.6.2.tgz",
			"integrity": "sha512-YwYcCwAnNmOVsZ8mr3GfnzdXDAl4LaenZP5z+G0c8bzC9/dugL8zRmxZzdoTl4IaS3CryS1uWnROLPFmb6lVvA==",
			"dev": true,
			"requires": {
				"callsites": "^3.0.0",
				"graceful-fs": "^4.2.4",
				"source-map": "^0.6.0"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"@jest/test-result": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-26.6.2.tgz",
			"integrity": "sha512-5O7H5c/7YlojphYNrK02LlDIV2GNPYisKwHm2QTKjNZeEzezCbwYs9swJySv2UfPMyZ0VdsmMv7jIlD/IKYQpQ==",
			"dev": true,
			"requires": {
				"@jest/console": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/istanbul-lib-coverage": "^2.0.0",
				"collect-v8-coverage": "^1.0.0"
			}
		},
		"@jest/test-sequencer": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-26.6.3.tgz",
			"integrity": "sha512-YHlVIjP5nfEyjlrSr8t/YdNfU/1XEt7c5b4OxcXCjyRhjzLYu/rO69/WHPuYcbCWkz8kAeZVZp2N2+IOLLEPGw==",
			"dev": true,
			"requires": {
				"@jest/test-result": "^26.6.2",
				"graceful-fs": "^4.2.4",
				"jest-haste-map": "^26.6.2",
				"jest-runner": "^26.6.3",
				"jest-runtime": "^26.6.3"
			}
		},
		"@jest/transform": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/transform/-/transform-26.6.2.tgz",
			"integrity": "sha512-E9JjhUgNzvuQ+vVAL21vlyfy12gP0GhazGgJC4h6qUt1jSdUXGWJ1wfu/X7Sd8etSgxV4ovT1pb9v5D6QW4XgA==",
			"dev": true,
			"requires": {
				"@babel/core": "^7.1.0",
				"@jest/types": "^26.6.2",
				"babel-plugin-istanbul": "^6.0.0",
				"chalk": "^4.0.0",
				"convert-source-map": "^1.4.0",
				"fast-json-stable-stringify": "^2.0.0",
				"graceful-fs": "^4.2.4",
				"jest-haste-map": "^26.6.2",
				"jest-regex-util": "^26.0.0",
				"jest-util": "^26.6.2",
				"micromatch": "^4.0.2",
				"pirates": "^4.0.1",
				"slash": "^3.0.0",
				"source-map": "^0.6.1",
				"write-file-atomic": "^3.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@jest/types": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/@jest/types/-/types-26.6.2.tgz",
			"integrity": "sha512-fC6QCp7Sc5sX6g8Tvbmj4XUTbyrik0akgRy03yjXbQaBWWNWGE7SGtJk98m0N8nzegD/7SggrUlivxo5ax4KWQ==",
			"dev": true,
			"requires": {
				"@types/istanbul-lib-coverage": "^2.0.0",
				"@types/istanbul-reports": "^3.0.0",
				"@types/node": "*",
				"@types/yargs": "^15.0.0",
				"chalk": "^4.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@ledgerhq/devices": {
			"version": "5.51.1",
			"resolved": "https://registry.npmjs.org/@ledgerhq/devices/-/devices-5.51.1.tgz",
			"integrity": "sha512-4w+P0VkbjzEXC7kv8T1GJ/9AVaP9I6uasMZ/JcdwZBS3qwvKo5A5z9uGhP5c7TvItzcmPb44b5Mw2kT+WjUuAA==",
			"dev": true,
			"optional": true,
			"requires": {
				"@ledgerhq/errors": "^5.50.0",
				"@ledgerhq/logs": "^5.50.0",
				"rxjs": "6",
				"semver": "^7.3.5"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"optional": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@ledgerhq/errors": {
			"version": "5.50.0",
			"resolved": "https://registry.npmjs.org/@ledgerhq/errors/-/errors-5.50.0.tgz",
			"integrity": "sha512-gu6aJ/BHuRlpU7kgVpy2vcYk6atjB4iauP2ymF7Gk0ez0Y/6VSMVSJvubeEQN+IV60+OBK0JgeIZG7OiHaw8ow==",
			"dev": true,
			"optional": true
		},
		"@ledgerhq/hw-transport": {
			"version": "5.51.1",
			"resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport/-/hw-transport-5.51.1.tgz",
			"integrity": "sha512-6wDYdbWrw9VwHIcoDnqWBaDFyviyjZWv6H9vz9Vyhe4Qd7TIFmbTl/eWs6hZvtZBza9K8y7zD8ChHwRI4s9tSw==",
			"dev": true,
			"optional": true,
			"requires": {
				"@ledgerhq/devices": "^5.51.1",
				"@ledgerhq/errors": "^5.50.0",
				"events": "^3.3.0"
			}
		},
		"@ledgerhq/hw-transport-node-hid": {
			"version": "5.51.1",
			"resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid/-/hw-transport-node-hid-5.51.1.tgz",
			"integrity": "sha512-Y2eVCCdhVs2Lfr7N2x2cNb+ogcZ24ZATO4QxaQ7LogjiPwYmzmvuXFn8zFjMSrKUCn9CtbptXcuiu0NkGsjWlw==",
			"dev": true,
			"optional": true,
			"requires": {
				"@ledgerhq/devices": "^5.51.1",
				"@ledgerhq/errors": "^5.50.0",
				"@ledgerhq/hw-transport": "^5.51.1",
				"@ledgerhq/hw-transport-node-hid-noevents": "^5.51.1",
				"@ledgerhq/logs": "^5.50.0",
				"lodash": "^4.17.21",
				"node-hid": "2.1.1",
				"usb": "^1.7.0"
			}
		},
		"@ledgerhq/hw-transport-node-hid-noevents": {
			"version": "5.51.1",
			"resolved": "https://registry.npmjs.org/@ledgerhq/hw-transport-node-hid-noevents/-/hw-transport-node-hid-noevents-5.51.1.tgz",
			"integrity": "sha512-9wFf1L8ZQplF7XOY2sQGEeOhpmBRzrn+4X43kghZ7FBDoltrcK+s/D7S+7ffg3j2OySyP6vIIIgloXylao5Scg==",
			"dev": true,
			"optional": true,
			"requires": {
				"@ledgerhq/devices": "^5.51.1",
				"@ledgerhq/errors": "^5.50.0",
				"@ledgerhq/hw-transport": "^5.51.1",
				"@ledgerhq/logs": "^5.50.0",
				"node-hid": "2.1.1"
			}
		},
		"@ledgerhq/logs": {
			"version": "5.50.0",
			"resolved": "https://registry.npmjs.org/@ledgerhq/logs/-/logs-5.50.0.tgz",
			"integrity": "sha512-swKHYCOZUGyVt4ge0u8a7AwNcA//h4nx5wIi0sruGye1IJ5Cva0GyK9L2/WdX+kWVTKp92ZiEo1df31lrWGPgA==",
			"dev": true,
			"optional": true
		},
		"@lerna/add": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/add/-/add-4.0.0.tgz",
			"integrity": "sha512-cpmAH1iS3k8JBxNvnMqrGTTjbY/ZAiKa1ChJzFevMYY3eeqbvhsBKnBcxjRXtdrJ6bd3dCQM+ZtK+0i682Fhng==",
			"dev": true,
			"requires": {
				"@lerna/bootstrap": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/npm-conf": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"dedent": "^0.7.0",
				"npm-package-arg": "^8.1.0",
				"p-map": "^4.0.0",
				"pacote": "^11.2.6",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@lerna/bootstrap": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/bootstrap/-/bootstrap-4.0.0.tgz",
			"integrity": "sha512-RkS7UbeM2vu+kJnHzxNRCLvoOP9yGNgkzRdy4UV2hNalD7EP41bLvRVOwRYQ7fhc2QcbhnKNdOBihYRL0LcKtw==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/has-npm-version": "4.0.0",
				"@lerna/npm-install": "4.0.0",
				"@lerna/package-graph": "4.0.0",
				"@lerna/pulse-till-done": "4.0.0",
				"@lerna/rimraf-dir": "4.0.0",
				"@lerna/run-lifecycle": "4.0.0",
				"@lerna/run-topologically": "4.0.0",
				"@lerna/symlink-binary": "4.0.0",
				"@lerna/symlink-dependencies": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"dedent": "^0.7.0",
				"get-port": "^5.1.1",
				"multimatch": "^5.0.0",
				"npm-package-arg": "^8.1.0",
				"npmlog": "^4.1.2",
				"p-map": "^4.0.0",
				"p-map-series": "^2.1.0",
				"p-waterfall": "^2.1.1",
				"read-package-tree": "^5.3.1",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@lerna/changed": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/changed/-/changed-4.0.0.tgz",
			"integrity": "sha512-cD+KuPRp6qiPOD+BO6S6SN5cARspIaWSOqGBpGnYzLb4uWT8Vk4JzKyYtc8ym1DIwyoFXHosXt8+GDAgR8QrgQ==",
			"dev": true,
			"requires": {
				"@lerna/collect-updates": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/listable": "4.0.0",
				"@lerna/output": "4.0.0"
			}
		},
		"@lerna/check-working-tree": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/check-working-tree/-/check-working-tree-4.0.0.tgz",
			"integrity": "sha512-/++bxM43jYJCshBiKP5cRlCTwSJdRSxVmcDAXM+1oUewlZJVSVlnks5eO0uLxokVFvLhHlC5kHMc7gbVFPHv6Q==",
			"dev": true,
			"requires": {
				"@lerna/collect-uncommitted": "4.0.0",
				"@lerna/describe-ref": "4.0.0",
				"@lerna/validation-error": "4.0.0"
			}
		},
		"@lerna/child-process": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/child-process/-/child-process-4.0.0.tgz",
			"integrity": "sha512-XtCnmCT9eyVsUUHx6y/CTBYdV9g2Cr/VxyseTWBgfIur92/YKClfEtJTbOh94jRT62hlKLqSvux/UhxXVh613Q==",
			"dev": true,
			"requires": {
				"chalk": "^4.1.0",
				"execa": "^5.0.0",
				"strong-log-transformer": "^2.1.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"cross-spawn": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
					"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
					"dev": true,
					"requires": {
						"path-key": "^3.1.0",
						"shebang-command": "^2.0.0",
						"which": "^2.0.1"
					}
				},
				"execa": {
					"version": "5.1.1",
					"resolved": "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz",
					"integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
					"dev": true,
					"requires": {
						"cross-spawn": "^7.0.3",
						"get-stream": "^6.0.0",
						"human-signals": "^2.1.0",
						"is-stream": "^2.0.0",
						"merge-stream": "^2.0.0",
						"npm-run-path": "^4.0.1",
						"onetime": "^5.1.2",
						"signal-exit": "^3.0.3",
						"strip-final-newline": "^2.0.0"
					}
				},
				"get-stream": {
					"version": "6.0.1",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
					"integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"human-signals": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
					"integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
					"dev": true
				},
				"is-stream": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
					"integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
					"dev": true
				},
				"npm-run-path": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
					"integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
					"dev": true,
					"requires": {
						"path-key": "^3.0.0"
					}
				},
				"path-key": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
					"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
					"dev": true
				},
				"shebang-command": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
					"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
					"dev": true,
					"requires": {
						"shebang-regex": "^3.0.0"
					}
				},
				"shebang-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
					"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"@lerna/clean": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/clean/-/clean-4.0.0.tgz",
			"integrity": "sha512-uugG2iN9k45ITx2jtd8nEOoAtca8hNlDCUM0N3lFgU/b1mEQYAPRkqr1qs4FLRl/Y50ZJ41wUz1eazS+d/0osA==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/prompt": "4.0.0",
				"@lerna/pulse-till-done": "4.0.0",
				"@lerna/rimraf-dir": "4.0.0",
				"p-map": "^4.0.0",
				"p-map-series": "^2.1.0",
				"p-waterfall": "^2.1.1"
			}
		},
		"@lerna/cli": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/cli/-/cli-4.0.0.tgz",
			"integrity": "sha512-Neaw3GzFrwZiRZv2g7g6NwFjs3er1vhraIniEs0jjVLPMNC4eata0na3GfE5yibkM/9d3gZdmihhZdZ3EBdvYA==",
			"dev": true,
			"requires": {
				"@lerna/global-options": "4.0.0",
				"dedent": "^0.7.0",
				"npmlog": "^4.1.2",
				"yargs": "^16.2.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"cliui": {
					"version": "7.0.4",
					"resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
					"integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
					"dev": true,
					"requires": {
						"string-width": "^4.2.0",
						"strip-ansi": "^6.0.0",
						"wrap-ansi": "^7.0.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"wrap-ansi": {
					"version": "7.0.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
					"integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.0.0",
						"string-width": "^4.1.0",
						"strip-ansi": "^6.0.0"
					}
				},
				"y18n": {
					"version": "5.0.8",
					"resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
					"integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
					"dev": true
				},
				"yargs": {
					"version": "16.2.0",
					"resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
					"integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
					"dev": true,
					"requires": {
						"cliui": "^7.0.2",
						"escalade": "^3.1.1",
						"get-caller-file": "^2.0.5",
						"require-directory": "^2.1.1",
						"string-width": "^4.2.0",
						"y18n": "^5.0.5",
						"yargs-parser": "^20.2.2"
					}
				},
				"yargs-parser": {
					"version": "20.2.9",
					"resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
					"integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
					"dev": true
				}
			}
		},
		"@lerna/collect-uncommitted": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/collect-uncommitted/-/collect-uncommitted-4.0.0.tgz",
			"integrity": "sha512-ufSTfHZzbx69YNj7KXQ3o66V4RC76ffOjwLX0q/ab//61bObJ41n03SiQEhSlmpP+gmFbTJ3/7pTe04AHX9m/g==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"chalk": "^4.1.0",
				"npmlog": "^4.1.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@lerna/collect-updates": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/collect-updates/-/collect-updates-4.0.0.tgz",
			"integrity": "sha512-bnNGpaj4zuxsEkyaCZLka9s7nMs58uZoxrRIPJ+nrmrZYp1V5rrd+7/NYTuunOhY2ug1sTBvTAxj3NZQ+JKnOw==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/describe-ref": "4.0.0",
				"minimatch": "^3.0.4",
				"npmlog": "^4.1.2",
				"slash": "^3.0.0"
			}
		},
		"@lerna/command": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/command/-/command-4.0.0.tgz",
			"integrity": "sha512-LM9g3rt5FsPNFqIHUeRwWXLNHJ5NKzOwmVKZ8anSp4e1SPrv2HNc1V02/9QyDDZK/w+5POXH5lxZUI1CHaOK/A==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/package-graph": "4.0.0",
				"@lerna/project": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"@lerna/write-log-file": "4.0.0",
				"clone-deep": "^4.0.1",
				"dedent": "^0.7.0",
				"execa": "^5.0.0",
				"is-ci": "^2.0.0",
				"npmlog": "^4.1.2"
			},
			"dependencies": {
				"cross-spawn": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
					"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
					"dev": true,
					"requires": {
						"path-key": "^3.1.0",
						"shebang-command": "^2.0.0",
						"which": "^2.0.1"
					}
				},
				"execa": {
					"version": "5.1.1",
					"resolved": "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz",
					"integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
					"dev": true,
					"requires": {
						"cross-spawn": "^7.0.3",
						"get-stream": "^6.0.0",
						"human-signals": "^2.1.0",
						"is-stream": "^2.0.0",
						"merge-stream": "^2.0.0",
						"npm-run-path": "^4.0.1",
						"onetime": "^5.1.2",
						"signal-exit": "^3.0.3",
						"strip-final-newline": "^2.0.0"
					}
				},
				"get-stream": {
					"version": "6.0.1",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
					"integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
					"dev": true
				},
				"human-signals": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
					"integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
					"dev": true
				},
				"is-stream": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
					"integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
					"dev": true
				},
				"npm-run-path": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
					"integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
					"dev": true,
					"requires": {
						"path-key": "^3.0.0"
					}
				},
				"path-key": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
					"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
					"dev": true
				},
				"shebang-command": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
					"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
					"dev": true,
					"requires": {
						"shebang-regex": "^3.0.0"
					}
				},
				"shebang-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
					"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
					"dev": true
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"@lerna/conventional-commits": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/conventional-commits/-/conventional-commits-4.0.0.tgz",
			"integrity": "sha512-CSUQRjJHFrH8eBn7+wegZLV3OrNc0Y1FehYfYGhjLE2SIfpCL4bmfu/ViYuHh9YjwHaA+4SX6d3hR+xkeseKmw==",
			"dev": true,
			"requires": {
				"@lerna/validation-error": "4.0.0",
				"conventional-changelog-angular": "^5.0.12",
				"conventional-changelog-core": "^4.2.2",
				"conventional-recommended-bump": "^6.1.0",
				"fs-extra": "^9.1.0",
				"get-stream": "^6.0.0",
				"lodash.template": "^4.5.0",
				"npm-package-arg": "^8.1.0",
				"npmlog": "^4.1.2",
				"pify": "^5.0.0",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"get-stream": {
					"version": "6.0.1",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
					"integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
					"dev": true
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"pify": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-5.0.0.tgz",
					"integrity": "sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/create": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/create/-/create-4.0.0.tgz",
			"integrity": "sha512-mVOB1niKByEUfxlbKTM1UNECWAjwUdiioIbRQZEeEabtjCL69r9rscIsjlGyhGWCfsdAG5wfq4t47nlDXdLLag==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/npm-conf": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"dedent": "^0.7.0",
				"fs-extra": "^9.1.0",
				"globby": "^11.0.2",
				"init-package-json": "^2.0.2",
				"npm-package-arg": "^8.1.0",
				"p-reduce": "^2.1.0",
				"pacote": "^11.2.6",
				"pify": "^5.0.0",
				"semver": "^7.3.4",
				"slash": "^3.0.0",
				"validate-npm-package-license": "^3.0.4",
				"validate-npm-package-name": "^3.0.0",
				"whatwg-url": "^8.4.0",
				"yargs-parser": "20.2.4"
			},
			"dependencies": {
				"array-union": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
					"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
					"dev": true
				},
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"globby": {
					"version": "11.0.4",
					"resolved": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
					"integrity": "sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==",
					"dev": true,
					"requires": {
						"array-union": "^2.1.0",
						"dir-glob": "^3.0.1",
						"fast-glob": "^3.1.1",
						"ignore": "^5.1.4",
						"merge2": "^1.3.0",
						"slash": "^3.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"pify": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-5.0.0.tgz",
					"integrity": "sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				},
				"yargs-parser": {
					"version": "20.2.4",
					"resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz",
					"integrity": "sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==",
					"dev": true
				}
			}
		},
		"@lerna/create-symlink": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/create-symlink/-/create-symlink-4.0.0.tgz",
			"integrity": "sha512-I0phtKJJdafUiDwm7BBlEUOtogmu8+taxq6PtIrxZbllV9hWg59qkpuIsiFp+no7nfRVuaasNYHwNUhDAVQBig==",
			"dev": true,
			"requires": {
				"cmd-shim": "^4.1.0",
				"fs-extra": "^9.1.0",
				"npmlog": "^4.1.2"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/describe-ref": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/describe-ref/-/describe-ref-4.0.0.tgz",
			"integrity": "sha512-eTU5+xC4C5Gcgz+Ey4Qiw9nV2B4JJbMulsYJMW8QjGcGh8zudib7Sduj6urgZXUYNyhYpRs+teci9M2J8u+UvQ==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/diff": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/diff/-/diff-4.0.0.tgz",
			"integrity": "sha512-jYPKprQVg41+MUMxx6cwtqsNm0Yxx9GDEwdiPLwcUTFx+/qKCEwifKNJ1oGIPBxyEHX2PFCOjkK39lHoj2qiag==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/exec": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/exec/-/exec-4.0.0.tgz",
			"integrity": "sha512-VGXtL/b/JfY84NB98VWZpIExfhLOzy0ozm/0XaS4a2SmkAJc5CeUfrhvHxxkxiTBLkU+iVQUyYEoAT0ulQ8PCw==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/profiler": "4.0.0",
				"@lerna/run-topologically": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"p-map": "^4.0.0"
			}
		},
		"@lerna/filter-options": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/filter-options/-/filter-options-4.0.0.tgz",
			"integrity": "sha512-vV2ANOeZhOqM0rzXnYcFFCJ/kBWy/3OA58irXih9AMTAlQLymWAK0akWybl++sUJ4HB9Hx12TOqaXbYS2NM5uw==",
			"dev": true,
			"requires": {
				"@lerna/collect-updates": "4.0.0",
				"@lerna/filter-packages": "4.0.0",
				"dedent": "^0.7.0",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/filter-packages": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/filter-packages/-/filter-packages-4.0.0.tgz",
			"integrity": "sha512-+4AJIkK7iIiOaqCiVTYJxh/I9qikk4XjNQLhE3kixaqgMuHl1NQ99qXRR0OZqAWB9mh8Z1HA9bM5K1HZLBTOqA==",
			"dev": true,
			"requires": {
				"@lerna/validation-error": "4.0.0",
				"multimatch": "^5.0.0",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/get-npm-exec-opts": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/get-npm-exec-opts/-/get-npm-exec-opts-4.0.0.tgz",
			"integrity": "sha512-yvmkerU31CTWS2c7DvmAWmZVeclPBqI7gPVr5VATUKNWJ/zmVcU4PqbYoLu92I9Qc4gY1TuUplMNdNuZTSL7IQ==",
			"dev": true,
			"requires": {
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/get-packed": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/get-packed/-/get-packed-4.0.0.tgz",
			"integrity": "sha512-rfWONRsEIGyPJTxFzC8ECb3ZbsDXJbfqWYyeeQQDrJRPnEJErlltRLPLgC2QWbxFgFPsoDLeQmFHJnf0iDfd8w==",
			"dev": true,
			"requires": {
				"fs-extra": "^9.1.0",
				"ssri": "^8.0.1",
				"tar": "^6.1.0"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"fs-minipass": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
					"integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"tar": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/tar/-/tar-6.1.0.tgz",
					"integrity": "sha512-DUCttfhsnLCjwoDoFcI+B2iJgYa93vBnDUATYEeRx6sntCTdN01VnqsIuTlALXla/LWooNg0yEGeB+Y8WdFxGA==",
					"dev": true,
					"requires": {
						"chownr": "^2.0.0",
						"fs-minipass": "^2.0.0",
						"minipass": "^3.0.0",
						"minizlib": "^2.1.1",
						"mkdirp": "^1.0.3",
						"yallist": "^4.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/github-client": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/github-client/-/github-client-4.0.0.tgz",
			"integrity": "sha512-2jhsldZtTKXYUBnOm23Lb0Fx8G4qfSXF9y7UpyUgWUj+YZYd+cFxSuorwQIgk5P4XXrtVhsUesIsli+BYSThiw==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@octokit/plugin-enterprise-rest": "^6.0.1",
				"@octokit/rest": "^18.1.0",
				"git-url-parse": "^11.4.4",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/gitlab-client": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/gitlab-client/-/gitlab-client-4.0.0.tgz",
			"integrity": "sha512-OMUpGSkeDWFf7BxGHlkbb35T7YHqVFCwBPSIR6wRsszY8PAzCYahtH3IaJzEJyUg6vmZsNl0FSr3pdA2skhxqA==",
			"dev": true,
			"requires": {
				"node-fetch": "^2.6.1",
				"npmlog": "^4.1.2",
				"whatwg-url": "^8.4.0"
			}
		},
		"@lerna/global-options": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/global-options/-/global-options-4.0.0.tgz",
			"integrity": "sha512-TRMR8afAHxuYBHK7F++Ogop2a82xQjoGna1dvPOY6ltj/pEx59pdgcJfYcynYqMkFIk8bhLJJN9/ndIfX29FTQ==",
			"dev": true
		},
		"@lerna/has-npm-version": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/has-npm-version/-/has-npm-version-4.0.0.tgz",
			"integrity": "sha512-LQ3U6XFH8ZmLCsvsgq1zNDqka0Xzjq5ibVN+igAI5ccRWNaUsE/OcmsyMr50xAtNQMYMzmpw5GVLAivT2/YzCg==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@lerna/import": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/import/-/import-4.0.0.tgz",
			"integrity": "sha512-FaIhd+4aiBousKNqC7TX1Uhe97eNKf5/SC7c5WZANVWtC7aBWdmswwDt3usrzCNpj6/Wwr9EtEbYROzxKH8ffg==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/prompt": "4.0.0",
				"@lerna/pulse-till-done": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"dedent": "^0.7.0",
				"fs-extra": "^9.1.0",
				"p-map-series": "^2.1.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/info": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/info/-/info-4.0.0.tgz",
			"integrity": "sha512-8Uboa12kaCSZEn4XRfPz5KU9XXoexSPS4oeYGj76s2UQb1O1GdnEyfjyNWoUl1KlJ2i/8nxUskpXIftoFYH0/Q==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/output": "4.0.0",
				"envinfo": "^7.7.4"
			}
		},
		"@lerna/init": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/init/-/init-4.0.0.tgz",
			"integrity": "sha512-wY6kygop0BCXupzWj5eLvTUqdR7vIAm0OgyV9WHpMYQGfs1V22jhztt8mtjCloD/O0nEe4tJhdG62XU5aYmPNQ==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/command": "4.0.0",
				"fs-extra": "^9.1.0",
				"p-map": "^4.0.0",
				"write-json-file": "^4.3.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/link": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/link/-/link-4.0.0.tgz",
			"integrity": "sha512-KlvPi7XTAcVOByfaLlOeYOfkkDcd+bejpHMCd1KcArcFTwijOwXOVi24DYomIeHvy6HsX/IUquJ4PPUJIeB4+w==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/package-graph": "4.0.0",
				"@lerna/symlink-dependencies": "4.0.0",
				"p-map": "^4.0.0",
				"slash": "^3.0.0"
			}
		},
		"@lerna/list": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/list/-/list-4.0.0.tgz",
			"integrity": "sha512-L2B5m3P+U4Bif5PultR4TI+KtW+SArwq1i75QZ78mRYxPc0U/piau1DbLOmwrdqr99wzM49t0Dlvl6twd7GHFg==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/listable": "4.0.0",
				"@lerna/output": "4.0.0"
			}
		},
		"@lerna/listable": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/listable/-/listable-4.0.0.tgz",
			"integrity": "sha512-/rPOSDKsOHs5/PBLINZOkRIX1joOXUXEtyUs5DHLM8q6/RP668x/1lFhw6Dx7/U+L0+tbkpGtZ1Yt0LewCLgeQ==",
			"dev": true,
			"requires": {
				"@lerna/query-graph": "4.0.0",
				"chalk": "^4.1.0",
				"columnify": "^1.5.4"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@lerna/log-packed": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/log-packed/-/log-packed-4.0.0.tgz",
			"integrity": "sha512-+dpCiWbdzgMAtpajLToy9PO713IHoE6GV/aizXycAyA07QlqnkpaBNZ8DW84gHdM1j79TWockGJo9PybVhrrZQ==",
			"dev": true,
			"requires": {
				"byte-size": "^7.0.0",
				"columnify": "^1.5.4",
				"has-unicode": "^2.0.1",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/npm-conf": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/npm-conf/-/npm-conf-4.0.0.tgz",
			"integrity": "sha512-uS7H02yQNq3oejgjxAxqq/jhwGEE0W0ntr8vM3EfpCW1F/wZruwQw+7bleJQ9vUBjmdXST//tk8mXzr5+JXCfw==",
			"dev": true,
			"requires": {
				"config-chain": "^1.1.12",
				"pify": "^5.0.0"
			},
			"dependencies": {
				"pify": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-5.0.0.tgz",
					"integrity": "sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==",
					"dev": true
				}
			}
		},
		"@lerna/npm-dist-tag": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/npm-dist-tag/-/npm-dist-tag-4.0.0.tgz",
			"integrity": "sha512-F20sg28FMYTgXqEQihgoqSfwmq+Id3zT23CnOwD+XQMPSy9IzyLf1fFVH319vXIw6NF6Pgs4JZN2Qty6/CQXGw==",
			"dev": true,
			"requires": {
				"@lerna/otplease": "4.0.0",
				"npm-package-arg": "^8.1.0",
				"npm-registry-fetch": "^9.0.0",
				"npmlog": "^4.1.2"
			},
			"dependencies": {
				"make-fetch-happen": {
					"version": "8.0.14",
					"resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-8.0.14.tgz",
					"integrity": "sha512-EsS89h6l4vbfJEtBZnENTOFk8mCRpY5ru36Xe5bcX1KYIli2mkSHqoFsp5O1wMDvTJJzxe/4THpCTtygjeeGWQ==",
					"dev": true,
					"requires": {
						"agentkeepalive": "^4.1.3",
						"cacache": "^15.0.5",
						"http-cache-semantics": "^4.1.0",
						"http-proxy-agent": "^4.0.1",
						"https-proxy-agent": "^5.0.0",
						"is-lambda": "^1.0.1",
						"lru-cache": "^6.0.0",
						"minipass": "^3.1.3",
						"minipass-collect": "^1.0.2",
						"minipass-fetch": "^1.3.2",
						"minipass-flush": "^1.0.5",
						"minipass-pipeline": "^1.2.4",
						"promise-retry": "^2.0.1",
						"socks-proxy-agent": "^5.0.0",
						"ssri": "^8.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"npm-registry-fetch": {
					"version": "9.0.0",
					"resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-9.0.0.tgz",
					"integrity": "sha512-PuFYYtnQ8IyVl6ib9d3PepeehcUeHN9IO5N/iCRhyg9tStQcqGQBRVHmfmMWPDERU3KwZoHFvbJ4FPXPspvzbA==",
					"dev": true,
					"requires": {
						"@npmcli/ci-detect": "^1.0.0",
						"lru-cache": "^6.0.0",
						"make-fetch-happen": "^8.0.9",
						"minipass": "^3.1.3",
						"minipass-fetch": "^1.3.0",
						"minipass-json-stream": "^1.0.1",
						"minizlib": "^2.0.0",
						"npm-package-arg": "^8.0.0"
					}
				}
			}
		},
		"@lerna/npm-install": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/npm-install/-/npm-install-4.0.0.tgz",
			"integrity": "sha512-aKNxq2j3bCH3eXl3Fmu4D54s/YLL9WSwV8W7X2O25r98wzrO38AUN6AB9EtmAx+LV/SP15et7Yueg9vSaanRWg==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/get-npm-exec-opts": "4.0.0",
				"fs-extra": "^9.1.0",
				"npm-package-arg": "^8.1.0",
				"npmlog": "^4.1.2",
				"signal-exit": "^3.0.3",
				"write-pkg": "^4.0.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/npm-publish": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/npm-publish/-/npm-publish-4.0.0.tgz",
			"integrity": "sha512-vQb7yAPRo5G5r77DRjHITc9piR9gvEKWrmfCH7wkfBnGWEqu7n8/4bFQ7lhnkujvc8RXOsYpvbMQkNfkYibD/w==",
			"dev": true,
			"requires": {
				"@lerna/otplease": "4.0.0",
				"@lerna/run-lifecycle": "4.0.0",
				"fs-extra": "^9.1.0",
				"libnpmpublish": "^4.0.0",
				"npm-package-arg": "^8.1.0",
				"npmlog": "^4.1.2",
				"pify": "^5.0.0",
				"read-package-json": "^3.0.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"dev": true,
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"pify": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-5.0.0.tgz",
					"integrity": "sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==",
					"dev": true
				},
				"read-package-json": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-3.0.1.tgz",
					"integrity": "sha512-aLcPqxovhJTVJcsnROuuzQvv6oziQx4zd3JvG0vGCL5MjTONUc4uJ90zCBC6R7W7oUKBNoR/F8pkyfVwlbxqng==",
					"dev": true,
					"requires": {
						"glob": "^7.1.1",
						"json-parse-even-better-errors": "^2.3.0",
						"normalize-package-data": "^3.0.0",
						"npm-normalize-package-bin": "^1.0.0"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/npm-run-script": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/npm-run-script/-/npm-run-script-4.0.0.tgz",
			"integrity": "sha512-Jmyh9/IwXJjOXqKfIgtxi0bxi1pUeKe5bD3S81tkcy+kyng/GNj9WSqD5ZggoNP2NP//s4CLDAtUYLdP7CU9rA==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"@lerna/get-npm-exec-opts": "4.0.0",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/otplease": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/otplease/-/otplease-4.0.0.tgz",
			"integrity": "sha512-Sgzbqdk1GH4psNiT6hk+BhjOfIr/5KhGBk86CEfHNJTk9BK4aZYyJD4lpDbDdMjIV4g03G7pYoqHzH765T4fxw==",
			"dev": true,
			"requires": {
				"@lerna/prompt": "4.0.0"
			}
		},
		"@lerna/output": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/output/-/output-4.0.0.tgz",
			"integrity": "sha512-Un1sHtO1AD7buDQrpnaYTi2EG6sLF+KOPEAMxeUYG5qG3khTs2Zgzq5WE3dt2N/bKh7naESt20JjIW6tBELP0w==",
			"dev": true,
			"requires": {
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/pack-directory": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/pack-directory/-/pack-directory-4.0.0.tgz",
			"integrity": "sha512-NJrmZNmBHS+5aM+T8N6FVbaKFScVqKlQFJNY2k7nsJ/uklNKsLLl6VhTQBPwMTbf6Tf7l6bcKzpy7aePuq9UiQ==",
			"dev": true,
			"requires": {
				"@lerna/get-packed": "4.0.0",
				"@lerna/package": "4.0.0",
				"@lerna/run-lifecycle": "4.0.0",
				"npm-packlist": "^2.1.4",
				"npmlog": "^4.1.2",
				"tar": "^6.1.0",
				"temp-write": "^4.0.0"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"fs-minipass": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
					"integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"tar": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/tar/-/tar-6.1.0.tgz",
					"integrity": "sha512-DUCttfhsnLCjwoDoFcI+B2iJgYa93vBnDUATYEeRx6sntCTdN01VnqsIuTlALXla/LWooNg0yEGeB+Y8WdFxGA==",
					"dev": true,
					"requires": {
						"chownr": "^2.0.0",
						"fs-minipass": "^2.0.0",
						"minipass": "^3.0.0",
						"minizlib": "^2.1.1",
						"mkdirp": "^1.0.3",
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"@lerna/package": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/package/-/package-4.0.0.tgz",
			"integrity": "sha512-l0M/izok6FlyyitxiQKr+gZLVFnvxRQdNhzmQ6nRnN9dvBJWn+IxxpM+cLqGACatTnyo9LDzNTOj2Db3+s0s8Q==",
			"dev": true,
			"requires": {
				"load-json-file": "^6.2.0",
				"npm-package-arg": "^8.1.0",
				"write-pkg": "^4.0.0"
			}
		},
		"@lerna/package-graph": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/package-graph/-/package-graph-4.0.0.tgz",
			"integrity": "sha512-QED2ZCTkfXMKFoTGoccwUzjHtZMSf3UKX14A4/kYyBms9xfFsesCZ6SLI5YeySEgcul8iuIWfQFZqRw+Qrjraw==",
			"dev": true,
			"requires": {
				"@lerna/prerelease-id-from-version": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"npm-package-arg": "^8.1.0",
				"npmlog": "^4.1.2",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@lerna/prerelease-id-from-version": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/prerelease-id-from-version/-/prerelease-id-from-version-4.0.0.tgz",
			"integrity": "sha512-GQqguzETdsYRxOSmdFZ6zDBXDErIETWOqomLERRY54f4p+tk4aJjoVdd9xKwehC9TBfIFvlRbL1V9uQGHh1opg==",
			"dev": true,
			"requires": {
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@lerna/profiler": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/profiler/-/profiler-4.0.0.tgz",
			"integrity": "sha512-/BaEbqnVh1LgW/+qz8wCuI+obzi5/vRE8nlhjPzdEzdmWmZXuCKyWSEzAyHOJWw1ntwMiww5dZHhFQABuoFz9Q==",
			"dev": true,
			"requires": {
				"fs-extra": "^9.1.0",
				"npmlog": "^4.1.2",
				"upath": "^2.0.1"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/project": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/project/-/project-4.0.0.tgz",
			"integrity": "sha512-o0MlVbDkD5qRPkFKlBZsXZjoNTWPyuL58564nSfZJ6JYNmgAptnWPB2dQlAc7HWRZkmnC2fCkEdoU+jioPavbg==",
			"dev": true,
			"requires": {
				"@lerna/package": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"cosmiconfig": "^7.0.0",
				"dedent": "^0.7.0",
				"dot-prop": "^6.0.1",
				"glob-parent": "^5.1.1",
				"globby": "^11.0.2",
				"load-json-file": "^6.2.0",
				"npmlog": "^4.1.2",
				"p-map": "^4.0.0",
				"resolve-from": "^5.0.0",
				"write-json-file": "^4.3.0"
			},
			"dependencies": {
				"array-union": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
					"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
					"dev": true
				},
				"globby": {
					"version": "11.0.4",
					"resolved": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
					"integrity": "sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==",
					"dev": true,
					"requires": {
						"array-union": "^2.1.0",
						"dir-glob": "^3.0.1",
						"fast-glob": "^3.1.1",
						"ignore": "^5.1.4",
						"merge2": "^1.3.0",
						"slash": "^3.0.0"
					}
				}
			}
		},
		"@lerna/prompt": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/prompt/-/prompt-4.0.0.tgz",
			"integrity": "sha512-4Ig46oCH1TH5M7YyTt53fT6TuaKMgqUUaqdgxvp6HP6jtdak6+amcsqB8YGz2eQnw/sdxunx84DfI9XpoLj4bQ==",
			"dev": true,
			"requires": {
				"inquirer": "^7.3.3",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/publish": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/publish/-/publish-4.0.0.tgz",
			"integrity": "sha512-K8jpqjHrChH22qtkytA5GRKIVFEtqBF6JWj1I8dWZtHs4Jywn8yB1jQ3BAMLhqmDJjWJtRck0KXhQQKzDK2UPg==",
			"dev": true,
			"requires": {
				"@lerna/check-working-tree": "4.0.0",
				"@lerna/child-process": "4.0.0",
				"@lerna/collect-updates": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/describe-ref": "4.0.0",
				"@lerna/log-packed": "4.0.0",
				"@lerna/npm-conf": "4.0.0",
				"@lerna/npm-dist-tag": "4.0.0",
				"@lerna/npm-publish": "4.0.0",
				"@lerna/otplease": "4.0.0",
				"@lerna/output": "4.0.0",
				"@lerna/pack-directory": "4.0.0",
				"@lerna/prerelease-id-from-version": "4.0.0",
				"@lerna/prompt": "4.0.0",
				"@lerna/pulse-till-done": "4.0.0",
				"@lerna/run-lifecycle": "4.0.0",
				"@lerna/run-topologically": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"@lerna/version": "4.0.0",
				"fs-extra": "^9.1.0",
				"libnpmaccess": "^4.0.1",
				"npm-package-arg": "^8.1.0",
				"npm-registry-fetch": "^9.0.0",
				"npmlog": "^4.1.2",
				"p-map": "^4.0.0",
				"p-pipe": "^3.1.0",
				"pacote": "^11.2.6",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"make-fetch-happen": {
					"version": "8.0.14",
					"resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-8.0.14.tgz",
					"integrity": "sha512-EsS89h6l4vbfJEtBZnENTOFk8mCRpY5ru36Xe5bcX1KYIli2mkSHqoFsp5O1wMDvTJJzxe/4THpCTtygjeeGWQ==",
					"dev": true,
					"requires": {
						"agentkeepalive": "^4.1.3",
						"cacache": "^15.0.5",
						"http-cache-semantics": "^4.1.0",
						"http-proxy-agent": "^4.0.1",
						"https-proxy-agent": "^5.0.0",
						"is-lambda": "^1.0.1",
						"lru-cache": "^6.0.0",
						"minipass": "^3.1.3",
						"minipass-collect": "^1.0.2",
						"minipass-fetch": "^1.3.2",
						"minipass-flush": "^1.0.5",
						"minipass-pipeline": "^1.2.4",
						"promise-retry": "^2.0.1",
						"socks-proxy-agent": "^5.0.0",
						"ssri": "^8.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"npm-registry-fetch": {
					"version": "9.0.0",
					"resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-9.0.0.tgz",
					"integrity": "sha512-PuFYYtnQ8IyVl6ib9d3PepeehcUeHN9IO5N/iCRhyg9tStQcqGQBRVHmfmMWPDERU3KwZoHFvbJ4FPXPspvzbA==",
					"dev": true,
					"requires": {
						"@npmcli/ci-detect": "^1.0.0",
						"lru-cache": "^6.0.0",
						"make-fetch-happen": "^8.0.9",
						"minipass": "^3.1.3",
						"minipass-fetch": "^1.3.0",
						"minipass-json-stream": "^1.0.1",
						"minizlib": "^2.0.0",
						"npm-package-arg": "^8.0.0"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/pulse-till-done": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/pulse-till-done/-/pulse-till-done-4.0.0.tgz",
			"integrity": "sha512-Frb4F7QGckaybRhbF7aosLsJ5e9WuH7h0KUkjlzSByVycxY91UZgaEIVjS2oN9wQLrheLMHl6SiFY0/Pvo0Cxg==",
			"dev": true,
			"requires": {
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/query-graph": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/query-graph/-/query-graph-4.0.0.tgz",
			"integrity": "sha512-YlP6yI3tM4WbBmL9GCmNDoeQyzcyg1e4W96y/PKMZa5GbyUvkS2+Jc2kwPD+5KcXou3wQZxSPzR3Te5OenaDdg==",
			"dev": true,
			"requires": {
				"@lerna/package-graph": "4.0.0"
			}
		},
		"@lerna/resolve-symlink": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/resolve-symlink/-/resolve-symlink-4.0.0.tgz",
			"integrity": "sha512-RtX8VEUzqT+uLSCohx8zgmjc6zjyRlh6i/helxtZTMmc4+6O4FS9q5LJas2uGO2wKvBlhcD6siibGt7dIC3xZA==",
			"dev": true,
			"requires": {
				"fs-extra": "^9.1.0",
				"npmlog": "^4.1.2",
				"read-cmd-shim": "^2.0.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/rimraf-dir": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/rimraf-dir/-/rimraf-dir-4.0.0.tgz",
			"integrity": "sha512-QNH9ABWk9mcMJh2/muD9iYWBk1oQd40y6oH+f3wwmVGKYU5YJD//+zMiBI13jxZRtwBx0vmBZzkBkK1dR11cBg==",
			"dev": true,
			"requires": {
				"@lerna/child-process": "4.0.0",
				"npmlog": "^4.1.2",
				"path-exists": "^4.0.0",
				"rimraf": "^3.0.2"
			}
		},
		"@lerna/run": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/run/-/run-4.0.0.tgz",
			"integrity": "sha512-9giulCOzlMPzcZS/6Eov6pxE9gNTyaXk0Man+iCIdGJNMrCnW7Dme0Z229WWP/UoxDKg71F2tMsVVGDiRd8fFQ==",
			"dev": true,
			"requires": {
				"@lerna/command": "4.0.0",
				"@lerna/filter-options": "4.0.0",
				"@lerna/npm-run-script": "4.0.0",
				"@lerna/output": "4.0.0",
				"@lerna/profiler": "4.0.0",
				"@lerna/run-topologically": "4.0.0",
				"@lerna/timer": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"p-map": "^4.0.0"
			}
		},
		"@lerna/run-lifecycle": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/run-lifecycle/-/run-lifecycle-4.0.0.tgz",
			"integrity": "sha512-IwxxsajjCQQEJAeAaxF8QdEixfI7eLKNm4GHhXHrgBu185JcwScFZrj9Bs+PFKxwb+gNLR4iI5rpUdY8Y0UdGQ==",
			"dev": true,
			"requires": {
				"@lerna/npm-conf": "4.0.0",
				"npm-lifecycle": "^3.1.5",
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/run-topologically": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/run-topologically/-/run-topologically-4.0.0.tgz",
			"integrity": "sha512-EVZw9hGwo+5yp+VL94+NXRYisqgAlj0jWKWtAIynDCpghRxCE5GMO3xrQLmQgqkpUl9ZxQFpICgYv5DW4DksQA==",
			"dev": true,
			"requires": {
				"@lerna/query-graph": "4.0.0",
				"p-queue": "^6.6.2"
			}
		},
		"@lerna/symlink-binary": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/symlink-binary/-/symlink-binary-4.0.0.tgz",
			"integrity": "sha512-zualodWC4q1QQc1pkz969hcFeWXOsVYZC5AWVtAPTDfLl+TwM7eG/O6oP+Rr3fFowspxo6b1TQ6sYfDV6HXNWA==",
			"dev": true,
			"requires": {
				"@lerna/create-symlink": "4.0.0",
				"@lerna/package": "4.0.0",
				"fs-extra": "^9.1.0",
				"p-map": "^4.0.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/symlink-dependencies": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/symlink-dependencies/-/symlink-dependencies-4.0.0.tgz",
			"integrity": "sha512-BABo0MjeUHNAe2FNGty1eantWp8u83BHSeIMPDxNq0MuW2K3CiQRaeWT3EGPAzXpGt0+hVzBrA6+OT0GPn7Yuw==",
			"dev": true,
			"requires": {
				"@lerna/create-symlink": "4.0.0",
				"@lerna/resolve-symlink": "4.0.0",
				"@lerna/symlink-binary": "4.0.0",
				"fs-extra": "^9.1.0",
				"p-map": "^4.0.0",
				"p-map-series": "^2.1.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "9.1.0",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
					"integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
					"dev": true,
					"requires": {
						"at-least-node": "^1.0.0",
						"graceful-fs": "^4.2.0",
						"jsonfile": "^6.0.1",
						"universalify": "^2.0.0"
					}
				},
				"jsonfile": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
					"integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.6",
						"universalify": "^2.0.0"
					}
				},
				"universalify": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz",
					"integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==",
					"dev": true
				}
			}
		},
		"@lerna/timer": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/timer/-/timer-4.0.0.tgz",
			"integrity": "sha512-WFsnlaE7SdOvjuyd05oKt8Leg3ENHICnvX3uYKKdByA+S3g+TCz38JsNs7OUZVt+ba63nC2nbXDlUnuT2Xbsfg==",
			"dev": true
		},
		"@lerna/validation-error": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/validation-error/-/validation-error-4.0.0.tgz",
			"integrity": "sha512-1rBOM5/koiVWlRi3V6dB863E1YzJS8v41UtsHgMr6gB2ncJ2LsQtMKlJpi3voqcgh41H8UsPXR58RrrpPpufyw==",
			"dev": true,
			"requires": {
				"npmlog": "^4.1.2"
			}
		},
		"@lerna/version": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/version/-/version-4.0.0.tgz",
			"integrity": "sha512-otUgiqs5W9zGWJZSCCMRV/2Zm2A9q9JwSDS7s/tlKq4mWCYriWo7+wsHEA/nPTMDyYyBO5oyZDj+3X50KDUzeA==",
			"dev": true,
			"requires": {
				"@lerna/check-working-tree": "4.0.0",
				"@lerna/child-process": "4.0.0",
				"@lerna/collect-updates": "4.0.0",
				"@lerna/command": "4.0.0",
				"@lerna/conventional-commits": "4.0.0",
				"@lerna/github-client": "4.0.0",
				"@lerna/gitlab-client": "4.0.0",
				"@lerna/output": "4.0.0",
				"@lerna/prerelease-id-from-version": "4.0.0",
				"@lerna/prompt": "4.0.0",
				"@lerna/run-lifecycle": "4.0.0",
				"@lerna/run-topologically": "4.0.0",
				"@lerna/validation-error": "4.0.0",
				"chalk": "^4.1.0",
				"dedent": "^0.7.0",
				"load-json-file": "^6.2.0",
				"minimatch": "^3.0.4",
				"npmlog": "^4.1.2",
				"p-map": "^4.0.0",
				"p-pipe": "^3.1.0",
				"p-reduce": "^2.1.0",
				"p-waterfall": "^2.1.1",
				"semver": "^7.3.4",
				"slash": "^3.0.0",
				"temp-write": "^4.0.0",
				"write-json-file": "^4.3.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"@lerna/write-log-file": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@lerna/write-log-file/-/write-log-file-4.0.0.tgz",
			"integrity": "sha512-XRG5BloiArpXRakcnPHmEHJp+4AtnhRtpDIHSghmXD5EichI1uD73J7FgPp30mm2pDRq3FdqB0NbwSEsJ9xFQg==",
			"dev": true,
			"requires": {
				"npmlog": "^4.1.2",
				"write-file-atomic": "^3.0.3"
			}
		},
		"@metamask/safe-event-emitter": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/@metamask/safe-event-emitter/-/safe-event-emitter-2.0.0.tgz",
			"integrity": "sha512-/kSXhY692qiV1MXu6EeOZvg5nECLclxNXcKCxJ3cXQgYuRymRHpdx/t7JXfsK+JLjwA1e1c1/SBrlQYpusC29Q==",
			"dev": true
		},
		"@mrmlnc/readdir-enhanced": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",
			"integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",
			"requires": {
				"call-me-maybe": "^1.0.1",
				"glob-to-regexp": "^0.3.0"
			}
		},
		"@nodelib/fs.scandir": {
			"version": "2.1.5",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
			"integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
			"requires": {
				"@nodelib/fs.stat": "2.0.5",
				"run-parallel": "^1.1.9"
			}
		},
		"@nodelib/fs.stat": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
			"integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A=="
		},
		"@nodelib/fs.walk": {
			"version": "1.2.8",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
			"integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
			"requires": {
				"@nodelib/fs.scandir": "2.1.5",
				"fastq": "^1.6.0"
			}
		},
		"@npmcli/ci-detect": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/@npmcli/ci-detect/-/ci-detect-1.3.0.tgz",
			"integrity": "sha512-oN3y7FAROHhrAt7Rr7PnTSwrHrZVRTS2ZbyxeQwSSYD0ifwM3YNgQqbaRmjcWoPyq77MjchusjJDspbzMmip1Q==",
			"dev": true
		},
		"@npmcli/git": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/@npmcli/git/-/git-2.1.0.tgz",
			"integrity": "sha512-/hBFX/QG1b+N7PZBFs0bi+evgRZcK9nWBxQKZkGoXUT5hJSwl5c4d7y8/hm+NQZRPhQ67RzFaj5UM9YeyKoryw==",
			"dev": true,
			"requires": {
				"@npmcli/promise-spawn": "^1.3.2",
				"lru-cache": "^6.0.0",
				"mkdirp": "^1.0.4",
				"npm-pick-manifest": "^6.1.1",
				"promise-inflight": "^1.0.1",
				"promise-retry": "^2.0.1",
				"semver": "^7.3.5",
				"which": "^2.0.2"
			},
			"dependencies": {
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"@npmcli/installed-package-contents": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/@npmcli/installed-package-contents/-/installed-package-contents-1.0.7.tgz",
			"integrity": "sha512-9rufe0wnJusCQoLpV9ZPKIVP55itrM5BxOXs10DmdbRfgWtHy1LDyskbwRnBghuB0PrF7pNPOqREVtpz4HqzKw==",
			"dev": true,
			"requires": {
				"npm-bundled": "^1.1.1",
				"npm-normalize-package-bin": "^1.0.1"
			}
		},
		"@npmcli/move-file": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/@npmcli/move-file/-/move-file-1.1.2.tgz",
			"integrity": "sha512-1SUf/Cg2GzGDyaf15aR9St9TWlb+XvbZXWpDx8YKs7MLzMH/BCeopv+y9vzrzgkfykCGuWOlSu3mZhj2+FQcrg==",
			"dev": true,
			"requires": {
				"mkdirp": "^1.0.4",
				"rimraf": "^3.0.2"
			},
			"dependencies": {
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				}
			}
		},
		"@npmcli/node-gyp": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/@npmcli/node-gyp/-/node-gyp-1.0.2.tgz",
			"integrity": "sha512-yrJUe6reVMpktcvagumoqD9r08fH1iRo01gn1u0zoCApa9lnZGEigVKUd2hzsCId4gdtkZZIVscLhNxMECKgRg==",
			"dev": true
		},
		"@npmcli/promise-spawn": {
			"version": "1.3.2",
			"resolved": "https://registry.npmjs.org/@npmcli/promise-spawn/-/promise-spawn-1.3.2.tgz",
			"integrity": "sha512-QyAGYo/Fbj4MXeGdJcFzZ+FkDkomfRBrPM+9QYJSg+PxgAUL+LU3FneQk37rKR2/zjqkCV1BLHccX98wRXG3Sg==",
			"dev": true,
			"requires": {
				"infer-owner": "^1.0.4"
			}
		},
		"@npmcli/run-script": {
			"version": "1.8.5",
			"resolved": "https://registry.npmjs.org/@npmcli/run-script/-/run-script-1.8.5.tgz",
			"integrity": "sha512-NQspusBCpTjNwNRFMtz2C5MxoxyzlbuJ4YEhxAKrIonTiirKDtatsZictx9RgamQIx6+QuHMNmPl0wQdoESs9A==",
			"dev": true,
			"requires": {
				"@npmcli/node-gyp": "^1.0.2",
				"@npmcli/promise-spawn": "^1.3.2",
				"infer-owner": "^1.0.4",
				"node-gyp": "^7.1.0",
				"read-package-json-fast": "^2.0.1"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"fs-minipass": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
					"integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"node-gyp": {
					"version": "7.1.2",
					"resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-7.1.2.tgz",
					"integrity": "sha512-CbpcIo7C3eMu3dL1c3d0xw449fHIGALIJsRP4DDPHpyiW8vcriNY7ubh9TE4zEKfSxscY7PjeFnshE7h75ynjQ==",
					"dev": true,
					"requires": {
						"env-paths": "^2.2.0",
						"glob": "^7.1.4",
						"graceful-fs": "^4.2.3",
						"nopt": "^5.0.0",
						"npmlog": "^4.1.2",
						"request": "^2.88.2",
						"rimraf": "^3.0.2",
						"semver": "^7.3.2",
						"tar": "^6.0.2",
						"which": "^2.0.2"
					}
				},
				"nopt": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/nopt/-/nopt-5.0.0.tgz",
					"integrity": "sha512-Tbj67rffqceeLpcRXrT7vKAN8CwfPeIBgM7E6iBkmKLV7bEMwpGgYLGv0jACUsECaa/vuxP0IjEont6umdMgtQ==",
					"dev": true,
					"requires": {
						"abbrev": "1"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"tar": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/tar/-/tar-6.1.0.tgz",
					"integrity": "sha512-DUCttfhsnLCjwoDoFcI+B2iJgYa93vBnDUATYEeRx6sntCTdN01VnqsIuTlALXla/LWooNg0yEGeB+Y8WdFxGA==",
					"dev": true,
					"requires": {
						"chownr": "^2.0.0",
						"fs-minipass": "^2.0.0",
						"minipass": "^3.0.0",
						"minizlib": "^2.1.1",
						"mkdirp": "^1.0.3",
						"yallist": "^4.0.0"
					}
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"@oclif/color": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/@oclif/color/-/color-0.1.2.tgz",
			"integrity": "sha512-M9o+DOrb8l603qvgz1FogJBUGLqcMFL1aFg2ZEL0FbXJofiNTLOWIeB4faeZTLwE6dt0xH9GpCVpzksMMzGbmA==",
			"requires": {
				"ansi-styles": "^3.2.1",
				"chalk": "^3.0.0",
				"strip-ansi": "^5.2.0",
				"supports-color": "^5.4.0",
				"tslib": "^1"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
					"integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
				},
				"chalk": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
					"integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					},
					"dependencies": {
						"ansi-styles": {
							"version": "4.3.0",
							"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
							"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
							"requires": {
								"color-convert": "^2.0.1"
							}
						},
						"supports-color": {
							"version": "7.2.0",
							"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
							"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
							"requires": {
								"has-flag": "^4.0.0"
							}
						}
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
				},
				"strip-ansi": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
					"integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
					"requires": {
						"ansi-regex": "^4.1.0"
					}
				}
			}
		},
		"@oclif/command": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/@oclif/command/-/command-1.8.0.tgz",
			"integrity": "sha512-5vwpq6kbvwkQwKqAoOU3L72GZ3Ta8RRrewKj9OJRolx28KLJJ8Dg9Rf7obRwt5jQA9bkYd8gqzMTrI7H3xLfaw==",
			"requires": {
				"@oclif/config": "^1.15.1",
				"@oclif/errors": "^1.3.3",
				"@oclif/parser": "^3.8.3",
				"@oclif/plugin-help": "^3",
				"debug": "^4.1.1",
				"semver": "^7.3.2"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"@oclif/config": {
			"version": "1.17.0",
			"resolved": "https://registry.npmjs.org/@oclif/config/-/config-1.17.0.tgz",
			"integrity": "sha512-Lmfuf6ubjQ4ifC/9bz1fSCHc6F6E653oyaRXxg+lgT4+bYf9bk+nqrUpAbrXyABkCqgIBiFr3J4zR/kiFdE1PA==",
			"requires": {
				"@oclif/errors": "^1.3.3",
				"@oclif/parser": "^3.8.0",
				"debug": "^4.1.1",
				"globby": "^11.0.1",
				"is-wsl": "^2.1.1",
				"tslib": "^2.0.0"
			},
			"dependencies": {
				"array-union": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
					"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw=="
				},
				"globby": {
					"version": "11.0.4",
					"resolved": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
					"integrity": "sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==",
					"requires": {
						"array-union": "^2.1.0",
						"dir-glob": "^3.0.1",
						"fast-glob": "^3.1.1",
						"ignore": "^5.1.4",
						"merge2": "^1.3.0",
						"slash": "^3.0.0"
					}
				},
				"tslib": {
					"version": "2.3.0",
					"resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
					"integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg=="
				}
			}
		},
		"@oclif/errors": {
			"version": "1.3.5",
			"resolved": "https://registry.npmjs.org/@oclif/errors/-/errors-1.3.5.tgz",
			"integrity": "sha512-OivucXPH/eLLlOT7FkCMoZXiaVYf8I/w1eTAM1+gKzfhALwWTusxEx7wBmW0uzvkSg/9ovWLycPaBgJbM3LOCQ==",
			"requires": {
				"clean-stack": "^3.0.0",
				"fs-extra": "^8.1",
				"indent-string": "^4.0.0",
				"strip-ansi": "^6.0.0",
				"wrap-ansi": "^7.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"clean-stack": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-3.0.1.tgz",
					"integrity": "sha512-lR9wNiMRcVQjSB3a7xXGLuz4cr4wJuuXlaAEbRutGowQTmlp7R72/DOgN21e8jdwblMWl9UOJMJXarX94pzKdg==",
					"requires": {
						"escape-string-regexp": "4.0.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
				},
				"escape-string-regexp": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
					"integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA=="
				},
				"wrap-ansi": {
					"version": "7.0.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
					"integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
					"requires": {
						"ansi-styles": "^4.0.0",
						"string-width": "^4.1.0",
						"strip-ansi": "^6.0.0"
					}
				}
			}
		},
		"@oclif/fixpack": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/@oclif/fixpack/-/fixpack-2.3.0.tgz",
			"integrity": "sha512-49WCnMIUO6MOj5h0kSsSh0JsrKVXa332nwMYafz1mvfrLhWHvA/7CW1yvWXbmVT7RUdE0+EfqVTHFdNlipAfpg==",
			"requires": {
				"alce": "1.2.0",
				"colors": "*",
				"extend-object": "^1.0.0",
				"rc": "^1.2.8"
			}
		},
		"@oclif/linewrap": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/@oclif/linewrap/-/linewrap-1.0.0.tgz",
			"integrity": "sha512-Ups2dShK52xXa8w6iBWLgcjPJWjais6KPJQq3gQ/88AY6BXoTX+MIGFPrWQO1KLMiQfoTpcLnUwloN4brrVUHw=="
		},
		"@oclif/parser": {
			"version": "3.8.5",
			"resolved": "https://registry.npmjs.org/@oclif/parser/-/parser-3.8.5.tgz",
			"integrity": "sha512-yojzeEfmSxjjkAvMRj0KzspXlMjCfBzNRPkWw8ZwOSoNWoJn+OCS/m/S+yfV6BvAM4u2lTzX9Y5rCbrFIgkJLg==",
			"requires": {
				"@oclif/errors": "^1.2.2",
				"@oclif/linewrap": "^1.0.0",
				"chalk": "^2.4.2",
				"tslib": "^1.9.3"
			}
		},
		"@oclif/plugin-help": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@oclif/plugin-help/-/plugin-help-3.2.2.tgz",
			"integrity": "sha512-SPZ8U8PBYK0n4srFjCLedk0jWU4QlxgEYLCXIBShJgOwPhTTQknkUlsEwaMIevvCU4iCQZhfMX+D8Pz5GZjFgA==",
			"requires": {
				"@oclif/command": "^1.5.20",
				"@oclif/config": "^1.15.1",
				"@oclif/errors": "^1.2.2",
				"chalk": "^4.1.0",
				"indent-string": "^4.0.0",
				"lodash.template": "^4.4.0",
				"string-width": "^4.2.0",
				"strip-ansi": "^6.0.0",
				"widest-line": "^3.1.0",
				"wrap-ansi": "^4.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
					"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
				},
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.2",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
					"integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
				},
				"is-fullwidth-code-point": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
					"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"requires": {
						"has-flag": "^4.0.0"
					}
				},
				"wrap-ansi": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-4.0.0.tgz",
					"integrity": "sha512-uMTsj9rDb0/7kk1PbcbCcwvHUxp60fGDB/NNXpVa0Q+ic/e7y5+BwTxKfQ33VYgDppSwi/FBzpetYzo8s6tfbg==",
					"requires": {
						"ansi-styles": "^3.2.0",
						"string-width": "^2.1.1",
						"strip-ansi": "^4.0.0"
					},
					"dependencies": {
						"ansi-styles": {
							"version": "3.2.1",
							"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
							"integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
							"requires": {
								"color-convert": "^1.9.0"
							}
						},
						"color-convert": {
							"version": "1.9.3",
							"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
							"integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
							"requires": {
								"color-name": "1.1.3"
							}
						},
						"color-name": {
							"version": "1.1.3",
							"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
							"integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
						},
						"string-width": {
							"version": "2.1.1",
							"resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
							"integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
							"requires": {
								"is-fullwidth-code-point": "^2.0.0",
								"strip-ansi": "^4.0.0"
							}
						},
						"strip-ansi": {
							"version": "4.0.0",
							"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
							"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
							"requires": {
								"ansi-regex": "^3.0.0"
							}
						}
					}
				}
			}
		},
		"@oclif/plugin-not-found": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/@oclif/plugin-not-found/-/plugin-not-found-1.2.4.tgz",
			"integrity": "sha512-G440PCuMi/OT8b71aWkR+kCWikngGtyRjOR24sPMDbpUFV4+B3r51fz1fcqeUiiEOYqUpr0Uy/sneUe1O/NfBg==",
			"requires": {
				"@oclif/color": "^0.x",
				"@oclif/command": "^1.6.0",
				"cli-ux": "^4.9.0",
				"fast-levenshtein": "^2.0.6",
				"lodash": "^4.17.13"
			},
			"dependencies": {
				"ansi-escapes": {
					"version": "3.2.0",
					"resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
					"integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="
				},
				"ansi-regex": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
					"integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="
				},
				"cli-ux": {
					"version": "4.9.3",
					"resolved": "https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.3.tgz",
					"integrity": "sha512-/1owvF0SZ5Gn54cgrikJ0QskgTzeg30HGjkmjFoaHDJzAqFpuX1DBpFR8aLvsE1J5s9MgeYRENQK4BFwOag5VA==",
					"requires": {
						"@oclif/errors": "^1.2.2",
						"@oclif/linewrap": "^1.0.0",
						"@oclif/screen": "^1.0.3",
						"ansi-escapes": "^3.1.0",
						"ansi-styles": "^3.2.1",
						"cardinal": "^2.1.1",
						"chalk": "^2.4.1",
						"clean-stack": "^2.0.0",
						"extract-stack": "^1.0.0",
						"fs-extra": "^7.0.0",
						"hyperlinker": "^1.0.0",
						"indent-string": "^3.2.0",
						"is-wsl": "^1.1.0",
						"lodash": "^4.17.11",
						"password-prompt": "^1.0.7",
						"semver": "^5.6.0",
						"strip-ansi": "^5.0.0",
						"supports-color": "^5.5.0",
						"supports-hyperlinks": "^1.0.1",
						"treeify": "^1.1.0",
						"tslib": "^1.9.3"
					}
				},
				"fs-extra": {
					"version": "7.0.1",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
					"integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
					"requires": {
						"graceful-fs": "^4.1.2",
						"jsonfile": "^4.0.0",
						"universalify": "^0.1.0"
					}
				},
				"has-flag": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz",
					"integrity": "sha1-6CB68cx7MNRGzHC3NLXovhj4jVE="
				},
				"indent-string": {
					"version": "3.2.0",
					"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-3.2.0.tgz",
					"integrity": "sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok="
				},
				"is-wsl": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
					"integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0="
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
				},
				"strip-ansi": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
					"integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
					"requires": {
						"ansi-regex": "^4.1.0"
					}
				},
				"supports-hyperlinks": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-1.0.1.tgz",
					"integrity": "sha512-HHi5kVSefKaJkGYXbDuKbUGRVxqnWGn3J2e39CYcNJEfWciGq2zYtOhXLTlvrOZW1QU7VX67w7fMmWafHX9Pfw==",
					"requires": {
						"has-flag": "^2.0.0",
						"supports-color": "^5.0.0"
					}
				}
			}
		},
		"@oclif/plugin-warn-if-update-available": {
			"version": "1.7.0",
			"resolved": "https://registry.npmjs.org/@oclif/plugin-warn-if-update-available/-/plugin-warn-if-update-available-1.7.0.tgz",
			"integrity": "sha512-Nwyz3BJ8RhsfQ+OmFSsJSPIfn5YJqMrCzPh72Zgo2jqIjKIBWD8N9vTTe4kZlpeUUn77SyXFfwlBQbNCL5OEuQ==",
			"requires": {
				"@oclif/command": "^1.5.10",
				"@oclif/config": "^1.12.8",
				"@oclif/errors": "^1.2.2",
				"chalk": "^2.4.1",
				"debug": "^4.1.0",
				"fs-extra": "^7.0.0",
				"http-call": "^5.2.2",
				"lodash.template": "^4.4.0",
				"semver": "^5.6.0"
			},
			"dependencies": {
				"fs-extra": {
					"version": "7.0.1",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
					"integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
					"requires": {
						"graceful-fs": "^4.1.2",
						"jsonfile": "^4.0.0",
						"universalify": "^0.1.0"
					}
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
				}
			}
		},
		"@oclif/screen": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/@oclif/screen/-/screen-1.0.4.tgz",
			"integrity": "sha512-60CHpq+eqnTxLZQ4PGHYNwUX572hgpMHGPtTWMjdTMsAvlm69lZV/4ly6O3sAYkomo4NggGcomrDpBe34rxUqw=="
		},
		"@octokit/auth-token": {
			"version": "2.4.5",
			"resolved": "https://registry.npmjs.org/@octokit/auth-token/-/auth-token-2.4.5.tgz",
			"integrity": "sha512-BpGYsPgJt05M7/L/5FoE1PiAbdxXFZkX/3kDYcsvd1v6UhlnE5e96dTDr0ezX/EFwciQxf3cNV0loipsURU+WA==",
			"dev": true,
			"requires": {
				"@octokit/types": "^6.0.3"
			}
		},
		"@octokit/core": {
			"version": "3.5.1",
			"resolved": "https://registry.npmjs.org/@octokit/core/-/core-3.5.1.tgz",
			"integrity": "sha512-omncwpLVxMP+GLpLPgeGJBF6IWJFjXDS5flY5VbppePYX9XehevbDykRH9PdCdvqt9TS5AOTiDide7h0qrkHjw==",
			"dev": true,
			"requires": {
				"@octokit/auth-token": "^2.4.4",
				"@octokit/graphql": "^4.5.8",
				"@octokit/request": "^5.6.0",
				"@octokit/request-error": "^2.0.5",
				"@octokit/types": "^6.0.3",
				"before-after-hook": "^2.2.0",
				"universal-user-agent": "^6.0.0"
			}
		},
		"@octokit/endpoint": {
			"version": "6.0.12",
			"resolved": "https://registry.npmjs.org/@octokit/endpoint/-/endpoint-6.0.12.tgz",
			"integrity": "sha512-lF3puPwkQWGfkMClXb4k/eUT/nZKQfxinRWJrdZaJO85Dqwo/G0yOC434Jr2ojwafWJMYqFGFa5ms4jJUgujdA==",
			"dev": true,
			"requires": {
				"@octokit/types": "^6.0.3",
				"is-plain-object": "^5.0.0",
				"universal-user-agent": "^6.0.0"
			},
			"dependencies": {
				"is-plain-object": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
					"integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
					"dev": true
				}
			}
		},
		"@octokit/graphql": {
			"version": "4.6.4",
			"resolved": "https://registry.npmjs.org/@octokit/graphql/-/graphql-4.6.4.tgz",
			"integrity": "sha512-SWTdXsVheRmlotWNjKzPOb6Js6tjSqA2a8z9+glDJng0Aqjzti8MEWOtuT8ZSu6wHnci7LZNuarE87+WJBG4vg==",
			"dev": true,
			"requires": {
				"@octokit/request": "^5.6.0",
				"@octokit/types": "^6.0.3",
				"universal-user-agent": "^6.0.0"
			}
		},
		"@octokit/openapi-types": {
			"version": "8.3.0",
			"resolved": "https://registry.npmjs.org/@octokit/openapi-types/-/openapi-types-8.3.0.tgz",
			"integrity": "sha512-ZFyQ30tNpoATI7o+Z9MWFUzUgWisB8yduhcky7S4UYsRijgIGSnwUKzPBDGzf/Xkx1DuvUtqzvmuFlDSqPJqmQ==",
			"dev": true
		},
		"@octokit/plugin-enterprise-rest": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/@octokit/plugin-enterprise-rest/-/plugin-enterprise-rest-6.0.1.tgz",
			"integrity": "sha512-93uGjlhUD+iNg1iWhUENAtJata6w5nE+V4urXOAlIXdco6xNZtUSfYY8dzp3Udy74aqO/B5UZL80x/YMa5PKRw==",
			"dev": true
		},
		"@octokit/plugin-paginate-rest": {
			"version": "2.14.0",
			"resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-2.14.0.tgz",
			"integrity": "sha512-S2uEu2uHeI7Vf+Lvj8tv3O5/5TCAa8GHS0dUQN7gdM7vKA6ZHAbR6HkAVm5yMb1mbedLEbxOuQ+Fa0SQ7tCDLA==",
			"dev": true,
			"requires": {
				"@octokit/types": "^6.18.0"
			}
		},
		"@octokit/plugin-request-log": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/@octokit/plugin-request-log/-/plugin-request-log-1.0.4.tgz",
			"integrity": "sha512-mLUsMkgP7K/cnFEw07kWqXGF5LKrOkD+lhCrKvPHXWDywAwuDUeDwWBpc69XK3pNX0uKiVt8g5z96PJ6z9xCFA==",
			"dev": true
		},
		"@octokit/plugin-rest-endpoint-methods": {
			"version": "5.4.1",
			"resolved": "https://registry.npmjs.org/@octokit/plugin-rest-endpoint-methods/-/plugin-rest-endpoint-methods-5.4.1.tgz",
			"integrity": "sha512-Nx0g7I5ayAYghsLJP4Q1Ch2W9jYYM0FlWWWZocUro8rNxVwuZXGfFd7Rcqi9XDWepSXjg1WByiNJnZza2hIOvQ==",
			"dev": true,
			"requires": {
				"@octokit/types": "^6.18.1",
				"deprecation": "^2.3.1"
			}
		},
		"@octokit/request": {
			"version": "5.6.0",
			"resolved": "https://registry.npmjs.org/@octokit/request/-/request-5.6.0.tgz",
			"integrity": "sha512-4cPp/N+NqmaGQwbh3vUsYqokQIzt7VjsgTYVXiwpUP2pxd5YiZB2XuTedbb0SPtv9XS7nzAKjAuQxmY8/aZkiA==",
			"dev": true,
			"requires": {
				"@octokit/endpoint": "^6.0.1",
				"@octokit/request-error": "^2.1.0",
				"@octokit/types": "^6.16.1",
				"is-plain-object": "^5.0.0",
				"node-fetch": "^2.6.1",
				"universal-user-agent": "^6.0.0"
			},
			"dependencies": {
				"is-plain-object": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
					"integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
					"dev": true
				}
			}
		},
		"@octokit/request-error": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/@octokit/request-error/-/request-error-2.1.0.tgz",
			"integrity": "sha512-1VIvgXxs9WHSjicsRwq8PlR2LR2x6DwsJAaFgzdi0JfJoGSO8mYI/cHJQ+9FbN21aa+DrgNLnwObmyeSC8Rmpg==",
			"dev": true,
			"requires": {
				"@octokit/types": "^6.0.3",
				"deprecation": "^2.0.0",
				"once": "^1.4.0"
			}
		},
		"@octokit/rest": {
			"version": "18.6.7",
			"resolved": "https://registry.npmjs.org/@octokit/rest/-/rest-18.6.7.tgz",
			"integrity": "sha512-Kn6WrI2ZvmAztdx+HEaf88RuJn+LK72S8g6OpciE4kbZddAN84fu4fiPGxcEu052WmqKVnA/cnQsbNlrYC6rqQ==",
			"dev": true,
			"requires": {
				"@octokit/core": "^3.5.0",
				"@octokit/plugin-paginate-rest": "^2.6.2",
				"@octokit/plugin-request-log": "^1.0.2",
				"@octokit/plugin-rest-endpoint-methods": "5.4.1"
			}
		},
		"@octokit/types": {
			"version": "6.19.0",
			"resolved": "https://registry.npmjs.org/@octokit/types/-/types-6.19.0.tgz",
			"integrity": "sha512-9wdZFiJfonDyU6DjIgDHxAIn92vdSUBOwAXbO2F9rOFt6DJwuAkyGLu1CvdJPphCbPBoV9iSDMX7y4fu0v6AtA==",
			"dev": true,
			"requires": {
				"@octokit/openapi-types": "^8.3.0"
			}
		},
		"@parcel/fs": {
			"version": "1.11.0",
			"resolved": "https://registry.npmjs.org/@parcel/fs/-/fs-1.11.0.tgz",
			"integrity": "sha512-86RyEqULbbVoeo8OLcv+LQ1Vq2PKBAvWTU9fCgALxuCTbbs5Ppcvll4Vr+Ko1AnmMzja/k++SzNAwJfeQXVlpA==",
			"dev": true,
			"requires": {
				"@parcel/utils": "^1.11.0",
				"mkdirp": "^0.5.1",
				"rimraf": "^2.6.2"
			},
			"dependencies": {
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"dev": true,
					"requires": {
						"glob": "^7.1.3"
					}
				}
			}
		},
		"@parcel/logger": {
			"version": "1.11.1",
			"resolved": "https://registry.npmjs.org/@parcel/logger/-/logger-1.11.1.tgz",
			"integrity": "sha512-9NF3M6UVeP2udOBDILuoEHd8VrF4vQqoWHEafymO1pfSoOMfxrSJZw1MfyAAIUN/IFp9qjcpDCUbDZB+ioVevA==",
			"dev": true,
			"requires": {
				"@parcel/workers": "^1.11.0",
				"chalk": "^2.1.0",
				"grapheme-breaker": "^0.3.2",
				"ora": "^2.1.0",
				"strip-ansi": "^4.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
					"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
					"dev": true
				},
				"strip-ansi": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
					"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^3.0.0"
					}
				}
			}
		},
		"@parcel/utils": {
			"version": "1.11.0",
			"resolved": "https://registry.npmjs.org/@parcel/utils/-/utils-1.11.0.tgz",
			"integrity": "sha512-cA3p4jTlaMeOtAKR/6AadanOPvKeg8VwgnHhOyfi0yClD0TZS/hi9xu12w4EzA/8NtHu0g6o4RDfcNjqN8l1AQ==",
			"dev": true
		},
		"@parcel/watcher": {
			"version": "1.12.1",
			"resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-1.12.1.tgz",
			"integrity": "sha512-od+uCtCxC/KoNQAIE1vWx1YTyKYY+7CTrxBJPRh3cDWw/C0tCtlBMVlrbplscGoEpt6B27KhJDCv82PBxOERNA==",
			"dev": true,
			"requires": {
				"@parcel/utils": "^1.11.0",
				"chokidar": "^2.1.5"
			},
			"dependencies": {
				"anymatch": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
					"integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
					"dev": true,
					"requires": {
						"micromatch": "^3.1.4",
						"normalize-path": "^2.1.1"
					},
					"dependencies": {
						"normalize-path": {
							"version": "2.1.1",
							"resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
							"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
							"dev": true,
							"requires": {
								"remove-trailing-separator": "^1.0.1"
							}
						}
					}
				},
				"binary-extensions": {
					"version": "1.13.1",
					"resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
					"integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
					"dev": true
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"dev": true,
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"chokidar": {
					"version": "2.1.8",
					"resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
					"integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
					"dev": true,
					"requires": {
						"anymatch": "^2.0.0",
						"async-each": "^1.0.1",
						"braces": "^2.3.2",
						"fsevents": "^1.2.7",
						"glob-parent": "^3.1.0",
						"inherits": "^2.0.3",
						"is-binary-path": "^1.0.0",
						"is-glob": "^4.0.0",
						"normalize-path": "^3.0.0",
						"path-is-absolute": "^1.0.0",
						"readdirp": "^2.2.1",
						"upath": "^1.1.1"
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"dev": true,
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"fsevents": {
					"version": "1.2.13",
					"resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.13.tgz",
					"integrity": "sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==",
					"dev": true,
					"optional": true,
					"requires": {
						"bindings": "^1.5.0",
						"nan": "^2.12.1"
					}
				},
				"glob-parent": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
					"integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
					"dev": true,
					"requires": {
						"is-glob": "^3.1.0",
						"path-dirname": "^1.0.0"
					},
					"dependencies": {
						"is-glob": {
							"version": "3.1.0",
							"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
							"integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
							"dev": true,
							"requires": {
								"is-extglob": "^2.1.0"
							}
						}
					}
				},
				"is-binary-path": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
					"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
					"dev": true,
					"requires": {
						"binary-extensions": "^1.0.0"
					}
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"dev": true,
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"dev": true,
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"dev": true,
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"readdirp": {
					"version": "2.2.1",
					"resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
					"integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.11",
						"micromatch": "^3.1.10",
						"readable-stream": "^2.0.2"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"dev": true,
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				},
				"upath": {
					"version": "1.2.0",
					"resolved": "https://registry.npmjs.org/upath/-/upath-1.2.0.tgz",
					"integrity": "sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==",
					"dev": true
				}
			}
		},
		"@parcel/workers": {
			"version": "1.11.0",
			"resolved": "https://registry.npmjs.org/@parcel/workers/-/workers-1.11.0.tgz",
			"integrity": "sha512-USSjRAAQYsZFlv43FUPdD+jEGML5/8oLF0rUzPQTtK4q9kvaXr49F5ZplyLz5lox78cLZ0TxN2bIDQ1xhOkulQ==",
			"dev": true,
			"requires": {
				"@parcel/utils": "^1.11.0",
				"physical-cpu-count": "^2.0.0"
			}
		},
		"@sindresorhus/is": {
			"version": "0.14.0",
			"resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
			"integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==",
			"dev": true
		},
		"@sinonjs/commons": {
			"version": "1.8.3",
			"resolved": "https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.3.tgz",
			"integrity": "sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==",
			"dev": true,
			"requires": {
				"type-detect": "4.0.8"
			}
		},
		"@sinonjs/fake-timers": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-6.0.1.tgz",
			"integrity": "sha512-MZPUxrmFubI36XS1DI3qmI0YdN1gks62JtFZvxR67ljjSNCeK6U08Zx4msEWOXuofgqUt6zPHSi1H9fbjR/NRA==",
			"dev": true,
			"requires": {
				"@sinonjs/commons": "^1.7.0"
			}
		},
		"@szmarczak/http-timer": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
			"integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
			"dev": true,
			"requires": {
				"defer-to-connect": "^1.0.1"
			}
		},
		"@tootallnate/once": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-1.1.2.tgz",
			"integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpkm/kwiR07aZXnsKPxw==",
			"dev": true
		},
		"@toruslabs/eccrypto": {
			"version": "1.1.7",
			"resolved": "https://registry.npmjs.org/@toruslabs/eccrypto/-/eccrypto-1.1.7.tgz",
			"integrity": "sha512-zU4GnrH21yDY179fgp5Ovi4YjLdHy3WXM3QHCHAomYNxa03eAw2lxNR2bZ7kb698yk40s4WMrbnauukgabXH4Q==",
			"dev": true,
			"requires": {
				"acorn": "^8.4.1",
				"elliptic": "^6.5.4",
				"es6-promise": "^4.2.8",
				"nan": "^2.14.2",
				"secp256k1": "^3.8.0"
			}
		},
		"@toruslabs/fetch-node-details": {
			"version": "2.7.0",
			"resolved": "https://registry.npmjs.org/@toruslabs/fetch-node-details/-/fetch-node-details-2.7.0.tgz",
			"integrity": "sha512-Dt0bU1GBN9AZlCoNzDJ4PjzcP/NV3yz9dXVRZWE1kWeeDbzdexUF47kiTuJVcrxKsnCjpz7ins1TNFrDFdsOQg==",
			"dev": true,
			"requires": {
				"web3-eth-contract": "^1.4.0",
				"web3-utils": "^1.4.0"
			}
		},
		"@toruslabs/http-helpers": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/@toruslabs/http-helpers/-/http-helpers-1.4.0.tgz",
			"integrity": "sha512-lPRhTWeChQunds2CGV70xvaoFMMebZAqZLpTYZjUJfziumQjT12w9HWLIzlRfGFVKoYUsUiZLpGHl0JEwHCcqg==",
			"dev": true,
			"requires": {
				"deepmerge": "^4.2.2"
			}
		},
		"@toruslabs/torus-direct-web-sdk": {
			"version": "4.14.1",
			"resolved": "https://registry.npmjs.org/@toruslabs/torus-direct-web-sdk/-/torus-direct-web-sdk-4.14.1.tgz",
			"integrity": "sha512-Vie3MUecEj/P/xDkoSN1Y8mUWOa9NLyuURHbOQi6rDbRtArGQ2tf6jyPyP2vofAeUD8x0rRE+b1l7I4sOJDOFQ==",
			"dev": true,
			"requires": {
				"@chaitanyapotti/random-id": "^1.0.3",
				"@chaitanyapotti/register-service-worker": "^1.7.3",
				"@toruslabs/fetch-node-details": "^2.7.0",
				"@toruslabs/http-helpers": "^1.4.0",
				"@toruslabs/torus.js": "^2.4.1",
				"broadcast-channel": "^3.7.0",
				"deepmerge": "^4.2.2",
				"jwt-decode": "^3.1.2",
				"loglevel": "^1.7.1",
				"web3-utils": "^1.4.0"
			}
		},
		"@toruslabs/torus.js": {
			"version": "2.4.1",
			"resolved": "https://registry.npmjs.org/@toruslabs/torus.js/-/torus.js-2.4.1.tgz",
			"integrity": "sha512-W/+yZbDsRC0voZPhFR6OkTW+/pB3Xxstl59WqI/BxEoNTk67vgizN6+2L5WchyHJKPbowEdQw26mqWemVQRAQw==",
			"dev": true,
			"requires": {
				"@toruslabs/eccrypto": "^1.1.7",
				"@toruslabs/http-helpers": "^1.4.0",
				"bn.js": "^5.2.0",
				"elliptic": "^6.5.4",
				"json-stable-stringify": "^1.0.1",
				"loglevel": "^1.7.1",
				"memory-cache": "^0.2.0",
				"web3-utils": "^1.4.0"
			}
		},
		"@tsconfig/node10": {
			"version": "1.0.8",
			"resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.8.tgz",
			"integrity": "sha512-6XFfSQmMgq0CFLY1MslA/CPUfhIL919M1rMsa5lP2P097N2Wd1sSX0tx1u4olM16fLNhtHZpRhedZJphNJqmZg==",
			"dev": true
		},
		"@tsconfig/node12": {
			"version": "1.0.9",
			"resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.9.tgz",
			"integrity": "sha512-/yBMcem+fbvhSREH+s14YJi18sp7J9jpuhYByADT2rypfajMZZN4WQ6zBGgBKp53NKmqI36wFYDb3yaMPurITw==",
			"dev": true
		},
		"@tsconfig/node14": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.1.tgz",
			"integrity": "sha512-509r2+yARFfHHE7T6Puu2jjkoycftovhXRqW328PDXTVGKihlb1P8Z9mMZH04ebyajfRY7dedfGynlrFHJUQCg==",
			"dev": true
		},
		"@tsconfig/node16": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.2.tgz",
			"integrity": "sha512-eZxlbI8GZscaGS7kkc/trHTT5xgrjH3/1n2JDwusC9iahPKWMRvRjJSAN5mCXviuTGQ/lHnhvv8Q1YTpnfz9gA==",
			"dev": true
		},
		"@types/babel__core": {
			"version": "7.1.15",
			"resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.15.tgz",
			"integrity": "sha512-bxlMKPDbY8x5h6HBwVzEOk2C8fb6SLfYQ5Jw3uBYuYF1lfWk/kbLd81la82vrIkBb0l+JdmrZaDikPrNxpS/Ew==",
			"dev": true,
			"requires": {
				"@babel/parser": "^7.1.0",
				"@babel/types": "^7.0.0",
				"@types/babel__generator": "*",
				"@types/babel__template": "*",
				"@types/babel__traverse": "*"
			}
		},
		"@types/babel__generator": {
			"version": "7.6.3",
			"resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.3.tgz",
			"integrity": "sha512-/GWCmzJWqV7diQW54smJZzWbSFf4QYtF71WCKhcx6Ru/tFyQIY2eiiITcCAeuPbNSvT9YCGkVMqqvSk2Z0mXiA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.0.0"
			}
		},
		"@types/babel__template": {
			"version": "7.4.1",
			"resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz",
			"integrity": "sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==",
			"dev": true,
			"requires": {
				"@babel/parser": "^7.1.0",
				"@babel/types": "^7.0.0"
			}
		},
		"@types/babel__traverse": {
			"version": "7.14.2",
			"resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.14.2.tgz",
			"integrity": "sha512-K2waXdXBi2302XUdcHcR1jCeU0LL4TD9HRs/gk0N2Xvrht+G/BfJa4QObBQZfhMdxiCpV3COl5Nfq4uKTeTnJA==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.3.0"
			}
		},
		"@types/bn.js": {
			"version": "4.11.6",
			"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
			"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
			"requires": {
				"@types/node": "*"
			},
			"dependencies": {
				"@types/node": {
					"version": "16.3.2",
					"resolved": "https://registry.npmjs.org/@types/node/-/node-16.3.2.tgz",
					"integrity": "sha512-jJs9ErFLP403I+hMLGnqDRWT0RYKSvArxuBVh2veudHV7ifEC1WAmjJADacZ7mRbA2nWgHtn8xyECMAot0SkAw=="
				}
			}
		},
		"@types/glob": {
			"version": "7.1.4",
			"resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.4.tgz",
			"integrity": "sha512-w+LsMxKyYQm347Otw+IfBXOv9UWVjpHpCDdbBMt8Kz/xbvCYNjP+0qPh91Km3iKfSRLBB0P7fAMf0KHrPu+MyA==",
			"requires": {
				"@types/minimatch": "*",
				"@types/node": "*"
			}
		},
		"@types/graceful-fs": {
			"version": "4.1.5",
			"resolved": "https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.5.tgz",
			"integrity": "sha512-anKkLmZZ+xm4p8JWBf4hElkM4XR+EZeA2M9BAkkTldmcyDY4mbdIJnRghDJH3Ov5ooY7/UAoENtmdMSkaAd7Cw==",
			"dev": true,
			"requires": {
				"@types/node": "*"
			}
		},
		"@types/istanbul-lib-coverage": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.3.tgz",
			"integrity": "sha512-sz7iLqvVUg1gIedBOvlkxPlc8/uVzyS5OwGz1cKjXzkl3FpL3al0crU8YGU1WoHkxn0Wxbw5tyi6hvzJKNzFsw==",
			"dev": true
		},
		"@types/istanbul-lib-report": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
			"integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==",
			"dev": true,
			"requires": {
				"@types/istanbul-lib-coverage": "*"
			}
		},
		"@types/istanbul-reports": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz",
			"integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==",
			"dev": true,
			"requires": {
				"@types/istanbul-lib-report": "*"
			}
		},
		"@types/jest": {
			"version": "26.0.24",
			"resolved": "https://registry.npmjs.org/@types/jest/-/jest-26.0.24.tgz",
			"integrity": "sha512-E/X5Vib8BWqZNRlDxj9vYXhsDwPYbPINqKF9BsnSoon4RQ0D9moEuLD8txgyypFLH7J4+Lho9Nr/c8H0Fi+17w==",
			"dev": true,
			"requires": {
				"jest-diff": "^26.0.0",
				"pretty-format": "^26.0.0"
			}
		},
		"@types/minimatch": {
			"version": "3.0.5",
			"resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.5.tgz",
			"integrity": "sha512-Klz949h02Gz2uZCMGwDUSDS1YBlTdDDgbWHi+81l29tQALUtvz4rAYi5uoVhE5Lagoq6DeqAUlbrHvW/mXDgdQ=="
		},
		"@types/minimist": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/@types/minimist/-/minimist-1.2.2.tgz",
			"integrity": "sha512-jhuKLIRrhvCPLqwPcx6INqmKeiA5EWrsCOPhrlFSrbrmU4ZMPjj5Ul/oLCMDO98XRUIwVm78xICz4EPCektzeQ==",
			"dev": true
		},
		"@types/node": {
			"version": "15.14.2",
			"resolved": "https://registry.npmjs.org/@types/node/-/node-15.14.2.tgz",
			"integrity": "sha512-dvMUE/m2LbXPwlvVuzCyslTEtQ2ZwuuFClDrOQ6mp2CenCg971719PTILZ4I6bTP27xfFFc+o7x2TkLuun/MPw=="
		},
		"@types/normalize-package-data": {
			"version": "2.4.1",
			"resolved": "https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.1.tgz",
			"integrity": "sha512-Gj7cI7z+98M282Tqmp2K5EIsoouUEzbBJhQQzDE3jSIRk6r9gsz0oUokqIUR4u1R3dMHo0pDHM7sNOHyhulypw=="
		},
		"@types/parse-json": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/@types/parse-json/-/parse-json-4.0.0.tgz",
			"integrity": "sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA==",
			"dev": true
		},
		"@types/pbkdf2": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/@types/pbkdf2/-/pbkdf2-3.1.0.tgz",
			"integrity": "sha512-Cf63Rv7jCQ0LaL8tNXmEyqTHuIJxRdlS5vMh1mj5voN4+QFhVZnlZruezqpWYDiJ8UTzhP0VmeLXCmBk66YrMQ==",
			"dev": true,
			"requires": {
				"@types/node": "*"
			}
		},
		"@types/prettier": {
			"version": "2.3.2",
			"resolved": "https://registry.npmjs.org/@types/prettier/-/prettier-2.3.2.tgz",
			"integrity": "sha512-eI5Yrz3Qv4KPUa/nSIAi0h+qX0XyewOliug5F2QAtuRg6Kjg6jfmxe1GIwoIRhZspD1A0RP8ANrPwvEXXtRFog==",
			"dev": true
		},
		"@types/prop-types": {
			"version": "15.7.4",
			"resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.4.tgz",
			"integrity": "sha512-rZ5drC/jWjrArrS8BR6SIr4cWpW09RNTYt9AMZo3Jwwif+iacXAqgVjm0B0Bv/S1jhDXKHqRVNCbACkJ89RAnQ==",
			"dev": true
		},
		"@types/q": {
			"version": "1.5.5",
			"resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.5.tgz",
			"integrity": "sha512-L28j2FcJfSZOnL1WBjDYp2vUHCeIFlyYI/53EwD/rKUBQ7MtUUfbQWiyKJGpcnv4/WgrhWsFKrcPstcAt/J0tQ==",
			"dev": true
		},
		"@types/react": {
			"version": "17.0.14",
			"resolved": "https://registry.npmjs.org/@types/react/-/react-17.0.14.tgz",
			"integrity": "sha512-0WwKHUbWuQWOce61UexYuWTGuGY/8JvtUe/dtQ6lR4sZ3UiylHotJeWpf3ArP9+DSGUoLY3wbU59VyMrJps5VQ==",
			"dev": true,
			"requires": {
				"@types/prop-types": "*",
				"@types/scheduler": "*",
				"csstype": "^3.0.2"
			}
		},
		"@types/react-dom": {
			"version": "17.0.9",
			"resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-17.0.9.tgz",
			"integrity": "sha512-wIvGxLfgpVDSAMH5utdL9Ngm5Owu0VsGmldro3ORLXV8CShrL8awVj06NuEXFQ5xyaYfdca7Sgbk/50Ri1GdPg==",
			"dev": true,
			"requires": {
				"@types/react": "*"
			}
		},
		"@types/scheduler": {
			"version": "0.16.2",
			"resolved": "https://registry.npmjs.org/@types/scheduler/-/scheduler-0.16.2.tgz",
			"integrity": "sha512-hppQEBDmlwhFAXKJX2KnWLYu5yMfi91yazPb2l+lbJiwW+wdo1gNeRA+3RgNSO39WYX2euey41KEwnqesU2Jew==",
			"dev": true
		},
		"@types/secp256k1": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/@types/secp256k1/-/secp256k1-4.0.3.tgz",
			"integrity": "sha512-Da66lEIFeIz9ltsdMZcpQvmrmmoqrfju8pm1BH8WbYjZSwUgCwXLb9C+9XYogwBITnbsSaMdVPb2ekf7TV+03w==",
			"dev": true,
			"requires": {
				"@types/node": "*"
			}
		},
		"@types/shelljs": {
			"version": "0.8.9",
			"resolved": "https://registry.npmjs.org/@types/shelljs/-/shelljs-0.8.9.tgz",
			"integrity": "sha512-flVe1dvlrCyQJN/SGrnBxqHG+RzXrVKsmjD8WS/qYHpq5UPjfq7UWFBENP0ZuOl0g6OpAlL6iBoLSvKYUUmyQw==",
			"dev": true,
			"requires": {
				"@types/glob": "*",
				"@types/node": "*"
			}
		},
		"@types/stack-utils": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz",
			"integrity": "sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw==",
			"dev": true
		},
		"@types/yargs": {
			"version": "15.0.14",
			"resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-15.0.14.tgz",
			"integrity": "sha512-yEJzHoxf6SyQGhBhIYGXQDSCkJjB6HohDShto7m8vaKg9Yp0Yn8+71J9eakh2bnPg6BfsH9PRMhiRTZnd4eXGQ==",
			"dev": true,
			"requires": {
				"@types/yargs-parser": "*"
			}
		},
		"@types/yargs-parser": {
			"version": "20.2.1",
			"resolved": "https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-20.2.1.tgz",
			"integrity": "sha512-7tFImggNeNBVMsn0vLrpn1H1uPrUBdnARPTpZoitY37ZrdJREzf7I16tMrlK3hen349gr1NYh8CmZQa7CTG6Aw==",
			"dev": true
		},
		"JSONStream": {
			"version": "1.3.5",
			"resolved": "https://registry.npmjs.org/JSONStream/-/JSONStream-1.3.5.tgz",
			"integrity": "sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==",
			"requires": {
				"jsonparse": "^1.2.0",
				"through": ">=2.2.7 <3"
			}
		},
		"abab": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/abab/-/abab-2.0.5.tgz",
			"integrity": "sha512-9IK9EadsbHo6jLWIpxpR6pL0sazTXV6+SQv25ZB+F7Bj9mJNaOc4nCRabwd5M/JwmUa8idz6Eci6eKfJryPs6Q==",
			"dev": true
		},
		"abbrev": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
			"integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
			"dev": true
		},
		"abstract-leveldown": {
			"version": "2.6.3",
			"resolved": "https://registry.npmjs.org/abstract-leveldown/-/abstract-leveldown-2.6.3.tgz",
			"integrity": "sha512-2++wDf/DYqkPR3o5tbfdhF96EfMApo1GpPfzOsR/ZYXdkSmELlvOOEAl9iKkRsktMPHdGjO4rtkBpf2I7TiTeA==",
			"dev": true,
			"requires": {
				"xtend": "~4.0.0"
			}
		},
		"accepts": {
			"version": "1.3.7",
			"resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
			"integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
			"dev": true,
			"requires": {
				"mime-types": "~2.1.24",
				"negotiator": "0.6.2"
			}
		},
		"acorn": {
			"version": "8.4.1",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-8.4.1.tgz",
			"integrity": "sha512-asabaBSkEKosYKMITunzX177CXxQ4Q8BSSzMTKD+FefUhipQC70gfW5SiUDhYQ3vk8G+81HqQk7Fv9OXwwn9KA==",
			"dev": true
		},
		"acorn-globals": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-6.0.0.tgz",
			"integrity": "sha512-ZQl7LOWaF5ePqqcX4hLuv/bLXYQNfNWw2c0/yX/TsPRKamzHcTGQnlCjHT3TsmkOUVEPS3crCxiPfdzE/Trlhg==",
			"dev": true,
			"requires": {
				"acorn": "^7.1.1",
				"acorn-walk": "^7.1.1"
			},
			"dependencies": {
				"acorn": {
					"version": "7.4.1",
					"resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
					"integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
					"dev": true
				}
			}
		},
		"acorn-walk": {
			"version": "7.2.0",
			"resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
			"integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
			"dev": true
		},
		"add-stream": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/add-stream/-/add-stream-1.0.0.tgz",
			"integrity": "sha1-anmQQ3ynNtXhKI25K9MmbV9csqo=",
			"dev": true
		},
		"agent-base": {
			"version": "6.0.2",
			"resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
			"integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
			"dev": true,
			"requires": {
				"debug": "4"
			}
		},
		"agentkeepalive": {
			"version": "4.1.4",
			"resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.1.4.tgz",
			"integrity": "sha512-+V/rGa3EuU74H6wR04plBb7Ks10FbtUQgRj/FQOG7uUIEuaINI+AiqJR1k6t3SVNs7o7ZjIdus6706qqzVq8jQ==",
			"dev": true,
			"requires": {
				"debug": "^4.1.0",
				"depd": "^1.1.2",
				"humanize-ms": "^1.2.1"
			},
			"dependencies": {
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
					"dev": true
				}
			}
		},
		"aggregate-error": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
			"integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
			"dev": true,
			"requires": {
				"clean-stack": "^2.0.0",
				"indent-string": "^4.0.0"
			}
		},
		"ajv": {
			"version": "6.12.6",
			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
			"integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
			"dev": true,
			"requires": {
				"fast-deep-equal": "^3.1.1",
				"fast-json-stable-stringify": "^2.0.0",
				"json-schema-traverse": "^0.4.1",
				"uri-js": "^4.2.2"
			}
		},
		"alce": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/alce/-/alce-1.2.0.tgz",
			"integrity": "sha1-qL4trKrEJJRhLxjcCdtpHz3qSqs=",
			"requires": {
				"esprima": "^1.2.0",
				"estraverse": "^1.5.0"
			},
			"dependencies": {
				"esprima": {
					"version": "1.2.5",
					"resolved": "https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz",
					"integrity": "sha1-CZNQL+r2aBODJXVvMPmlH+7sEek="
				},
				"estraverse": {
					"version": "1.9.3",
					"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-1.9.3.tgz",
					"integrity": "sha1-r2fy3JIlgkFZUJJgkaQAXSnJu0Q="
				}
			}
		},
		"alphanum-sort": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",
			"integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM=",
			"dev": true
		},
		"ansi-align": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.0.tgz",
			"integrity": "sha512-ZpClVKqXN3RGBmKibdfWzqCY4lnjEuoNzU5T0oEFpfd/z5qJHVarukridD4juLO2FXMiwUQxr9WqQtaYa8XRYw==",
			"dev": true,
			"requires": {
				"string-width": "^3.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
					"integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
					"dev": true
				},
				"emoji-regex": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
					"integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
					"dev": true
				},
				"is-fullwidth-code-point": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
					"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
					"dev": true
				},
				"string-width": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
					"integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
					"dev": true,
					"requires": {
						"emoji-regex": "^7.0.1",
						"is-fullwidth-code-point": "^2.0.0",
						"strip-ansi": "^5.1.0"
					}
				},
				"strip-ansi": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
					"integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
					"dev": true,
					"requires": {
						"ansi-regex": "^4.1.0"
					}
				}
			}
		},
		"ansi-escapes": {
			"version": "4.3.2",
			"resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
			"integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
			"requires": {
				"type-fest": "^0.21.3"
			},
			"dependencies": {
				"type-fest": {
					"version": "0.21.3",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
					"integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w=="
				}
			}
		},
		"ansi-regex": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
			"integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg=="
		},
		"ansi-styles": {
			"version": "3.2.1",
			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
			"integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
			"requires": {
				"color-convert": "^1.9.0"
			}
		},
		"ansi-to-html": {
			"version": "0.6.15",
			"resolved": "https://registry.npmjs.org/ansi-to-html/-/ansi-to-html-0.6.15.tgz",
			"integrity": "sha512-28ijx2aHJGdzbs+O5SNQF65r6rrKYnkuwTYm8lZlChuoJ9P1vVzIpWO20sQTqTPDXYp6NFwk326vApTtLVFXpQ==",
			"dev": true,
			"requires": {
				"entities": "^2.0.0"
			}
		},
		"ansicolors": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz",
			"integrity": "sha1-ZlWX3oap/+Oqm/vmyuXG6kJrSXk="
		},
		"any-shell-escape": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/any-shell-escape/-/any-shell-escape-0.1.1.tgz",
			"integrity": "sha1-1Vq5ciRMcaml4asIefML8RCAaVk="
		},
		"anymatch": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.2.tgz",
			"integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y/GNK7v0aa8rY816xWjZ7rJdA5XdMcpVFTKMq+RvWg==",
			"dev": true,
			"requires": {
				"normalize-path": "^3.0.0",
				"picomatch": "^2.0.4"
			}
		},
		"aproba": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
			"integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
			"dev": true
		},
		"are-we-there-yet": {
			"version": "1.1.5",
			"resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
			"integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
			"dev": true,
			"requires": {
				"delegates": "^1.0.0",
				"readable-stream": "^2.0.6"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"arg": {
			"version": "4.1.3",
			"resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
			"integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
			"dev": true
		},
		"argparse": {
			"version": "1.0.10",
			"resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
			"integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
			"requires": {
				"sprintf-js": "~1.0.2"
			}
		},
		"arr-diff": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
			"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
		},
		"arr-flatten": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
			"integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="
		},
		"arr-union": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
			"integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="
		},
		"array-differ": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/array-differ/-/array-differ-3.0.0.tgz",
			"integrity": "sha512-THtfYS6KtME/yIAhKjZ2ul7XI96lQGHRputJQHO80LAWQnuGP4iCIN8vdMRboGbIEYBwU33q8Tch1os2+X0kMg=="
		},
		"array-equal": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",
			"integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM=",
			"dev": true
		},
		"array-find-index": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz",
			"integrity": "sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E="
		},
		"array-flatten": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
			"integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=",
			"dev": true
		},
		"array-ify": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/array-ify/-/array-ify-1.0.0.tgz",
			"integrity": "sha1-nlKHYrSpBmrRY6aWKjZEGOlibs4=",
			"dev": true
		},
		"array-union": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
			"integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
			"requires": {
				"array-uniq": "^1.0.1"
			}
		},
		"array-uniq": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
			"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
		},
		"array-unique": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
			"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
		},
		"arrify": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz",
			"integrity": "sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug=="
		},
		"asap": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
			"integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY=",
			"dev": true
		},
		"ascii-table": {
			"version": "0.0.9",
			"resolved": "https://registry.npmjs.org/ascii-table/-/ascii-table-0.0.9.tgz",
			"integrity": "sha1-BqZgTWpV1L9BqaR9mHLXp42jHnM=",
			"dev": true
		},
		"asn1": {
			"version": "0.2.4",
			"resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
			"integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
			"dev": true,
			"requires": {
				"safer-buffer": "~2.1.0"
			}
		},
		"asn1.js": {
			"version": "5.4.1",
			"resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-5.4.1.tgz",
			"integrity": "sha512-+I//4cYPccV8LdmBLiX8CYvf9Sp3vQsrqu2QNXRcrbiWvcx/UdlFiqUJJzxRQxgsZmvhXhn4cSKeSmoFjVdupA==",
			"dev": true,
			"requires": {
				"bn.js": "^4.0.0",
				"inherits": "^2.0.1",
				"minimalistic-assert": "^1.0.0",
				"safer-buffer": "^2.1.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"assert": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/assert/-/assert-1.5.0.tgz",
			"integrity": "sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==",
			"dev": true,
			"requires": {
				"object-assign": "^4.1.1",
				"util": "0.10.3"
			},
			"dependencies": {
				"inherits": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
					"integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=",
					"dev": true
				},
				"util": {
					"version": "0.10.3",
					"resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
					"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
					"dev": true,
					"requires": {
						"inherits": "2.0.1"
					}
				}
			}
		},
		"assert-plus": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
			"integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
			"dev": true
		},
		"assign-symbols": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
			"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
		},
		"async": {
			"version": "2.6.3",
			"resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
			"integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
			"requires": {
				"lodash": "^4.17.14"
			}
		},
		"async-each": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",
			"integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==",
			"dev": true
		},
		"async-eventemitter": {
			"version": "0.2.4",
			"resolved": "https://registry.npmjs.org/async-eventemitter/-/async-eventemitter-0.2.4.tgz",
			"integrity": "sha512-pd20BwL7Yt1zwDFy+8MX8F1+WCT8aQeKj0kQnTrH9WaeRETlRamVhD0JtRPmrV4GfOJ2F9CvdQkZeZhnh2TuHw==",
			"dev": true,
			"requires": {
				"async": "^2.4.0"
			}
		},
		"async-limiter": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
			"integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==",
			"dev": true
		},
		"async-mutex": {
			"version": "0.2.6",
			"resolved": "https://registry.npmjs.org/async-mutex/-/async-mutex-0.2.6.tgz",
			"integrity": "sha512-Hs4R+4SPgamu6rSGW8C7cV9gaWUKEHykfzCCvIRuaVv636Ju10ZdeUbvb4TBEW0INuq2DHZqXbK4Nd3yG4RaRw==",
			"dev": true,
			"requires": {
				"tslib": "^2.0.0"
			},
			"dependencies": {
				"tslib": {
					"version": "2.3.0",
					"resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
					"integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg==",
					"dev": true
				}
			}
		},
		"asynckit": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
			"integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",
			"dev": true
		},
		"at-least-node": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz",
			"integrity": "sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==",
			"dev": true
		},
		"atob": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
			"integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="
		},
		"available-typed-arrays": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.4.tgz",
			"integrity": "sha512-SA5mXJWrId1TaQjfxUYghbqQ/hYioKmLJvPJyDuYRtXXenFNMjj4hSSt1Cf1xsuXSXrtxrVC5Ot4eU6cOtBDdA==",
			"dev": true
		},
		"aws-sign2": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
			"integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
			"dev": true
		},
		"aws4": {
			"version": "1.11.0",
			"resolved": "https://registry.npmjs.org/aws4/-/aws4-1.11.0.tgz",
			"integrity": "sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA==",
			"dev": true
		},
		"axios": {
			"version": "0.21.1",
			"resolved": "https://registry.npmjs.org/axios/-/axios-0.21.1.tgz",
			"integrity": "sha512-dKQiRHxGD9PPRIUNIWvZhPTPpl1rf/OxTYKsqKUDjBwYylTvV7SjSHJb9ratfyzM6wCdLCOYLzs73qpg5c4iGA==",
			"requires": {
				"follow-redirects": "^1.10.0"
			}
		},
		"babel-jest": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-26.6.3.tgz",
			"integrity": "sha512-pl4Q+GAVOHwvjrck6jKjvmGhnO3jHX/xuB9d27f+EJZ/6k+6nMuPjorrYp7s++bKKdANwzElBWnLWaObvTnaZA==",
			"dev": true,
			"requires": {
				"@jest/transform": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/babel__core": "^7.1.7",
				"babel-plugin-istanbul": "^6.0.0",
				"babel-preset-jest": "^26.6.2",
				"chalk": "^4.0.0",
				"graceful-fs": "^4.2.4",
				"slash": "^3.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"babel-plugin-dynamic-import-node": {
			"version": "2.3.3",
			"resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz",
			"integrity": "sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==",
			"dev": true,
			"requires": {
				"object.assign": "^4.1.0"
			}
		},
		"babel-plugin-istanbul": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.0.0.tgz",
			"integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE/QtHmqtP8SWlTENqbK8GCSQ==",
			"dev": true,
			"requires": {
				"@babel/helper-plugin-utils": "^7.0.0",
				"@istanbuljs/load-nyc-config": "^1.0.0",
				"@istanbuljs/schema": "^0.1.2",
				"istanbul-lib-instrument": "^4.0.0",
				"test-exclude": "^6.0.0"
			}
		},
		"babel-plugin-jest-hoist": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-26.6.2.tgz",
			"integrity": "sha512-PO9t0697lNTmcEHH69mdtYiOIkkOlj9fySqfO3K1eCcdISevLAE0xY59VLLUj0SoiPiTX/JU2CYFpILydUa5Lw==",
			"dev": true,
			"requires": {
				"@babel/template": "^7.3.3",
				"@babel/types": "^7.3.3",
				"@types/babel__core": "^7.0.0",
				"@types/babel__traverse": "^7.0.6"
			}
		},
		"babel-plugin-polyfill-corejs2": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.2.2.tgz",
			"integrity": "sha512-kISrENsJ0z5dNPq5eRvcctITNHYXWOA4DUZRFYCz3jYCcvTb/A546LIddmoGNMVYg2U38OyFeNosQwI9ENTqIQ==",
			"dev": true,
			"requires": {
				"@babel/compat-data": "^7.13.11",
				"@babel/helper-define-polyfill-provider": "^0.2.2",
				"semver": "^6.1.1"
			}
		},
		"babel-plugin-polyfill-corejs3": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.2.3.tgz",
			"integrity": "sha512-rCOFzEIJpJEAU14XCcV/erIf/wZQMmMT5l5vXOpL5uoznyOGfDIjPj6FVytMvtzaKSTSVKouOCTPJ5OMUZH30g==",
			"dev": true,
			"requires": {
				"@babel/helper-define-polyfill-provider": "^0.2.2",
				"core-js-compat": "^3.14.0"
			}
		},
		"babel-plugin-polyfill-regenerator": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.2.2.tgz",
			"integrity": "sha512-Goy5ghsc21HgPDFtzRkSirpZVW35meGoTmTOb2bxqdl60ghub4xOidgNTHaZfQ2FaxQsKmwvXtOAkcIS4SMBWg==",
			"dev": true,
			"requires": {
				"@babel/helper-define-polyfill-provider": "^0.2.2"
			}
		},
		"babel-preset-current-node-syntax": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.0.1.tgz",
			"integrity": "sha512-M7LQ0bxarkxQoN+vz5aJPsLBn77n8QgTFmo8WK0/44auK2xlCXrYcUxHFxgU7qW5Yzw/CjmLRK2uJzaCd7LvqQ==",
			"dev": true,
			"requires": {
				"@babel/plugin-syntax-async-generators": "^7.8.4",
				"@babel/plugin-syntax-bigint": "^7.8.3",
				"@babel/plugin-syntax-class-properties": "^7.8.3",
				"@babel/plugin-syntax-import-meta": "^7.8.3",
				"@babel/plugin-syntax-json-strings": "^7.8.3",
				"@babel/plugin-syntax-logical-assignment-operators": "^7.8.3",
				"@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
				"@babel/plugin-syntax-numeric-separator": "^7.8.3",
				"@babel/plugin-syntax-object-rest-spread": "^7.8.3",
				"@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
				"@babel/plugin-syntax-optional-chaining": "^7.8.3",
				"@babel/plugin-syntax-top-level-await": "^7.8.3"
			}
		},
		"babel-preset-jest": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-26.6.2.tgz",
			"integrity": "sha512-YvdtlVm9t3k777c5NPQIv6cxFFFapys25HiUmuSgHwIZhfifweR5c5Sf5nwE3MAbfu327CYSvps8Yx6ANLyleQ==",
			"dev": true,
			"requires": {
				"babel-plugin-jest-hoist": "^26.6.2",
				"babel-preset-current-node-syntax": "^1.0.0"
			}
		},
		"babel-runtime": {
			"version": "6.26.0",
			"resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
			"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
			"dev": true,
			"requires": {
				"core-js": "^2.4.0",
				"regenerator-runtime": "^0.11.0"
			},
			"dependencies": {
				"regenerator-runtime": {
					"version": "0.11.1",
					"resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
					"integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg==",
					"dev": true
				}
			}
		},
		"babel-types": {
			"version": "6.26.0",
			"resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.26.0.tgz",
			"integrity": "sha1-o7Bz+Uq0nrb6Vc1lInozQ4BjJJc=",
			"dev": true,
			"requires": {
				"babel-runtime": "^6.26.0",
				"esutils": "^2.0.2",
				"lodash": "^4.17.4",
				"to-fast-properties": "^1.0.3"
			},
			"dependencies": {
				"to-fast-properties": {
					"version": "1.0.3",
					"resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
					"integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
					"dev": true
				}
			}
		},
		"babylon-walk": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/babylon-walk/-/babylon-walk-1.0.2.tgz",
			"integrity": "sha1-OxWl3btIKni0zpwByLoYFwLZ1s4=",
			"dev": true,
			"requires": {
				"babel-runtime": "^6.11.6",
				"babel-types": "^6.15.0",
				"lodash.clone": "^4.5.0"
			}
		},
		"backoff": {
			"version": "2.5.0",
			"resolved": "https://registry.npmjs.org/backoff/-/backoff-2.5.0.tgz",
			"integrity": "sha1-9hbtqdPktmuMp/ynn2lXIsX44m8=",
			"dev": true,
			"requires": {
				"precond": "0.2"
			}
		},
		"balanced-match": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
			"integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
		},
		"base": {
			"version": "0.11.2",
			"resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
			"integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
			"requires": {
				"cache-base": "^1.0.1",
				"class-utils": "^0.3.5",
				"component-emitter": "^1.2.1",
				"define-property": "^1.0.0",
				"isobject": "^3.0.1",
				"mixin-deep": "^1.2.0",
				"pascalcase": "^0.1.1"
			},
			"dependencies": {
				"define-property": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
					"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
					"requires": {
						"is-descriptor": "^1.0.0"
					}
				},
				"is-accessor-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
					"integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-data-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
					"integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-descriptor": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
					"integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
					"requires": {
						"is-accessor-descriptor": "^1.0.0",
						"is-data-descriptor": "^1.0.0",
						"kind-of": "^6.0.2"
					}
				}
			}
		},
		"base-x": {
			"version": "3.0.8",
			"resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.8.tgz",
			"integrity": "sha512-Rl/1AWP4J/zRrk54hhlxH4drNxPJXYUaKffODVI53/dAsV4t9fBxyxYKAVPU1XBHxYwOWP9h9H0hM2MVw4YfJA==",
			"requires": {
				"safe-buffer": "^5.0.1"
			}
		},
		"base64-js": {
			"version": "1.5.1",
			"resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
			"integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA=="
		},
		"bcrypt-pbkdf": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
			"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
			"dev": true,
			"requires": {
				"tweetnacl": "^0.14.3"
			},
			"dependencies": {
				"tweetnacl": {
					"version": "0.14.5",
					"resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
					"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
					"dev": true
				}
			}
		},
		"before-after-hook": {
			"version": "2.2.2",
			"resolved": "https://registry.npmjs.org/before-after-hook/-/before-after-hook-2.2.2.tgz",
			"integrity": "sha512-3pZEU3NT5BFUo/AD5ERPWOgQOCZITni6iavr5AUw5AUwQjMlI0kzu5btnyD39AF0gUEsDPwJT+oY1ORBJijPjQ==",
			"dev": true
		},
		"big-integer": {
			"version": "1.6.48",
			"resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.48.tgz",
			"integrity": "sha512-j51egjPa7/i+RdiRuJbPdJ2FIUYYPhvYLjzoYbcMMm62ooO6F94fETG4MTs46zPAF9Brs04OajboA/qTGuz78w==",
			"dev": true
		},
		"bignumber.js": {
			"version": "9.0.1",
			"resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.1.tgz",
			"integrity": "sha512-IdZR9mh6ahOBv/hYGiXyVuyCetmGJhtYkqLBpTStdhEGjegpPlUawydyaF3pbIOFynJTpllEs+NP+CS9jKFLjA==",
			"dev": true
		},
		"binary-extensions": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz",
			"integrity": "sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==",
			"dev": true
		},
		"binaryextensions": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/binaryextensions/-/binaryextensions-2.3.0.tgz",
			"integrity": "sha512-nAihlQsYGyc5Bwq6+EsubvANYGExeJKHDO3RjnvwU042fawQTQfM3Kxn7IHUXQOz4bzfwsGYYHGSvXyW4zOGLg=="
		},
		"bindings": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
			"integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
			"dev": true,
			"requires": {
				"file-uri-to-path": "1.0.0"
			}
		},
		"bip39": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/bip39/-/bip39-3.0.2.tgz",
			"integrity": "sha512-J4E1r2N0tUylTKt07ibXvhpT2c5pyAFgvuA5q1H9uDy6dEGpjV8jmymh3MTYJDLCNbIVClSB9FbND49I6N24MQ==",
			"dev": true,
			"requires": {
				"@types/node": "11.11.6",
				"create-hash": "^1.1.0",
				"pbkdf2": "^3.0.9",
				"randombytes": "^2.0.1"
			},
			"dependencies": {
				"@types/node": {
					"version": "11.11.6",
					"resolved": "https://registry.npmjs.org/@types/node/-/node-11.11.6.tgz",
					"integrity": "sha512-Exw4yUWMBXM3X+8oqzJNRqZSwUAaS4+7NdvHqQuFi/d+synz++xmX3QIf+BFqneW8N31R8Ky+sikfZUXq07ggQ==",
					"dev": true
				}
			}
		},
		"bip39-light": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/bip39-light/-/bip39-light-1.0.7.tgz",
			"integrity": "sha512-WDTmLRQUsiioBdTs9BmSEmkJza+8xfJmptsNJjxnoq3EydSa/ZBXT6rm66KoT3PJIRYMnhSKNR7S9YL1l7R40Q==",
			"dev": true,
			"requires": {
				"create-hash": "^1.1.0",
				"pbkdf2": "^3.0.9"
			}
		},
		"bip66": {
			"version": "1.1.5",
			"resolved": "https://registry.npmjs.org/bip66/-/bip66-1.1.5.tgz",
			"integrity": "sha1-AfqHSHhcpwlV1QESF9GzE5lpyiI=",
			"dev": true,
			"optional": true,
			"requires": {
				"safe-buffer": "^5.0.1"
			}
		},
		"bl": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
			"integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
			"requires": {
				"buffer": "^5.5.0",
				"inherits": "^2.0.4",
				"readable-stream": "^3.4.0"
			}
		},
		"blakejs": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/blakejs/-/blakejs-1.1.1.tgz",
			"integrity": "sha512-bLG6PHOCZJKNshTjGRBvET0vTciwQE6zFKOKKXPDJfwFBd4Ac0yBfPZqcGvGJap50l7ktvlpFqc2jGVaUgbJgg==",
			"dev": true
		},
		"bluebird": {
			"version": "3.7.2",
			"resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
			"integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==",
			"dev": true
		},
		"bn.js": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
			"integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
		},
		"body-parser": {
			"version": "1.19.0",
			"resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
			"integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
			"dev": true,
			"requires": {
				"bytes": "3.1.0",
				"content-type": "~1.0.4",
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"http-errors": "1.7.2",
				"iconv-lite": "0.4.24",
				"on-finished": "~2.3.0",
				"qs": "6.7.0",
				"raw-body": "2.4.0",
				"type-is": "~1.6.17"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					}
				},
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
					"dev": true
				},
				"http-errors": {
					"version": "1.7.2",
					"resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
					"integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
					"dev": true,
					"requires": {
						"depd": "~1.1.2",
						"inherits": "2.0.3",
						"setprototypeof": "1.1.1",
						"statuses": ">= 1.5.0 < 2",
						"toidentifier": "1.0.0"
					}
				},
				"inherits": {
					"version": "2.0.3",
					"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
					"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
					"dev": true
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
					"dev": true
				},
				"qs": {
					"version": "6.7.0",
					"resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
					"integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
					"dev": true
				},
				"setprototypeof": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
					"integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
					"dev": true
				}
			}
		},
		"boolbase": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
			"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
			"dev": true
		},
		"borsh": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.4.0.tgz",
			"integrity": "sha512-aX6qtLya3K0AkT66CmYWCCDr77qsE9arV05OmdFpmat9qu8Pg9J5tBUPDztAW5fNh/d/MyVG/OYziP52Ndzx1g==",
			"requires": {
				"@types/bn.js": "^4.11.5",
				"bn.js": "^5.0.0",
				"bs58": "^4.0.0",
				"text-encoding-utf-8": "^1.0.2"
			}
		},
		"boxen": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/boxen/-/boxen-5.0.1.tgz",
			"integrity": "sha512-49VBlw+PrWEF51aCmy7QIteYPIFZxSpvqBdP/2itCPPlJ49kj9zg/XPRFrdkne2W+CfwXUls8exMvu1RysZpKA==",
			"dev": true,
			"requires": {
				"ansi-align": "^3.0.0",
				"camelcase": "^6.2.0",
				"chalk": "^4.1.0",
				"cli-boxes": "^2.2.1",
				"string-width": "^4.2.0",
				"type-fest": "^0.20.2",
				"widest-line": "^3.1.0",
				"wrap-ansi": "^7.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"camelcase": {
					"version": "6.2.0",
					"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.2.0.tgz",
					"integrity": "sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN/hdLdnZTDQhg6e9Dq5M1vKvfg==",
					"dev": true
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				},
				"type-fest": {
					"version": "0.20.2",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
					"integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
					"dev": true
				},
				"wrap-ansi": {
					"version": "7.0.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
					"integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.0.0",
						"string-width": "^4.1.0",
						"strip-ansi": "^6.0.0"
					}
				}
			}
		},
		"brace-expansion": {
			"version": "1.1.11",
			"resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
			"integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
			"requires": {
				"balanced-match": "^1.0.0",
				"concat-map": "0.0.1"
			}
		},
		"braces": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
			"integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
			"requires": {
				"fill-range": "^7.0.1"
			}
		},
		"brfs": {
			"version": "1.6.1",
			"resolved": "https://registry.npmjs.org/brfs/-/brfs-1.6.1.tgz",
			"integrity": "sha512-OfZpABRQQf+Xsmju8XE9bDjs+uU4vLREGolP7bDgcpsI17QREyZ4Bl+2KLxxx1kCgA0fAIhKQBaBYh+PEcCqYQ==",
			"dev": true,
			"requires": {
				"quote-stream": "^1.0.1",
				"resolve": "^1.1.5",
				"static-module": "^2.2.0",
				"through2": "^2.0.0"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"through2": {
					"version": "2.0.5",
					"resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
					"integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
					"dev": true,
					"requires": {
						"readable-stream": "~2.3.6",
						"xtend": "~4.0.1"
					}
				}
			}
		},
		"broadcast-channel": {
			"version": "3.7.0",
			"resolved": "https://registry.npmjs.org/broadcast-channel/-/broadcast-channel-3.7.0.tgz",
			"integrity": "sha512-cIAKJXAxGJceNZGTZSBzMxzyOn72cVgPnKx4dc6LRjQgbaJUQqhy5rzL3zbMxkMWsGKkv2hSFkPRMEXfoMZ2Mg==",
			"dev": true,
			"requires": {
				"@babel/runtime": "^7.7.2",
				"detect-node": "^2.1.0",
				"js-sha3": "0.8.0",
				"microseconds": "0.2.0",
				"nano-time": "1.0.0",
				"oblivious-set": "1.0.0",
				"rimraf": "3.0.2",
				"unload": "2.2.0"
			}
		},
		"brorand": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
			"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
			"dev": true
		},
		"browser-process-hrtime": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-1.0.0.tgz",
			"integrity": "sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDkabFJaDJMYRazHgsow==",
			"dev": true
		},
		"browserify-aes": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
			"integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
			"dev": true,
			"requires": {
				"buffer-xor": "^1.0.3",
				"cipher-base": "^1.0.0",
				"create-hash": "^1.1.0",
				"evp_bytestokey": "^1.0.3",
				"inherits": "^2.0.1",
				"safe-buffer": "^5.0.1"
			}
		},
		"browserify-cipher": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",
			"integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",
			"dev": true,
			"requires": {
				"browserify-aes": "^1.0.4",
				"browserify-des": "^1.0.0",
				"evp_bytestokey": "^1.0.0"
			}
		},
		"browserify-des": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",
			"integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",
			"dev": true,
			"requires": {
				"cipher-base": "^1.0.1",
				"des.js": "^1.0.0",
				"inherits": "^2.0.1",
				"safe-buffer": "^5.1.2"
			}
		},
		"browserify-rsa": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.1.0.tgz",
			"integrity": "sha512-AdEER0Hkspgno2aR97SAf6vi0y0k8NuOpGnVH3O99rcA5Q6sh8QxcngtHuJ6uXwnfAXNM4Gn1Gb7/MV1+Ymbog==",
			"dev": true,
			"requires": {
				"bn.js": "^5.0.0",
				"randombytes": "^2.0.1"
			}
		},
		"browserify-sign": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.2.1.tgz",
			"integrity": "sha512-/vrA5fguVAKKAVTNJjgSm1tRQDHUU6DbwO9IROu/0WAzC8PKhucDSh18J0RMvVeHAn5puMd+QHC2erPRNf8lmg==",
			"dev": true,
			"requires": {
				"bn.js": "^5.1.1",
				"browserify-rsa": "^4.0.1",
				"create-hash": "^1.2.0",
				"create-hmac": "^1.1.7",
				"elliptic": "^6.5.3",
				"inherits": "^2.0.4",
				"parse-asn1": "^5.1.5",
				"readable-stream": "^3.6.0",
				"safe-buffer": "^5.2.0"
			}
		},
		"browserify-zlib": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",
			"integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",
			"dev": true,
			"requires": {
				"pako": "~1.0.5"
			},
			"dependencies": {
				"pako": {
					"version": "1.0.11",
					"resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
					"integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
					"dev": true
				}
			}
		},
		"browserslist": {
			"version": "4.16.6",
			"resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.16.6.tgz",
			"integrity": "sha512-Wspk/PqO+4W9qp5iUTJsa1B/QrYn1keNCcEP5OvP7WBwT4KaDly0uONYmC6Xa3Z5IqnUgS0KcgLYu1l74x0ZXQ==",
			"dev": true,
			"requires": {
				"caniuse-lite": "^1.0.30001219",
				"colorette": "^1.2.2",
				"electron-to-chromium": "^1.3.723",
				"escalade": "^3.1.1",
				"node-releases": "^1.1.71"
			}
		},
		"bs58": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
			"integrity": "sha1-vhYedsNU9veIrkBx9j806MTwpCo=",
			"requires": {
				"base-x": "^3.0.2"
			}
		},
		"bs58check": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/bs58check/-/bs58check-2.1.2.tgz",
			"integrity": "sha512-0TS1jicxdU09dwJMNZtVAfzPi6Q6QeN0pM1Fkzrjn+XYHvzMKPU3pHVpva+769iNVSfIYWf7LJ6WR+BuuMf8cA==",
			"dev": true,
			"requires": {
				"bs58": "^4.0.0",
				"create-hash": "^1.1.0",
				"safe-buffer": "^5.1.2"
			}
		},
		"bser": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/bser/-/bser-2.1.1.tgz",
			"integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
			"dev": true,
			"requires": {
				"node-int64": "^0.4.0"
			}
		},
		"bsert": {
			"version": "0.0.10",
			"resolved": "https://registry.npmjs.org/bsert/-/bsert-0.0.10.tgz",
			"integrity": "sha512-NHNwlac+WPy4t2LoNh8pXk8uaIGH3NSaIUbTTRXGpE2WEbq0te/tDykYHkFK57YKLPjv/aGHmbqvnGeVWDz57Q==",
			"dev": true
		},
		"btoa": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/btoa/-/btoa-1.2.1.tgz",
			"integrity": "sha512-SB4/MIGlsiVkMcHmT+pSmIPoNDoHg+7cMzmt3Uxt628MTz2487DKSqK/fuhFBrkuqrYv5UCEnACpF4dTFNKc/g==",
			"dev": true
		},
		"buffer": {
			"version": "5.7.1",
			"resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
			"integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
			"requires": {
				"base64-js": "^1.3.1",
				"ieee754": "^1.1.13"
			}
		},
		"buffer-alloc": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
			"integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
			"requires": {
				"buffer-alloc-unsafe": "^1.1.0",
				"buffer-fill": "^1.0.0"
			}
		},
		"buffer-alloc-unsafe": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
			"integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg=="
		},
		"buffer-equal": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-0.0.1.tgz",
			"integrity": "sha1-kbx0sR6kBbyRa8aqkI+q+ltKrEs=",
			"dev": true
		},
		"buffer-fill": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
			"integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw="
		},
		"buffer-from": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
			"integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
			"dev": true
		},
		"buffer-to-arraybuffer": {
			"version": "0.0.5",
			"resolved": "https://registry.npmjs.org/buffer-to-arraybuffer/-/buffer-to-arraybuffer-0.0.5.tgz",
			"integrity": "sha1-YGSkD6dutDxyOrqe+PbhIW0QURo=",
			"dev": true
		},
		"buffer-xor": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
			"integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=",
			"dev": true
		},
		"bufferutil": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.3.tgz",
			"integrity": "sha512-yEYTwGndELGvfXsImMBLop58eaGW+YdONi1fNjTINSY98tmMmFijBG6WXgdkfuLNt4imzQNtIE+eBp1PVpMCSw==",
			"dev": true,
			"requires": {
				"node-gyp-build": "^4.2.0"
			}
		},
		"builtin-status-codes": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",
			"integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=",
			"dev": true
		},
		"builtins": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/builtins/-/builtins-1.0.3.tgz",
			"integrity": "sha1-y5T662HIaWRR2zZTThQi+U8K7og=",
			"dev": true
		},
		"byline": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/byline/-/byline-5.0.0.tgz",
			"integrity": "sha1-dBxSFkaOrcRXsDQQEYrXfejB3bE=",
			"dev": true
		},
		"byte-size": {
			"version": "7.0.1",
			"resolved": "https://registry.npmjs.org/byte-size/-/byte-size-7.0.1.tgz",
			"integrity": "sha512-crQdqyCwhokxwV1UyDzLZanhkugAgft7vt0qbbdt60C6Zf3CAiGmtUCylbtYwrU6loOUw3euGrNtW1J651ot1A==",
			"dev": true
		},
		"bytes": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
			"integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==",
			"dev": true
		},
		"cacache": {
			"version": "15.2.0",
			"resolved": "https://registry.npmjs.org/cacache/-/cacache-15.2.0.tgz",
			"integrity": "sha512-uKoJSHmnrqXgthDFx/IU6ED/5xd+NNGe+Bb+kLZy7Ku4P+BaiWEUflAKPZ7eAzsYGcsAGASJZsybXp+quEcHTw==",
			"dev": true,
			"requires": {
				"@npmcli/move-file": "^1.0.1",
				"chownr": "^2.0.0",
				"fs-minipass": "^2.0.0",
				"glob": "^7.1.4",
				"infer-owner": "^1.0.4",
				"lru-cache": "^6.0.0",
				"minipass": "^3.1.1",
				"minipass-collect": "^1.0.2",
				"minipass-flush": "^1.0.5",
				"minipass-pipeline": "^1.2.2",
				"mkdirp": "^1.0.3",
				"p-map": "^4.0.0",
				"promise-inflight": "^1.0.1",
				"rimraf": "^3.0.2",
				"ssri": "^8.0.1",
				"tar": "^6.0.2",
				"unique-filename": "^1.1.1"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"fs-minipass": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
					"integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"tar": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/tar/-/tar-6.1.0.tgz",
					"integrity": "sha512-DUCttfhsnLCjwoDoFcI+B2iJgYa93vBnDUATYEeRx6sntCTdN01VnqsIuTlALXla/LWooNg0yEGeB+Y8WdFxGA==",
					"dev": true,
					"requires": {
						"chownr": "^2.0.0",
						"fs-minipass": "^2.0.0",
						"minipass": "^3.0.0",
						"minizlib": "^2.1.1",
						"mkdirp": "^1.0.3",
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"cache-base": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
			"integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
			"requires": {
				"collection-visit": "^1.0.0",
				"component-emitter": "^1.2.1",
				"get-value": "^2.0.6",
				"has-value": "^1.0.0",
				"isobject": "^3.0.1",
				"set-value": "^2.0.0",
				"to-object-path": "^0.3.0",
				"union-value": "^1.0.0",
				"unset-value": "^1.0.0"
			}
		},
		"cacheable-request": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
			"integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
			"dev": true,
			"requires": {
				"clone-response": "^1.0.2",
				"get-stream": "^5.1.0",
				"http-cache-semantics": "^4.0.0",
				"keyv": "^3.0.0",
				"lowercase-keys": "^2.0.0",
				"normalize-url": "^4.1.0",
				"responselike": "^1.0.2"
			},
			"dependencies": {
				"get-stream": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
					"integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
					"dev": true,
					"requires": {
						"pump": "^3.0.0"
					}
				},
				"lowercase-keys": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
					"integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
					"dev": true
				},
				"normalize-url": {
					"version": "4.5.1",
					"resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.1.tgz",
					"integrity": "sha512-9UZCFRHQdNrfTpGg8+1INIg93B6zE0aXMVFkw1WFwvO4SlZywU6aLg5Of0Ap/PgcbSw4LNxvMWXMeugwMCX0AA==",
					"dev": true
				}
			}
		},
		"call-bind": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
			"integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
			"dev": true,
			"requires": {
				"function-bind": "^1.1.1",
				"get-intrinsic": "^1.0.2"
			}
		},
		"call-me-maybe": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",
			"integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms="
		},
		"caller-callsite": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",
			"integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",
			"dev": true,
			"requires": {
				"callsites": "^2.0.0"
			},
			"dependencies": {
				"callsites": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",
					"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA=",
					"dev": true
				}
			}
		},
		"caller-path": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",
			"integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",
			"dev": true,
			"requires": {
				"caller-callsite": "^2.0.0"
			}
		},
		"callsites": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
			"integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
			"dev": true
		},
		"camelcase": {
			"version": "5.3.1",
			"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
			"integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
			"dev": true
		},
		"camelcase-keys": {
			"version": "6.2.2",
			"resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-6.2.2.tgz",
			"integrity": "sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==",
			"dev": true,
			"requires": {
				"camelcase": "^5.3.1",
				"map-obj": "^4.0.0",
				"quick-lru": "^4.0.1"
			}
		},
		"caniuse-api": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",
			"integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"caniuse-lite": "^1.0.0",
				"lodash.memoize": "^4.1.2",
				"lodash.uniq": "^4.5.0"
			}
		},
		"caniuse-lite": {
			"version": "1.0.30001245",
			"resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001245.tgz",
			"integrity": "sha512-768fM9j1PKXpOCKws6eTo3RHmvTUsG9UrpT4WoREFeZgJBTi4/X9g565azS/rVUGtqb8nt7FjLeF5u4kukERnA==",
			"dev": true
		},
		"capability": {
			"version": "0.2.5",
			"resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
			"integrity": "sha1-Ua2HNT8ZNv/Xfy8hx0YzpN6oiAE="
		},
		"capture-exit": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/capture-exit/-/capture-exit-2.0.0.tgz",
			"integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",
			"dev": true,
			"requires": {
				"rsvp": "^4.8.4"
			}
		},
		"capture-stack-trace": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/capture-stack-trace/-/capture-stack-trace-1.0.1.tgz",
			"integrity": "sha512-mYQLZnx5Qt1JgB1WEiMCf2647plpGeQ2NMR/5L0HNZzGQo4fuSPnK+wjfPnKZV0aiJDgzmWqqkV/g7JD+DW0qw=="
		},
		"cardinal": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz",
			"integrity": "sha1-fMEFXYItISlU0HsIXeolHMe8VQU=",
			"requires": {
				"ansicolors": "~0.3.2",
				"redeyed": "~2.1.0"
			}
		},
		"caseless": {
			"version": "0.12.0",
			"resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
			"integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=",
			"dev": true
		},
		"chalk": {
			"version": "2.4.2",
			"resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
			"integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
			"requires": {
				"ansi-styles": "^3.2.1",
				"escape-string-regexp": "^1.0.5",
				"supports-color": "^5.3.0"
			}
		},
		"char-regex": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz",
			"integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==",
			"dev": true
		},
		"chardet": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
			"integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="
		},
		"checkpoint-store": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/checkpoint-store/-/checkpoint-store-1.1.0.tgz",
			"integrity": "sha1-BOTLUWuRQziTWB5tRgGnjpVS6gY=",
			"dev": true,
			"requires": {
				"functional-red-black-tree": "^1.0.1"
			}
		},
		"chokidar": {
			"version": "3.5.2",
			"resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.5.2.tgz",
			"integrity": "sha512-ekGhOnNVPgT77r4K/U3GDhu+FQ2S8TnK/s2KbIGXi0SZWuwkZ2QNyfWdZW+TVfn84DpEP7rLeCt2UI6bJ8GwbQ==",
			"dev": true,
			"requires": {
				"anymatch": "~3.1.2",
				"braces": "~3.0.2",
				"fsevents": "~2.3.2",
				"glob-parent": "~5.1.2",
				"is-binary-path": "~2.1.0",
				"is-glob": "~4.0.1",
				"normalize-path": "~3.0.0",
				"readdirp": "~3.6.0"
			}
		},
		"chownr": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
			"integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
		},
		"ci-info": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",
			"integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
			"dev": true
		},
		"cids": {
			"version": "0.7.5",
			"resolved": "https://registry.npmjs.org/cids/-/cids-0.7.5.tgz",
			"integrity": "sha512-zT7mPeghoWAu+ppn8+BS1tQ5qGmbMfB4AregnQjA/qHY3GC1m1ptI9GkWNlgeu38r7CuRdXB47uY2XgAYt6QVA==",
			"dev": true,
			"requires": {
				"buffer": "^5.5.0",
				"class-is": "^1.1.0",
				"multibase": "~0.6.0",
				"multicodec": "^1.0.0",
				"multihashes": "~0.4.15"
			},
			"dependencies": {
				"multicodec": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/multicodec/-/multicodec-1.0.4.tgz",
					"integrity": "sha512-NDd7FeS3QamVtbgfvu5h7fd1IlbaC4EQ0/pgU4zqE2vdHCmBGsUa0TiM8/TdSeG6BMPC92OOCf8F1ocE/Wkrrg==",
					"dev": true,
					"requires": {
						"buffer": "^5.6.0",
						"varint": "^5.0.0"
					}
				}
			}
		},
		"cipher-base": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
			"integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.1",
				"safe-buffer": "^5.0.1"
			}
		},
		"cjs-module-lexer": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-0.6.0.tgz",
			"integrity": "sha512-uc2Vix1frTfnuzxxu1Hp4ktSvM3QaI4oXl4ZUqL1wjTu/BGki9TrCWoqLTg/drR1KwAEarXuRFCG2Svr1GxPFw==",
			"dev": true
		},
		"class-is": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/class-is/-/class-is-1.1.0.tgz",
			"integrity": "sha512-rhjH9AG1fvabIDoGRVH587413LPjTZgmDF9fOFCbFJQV4yuocX1mHxxvXI4g3cGwbVY9wAYIoKlg1N79frJKQw==",
			"dev": true
		},
		"class-utils": {
			"version": "0.3.6",
			"resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
			"integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
			"requires": {
				"arr-union": "^3.1.0",
				"define-property": "^0.2.5",
				"isobject": "^3.0.0",
				"static-extend": "^0.1.1"
			},
			"dependencies": {
				"define-property": {
					"version": "0.2.5",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
					"integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
					"requires": {
						"is-descriptor": "^0.1.0"
					}
				}
			}
		},
		"clean-stack": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
			"integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A=="
		},
		"cli-boxes": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-2.2.1.tgz",
			"integrity": "sha512-y4coMcylgSCdVinjiDBuR8PCC2bLjyGTwEmPb9NHR/QaNU6EUOXcTY/s6VjGMD6ENSEaeQYHCY0GNGS5jfMwPw==",
			"dev": true
		},
		"cli-cursor": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
			"integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
			"requires": {
				"restore-cursor": "^3.1.0"
			}
		},
		"cli-progress": {
			"version": "3.9.0",
			"resolved": "https://registry.npmjs.org/cli-progress/-/cli-progress-3.9.0.tgz",
			"integrity": "sha512-g7rLWfhAo/7pF+a/STFH/xPyosaL1zgADhI0OM83hl3c7S43iGvJWEAV2QuDOnQ8i6EMBj/u4+NTd0d5L+4JfA==",
			"requires": {
				"colors": "^1.1.2",
				"string-width": "^4.2.0"
			}
		},
		"cli-spinners": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-1.3.1.tgz",
			"integrity": "sha512-1QL4544moEsDVH9T/l6Cemov/37iv1RtoKf7NJ04A60+4MREXNfx/QvavbH6QoGdsD4N4Mwy49cmaINR/o2mdg==",
			"dev": true
		},
		"cli-table": {
			"version": "0.3.6",
			"resolved": "https://registry.npmjs.org/cli-table/-/cli-table-0.3.6.tgz",
			"integrity": "sha512-ZkNZbnZjKERTY5NwC2SeMeLeifSPq/pubeRoTpdr3WchLlnZg6hEgvHkK5zL7KNFdd9PmHN8lxrENUwI3cE8vQ==",
			"requires": {
				"colors": "1.0.3"
			},
			"dependencies": {
				"colors": {
					"version": "1.0.3",
					"resolved": "https://registry.npmjs.org/colors/-/colors-1.0.3.tgz",
					"integrity": "sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs="
				}
			}
		},
		"cli-ux": {
			"version": "5.6.3",
			"resolved": "https://registry.npmjs.org/cli-ux/-/cli-ux-5.6.3.tgz",
			"integrity": "sha512-/oDU4v8BiDjX2OKcSunGH0iGDiEtj2rZaGyqNuv9IT4CgcSMyVWAMfn0+rEHaOc4n9ka78B0wo1+N1QX89f7mw==",
			"requires": {
				"@oclif/command": "^1.6.0",
				"@oclif/errors": "^1.2.1",
				"@oclif/linewrap": "^1.0.0",
				"@oclif/screen": "^1.0.3",
				"ansi-escapes": "^4.3.0",
				"ansi-styles": "^4.2.0",
				"cardinal": "^2.1.1",
				"chalk": "^4.1.0",
				"clean-stack": "^3.0.0",
				"cli-progress": "^3.4.0",
				"extract-stack": "^2.0.0",
				"fs-extra": "^8.1",
				"hyperlinker": "^1.0.0",
				"indent-string": "^4.0.0",
				"is-wsl": "^2.2.0",
				"js-yaml": "^3.13.1",
				"lodash": "^4.17.11",
				"natural-orderby": "^2.0.1",
				"object-treeify": "^1.1.4",
				"password-prompt": "^1.1.2",
				"semver": "^7.3.2",
				"string-width": "^4.2.0",
				"strip-ansi": "^6.0.0",
				"supports-color": "^8.1.0",
				"supports-hyperlinks": "^2.1.0",
				"tslib": "^2.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.2",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
					"integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					},
					"dependencies": {
						"supports-color": {
							"version": "7.2.0",
							"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
							"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
							"requires": {
								"has-flag": "^4.0.0"
							}
						}
					}
				},
				"clean-stack": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-3.0.1.tgz",
					"integrity": "sha512-lR9wNiMRcVQjSB3a7xXGLuz4cr4wJuuXlaAEbRutGowQTmlp7R72/DOgN21e8jdwblMWl9UOJMJXarX94pzKdg==",
					"requires": {
						"escape-string-regexp": "4.0.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
				},
				"escape-string-regexp": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
					"integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA=="
				},
				"extract-stack": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/extract-stack/-/extract-stack-2.0.0.tgz",
					"integrity": "sha512-AEo4zm+TenK7zQorGK1f9mJ8L14hnTDi2ZQPR+Mub1NX8zimka1mXpV5LpH8x9HoUmFSHZCfLHqWvp0Y4FxxzQ=="
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"supports-color": {
					"version": "8.1.1",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
					"integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
					"requires": {
						"has-flag": "^4.0.0"
					}
				},
				"tslib": {
					"version": "2.3.0",
					"resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
					"integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg=="
				}
			}
		},
		"cli-width": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/cli-width/-/cli-width-3.0.0.tgz",
			"integrity": "sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw=="
		},
		"cliui": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
			"integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
			"dev": true,
			"requires": {
				"string-width": "^4.2.0",
				"strip-ansi": "^6.0.0",
				"wrap-ansi": "^6.2.0"
			}
		},
		"clone": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
			"integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
			"dev": true
		},
		"clone-buffer": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz",
			"integrity": "sha1-4+JbIHrE5wGvch4staFnksrD3Fg="
		},
		"clone-deep": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
			"integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
			"requires": {
				"is-plain-object": "^2.0.4",
				"kind-of": "^6.0.2",
				"shallow-clone": "^3.0.0"
			}
		},
		"clone-response": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
			"integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
			"dev": true,
			"requires": {
				"mimic-response": "^1.0.0"
			}
		},
		"clone-stats": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",
			"integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="
		},
		"cloneable-readable": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.3.tgz",
			"integrity": "sha512-2EF8zTQOxYq70Y4XKtorQupqF0m49MBz2/yf5Bj+MHjvpG3Hy7sImifnqD6UA+TKYxeSV+u6qqQPawN5UvnpKQ==",
			"requires": {
				"inherits": "^2.0.1",
				"process-nextick-args": "^2.0.0",
				"readable-stream": "^2.3.5"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"cmd-shim": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/cmd-shim/-/cmd-shim-4.1.0.tgz",
			"integrity": "sha512-lb9L7EM4I/ZRVuljLPEtUJOP+xiQVknZ4ZMpMgEp4JzNldPb27HU03hi6K1/6CoIuit/Zm/LQXySErFeXxDprw==",
			"dev": true,
			"requires": {
				"mkdirp-infer-owner": "^2.0.0"
			}
		},
		"co": {
			"version": "4.6.0",
			"resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
			"integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
			"dev": true
		},
		"coa": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",
			"integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",
			"dev": true,
			"requires": {
				"@types/q": "^1.5.1",
				"chalk": "^2.4.1",
				"q": "^1.1.2"
			}
		},
		"code-point-at": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
			"integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
		},
		"collect-v8-coverage": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.1.tgz",
			"integrity": "sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWejX64o+yPGxhWSTzfg==",
			"dev": true
		},
		"collection-visit": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
			"integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
			"requires": {
				"map-visit": "^1.0.0",
				"object-visit": "^1.0.0"
			}
		},
		"color": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/color/-/color-3.1.3.tgz",
			"integrity": "sha512-xgXAcTHa2HeFCGLE9Xs/R82hujGtu9Jd9x4NW3T34+OMs7VoPsjwzRczKHvTAHeJwWFwX5j15+MgAppE8ztObQ==",
			"dev": true,
			"requires": {
				"color-convert": "^1.9.1",
				"color-string": "^1.5.4"
			}
		},
		"color-convert": {
			"version": "1.9.3",
			"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
			"integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
			"requires": {
				"color-name": "1.1.3"
			}
		},
		"color-name": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
			"integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
		},
		"color-string": {
			"version": "1.5.5",
			"resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.5.tgz",
			"integrity": "sha512-jgIoum0OfQfq9Whcfc2z/VhCNcmQjWbey6qBX0vqt7YICflUmBCh9E9CiQD5GSJ+Uehixm3NUwHVhqUAWRivZg==",
			"dev": true,
			"requires": {
				"color-name": "^1.0.0",
				"simple-swizzle": "^0.2.2"
			}
		},
		"colorette": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/colorette/-/colorette-1.2.2.tgz",
			"integrity": "sha512-MKGMzyfeuutC/ZJ1cba9NqcNpfeqMUcYmyF1ZFY6/Cn7CNSAKx6a+s48sqLqyAiZuaP2TcqMhoo+dlwFnVxT9w==",
			"dev": true
		},
		"colors": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
			"integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA=="
		},
		"columnify": {
			"version": "1.5.4",
			"resolved": "https://registry.npmjs.org/columnify/-/columnify-1.5.4.tgz",
			"integrity": "sha1-Rzfd8ce2mop8NAVweC6UfuyOeLs=",
			"dev": true,
			"requires": {
				"strip-ansi": "^3.0.0",
				"wcwidth": "^1.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
					"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
					"dev": true
				},
				"strip-ansi": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
					"integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^2.0.0"
					}
				}
			}
		},
		"combined-stream": {
			"version": "1.0.8",
			"resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
			"integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
			"dev": true,
			"requires": {
				"delayed-stream": "~1.0.0"
			}
		},
		"command-exists": {
			"version": "1.2.9",
			"resolved": "https://registry.npmjs.org/command-exists/-/command-exists-1.2.9.tgz",
			"integrity": "sha512-LTQ/SGc+s0Xc0Fu5WaKnR0YiygZkm9eKFvyS+fRsU7/ZWFF8ykFM6Pc9aCVf1+xasOOZpO3BAVgVrKvsqKHV7w==",
			"dev": true
		},
		"commander": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
			"integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
			"dev": true
		},
		"common-tags": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/common-tags/-/common-tags-1.8.0.tgz",
			"integrity": "sha512-6P6g0uetGpW/sdyUy/iQQCbFF0kWVMSIVSyYz7Zgjcgh8mgw8PQzDNZeyZ5DQ2gM7LBoZPHmnjz8rUthkBG5tw=="
		},
		"commondir": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
			"integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs="
		},
		"compare-func": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/compare-func/-/compare-func-2.0.0.tgz",
			"integrity": "sha512-zHig5N+tPWARooBnb0Zx1MFcdfpyJrfTJ3Y5L+IFvUm8rM74hHz66z0gw0x4tijh5CorKkKUCnW82R2vmpeCRA==",
			"dev": true,
			"requires": {
				"array-ify": "^1.0.0",
				"dot-prop": "^5.1.0"
			},
			"dependencies": {
				"dot-prop": {
					"version": "5.3.0",
					"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
					"integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
					"dev": true,
					"requires": {
						"is-obj": "^2.0.0"
					}
				}
			}
		},
		"component-emitter": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
			"integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg=="
		},
		"concat-map": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
			"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
		},
		"concat-stream": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-2.0.0.tgz",
			"integrity": "sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==",
			"dev": true,
			"requires": {
				"buffer-from": "^1.0.0",
				"inherits": "^2.0.3",
				"readable-stream": "^3.0.2",
				"typedarray": "^0.0.6"
			}
		},
		"concurrently": {
			"version": "3.6.1",
			"resolved": "https://registry.npmjs.org/concurrently/-/concurrently-3.6.1.tgz",
			"integrity": "sha512-/+ugz+gwFSEfTGUxn0KHkY+19XPRTXR8+7oUK/HxgiN1n7FjeJmkrbSiXAJfyQ0zORgJYPaenmymwon51YXH9Q==",
			"requires": {
				"chalk": "^2.4.1",
				"commander": "2.6.0",
				"date-fns": "^1.23.0",
				"lodash": "^4.5.1",
				"read-pkg": "^3.0.0",
				"rx": "2.3.24",
				"spawn-command": "^0.0.2-1",
				"supports-color": "^3.2.3",
				"tree-kill": "^1.1.0"
			},
			"dependencies": {
				"commander": {
					"version": "2.6.0",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.6.0.tgz",
					"integrity": "sha1-nfflL7Kgyw+4kFjugMMQQiXzfh0="
				},
				"has-flag": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
					"integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo="
				},
				"load-json-file": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
					"integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^4.0.0",
						"pify": "^3.0.0",
						"strip-bom": "^3.0.0"
					}
				},
				"parse-json": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
					"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
					"requires": {
						"error-ex": "^1.3.1",
						"json-parse-better-errors": "^1.0.1"
					}
				},
				"path-type": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
					"integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
					"requires": {
						"pify": "^3.0.0"
					}
				},
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
				},
				"read-pkg": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
					"integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
					"requires": {
						"load-json-file": "^4.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^3.0.0"
					}
				},
				"strip-bom": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
					"integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="
				},
				"supports-color": {
					"version": "3.2.3",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
					"integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
					"requires": {
						"has-flag": "^1.0.0"
					}
				}
			}
		},
		"config-chain": {
			"version": "1.1.13",
			"resolved": "https://registry.npmjs.org/config-chain/-/config-chain-1.1.13.tgz",
			"integrity": "sha512-qj+f8APARXHrM0hraqXYb2/bOVSV4PvJQlNZ/DVj0QrmNM2q2euizkeuVckQ57J+W0mRH6Hvi+k50M4Jul2VRQ==",
			"dev": true,
			"requires": {
				"ini": "^1.3.4",
				"proto-list": "~1.2.1"
			}
		},
		"configstore": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
			"integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
			"dev": true,
			"requires": {
				"dot-prop": "^5.2.0",
				"graceful-fs": "^4.1.2",
				"make-dir": "^3.0.0",
				"unique-string": "^2.0.0",
				"write-file-atomic": "^3.0.0",
				"xdg-basedir": "^4.0.0"
			},
			"dependencies": {
				"dot-prop": {
					"version": "5.3.0",
					"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
					"integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
					"dev": true,
					"requires": {
						"is-obj": "^2.0.0"
					}
				}
			}
		},
		"console-browserify": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz",
			"integrity": "sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==",
			"dev": true
		},
		"console-control-strings": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
			"integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=",
			"dev": true
		},
		"constants-browserify": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
			"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
			"dev": true
		},
		"content-disposition": {
			"version": "0.5.3",
			"resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
			"integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
			"dev": true,
			"requires": {
				"safe-buffer": "5.1.2"
			},
			"dependencies": {
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				}
			}
		},
		"content-hash": {
			"version": "2.5.2",
			"resolved": "https://registry.npmjs.org/content-hash/-/content-hash-2.5.2.tgz",
			"integrity": "sha512-FvIQKy0S1JaWV10sMsA7TRx8bpU+pqPkhbsfvOJAdjRXvYxEckAwQWGwtRjiaJfh+E0DvcWUGqcdjwMGFjsSdw==",
			"dev": true,
			"requires": {
				"cids": "^0.7.1",
				"multicodec": "^0.5.5",
				"multihashes": "^0.4.15"
			}
		},
		"content-type": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
			"integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
		},
		"conventional-changelog-angular": {
			"version": "5.0.12",
			"resolved": "https://registry.npmjs.org/conventional-changelog-angular/-/conventional-changelog-angular-5.0.12.tgz",
			"integrity": "sha512-5GLsbnkR/7A89RyHLvvoExbiGbd9xKdKqDTrArnPbOqBqG/2wIosu0fHwpeIRI8Tl94MhVNBXcLJZl92ZQ5USw==",
			"dev": true,
			"requires": {
				"compare-func": "^2.0.0",
				"q": "^1.5.1"
			}
		},
		"conventional-changelog-core": {
			"version": "4.2.3",
			"resolved": "https://registry.npmjs.org/conventional-changelog-core/-/conventional-changelog-core-4.2.3.tgz",
			"integrity": "sha512-MwnZjIoMRL3jtPH5GywVNqetGILC7g6RQFvdb8LRU/fA/338JbeWAku3PZ8yQ+mtVRViiISqJlb0sOz0htBZig==",
			"dev": true,
			"requires": {
				"add-stream": "^1.0.0",
				"conventional-changelog-writer": "^5.0.0",
				"conventional-commits-parser": "^3.2.0",
				"dateformat": "^3.0.0",
				"get-pkg-repo": "^4.0.0",
				"git-raw-commits": "^2.0.8",
				"git-remote-origin-url": "^2.0.0",
				"git-semver-tags": "^4.1.1",
				"lodash": "^4.17.15",
				"normalize-package-data": "^3.0.0",
				"q": "^1.5.1",
				"read-pkg": "^3.0.0",
				"read-pkg-up": "^3.0.0",
				"through2": "^4.0.0"
			},
			"dependencies": {
				"find-up": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",
					"integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",
					"dev": true,
					"requires": {
						"locate-path": "^2.0.0"
					}
				},
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"load-json-file": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
					"integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^4.0.0",
						"pify": "^3.0.0",
						"strip-bom": "^3.0.0"
					}
				},
				"locate-path": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",
					"integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",
					"dev": true,
					"requires": {
						"p-locate": "^2.0.0",
						"path-exists": "^3.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"dev": true,
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"p-limit": {
					"version": "1.3.0",
					"resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",
					"integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",
					"dev": true,
					"requires": {
						"p-try": "^1.0.0"
					}
				},
				"p-locate": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",
					"integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",
					"dev": true,
					"requires": {
						"p-limit": "^1.1.0"
					}
				},
				"p-try": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",
					"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
					"dev": true
				},
				"parse-json": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
					"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
					"dev": true,
					"requires": {
						"error-ex": "^1.3.1",
						"json-parse-better-errors": "^1.0.1"
					}
				},
				"path-exists": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
					"integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
					"dev": true
				},
				"path-type": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
					"integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
					"dev": true,
					"requires": {
						"pify": "^3.0.0"
					}
				},
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
					"dev": true
				},
				"read-pkg": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
					"integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
					"dev": true,
					"requires": {
						"load-json-file": "^4.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^3.0.0"
					},
					"dependencies": {
						"hosted-git-info": {
							"version": "2.8.9",
							"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz",
							"integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==",
							"dev": true
						},
						"normalize-package-data": {
							"version": "2.5.0",
							"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
							"integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
							"dev": true,
							"requires": {
								"hosted-git-info": "^2.1.4",
								"resolve": "^1.10.0",
								"semver": "2 || 3 || 4 || 5",
								"validate-npm-package-license": "^3.0.1"
							}
						},
						"semver": {
							"version": "5.7.1",
							"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
							"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
							"dev": true
						}
					}
				},
				"read-pkg-up": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz",
					"integrity": "sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=",
					"dev": true,
					"requires": {
						"find-up": "^2.0.0",
						"read-pkg": "^3.0.0"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"strip-bom": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
					"integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
					"dev": true
				}
			}
		},
		"conventional-changelog-preset-loader": {
			"version": "2.3.4",
			"resolved": "https://registry.npmjs.org/conventional-changelog-preset-loader/-/conventional-changelog-preset-loader-2.3.4.tgz",
			"integrity": "sha512-GEKRWkrSAZeTq5+YjUZOYxdHq+ci4dNwHvpaBC3+ENalzFWuCWa9EZXSuZBpkr72sMdKB+1fyDV4takK1Lf58g==",
			"dev": true
		},
		"conventional-changelog-writer": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/conventional-changelog-writer/-/conventional-changelog-writer-5.0.0.tgz",
			"integrity": "sha512-HnDh9QHLNWfL6E1uHz6krZEQOgm8hN7z/m7tT16xwd802fwgMN0Wqd7AQYVkhpsjDUx/99oo+nGgvKF657XP5g==",
			"dev": true,
			"requires": {
				"conventional-commits-filter": "^2.0.7",
				"dateformat": "^3.0.0",
				"handlebars": "^4.7.6",
				"json-stringify-safe": "^5.0.1",
				"lodash": "^4.17.15",
				"meow": "^8.0.0",
				"semver": "^6.0.0",
				"split": "^1.0.0",
				"through2": "^4.0.0"
			}
		},
		"conventional-commits-filter": {
			"version": "2.0.7",
			"resolved": "https://registry.npmjs.org/conventional-commits-filter/-/conventional-commits-filter-2.0.7.tgz",
			"integrity": "sha512-ASS9SamOP4TbCClsRHxIHXRfcGCnIoQqkvAzCSbZzTFLfcTqJVugB0agRgsEELsqaeWgsXv513eS116wnlSSPA==",
			"dev": true,
			"requires": {
				"lodash.ismatch": "^4.4.0",
				"modify-values": "^1.0.0"
			}
		},
		"conventional-commits-parser": {
			"version": "3.2.1",
			"resolved": "https://registry.npmjs.org/conventional-commits-parser/-/conventional-commits-parser-3.2.1.tgz",
			"integrity": "sha512-OG9kQtmMZBJD/32NEw5IhN5+HnBqVjy03eC+I71I0oQRFA5rOgA4OtPOYG7mz1GkCfCNxn3gKIX8EiHJYuf1cA==",
			"dev": true,
			"requires": {
				"JSONStream": "^1.0.4",
				"is-text-path": "^1.0.1",
				"lodash": "^4.17.15",
				"meow": "^8.0.0",
				"split2": "^3.0.0",
				"through2": "^4.0.0",
				"trim-off-newlines": "^1.0.0"
			}
		},
		"conventional-recommended-bump": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/conventional-recommended-bump/-/conventional-recommended-bump-6.1.0.tgz",
			"integrity": "sha512-uiApbSiNGM/kkdL9GTOLAqC4hbptObFo4wW2QRyHsKciGAfQuLU1ShZ1BIVI/+K2BE/W1AWYQMCXAsv4dyKPaw==",
			"dev": true,
			"requires": {
				"concat-stream": "^2.0.0",
				"conventional-changelog-preset-loader": "^2.3.4",
				"conventional-commits-filter": "^2.0.7",
				"conventional-commits-parser": "^3.2.0",
				"git-raw-commits": "^2.0.8",
				"git-semver-tags": "^4.1.1",
				"meow": "^8.0.0",
				"q": "^1.5.1"
			}
		},
		"convert-source-map": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.8.0.tgz",
			"integrity": "sha512-+OQdjP49zViI/6i7nIJpA8rAl4sV/JdPfU9nZs3VqOwGIgizICvuN2ru6fMd+4llL0tar18UYJXfZ/TWtmhUjA==",
			"dev": true,
			"requires": {
				"safe-buffer": "~5.1.1"
			},
			"dependencies": {
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				}
			}
		},
		"cookie": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
			"integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg==",
			"dev": true
		},
		"cookie-signature": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
			"integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw=",
			"dev": true
		},
		"cookiejar": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/cookiejar/-/cookiejar-2.1.2.tgz",
			"integrity": "sha512-Mw+adcfzPxcPeI+0WlvRrr/3lGVO0bD75SxX6811cxSh1Wbxx7xZBGK1eVtDf6si8rg2lhnUjsVLMFMfbRIuwA==",
			"dev": true
		},
		"copy-descriptor": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
			"integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40="
		},
		"core-js": {
			"version": "2.6.12",
			"resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.12.tgz",
			"integrity": "sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ==",
			"dev": true
		},
		"core-js-compat": {
			"version": "3.15.2",
			"resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.15.2.tgz",
			"integrity": "sha512-Wp+BJVvwopjI+A1EFqm2dwUmWYXrvucmtIB2LgXn/Rb+gWPKYxtmb4GKHGKG/KGF1eK9jfjzT38DITbTOCX/SQ==",
			"dev": true,
			"requires": {
				"browserslist": "^4.16.6",
				"semver": "7.0.0"
			},
			"dependencies": {
				"semver": {
					"version": "7.0.0",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
					"integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
					"dev": true
				}
			}
		},
		"core-util-is": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
			"integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
		},
		"cors": {
			"version": "2.8.5",
			"resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
			"integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
			"dev": true,
			"requires": {
				"object-assign": "^4",
				"vary": "^1"
			}
		},
		"cosmiconfig": {
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-7.0.0.tgz",
			"integrity": "sha512-pondGvTuVYDk++upghXJabWzL6Kxu6f26ljFw64Swq9v6sQPUL3EUlVDV56diOjpCayKihL6hVe8exIACU4XcA==",
			"dev": true,
			"requires": {
				"@types/parse-json": "^4.0.0",
				"import-fresh": "^3.2.1",
				"parse-json": "^5.0.0",
				"path-type": "^4.0.0",
				"yaml": "^1.10.0"
			}
		},
		"cp-file": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/cp-file/-/cp-file-3.2.0.tgz",
			"integrity": "sha1-b4NhYlRiTwrViqSqjQdvAmvn4Yg=",
			"requires": {
				"graceful-fs": "^4.1.2",
				"mkdirp": "^0.5.0",
				"nested-error-stacks": "^1.0.1",
				"object-assign": "^4.0.1",
				"pify": "^2.3.0",
				"pinkie-promise": "^2.0.0",
				"readable-stream": "^2.1.4"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"cpy": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/cpy/-/cpy-4.0.1.tgz",
			"integrity": "sha1-tnJn66LzlgugalphrJQDNCKDNCQ=",
			"requires": {
				"cp-file": "^3.1.0",
				"globby": "^4.0.0",
				"meow": "^3.6.0",
				"nested-error-stacks": "^1.0.0",
				"object-assign": "^4.0.1",
				"pinkie-promise": "^2.0.0"
			},
			"dependencies": {
				"arrify": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
					"integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="
				},
				"camelcase": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
					"integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8="
				},
				"camelcase-keys": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
					"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
					"requires": {
						"camelcase": "^2.0.0",
						"map-obj": "^1.0.0"
					}
				},
				"find-up": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
					"integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
					"requires": {
						"path-exists": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"glob": {
					"version": "6.0.4",
					"resolved": "https://registry.npmjs.org/glob/-/glob-6.0.4.tgz",
					"integrity": "sha1-DwiGD2oVUSey+t1PnOJLGqtuTSI=",
					"requires": {
						"inflight": "^1.0.4",
						"inherits": "2",
						"minimatch": "2 || 3",
						"once": "^1.3.0",
						"path-is-absolute": "^1.0.0"
					}
				},
				"globby": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/globby/-/globby-4.1.0.tgz",
					"integrity": "sha1-CA9UVJ7BuCpsYOYx/ILhIR2+lfg=",
					"requires": {
						"array-union": "^1.0.1",
						"arrify": "^1.0.0",
						"glob": "^6.0.1",
						"object-assign": "^4.0.1",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"indent-string": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
					"integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
					"requires": {
						"repeating": "^2.0.0"
					}
				},
				"load-json-file": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
					"integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^2.2.0",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0",
						"strip-bom": "^2.0.0"
					}
				},
				"map-obj": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
					"integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0="
				},
				"meow": {
					"version": "3.7.0",
					"resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
					"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
					"requires": {
						"camelcase-keys": "^2.0.0",
						"decamelize": "^1.1.2",
						"loud-rejection": "^1.0.0",
						"map-obj": "^1.0.1",
						"minimist": "^1.1.3",
						"normalize-package-data": "^2.3.4",
						"object-assign": "^4.0.1",
						"read-pkg-up": "^1.0.1",
						"redent": "^1.0.0",
						"trim-newlines": "^1.0.0"
					}
				},
				"parse-json": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
					"integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
					"requires": {
						"error-ex": "^1.2.0"
					}
				},
				"path-exists": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
					"integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
					"requires": {
						"pinkie-promise": "^2.0.0"
					}
				},
				"path-type": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
					"integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"read-pkg": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
					"integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
					"requires": {
						"load-json-file": "^1.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^1.0.0"
					}
				},
				"read-pkg-up": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
					"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
					"requires": {
						"find-up": "^1.0.0",
						"read-pkg": "^1.0.0"
					}
				},
				"redent": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
					"integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
					"requires": {
						"indent-string": "^2.1.0",
						"strip-indent": "^1.0.1"
					}
				},
				"strip-bom": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
					"integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
					"requires": {
						"is-utf8": "^0.2.0"
					}
				},
				"strip-indent": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
					"integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
					"requires": {
						"get-stdin": "^4.0.1"
					}
				},
				"trim-newlines": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
					"integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM="
				}
			}
		},
		"cpy-cli": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/cpy-cli/-/cpy-cli-1.0.1.tgz",
			"integrity": "sha1-Z/taSi3sKMqKv/N13kuecfanVhw=",
			"requires": {
				"cpy": "^4.0.0",
				"meow": "^3.6.0"
			},
			"dependencies": {
				"camelcase": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
					"integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8="
				},
				"camelcase-keys": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
					"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
					"requires": {
						"camelcase": "^2.0.0",
						"map-obj": "^1.0.0"
					}
				},
				"find-up": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
					"integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
					"requires": {
						"path-exists": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"indent-string": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
					"integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
					"requires": {
						"repeating": "^2.0.0"
					}
				},
				"load-json-file": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
					"integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^2.2.0",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0",
						"strip-bom": "^2.0.0"
					}
				},
				"map-obj": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
					"integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0="
				},
				"meow": {
					"version": "3.7.0",
					"resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
					"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
					"requires": {
						"camelcase-keys": "^2.0.0",
						"decamelize": "^1.1.2",
						"loud-rejection": "^1.0.0",
						"map-obj": "^1.0.1",
						"minimist": "^1.1.3",
						"normalize-package-data": "^2.3.4",
						"object-assign": "^4.0.1",
						"read-pkg-up": "^1.0.1",
						"redent": "^1.0.0",
						"trim-newlines": "^1.0.0"
					}
				},
				"parse-json": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
					"integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
					"requires": {
						"error-ex": "^1.2.0"
					}
				},
				"path-exists": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
					"integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
					"requires": {
						"pinkie-promise": "^2.0.0"
					}
				},
				"path-type": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
					"integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"read-pkg": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
					"integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
					"requires": {
						"load-json-file": "^1.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^1.0.0"
					}
				},
				"read-pkg-up": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
					"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
					"requires": {
						"find-up": "^1.0.0",
						"read-pkg": "^1.0.0"
					}
				},
				"redent": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
					"integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
					"requires": {
						"indent-string": "^2.1.0",
						"strip-indent": "^1.0.1"
					}
				},
				"strip-bom": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
					"integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
					"requires": {
						"is-utf8": "^0.2.0"
					}
				},
				"strip-indent": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
					"integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
					"requires": {
						"get-stdin": "^4.0.1"
					}
				},
				"trim-newlines": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
					"integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM="
				}
			}
		},
		"crc-32": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.0.tgz",
			"integrity": "sha512-1uBwHxF+Y/4yF5G48fwnKq6QsIXheor3ZLPT80yGBV1oEUwpPojlEhQbWKVw1VwcTQyMGHK1/XMmTjmlsmTTGA==",
			"dev": true,
			"requires": {
				"exit-on-epipe": "~1.0.1",
				"printj": "~1.1.0"
			}
		},
		"create-ecdh": {
			"version": "4.0.4",
			"resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.4.tgz",
			"integrity": "sha512-mf+TCx8wWc9VpuxfP2ht0iSISLZnt0JgWlrOKZiNqyUZWnjIaCIVNQArMHnCZKfEYRg6IM7A+NeJoN8gf/Ws0A==",
			"dev": true,
			"requires": {
				"bn.js": "^4.1.0",
				"elliptic": "^6.5.3"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"create-error-class": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/create-error-class/-/create-error-class-3.0.2.tgz",
			"integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
			"requires": {
				"capture-stack-trace": "^1.0.0"
			}
		},
		"create-hash": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
			"integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
			"dev": true,
			"requires": {
				"cipher-base": "^1.0.1",
				"inherits": "^2.0.1",
				"md5.js": "^1.3.4",
				"ripemd160": "^2.0.1",
				"sha.js": "^2.4.0"
			}
		},
		"create-hmac": {
			"version": "1.1.7",
			"resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
			"integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
			"dev": true,
			"requires": {
				"cipher-base": "^1.0.3",
				"create-hash": "^1.1.0",
				"inherits": "^2.0.1",
				"ripemd160": "^2.0.0",
				"safe-buffer": "^5.0.1",
				"sha.js": "^2.4.8"
			}
		},
		"create-require": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
			"integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
			"dev": true
		},
		"cross-env": {
			"version": "3.2.4",
			"resolved": "https://registry.npmjs.org/cross-env/-/cross-env-3.2.4.tgz",
			"integrity": "sha1-ngWF8neGTtQhznVvgamA/w1piro=",
			"requires": {
				"cross-spawn": "^5.1.0",
				"is-windows": "^1.0.0"
			},
			"dependencies": {
				"cross-spawn": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-5.1.0.tgz",
					"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
					"requires": {
						"lru-cache": "^4.0.1",
						"shebang-command": "^1.2.0",
						"which": "^1.2.9"
					}
				},
				"lru-cache": {
					"version": "4.1.5",
					"resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
					"integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
					"requires": {
						"pseudomap": "^1.0.2",
						"yallist": "^2.1.2"
					}
				},
				"yallist": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
					"integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI="
				}
			}
		},
		"cross-fetch": {
			"version": "2.2.3",
			"resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-2.2.3.tgz",
			"integrity": "sha512-PrWWNH3yL2NYIb/7WF/5vFG3DCQiXDOVf8k3ijatbrtnwNuhMWLC7YF7uqf53tbTFDzHIUD8oITw4Bxt8ST3Nw==",
			"dev": true,
			"requires": {
				"node-fetch": "2.1.2",
				"whatwg-fetch": "2.0.4"
			},
			"dependencies": {
				"node-fetch": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.1.2.tgz",
					"integrity": "sha1-q4hOjn5X44qUR1POxwb3iNF2i7U=",
					"dev": true
				}
			}
		},
		"cross-spawn": {
			"version": "6.0.5",
			"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
			"integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
			"requires": {
				"nice-try": "^1.0.4",
				"path-key": "^2.0.1",
				"semver": "^5.5.0",
				"shebang-command": "^1.2.0",
				"which": "^1.2.9"
			},
			"dependencies": {
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
				}
			}
		},
		"crypto-browserify": {
			"version": "3.12.0",
			"resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
			"integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
			"dev": true,
			"requires": {
				"browserify-cipher": "^1.0.0",
				"browserify-sign": "^4.0.0",
				"create-ecdh": "^4.0.0",
				"create-hash": "^1.1.0",
				"create-hmac": "^1.1.0",
				"diffie-hellman": "^5.0.0",
				"inherits": "^2.0.1",
				"pbkdf2": "^3.0.3",
				"public-encrypt": "^4.0.0",
				"randombytes": "^2.0.0",
				"randomfill": "^1.0.3"
			}
		},
		"crypto-random-string": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
			"integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
			"dev": true
		},
		"css-color-names": {
			"version": "0.0.4",
			"resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",
			"integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA=",
			"dev": true
		},
		"css-declaration-sorter": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",
			"integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.1",
				"timsort": "^0.3.0"
			}
		},
		"css-modules-loader-core": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/css-modules-loader-core/-/css-modules-loader-core-1.1.0.tgz",
			"integrity": "sha1-WQhmgpShvs0mGuCkziGwtVHyHRY=",
			"dev": true,
			"requires": {
				"icss-replace-symbols": "1.1.0",
				"postcss": "6.0.1",
				"postcss-modules-extract-imports": "1.1.0",
				"postcss-modules-local-by-default": "1.2.0",
				"postcss-modules-scope": "1.1.0",
				"postcss-modules-values": "1.3.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
					"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
					"dev": true
				},
				"ansi-styles": {
					"version": "2.2.1",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
					"integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
					"dev": true
				},
				"chalk": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
					"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
					"dev": true,
					"requires": {
						"ansi-styles": "^2.2.1",
						"escape-string-regexp": "^1.0.2",
						"has-ansi": "^2.0.0",
						"strip-ansi": "^3.0.0",
						"supports-color": "^2.0.0"
					},
					"dependencies": {
						"supports-color": {
							"version": "2.0.0",
							"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
							"integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
							"dev": true
						}
					}
				},
				"has-flag": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
					"integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
					"dev": true
				},
				"postcss": {
					"version": "6.0.1",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.1.tgz",
					"integrity": "sha1-AA29H47vIXqjaLmiEsX8QLKo8/I=",
					"dev": true,
					"requires": {
						"chalk": "^1.1.3",
						"source-map": "^0.5.6",
						"supports-color": "^3.2.3"
					}
				},
				"strip-ansi": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
					"integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^2.0.0"
					}
				},
				"supports-color": {
					"version": "3.2.3",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
					"integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
					"dev": true,
					"requires": {
						"has-flag": "^1.0.0"
					}
				}
			}
		},
		"css-select": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/css-select/-/css-select-2.1.0.tgz",
			"integrity": "sha512-Dqk7LQKpwLoH3VovzZnkzegqNSuAziQyNZUcrdDM401iY+R5NkGBXGmtO05/yaXQziALuPogeG0b7UAgjnTJTQ==",
			"dev": true,
			"requires": {
				"boolbase": "^1.0.0",
				"css-what": "^3.2.1",
				"domutils": "^1.7.0",
				"nth-check": "^1.0.2"
			}
		},
		"css-select-base-adapter": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",
			"integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w==",
			"dev": true
		},
		"css-selector-tokenizer": {
			"version": "0.7.3",
			"resolved": "https://registry.npmjs.org/css-selector-tokenizer/-/css-selector-tokenizer-0.7.3.tgz",
			"integrity": "sha512-jWQv3oCEL5kMErj4wRnK/OPoBi0D+P1FR2cDCKYPaMeD2eW3/mttav8HT4hT1CKopiJI/psEULjkClhvJo4Lvg==",
			"dev": true,
			"requires": {
				"cssesc": "^3.0.0",
				"fastparse": "^1.1.2"
			}
		},
		"css-tree": {
			"version": "1.0.0-alpha.37",
			"resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.37.tgz",
			"integrity": "sha512-DMxWJg0rnz7UgxKT0Q1HU/L9BeJI0M6ksor0OgqOnF+aRCDWg/N2641HmVyU9KVIu0OVVWOb2IpC9A+BJRnejg==",
			"dev": true,
			"requires": {
				"mdn-data": "2.0.4",
				"source-map": "^0.6.1"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"css-what": {
			"version": "3.4.2",
			"resolved": "https://registry.npmjs.org/css-what/-/css-what-3.4.2.tgz",
			"integrity": "sha512-ACUm3L0/jiZTqfzRM3Hi9Q8eZqd6IK37mMWPLz9PJxkLWllYeRf+EHUSHYEtFop2Eqytaq1FizFVh7XfBnXCDQ==",
			"dev": true
		},
		"cssesc": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
			"integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
			"dev": true
		},
		"cssnano": {
			"version": "4.1.11",
			"resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.11.tgz",
			"integrity": "sha512-6gZm2htn7xIPJOHY824ERgj8cNPgPxyCSnkXc4v7YvNW+TdVfzgngHcEhy/8D11kUWRUMbke+tC+AUcUsnMz2g==",
			"dev": true,
			"requires": {
				"cosmiconfig": "^5.0.0",
				"cssnano-preset-default": "^4.0.8",
				"is-resolvable": "^1.0.0",
				"postcss": "^7.0.0"
			},
			"dependencies": {
				"cosmiconfig": {
					"version": "5.2.1",
					"resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.1.tgz",
					"integrity": "sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==",
					"dev": true,
					"requires": {
						"import-fresh": "^2.0.0",
						"is-directory": "^0.3.1",
						"js-yaml": "^3.13.1",
						"parse-json": "^4.0.0"
					}
				},
				"import-fresh": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",
					"integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",
					"dev": true,
					"requires": {
						"caller-path": "^2.0.0",
						"resolve-from": "^3.0.0"
					}
				},
				"parse-json": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
					"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
					"dev": true,
					"requires": {
						"error-ex": "^1.3.1",
						"json-parse-better-errors": "^1.0.1"
					}
				},
				"resolve-from": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
					"integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=",
					"dev": true
				}
			}
		},
		"cssnano-preset-default": {
			"version": "4.0.8",
			"resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.8.tgz",
			"integrity": "sha512-LdAyHuq+VRyeVREFmuxUZR1TXjQm8QQU/ktoo/x7bz+SdOge1YKc5eMN6pRW7YWBmyq59CqYba1dJ5cUukEjLQ==",
			"dev": true,
			"requires": {
				"css-declaration-sorter": "^4.0.1",
				"cssnano-util-raw-cache": "^4.0.1",
				"postcss": "^7.0.0",
				"postcss-calc": "^7.0.1",
				"postcss-colormin": "^4.0.3",
				"postcss-convert-values": "^4.0.1",
				"postcss-discard-comments": "^4.0.2",
				"postcss-discard-duplicates": "^4.0.2",
				"postcss-discard-empty": "^4.0.1",
				"postcss-discard-overridden": "^4.0.1",
				"postcss-merge-longhand": "^4.0.11",
				"postcss-merge-rules": "^4.0.3",
				"postcss-minify-font-values": "^4.0.2",
				"postcss-minify-gradients": "^4.0.2",
				"postcss-minify-params": "^4.0.2",
				"postcss-minify-selectors": "^4.0.2",
				"postcss-normalize-charset": "^4.0.1",
				"postcss-normalize-display-values": "^4.0.2",
				"postcss-normalize-positions": "^4.0.2",
				"postcss-normalize-repeat-style": "^4.0.2",
				"postcss-normalize-string": "^4.0.2",
				"postcss-normalize-timing-functions": "^4.0.2",
				"postcss-normalize-unicode": "^4.0.1",
				"postcss-normalize-url": "^4.0.1",
				"postcss-normalize-whitespace": "^4.0.2",
				"postcss-ordered-values": "^4.1.2",
				"postcss-reduce-initial": "^4.0.3",
				"postcss-reduce-transforms": "^4.0.2",
				"postcss-svgo": "^4.0.3",
				"postcss-unique-selectors": "^4.0.1"
			}
		},
		"cssnano-util-get-arguments": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",
			"integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8=",
			"dev": true
		},
		"cssnano-util-get-match": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",
			"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0=",
			"dev": true
		},
		"cssnano-util-raw-cache": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",
			"integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"cssnano-util-same-parent": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",
			"integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q==",
			"dev": true
		},
		"csso": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/csso/-/csso-4.2.0.tgz",
			"integrity": "sha512-wvlcdIbf6pwKEk7vHj8/Bkc0B4ylXZruLvOgs9doS5eOsOpuodOV2zJChSpkp+pRpYQLQMeF04nr3Z68Sta9jA==",
			"dev": true,
			"requires": {
				"css-tree": "^1.1.2"
			},
			"dependencies": {
				"css-tree": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.1.3.tgz",
					"integrity": "sha512-tRpdppF7TRazZrjJ6v3stzv93qxRcSsFmW6cX0Zm2NVKpxE1WV1HblnghVv9TreireHkqI/VDEsfolRF1p6y7Q==",
					"dev": true,
					"requires": {
						"mdn-data": "2.0.14",
						"source-map": "^0.6.1"
					}
				},
				"mdn-data": {
					"version": "2.0.14",
					"resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.14.tgz",
					"integrity": "sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"cssom": {
			"version": "0.4.4",
			"resolved": "https://registry.npmjs.org/cssom/-/cssom-0.4.4.tgz",
			"integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR/NS6otuzveI7+7BBq3SjBS2mw==",
			"dev": true
		},
		"cssstyle": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-2.3.0.tgz",
			"integrity": "sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4n1lDStOtj7FKycP71A==",
			"dev": true,
			"requires": {
				"cssom": "~0.3.6"
			},
			"dependencies": {
				"cssom": {
					"version": "0.3.8",
					"resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
					"integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
					"dev": true
				}
			}
		},
		"csstype": {
			"version": "3.0.8",
			"resolved": "https://registry.npmjs.org/csstype/-/csstype-3.0.8.tgz",
			"integrity": "sha512-jXKhWqXPmlUeoQnF/EhTtTl4C9SnrxSH/jZUih3jmO6lBKr99rP3/+FmrMj4EFpOXzMtXHAZkd3x0E6h6Fgflw==",
			"dev": true
		},
		"currently-unhandled": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz",
			"integrity": "sha1-mI3zP+qxke95mmE2nddsF635V+o=",
			"requires": {
				"array-find-index": "^1.0.1"
			}
		},
		"d": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
			"integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
			"dev": true,
			"requires": {
				"es5-ext": "^0.10.50",
				"type": "^1.0.1"
			}
		},
		"dargs": {
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/dargs/-/dargs-7.0.0.tgz",
			"integrity": "sha512-2iy1EkLdlBzQGvbweYRFxmFath8+K7+AKB0TlhHWkNuH+TmovaMH/Wp7V7R4u7f4SnX3OgLsU9t1NI9ioDnUpg==",
			"dev": true
		},
		"dashdash": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
			"integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
			"dev": true,
			"requires": {
				"assert-plus": "^1.0.0"
			}
		},
		"data-urls": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/data-urls/-/data-urls-2.0.0.tgz",
			"integrity": "sha512-X5eWTSXO/BJmpdIKCRuKUgSCgAN0OwliVK3yPKbwIWU1Tdw5BRajxlzMidvh+gwko9AfQ9zIj52pzF91Q3YAvQ==",
			"dev": true,
			"requires": {
				"abab": "^2.0.3",
				"whatwg-mimetype": "^2.3.0",
				"whatwg-url": "^8.0.0"
			}
		},
		"date-fns": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/date-fns/-/date-fns-1.30.1.tgz",
			"integrity": "sha512-hBSVCvSmWC+QypYObzwGOd9wqdDpOt+0wl0KbU+R+uuZBS1jN8VsD1ss3irQDknRj5NvxiTF6oj/nDRnN/UQNw=="
		},
		"dateformat": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/dateformat/-/dateformat-3.0.3.tgz",
			"integrity": "sha512-jyCETtSl3VMZMWeRo7iY1FL19ges1t55hMo5yaam4Jrsm5EPL89UQkoQRyiI+Yf4k8r2ZpdngkV8hr1lIdjb3Q=="
		},
		"deasync": {
			"version": "0.1.21",
			"resolved": "https://registry.npmjs.org/deasync/-/deasync-0.1.21.tgz",
			"integrity": "sha512-kUmM8Y+PZpMpQ+B4AuOW9k2Pfx/mSupJtxOsLzmnHY2WqZUYRFccFn2RhzPAqt3Xb+sorK/badW2D4zNzqZz5w==",
			"dev": true,
			"requires": {
				"bindings": "^1.5.0",
				"node-addon-api": "^1.7.1"
			},
			"dependencies": {
				"node-addon-api": {
					"version": "1.7.2",
					"resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-1.7.2.tgz",
					"integrity": "sha512-ibPK3iA+vaY1eEjESkQkM0BbCqFOaZMiXRTtdB0u7b4djtY6JnsjvPdUHVMg6xQt3B8fpTTWHI9A+ADjM9frzg==",
					"dev": true
				}
			}
		},
		"debug": {
			"version": "4.3.2",
			"resolved": "https://registry.npmjs.org/debug/-/debug-4.3.2.tgz",
			"integrity": "sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==",
			"requires": {
				"ms": "2.1.2"
			}
		},
		"debuglog": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz",
			"integrity": "sha1-qiT/uaw9+aI1GDfPstJ5NgzXhJI=",
			"dev": true
		},
		"decamelize": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
			"integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="
		},
		"decamelize-keys": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.0.tgz",
			"integrity": "sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=",
			"dev": true,
			"requires": {
				"decamelize": "^1.1.0",
				"map-obj": "^1.0.0"
			},
			"dependencies": {
				"map-obj": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
					"integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=",
					"dev": true
				}
			}
		},
		"decimal.js": {
			"version": "10.3.1",
			"resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.3.1.tgz",
			"integrity": "sha512-V0pfhfr8suzyPGOx3nmq4aHqabehUZn6Ch9kyFpV79TGDTWFmHqUqXdabR7QHqxzrYolF4+tVmJhUG4OURg5dQ==",
			"dev": true
		},
		"decode-uri-component": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
			"integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="
		},
		"decompress-response": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
			"integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
			"requires": {
				"mimic-response": "^1.0.0"
			}
		},
		"dedent": {
			"version": "0.7.0",
			"resolved": "https://registry.npmjs.org/dedent/-/dedent-0.7.0.tgz",
			"integrity": "sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw=",
			"dev": true
		},
		"deep-extend": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
			"integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA=="
		},
		"deep-is": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
			"integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
			"dev": true
		},
		"deepmerge": {
			"version": "4.2.2",
			"resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz",
			"integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==",
			"dev": true
		},
		"defaults": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
			"integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
			"dev": true,
			"requires": {
				"clone": "^1.0.2"
			}
		},
		"defer-to-connect": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
			"integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==",
			"dev": true
		},
		"deferred-leveldown": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/deferred-leveldown/-/deferred-leveldown-1.2.2.tgz",
			"integrity": "sha512-uukrWD2bguRtXilKt6cAWKyoXrTSMo5m7crUdLfWQmu8kIm88w3QZoUL+6nhpfKVmhHANER6Re3sKoNoZ3IKMA==",
			"dev": true,
			"requires": {
				"abstract-leveldown": "~2.6.0"
			}
		},
		"define-properties": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
			"integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
			"dev": true,
			"requires": {
				"object-keys": "^1.0.12"
			}
		},
		"define-property": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
			"integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
			"requires": {
				"is-descriptor": "^1.0.2",
				"isobject": "^3.0.1"
			},
			"dependencies": {
				"is-accessor-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
					"integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-data-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
					"integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-descriptor": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
					"integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
					"requires": {
						"is-accessor-descriptor": "^1.0.0",
						"is-data-descriptor": "^1.0.0",
						"kind-of": "^6.0.2"
					}
				}
			}
		},
		"delayed-stream": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
			"integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
			"dev": true
		},
		"delegates": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
			"integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=",
			"dev": true
		},
		"depd": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
			"integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
		},
		"deprecation": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/deprecation/-/deprecation-2.3.1.tgz",
			"integrity": "sha512-xmHIy4F3scKVwMsQ4WnVaS8bHOx0DmVwRywosKhaILI0ywMDWPtBSku2HNxRvF7jtwDRsoEwYQSfbxj8b7RlJQ==",
			"dev": true
		},
		"des.js": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz",
			"integrity": "sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.1",
				"minimalistic-assert": "^1.0.0"
			}
		},
		"destroy": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
			"integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=",
			"dev": true
		},
		"detect-conflict": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/detect-conflict/-/detect-conflict-1.0.1.tgz",
			"integrity": "sha1-CIZXpmqWHAUBnbfEIwiDsca0F24="
		},
		"detect-indent": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-5.0.0.tgz",
			"integrity": "sha1-OHHMCmoALow+Wzz38zYmRnXwa50=",
			"dev": true
		},
		"detect-libc": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
			"integrity": "sha1-+hN8S9aY7fVc1c0CrFWfkaTEups=",
			"dev": true,
			"optional": true
		},
		"detect-newline": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz",
			"integrity": "sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
			"dev": true
		},
		"detect-node": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.1.0.tgz",
			"integrity": "sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==",
			"dev": true
		},
		"dezalgo": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.3.tgz",
			"integrity": "sha1-f3Qt4Gb8dIvI24IFad3c5Jvw1FY=",
			"dev": true,
			"requires": {
				"asap": "^2.0.0",
				"wrappy": "1"
			}
		},
		"diff": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
			"integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
			"dev": true
		},
		"diff-sequences": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-26.6.2.tgz",
			"integrity": "sha512-Mv/TDa3nZ9sbc5soK+OoA74BsS3mL37yixCvUAQkiuA4Wz6YtwP/K47n2rv2ovzHZvoiQeA5FTQOschKkEwB0Q==",
			"dev": true
		},
		"diffie-hellman": {
			"version": "5.0.3",
			"resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
			"integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
			"dev": true,
			"requires": {
				"bn.js": "^4.1.0",
				"miller-rabin": "^4.0.0",
				"randombytes": "^2.0.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"dir-glob": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
			"integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
			"requires": {
				"path-type": "^4.0.0"
			}
		},
		"dom-serializer": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
			"integrity": "sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==",
			"dev": true,
			"requires": {
				"domelementtype": "^2.0.1",
				"entities": "^2.0.0"
			},
			"dependencies": {
				"domelementtype": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.2.0.tgz",
					"integrity": "sha512-DtBMo82pv1dFtUmHyr48beiuq792Sxohr+8Hm9zoxklYPfa6n0Z3Byjj2IV7bmr2IyqClnqEQhfgHJJ5QF0R5A==",
					"dev": true
				}
			}
		},
		"dom-walk": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
			"integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w==",
			"dev": true
		},
		"domain-browser": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",
			"integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==",
			"dev": true
		},
		"domelementtype": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
			"integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==",
			"dev": true
		},
		"domexception": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/domexception/-/domexception-2.0.1.tgz",
			"integrity": "sha512-yxJ2mFy/sibVQlu5qHjOkf9J3K6zgmCxgJ94u2EdvDOV09H+32LtRswEcUsmUWN72pVLOEnTSRaIVVzVQgS0dg==",
			"dev": true,
			"requires": {
				"webidl-conversions": "^5.0.0"
			},
			"dependencies": {
				"webidl-conversions": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-5.0.0.tgz",
					"integrity": "sha512-VlZwKPCkYKxQgeSbH5EyngOmRp7Ww7I9rQLERETtf5ofd9pGeswWiOtogpEO850jziPRarreGxn5QIiTqpb2wA==",
					"dev": true
				}
			}
		},
		"domhandler": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/domhandler/-/domhandler-4.2.0.tgz",
			"integrity": "sha512-zk7sgt970kzPks2Bf+dwT/PLzghLnsivb9CcxkvR8Mzr66Olr0Ofd8neSbglHJHaHa2MadfoSdNlKYAaafmWfA==",
			"dev": true,
			"requires": {
				"domelementtype": "^2.2.0"
			},
			"dependencies": {
				"domelementtype": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.2.0.tgz",
					"integrity": "sha512-DtBMo82pv1dFtUmHyr48beiuq792Sxohr+8Hm9zoxklYPfa6n0Z3Byjj2IV7bmr2IyqClnqEQhfgHJJ5QF0R5A==",
					"dev": true
				}
			}
		},
		"domutils": {
			"version": "1.7.0",
			"resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
			"integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
			"dev": true,
			"requires": {
				"dom-serializer": "0",
				"domelementtype": "1"
			}
		},
		"dot-prop": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-6.0.1.tgz",
			"integrity": "sha512-tE7ztYzXHIeyvc7N+hR3oi7FIbf/NIjVP9hmAt3yMXzrQ072/fpjGLx2GxNxGxUl5V73MEqYzioOMoVhGMJ5cA==",
			"dev": true,
			"requires": {
				"is-obj": "^2.0.0"
			}
		},
		"dotenv": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/dotenv/-/dotenv-5.0.1.tgz",
			"integrity": "sha512-4As8uPrjfwb7VXC+WnLCbXK7y+Ueb2B3zgNCePYfhxS1PYeaO1YTeplffTEcbfLhvFNGLAz90VvJs9yomG7bow==",
			"dev": true
		},
		"dotenv-expand": {
			"version": "5.1.0",
			"resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-5.1.0.tgz",
			"integrity": "sha512-YXQl1DSa4/PQyRfgrv6aoNjhasp/p4qs9FjJ4q4cQk+8m4r6k4ZSiEyytKG8f8W9gi8WsQtIObNmKd+tMzNTmA==",
			"dev": true
		},
		"download-stats": {
			"version": "0.3.4",
			"resolved": "https://registry.npmjs.org/download-stats/-/download-stats-0.3.4.tgz",
			"integrity": "sha512-ic2BigbyUWx7/CBbsfGjf71zUNZB4edBGC3oRliSzsoNmvyVx3Ycfp1w3vp2Y78Ee0eIIkjIEO5KzW0zThDGaA==",
			"requires": {
				"JSONStream": "^1.2.1",
				"lazy-cache": "^2.0.1",
				"moment": "^2.15.1"
			}
		},
		"drbg.js": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/drbg.js/-/drbg.js-1.0.1.tgz",
			"integrity": "sha1-Pja2xCs3BDgjzbwzLVjzHiRFSAs=",
			"dev": true,
			"optional": true,
			"requires": {
				"browserify-aes": "^1.0.6",
				"create-hash": "^1.1.2",
				"create-hmac": "^1.1.4"
			}
		},
		"duplexer": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz",
			"integrity": "sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==",
			"dev": true
		},
		"duplexer2": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.1.4.tgz",
			"integrity": "sha1-ixLauHjA1p4+eJEFFmKjL8a93ME=",
			"dev": true,
			"requires": {
				"readable-stream": "^2.0.2"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"duplexer3": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
			"integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI="
		},
		"ecc-jsbn": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
			"integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
			"dev": true,
			"requires": {
				"jsbn": "~0.1.0",
				"safer-buffer": "^2.1.0"
			}
		},
		"editions": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/editions/-/editions-2.3.1.tgz",
			"integrity": "sha512-ptGvkwTvGdGfC0hfhKg0MT+TRLRKGtUiWGBInxOm5pz7ssADezahjCUaYuZ8Dr+C05FW0AECIIPt4WBxVINEhA==",
			"requires": {
				"errlop": "^2.0.0",
				"semver": "^6.3.0"
			}
		},
		"ee-first": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
			"integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=",
			"dev": true
		},
		"ejs": {
			"version": "2.7.4",
			"resolved": "https://registry.npmjs.org/ejs/-/ejs-2.7.4.tgz",
			"integrity": "sha512-7vmuyh5+kuUyJKePhQfRQBhXV5Ce+RnaeeQArKu1EAMpL3WbgMt5WG6uQZpEVvYSSsxMXRKOewtDk9RaTKXRlA=="
		},
		"electron-to-chromium": {
			"version": "1.3.778",
			"resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.778.tgz",
			"integrity": "sha512-Lw04qJaPtWdq0d7qKHJTgkam+FhFi3hm/scf1EyqJWdjO3ZIGUJhNmZJRXWb7yb/bRYXQyVGSpa9RqVpjjWMQw==",
			"dev": true
		},
		"elliptic": {
			"version": "6.5.4",
			"resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz",
			"integrity": "sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.9",
				"brorand": "^1.1.0",
				"hash.js": "^1.0.0",
				"hmac-drbg": "^1.0.1",
				"inherits": "^2.0.4",
				"minimalistic-assert": "^1.0.1",
				"minimalistic-crypto-utils": "^1.0.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"email-addresses": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/email-addresses/-/email-addresses-3.1.0.tgz",
			"integrity": "sha512-k0/r7GrWVL32kZlGwfPNgB2Y/mMXVTq/decgLczm/j34whdaspNrZO8CnXPf1laaHxI6ptUlsnAxN+UAPw+fzg==",
			"dev": true
		},
		"emittery": {
			"version": "0.7.2",
			"resolved": "https://registry.npmjs.org/emittery/-/emittery-0.7.2.tgz",
			"integrity": "sha512-A8OG5SR/ij3SsJdWDJdkkSYUjQdCUx6APQXem0SaEePBSRg4eymGYwBkKo1Y6DU+af/Jn2dBQqDBvjnr9Vi8nQ==",
			"dev": true
		},
		"emoji-regex": {
			"version": "8.0.0",
			"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
			"integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
		},
		"encodeurl": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
			"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
			"dev": true
		},
		"encoding": {
			"version": "0.1.13",
			"resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz",
			"integrity": "sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==",
			"dev": true,
			"requires": {
				"iconv-lite": "^0.6.2"
			},
			"dependencies": {
				"iconv-lite": {
					"version": "0.6.3",
					"resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
					"integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
					"dev": true,
					"requires": {
						"safer-buffer": ">= 2.1.2 < 3.0.0"
					}
				}
			}
		},
		"end-of-stream": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
			"integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
			"requires": {
				"once": "^1.4.0"
			}
		},
		"entities": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/entities/-/entities-2.2.0.tgz",
			"integrity": "sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==",
			"dev": true
		},
		"env-cmd": {
			"version": "10.1.0",
			"resolved": "https://registry.npmjs.org/env-cmd/-/env-cmd-10.1.0.tgz",
			"integrity": "sha512-mMdWTT9XKN7yNth/6N6g2GuKuJTsKMDHlQFUDacb/heQRRWOTIZ42t1rMHnQu4jYxU1ajdTeJM+9eEETlqToMA==",
			"dev": true,
			"requires": {
				"commander": "^4.0.0",
				"cross-spawn": "^7.0.0"
			},
			"dependencies": {
				"cross-spawn": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
					"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
					"dev": true,
					"requires": {
						"path-key": "^3.1.0",
						"shebang-command": "^2.0.0",
						"which": "^2.0.1"
					}
				},
				"path-key": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
					"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
					"dev": true
				},
				"shebang-command": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
					"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
					"dev": true,
					"requires": {
						"shebang-regex": "^3.0.0"
					}
				},
				"shebang-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
					"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
					"dev": true
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"env-paths": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
			"integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==",
			"dev": true
		},
		"envinfo": {
			"version": "7.8.1",
			"resolved": "https://registry.npmjs.org/envinfo/-/envinfo-7.8.1.tgz",
			"integrity": "sha512-/o+BXHmB7ocbHEAs6F2EnG0ogybVVUdkRunTT2glZU9XAaGmhqskrvKwqXuDfNjEO0LZKWdejEEpnq8aM0tOaw==",
			"dev": true
		},
		"err-code": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/err-code/-/err-code-2.0.3.tgz",
			"integrity": "sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==",
			"dev": true
		},
		"errlop": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/errlop/-/errlop-2.2.0.tgz",
			"integrity": "sha512-e64Qj9+4aZzjzzFpZC7p5kmm/ccCrbLhAJplhsDXQFs87XTsXwOpH4s1Io2s90Tau/8r2j9f4l/thhDevRjzxw=="
		},
		"errno": {
			"version": "0.1.8",
			"resolved": "https://registry.npmjs.org/errno/-/errno-0.1.8.tgz",
			"integrity": "sha512-dJ6oBr5SQ1VSd9qkk7ByRgb/1SH4JZjCHSW/mr63/QcXO9zLVxvJ6Oy13nio03rxpSnVDDjFor75SjVeZWPW/A==",
			"dev": true,
			"requires": {
				"prr": "~1.0.1"
			}
		},
		"error": {
			"version": "7.2.1",
			"resolved": "https://registry.npmjs.org/error/-/error-7.2.1.tgz",
			"integrity": "sha512-fo9HBvWnx3NGUKMvMwB/CBCMMrfEJgbDTVDEkPygA3Bdd3lM1OyCd+rbQ8BwnpF6GdVeOLDNmyL4N5Bg80ZvdA==",
			"requires": {
				"string-template": "~0.2.1"
			}
		},
		"error-ex": {
			"version": "1.3.2",
			"resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
			"integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
			"requires": {
				"is-arrayish": "^0.2.1"
			}
		},
		"error-polyfill": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.2.tgz",
			"integrity": "sha512-8uhnXlJuhFkmIfhw2tAHtWQGpXcw5rrc0dhuY3bhn8tBHvh6l0oL9VJvR2suqx9eltglKKhVPv8luPQy+UxLTA==",
			"requires": {
				"capability": "^0.2.5",
				"o3": "^1.0.3",
				"u3": "^0.1.0"
			}
		},
		"es-abstract": {
			"version": "1.18.3",
			"resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.18.3.tgz",
			"integrity": "sha512-nQIr12dxV7SSxE6r6f1l3DtAeEYdsGpps13dR0TwJg1S8gyp4ZPgy3FZcHBgbiQqnoqSTb+oC+kO4UQ0C/J8vw==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"es-to-primitive": "^1.2.1",
				"function-bind": "^1.1.1",
				"get-intrinsic": "^1.1.1",
				"has": "^1.0.3",
				"has-symbols": "^1.0.2",
				"is-callable": "^1.2.3",
				"is-negative-zero": "^2.0.1",
				"is-regex": "^1.1.3",
				"is-string": "^1.0.6",
				"object-inspect": "^1.10.3",
				"object-keys": "^1.1.1",
				"object.assign": "^4.1.2",
				"string.prototype.trimend": "^1.0.4",
				"string.prototype.trimstart": "^1.0.4",
				"unbox-primitive": "^1.0.1"
			}
		},
		"es-to-primitive": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
			"integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
			"dev": true,
			"requires": {
				"is-callable": "^1.1.4",
				"is-date-object": "^1.0.1",
				"is-symbol": "^1.0.2"
			}
		},
		"es5-ext": {
			"version": "0.10.53",
			"resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.53.tgz",
			"integrity": "sha512-Xs2Stw6NiNHWypzRTY1MtaG/uJlwCk8kH81920ma8mvN8Xq1gsfhZvpkImLQArw8AHnv8MT2I45J3c0R8slE+Q==",
			"dev": true,
			"requires": {
				"es6-iterator": "~2.0.3",
				"es6-symbol": "~3.1.3",
				"next-tick": "~1.0.0"
			}
		},
		"es6-iterator": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
			"integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
			"dev": true,
			"requires": {
				"d": "1",
				"es5-ext": "^0.10.35",
				"es6-symbol": "^3.1.1"
			}
		},
		"es6-promise": {
			"version": "4.2.8",
			"resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
			"integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w==",
			"dev": true
		},
		"es6-symbol": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
			"integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
			"dev": true,
			"requires": {
				"d": "^1.0.1",
				"ext": "^1.1.2"
			}
		},
		"escalade": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
			"integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
			"dev": true
		},
		"escape-goat": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
			"integrity": "sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==",
			"dev": true
		},
		"escape-html": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
			"integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
			"dev": true
		},
		"escape-string-regexp": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
			"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
		},
		"escodegen": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/escodegen/-/escodegen-2.0.0.tgz",
			"integrity": "sha512-mmHKys/C8BFUGI+MAWNcSYoORYLMdPzjrknd2Vc+bUsjN5bXcr8EhrNB+UTqfL1y3I9c4fw2ihgtMPQLBRiQxw==",
			"dev": true,
			"requires": {
				"esprima": "^4.0.1",
				"estraverse": "^5.2.0",
				"esutils": "^2.0.2",
				"optionator": "^0.8.1",
				"source-map": "~0.6.1"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true,
					"optional": true
				}
			}
		},
		"esprima": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
			"integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="
		},
		"estraverse": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz",
			"integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
			"dev": true
		},
		"esutils": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
			"integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
			"dev": true
		},
		"etag": {
			"version": "1.8.1",
			"resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
			"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
			"dev": true
		},
		"eth-block-tracker": {
			"version": "4.4.3",
			"resolved": "https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-4.4.3.tgz",
			"integrity": "sha512-A8tG4Z4iNg4mw5tP1Vung9N9IjgMNqpiMoJ/FouSFwNCGHv2X0mmOYwtQOJzki6XN7r7Tyo01S29p7b224I4jw==",
			"dev": true,
			"requires": {
				"@babel/plugin-transform-runtime": "^7.5.5",
				"@babel/runtime": "^7.5.5",
				"eth-query": "^2.1.0",
				"json-rpc-random-id": "^1.0.1",
				"pify": "^3.0.0",
				"safe-event-emitter": "^1.0.1"
			},
			"dependencies": {
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
					"dev": true
				}
			}
		},
		"eth-ens-namehash": {
			"version": "2.0.8",
			"resolved": "https://registry.npmjs.org/eth-ens-namehash/-/eth-ens-namehash-2.0.8.tgz",
			"integrity": "sha1-IprEbsqG1S4MmR58sq74P/D2i88=",
			"dev": true,
			"requires": {
				"idna-uts46-hx": "^2.3.1",
				"js-sha3": "^0.5.7"
			},
			"dependencies": {
				"js-sha3": {
					"version": "0.5.7",
					"resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
					"integrity": "sha1-DU/9gALVMzqrr0oj7tL2N0yfKOc=",
					"dev": true
				}
			}
		},
		"eth-json-rpc-errors": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/eth-json-rpc-errors/-/eth-json-rpc-errors-2.0.2.tgz",
			"integrity": "sha512-uBCRM2w2ewusRHGxN8JhcuOb2RN3ueAOYH/0BhqdFmQkZx5lj5+fLKTz0mIVOzd4FG5/kUksCzCD7eTEim6gaA==",
			"dev": true,
			"requires": {
				"fast-safe-stringify": "^2.0.6"
			}
		},
		"eth-json-rpc-filters": {
			"version": "4.2.2",
			"resolved": "https://registry.npmjs.org/eth-json-rpc-filters/-/eth-json-rpc-filters-4.2.2.tgz",
			"integrity": "sha512-DGtqpLU7bBg63wPMWg1sCpkKCf57dJ+hj/k3zF26anXMzkmtSBDExL8IhUu7LUd34f0Zsce3PYNO2vV2GaTzaw==",
			"dev": true,
			"requires": {
				"@metamask/safe-event-emitter": "^2.0.0",
				"async-mutex": "^0.2.6",
				"eth-json-rpc-middleware": "^6.0.0",
				"eth-query": "^2.1.2",
				"json-rpc-engine": "^6.1.0",
				"pify": "^5.0.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"clone": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
					"integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
					"dev": true
				},
				"eth-json-rpc-middleware": {
					"version": "6.0.0",
					"resolved": "https://registry.npmjs.org/eth-json-rpc-middleware/-/eth-json-rpc-middleware-6.0.0.tgz",
					"integrity": "sha512-qqBfLU2Uq1Ou15Wox1s+NX05S9OcAEL4JZ04VZox2NS0U+RtCMjSxzXhLFWekdShUPZ+P8ax3zCO2xcPrp6XJQ==",
					"dev": true,
					"requires": {
						"btoa": "^1.2.1",
						"clone": "^2.1.1",
						"eth-query": "^2.1.2",
						"eth-rpc-errors": "^3.0.0",
						"eth-sig-util": "^1.4.2",
						"ethereumjs-util": "^5.1.2",
						"json-rpc-engine": "^5.3.0",
						"json-stable-stringify": "^1.0.1",
						"node-fetch": "^2.6.1",
						"pify": "^3.0.0",
						"safe-event-emitter": "^1.0.1"
					},
					"dependencies": {
						"json-rpc-engine": {
							"version": "5.4.0",
							"resolved": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-5.4.0.tgz",
							"integrity": "sha512-rAffKbPoNDjuRnXkecTjnsE3xLLrb00rEkdgalINhaYVYIxDwWtvYBr9UFbhTvPB1B2qUOLoFd/cV6f4Q7mh7g==",
							"dev": true,
							"requires": {
								"eth-rpc-errors": "^3.0.0",
								"safe-event-emitter": "^1.0.1"
							}
						},
						"pify": {
							"version": "3.0.0",
							"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
							"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
							"dev": true
						}
					}
				},
				"eth-sig-util": {
					"version": "1.4.2",
					"resolved": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-1.4.2.tgz",
					"integrity": "sha1-jZWCAsftuq6Dlwf7pvCf8ydgYhA=",
					"dev": true,
					"requires": {
						"ethereumjs-abi": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
						"ethereumjs-util": "^5.1.1"
					}
				},
				"ethereumjs-abi": {
					"version": "git+https://github.com/ethereumjs/ethereumjs-abi.git#ee3994657fa7a427238e6ba92a84d0b529bbcde0",
					"from": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
					"dev": true,
					"requires": {
						"bn.js": "^4.11.8",
						"ethereumjs-util": "^6.0.0"
					},
					"dependencies": {
						"ethereumjs-util": {
							"version": "6.2.1",
							"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
							"integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
							"dev": true,
							"requires": {
								"@types/bn.js": "^4.11.3",
								"bn.js": "^4.11.0",
								"create-hash": "^1.1.2",
								"elliptic": "^6.5.2",
								"ethereum-cryptography": "^0.1.3",
								"ethjs-util": "0.1.6",
								"rlp": "^2.2.3"
							}
						}
					}
				},
				"pify": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-5.0.0.tgz",
					"integrity": "sha512-eW/gHNMlxdSP6dmG6uJip6FXN0EQBwm2clYYd8Wul42Cwu/DK8HEftzsapcNdYe2MfLiIwZqsDk2RDEsTE79hA==",
					"dev": true
				}
			}
		},
		"eth-json-rpc-infura": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/eth-json-rpc-infura/-/eth-json-rpc-infura-4.1.0.tgz",
			"integrity": "sha512-DFYitKovzVlCdUulEccdm4g6k/vnvyByuw7rd5OoWDBSIiaeinI8Z/SntLjSIs2c+YvE20DGwk/GLwZGCWDN1Q==",
			"dev": true,
			"requires": {
				"eth-json-rpc-middleware": "^4.4.0",
				"eth-rpc-errors": "^3.0.0",
				"json-rpc-engine": "^5.1.3",
				"node-fetch": "^2.6.0"
			},
			"dependencies": {
				"json-rpc-engine": {
					"version": "5.4.0",
					"resolved": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-5.4.0.tgz",
					"integrity": "sha512-rAffKbPoNDjuRnXkecTjnsE3xLLrb00rEkdgalINhaYVYIxDwWtvYBr9UFbhTvPB1B2qUOLoFd/cV6f4Q7mh7g==",
					"dev": true,
					"requires": {
						"eth-rpc-errors": "^3.0.0",
						"safe-event-emitter": "^1.0.1"
					}
				}
			}
		},
		"eth-json-rpc-middleware": {
			"version": "4.4.1",
			"resolved": "https://registry.npmjs.org/eth-json-rpc-middleware/-/eth-json-rpc-middleware-4.4.1.tgz",
			"integrity": "sha512-yoSuRgEYYGFdVeZg3poWOwAlRI+MoBIltmOB86MtpoZjvLbou9EB/qWMOWSmH2ryCWLW97VYY6NWsmWm3OAA7A==",
			"dev": true,
			"requires": {
				"btoa": "^1.2.1",
				"clone": "^2.1.1",
				"eth-json-rpc-errors": "^1.0.1",
				"eth-query": "^2.1.2",
				"eth-sig-util": "^1.4.2",
				"ethereumjs-block": "^1.6.0",
				"ethereumjs-tx": "^1.3.7",
				"ethereumjs-util": "^5.1.2",
				"ethereumjs-vm": "^2.6.0",
				"fetch-ponyfill": "^4.0.0",
				"json-rpc-engine": "^5.1.3",
				"json-stable-stringify": "^1.0.1",
				"pify": "^3.0.0",
				"safe-event-emitter": "^1.0.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"clone": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
					"integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
					"dev": true
				},
				"eth-json-rpc-errors": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/eth-json-rpc-errors/-/eth-json-rpc-errors-1.1.1.tgz",
					"integrity": "sha512-WT5shJ5KfNqHi9jOZD+ID8I1kuYWNrigtZat7GOQkvwo99f8SzAVaEcWhJUv656WiZOAg3P1RiJQANtUmDmbIg==",
					"dev": true,
					"requires": {
						"fast-safe-stringify": "^2.0.6"
					}
				},
				"eth-sig-util": {
					"version": "1.4.2",
					"resolved": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-1.4.2.tgz",
					"integrity": "sha1-jZWCAsftuq6Dlwf7pvCf8ydgYhA=",
					"dev": true,
					"requires": {
						"ethereumjs-abi": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
						"ethereumjs-util": "^5.1.1"
					}
				},
				"ethereumjs-abi": {
					"version": "git+https://github.com/ethereumjs/ethereumjs-abi.git#ee3994657fa7a427238e6ba92a84d0b529bbcde0",
					"from": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
					"dev": true,
					"requires": {
						"bn.js": "^4.11.8",
						"ethereumjs-util": "^6.0.0"
					},
					"dependencies": {
						"ethereumjs-util": {
							"version": "6.2.1",
							"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
							"integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
							"dev": true,
							"requires": {
								"@types/bn.js": "^4.11.3",
								"bn.js": "^4.11.0",
								"create-hash": "^1.1.2",
								"elliptic": "^6.5.2",
								"ethereum-cryptography": "^0.1.3",
								"ethjs-util": "0.1.6",
								"rlp": "^2.2.3"
							}
						}
					}
				},
				"json-rpc-engine": {
					"version": "5.4.0",
					"resolved": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-5.4.0.tgz",
					"integrity": "sha512-rAffKbPoNDjuRnXkecTjnsE3xLLrb00rEkdgalINhaYVYIxDwWtvYBr9UFbhTvPB1B2qUOLoFd/cV6f4Q7mh7g==",
					"dev": true,
					"requires": {
						"eth-rpc-errors": "^3.0.0",
						"safe-event-emitter": "^1.0.1"
					}
				},
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
					"dev": true
				}
			}
		},
		"eth-lib": {
			"version": "0.2.8",
			"resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.8.tgz",
			"integrity": "sha512-ArJ7x1WcWOlSpzdoTBX8vkwlkSQ85CjjifSZtV4co64vWxSV8geWfPI9x4SVYu3DSxnX4yWFVTtGL+j9DUFLNw==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.6",
				"elliptic": "^6.4.0",
				"xhr-request-promise": "^0.1.2"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"eth-query": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/eth-query/-/eth-query-2.1.2.tgz",
			"integrity": "sha1-1nQdkAAQa1FRDHLbktY2VFam2l4=",
			"dev": true,
			"requires": {
				"json-rpc-random-id": "^1.0.0",
				"xtend": "^4.0.1"
			}
		},
		"eth-rpc-errors": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/eth-rpc-errors/-/eth-rpc-errors-3.0.0.tgz",
			"integrity": "sha512-iPPNHPrLwUlR9xCSYm7HHQjWBasor3+KZfRvwEWxMz3ca0yqnlBeJrnyphkGIXZ4J7AMAaOLmwy4AWhnxOiLxg==",
			"dev": true,
			"requires": {
				"fast-safe-stringify": "^2.0.6"
			}
		},
		"eth-sig-util": {
			"version": "2.5.4",
			"resolved": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.5.4.tgz",
			"integrity": "sha512-aCMBwp8q/4wrW4QLsF/HYBOSA7TpLKmkVwP3pYQNkEEseW2Rr8Z5Uxc9/h6HX+OG3tuHo+2bINVSihIeBfym6A==",
			"dev": true,
			"requires": {
				"ethereumjs-abi": "0.6.8",
				"ethereumjs-util": "^5.1.1",
				"tweetnacl": "^1.0.3",
				"tweetnacl-util": "^0.15.0"
			}
		},
		"ethereum-bloom-filters": {
			"version": "1.0.10",
			"resolved": "https://registry.npmjs.org/ethereum-bloom-filters/-/ethereum-bloom-filters-1.0.10.tgz",
			"integrity": "sha512-rxJ5OFN3RwjQxDcFP2Z5+Q9ho4eIdEmSc2ht0fCu8Se9nbXjZ7/031uXoUYJ87KHCOdVeiUuwSnoS7hmYAGVHA==",
			"dev": true,
			"requires": {
				"js-sha3": "^0.8.0"
			}
		},
		"ethereum-common": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/ethereum-common/-/ethereum-common-0.2.0.tgz",
			"integrity": "sha512-XOnAR/3rntJgbCdGhqdaLIxDLWKLmsZOGhHdBKadEr6gEnJLH52k93Ou+TUdFaPN3hJc3isBZBal3U/XZ15abA==",
			"dev": true
		},
		"ethereum-cryptography": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/ethereum-cryptography/-/ethereum-cryptography-0.1.3.tgz",
			"integrity": "sha512-w8/4x1SGGzc+tO97TASLja6SLd3fRIK2tLVcV2Gx4IB21hE19atll5Cq9o3d0ZmAYC/8aw0ipieTSiekAea4SQ==",
			"dev": true,
			"requires": {
				"@types/pbkdf2": "^3.0.0",
				"@types/secp256k1": "^4.0.1",
				"blakejs": "^1.1.0",
				"browserify-aes": "^1.2.0",
				"bs58check": "^2.1.2",
				"create-hash": "^1.2.0",
				"create-hmac": "^1.1.7",
				"hash.js": "^1.1.7",
				"keccak": "^3.0.0",
				"pbkdf2": "^3.0.17",
				"randombytes": "^2.1.0",
				"safe-buffer": "^5.1.2",
				"scrypt-js": "^3.0.0",
				"secp256k1": "^4.0.1",
				"setimmediate": "^1.0.5"
			},
			"dependencies": {
				"node-addon-api": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-2.0.2.tgz",
					"integrity": "sha512-Ntyt4AIXyaLIuMHF6IOoTakB3K+RWxwtsHNRxllEoA6vPwP9o4866g6YWDLUdnucilZhmkxiHwHr11gAENw+QA==",
					"dev": true
				},
				"secp256k1": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-4.0.2.tgz",
					"integrity": "sha512-UDar4sKvWAksIlfX3xIaQReADn+WFnHvbVujpcbr+9Sf/69odMwy2MUsz5CKLQgX9nsIyrjuxL2imVyoNHa3fg==",
					"dev": true,
					"requires": {
						"elliptic": "^6.5.2",
						"node-addon-api": "^2.0.0",
						"node-gyp-build": "^4.2.0"
					}
				}
			}
		},
		"ethereumjs-abi": {
			"version": "0.6.8",
			"resolved": "https://registry.npmjs.org/ethereumjs-abi/-/ethereumjs-abi-0.6.8.tgz",
			"integrity": "sha512-Tx0r/iXI6r+lRsdvkFDlut0N08jWMnKRZ6Gkq+Nmw75lZe4e6o3EkSnkaBP5NF6+m5PTGAr9JP43N3LyeoglsA==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.8",
				"ethereumjs-util": "^6.0.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"ethereumjs-util": {
					"version": "6.2.1",
					"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
					"integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.3",
						"bn.js": "^4.11.0",
						"create-hash": "^1.1.2",
						"elliptic": "^6.5.2",
						"ethereum-cryptography": "^0.1.3",
						"ethjs-util": "0.1.6",
						"rlp": "^2.2.3"
					}
				}
			}
		},
		"ethereumjs-account": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/ethereumjs-account/-/ethereumjs-account-2.0.5.tgz",
			"integrity": "sha512-bgDojnXGjhMwo6eXQC0bY6UK2liSFUSMwwylOmQvZbSl/D7NXQ3+vrGO46ZeOgjGfxXmgIeVNDIiHw7fNZM4VA==",
			"dev": true,
			"requires": {
				"ethereumjs-util": "^5.0.0",
				"rlp": "^2.0.0",
				"safe-buffer": "^5.1.1"
			}
		},
		"ethereumjs-block": {
			"version": "1.7.1",
			"resolved": "https://registry.npmjs.org/ethereumjs-block/-/ethereumjs-block-1.7.1.tgz",
			"integrity": "sha512-B+sSdtqm78fmKkBq78/QLKJbu/4Ts4P2KFISdgcuZUPDm9x+N7qgBPIIFUGbaakQh8bzuquiRVbdmvPKqbILRg==",
			"dev": true,
			"requires": {
				"async": "^2.0.1",
				"ethereum-common": "0.2.0",
				"ethereumjs-tx": "^1.2.2",
				"ethereumjs-util": "^5.0.0",
				"merkle-patricia-tree": "^2.1.2"
			}
		},
		"ethereumjs-common": {
			"version": "1.5.2",
			"resolved": "https://registry.npmjs.org/ethereumjs-common/-/ethereumjs-common-1.5.2.tgz",
			"integrity": "sha512-hTfZjwGX52GS2jcVO6E2sx4YuFnf0Fhp5ylo4pEPhEffNln7vS59Hr5sLnp3/QCazFLluuBZ+FZ6J5HTp0EqCA==",
			"dev": true
		},
		"ethereumjs-tx": {
			"version": "1.3.7",
			"resolved": "https://registry.npmjs.org/ethereumjs-tx/-/ethereumjs-tx-1.3.7.tgz",
			"integrity": "sha512-wvLMxzt1RPhAQ9Yi3/HKZTn0FZYpnsmQdbKYfUUpi4j1SEIcbkd9tndVjcPrufY3V7j2IebOpC00Zp2P/Ay2kA==",
			"dev": true,
			"requires": {
				"ethereum-common": "^0.0.18",
				"ethereumjs-util": "^5.0.0"
			},
			"dependencies": {
				"ethereum-common": {
					"version": "0.0.18",
					"resolved": "https://registry.npmjs.org/ethereum-common/-/ethereum-common-0.0.18.tgz",
					"integrity": "sha1-L9w1dvIykDNYl26znaeDIT/5Uj8=",
					"dev": true
				}
			}
		},
		"ethereumjs-util": {
			"version": "5.2.1",
			"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-5.2.1.tgz",
			"integrity": "sha512-v3kT+7zdyCm1HIqWlLNrHGqHGLpGYIhjeHxQjnDXjLT2FyGJDsd3LWMYUo7pAFRrk86CR3nUJfhC81CCoJNNGQ==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.0",
				"create-hash": "^1.1.2",
				"elliptic": "^6.5.2",
				"ethereum-cryptography": "^0.1.3",
				"ethjs-util": "^0.1.3",
				"rlp": "^2.0.0",
				"safe-buffer": "^5.1.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"ethereumjs-vm": {
			"version": "2.6.0",
			"resolved": "https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-2.6.0.tgz",
			"integrity": "sha512-r/XIUik/ynGbxS3y+mvGnbOKnuLo40V5Mj1J25+HEO63aWYREIqvWeRO/hnROlMBE5WoniQmPmhiaN0ctiHaXw==",
			"dev": true,
			"requires": {
				"async": "^2.1.2",
				"async-eventemitter": "^0.2.2",
				"ethereumjs-account": "^2.0.3",
				"ethereumjs-block": "~2.2.0",
				"ethereumjs-common": "^1.1.0",
				"ethereumjs-util": "^6.0.0",
				"fake-merkle-patricia-tree": "^1.0.1",
				"functional-red-black-tree": "^1.0.1",
				"merkle-patricia-tree": "^2.3.2",
				"rustbn.js": "~0.2.0",
				"safe-buffer": "^5.1.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"ethereumjs-block": {
					"version": "2.2.2",
					"resolved": "https://registry.npmjs.org/ethereumjs-block/-/ethereumjs-block-2.2.2.tgz",
					"integrity": "sha512-2p49ifhek3h2zeg/+da6XpdFR3GlqY3BIEiqxGF8j9aSRIgkb7M1Ky+yULBKJOu8PAZxfhsYA+HxUk2aCQp3vg==",
					"dev": true,
					"requires": {
						"async": "^2.0.1",
						"ethereumjs-common": "^1.5.0",
						"ethereumjs-tx": "^2.1.1",
						"ethereumjs-util": "^5.0.0",
						"merkle-patricia-tree": "^2.1.2"
					},
					"dependencies": {
						"ethereumjs-util": {
							"version": "5.2.1",
							"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-5.2.1.tgz",
							"integrity": "sha512-v3kT+7zdyCm1HIqWlLNrHGqHGLpGYIhjeHxQjnDXjLT2FyGJDsd3LWMYUo7pAFRrk86CR3nUJfhC81CCoJNNGQ==",
							"dev": true,
							"requires": {
								"bn.js": "^4.11.0",
								"create-hash": "^1.1.2",
								"elliptic": "^6.5.2",
								"ethereum-cryptography": "^0.1.3",
								"ethjs-util": "^0.1.3",
								"rlp": "^2.0.0",
								"safe-buffer": "^5.1.1"
							}
						}
					}
				},
				"ethereumjs-tx": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/ethereumjs-tx/-/ethereumjs-tx-2.1.2.tgz",
					"integrity": "sha512-zZEK1onCeiORb0wyCXUvg94Ve5It/K6GD1K+26KfFKodiBiS6d9lfCXlUKGBBdQ+bv7Day+JK0tj1K+BeNFRAw==",
					"dev": true,
					"requires": {
						"ethereumjs-common": "^1.5.0",
						"ethereumjs-util": "^6.0.0"
					}
				},
				"ethereumjs-util": {
					"version": "6.2.1",
					"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
					"integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.3",
						"bn.js": "^4.11.0",
						"create-hash": "^1.1.2",
						"elliptic": "^6.5.2",
						"ethereum-cryptography": "^0.1.3",
						"ethjs-util": "0.1.6",
						"rlp": "^2.2.3"
					}
				}
			}
		},
		"ethjs-unit": {
			"version": "0.1.6",
			"resolved": "https://registry.npmjs.org/ethjs-unit/-/ethjs-unit-0.1.6.tgz",
			"integrity": "sha1-xmWSHkduh7ziqdWIpv4EBbLEFpk=",
			"dev": true,
			"requires": {
				"bn.js": "4.11.6",
				"number-to-bn": "1.7.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.11.6",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
					"integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU=",
					"dev": true
				}
			}
		},
		"ethjs-util": {
			"version": "0.1.6",
			"resolved": "https://registry.npmjs.org/ethjs-util/-/ethjs-util-0.1.6.tgz",
			"integrity": "sha512-CUnVOQq7gSpDHZVVrQW8ExxUETWrnrvXYvYz55wOU8Uj4VCgw56XC2B/fVqQN+f7gmrnRHSLVnFAwsCuNwji8w==",
			"dev": true,
			"requires": {
				"is-hex-prefixed": "1.0.0",
				"strip-hex-prefix": "1.0.0"
			}
		},
		"eventemitter3": {
			"version": "4.0.4",
			"resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.4.tgz",
			"integrity": "sha512-rlaVLnVxtxvoyLsQQFBx53YmXHDxRIzzTLbdfxqi4yocpSjAxXwkU0cScM5JgSKMqEhrZpnvQ2D9gjylR0AimQ==",
			"dev": true
		},
		"events": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
			"integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
			"dev": true
		},
		"evp_bytestokey": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
			"integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
			"dev": true,
			"requires": {
				"md5.js": "^1.3.4",
				"safe-buffer": "^5.1.1"
			}
		},
		"exec-sh": {
			"version": "0.3.6",
			"resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.6.tgz",
			"integrity": "sha512-nQn+hI3yp+oD0huYhKwvYI32+JFeq+XkNcD1GAo3Y/MjxsfVGmrrzrnzjWiNY6f+pUCP440fThsFh5gZrRAU/w==",
			"dev": true
		},
		"execa": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",
			"integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",
			"dev": true,
			"requires": {
				"cross-spawn": "^6.0.0",
				"get-stream": "^4.0.0",
				"is-stream": "^1.1.0",
				"npm-run-path": "^2.0.0",
				"p-finally": "^1.0.0",
				"signal-exit": "^3.0.0",
				"strip-eof": "^1.0.0"
			}
		},
		"exit": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",
			"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
			"dev": true
		},
		"exit-on-epipe": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/exit-on-epipe/-/exit-on-epipe-1.0.1.tgz",
			"integrity": "sha512-h2z5mrROTxce56S+pnvAV890uu7ls7f1kEvVGJbw1OlFH3/mlJ5bkXu0KRyW94v37zzHPiUd55iLn3DA7TjWpw==",
			"dev": true
		},
		"expand-brackets": {
			"version": "2.1.4",
			"resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
			"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
			"requires": {
				"debug": "^2.3.3",
				"define-property": "^0.2.5",
				"extend-shallow": "^2.0.1",
				"posix-character-classes": "^0.1.0",
				"regex-not": "^1.0.0",
				"snapdragon": "^0.8.1",
				"to-regex": "^3.0.1"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"requires": {
						"ms": "2.0.0"
					}
				},
				"define-property": {
					"version": "0.2.5",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
					"integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
					"requires": {
						"is-descriptor": "^0.1.0"
					}
				},
				"extend-shallow": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
					"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
					"requires": {
						"is-extendable": "^0.1.0"
					}
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
				}
			}
		},
		"expand-template": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
			"integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
			"dev": true,
			"optional": true
		},
		"expect": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/expect/-/expect-26.6.2.tgz",
			"integrity": "sha512-9/hlOBkQl2l/PLHJx6JjoDF6xPKcJEsUlWKb23rKE7KzeDqUZKXKNMW27KIue5JMdBV9HgmoJPcc8HtO85t9IA==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"ansi-styles": "^4.0.0",
				"jest-get-type": "^26.3.0",
				"jest-matcher-utils": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-regex-util": "^26.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				}
			}
		},
		"express": {
			"version": "4.17.1",
			"resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
			"integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
			"dev": true,
			"requires": {
				"accepts": "~1.3.7",
				"array-flatten": "1.1.1",
				"body-parser": "1.19.0",
				"content-disposition": "0.5.3",
				"content-type": "~1.0.4",
				"cookie": "0.4.0",
				"cookie-signature": "1.0.6",
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"etag": "~1.8.1",
				"finalhandler": "~1.1.2",
				"fresh": "0.5.2",
				"merge-descriptors": "1.0.1",
				"methods": "~1.1.2",
				"on-finished": "~2.3.0",
				"parseurl": "~1.3.3",
				"path-to-regexp": "0.1.7",
				"proxy-addr": "~2.0.5",
				"qs": "6.7.0",
				"range-parser": "~1.2.1",
				"safe-buffer": "5.1.2",
				"send": "0.17.1",
				"serve-static": "1.14.1",
				"setprototypeof": "1.1.1",
				"statuses": "~1.5.0",
				"type-is": "~1.6.18",
				"utils-merge": "1.0.1",
				"vary": "~1.1.2"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					}
				},
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
					"dev": true
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
					"dev": true
				},
				"qs": {
					"version": "6.7.0",
					"resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
					"integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==",
					"dev": true
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"setprototypeof": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
					"integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
					"dev": true
				}
			}
		},
		"ext": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/ext/-/ext-1.4.0.tgz",
			"integrity": "sha512-Key5NIsUxdqKg3vIsdw9dSuXpPCQ297y6wBjL30edxwPgt2E44WcWBZey/ZvUc6sERLTxKdyCu4gZFmUbk1Q7A==",
			"dev": true,
			"requires": {
				"type": "^2.0.0"
			},
			"dependencies": {
				"type": {
					"version": "2.5.0",
					"resolved": "https://registry.npmjs.org/type/-/type-2.5.0.tgz",
					"integrity": "sha512-180WMDQaIMm3+7hGXWf12GtdniDEy7nYcyFMKJn/eZz/6tSLXrUN9V0wKSbMjej0I1WHWbpREDEKHtqPQa9NNw==",
					"dev": true
				}
			}
		},
		"extend": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
			"integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
			"dev": true
		},
		"extend-object": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/extend-object/-/extend-object-1.0.0.tgz",
			"integrity": "sha1-QlFPhAFdE1bK9Rh5ad+yvBvaCCM="
		},
		"extend-shallow": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
			"integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
			"requires": {
				"assign-symbols": "^1.0.0",
				"is-extendable": "^1.0.1"
			},
			"dependencies": {
				"is-extendable": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
					"integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
					"requires": {
						"is-plain-object": "^2.0.4"
					}
				}
			}
		},
		"external-editor": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
			"integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
			"requires": {
				"chardet": "^0.7.0",
				"iconv-lite": "^0.4.24",
				"tmp": "^0.0.33"
			}
		},
		"extglob": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
			"integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
			"requires": {
				"array-unique": "^0.3.2",
				"define-property": "^1.0.0",
				"expand-brackets": "^2.1.4",
				"extend-shallow": "^2.0.1",
				"fragment-cache": "^0.2.1",
				"regex-not": "^1.0.0",
				"snapdragon": "^0.8.1",
				"to-regex": "^3.0.1"
			},
			"dependencies": {
				"define-property": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
					"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
					"requires": {
						"is-descriptor": "^1.0.0"
					}
				},
				"extend-shallow": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
					"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
					"requires": {
						"is-extendable": "^0.1.0"
					}
				},
				"is-accessor-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
					"integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-data-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
					"integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-descriptor": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
					"integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
					"requires": {
						"is-accessor-descriptor": "^1.0.0",
						"is-data-descriptor": "^1.0.0",
						"kind-of": "^6.0.2"
					}
				}
			}
		},
		"extract-stack": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/extract-stack/-/extract-stack-1.0.0.tgz",
			"integrity": "sha1-uXrK+UQe6iMyUpYktzL8WhyBZfo="
		},
		"extsprintf": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
			"integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
			"dev": true
		},
		"fake-merkle-patricia-tree": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/fake-merkle-patricia-tree/-/fake-merkle-patricia-tree-1.0.1.tgz",
			"integrity": "sha1-S4w6z7Ugr635hgsfFM2M40As3dM=",
			"dev": true,
			"requires": {
				"checkpoint-store": "^1.1.0"
			}
		},
		"falafel": {
			"version": "2.2.4",
			"resolved": "https://registry.npmjs.org/falafel/-/falafel-2.2.4.tgz",
			"integrity": "sha512-0HXjo8XASWRmsS0X1EkhwEMZaD3Qvp7FfURwjLKjG1ghfRm/MGZl2r4cWUTv41KdNghTw4OUMmVtdGQp3+H+uQ==",
			"dev": true,
			"requires": {
				"acorn": "^7.1.1",
				"foreach": "^2.0.5",
				"isarray": "^2.0.1",
				"object-keys": "^1.0.6"
			},
			"dependencies": {
				"acorn": {
					"version": "7.4.1",
					"resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
					"integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
					"dev": true
				},
				"isarray": {
					"version": "2.0.5",
					"resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
					"integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
					"dev": true
				}
			}
		},
		"fast-deep-equal": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
			"integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
			"dev": true
		},
		"fast-glob": {
			"version": "3.2.7",
			"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.7.tgz",
			"integrity": "sha512-rYGMRwip6lUMvYD3BTScMwT1HtAs2d71SMv66Vrxs0IekGZEjhM0pcMfjQPnknBt2zeCwQMEupiN02ZP4DiT1Q==",
			"requires": {
				"@nodelib/fs.stat": "^2.0.2",
				"@nodelib/fs.walk": "^1.2.3",
				"glob-parent": "^5.1.2",
				"merge2": "^1.3.0",
				"micromatch": "^4.0.4"
			}
		},
		"fast-json-stable-stringify": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
			"integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
			"dev": true
		},
		"fast-levenshtein": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
			"integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc="
		},
		"fast-safe-stringify": {
			"version": "2.0.8",
			"resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.0.8.tgz",
			"integrity": "sha512-lXatBjf3WPjmWD6DpIZxkeSsCOwqI0maYMpgDlx8g4U2qi4lbjA9oH/HD2a87G+KfsUmo5WbJFmqBZlPxtptag==",
			"dev": true
		},
		"fastparse": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/fastparse/-/fastparse-1.1.2.tgz",
			"integrity": "sha512-483XLLxTVIwWK3QTrMGRqUfUpoOs/0hbQrl2oz4J0pAcm3A3bu84wxTFqGqkJzewCLdME38xJLJAxBABfQT8sQ==",
			"dev": true
		},
		"fastq": {
			"version": "1.11.1",
			"resolved": "https://registry.npmjs.org/fastq/-/fastq-1.11.1.tgz",
			"integrity": "sha512-HOnr8Mc60eNYl1gzwp6r5RoUyAn5/glBolUzP/Ez6IFVPMPirxn/9phgL6zhOtaTy7ISwPvQ+wT+hfcRZh/bzw==",
			"requires": {
				"reusify": "^1.0.4"
			}
		},
		"fb-watchman": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.1.tgz",
			"integrity": "sha512-DkPJKQeY6kKwmuMretBhr7G6Vodr7bFwDYTXIkfG1gjvNpaxBTQV3PbXg6bR1c1UP4jPOX0jHUbbHANL9vRjVg==",
			"dev": true,
			"requires": {
				"bser": "2.1.1"
			}
		},
		"fetch-ponyfill": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/fetch-ponyfill/-/fetch-ponyfill-4.1.0.tgz",
			"integrity": "sha1-rjzl9zLGReq4fkroeTQUcJsjmJM=",
			"dev": true,
			"requires": {
				"node-fetch": "~1.7.1"
			},
			"dependencies": {
				"node-fetch": {
					"version": "1.7.3",
					"resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",
					"integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",
					"dev": true,
					"requires": {
						"encoding": "^0.1.11",
						"is-stream": "^1.0.1"
					}
				}
			}
		},
		"figures": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
			"integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
			"requires": {
				"escape-string-regexp": "^1.0.5"
			}
		},
		"file-type": {
			"version": "3.9.0",
			"resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
			"integrity": "sha1-JXoHg4TR24CHvESdEH1SpSZyuek="
		},
		"file-uri-to-path": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
			"integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==",
			"dev": true
		},
		"filelist": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/filelist/-/filelist-1.0.2.tgz",
			"integrity": "sha512-z7O0IS8Plc39rTCq6i6iHxk43duYOn8uFJiWSewIq0Bww1RNybVHSCjahmcC87ZqAm4OTvFzlzeGu3XAzG1ctQ==",
			"requires": {
				"minimatch": "^3.0.4"
			}
		},
		"filename-reserved-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/filename-reserved-regex/-/filename-reserved-regex-1.0.0.tgz",
			"integrity": "sha1-5hz4BfDeHJhFZ9A4bcXfUO5a9+Q=",
			"dev": true
		},
		"filenamify": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/filenamify/-/filenamify-1.2.1.tgz",
			"integrity": "sha1-qfL/0RxQO+0wABUCknI3jx8TZaU=",
			"dev": true,
			"requires": {
				"filename-reserved-regex": "^1.0.0",
				"strip-outer": "^1.0.0",
				"trim-repeated": "^1.0.0"
			}
		},
		"filenamify-url": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/filenamify-url/-/filenamify-url-1.0.0.tgz",
			"integrity": "sha1-syvYExnvWGO3MHi+1Q9GpPeXX1A=",
			"dev": true,
			"requires": {
				"filenamify": "^1.0.0",
				"humanize-url": "^1.0.0"
			}
		},
		"filesize": {
			"version": "3.6.1",
			"resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",
			"integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg==",
			"dev": true
		},
		"fill-range": {
			"version": "7.0.1",
			"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
			"integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
			"requires": {
				"to-regex-range": "^5.0.1"
			}
		},
		"filter-obj": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
			"integrity": "sha1-mzERErxsYSehbgFsbF1/GeCAXFs=",
			"dev": true
		},
		"finalhandler": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
			"integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
			"dev": true,
			"requires": {
				"debug": "2.6.9",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"on-finished": "~2.3.0",
				"parseurl": "~1.3.3",
				"statuses": "~1.5.0",
				"unpipe": "~1.0.0"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					}
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
					"dev": true
				}
			}
		},
		"find-cache-dir": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.1.tgz",
			"integrity": "sha512-t2GDMt3oGC/v+BMwzmllWDuJF/xcDtE5j/fCGbqDD7OLuJkj0cfh1YSA5VKPvwMeLFLNDBkwOKZ2X85jGLVftQ==",
			"dev": true,
			"requires": {
				"commondir": "^1.0.1",
				"make-dir": "^3.0.2",
				"pkg-dir": "^4.1.0"
			}
		},
		"find-up": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
			"integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
			"requires": {
				"locate-path": "^5.0.0",
				"path-exists": "^4.0.0"
			}
		},
		"find-yarn-workspace-root": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/find-yarn-workspace-root/-/find-yarn-workspace-root-2.0.0.tgz",
			"integrity": "sha512-1IMnbjt4KzsQfnhnzNd8wUEgXZ44IzZaZmnLYx7D5FZlaHt2gW20Cri8Q+E/t5tIj4+epTBub+2Zxu/vNILzqQ==",
			"requires": {
				"micromatch": "^4.0.2"
			}
		},
		"first-chunk-stream": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-2.0.0.tgz",
			"integrity": "sha1-G97NuOCDwGZLkZRVgVd6Q6nzHXA=",
			"requires": {
				"readable-stream": "^2.0.2"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"flagged-respawn": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",
			"integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q==",
			"dev": true
		},
		"follow-redirects": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.1.tgz",
			"integrity": "sha512-HWqDgT7ZEkqRzBvc2s64vSZ/hfOceEol3ac/7tKwzuvEyWx3/4UegXh5oBOIotkGsObyk3xznnSRVADBgWSQVg=="
		},
		"for-in": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
			"integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA="
		},
		"foreach": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz",
			"integrity": "sha1-C+4AUBiusmDQo6865ljdATbsG5k=",
			"dev": true
		},
		"forever-agent": {
			"version": "0.6.1",
			"resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
			"integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
			"dev": true
		},
		"form-data": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/form-data/-/form-data-3.0.1.tgz",
			"integrity": "sha512-RHkBKtLWUVwd7SqRIvCZMEvAMoGUp0XU+seQiZejj0COz3RI3hWP4sCv3gZWWLjJTd7rGwcsF5eKZGii0r/hbg==",
			"dev": true,
			"requires": {
				"asynckit": "^0.4.0",
				"combined-stream": "^1.0.8",
				"mime-types": "^2.1.12"
			}
		},
		"forwarded": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
			"integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
			"dev": true
		},
		"fragment-cache": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
			"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
			"requires": {
				"map-cache": "^0.2.2"
			}
		},
		"fresh": {
			"version": "0.5.2",
			"resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
			"integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=",
			"dev": true
		},
		"fs-constants": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
			"integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
		},
		"fs-extra": {
			"version": "8.1.0",
			"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz",
			"integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==",
			"requires": {
				"graceful-fs": "^4.2.0",
				"jsonfile": "^4.0.0",
				"universalify": "^0.1.0"
			}
		},
		"fs-minipass": {
			"version": "1.2.7",
			"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
			"integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
			"dev": true,
			"requires": {
				"minipass": "^2.6.0"
			}
		},
		"fs.realpath": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
			"integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
		},
		"fsevents": {
			"version": "2.3.2",
			"resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
			"integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
			"dev": true,
			"optional": true
		},
		"function-bind": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
			"integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
		},
		"functional-red-black-tree": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
			"integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",
			"dev": true
		},
		"gauge": {
			"version": "2.7.4",
			"resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
			"integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
			"dev": true,
			"requires": {
				"aproba": "^1.0.3",
				"console-control-strings": "^1.0.0",
				"has-unicode": "^2.0.0",
				"object-assign": "^4.1.0",
				"signal-exit": "^3.0.0",
				"string-width": "^1.0.1",
				"strip-ansi": "^3.0.1",
				"wide-align": "^1.1.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
					"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
					"dev": true
				},
				"is-fullwidth-code-point": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
					"integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
					"dev": true,
					"requires": {
						"number-is-nan": "^1.0.0"
					}
				},
				"string-width": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
					"integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
					"dev": true,
					"requires": {
						"code-point-at": "^1.0.0",
						"is-fullwidth-code-point": "^1.0.0",
						"strip-ansi": "^3.0.0"
					}
				},
				"strip-ansi": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
					"integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^2.0.0"
					}
				}
			}
		},
		"gensync": {
			"version": "1.0.0-beta.2",
			"resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
			"integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
			"dev": true
		},
		"get-caller-file": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
			"integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
			"dev": true
		},
		"get-intrinsic": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz",
			"integrity": "sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==",
			"dev": true,
			"requires": {
				"function-bind": "^1.1.1",
				"has": "^1.0.3",
				"has-symbols": "^1.0.1"
			}
		},
		"get-package-type": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz",
			"integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==",
			"dev": true
		},
		"get-pkg-repo": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/get-pkg-repo/-/get-pkg-repo-4.1.2.tgz",
			"integrity": "sha512-/FjamZL9cBYllEbReZkxF2IMh80d8TJoC4e3bmLNif8ibHw95aj0N/tzqK0kZz9eU/3w3dL6lF4fnnX/sDdW3A==",
			"dev": true,
			"requires": {
				"@hutson/parse-repository-url": "^3.0.0",
				"hosted-git-info": "^4.0.0",
				"meow": "^7.0.0",
				"through2": "^2.0.0"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"meow": {
					"version": "7.1.1",
					"resolved": "https://registry.npmjs.org/meow/-/meow-7.1.1.tgz",
					"integrity": "sha512-GWHvA5QOcS412WCo8vwKDlTelGLsCGBVevQB5Kva961rmNfun0PCbv5+xta2kUMFJyR8/oWnn7ddeKdosbAPbA==",
					"dev": true,
					"requires": {
						"@types/minimist": "^1.2.0",
						"camelcase-keys": "^6.2.2",
						"decamelize-keys": "^1.1.0",
						"hard-rejection": "^2.1.0",
						"minimist-options": "4.1.0",
						"normalize-package-data": "^2.5.0",
						"read-pkg-up": "^7.0.1",
						"redent": "^3.0.0",
						"trim-newlines": "^3.0.0",
						"type-fest": "^0.13.1",
						"yargs-parser": "^18.1.3"
					}
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"through2": {
					"version": "2.0.5",
					"resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
					"integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
					"dev": true,
					"requires": {
						"readable-stream": "~2.3.6",
						"xtend": "~4.0.1"
					}
				},
				"type-fest": {
					"version": "0.13.1",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
					"integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
					"dev": true
				}
			}
		},
		"get-port": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/get-port/-/get-port-5.1.1.tgz",
			"integrity": "sha512-g/Q1aTSDOxFpchXC4i8ZWvxA1lnPqx/JHqcpIw0/LX9T8x/GBbi6YnlN5nhaKIFkT8oFsscUKgDJYxfwfS6QsQ==",
			"dev": true
		},
		"get-stdin": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
			"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4="
		},
		"get-stream": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
			"integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
			"dev": true,
			"requires": {
				"pump": "^3.0.0"
			}
		},
		"get-value": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
			"integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg="
		},
		"getpass": {
			"version": "0.1.7",
			"resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
			"integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
			"dev": true,
			"requires": {
				"assert-plus": "^1.0.0"
			}
		},
		"gh-got": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/gh-got/-/gh-got-5.0.0.tgz",
			"integrity": "sha1-7pW+NxBv2HSKlvjR20uuqJ4b+oo=",
			"requires": {
				"got": "^6.2.0",
				"is-plain-obj": "^1.1.0"
			},
			"dependencies": {
				"get-stream": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
					"integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ="
				},
				"got": {
					"version": "6.7.1",
					"resolved": "https://registry.npmjs.org/got/-/got-6.7.1.tgz",
					"integrity": "sha1-JAzQV4WpoY5WHcG0S0HHY+8ejbA=",
					"requires": {
						"create-error-class": "^3.0.0",
						"duplexer3": "^0.1.4",
						"get-stream": "^3.0.0",
						"is-redirect": "^1.0.0",
						"is-retry-allowed": "^1.0.0",
						"is-stream": "^1.0.0",
						"lowercase-keys": "^1.0.0",
						"safe-buffer": "^5.0.1",
						"timed-out": "^4.0.0",
						"unzip-response": "^2.0.1",
						"url-parse-lax": "^1.0.0"
					}
				},
				"url-parse-lax": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
					"integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
					"requires": {
						"prepend-http": "^1.0.1"
					}
				}
			}
		},
		"gh-pages": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/gh-pages/-/gh-pages-3.1.0.tgz",
			"integrity": "sha512-3b1rly9kuf3/dXsT8+ZxP0UhNLOo1CItj+3e31yUVcaph/yDsJ9RzD7JOw5o5zpBTJVQLlJAASNkUfepi9fe2w==",
			"dev": true,
			"requires": {
				"async": "^2.6.1",
				"commander": "^2.18.0",
				"email-addresses": "^3.0.1",
				"filenamify-url": "^1.0.0",
				"find-cache-dir": "^3.3.1",
				"fs-extra": "^8.1.0",
				"globby": "^6.1.0"
			},
			"dependencies": {
				"commander": {
					"version": "2.20.3",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
					"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
					"dev": true
				}
			}
		},
		"git-raw-commits": {
			"version": "2.0.10",
			"resolved": "https://registry.npmjs.org/git-raw-commits/-/git-raw-commits-2.0.10.tgz",
			"integrity": "sha512-sHhX5lsbG9SOO6yXdlwgEMQ/ljIn7qMpAbJZCGfXX2fq5T8M5SrDnpYk9/4HswTildcIqatsWa91vty6VhWSaQ==",
			"dev": true,
			"requires": {
				"dargs": "^7.0.0",
				"lodash": "^4.17.15",
				"meow": "^8.0.0",
				"split2": "^3.0.0",
				"through2": "^4.0.0"
			}
		},
		"git-remote-origin-url": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/git-remote-origin-url/-/git-remote-origin-url-2.0.0.tgz",
			"integrity": "sha1-UoJlna4hBxRaERJhEq0yFuxfpl8=",
			"dev": true,
			"requires": {
				"gitconfiglocal": "^1.0.0",
				"pify": "^2.3.0"
			}
		},
		"git-semver-tags": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/git-semver-tags/-/git-semver-tags-4.1.1.tgz",
			"integrity": "sha512-OWyMt5zBe7xFs8vglMmhM9lRQzCWL3WjHtxNNfJTMngGym7pC1kh8sP6jevfydJ6LP3ZvGxfb6ABYgPUM0mtsA==",
			"dev": true,
			"requires": {
				"meow": "^8.0.0",
				"semver": "^6.0.0"
			}
		},
		"git-up": {
			"version": "4.0.5",
			"resolved": "https://registry.npmjs.org/git-up/-/git-up-4.0.5.tgz",
			"integrity": "sha512-YUvVDg/vX3d0syBsk/CKUTib0srcQME0JyHkL5BaYdwLsiCslPWmDSi8PUMo9pXYjrryMcmsCoCgsTpSCJEQaA==",
			"dev": true,
			"requires": {
				"is-ssh": "^1.3.0",
				"parse-url": "^6.0.0"
			}
		},
		"git-url-parse": {
			"version": "11.5.0",
			"resolved": "https://registry.npmjs.org/git-url-parse/-/git-url-parse-11.5.0.tgz",
			"integrity": "sha512-TZYSMDeM37r71Lqg1mbnMlOqlHd7BSij9qN7XwTkRqSAYFMihGLGhfHwgqQob3GUhEneKnV4nskN9rbQw2KGxA==",
			"dev": true,
			"requires": {
				"git-up": "^4.0.0"
			}
		},
		"gitconfiglocal": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/gitconfiglocal/-/gitconfiglocal-1.0.0.tgz",
			"integrity": "sha1-QdBF84UaXqiPA/JMocYXgRRGS5s=",
			"dev": true,
			"requires": {
				"ini": "^1.3.2"
			}
		},
		"github-from-package": {
			"version": "0.0.0",
			"resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
			"integrity": "sha1-l/tdlr/eiXMxPyDoKI75oWf6ZM4=",
			"dev": true,
			"optional": true
		},
		"github-slugger": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/github-slugger/-/github-slugger-1.3.0.tgz",
			"integrity": "sha512-gwJScWVNhFYSRDvURk/8yhcFBee6aFjye2a7Lhb2bUyRulpIoek9p0I9Kt7PT67d/nUlZbFu8L9RLiA0woQN8Q==",
			"requires": {
				"emoji-regex": ">=6.0.0 <=6.1.1"
			},
			"dependencies": {
				"emoji-regex": {
					"version": "6.1.1",
					"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-6.1.1.tgz",
					"integrity": "sha1-xs0OwbBkLio8Z6ETfvxeeW2k+I4="
				}
			}
		},
		"github-username": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/github-username/-/github-username-3.0.0.tgz",
			"integrity": "sha1-CnciGbMTB0NCnyRW0L3T21Xc57E=",
			"requires": {
				"gh-got": "^5.0.0"
			}
		},
		"glob": {
			"version": "7.1.7",
			"resolved": "https://registry.npmjs.org/glob/-/glob-7.1.7.tgz",
			"integrity": "sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==",
			"requires": {
				"fs.realpath": "^1.0.0",
				"inflight": "^1.0.4",
				"inherits": "2",
				"minimatch": "^3.0.4",
				"once": "^1.3.0",
				"path-is-absolute": "^1.0.0"
			}
		},
		"glob-parent": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
			"integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
			"requires": {
				"is-glob": "^4.0.1"
			}
		},
		"glob-to-regexp": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",
			"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
		},
		"global": {
			"version": "4.4.0",
			"resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
			"integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
			"dev": true,
			"requires": {
				"min-document": "^2.19.0",
				"process": "^0.11.10"
			}
		},
		"global-dirs": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.0.tgz",
			"integrity": "sha512-v8ho2DS5RiCjftj1nD9NmnfaOzTdud7RRnVd9kFNOjqZbISlx5DQ+OrTkywgd0dIt7oFCvKetZSHoHcP3sDdiA==",
			"dev": true,
			"requires": {
				"ini": "2.0.0"
			},
			"dependencies": {
				"ini": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ini/-/ini-2.0.0.tgz",
					"integrity": "sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA==",
					"dev": true
				}
			}
		},
		"globals": {
			"version": "11.12.0",
			"resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
			"integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
			"dev": true
		},
		"globby": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
			"integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
			"dev": true,
			"requires": {
				"array-union": "^1.0.1",
				"glob": "^7.0.3",
				"object-assign": "^4.0.1",
				"pify": "^2.0.0",
				"pinkie-promise": "^2.0.0"
			}
		},
		"got": {
			"version": "9.6.0",
			"resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
			"integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
			"dev": true,
			"requires": {
				"@sindresorhus/is": "^0.14.0",
				"@szmarczak/http-timer": "^1.1.2",
				"cacheable-request": "^6.0.0",
				"decompress-response": "^3.3.0",
				"duplexer3": "^0.1.4",
				"get-stream": "^4.1.0",
				"lowercase-keys": "^1.0.1",
				"mimic-response": "^1.0.1",
				"p-cancelable": "^1.0.0",
				"to-readable-stream": "^1.0.0",
				"url-parse-lax": "^3.0.0"
			}
		},
		"graceful-fs": {
			"version": "4.2.6",
			"resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.6.tgz",
			"integrity": "sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ=="
		},
		"grapheme-breaker": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/grapheme-breaker/-/grapheme-breaker-0.3.2.tgz",
			"integrity": "sha1-W55reMODJFLSuiuxy4MPlidkEKw=",
			"dev": true,
			"requires": {
				"brfs": "^1.2.0",
				"unicode-trie": "^0.3.1"
			}
		},
		"grouped-queue": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/grouped-queue/-/grouped-queue-1.1.0.tgz",
			"integrity": "sha512-rZOFKfCqLhsu5VqjBjEWiwrYqJR07KxIkH4mLZlNlGDfntbb4FbMyGFP14TlvRPrU9S3Hnn/sgxbC5ZeN0no3Q==",
			"requires": {
				"lodash": "^4.17.15"
			}
		},
		"growly": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",
			"integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=",
			"dev": true,
			"optional": true
		},
		"handlebars": {
			"version": "4.7.7",
			"resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.7.tgz",
			"integrity": "sha512-aAcXm5OAfE/8IXkcZvCepKU3VzW1/39Fb5ZuqMtgI/hT8X2YgoMvBY5dLhq/cpOvw7Lk1nK/UF71aLG/ZnVYRA==",
			"dev": true,
			"requires": {
				"minimist": "^1.2.5",
				"neo-async": "^2.6.0",
				"source-map": "^0.6.1",
				"uglify-js": "^3.1.4",
				"wordwrap": "^1.0.0"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"har-schema": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
			"integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
			"dev": true
		},
		"har-validator": {
			"version": "5.1.5",
			"resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
			"integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
			"dev": true,
			"requires": {
				"ajv": "^6.12.3",
				"har-schema": "^2.0.0"
			}
		},
		"hard-rejection": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/hard-rejection/-/hard-rejection-2.1.0.tgz",
			"integrity": "sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==",
			"dev": true
		},
		"has": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
			"integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
			"requires": {
				"function-bind": "^1.1.1"
			}
		},
		"has-ansi": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
			"integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
			"requires": {
				"ansi-regex": "^2.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
					"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
				}
			}
		},
		"has-bigints": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.1.tgz",
			"integrity": "sha512-LSBS2LjbNBTf6287JEbEzvJgftkF5qFkmCo9hDRpAzKhUOlJ+hx8dd4USs00SgsUNwc4617J9ki5YtEClM2ffA==",
			"dev": true
		},
		"has-flag": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
			"integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
		},
		"has-symbol-support-x": {
			"version": "1.4.2",
			"resolved": "https://registry.npmjs.org/has-symbol-support-x/-/has-symbol-support-x-1.4.2.tgz",
			"integrity": "sha512-3ToOva++HaW+eCpgqZrCfN51IPB+7bJNVT6CUATzueB5Heb8o6Nam0V3HG5dlDvZU1Gn5QLcbahiKw/XVk5JJw=="
		},
		"has-symbols": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.2.tgz",
			"integrity": "sha512-chXa79rL/UC2KlX17jo3vRGz0azaWEx5tGqZg5pO3NUyEJVB17dMruQlzCCOfUvElghKcm5194+BCRvi2Rv/Gw==",
			"dev": true
		},
		"has-to-string-tag-x": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/has-to-string-tag-x/-/has-to-string-tag-x-1.4.1.tgz",
			"integrity": "sha512-vdbKfmw+3LoOYVr+mtxHaX5a96+0f3DljYd8JOqvOLsf5mw2Otda2qCDT9qRqLAhrjyQ0h7ual5nOiASpsGNFw==",
			"requires": {
				"has-symbol-support-x": "^1.4.1"
			}
		},
		"has-unicode": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
			"integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=",
			"dev": true
		},
		"has-value": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
			"integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
			"requires": {
				"get-value": "^2.0.6",
				"has-values": "^1.0.0",
				"isobject": "^3.0.0"
			}
		},
		"has-values": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
			"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
			"requires": {
				"is-number": "^3.0.0",
				"kind-of": "^4.0.0"
			},
			"dependencies": {
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"kind-of": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
					"integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"has-yarn": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/has-yarn/-/has-yarn-2.1.0.tgz",
			"integrity": "sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==",
			"dev": true
		},
		"hash-base": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.1.0.tgz",
			"integrity": "sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.4",
				"readable-stream": "^3.6.0",
				"safe-buffer": "^5.2.0"
			}
		},
		"hash.js": {
			"version": "1.1.7",
			"resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
			"integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.3",
				"minimalistic-assert": "^1.0.1"
			}
		},
		"hex-color-regex": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",
			"integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ==",
			"dev": true
		},
		"hmac-drbg": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
			"integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
			"dev": true,
			"requires": {
				"hash.js": "^1.0.3",
				"minimalistic-assert": "^1.0.0",
				"minimalistic-crypto-utils": "^1.0.1"
			}
		},
		"homedir-polyfill": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
			"integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
			"dev": true,
			"requires": {
				"parse-passwd": "^1.0.0"
			}
		},
		"hosted-git-info": {
			"version": "2.8.9",
			"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz",
			"integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw=="
		},
		"hsl-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",
			"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4=",
			"dev": true
		},
		"hsla-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",
			"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg=",
			"dev": true
		},
		"html-encoding-sniffer": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-2.0.1.tgz",
			"integrity": "sha512-D5JbOMBIR/TVZkubHT+OyT2705QvogUW4IBn6nHd756OwieSF9aDYFj4dv6HHEVGYbHaLETa3WggZYWWMyy3ZQ==",
			"dev": true,
			"requires": {
				"whatwg-encoding": "^1.0.5"
			}
		},
		"html-escaper": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
			"integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
			"dev": true
		},
		"html-tags": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/html-tags/-/html-tags-1.2.0.tgz",
			"integrity": "sha1-x43mW1Zjqll5id0rerSSANfk25g=",
			"dev": true
		},
		"htmlnano": {
			"version": "0.2.9",
			"resolved": "https://registry.npmjs.org/htmlnano/-/htmlnano-0.2.9.tgz",
			"integrity": "sha512-jWTtP3dCd7R8x/tt9DK3pvpcQd7HDMcRPUqPxr/i9989q2k5RHIhmlRDFeyQ/LSd8IKrteG8Ce5g0Ig4eGIipg==",
			"dev": true,
			"requires": {
				"cssnano": "^4.1.11",
				"posthtml": "^0.15.1",
				"purgecss": "^2.3.0",
				"relateurl": "^0.2.7",
				"srcset": "^3.0.0",
				"svgo": "^1.3.2",
				"terser": "^5.6.1",
				"timsort": "^0.3.0",
				"uncss": "^0.17.3"
			},
			"dependencies": {
				"commander": {
					"version": "2.20.3",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
					"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
					"dev": true
				},
				"posthtml": {
					"version": "0.15.2",
					"resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.15.2.tgz",
					"integrity": "sha512-YugEJ5ze/0DLRIVBjCpDwANWL4pPj1kHJ/2llY8xuInr0nbkon3qTiMPe5LQa+cCwNjxS7nAZZTp+1M+6mT4Zg==",
					"dev": true,
					"requires": {
						"posthtml-parser": "^0.7.2",
						"posthtml-render": "^1.3.1"
					}
				},
				"posthtml-parser": {
					"version": "0.7.2",
					"resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.7.2.tgz",
					"integrity": "sha512-LjEEG/3fNcWZtBfsOE3Gbyg1Li4CmsZRkH1UmbMR7nKdMXVMYI3B4/ZMiCpaq8aI1Aym4FRMMW9SAOLSwOnNsQ==",
					"dev": true,
					"requires": {
						"htmlparser2": "^6.0.0"
					}
				},
				"source-map": {
					"version": "0.7.3",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
					"integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
					"dev": true
				},
				"terser": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/terser/-/terser-5.7.1.tgz",
					"integrity": "sha512-b3e+d5JbHAe/JSjwsC3Zn55wsBIM7AsHLjKxT31kGCldgbpFePaFo+PiddtO6uwRZWRw7sPXmAN8dTW61xmnSg==",
					"dev": true,
					"requires": {
						"commander": "^2.20.0",
						"source-map": "~0.7.2",
						"source-map-support": "~0.5.19"
					}
				}
			}
		},
		"htmlparser2": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-6.1.0.tgz",
			"integrity": "sha512-gyyPk6rgonLFEDGoeRgQNaEUvdJ4ktTmmUh/h2t7s+M8oPpIPxgNACWa+6ESR57kXstwqPiCut0V8NRpcwgU7A==",
			"dev": true,
			"requires": {
				"domelementtype": "^2.0.1",
				"domhandler": "^4.0.0",
				"domutils": "^2.5.2",
				"entities": "^2.0.0"
			},
			"dependencies": {
				"dom-serializer": {
					"version": "1.3.2",
					"resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.3.2.tgz",
					"integrity": "sha512-5c54Bk5Dw4qAxNOI1pFEizPSjVsx5+bpJKmL2kPn8JhBUq2q09tTCa3mjijun2NfK78NMouDYNMBkOrPZiS+ig==",
					"dev": true,
					"requires": {
						"domelementtype": "^2.0.1",
						"domhandler": "^4.2.0",
						"entities": "^2.0.0"
					}
				},
				"domelementtype": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.2.0.tgz",
					"integrity": "sha512-DtBMo82pv1dFtUmHyr48beiuq792Sxohr+8Hm9zoxklYPfa6n0Z3Byjj2IV7bmr2IyqClnqEQhfgHJJ5QF0R5A==",
					"dev": true
				},
				"domutils": {
					"version": "2.7.0",
					"resolved": "https://registry.npmjs.org/domutils/-/domutils-2.7.0.tgz",
					"integrity": "sha512-8eaHa17IwJUPAiB+SoTYBo5mCdeMgdcAoXJ59m6DT1vw+5iLS3gNoqYaRowaBKtGVrOF1Jz4yDTgYKLK2kvfJg==",
					"dev": true,
					"requires": {
						"dom-serializer": "^1.0.1",
						"domelementtype": "^2.2.0",
						"domhandler": "^4.2.0"
					}
				}
			}
		},
		"http-cache-semantics": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
			"integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==",
			"dev": true
		},
		"http-call": {
			"version": "5.3.0",
			"resolved": "https://registry.npmjs.org/http-call/-/http-call-5.3.0.tgz",
			"integrity": "sha512-ahwimsC23ICE4kPl9xTBjKB4inbRaeLyZeRunC/1Jy/Z6X8tv22MEAjK+KBOMSVLaqXPTTmd8638waVIKLGx2w==",
			"requires": {
				"content-type": "^1.0.4",
				"debug": "^4.1.1",
				"is-retry-allowed": "^1.1.0",
				"is-stream": "^2.0.0",
				"parse-json": "^4.0.0",
				"tunnel-agent": "^0.6.0"
			},
			"dependencies": {
				"is-stream": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
					"integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg=="
				},
				"parse-json": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
					"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
					"requires": {
						"error-ex": "^1.3.1",
						"json-parse-better-errors": "^1.0.1"
					}
				}
			}
		},
		"http-errors": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.0.tgz",
			"integrity": "sha512-4I8r0C5JDhT5VkvI47QktDW75rNlGVsUf/8hzjCC/wkWI/jdTRmBb9aI7erSG82r1bjKY3F6k28WnsVxB1C73A==",
			"requires": {
				"depd": "~1.1.2",
				"inherits": "2.0.4",
				"setprototypeof": "1.2.0",
				"statuses": ">= 1.5.0 < 2",
				"toidentifier": "1.0.0"
			},
			"dependencies": {
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
				}
			}
		},
		"http-https": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/http-https/-/http-https-1.0.0.tgz",
			"integrity": "sha1-L5CN1fHbQGjAWM1ubUzjkskTOJs=",
			"dev": true
		},
		"http-proxy-agent": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-4.0.1.tgz",
			"integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq/Y+BOyPrgpUrA7HylqvU8vIZGsRuXmspskV0Tg==",
			"dev": true,
			"requires": {
				"@tootallnate/once": "1",
				"agent-base": "6",
				"debug": "4"
			}
		},
		"http-signature": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
			"integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
			"dev": true,
			"requires": {
				"assert-plus": "^1.0.0",
				"jsprim": "^1.2.2",
				"sshpk": "^1.7.0"
			}
		},
		"https-browserify": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",
			"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
			"dev": true
		},
		"https-proxy-agent": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.0.tgz",
			"integrity": "sha512-EkYm5BcKUGiduxzSt3Eppko+PiNWNEpa4ySk9vTC6wDsQJW9rHSa+UhGNJoRYp7bz6Ht1eaRIa6QaJqO5rCFbA==",
			"dev": true,
			"requires": {
				"agent-base": "6",
				"debug": "4"
			}
		},
		"human-signals": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/human-signals/-/human-signals-1.1.1.tgz",
			"integrity": "sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw=="
		},
		"humanize-ms": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
			"integrity": "sha1-xG4xWaKT9riW2ikxbYtv6Lt5u+0=",
			"dev": true,
			"requires": {
				"ms": "^2.0.0"
			}
		},
		"humanize-url": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/humanize-url/-/humanize-url-1.0.1.tgz",
			"integrity": "sha1-9KuZ4NKIF0yk4eUEB8VfuuRk7/8=",
			"dev": true,
			"requires": {
				"normalize-url": "^1.0.0",
				"strip-url-auth": "^1.0.0"
			}
		},
		"hyperlinker": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/hyperlinker/-/hyperlinker-1.0.0.tgz",
			"integrity": "sha512-Ty8UblRWFEcfSuIaajM34LdPXIhbs1ajEX/BBPv24J+enSVaEVY63xQ6lTO9VRYS5LAoghIG0IDJ+p+IPzKUQQ=="
		},
		"iconv-lite": {
			"version": "0.4.24",
			"resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
			"integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
			"requires": {
				"safer-buffer": ">= 2.1.2 < 3"
			}
		},
		"icss-replace-symbols": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/icss-replace-symbols/-/icss-replace-symbols-1.1.0.tgz",
			"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0=",
			"dev": true
		},
		"idna-uts46-hx": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/idna-uts46-hx/-/idna-uts46-hx-2.3.1.tgz",
			"integrity": "sha512-PWoF9Keq6laYdIRwwCdhTPl60xRqAloYNMQLiyUnG42VjT53oW07BXIRM+NK7eQjzXjAk2gUvX9caRxlnF9TAA==",
			"dev": true,
			"requires": {
				"punycode": "2.1.0"
			},
			"dependencies": {
				"punycode": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.0.tgz",
					"integrity": "sha1-X4Y+3Im5bbCQdLrXlHvwkFbKTn0=",
					"dev": true
				}
			}
		},
		"ieee754": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
			"integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA=="
		},
		"ignore": {
			"version": "5.1.8",
			"resolved": "https://registry.npmjs.org/ignore/-/ignore-5.1.8.tgz",
			"integrity": "sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw=="
		},
		"ignore-by-default": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
			"integrity": "sha1-SMptcvbGo68Aqa1K5odr44ieKwk=",
			"dev": true
		},
		"ignore-walk": {
			"version": "3.0.4",
			"resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.4.tgz",
			"integrity": "sha512-PY6Ii8o1jMRA1z4F2hRkH/xN59ox43DavKvD3oDpfurRlOJyAHpifIwpbdv1n4jt4ov0jSpw3kQ4GhJnpBL6WQ==",
			"dev": true,
			"requires": {
				"minimatch": "^3.0.4"
			}
		},
		"immediate": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/immediate/-/immediate-3.3.0.tgz",
			"integrity": "sha512-HR7EVodfFUdQCTIeySw+WDRFJlPcLOJbXfwwZ7Oom6tjsvZ3bOkCDJHehQC3nxJrv7+f9XecwazynjU8e4Vw3Q==",
			"dev": true
		},
		"import-fresh": {
			"version": "3.3.0",
			"resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
			"integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
			"dev": true,
			"requires": {
				"parent-module": "^1.0.0",
				"resolve-from": "^4.0.0"
			},
			"dependencies": {
				"resolve-from": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
					"integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
					"dev": true
				}
			}
		},
		"import-lazy": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-2.1.0.tgz",
			"integrity": "sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=",
			"dev": true
		},
		"import-local": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/import-local/-/import-local-3.0.2.tgz",
			"integrity": "sha512-vjL3+w0oulAVZ0hBHnxa/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9XfJTOoHwU0B71S557gA==",
			"dev": true,
			"requires": {
				"pkg-dir": "^4.2.0",
				"resolve-cwd": "^3.0.0"
			}
		},
		"imurmurhash": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
			"integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o="
		},
		"indent-string": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
			"integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg=="
		},
		"indexes-of": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",
			"integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc=",
			"dev": true
		},
		"infer-owner": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
			"integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==",
			"dev": true
		},
		"inflight": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
			"integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
			"requires": {
				"once": "^1.3.0",
				"wrappy": "1"
			}
		},
		"inherits": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
			"integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
		},
		"ini": {
			"version": "1.3.8",
			"resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
			"integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
		},
		"init-package-json": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/init-package-json/-/init-package-json-2.0.3.tgz",
			"integrity": "sha512-tk/gAgbMMxR6fn1MgMaM1HpU1ryAmBWWitnxG5OhuNXeX0cbpbgV5jA4AIpQJVNoyOfOevTtO6WX+rPs+EFqaQ==",
			"dev": true,
			"requires": {
				"glob": "^7.1.1",
				"npm-package-arg": "^8.1.2",
				"promzard": "^0.3.0",
				"read": "~1.0.1",
				"read-package-json": "^3.0.1",
				"semver": "^7.3.5",
				"validate-npm-package-license": "^3.0.4",
				"validate-npm-package-name": "^3.0.0"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"dev": true,
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"read-package-json": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-3.0.1.tgz",
					"integrity": "sha512-aLcPqxovhJTVJcsnROuuzQvv6oziQx4zd3JvG0vGCL5MjTONUc4uJ90zCBC6R7W7oUKBNoR/F8pkyfVwlbxqng==",
					"dev": true,
					"requires": {
						"glob": "^7.1.1",
						"json-parse-even-better-errors": "^2.3.0",
						"normalize-package-data": "^3.0.0",
						"npm-normalize-package-bin": "^1.0.0"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"inquirer": {
			"version": "7.3.3",
			"resolved": "https://registry.npmjs.org/inquirer/-/inquirer-7.3.3.tgz",
			"integrity": "sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==",
			"requires": {
				"ansi-escapes": "^4.2.1",
				"chalk": "^4.1.0",
				"cli-cursor": "^3.1.0",
				"cli-width": "^3.0.0",
				"external-editor": "^3.0.3",
				"figures": "^3.0.0",
				"lodash": "^4.17.19",
				"mute-stream": "0.0.8",
				"run-async": "^2.4.0",
				"rxjs": "^6.6.0",
				"string-width": "^4.1.0",
				"strip-ansi": "^6.0.0",
				"through": "^2.3.6"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"interpret": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/interpret/-/interpret-1.4.0.tgz",
			"integrity": "sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA=="
		},
		"ip": {
			"version": "1.1.5",
			"resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
			"integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo=",
			"dev": true
		},
		"ip-regex": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
			"integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
			"dev": true
		},
		"ipaddr.js": {
			"version": "1.9.1",
			"resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
			"integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
			"dev": true
		},
		"is-absolute-url": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",
			"integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY=",
			"dev": true
		},
		"is-accessor-descriptor": {
			"version": "0.1.6",
			"resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
			"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
			"requires": {
				"kind-of": "^3.0.2"
			},
			"dependencies": {
				"kind-of": {
					"version": "3.2.2",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
					"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"is-arguments": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.0.tgz",
			"integrity": "sha512-1Ij4lOMPl/xB5kBDn7I+b2ttPMKa8szhEIrXDuXQD/oe3HJLTLhqhgGspwgyGd6MOywBUqVvYicF72lkgDnIHg==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.0"
			}
		},
		"is-arrayish": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
			"integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="
		},
		"is-bigint": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.2.tgz",
			"integrity": "sha512-0JV5+SOCQkIdzjBK9buARcV804Ddu7A0Qet6sHi3FimE9ne6m4BGQZfRn+NZiXbBk4F4XmHfDZIipLj9pX8dSA==",
			"dev": true
		},
		"is-binary-path": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
			"integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
			"dev": true,
			"requires": {
				"binary-extensions": "^2.0.0"
			}
		},
		"is-boolean-object": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.1.tgz",
			"integrity": "sha512-bXdQWkECBUIAcCkeH1unwJLIpZYaa5VvuygSyS/c2lf719mTKZDU5UdDRlpd01UjADgmW8RfqaP+mRaVPdr/Ng==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2"
			}
		},
		"is-buffer": {
			"version": "1.1.6",
			"resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
			"integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
		},
		"is-callable": {
			"version": "1.2.3",
			"resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.3.tgz",
			"integrity": "sha512-J1DcMe8UYTBSrKezuIUTUwjXsho29693unXM2YhJUTR2txK/eG47bvNa/wipPFmZFgr/N6f1GA66dv0mEyTIyQ==",
			"dev": true
		},
		"is-ci": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",
			"integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
			"dev": true,
			"requires": {
				"ci-info": "^2.0.0"
			}
		},
		"is-color-stop": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",
			"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
			"dev": true,
			"requires": {
				"css-color-names": "^0.0.4",
				"hex-color-regex": "^1.1.0",
				"hsl-regex": "^1.0.0",
				"hsla-regex": "^1.0.0",
				"rgb-regex": "^1.0.1",
				"rgba-regex": "^1.0.0"
			}
		},
		"is-core-module": {
			"version": "2.5.0",
			"resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.5.0.tgz",
			"integrity": "sha512-TXCMSDsEHMEEZ6eCA8rwRDbLu55MRGmrctljsBX/2v1d9/GzqHOxW5c5oPSgrUt2vBFXebu9rGqckXGPWOlYpg==",
			"requires": {
				"has": "^1.0.3"
			}
		},
		"is-data-descriptor": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
			"integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
			"requires": {
				"kind-of": "^3.0.2"
			},
			"dependencies": {
				"kind-of": {
					"version": "3.2.2",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
					"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"is-date-object": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.4.tgz",
			"integrity": "sha512-/b4ZVsG7Z5XVtIxs/h9W8nvfLgSAyKYdtGWQLbqy6jA1icmgjf8WCoTKgeS4wy5tYaPePouzFMANbnj94c2Z+A==",
			"dev": true
		},
		"is-descriptor": {
			"version": "0.1.6",
			"resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
			"integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
			"requires": {
				"is-accessor-descriptor": "^0.1.6",
				"is-data-descriptor": "^0.1.4",
				"kind-of": "^5.0.0"
			},
			"dependencies": {
				"kind-of": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
					"integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="
				}
			}
		},
		"is-directory": {
			"version": "0.3.1",
			"resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",
			"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=",
			"dev": true
		},
		"is-docker": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
			"integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ=="
		},
		"is-extendable": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
			"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
		},
		"is-extglob": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
			"integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="
		},
		"is-finite": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.1.0.tgz",
			"integrity": "sha512-cdyMtqX/BOqqNBBiKlIVkytNHm49MtMlYyn1zxzvJKWmFMlGzm+ry5BBfYyeY9YmNKbRSo/o7OX9w9ale0wg3w=="
		},
		"is-fn": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-fn/-/is-fn-1.0.0.tgz",
			"integrity": "sha1-lUPV3nvPWwiiLsiiC65uKG1RDYw=",
			"dev": true
		},
		"is-fullwidth-code-point": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
			"integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg=="
		},
		"is-function": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
			"integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ==",
			"dev": true
		},
		"is-generator-fn": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
			"integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==",
			"dev": true
		},
		"is-generator-function": {
			"version": "1.0.9",
			"resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.9.tgz",
			"integrity": "sha512-ZJ34p1uvIfptHCN7sFTjGibB9/oBg17sHqzDLfuwhvmN/qLVvIQXRQ8licZQ35WJ8KuEQt/etnnzQFI9C9Ue/A==",
			"dev": true
		},
		"is-glob": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
			"integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
			"requires": {
				"is-extglob": "^2.1.1"
			}
		},
		"is-hex-prefixed": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-hex-prefixed/-/is-hex-prefixed-1.0.0.tgz",
			"integrity": "sha1-fY035q135dEnFIkTxXPggtd39VQ=",
			"dev": true
		},
		"is-html": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-html/-/is-html-1.1.0.tgz",
			"integrity": "sha1-4E8cGNOUhRETlvmgJz6rUa8hhGQ=",
			"dev": true,
			"requires": {
				"html-tags": "^1.0.0"
			}
		},
		"is-installed-globally": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz",
			"integrity": "sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ==",
			"dev": true,
			"requires": {
				"global-dirs": "^3.0.0",
				"is-path-inside": "^3.0.2"
			}
		},
		"is-lambda": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/is-lambda/-/is-lambda-1.0.1.tgz",
			"integrity": "sha1-PZh3iZ5qU+/AFgUEzeFfgubwYdU=",
			"dev": true
		},
		"is-negative-zero": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.1.tgz",
			"integrity": "sha512-2z6JzQvZRa9A2Y7xC6dQQm4FSTSTNWjKIYYTt4246eMTJmIo0Q+ZyOsU66X8lxK1AbB92dFeglPLrhwpeRKO6w==",
			"dev": true
		},
		"is-npm": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/is-npm/-/is-npm-5.0.0.tgz",
			"integrity": "sha512-WW/rQLOazUq+ST/bCAVBp/2oMERWLsR7OrKyt052dNDk4DHcDE0/7QSXITlmi+VBcV13DfIbysG3tZJm5RfdBA==",
			"dev": true
		},
		"is-number": {
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
			"integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng=="
		},
		"is-number-object": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.5.tgz",
			"integrity": "sha512-RU0lI/n95pMoUKu9v1BZP5MBcZuNSVJkMkAG2dJqC4z2GlkGUNeH68SuHuBKBD/XFe+LHZ+f9BKkLET60Niedw==",
			"dev": true
		},
		"is-obj": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
			"integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
			"dev": true
		},
		"is-object": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/is-object/-/is-object-1.0.2.tgz",
			"integrity": "sha512-2rRIahhZr2UWb45fIOuvZGpFtz0TyOZLf32KxBbSoUCeZR495zCKlWUKKUByk3geS2eAs7ZAABt0Y/Rx0GiQGA=="
		},
		"is-path-inside": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
			"integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
			"dev": true
		},
		"is-plain-obj": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
			"integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4="
		},
		"is-plain-object": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
			"integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
			"requires": {
				"isobject": "^3.0.1"
			}
		},
		"is-potential-custom-element-name": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz",
			"integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==",
			"dev": true
		},
		"is-redirect": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-redirect/-/is-redirect-1.0.0.tgz",
			"integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ="
		},
		"is-regex": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.3.tgz",
			"integrity": "sha512-qSVXFz28HM7y+IWX6vLCsexdlvzT1PJNFSBuaQLQ5o0IEw8UDYW6/2+eCMVyIsbM8CNLX2a/QWmSpyxYEHY7CQ==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"has-symbols": "^1.0.2"
			}
		},
		"is-resolvable": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
			"integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==",
			"dev": true
		},
		"is-retry-allowed": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
			"integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg=="
		},
		"is-scoped": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-scoped/-/is-scoped-1.0.0.tgz",
			"integrity": "sha1-RJypgpnnEwOCViieyytUDcQ3yzA=",
			"requires": {
				"scoped-regex": "^1.0.0"
			}
		},
		"is-ssh": {
			"version": "1.3.3",
			"resolved": "https://registry.npmjs.org/is-ssh/-/is-ssh-1.3.3.tgz",
			"integrity": "sha512-NKzJmQzJfEEma3w5cJNcUMxoXfDjz0Zj0eyCalHn2E6VOwlzjZo0yuO2fcBSf8zhFuVCL/82/r5gRcoi6aEPVQ==",
			"dev": true,
			"requires": {
				"protocols": "^1.1.0"
			}
		},
		"is-stream": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
			"integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="
		},
		"is-string": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.6.tgz",
			"integrity": "sha512-2gdzbKUuqtQ3lYNrUTQYoClPhm7oQu4UdpSZMp1/DGgkHBT8E2Z1l0yMdb6D4zNAxwDiMv8MdulKROJGNl0Q0w==",
			"dev": true
		},
		"is-symbol": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
			"integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
			"dev": true,
			"requires": {
				"has-symbols": "^1.0.2"
			}
		},
		"is-text-path": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/is-text-path/-/is-text-path-1.0.1.tgz",
			"integrity": "sha1-Thqg+1G/vLPpJogAE5cgLBd1tm4=",
			"dev": true,
			"requires": {
				"text-extensions": "^1.0.0"
			}
		},
		"is-typed-array": {
			"version": "1.1.5",
			"resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.5.tgz",
			"integrity": "sha512-S+GRDgJlR3PyEbsX/Fobd9cqpZBuvUS+8asRqYDMLCb2qMzt1oz5m5oxQCxOgUDxiWsOVNi4yaF+/uvdlHlYug==",
			"dev": true,
			"requires": {
				"available-typed-arrays": "^1.0.2",
				"call-bind": "^1.0.2",
				"es-abstract": "^1.18.0-next.2",
				"foreach": "^2.0.5",
				"has-symbols": "^1.0.1"
			}
		},
		"is-typedarray": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
			"integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
		},
		"is-url": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/is-url/-/is-url-1.2.4.tgz",
			"integrity": "sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==",
			"dev": true
		},
		"is-utf8": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
			"integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI="
		},
		"is-windows": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
			"integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA=="
		},
		"is-wsl": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
			"integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
			"requires": {
				"is-docker": "^2.0.0"
			}
		},
		"is-yarn-global": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/is-yarn-global/-/is-yarn-global-0.3.0.tgz",
			"integrity": "sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==",
			"dev": true
		},
		"is2": {
			"version": "2.0.7",
			"resolved": "https://registry.npmjs.org/is2/-/is2-2.0.7.tgz",
			"integrity": "sha512-4vBQoURAXC6hnLFxD4VW7uc04XiwTTl/8ydYJxKvPwkWQrSjInkuM5VZVg6BGr1/natq69zDuvO9lGpLClJqvA==",
			"dev": true,
			"requires": {
				"deep-is": "^0.1.3",
				"ip-regex": "^4.1.0",
				"is-url": "^1.2.4"
			}
		},
		"isarray": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
			"integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
		},
		"isbinaryfile": {
			"version": "4.0.8",
			"resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-4.0.8.tgz",
			"integrity": "sha512-53h6XFniq77YdW+spoRrebh0mnmTxRPTlcuIArO57lmMdq4uBKFKaeTjnb92oYWrSn/LVL+LT+Hap2tFQj8V+w=="
		},
		"isexe": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
			"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
		},
		"isobject": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
			"integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="
		},
		"isstream": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
			"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
			"dev": true
		},
		"istanbul-lib-coverage": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
			"integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
			"dev": true
		},
		"istanbul-lib-instrument": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.3.tgz",
			"integrity": "sha512-BXgQl9kf4WTCPCCpmFGoJkz/+uhvm7h7PFKUYxh7qarQd3ER33vHG//qaE8eN25l07YqZPpHXU9I09l/RD5aGQ==",
			"dev": true,
			"requires": {
				"@babel/core": "^7.7.5",
				"@istanbuljs/schema": "^0.1.2",
				"istanbul-lib-coverage": "^3.0.0",
				"semver": "^6.3.0"
			}
		},
		"istanbul-lib-report": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz",
			"integrity": "sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5yuydOLINXsfbus9ROw==",
			"dev": true,
			"requires": {
				"istanbul-lib-coverage": "^3.0.0",
				"make-dir": "^3.0.0",
				"supports-color": "^7.1.0"
			},
			"dependencies": {
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"istanbul-lib-source-maps": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.0.tgz",
			"integrity": "sha512-c16LpFRkR8vQXyHZ5nLpY35JZtzj1PQY1iZmesUbf1FZHbIupcWfjgOXBY9YHkLEQ6puz1u4Dgj6qmU/DisrZg==",
			"dev": true,
			"requires": {
				"debug": "^4.1.1",
				"istanbul-lib-coverage": "^3.0.0",
				"source-map": "^0.6.1"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"istanbul-reports": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.0.2.tgz",
			"integrity": "sha512-9tZvz7AiR3PEDNGiV9vIouQ/EAcqMXFmkcA1CDFTwOB98OZVDL0PH9glHotf5Ugp6GCOTypfzGWI/OqjWNCRUw==",
			"dev": true,
			"requires": {
				"html-escaper": "^2.0.0",
				"istanbul-lib-report": "^3.0.0"
			}
		},
		"istextorbinary": {
			"version": "2.6.0",
			"resolved": "https://registry.npmjs.org/istextorbinary/-/istextorbinary-2.6.0.tgz",
			"integrity": "sha512-+XRlFseT8B3L9KyjxxLjfXSLMuErKDsd8DBNrsaxoViABMEZlOSCstwmw0qpoFX3+U6yWU1yhLudAe6/lETGGA==",
			"requires": {
				"binaryextensions": "^2.1.2",
				"editions": "^2.2.0",
				"textextensions": "^2.5.0"
			}
		},
		"isurl": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/isurl/-/isurl-1.0.0.tgz",
			"integrity": "sha512-1P/yWsxPlDtn7QeRD+ULKQPaIaN6yF368GZ2vDfv0AL0NwpStafjWCDDdn0k8wgFMWpVAqG7oJhxHnlud42i9w==",
			"requires": {
				"has-to-string-tag-x": "^1.2.0",
				"is-object": "^1.0.1"
			}
		},
		"jake": {
			"version": "10.8.2",
			"resolved": "https://registry.npmjs.org/jake/-/jake-10.8.2.tgz",
			"integrity": "sha512-eLpKyrfG3mzvGE2Du8VoPbeSkRry093+tyNjdYaBbJS9v17knImYGNXQCUV0gLxQtF82m3E8iRb/wdSQZLoq7A==",
			"requires": {
				"async": "0.9.x",
				"chalk": "^2.4.2",
				"filelist": "^1.0.1",
				"minimatch": "^3.0.4"
			},
			"dependencies": {
				"async": {
					"version": "0.9.2",
					"resolved": "https://registry.npmjs.org/async/-/async-0.9.2.tgz",
					"integrity": "sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0="
				}
			}
		},
		"jest": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest/-/jest-26.6.3.tgz",
			"integrity": "sha512-lGS5PXGAzR4RF7V5+XObhqz2KZIDUA1yD0DG6pBVmy10eh0ZIXQImRuzocsI/N2XZ1GrLFwTS27In2i2jlpq1Q==",
			"dev": true,
			"requires": {
				"@jest/core": "^26.6.3",
				"import-local": "^3.0.2",
				"jest-cli": "^26.6.3"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"jest-cli": {
					"version": "26.6.3",
					"resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-26.6.3.tgz",
					"integrity": "sha512-GF9noBSa9t08pSyl3CY4frMrqp+aQXFGFkf5hEPbh/pIUFYWMK6ZLTfbmadxJVcJrdRoChlWQsA2VkJcDFK8hg==",
					"dev": true,
					"requires": {
						"@jest/core": "^26.6.3",
						"@jest/test-result": "^26.6.2",
						"@jest/types": "^26.6.2",
						"chalk": "^4.0.0",
						"exit": "^0.1.2",
						"graceful-fs": "^4.2.4",
						"import-local": "^3.0.2",
						"is-ci": "^2.0.0",
						"jest-config": "^26.6.3",
						"jest-util": "^26.6.2",
						"jest-validate": "^26.6.2",
						"prompts": "^2.0.1",
						"yargs": "^15.4.1"
					}
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-changed-files": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-26.6.2.tgz",
			"integrity": "sha512-fDS7szLcY9sCtIip8Fjry9oGf3I2ht/QT21bAHm5Dmf0mD4X3ReNUf17y+bO6fR8WgbIZTlbyG1ak/53cbRzKQ==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"execa": "^4.0.0",
				"throat": "^5.0.0"
			},
			"dependencies": {
				"cross-spawn": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
					"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
					"dev": true,
					"requires": {
						"path-key": "^3.1.0",
						"shebang-command": "^2.0.0",
						"which": "^2.0.1"
					}
				},
				"execa": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/execa/-/execa-4.1.0.tgz",
					"integrity": "sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA==",
					"dev": true,
					"requires": {
						"cross-spawn": "^7.0.0",
						"get-stream": "^5.0.0",
						"human-signals": "^1.1.1",
						"is-stream": "^2.0.0",
						"merge-stream": "^2.0.0",
						"npm-run-path": "^4.0.0",
						"onetime": "^5.1.0",
						"signal-exit": "^3.0.2",
						"strip-final-newline": "^2.0.0"
					}
				},
				"get-stream": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
					"integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
					"dev": true,
					"requires": {
						"pump": "^3.0.0"
					}
				},
				"is-stream": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
					"integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
					"dev": true
				},
				"npm-run-path": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
					"integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
					"dev": true,
					"requires": {
						"path-key": "^3.0.0"
					}
				},
				"path-key": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
					"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
					"dev": true
				},
				"shebang-command": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
					"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
					"dev": true,
					"requires": {
						"shebang-regex": "^3.0.0"
					}
				},
				"shebang-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
					"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
					"dev": true
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"jest-config": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest-config/-/jest-config-26.6.3.tgz",
			"integrity": "sha512-t5qdIj/bCj2j7NFVHb2nFB4aUdfucDn3JRKgrZnplb8nieAirAzRSHP8uDEd+qV6ygzg9Pz4YG7UTJf94LPSyg==",
			"dev": true,
			"requires": {
				"@babel/core": "^7.1.0",
				"@jest/test-sequencer": "^26.6.3",
				"@jest/types": "^26.6.2",
				"babel-jest": "^26.6.3",
				"chalk": "^4.0.0",
				"deepmerge": "^4.2.2",
				"glob": "^7.1.1",
				"graceful-fs": "^4.2.4",
				"jest-environment-jsdom": "^26.6.2",
				"jest-environment-node": "^26.6.2",
				"jest-get-type": "^26.3.0",
				"jest-jasmine2": "^26.6.3",
				"jest-regex-util": "^26.0.0",
				"jest-resolve": "^26.6.2",
				"jest-util": "^26.6.2",
				"jest-validate": "^26.6.2",
				"micromatch": "^4.0.2",
				"pretty-format": "^26.6.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-diff": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-26.6.2.tgz",
			"integrity": "sha512-6m+9Z3Gv9wN0WFVasqjCL/06+EFCMTqDEUl/b87HYK2rAPTyfz4ZIuSlPhY51PIQRWx5TaxeF1qmXKe9gfN3sA==",
			"dev": true,
			"requires": {
				"chalk": "^4.0.0",
				"diff-sequences": "^26.6.2",
				"jest-get-type": "^26.3.0",
				"pretty-format": "^26.6.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-docblock": {
			"version": "26.0.0",
			"resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-26.0.0.tgz",
			"integrity": "sha512-RDZ4Iz3QbtRWycd8bUEPxQsTlYazfYn/h5R65Fc6gOfwozFhoImx+affzky/FFBuqISPTqjXomoIGJVKBWoo0w==",
			"dev": true,
			"requires": {
				"detect-newline": "^3.0.0"
			}
		},
		"jest-each": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-each/-/jest-each-26.6.2.tgz",
			"integrity": "sha512-Mer/f0KaATbjl8MCJ+0GEpNdqmnVmDYqCTJYTvoo7rqmRiDllmp2AYN+06F93nXcY3ur9ShIjS+CO/uD+BbH4A==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"chalk": "^4.0.0",
				"jest-get-type": "^26.3.0",
				"jest-util": "^26.6.2",
				"pretty-format": "^26.6.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-environment-jsdom": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-26.6.2.tgz",
			"integrity": "sha512-jgPqCruTlt3Kwqg5/WVFyHIOJHsiAvhcp2qiR2QQstuG9yWox5+iHpU3ZrcBxW14T4fe5Z68jAfLRh7joCSP2Q==",
			"dev": true,
			"requires": {
				"@jest/environment": "^26.6.2",
				"@jest/fake-timers": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"jest-mock": "^26.6.2",
				"jest-util": "^26.6.2",
				"jsdom": "^16.4.0"
			}
		},
		"jest-environment-node": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-26.6.2.tgz",
			"integrity": "sha512-zhtMio3Exty18dy8ee8eJ9kjnRyZC1N4C1Nt/VShN1apyXc8rWGtJ9lI7vqiWcyyXS4BVSEn9lxAM2D+07/Tag==",
			"dev": true,
			"requires": {
				"@jest/environment": "^26.6.2",
				"@jest/fake-timers": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"jest-mock": "^26.6.2",
				"jest-util": "^26.6.2"
			}
		},
		"jest-get-type": {
			"version": "26.3.0",
			"resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-26.3.0.tgz",
			"integrity": "sha512-TpfaviN1R2pQWkIihlfEanwOXK0zcxrKEE4MlU6Tn7keoXdN6/3gK/xl0yEh8DOunn5pOVGKf8hB4R9gVh04ig==",
			"dev": true
		},
		"jest-haste-map": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-26.6.2.tgz",
			"integrity": "sha512-easWIJXIw71B2RdR8kgqpjQrbMRWQBgiBwXYEhtGUTaX+doCjBheluShdDMeR8IMfJiTqH4+zfhtg29apJf/8w==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"@types/graceful-fs": "^4.1.2",
				"@types/node": "*",
				"anymatch": "^3.0.3",
				"fb-watchman": "^2.0.0",
				"fsevents": "^2.1.2",
				"graceful-fs": "^4.2.4",
				"jest-regex-util": "^26.0.0",
				"jest-serializer": "^26.6.2",
				"jest-util": "^26.6.2",
				"jest-worker": "^26.6.2",
				"micromatch": "^4.0.2",
				"sane": "^4.0.3",
				"walker": "^1.0.7"
			}
		},
		"jest-jasmine2": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-26.6.3.tgz",
			"integrity": "sha512-kPKUrQtc8aYwBV7CqBg5pu+tmYXlvFlSFYn18ev4gPFtrRzB15N2gW/Roew3187q2w2eHuu0MU9TJz6w0/nPEg==",
			"dev": true,
			"requires": {
				"@babel/traverse": "^7.1.0",
				"@jest/environment": "^26.6.2",
				"@jest/source-map": "^26.6.2",
				"@jest/test-result": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"chalk": "^4.0.0",
				"co": "^4.6.0",
				"expect": "^26.6.2",
				"is-generator-fn": "^2.0.0",
				"jest-each": "^26.6.2",
				"jest-matcher-utils": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-runtime": "^26.6.3",
				"jest-snapshot": "^26.6.2",
				"jest-util": "^26.6.2",
				"pretty-format": "^26.6.2",
				"throat": "^5.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-leak-detector": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-26.6.2.tgz",
			"integrity": "sha512-i4xlXpsVSMeKvg2cEKdfhh0H39qlJlP5Ex1yQxwF9ubahboQYMgTtz5oML35AVA3B4Eu+YsmwaiKVev9KCvLxg==",
			"dev": true,
			"requires": {
				"jest-get-type": "^26.3.0",
				"pretty-format": "^26.6.2"
			}
		},
		"jest-matcher-utils": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-26.6.2.tgz",
			"integrity": "sha512-llnc8vQgYcNqDrqRDXWwMr9i7rS5XFiCwvh6DTP7Jqa2mqpcCBBlpCbn+trkG0KNhPu/h8rzyBkriOtBstvWhw==",
			"dev": true,
			"requires": {
				"chalk": "^4.0.0",
				"jest-diff": "^26.6.2",
				"jest-get-type": "^26.3.0",
				"pretty-format": "^26.6.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-message-util": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-26.6.2.tgz",
			"integrity": "sha512-rGiLePzQ3AzwUshu2+Rn+UMFk0pHN58sOG+IaJbk5Jxuqo3NYO1U2/MIR4S1sKgsoYSXSzdtSa0TgrmtUwEbmA==",
			"dev": true,
			"requires": {
				"@babel/code-frame": "^7.0.0",
				"@jest/types": "^26.6.2",
				"@types/stack-utils": "^2.0.0",
				"chalk": "^4.0.0",
				"graceful-fs": "^4.2.4",
				"micromatch": "^4.0.2",
				"pretty-format": "^26.6.2",
				"slash": "^3.0.0",
				"stack-utils": "^2.0.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-mock": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-26.6.2.tgz",
			"integrity": "sha512-YyFjePHHp1LzpzYcmgqkJ0nm0gg/lJx2aZFzFy1S6eUqNjXsOqTK10zNRff2dNfssgokjkG65OlWNcIlgd3zew==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"@types/node": "*"
			}
		},
		"jest-pnp-resolver": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.2.tgz",
			"integrity": "sha512-olV41bKSMm8BdnuMsewT4jqlZ8+3TCARAXjZGT9jcoSnrfUnRCqnMoF9XEeoWjbzObpqF9dRhHQj0Xb9QdF6/w==",
			"dev": true
		},
		"jest-regex-util": {
			"version": "26.0.0",
			"resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-26.0.0.tgz",
			"integrity": "sha512-Gv3ZIs/nA48/Zvjrl34bf+oD76JHiGDUxNOVgUjh3j890sblXryjY4rss71fPtD/njchl6PSE2hIhvyWa1eT0A==",
			"dev": true
		},
		"jest-resolve": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-26.6.2.tgz",
			"integrity": "sha512-sOxsZOq25mT1wRsfHcbtkInS+Ek7Q8jCHUB0ZUTP0tc/c41QHriU/NunqMfCUWsL4H3MHpvQD4QR9kSYhS7UvQ==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"chalk": "^4.0.0",
				"graceful-fs": "^4.2.4",
				"jest-pnp-resolver": "^1.2.2",
				"jest-util": "^26.6.2",
				"read-pkg-up": "^7.0.1",
				"resolve": "^1.18.1",
				"slash": "^3.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-resolve-dependencies": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-26.6.3.tgz",
			"integrity": "sha512-pVwUjJkxbhe4RY8QEWzN3vns2kqyuldKpxlxJlzEYfKSvY6/bMvxoFrYYzUO1Gx28yKWN37qyV7rIoIp2h8fTg==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"jest-regex-util": "^26.0.0",
				"jest-snapshot": "^26.6.2"
			}
		},
		"jest-runner": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-26.6.3.tgz",
			"integrity": "sha512-atgKpRHnaA2OvByG/HpGA4g6CSPS/1LK0jK3gATJAoptC1ojltpmVlYC3TYgdmGp+GLuhzpH30Gvs36szSL2JQ==",
			"dev": true,
			"requires": {
				"@jest/console": "^26.6.2",
				"@jest/environment": "^26.6.2",
				"@jest/test-result": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"chalk": "^4.0.0",
				"emittery": "^0.7.1",
				"exit": "^0.1.2",
				"graceful-fs": "^4.2.4",
				"jest-config": "^26.6.3",
				"jest-docblock": "^26.0.0",
				"jest-haste-map": "^26.6.2",
				"jest-leak-detector": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-resolve": "^26.6.2",
				"jest-runtime": "^26.6.3",
				"jest-util": "^26.6.2",
				"jest-worker": "^26.6.2",
				"source-map-support": "^0.5.6",
				"throat": "^5.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-runtime": {
			"version": "26.6.3",
			"resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-26.6.3.tgz",
			"integrity": "sha512-lrzyR3N8sacTAMeonbqpnSka1dHNux2uk0qqDXVkMv2c/A3wYnvQ4EXuI013Y6+gSKSCxdaczvf4HF0mVXHRdw==",
			"dev": true,
			"requires": {
				"@jest/console": "^26.6.2",
				"@jest/environment": "^26.6.2",
				"@jest/fake-timers": "^26.6.2",
				"@jest/globals": "^26.6.2",
				"@jest/source-map": "^26.6.2",
				"@jest/test-result": "^26.6.2",
				"@jest/transform": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/yargs": "^15.0.0",
				"chalk": "^4.0.0",
				"cjs-module-lexer": "^0.6.0",
				"collect-v8-coverage": "^1.0.0",
				"exit": "^0.1.2",
				"glob": "^7.1.3",
				"graceful-fs": "^4.2.4",
				"jest-config": "^26.6.3",
				"jest-haste-map": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-mock": "^26.6.2",
				"jest-regex-util": "^26.0.0",
				"jest-resolve": "^26.6.2",
				"jest-snapshot": "^26.6.2",
				"jest-util": "^26.6.2",
				"jest-validate": "^26.6.2",
				"slash": "^3.0.0",
				"strip-bom": "^4.0.0",
				"yargs": "^15.4.1"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-serializer": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-26.6.2.tgz",
			"integrity": "sha512-S5wqyz0DXnNJPd/xfIzZ5Xnp1HrJWBczg8mMfMpN78OJ5eDxXyf+Ygld9wX1DnUWbIbhM1YDY95NjR4CBXkb2g==",
			"dev": true,
			"requires": {
				"@types/node": "*",
				"graceful-fs": "^4.2.4"
			}
		},
		"jest-snapshot": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-26.6.2.tgz",
			"integrity": "sha512-OLhxz05EzUtsAmOMzuupt1lHYXCNib0ECyuZ/PZOx9TrZcC8vL0x+DUG3TL+GLX3yHG45e6YGjIm0XwDc3q3og==",
			"dev": true,
			"requires": {
				"@babel/types": "^7.0.0",
				"@jest/types": "^26.6.2",
				"@types/babel__traverse": "^7.0.4",
				"@types/prettier": "^2.0.0",
				"chalk": "^4.0.0",
				"expect": "^26.6.2",
				"graceful-fs": "^4.2.4",
				"jest-diff": "^26.6.2",
				"jest-get-type": "^26.3.0",
				"jest-haste-map": "^26.6.2",
				"jest-matcher-utils": "^26.6.2",
				"jest-message-util": "^26.6.2",
				"jest-resolve": "^26.6.2",
				"natural-compare": "^1.4.0",
				"pretty-format": "^26.6.2",
				"semver": "^7.3.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-util": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-util/-/jest-util-26.6.2.tgz",
			"integrity": "sha512-MDW0fKfsn0OI7MS7Euz6h8HNDXVQ0gaM9uW6RjfDmd1DAFcaxX9OqIakHIqhbnmF08Cf2DLDG+ulq8YQQ0Lp0Q==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"chalk": "^4.0.0",
				"graceful-fs": "^4.2.4",
				"is-ci": "^2.0.0",
				"micromatch": "^4.0.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-validate": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-26.6.2.tgz",
			"integrity": "sha512-NEYZ9Aeyj0i5rQqbq+tpIOom0YS1u2MVu6+euBsvpgIme+FOfRmoC4R5p0JiAUpaFvFy24xgrpMknarR/93XjQ==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"camelcase": "^6.0.0",
				"chalk": "^4.0.0",
				"jest-get-type": "^26.3.0",
				"leven": "^3.1.0",
				"pretty-format": "^26.6.2"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"camelcase": {
					"version": "6.2.0",
					"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-6.2.0.tgz",
					"integrity": "sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN/hdLdnZTDQhg6e9Dq5M1vKvfg==",
					"dev": true
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-watcher": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-26.6.2.tgz",
			"integrity": "sha512-WKJob0P/Em2csiVthsI68p6aGKTIcsfjH9Gsx1f0A3Italz43e3ho0geSAVsmj09RWOELP1AZ/DXyJgOgDKxXQ==",
			"dev": true,
			"requires": {
				"@jest/test-result": "^26.6.2",
				"@jest/types": "^26.6.2",
				"@types/node": "*",
				"ansi-escapes": "^4.2.1",
				"chalk": "^4.0.0",
				"jest-util": "^26.6.2",
				"string-length": "^4.0.1"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"jest-worker": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-26.6.2.tgz",
			"integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6KpRK54WhPvwf5w6PQ==",
			"dev": true,
			"requires": {
				"@types/node": "*",
				"merge-stream": "^2.0.0",
				"supports-color": "^7.0.0"
			},
			"dependencies": {
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"js-sha256": {
			"version": "0.9.0",
			"resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
			"integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
		},
		"js-sha3": {
			"version": "0.8.0",
			"resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
			"integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q==",
			"dev": true
		},
		"js-tokens": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
			"integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
		},
		"js-yaml": {
			"version": "3.14.1",
			"resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
			"integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
			"requires": {
				"argparse": "^1.0.7",
				"esprima": "^4.0.0"
			}
		},
		"jsbn": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
			"integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM=",
			"dev": true
		},
		"jsdom": {
			"version": "16.6.0",
			"resolved": "https://registry.npmjs.org/jsdom/-/jsdom-16.6.0.tgz",
			"integrity": "sha512-Ty1vmF4NHJkolaEmdjtxTfSfkdb8Ywarwf63f+F8/mDD1uLSSWDxDuMiZxiPhwunLrn9LOSVItWj4bLYsLN3Dg==",
			"dev": true,
			"requires": {
				"abab": "^2.0.5",
				"acorn": "^8.2.4",
				"acorn-globals": "^6.0.0",
				"cssom": "^0.4.4",
				"cssstyle": "^2.3.0",
				"data-urls": "^2.0.0",
				"decimal.js": "^10.2.1",
				"domexception": "^2.0.1",
				"escodegen": "^2.0.0",
				"form-data": "^3.0.0",
				"html-encoding-sniffer": "^2.0.1",
				"http-proxy-agent": "^4.0.1",
				"https-proxy-agent": "^5.0.0",
				"is-potential-custom-element-name": "^1.0.1",
				"nwsapi": "^2.2.0",
				"parse5": "6.0.1",
				"saxes": "^5.0.1",
				"symbol-tree": "^3.2.4",
				"tough-cookie": "^4.0.0",
				"w3c-hr-time": "^1.0.2",
				"w3c-xmlserializer": "^2.0.0",
				"webidl-conversions": "^6.1.0",
				"whatwg-encoding": "^1.0.5",
				"whatwg-mimetype": "^2.3.0",
				"whatwg-url": "^8.5.0",
				"ws": "^7.4.5",
				"xml-name-validator": "^3.0.0"
			}
		},
		"jsesc": {
			"version": "2.5.2",
			"resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
			"integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
			"dev": true
		},
		"json-buffer": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
			"integrity": "sha1-Wx85evx11ne96Lz8Dkfh+aPZqJg=",
			"dev": true
		},
		"json-parse-better-errors": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
			"integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw=="
		},
		"json-parse-even-better-errors": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
			"integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
		},
		"json-rpc-engine": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-6.1.0.tgz",
			"integrity": "sha512-NEdLrtrq1jUZyfjkr9OCz9EzCNhnRyWtt1PAnvnhwy6e8XETS0Dtc+ZNCO2gvuAoKsIn2+vCSowXTYE4CkgnAQ==",
			"dev": true,
			"requires": {
				"@metamask/safe-event-emitter": "^2.0.0",
				"eth-rpc-errors": "^4.0.2"
			},
			"dependencies": {
				"eth-rpc-errors": {
					"version": "4.0.3",
					"resolved": "https://registry.npmjs.org/eth-rpc-errors/-/eth-rpc-errors-4.0.3.tgz",
					"integrity": "sha512-Z3ymjopaoft7JDoxZcEb3pwdGh7yiYMhOwm2doUt6ASXlMavpNlK6Cre0+IMl2VSGyEU9rkiperQhp5iRxn5Pg==",
					"dev": true,
					"requires": {
						"fast-safe-stringify": "^2.0.6"
					}
				}
			}
		},
		"json-rpc-random-id": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/json-rpc-random-id/-/json-rpc-random-id-1.0.1.tgz",
			"integrity": "sha1-uknZat7RRE27jaPSA3SKy7zeyMg=",
			"dev": true
		},
		"json-schema": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
			"integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=",
			"dev": true
		},
		"json-schema-traverse": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
			"integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
			"dev": true
		},
		"json-stable-stringify": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
			"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
			"dev": true,
			"requires": {
				"jsonify": "~0.0.0"
			}
		},
		"json-stringify-safe": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
			"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
			"dev": true
		},
		"json5": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/json5/-/json5-2.2.0.tgz",
			"integrity": "sha512-f+8cldu7X/y7RAJurMEJmdoKXGB/X550w2Nr3tTbezL6RwEE/iMcm+tZnXeoZtKuOq6ft8+CqzEkrIgx1fPoQA==",
			"dev": true,
			"requires": {
				"minimist": "^1.2.5"
			}
		},
		"jsonfile": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
			"integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
			"requires": {
				"graceful-fs": "^4.1.6"
			}
		},
		"jsonify": {
			"version": "0.0.0",
			"resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
			"integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=",
			"dev": true
		},
		"jsonparse": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/jsonparse/-/jsonparse-1.3.1.tgz",
			"integrity": "sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA="
		},
		"jsprim": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
			"integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
			"dev": true,
			"requires": {
				"assert-plus": "1.0.0",
				"extsprintf": "1.3.0",
				"json-schema": "0.2.3",
				"verror": "1.10.0"
			}
		},
		"jwt-decode": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/jwt-decode/-/jwt-decode-3.1.2.tgz",
			"integrity": "sha512-UfpWE/VZn0iP50d8cz9NrZLM9lSWhcJ+0Gt/nm4by88UL+J1SiKN8/5dkjMmbEzwL2CAe+67GsegCbIKtbp75A==",
			"dev": true
		},
		"keccak": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/keccak/-/keccak-3.0.1.tgz",
			"integrity": "sha512-epq90L9jlFWCW7+pQa6JOnKn2Xgl2mtI664seYR6MHskvI9agt7AnDqmAlp9TqU4/caMYbA08Hi5DMZAl5zdkA==",
			"dev": true,
			"requires": {
				"node-addon-api": "^2.0.0",
				"node-gyp-build": "^4.2.0"
			},
			"dependencies": {
				"node-addon-api": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-2.0.2.tgz",
					"integrity": "sha512-Ntyt4AIXyaLIuMHF6IOoTakB3K+RWxwtsHNRxllEoA6vPwP9o4866g6YWDLUdnucilZhmkxiHwHr11gAENw+QA==",
					"dev": true
				}
			}
		},
		"keyv": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
			"integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
			"dev": true,
			"requires": {
				"json-buffer": "3.0.0"
			}
		},
		"kind-of": {
			"version": "6.0.3",
			"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
			"integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw=="
		},
		"kleur": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
			"integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
			"dev": true
		},
		"latest-version": {
			"version": "5.1.0",
			"resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
			"integrity": "sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==",
			"dev": true,
			"requires": {
				"package-json": "^6.3.0"
			}
		},
		"lazy-cache": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-2.0.2.tgz",
			"integrity": "sha1-uRkKT5EzVGlIQIWfio9whNiCImQ=",
			"requires": {
				"set-getter": "^0.1.0"
			}
		},
		"lerna": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/lerna/-/lerna-4.0.0.tgz",
			"integrity": "sha512-DD/i1znurfOmNJb0OBw66NmNqiM8kF6uIrzrJ0wGE3VNdzeOhz9ziWLYiRaZDGGwgbcjOo6eIfcx9O5Qynz+kg==",
			"dev": true,
			"requires": {
				"@lerna/add": "4.0.0",
				"@lerna/bootstrap": "4.0.0",
				"@lerna/changed": "4.0.0",
				"@lerna/clean": "4.0.0",
				"@lerna/cli": "4.0.0",
				"@lerna/create": "4.0.0",
				"@lerna/diff": "4.0.0",
				"@lerna/exec": "4.0.0",
				"@lerna/import": "4.0.0",
				"@lerna/info": "4.0.0",
				"@lerna/init": "4.0.0",
				"@lerna/link": "4.0.0",
				"@lerna/list": "4.0.0",
				"@lerna/publish": "4.0.0",
				"@lerna/run": "4.0.0",
				"@lerna/version": "4.0.0",
				"import-local": "^3.0.2",
				"npmlog": "^4.1.2"
			}
		},
		"level-codec": {
			"version": "7.0.1",
			"resolved": "https://registry.npmjs.org/level-codec/-/level-codec-7.0.1.tgz",
			"integrity": "sha512-Ua/R9B9r3RasXdRmOtd+t9TCOEIIlts+TN/7XTT2unhDaL6sJn83S3rUyljbr6lVtw49N3/yA0HHjpV6Kzb2aQ==",
			"dev": true
		},
		"level-errors": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/level-errors/-/level-errors-1.0.5.tgz",
			"integrity": "sha512-/cLUpQduF6bNrWuAC4pwtUKA5t669pCsCi2XbmojG2tFeOr9j6ShtdDCtFFQO1DRt+EVZhx9gPzP9G2bUaG4ig==",
			"dev": true,
			"requires": {
				"errno": "~0.1.1"
			}
		},
		"level-iterator-stream": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/level-iterator-stream/-/level-iterator-stream-1.3.1.tgz",
			"integrity": "sha1-5Dt4sagUPm+pek9IXrjqUwNS8u0=",
			"dev": true,
			"requires": {
				"inherits": "^2.0.1",
				"level-errors": "^1.0.3",
				"readable-stream": "^1.0.33",
				"xtend": "^4.0.0"
			},
			"dependencies": {
				"isarray": {
					"version": "0.0.1",
					"resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
					"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
					"dev": true
				},
				"readable-stream": {
					"version": "1.1.14",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",
					"integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.1",
						"isarray": "0.0.1",
						"string_decoder": "~0.10.x"
					}
				},
				"string_decoder": {
					"version": "0.10.31",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
					"integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
					"dev": true
				}
			}
		},
		"level-ws": {
			"version": "0.0.0",
			"resolved": "https://registry.npmjs.org/level-ws/-/level-ws-0.0.0.tgz",
			"integrity": "sha1-Ny5RIXeSSgBCSwtDrvK7QkltIos=",
			"dev": true,
			"requires": {
				"readable-stream": "~1.0.15",
				"xtend": "~2.1.1"
			},
			"dependencies": {
				"isarray": {
					"version": "0.0.1",
					"resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
					"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
					"dev": true
				},
				"object-keys": {
					"version": "0.4.0",
					"resolved": "https://registry.npmjs.org/object-keys/-/object-keys-0.4.0.tgz",
					"integrity": "sha1-KKaq50KN0sOpLz2V8hM13SBOAzY=",
					"dev": true
				},
				"readable-stream": {
					"version": "1.0.34",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",
					"integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.1",
						"isarray": "0.0.1",
						"string_decoder": "~0.10.x"
					}
				},
				"string_decoder": {
					"version": "0.10.31",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",
					"integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=",
					"dev": true
				},
				"xtend": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/xtend/-/xtend-2.1.2.tgz",
					"integrity": "sha1-bv7MKk2tjmlixJAbM3znuoe10os=",
					"dev": true,
					"requires": {
						"object-keys": "~0.4.0"
					}
				}
			}
		},
		"levelup": {
			"version": "1.3.9",
			"resolved": "https://registry.npmjs.org/levelup/-/levelup-1.3.9.tgz",
			"integrity": "sha512-VVGHfKIlmw8w1XqpGOAGwq6sZm2WwWLmlDcULkKWQXEA5EopA8OBNJ2Ck2v6bdk8HeEZSbCSEgzXadyQFm76sQ==",
			"dev": true,
			"requires": {
				"deferred-leveldown": "~1.2.1",
				"level-codec": "~7.0.0",
				"level-errors": "~1.0.3",
				"level-iterator-stream": "~1.3.0",
				"prr": "~1.0.1",
				"semver": "~5.4.1",
				"xtend": "~4.0.0"
			},
			"dependencies": {
				"semver": {
					"version": "5.4.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.4.1.tgz",
					"integrity": "sha512-WfG/X9+oATh81XtllIo/I8gOiY9EXRdv1cQdyykeXK17YcUW3EXUAi2To4pcH6nZtJPr7ZOpM5OMyWJZm+8Rsg==",
					"dev": true
				}
			}
		},
		"leven": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
			"integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
			"dev": true
		},
		"levn": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
			"integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
			"dev": true,
			"requires": {
				"prelude-ls": "~1.1.2",
				"type-check": "~0.3.2"
			}
		},
		"libnpmaccess": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/libnpmaccess/-/libnpmaccess-4.0.3.tgz",
			"integrity": "sha512-sPeTSNImksm8O2b6/pf3ikv4N567ERYEpeKRPSmqlNt1dTZbvgpJIzg5vAhXHpw2ISBsELFRelk0jEahj1c6nQ==",
			"dev": true,
			"requires": {
				"aproba": "^2.0.0",
				"minipass": "^3.1.1",
				"npm-package-arg": "^8.1.2",
				"npm-registry-fetch": "^11.0.0"
			},
			"dependencies": {
				"aproba": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/aproba/-/aproba-2.0.0.tgz",
					"integrity": "sha512-lYe4Gx7QT+MKGbDsA+Z+he/Wtef0BiwDOlK/XkBrdfsh9J/jPPXbX0tE9x9cl27Tmu5gg3QUbUrQYa/y+KOHPQ==",
					"dev": true
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"libnpmpublish": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/libnpmpublish/-/libnpmpublish-4.0.2.tgz",
			"integrity": "sha512-+AD7A2zbVeGRCFI2aO//oUmapCwy7GHqPXFJh3qpToSRNU+tXKJ2YFUgjt04LPPAf2dlEH95s6EhIHM1J7bmOw==",
			"dev": true,
			"requires": {
				"normalize-package-data": "^3.0.2",
				"npm-package-arg": "^8.1.2",
				"npm-registry-fetch": "^11.0.0",
				"semver": "^7.1.3",
				"ssri": "^8.0.1"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"dev": true,
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"lines-and-columns": {
			"version": "1.1.6",
			"resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz",
			"integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA="
		},
		"load-json-file": {
			"version": "6.2.0",
			"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-6.2.0.tgz",
			"integrity": "sha512-gUD/epcRms75Cw8RT1pUdHugZYM5ce64ucs2GEISABwkRsOQr0q2wm/MV2TKThycIe5e0ytRweW2RZxclogCdQ==",
			"requires": {
				"graceful-fs": "^4.1.15",
				"parse-json": "^5.0.0",
				"strip-bom": "^4.0.0",
				"type-fest": "^0.6.0"
			},
			"dependencies": {
				"type-fest": {
					"version": "0.6.0",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
					"integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg=="
				}
			}
		},
		"locate-path": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
			"integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
			"requires": {
				"p-locate": "^4.1.0"
			}
		},
		"lodash": {
			"version": "4.17.21",
			"resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
			"integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
		},
		"lodash._reinterpolate": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
			"integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="
		},
		"lodash.clone": {
			"version": "4.5.0",
			"resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",
			"integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y=",
			"dev": true
		},
		"lodash.debounce": {
			"version": "4.0.8",
			"resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
			"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
			"dev": true
		},
		"lodash.ismatch": {
			"version": "4.4.0",
			"resolved": "https://registry.npmjs.org/lodash.ismatch/-/lodash.ismatch-4.4.0.tgz",
			"integrity": "sha1-dWy1FQyjum8RCFp4hJZF8Yj4Xzc=",
			"dev": true
		},
		"lodash.memoize": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
			"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4=",
			"dev": true
		},
		"lodash.sortby": {
			"version": "4.7.0",
			"resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
			"integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg=",
			"dev": true
		},
		"lodash.template": {
			"version": "4.5.0",
			"resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-4.5.0.tgz",
			"integrity": "sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==",
			"requires": {
				"lodash._reinterpolate": "^3.0.0",
				"lodash.templatesettings": "^4.0.0"
			}
		},
		"lodash.templatesettings": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.2.0.tgz",
			"integrity": "sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==",
			"requires": {
				"lodash._reinterpolate": "^3.0.0"
			}
		},
		"lodash.uniq": {
			"version": "4.5.0",
			"resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
			"integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=",
			"dev": true
		},
		"log-symbols": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz",
			"integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==",
			"requires": {
				"chalk": "^2.0.1"
			}
		},
		"loglevel": {
			"version": "1.7.1",
			"resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.7.1.tgz",
			"integrity": "sha512-Hesni4s5UkWkwCGJMQGAh71PaLUmKFM60dHvq0zi/vDhhrzuk+4GgNbTXJ12YYQJn6ZKBDNIjYcuQGKudvqrIw==",
			"dev": true
		},
		"loose-envify": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
			"integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
			"dev": true,
			"requires": {
				"js-tokens": "^3.0.0 || ^4.0.0"
			}
		},
		"loud-rejection": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz",
			"integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=",
			"requires": {
				"currently-unhandled": "^0.4.1",
				"signal-exit": "^3.0.0"
			}
		},
		"lowercase-keys": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
			"integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA=="
		},
		"lru-cache": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
			"integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
			"requires": {
				"yallist": "^4.0.0"
			}
		},
		"ltgt": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/ltgt/-/ltgt-2.2.1.tgz",
			"integrity": "sha1-81ypHEk/e3PaDgdJUwTxezH4fuU=",
			"dev": true
		},
		"magic-string": {
			"version": "0.22.5",
			"resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.22.5.tgz",
			"integrity": "sha512-oreip9rJZkzvA8Qzk9HFs8fZGF/u7H/gtrE8EN6RjKJ9kh2HlC+yQ2QezifqTZfGyiuAV0dRv5a+y/8gBb1m9w==",
			"dev": true,
			"requires": {
				"vlq": "^0.2.2"
			}
		},
		"make-dir": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
			"integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
			"requires": {
				"semver": "^6.0.0"
			}
		},
		"make-error": {
			"version": "1.3.6",
			"resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
			"integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
			"dev": true
		},
		"make-fetch-happen": {
			"version": "9.0.4",
			"resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-9.0.4.tgz",
			"integrity": "sha512-sQWNKMYqSmbAGXqJg2jZ+PmHh5JAybvwu0xM8mZR/bsTjGiTASj3ldXJV7KFHy1k/IJIBkjxQFoWIVsv9+PQMg==",
			"dev": true,
			"requires": {
				"agentkeepalive": "^4.1.3",
				"cacache": "^15.2.0",
				"http-cache-semantics": "^4.1.0",
				"http-proxy-agent": "^4.0.1",
				"https-proxy-agent": "^5.0.0",
				"is-lambda": "^1.0.1",
				"lru-cache": "^6.0.0",
				"minipass": "^3.1.3",
				"minipass-collect": "^1.0.2",
				"minipass-fetch": "^1.3.2",
				"minipass-flush": "^1.0.5",
				"minipass-pipeline": "^1.2.4",
				"negotiator": "^0.6.2",
				"promise-retry": "^2.0.1",
				"socks-proxy-agent": "^5.0.0",
				"ssri": "^8.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"makeerror": {
			"version": "1.0.11",
			"resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",
			"integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",
			"dev": true,
			"requires": {
				"tmpl": "1.0.x"
			}
		},
		"map-cache": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
			"integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8="
		},
		"map-obj": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/map-obj/-/map-obj-4.2.1.tgz",
			"integrity": "sha512-+WA2/1sPmDj1dlvvJmB5G6JKfY9dpn7EVBUL06+y6PoljPkh+6V1QihwxNkbcGxCRjt2b0F9K0taiCuo7MbdFQ==",
			"dev": true
		},
		"map-visit": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
			"integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
			"requires": {
				"object-visit": "^1.0.0"
			}
		},
		"md5.js": {
			"version": "1.3.5",
			"resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
			"integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
			"dev": true,
			"requires": {
				"hash-base": "^3.0.0",
				"inherits": "^2.0.1",
				"safe-buffer": "^5.1.2"
			}
		},
		"mdn-data": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.4.tgz",
			"integrity": "sha512-iV3XNKw06j5Q7mi6h+9vbx23Tv7JkjEVgKHW4pimwyDGWm0OIQntJJ+u1C6mg6mK1EaTv42XQ7w76yuzH7M2cA==",
			"dev": true
		},
		"media-typer": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
			"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
			"dev": true
		},
		"mem-fs": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/mem-fs/-/mem-fs-1.2.0.tgz",
			"integrity": "sha512-b8g0jWKdl8pM0LqAPdK9i8ERL7nYrzmJfRhxMiWH2uYdfYnb7uXnmwVb0ZGe7xyEl4lj+nLIU3yf4zPUT+XsVQ==",
			"requires": {
				"through2": "^3.0.0",
				"vinyl": "^2.0.1",
				"vinyl-file": "^3.0.0"
			},
			"dependencies": {
				"through2": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/through2/-/through2-3.0.2.tgz",
					"integrity": "sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==",
					"requires": {
						"inherits": "^2.0.4",
						"readable-stream": "2 || 3"
					}
				}
			}
		},
		"mem-fs-editor": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-6.0.0.tgz",
			"integrity": "sha512-e0WfJAMm8Gv1mP5fEq/Blzy6Lt1VbLg7gNnZmZak7nhrBTibs+c6nQ4SKs/ZyJYHS1mFgDJeopsLAv7Ow0FMFg==",
			"requires": {
				"commondir": "^1.0.1",
				"deep-extend": "^0.6.0",
				"ejs": "^2.6.1",
				"glob": "^7.1.4",
				"globby": "^9.2.0",
				"isbinaryfile": "^4.0.0",
				"mkdirp": "^0.5.0",
				"multimatch": "^4.0.0",
				"rimraf": "^2.6.3",
				"through2": "^3.0.1",
				"vinyl": "^2.2.0"
			},
			"dependencies": {
				"@nodelib/fs.stat": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
					"integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"dir-glob": {
					"version": "2.2.2",
					"resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz",
					"integrity": "sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==",
					"requires": {
						"path-type": "^3.0.0"
					}
				},
				"fast-glob": {
					"version": "2.2.7",
					"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
					"integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
					"requires": {
						"@mrmlnc/readdir-enhanced": "^2.2.1",
						"@nodelib/fs.stat": "^1.1.2",
						"glob-parent": "^3.1.0",
						"is-glob": "^4.0.0",
						"merge2": "^1.2.3",
						"micromatch": "^3.1.10"
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"glob-parent": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
					"integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
					"requires": {
						"is-glob": "^3.1.0",
						"path-dirname": "^1.0.0"
					},
					"dependencies": {
						"is-glob": {
							"version": "3.1.0",
							"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
							"integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
							"requires": {
								"is-extglob": "^2.1.0"
							}
						}
					}
				},
				"globby": {
					"version": "9.2.0",
					"resolved": "https://registry.npmjs.org/globby/-/globby-9.2.0.tgz",
					"integrity": "sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==",
					"requires": {
						"@types/glob": "^7.1.1",
						"array-union": "^1.0.2",
						"dir-glob": "^2.2.2",
						"fast-glob": "^2.2.6",
						"glob": "^7.1.3",
						"ignore": "^4.0.3",
						"pify": "^4.0.1",
						"slash": "^2.0.0"
					}
				},
				"ignore": {
					"version": "4.0.6",
					"resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
					"integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"multimatch": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/multimatch/-/multimatch-4.0.0.tgz",
					"integrity": "sha512-lDmx79y1z6i7RNx0ZGCPq1bzJ6ZoDDKbvh7jxr9SJcWLkShMzXrHbYVpTdnhNM5MXpDUxCQ4DgqVttVXlBgiBQ==",
					"requires": {
						"@types/minimatch": "^3.0.3",
						"array-differ": "^3.0.0",
						"array-union": "^2.1.0",
						"arrify": "^2.0.1",
						"minimatch": "^3.0.4"
					},
					"dependencies": {
						"array-union": {
							"version": "2.1.0",
							"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
							"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw=="
						}
					}
				},
				"path-type": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
					"integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
					"requires": {
						"pify": "^3.0.0"
					},
					"dependencies": {
						"pify": {
							"version": "3.0.0",
							"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
							"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
						}
					}
				},
				"pify": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
					"integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
				},
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"requires": {
						"glob": "^7.1.3"
					}
				},
				"slash": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
					"integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A=="
				},
				"through2": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/through2/-/through2-3.0.2.tgz",
					"integrity": "sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==",
					"requires": {
						"inherits": "^2.0.4",
						"readable-stream": "2 || 3"
					}
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				}
			}
		},
		"memdown": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/memdown/-/memdown-1.4.1.tgz",
			"integrity": "sha1-tOThkhdGZP+65BNhqlAPMRnv4hU=",
			"dev": true,
			"requires": {
				"abstract-leveldown": "~2.7.1",
				"functional-red-black-tree": "^1.0.1",
				"immediate": "^3.2.3",
				"inherits": "~2.0.1",
				"ltgt": "~2.2.0",
				"safe-buffer": "~5.1.1"
			},
			"dependencies": {
				"abstract-leveldown": {
					"version": "2.7.2",
					"resolved": "https://registry.npmjs.org/abstract-leveldown/-/abstract-leveldown-2.7.2.tgz",
					"integrity": "sha512-+OVvxH2rHVEhWLdbudP6p0+dNMXu8JA1CbhP19T8paTYAcX7oJ4OVjT+ZUVpv7mITxXHqDMej+GdqXBmXkw09w==",
					"dev": true,
					"requires": {
						"xtend": "~4.0.0"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				}
			}
		},
		"memory-cache": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/memory-cache/-/memory-cache-0.2.0.tgz",
			"integrity": "sha1-eJCwHVLADI68nVM+H46xfjA0hxo=",
			"dev": true
		},
		"meow": {
			"version": "8.1.2",
			"resolved": "https://registry.npmjs.org/meow/-/meow-8.1.2.tgz",
			"integrity": "sha512-r85E3NdZ+mpYk1C6RjPFEMSE+s1iZMuHtsHAqY0DT3jZczl0diWUZ8g6oU7h0M9cD2EL+PzaYghhCLzR0ZNn5Q==",
			"dev": true,
			"requires": {
				"@types/minimist": "^1.2.0",
				"camelcase-keys": "^6.2.2",
				"decamelize-keys": "^1.1.0",
				"hard-rejection": "^2.1.0",
				"minimist-options": "4.1.0",
				"normalize-package-data": "^3.0.0",
				"read-pkg-up": "^7.0.1",
				"redent": "^3.0.0",
				"trim-newlines": "^3.0.0",
				"type-fest": "^0.18.0",
				"yargs-parser": "^20.2.3"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"dev": true,
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"type-fest": {
					"version": "0.18.1",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.18.1.tgz",
					"integrity": "sha512-OIAYXk8+ISY+qTOwkHtKqzAuxchoMiD9Udx+FSGQDuiRR+PJKJHc2NJAXlbhkGwTt/4/nKZxELY1w3ReWOL8mw==",
					"dev": true
				},
				"yargs-parser": {
					"version": "20.2.9",
					"resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
					"integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
					"dev": true
				}
			}
		},
		"merge-descriptors": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
			"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
			"dev": true
		},
		"merge-source-map": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.0.4.tgz",
			"integrity": "sha1-pd5GU42uhNQRTMXqArR3KmNGcB8=",
			"dev": true,
			"requires": {
				"source-map": "^0.5.6"
			}
		},
		"merge-stream": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
			"integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w=="
		},
		"merge2": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
			"integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg=="
		},
		"merkle-patricia-tree": {
			"version": "2.3.2",
			"resolved": "https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
			"integrity": "sha512-81PW5m8oz/pz3GvsAwbauj7Y00rqm81Tzad77tHBwU7pIAtN+TJnMSOJhxBKflSVYhptMMb9RskhqHqrSm1V+g==",
			"dev": true,
			"requires": {
				"async": "^1.4.2",
				"ethereumjs-util": "^5.0.0",
				"level-ws": "0.0.0",
				"levelup": "^1.2.1",
				"memdown": "^1.0.0",
				"readable-stream": "^2.0.0",
				"rlp": "^2.0.0",
				"semaphore": ">=1.0.1"
			},
			"dependencies": {
				"async": {
					"version": "1.5.2",
					"resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
					"integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
					"dev": true
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"methods": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
			"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
			"dev": true
		},
		"micromatch": {
			"version": "4.0.4",
			"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz",
			"integrity": "sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==",
			"requires": {
				"braces": "^3.0.1",
				"picomatch": "^2.2.3"
			}
		},
		"microseconds": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/microseconds/-/microseconds-0.2.0.tgz",
			"integrity": "sha512-n7DHHMjR1avBbSpsTBj6fmMGh2AGrifVV4e+WYc3Q9lO+xnSZ3NyhcBND3vzzatt05LFhoKFRxrIyklmLlUtyA==",
			"dev": true
		},
		"miller-rabin": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
			"integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
			"dev": true,
			"requires": {
				"bn.js": "^4.0.0",
				"brorand": "^1.0.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"mime": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
			"integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
			"dev": true
		},
		"mime-db": {
			"version": "1.48.0",
			"resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.48.0.tgz",
			"integrity": "sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04If834fOUSq1yzslJQ==",
			"dev": true
		},
		"mime-types": {
			"version": "2.1.31",
			"resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.31.tgz",
			"integrity": "sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa/HBy124RqtVh/O2pECas/MOcsDgpilPOPg==",
			"dev": true,
			"requires": {
				"mime-db": "1.48.0"
			}
		},
		"mimic-fn": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
			"integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="
		},
		"mimic-response": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
			"integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
		},
		"min-document": {
			"version": "2.19.0",
			"resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
			"integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
			"dev": true,
			"requires": {
				"dom-walk": "^0.1.0"
			}
		},
		"min-indent": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz",
			"integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==",
			"dev": true
		},
		"minimalistic-assert": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
			"integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
			"dev": true
		},
		"minimalistic-crypto-utils": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
			"integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=",
			"dev": true
		},
		"minimatch": {
			"version": "3.0.4",
			"resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
			"integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
			"requires": {
				"brace-expansion": "^1.1.7"
			}
		},
		"minimist": {
			"version": "1.2.5",
			"resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
			"integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw=="
		},
		"minimist-options": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/minimist-options/-/minimist-options-4.1.0.tgz",
			"integrity": "sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==",
			"dev": true,
			"requires": {
				"arrify": "^1.0.1",
				"is-plain-obj": "^1.1.0",
				"kind-of": "^6.0.3"
			},
			"dependencies": {
				"arrify": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
					"integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
					"dev": true
				}
			}
		},
		"minipass": {
			"version": "2.9.0",
			"resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
			"integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
			"dev": true,
			"requires": {
				"safe-buffer": "^5.1.2",
				"yallist": "^3.0.0"
			},
			"dependencies": {
				"yallist": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
					"integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
					"dev": true
				}
			}
		},
		"minipass-collect": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/minipass-collect/-/minipass-collect-1.0.2.tgz",
			"integrity": "sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==",
			"dev": true,
			"requires": {
				"minipass": "^3.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minipass-fetch": {
			"version": "1.3.4",
			"resolved": "https://registry.npmjs.org/minipass-fetch/-/minipass-fetch-1.3.4.tgz",
			"integrity": "sha512-TielGogIzbUEtd1LsjZFs47RWuHHfhl6TiCx1InVxApBAmQ8bL0dL5ilkLGcRvuyW/A9nE+Lvn855Ewz8S0PnQ==",
			"dev": true,
			"requires": {
				"encoding": "^0.1.12",
				"minipass": "^3.1.0",
				"minipass-sized": "^1.0.3",
				"minizlib": "^2.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minipass-flush": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz",
			"integrity": "sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==",
			"dev": true,
			"requires": {
				"minipass": "^3.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minipass-json-stream": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/minipass-json-stream/-/minipass-json-stream-1.0.1.tgz",
			"integrity": "sha512-ODqY18UZt/I8k+b7rl2AENgbWE8IDYam+undIJONvigAz8KR5GWblsFTEfQs0WODsjbSXWlm+JHEv8Gr6Tfdbg==",
			"dev": true,
			"requires": {
				"jsonparse": "^1.3.1",
				"minipass": "^3.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minipass-pipeline": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.4.tgz",
			"integrity": "sha512-xuIq7cIOt09RPRJ19gdi4b+RiNvDFYe5JH+ggNvBqGqpQXcru3PcRmOZuHBKWK1Txf9+cQ+HMVN4d6z46LZP7A==",
			"dev": true,
			"requires": {
				"minipass": "^3.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minipass-sized": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/minipass-sized/-/minipass-sized-1.0.3.tgz",
			"integrity": "sha512-MbkQQ2CTiBMlA2Dm/5cY+9SWFEN8pzzOXi6rlM5Xxq0Yqbda5ZQy9sU75a673FE9ZK0Zsbr6Y5iP6u9nktfg2g==",
			"dev": true,
			"requires": {
				"minipass": "^3.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"minizlib": {
			"version": "1.3.3",
			"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
			"integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
			"dev": true,
			"requires": {
				"minipass": "^2.9.0"
			}
		},
		"mixin-deep": {
			"version": "1.3.2",
			"resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz",
			"integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
			"requires": {
				"for-in": "^1.0.2",
				"is-extendable": "^1.0.1"
			},
			"dependencies": {
				"is-extendable": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
					"integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
					"requires": {
						"is-plain-object": "^2.0.4"
					}
				}
			}
		},
		"mixpanel": {
			"version": "0.13.0",
			"resolved": "https://registry.npmjs.org/mixpanel/-/mixpanel-0.13.0.tgz",
			"integrity": "sha512-YOWmpr/o4+zJ8LPjuLUkWLc2ImFeIkX6hF1t62Wlvq6loC6e8EK8qieYO4gYPTPxxtjAryl7xmIvf/7qnPwjrQ==",
			"dev": true,
			"requires": {
				"https-proxy-agent": "5.0.0"
			}
		},
		"mkdirp": {
			"version": "0.5.5",
			"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz",
			"integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==",
			"requires": {
				"minimist": "^1.2.5"
			}
		},
		"mkdirp-classic": {
			"version": "0.5.3",
			"resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
			"integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A=="
		},
		"mkdirp-infer-owner": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/mkdirp-infer-owner/-/mkdirp-infer-owner-2.0.0.tgz",
			"integrity": "sha512-sdqtiFt3lkOaYvTXSRIUjkIdPTcxgv5+fgqYE/5qgwdw12cOrAuzzgzvVExIkH/ul1oeHN3bCLOWSG3XOqbKKw==",
			"dev": true,
			"requires": {
				"chownr": "^2.0.0",
				"infer-owner": "^1.0.4",
				"mkdirp": "^1.0.3"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				}
			}
		},
		"mkdirp-promise": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-5.0.1.tgz",
			"integrity": "sha1-6bj2jlUsaKnBcTuEiD96HdA5uKE=",
			"dev": true,
			"requires": {
				"mkdirp": "*"
			}
		},
		"mock-fs": {
			"version": "4.14.0",
			"resolved": "https://registry.npmjs.org/mock-fs/-/mock-fs-4.14.0.tgz",
			"integrity": "sha512-qYvlv/exQ4+svI3UOvPUpLDF0OMX5euvUH0Ny4N5QyRyhNdgAgUrVH3iUINSzEPLvx0kbo/Bp28GJKIqvE7URw==",
			"dev": true
		},
		"modify-values": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/modify-values/-/modify-values-1.0.1.tgz",
			"integrity": "sha512-xV2bxeN6F7oYjZWTe/YPAy6MN2M+sL4u/Rlm2AHCIVGfo2p1yGmBHQ6vHehl4bRTZBdHu3TSkWdYgkwpYzAGSw==",
			"dev": true
		},
		"moment": {
			"version": "2.29.1",
			"resolved": "https://registry.npmjs.org/moment/-/moment-2.29.1.tgz",
			"integrity": "sha512-kHmoybcPV8Sqy59DwNDY3Jefr64lK/by/da0ViFcuA4DH0vQg5Q6Ze5VimxkfQNSC+Mls/Kx53s7TjP1RhFEDQ=="
		},
		"ms": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
			"integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
		},
		"multibase": {
			"version": "0.6.1",
			"resolved": "https://registry.npmjs.org/multibase/-/multibase-0.6.1.tgz",
			"integrity": "sha512-pFfAwyTjbbQgNc3G7D48JkJxWtoJoBMaR4xQUOuB8RnCgRqaYmWNFeJTTvrJ2w51bjLq2zTby6Rqj9TQ9elSUw==",
			"dev": true,
			"requires": {
				"base-x": "^3.0.8",
				"buffer": "^5.5.0"
			}
		},
		"multicodec": {
			"version": "0.5.7",
			"resolved": "https://registry.npmjs.org/multicodec/-/multicodec-0.5.7.tgz",
			"integrity": "sha512-PscoRxm3f+88fAtELwUnZxGDkduE2HD9Q6GHUOywQLjOGT/HAdhjLDYNZ1e7VR0s0TP0EwZ16LNUTFpoBGivOA==",
			"dev": true,
			"requires": {
				"varint": "^5.0.0"
			}
		},
		"multihashes": {
			"version": "0.4.21",
			"resolved": "https://registry.npmjs.org/multihashes/-/multihashes-0.4.21.tgz",
			"integrity": "sha512-uVSvmeCWf36pU2nB4/1kzYZjsXD9vofZKpgudqkceYY5g2aZZXJ5r9lxuzoRLl1OAp28XljXsEJ/X/85ZsKmKw==",
			"dev": true,
			"requires": {
				"buffer": "^5.5.0",
				"multibase": "^0.7.0",
				"varint": "^5.0.0"
			},
			"dependencies": {
				"multibase": {
					"version": "0.7.0",
					"resolved": "https://registry.npmjs.org/multibase/-/multibase-0.7.0.tgz",
					"integrity": "sha512-TW8q03O0f6PNFTQDvh3xxH03c8CjGaaYrjkl9UQPG6rz53TQzzxJVCIWVjzcbN/Q5Y53Zd0IBQBMVktVgNx4Fg==",
					"dev": true,
					"requires": {
						"base-x": "^3.0.8",
						"buffer": "^5.5.0"
					}
				}
			}
		},
		"multimatch": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/multimatch/-/multimatch-5.0.0.tgz",
			"integrity": "sha512-ypMKuglUrZUD99Tk2bUQ+xNQj43lPEfAeX2o9cTteAmShXy2VHDJpuwu1o0xqoKCt9jLVAvwyFKdLTPXKAfJyA==",
			"dev": true,
			"requires": {
				"@types/minimatch": "^3.0.3",
				"array-differ": "^3.0.0",
				"array-union": "^2.1.0",
				"arrify": "^2.0.1",
				"minimatch": "^3.0.4"
			},
			"dependencies": {
				"array-union": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
					"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
					"dev": true
				}
			}
		},
		"mustache": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
			"integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ=="
		},
		"mute-stream": {
			"version": "0.0.8",
			"resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
			"integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA=="
		},
		"nan": {
			"version": "2.14.2",
			"resolved": "https://registry.npmjs.org/nan/-/nan-2.14.2.tgz",
			"integrity": "sha512-M2ufzIiINKCuDfBSAUr1vWQ+vuVcA9kqx8JJUsbQi6yf1uGRyb7HfpdfUr5qLXf3B/t8dPvcjhKMmlfnP47EzQ==",
			"dev": true
		},
		"nano-json-stream-parser": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/nano-json-stream-parser/-/nano-json-stream-parser-0.1.2.tgz",
			"integrity": "sha1-DMj20OK2IrR5xA1JnEbWS3Vcb18=",
			"dev": true
		},
		"nano-time": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/nano-time/-/nano-time-1.0.0.tgz",
			"integrity": "sha1-sFVPaa2J4i0JB/ehKwmTpdlhN+8=",
			"dev": true,
			"requires": {
				"big-integer": "^1.6.16"
			}
		},
		"nanomatch": {
			"version": "1.2.13",
			"resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
			"integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
			"requires": {
				"arr-diff": "^4.0.0",
				"array-unique": "^0.3.2",
				"define-property": "^2.0.2",
				"extend-shallow": "^3.0.2",
				"fragment-cache": "^0.2.1",
				"is-windows": "^1.0.2",
				"kind-of": "^6.0.2",
				"object.pick": "^1.3.0",
				"regex-not": "^1.0.0",
				"snapdragon": "^0.8.1",
				"to-regex": "^3.0.1"
			}
		},
		"napi-build-utils": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
			"integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
			"dev": true,
			"optional": true
		},
		"natural-compare": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
			"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
			"dev": true
		},
		"natural-orderby": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/natural-orderby/-/natural-orderby-2.0.3.tgz",
			"integrity": "sha512-p7KTHxU0CUrcOXe62Zfrb5Z13nLvPhSWR/so3kFulUQU0sgUll2Z0LwpsLN351eOOD+hRGu/F1g+6xDfPeD++Q=="
		},
		"ncp": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
			"integrity": "sha1-GVoh1sRuNh0vsSgbo4uR6d9727M="
		},
		"near-api-js": {
			"version": "0.41.0",
			"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.41.0.tgz",
			"integrity": "sha512-/dp+1JsKJAvwk4s8bFFZs1K+84lSAqPeQmXTsSGvebJh+cMu+tZsJ8jKnKbmlZ/wUG4VoCimxN8cMru+WkRlwA==",
			"requires": {
				"bn.js": "5.2.0",
				"borsh": "^0.4.0",
				"bs58": "^4.0.0",
				"depd": "^2.0.0",
				"error-polyfill": "^0.1.2",
				"http-errors": "^1.7.2",
				"js-sha256": "^0.9.0",
				"mustache": "^4.0.0",
				"node-fetch": "^2.6.1",
				"text-encoding-utf-8": "^1.0.2",
				"tweetnacl": "^1.0.1"
			}
		},
		"near-cli": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/near-cli/-/near-cli-1.6.0.tgz",
			"integrity": "sha512-ubundN2UYI61R2xZIeo6rX6DxFJuA5mVtJyVU6JOTXN40T4jbwQPJkKjnfnOb/vfmNu7ntUWQoejVHnVBIjsSQ==",
			"dev": true,
			"requires": {
				"@ledgerhq/hw-transport-node-hid": "^5.15.0",
				"ascii-table": "0.0.9",
				"bn.js": "^5.1.1",
				"bs58": "^4.0.1",
				"chalk": "^4.0.0",
				"flagged-respawn": "^1.0.1",
				"is-ci": "^2.0.0",
				"jest-environment-node": "^26.0.0",
				"mixpanel": "^0.13.0",
				"ncp": "^2.0.0",
				"near-api-js": "^0.39.0",
				"near-ledger-js": "^0.1.1",
				"near-seed-phrase": "^0.1.0",
				"near-web3-provider": "^1.0.6",
				"open": "^7.0.1",
				"rimraf": "^3.0.0",
				"stoppable": "^1.1.0",
				"tcp-port-used": "^1.0.1",
				"update-notifier": "^5.0.0",
				"uuid": "^8.0.0",
				"v8flags": "^3.1.3",
				"web3": "^1.2.11",
				"yargs": "^16.0.3"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					},
					"dependencies": {
						"@types/bn.js": {
							"version": "4.11.6",
							"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
							"integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
							"dev": true,
							"requires": {
								"@types/node": "*"
							}
						}
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"cliui": {
					"version": "7.0.4",
					"resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
					"integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
					"dev": true,
					"requires": {
						"string-width": "^4.2.0",
						"strip-ansi": "^6.0.0",
						"wrap-ansi": "^7.0.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"near-api-js": {
					"version": "0.39.0",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.39.0.tgz",
					"integrity": "sha512-RX2oLOg438QCY3UQLb6FMkXmInFQIS0S+xg/auNZP292ySsMTKppoD07g/ExEFbW8Uyej8/TvjhBjKxnDBUigQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				},
				"wrap-ansi": {
					"version": "7.0.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
					"integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.0.0",
						"string-width": "^4.1.0",
						"strip-ansi": "^6.0.0"
					}
				},
				"y18n": {
					"version": "5.0.8",
					"resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
					"integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
					"dev": true
				},
				"yargs": {
					"version": "16.2.0",
					"resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
					"integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
					"dev": true,
					"requires": {
						"cliui": "^7.0.2",
						"escalade": "^3.1.1",
						"get-caller-file": "^2.0.5",
						"require-directory": "^2.1.1",
						"string-width": "^4.2.0",
						"y18n": "^5.0.5",
						"yargs-parser": "^20.2.2"
					}
				},
				"yargs-parser": {
					"version": "20.2.9",
					"resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
					"integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
					"dev": true
				}
			}
		},
		"near-hd-key": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/near-hd-key/-/near-hd-key-1.2.1.tgz",
			"integrity": "sha512-SIrthcL5Wc0sps+2e1xGj3zceEa68TgNZDLuCx0daxmfTP7sFTB3/mtE2pYhlFsCxWoMn+JfID5E1NlzvvbRJg==",
			"dev": true,
			"requires": {
				"bip39": "3.0.2",
				"create-hmac": "1.1.7",
				"tweetnacl": "1.0.3"
			}
		},
		"near-ledger-js": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/near-ledger-js/-/near-ledger-js-0.1.2.tgz",
			"integrity": "sha512-Lvhmy3/imXL+MLkCLE/UiZs+sVeEgKTvbw2y2+pSy1WN61axe4BJE6o58Ju/X5LaFdfMAjAHGE8kPl08g7KG5Q==",
			"dev": true,
			"optional": true,
			"requires": {
				"bs58": "^4.0.1"
			}
		},
		"near-seed-phrase": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/near-seed-phrase/-/near-seed-phrase-0.1.1.tgz",
			"integrity": "sha512-SuyazZJNbgZeracALTqwPj8sekduR6LG/V4ifDHGgSjQrLzbldXdv7gK1RUB3xphJ/EX2rsiBhbJMqqWA5DPwg==",
			"dev": true,
			"requires": {
				"bip39-light": "^1.0.7",
				"bs58": "^4.0.1",
				"near-hd-key": "^1.2.1",
				"tweetnacl": "^1.0.2"
			}
		},
		"near-web3-provider": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/near-web3-provider/-/near-web3-provider-1.2.0.tgz",
			"integrity": "sha512-+PRqAe+bcbJVR2M/FHyXmK0YPj7J6zzNPCXESiynm6mJrGn7mi6Bjo0LqrK0kAKKLSI9twlaSx/if93QKJdEbg==",
			"dev": true,
			"requires": {
				"bn.js": "^5.1.2",
				"bs58": "^4.0.1",
				"bsert": "0.0.10",
				"eth-sig-util": "^2.5.3",
				"near-api-js": "^0.36.2",
				"rlp": "^2.2.6",
				"tweetnacl": "^1.0.3",
				"web3-provider-engine": "^15.0.7",
				"web3-utils": "1.3.3"
			},
			"dependencies": {
				"borsh": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/borsh/-/borsh-0.3.1.tgz",
					"integrity": "sha512-gJoSTnhwLxN/i2+15Y7uprU8h3CKI+Co4YKZKvrGYUy0FwHWM20x5Sx7eU8Xv4HQqV+7rb4r3P7K1cBIQe3q8A==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"bs58": "^4.0.0",
						"text-encoding-utf-8": "^1.0.2"
					}
				},
				"near-api-js": {
					"version": "0.36.3",
					"resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.36.3.tgz",
					"integrity": "sha512-/pWMoUkoP3/8XJRL+uHUReW40XCa31+33tZX2QgACvrMHXJ41HzEK9+RxjaSDsJZ70BtOB4ybfuk4Pj5MEhqCQ==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^4.11.5",
						"bn.js": "^5.0.0",
						"borsh": "^0.3.1",
						"bs58": "^4.0.0",
						"depd": "^2.0.0",
						"error-polyfill": "^0.1.2",
						"http-errors": "^1.7.2",
						"js-sha256": "^0.9.0",
						"mustache": "^4.0.0",
						"node-fetch": "^2.6.1",
						"text-encoding-utf-8": "^1.0.2",
						"tweetnacl": "^1.0.1"
					}
				},
				"underscore": {
					"version": "1.9.1",
					"resolved": "https://registry.npmjs.org/underscore/-/underscore-1.9.1.tgz",
					"integrity": "sha512-5/4etnCkd9c8gwgowi5/om/mYO5ajCaOgdzj/oW+0eQV9WxKBDZw5+ycmKmeaTXjInS/W0BzpGLo2xR2aBwZdg==",
					"dev": true
				},
				"web3-utils": {
					"version": "1.3.3",
					"resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.3.3.tgz",
					"integrity": "sha512-ZwpdqEcBBzqRgXUbCj+kyu1jFnsDauURSQ79yVqgnTKSI4C3s0Qjpp4WLThV+LKhCKR5GZtBTkgGHeiq0FT88A==",
					"dev": true,
					"requires": {
						"bn.js": "^4.11.9",
						"eth-lib": "0.2.8",
						"ethereum-bloom-filters": "^1.0.6",
						"ethjs-unit": "0.1.6",
						"number-to-bn": "1.7.0",
						"randombytes": "^2.1.0",
						"underscore": "1.9.1",
						"utf8": "3.0.0"
					},
					"dependencies": {
						"bn.js": {
							"version": "4.12.0",
							"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
							"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
							"dev": true
						}
					}
				}
			}
		},
		"negotiator": {
			"version": "0.6.2",
			"resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
			"integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==",
			"dev": true
		},
		"neo-async": {
			"version": "2.6.2",
			"resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
			"integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
			"dev": true
		},
		"nested-error-stacks": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-1.0.2.tgz",
			"integrity": "sha1-GfYZWRUZ8JZ2mlupqG5u7sgjw88=",
			"requires": {
				"inherits": "~2.0.1"
			}
		},
		"next-tick": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
			"integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw=",
			"dev": true
		},
		"nice-try": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
			"integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ=="
		},
		"node-abi": {
			"version": "2.30.0",
			"resolved": "https://registry.npmjs.org/node-abi/-/node-abi-2.30.0.tgz",
			"integrity": "sha512-g6bZh3YCKQRdwuO/tSZZYJAw622SjsRfJ2X0Iy4sSOHZ34/sPPdVBn8fev2tj7njzLwuqPw9uMtGsGkO5kIQvg==",
			"dev": true,
			"optional": true,
			"requires": {
				"semver": "^5.4.1"
			},
			"dependencies": {
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
					"dev": true,
					"optional": true
				}
			}
		},
		"node-addon-api": {
			"version": "3.2.1",
			"resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.2.1.tgz",
			"integrity": "sha512-mmcei9JghVNDYydghQmeDX8KoAm0FAiYyIcUt/N4nhyAipB17pllZQDOJD2fotxABnt4Mdz+dKTO7eftLg4d0A==",
			"dev": true,
			"optional": true
		},
		"node-fetch": {
			"version": "2.6.1",
			"resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
			"integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw=="
		},
		"node-forge": {
			"version": "0.10.0",
			"resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.10.0.tgz",
			"integrity": "sha512-PPmu8eEeG9saEUvI97fm4OYxXVB6bFvyNTyiUOBichBpFG8A1Ljw3bY62+5oOjDEMHRnd0Y7HQ+x7uzxOzC6JA==",
			"dev": true
		},
		"node-gyp": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-5.1.1.tgz",
			"integrity": "sha512-WH0WKGi+a4i4DUt2mHnvocex/xPLp9pYt5R6M2JdFB7pJ7Z34hveZ4nDTGTiLXCkitA9T8HFZjhinBCiVHYcWw==",
			"dev": true,
			"requires": {
				"env-paths": "^2.2.0",
				"glob": "^7.1.4",
				"graceful-fs": "^4.2.2",
				"mkdirp": "^0.5.1",
				"nopt": "^4.0.1",
				"npmlog": "^4.1.2",
				"request": "^2.88.0",
				"rimraf": "^2.6.3",
				"semver": "^5.7.1",
				"tar": "^4.4.12",
				"which": "^1.3.1"
			},
			"dependencies": {
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"dev": true,
					"requires": {
						"glob": "^7.1.3"
					}
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
					"dev": true
				}
			}
		},
		"node-gyp-build": {
			"version": "4.2.3",
			"resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.2.3.tgz",
			"integrity": "sha512-MN6ZpzmfNCRM+3t57PTJHgHyw/h4OWnZ6mR8P5j/uZtqQr46RRuDE/P+g3n0YR/AiYXeWixZZzaip77gdICfRg==",
			"dev": true
		},
		"node-hid": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/node-hid/-/node-hid-2.1.1.tgz",
			"integrity": "sha512-Skzhqow7hyLZU93eIPthM9yjot9lszg9xrKxESleEs05V2NcbUptZc5HFqzjOkSmL0sFlZFr3kmvaYebx06wrw==",
			"dev": true,
			"optional": true,
			"requires": {
				"bindings": "^1.5.0",
				"node-addon-api": "^3.0.2",
				"prebuild-install": "^6.0.0"
			}
		},
		"node-int64": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",
			"integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs=",
			"dev": true
		},
		"node-libs-browser": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.1.tgz",
			"integrity": "sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==",
			"dev": true,
			"requires": {
				"assert": "^1.1.1",
				"browserify-zlib": "^0.2.0",
				"buffer": "^4.3.0",
				"console-browserify": "^1.1.0",
				"constants-browserify": "^1.0.0",
				"crypto-browserify": "^3.11.0",
				"domain-browser": "^1.1.1",
				"events": "^3.0.0",
				"https-browserify": "^1.0.0",
				"os-browserify": "^0.3.0",
				"path-browserify": "0.0.1",
				"process": "^0.11.10",
				"punycode": "^1.2.4",
				"querystring-es3": "^0.2.0",
				"readable-stream": "^2.3.3",
				"stream-browserify": "^2.0.1",
				"stream-http": "^2.7.2",
				"string_decoder": "^1.0.0",
				"timers-browserify": "^2.0.4",
				"tty-browserify": "0.0.0",
				"url": "^0.11.0",
				"util": "^0.11.0",
				"vm-browserify": "^1.0.1"
			},
			"dependencies": {
				"buffer": {
					"version": "4.9.2",
					"resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz",
					"integrity": "sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==",
					"dev": true,
					"requires": {
						"base64-js": "^1.0.2",
						"ieee754": "^1.1.4",
						"isarray": "^1.0.0"
					}
				},
				"punycode": {
					"version": "1.4.1",
					"resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
					"integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
					"dev": true
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					},
					"dependencies": {
						"string_decoder": {
							"version": "1.1.1",
							"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
							"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
							"dev": true,
							"requires": {
								"safe-buffer": "~5.1.0"
							}
						}
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"util": {
					"version": "0.11.1",
					"resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",
					"integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",
					"dev": true,
					"requires": {
						"inherits": "2.0.3"
					},
					"dependencies": {
						"inherits": {
							"version": "2.0.3",
							"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
							"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
							"dev": true
						}
					}
				}
			}
		},
		"node-modules-regexp": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/node-modules-regexp/-/node-modules-regexp-1.0.0.tgz",
			"integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA=",
			"dev": true
		},
		"node-notifier": {
			"version": "8.0.2",
			"resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-8.0.2.tgz",
			"integrity": "sha512-oJP/9NAdd9+x2Q+rfphB2RJCHjod70RcRLjosiPMMu5gjIfwVnOUGq2nbTjTUbmy0DJ/tFIVT30+Qe3nzl4TJg==",
			"dev": true,
			"optional": true,
			"requires": {
				"growly": "^1.3.0",
				"is-wsl": "^2.2.0",
				"semver": "^7.3.2",
				"shellwords": "^0.1.1",
				"uuid": "^8.3.0",
				"which": "^2.0.2"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"optional": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"dev": true,
					"optional": true,
					"requires": {
						"isexe": "^2.0.0"
					}
				}
			}
		},
		"node-releases": {
			"version": "1.1.73",
			"resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.73.tgz",
			"integrity": "sha512-uW7fodD6pyW2FZNZnp/Z3hvWKeEW1Y8R1+1CnErE8cXFXzl5blBOoVB41CvMer6P6Q0S5FXDwcHgFd1Wj0U9zg==",
			"dev": true
		},
		"nodemon": {
			"version": "2.0.12",
			"resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.12.tgz",
			"integrity": "sha512-egCTmNZdObdBxUBw6ZNwvZ/xzk24CKRs5K6d+5zbmrMr7rOpPmfPeF6OxM3DDpaRx331CQRFEktn+wrFFfBSOA==",
			"dev": true,
			"requires": {
				"chokidar": "^3.2.2",
				"debug": "^3.2.6",
				"ignore-by-default": "^1.0.1",
				"minimatch": "^3.0.4",
				"pstree.remy": "^1.1.7",
				"semver": "^5.7.1",
				"supports-color": "^5.5.0",
				"touch": "^3.1.0",
				"undefsafe": "^2.0.3",
				"update-notifier": "^4.1.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"boxen": {
					"version": "4.2.0",
					"resolved": "https://registry.npmjs.org/boxen/-/boxen-4.2.0.tgz",
					"integrity": "sha512-eB4uT9RGzg2odpER62bBwSLvUeGC+WbRjjyyFhGsKnc8wp/m0+hQsMUvUe3H2V0D5vw0nBdO1hCJoZo5mKeuIQ==",
					"dev": true,
					"requires": {
						"ansi-align": "^3.0.0",
						"camelcase": "^5.3.1",
						"chalk": "^3.0.0",
						"cli-boxes": "^2.2.0",
						"string-width": "^4.1.0",
						"term-size": "^2.1.0",
						"type-fest": "^0.8.1",
						"widest-line": "^3.1.0"
					}
				},
				"chalk": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
					"integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					},
					"dependencies": {
						"supports-color": {
							"version": "7.2.0",
							"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
							"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
							"dev": true,
							"requires": {
								"has-flag": "^4.0.0"
							}
						}
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"debug": {
					"version": "3.2.7",
					"resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
					"integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
					"dev": true,
					"requires": {
						"ms": "^2.1.1"
					}
				},
				"global-dirs": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/global-dirs/-/global-dirs-2.1.0.tgz",
					"integrity": "sha512-MG6kdOUh/xBnyo9cJFeIKkLEc1AyFq42QTU4XiX51i2NEdxLxLWXIjEjmqKeSuKR7pAZjTqUVoT2b2huxVLgYQ==",
					"dev": true,
					"requires": {
						"ini": "1.3.7"
					}
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"ini": {
					"version": "1.3.7",
					"resolved": "https://registry.npmjs.org/ini/-/ini-1.3.7.tgz",
					"integrity": "sha512-iKpRpXP+CrP2jyrxvg1kMUpXDyRUFDWurxbnVT1vQPx+Wz9uCYsMIqYuSBLV+PAaZG/d7kRLKRFc9oDMsH+mFQ==",
					"dev": true
				},
				"is-installed-globally": {
					"version": "0.3.2",
					"resolved": "https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.3.2.tgz",
					"integrity": "sha512-wZ8x1js7Ia0kecP/CHM/3ABkAmujX7WPvQk6uu3Fly/Mk44pySulQpnHG46OMjHGXApINnV4QhY3SWnECO2z5g==",
					"dev": true,
					"requires": {
						"global-dirs": "^2.0.1",
						"is-path-inside": "^3.0.1"
					}
				},
				"is-npm": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/is-npm/-/is-npm-4.0.0.tgz",
					"integrity": "sha512-96ECIfh9xtDDlPylNPXhzjsykHsMJZ18ASpaWzQyBr4YRTcVjUvzaHayDAES2oU/3KpljhHUjtSRNiDwi0F0ig==",
					"dev": true
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
					"dev": true
				},
				"update-notifier": {
					"version": "4.1.3",
					"resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-4.1.3.tgz",
					"integrity": "sha512-Yld6Z0RyCYGB6ckIjffGOSOmHXj1gMeE7aROz4MG+XMkmixBX4jUngrGXNYz7wPKBmtoD4MnBa2Anu7RSKht/A==",
					"dev": true,
					"requires": {
						"boxen": "^4.2.0",
						"chalk": "^3.0.0",
						"configstore": "^5.0.1",
						"has-yarn": "^2.1.0",
						"import-lazy": "^2.1.0",
						"is-ci": "^2.0.0",
						"is-installed-globally": "^0.3.1",
						"is-npm": "^4.0.0",
						"is-yarn-global": "^0.3.0",
						"latest-version": "^5.0.0",
						"pupa": "^2.0.1",
						"semver-diff": "^3.1.1",
						"xdg-basedir": "^4.0.0"
					}
				}
			}
		},
		"noop-logger": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/noop-logger/-/noop-logger-0.1.1.tgz",
			"integrity": "sha1-lKKxYzxPExdVMAfYlm/Q6EG2pMI=",
			"dev": true,
			"optional": true
		},
		"nopt": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz",
			"integrity": "sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==",
			"dev": true,
			"requires": {
				"abbrev": "1",
				"osenv": "^0.1.4"
			}
		},
		"normalize-package-data": {
			"version": "2.5.0",
			"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
			"integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
			"requires": {
				"hosted-git-info": "^2.1.4",
				"resolve": "^1.10.0",
				"semver": "2 || 3 || 4 || 5",
				"validate-npm-package-license": "^3.0.1"
			},
			"dependencies": {
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
				}
			}
		},
		"normalize-path": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
			"integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
			"dev": true
		},
		"normalize-url": {
			"version": "1.9.1",
			"resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-1.9.1.tgz",
			"integrity": "sha1-LMDWazHqIwNkWENuNiDYWVTGbDw=",
			"dev": true,
			"requires": {
				"object-assign": "^4.0.1",
				"prepend-http": "^1.0.0",
				"query-string": "^4.1.0",
				"sort-keys": "^1.0.0"
			},
			"dependencies": {
				"query-string": {
					"version": "4.3.4",
					"resolved": "https://registry.npmjs.org/query-string/-/query-string-4.3.4.tgz",
					"integrity": "sha1-u7aTucqRXCMlFbIosaArYJBD2+s=",
					"dev": true,
					"requires": {
						"object-assign": "^4.1.0",
						"strict-uri-encode": "^1.0.0"
					}
				}
			}
		},
		"npm-api": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/npm-api/-/npm-api-1.0.1.tgz",
			"integrity": "sha512-4sITrrzEbPcr0aNV28QyOmgn6C9yKiF8k92jn4buYAK8wmA5xo1qL3II5/gT1r7wxbXBflSduZ2K3FbtOrtGkA==",
			"requires": {
				"JSONStream": "^1.3.5",
				"clone-deep": "^4.0.1",
				"download-stats": "^0.3.4",
				"moment": "^2.24.0",
				"node-fetch": "^2.6.0",
				"paged-request": "^2.0.1"
			}
		},
		"npm-bundled": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.2.tgz",
			"integrity": "sha512-x5DHup0SuyQcmL3s7Rx/YQ8sbw/Hzg0rj48eN0dV7hf5cmQq5PXIeioroH3raV1QC1yh3uTYuMThvEQF3iKgGQ==",
			"dev": true,
			"requires": {
				"npm-normalize-package-bin": "^1.0.1"
			}
		},
		"npm-install-checks": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/npm-install-checks/-/npm-install-checks-4.0.0.tgz",
			"integrity": "sha512-09OmyDkNLYwqKPOnbI8exiOZU2GVVmQp7tgez2BPi5OZC8M82elDAps7sxC4l//uSUtotWqoEIDwjRvWH4qz8w==",
			"dev": true,
			"requires": {
				"semver": "^7.1.1"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"npm-lifecycle": {
			"version": "3.1.5",
			"resolved": "https://registry.npmjs.org/npm-lifecycle/-/npm-lifecycle-3.1.5.tgz",
			"integrity": "sha512-lDLVkjfZmvmfvpvBzA4vzee9cn+Me4orq0QF8glbswJVEbIcSNWib7qGOffolysc3teCqbbPZZkzbr3GQZTL1g==",
			"dev": true,
			"requires": {
				"byline": "^5.0.0",
				"graceful-fs": "^4.1.15",
				"node-gyp": "^5.0.2",
				"resolve-from": "^4.0.0",
				"slide": "^1.1.6",
				"uid-number": "0.0.6",
				"umask": "^1.1.0",
				"which": "^1.3.1"
			},
			"dependencies": {
				"resolve-from": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
					"integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
					"dev": true
				}
			}
		},
		"npm-normalize-package-bin": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
			"integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==",
			"dev": true
		},
		"npm-package-arg": {
			"version": "8.1.5",
			"resolved": "https://registry.npmjs.org/npm-package-arg/-/npm-package-arg-8.1.5.tgz",
			"integrity": "sha512-LhgZrg0n0VgvzVdSm1oiZworPbTxYHUJCgtsJW8mGvlDpxTM1vSJc3m5QZeUkhAHIzbz3VCHd/R4osi1L1Tg/Q==",
			"dev": true,
			"requires": {
				"hosted-git-info": "^4.0.1",
				"semver": "^7.3.4",
				"validate-npm-package-name": "^3.0.0"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"npm-packlist": {
			"version": "2.2.2",
			"resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-2.2.2.tgz",
			"integrity": "sha512-Jt01acDvJRhJGthnUJVF/w6gumWOZxO7IkpY/lsX9//zqQgnF7OJaxgQXcerd4uQOLu7W5bkb4mChL9mdfm+Zg==",
			"dev": true,
			"requires": {
				"glob": "^7.1.6",
				"ignore-walk": "^3.0.3",
				"npm-bundled": "^1.1.1",
				"npm-normalize-package-bin": "^1.0.1"
			}
		},
		"npm-pick-manifest": {
			"version": "6.1.1",
			"resolved": "https://registry.npmjs.org/npm-pick-manifest/-/npm-pick-manifest-6.1.1.tgz",
			"integrity": "sha512-dBsdBtORT84S8V8UTad1WlUyKIY9iMsAmqxHbLdeEeBNMLQDlDWWra3wYUx9EBEIiG/YwAy0XyNHDd2goAsfuA==",
			"dev": true,
			"requires": {
				"npm-install-checks": "^4.0.0",
				"npm-normalize-package-bin": "^1.0.1",
				"npm-package-arg": "^8.1.2",
				"semver": "^7.3.4"
			},
			"dependencies": {
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				}
			}
		},
		"npm-registry-fetch": {
			"version": "11.0.0",
			"resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-11.0.0.tgz",
			"integrity": "sha512-jmlgSxoDNuhAtxUIG6pVwwtz840i994dL14FoNVZisrmZW5kWd63IUTNv1m/hyRSGSqWjCUp/YZlS1BJyNp9XA==",
			"dev": true,
			"requires": {
				"make-fetch-happen": "^9.0.1",
				"minipass": "^3.1.3",
				"minipass-fetch": "^1.3.0",
				"minipass-json-stream": "^1.0.1",
				"minizlib": "^2.0.0",
				"npm-package-arg": "^8.0.0"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"npm-run-path": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
			"integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
			"requires": {
				"path-key": "^2.0.0"
			}
		},
		"npmlog": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
			"integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
			"dev": true,
			"requires": {
				"are-we-there-yet": "~1.1.2",
				"console-control-strings": "~1.1.0",
				"gauge": "~2.7.3",
				"set-blocking": "~2.0.0"
			}
		},
		"nps-utils": {
			"version": "1.7.0",
			"resolved": "https://registry.npmjs.org/nps-utils/-/nps-utils-1.7.0.tgz",
			"integrity": "sha512-wq/gUxTR3sgLYTLHlUKwMG2paUV3QdfwMj5aifWpQ60Vv9RQzA6pXDkwrAlMA8SNqoz8FwaGPc1X/7I+qjuYwg==",
			"requires": {
				"any-shell-escape": "^0.1.1",
				"common-tags": "^1.4.0",
				"concurrently": "^3.4.0",
				"cpy-cli": "^1.0.1",
				"cross-env": "^3.1.4",
				"is-windows": "^1.0.0",
				"mkdirp": "^0.5.1",
				"ncp": "2.0.0",
				"opn-cli": "^3.1.0",
				"rimraf": "^2.6.1"
			},
			"dependencies": {
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"requires": {
						"glob": "^7.1.3"
					}
				}
			}
		},
		"nth-check": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",
			"integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",
			"dev": true,
			"requires": {
				"boolbase": "~1.0.0"
			}
		},
		"number-is-nan": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
			"integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
		},
		"number-to-bn": {
			"version": "1.7.0",
			"resolved": "https://registry.npmjs.org/number-to-bn/-/number-to-bn-1.7.0.tgz",
			"integrity": "sha1-uzYjWS9+X54AMLGXe9QaDFP+HqA=",
			"dev": true,
			"requires": {
				"bn.js": "4.11.6",
				"strip-hex-prefix": "1.0.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.11.6",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
					"integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU=",
					"dev": true
				}
			}
		},
		"nwsapi": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.0.tgz",
			"integrity": "sha512-h2AatdwYH+JHiZpv7pt/gSX1XoRGb7L/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshRK5893hNSl+1//vHK7hQ==",
			"dev": true
		},
		"o3": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
			"integrity": "sha1-GSzod6iC36Z1HwQSqGX6+y2h2sA=",
			"requires": {
				"capability": "^0.2.5"
			}
		},
		"oauth-sign": {
			"version": "0.9.0",
			"resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
			"integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
			"dev": true
		},
		"object-assign": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
			"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
		},
		"object-copy": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
			"integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
			"requires": {
				"copy-descriptor": "^0.1.0",
				"define-property": "^0.2.5",
				"kind-of": "^3.0.3"
			},
			"dependencies": {
				"define-property": {
					"version": "0.2.5",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
					"integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
					"requires": {
						"is-descriptor": "^0.1.0"
					}
				},
				"kind-of": {
					"version": "3.2.2",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
					"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"object-inspect": {
			"version": "1.11.0",
			"resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.11.0.tgz",
			"integrity": "sha512-jp7ikS6Sd3GxQfZJPyH3cjcbJF6GZPClgdV+EFygjFLQ5FmW/dRUnTd9PQ9k0JhoNDabWFbpF1yCdSWCC6gexg==",
			"dev": true
		},
		"object-keys": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
			"integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
			"dev": true
		},
		"object-treeify": {
			"version": "1.1.33",
			"resolved": "https://registry.npmjs.org/object-treeify/-/object-treeify-1.1.33.tgz",
			"integrity": "sha512-EFVjAYfzWqWsBMRHPMAXLCDIJnpMhdWAqR7xG6M6a2cs6PMFpl/+Z20w9zDW4vkxOFfddegBKq9Rehd0bxWE7A=="
		},
		"object-visit": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
			"integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
			"requires": {
				"isobject": "^3.0.0"
			}
		},
		"object.assign": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.2.tgz",
			"integrity": "sha512-ixT2L5THXsApyiUPYKmW+2EHpXXe5Ii3M+f4e+aJFAHao5amFRW6J0OO6c/LU8Be47utCx2GL89hxGB6XSmKuQ==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.0",
				"define-properties": "^1.1.3",
				"has-symbols": "^1.0.1",
				"object-keys": "^1.1.1"
			}
		},
		"object.getownpropertydescriptors": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.1.2.tgz",
			"integrity": "sha512-WtxeKSzfBjlzL+F9b7M7hewDzMwy+C8NRssHd1YrNlzHzIDrXcXiNOMrezdAEM4UXixgV+vvnyBeN7Rygl2ttQ==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"define-properties": "^1.1.3",
				"es-abstract": "^1.18.0-next.2"
			}
		},
		"object.pick": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
			"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
			"requires": {
				"isobject": "^3.0.1"
			}
		},
		"object.values": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.4.tgz",
			"integrity": "sha512-TnGo7j4XSnKQoK3MfvkzqKCi0nVe/D9I9IjwTNYdb/fxYHpjrluHVOgw0AF6jrRFGMPHdfuidR09tIDiIvnaSg==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"define-properties": "^1.1.3",
				"es-abstract": "^1.18.2"
			}
		},
		"oblivious-set": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/oblivious-set/-/oblivious-set-1.0.0.tgz",
			"integrity": "sha512-z+pI07qxo4c2CulUHCDf9lcqDlMSo72N/4rLUpRXf6fu+q8vjt8y0xS+Tlf8NTJDdTXHbdeO1n3MlbctwEoXZw==",
			"dev": true
		},
		"oboe": {
			"version": "2.1.5",
			"resolved": "https://registry.npmjs.org/oboe/-/oboe-2.1.5.tgz",
			"integrity": "sha1-VVQoTFQ6ImbXo48X4HOCH73jk80=",
			"dev": true,
			"requires": {
				"http-https": "^1.0.0"
			}
		},
		"oclif": {
			"version": "1.18.1",
			"resolved": "https://registry.npmjs.org/oclif/-/oclif-1.18.1.tgz",
			"integrity": "sha512-bX9lwpEBHcWhUldHOCstS08JOo69lQfS3qCeimJRGdXKflewarwEWZiWG2vTJi30KuwT0YyObCAJO7Ux1XI9ew==",
			"requires": {
				"@oclif/command": "^1.6",
				"@oclif/config": "^1.12.6",
				"@oclif/errors": "^1.2.2",
				"@oclif/fixpack": "^2.3.0",
				"@oclif/plugin-help": "^3",
				"@oclif/plugin-not-found": "^1.2.2",
				"@oclif/plugin-warn-if-update-available": "^1.5.4",
				"cli-ux": "^5.2.1",
				"debug": "^4.1.1",
				"find-yarn-workspace-root": "^2.0.0",
				"fs-extra": "^8.1",
				"github-slugger": "^1.2.1",
				"lodash": "^4.17.11",
				"normalize-package-data": "^3.0.0",
				"nps-utils": "^1.7.0",
				"qqjs": "^0.3.10",
				"sort-pjson": "^1.0.3",
				"tslib": "^2.0.0",
				"yeoman-environment": "^2.3.4",
				"yeoman-generator": "3",
				"yosay": "^2.0.2"
			},
			"dependencies": {
				"hosted-git-info": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-4.0.2.tgz",
					"integrity": "sha512-c9OGXbZ3guC/xOlCg1Ci/VgWlwsqDv1yMQL1CWqXDL0hDjXuNcq0zuR4xqPSuasI3kqFDhqSyTjREz5gzq0fXg==",
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"normalize-package-data": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-3.0.2.tgz",
					"integrity": "sha512-6CdZocmfGaKnIHPVFhJJZ3GuR8SsLKvDANFp47Jmy51aKIr8akjAWTSxtpI+MBgBFdSMRyo4hMpDlT6dTffgZg==",
					"requires": {
						"hosted-git-info": "^4.0.1",
						"resolve": "^1.20.0",
						"semver": "^7.3.4",
						"validate-npm-package-license": "^3.0.1"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"tslib": {
					"version": "2.3.0",
					"resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.0.tgz",
					"integrity": "sha512-N82ooyxVNm6h1riLCoyS9e3fuJ3AMG2zIZs2Gd1ATcSFjSA23Q0fzjjZeh0jbJvWVDZ0cJT8yaNNaaXHzueNjg=="
				}
			}
		},
		"on-finished": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
			"integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
			"dev": true,
			"requires": {
				"ee-first": "1.1.1"
			}
		},
		"once": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
			"integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
			"requires": {
				"wrappy": "1"
			}
		},
		"onetime": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
			"integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
			"requires": {
				"mimic-fn": "^2.1.0"
			}
		},
		"open": {
			"version": "7.4.2",
			"resolved": "https://registry.npmjs.org/open/-/open-7.4.2.tgz",
			"integrity": "sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==",
			"dev": true,
			"requires": {
				"is-docker": "^2.0.0",
				"is-wsl": "^2.1.1"
			}
		},
		"opn": {
			"version": "5.5.0",
			"resolved": "https://registry.npmjs.org/opn/-/opn-5.5.0.tgz",
			"integrity": "sha512-PqHpggC9bLV0VeWcdKhkpxY+3JTzetLSqTCWL/z/tFIbI6G8JCjondXklT1JinczLz2Xib62sSp0T/gKT4KksA==",
			"dev": true,
			"requires": {
				"is-wsl": "^1.1.0"
			},
			"dependencies": {
				"is-wsl": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
					"integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
					"dev": true
				}
			}
		},
		"opn-cli": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/opn-cli/-/opn-cli-3.1.0.tgz",
			"integrity": "sha1-+BmubK4LQRvQFJuFYP5siK2tIPg=",
			"requires": {
				"file-type": "^3.6.0",
				"get-stdin": "^5.0.1",
				"meow": "^3.7.0",
				"opn": "^4.0.0",
				"temp-write": "^2.1.0"
			},
			"dependencies": {
				"camelcase": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
					"integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8="
				},
				"camelcase-keys": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz",
					"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
					"requires": {
						"camelcase": "^2.0.0",
						"map-obj": "^1.0.0"
					}
				},
				"find-up": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
					"integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
					"requires": {
						"path-exists": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"get-stdin": {
					"version": "5.0.1",
					"resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz",
					"integrity": "sha1-Ei4WFZHiH/TFJTAwVpPyDmOTo5g="
				},
				"indent-string": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz",
					"integrity": "sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=",
					"requires": {
						"repeating": "^2.0.0"
					}
				},
				"load-json-file": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
					"integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^2.2.0",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0",
						"strip-bom": "^2.0.0"
					}
				},
				"map-obj": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz",
					"integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0="
				},
				"meow": {
					"version": "3.7.0",
					"resolved": "https://registry.npmjs.org/meow/-/meow-3.7.0.tgz",
					"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
					"requires": {
						"camelcase-keys": "^2.0.0",
						"decamelize": "^1.1.2",
						"loud-rejection": "^1.0.0",
						"map-obj": "^1.0.1",
						"minimist": "^1.1.3",
						"normalize-package-data": "^2.3.4",
						"object-assign": "^4.0.1",
						"read-pkg-up": "^1.0.1",
						"redent": "^1.0.0",
						"trim-newlines": "^1.0.0"
					}
				},
				"opn": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/opn/-/opn-4.0.2.tgz",
					"integrity": "sha1-erwi5kTf9jsKltWrfyeQwPAavJU=",
					"requires": {
						"object-assign": "^4.0.1",
						"pinkie-promise": "^2.0.0"
					}
				},
				"parse-json": {
					"version": "2.2.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
					"integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
					"requires": {
						"error-ex": "^1.2.0"
					}
				},
				"path-exists": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
					"integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
					"requires": {
						"pinkie-promise": "^2.0.0"
					}
				},
				"path-type": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
					"integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"pify": "^2.0.0",
						"pinkie-promise": "^2.0.0"
					}
				},
				"read-pkg": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
					"integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
					"requires": {
						"load-json-file": "^1.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^1.0.0"
					}
				},
				"read-pkg-up": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
					"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
					"requires": {
						"find-up": "^1.0.0",
						"read-pkg": "^1.0.0"
					}
				},
				"redent": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/redent/-/redent-1.0.0.tgz",
					"integrity": "sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=",
					"requires": {
						"indent-string": "^2.1.0",
						"strip-indent": "^1.0.1"
					}
				},
				"strip-bom": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
					"integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
					"requires": {
						"is-utf8": "^0.2.0"
					}
				},
				"strip-indent": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz",
					"integrity": "sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=",
					"requires": {
						"get-stdin": "^4.0.1"
					},
					"dependencies": {
						"get-stdin": {
							"version": "4.0.1",
							"resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz",
							"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4="
						}
					}
				},
				"temp-write": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/temp-write/-/temp-write-2.1.0.tgz",
					"integrity": "sha1-WYkJGODvCdVIqqNC9L00CdhATpY=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"mkdirp": "^0.5.0",
						"os-tmpdir": "^1.0.0",
						"pify": "^2.2.0",
						"pinkie-promise": "^2.0.0",
						"uuid": "^2.0.1"
					}
				},
				"trim-newlines": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz",
					"integrity": "sha1-WIeWa7WCpFA6QetST301ARgVphM="
				},
				"uuid": {
					"version": "2.0.3",
					"resolved": "https://registry.npmjs.org/uuid/-/uuid-2.0.3.tgz",
					"integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho="
				}
			}
		},
		"optionator": {
			"version": "0.8.3",
			"resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.3.tgz",
			"integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==",
			"dev": true,
			"requires": {
				"deep-is": "~0.1.3",
				"fast-levenshtein": "~2.0.6",
				"levn": "~0.3.0",
				"prelude-ls": "~1.1.2",
				"type-check": "~0.3.2",
				"word-wrap": "~1.2.3"
			}
		},
		"ora": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/ora/-/ora-2.1.0.tgz",
			"integrity": "sha512-hNNlAd3gfv/iPmsNxYoAPLvxg7HuPozww7fFonMZvL84tP6Ox5igfk5j/+a9rtJJwqMgKK+JgWsAQik5o0HTLA==",
			"dev": true,
			"requires": {
				"chalk": "^2.3.1",
				"cli-cursor": "^2.1.0",
				"cli-spinners": "^1.1.0",
				"log-symbols": "^2.2.0",
				"strip-ansi": "^4.0.0",
				"wcwidth": "^1.0.1"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
					"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
					"dev": true
				},
				"cli-cursor": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
					"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
					"dev": true,
					"requires": {
						"restore-cursor": "^2.0.0"
					}
				},
				"mimic-fn": {
					"version": "1.2.0",
					"resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
					"integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
					"dev": true
				},
				"onetime": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
					"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
					"dev": true,
					"requires": {
						"mimic-fn": "^1.0.0"
					}
				},
				"restore-cursor": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
					"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
					"dev": true,
					"requires": {
						"onetime": "^2.0.0",
						"signal-exit": "^3.0.2"
					}
				},
				"strip-ansi": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
					"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^3.0.0"
					}
				}
			}
		},
		"os-browserify": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",
			"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
			"dev": true
		},
		"os-homedir": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
			"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
			"dev": true
		},
		"os-tmpdir": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
			"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
		},
		"osenv": {
			"version": "0.1.5",
			"resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
			"integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
			"dev": true,
			"requires": {
				"os-homedir": "^1.0.0",
				"os-tmpdir": "^1.0.0"
			}
		},
		"p-cancelable": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
			"integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==",
			"dev": true
		},
		"p-each-series": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-2.2.0.tgz",
			"integrity": "sha512-ycIL2+1V32th+8scbpTvyHNaHe02z0sjgh91XXjAk+ZeXoPN4Z46DVUnzdso0aX4KckKw0FNNFHdjZ2UsZvxiA==",
			"dev": true
		},
		"p-finally": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
			"integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="
		},
		"p-limit": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
			"integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
			"requires": {
				"p-try": "^2.0.0"
			}
		},
		"p-locate": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
			"integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
			"requires": {
				"p-limit": "^2.2.0"
			}
		},
		"p-map": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
			"integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
			"dev": true,
			"requires": {
				"aggregate-error": "^3.0.0"
			}
		},
		"p-map-series": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/p-map-series/-/p-map-series-2.1.0.tgz",
			"integrity": "sha512-RpYIIK1zXSNEOdwxcfe7FdvGcs7+y5n8rifMhMNWvaxRNMPINJHF5GDeuVxWqnfrcHPSCnp7Oo5yNXHId9Av2Q==",
			"dev": true
		},
		"p-pipe": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/p-pipe/-/p-pipe-3.1.0.tgz",
			"integrity": "sha512-08pj8ATpzMR0Y80x50yJHn37NF6vjrqHutASaX5LiH5npS9XPvrUmscd9MF5R4fuYRHOxQR1FfMIlF7AzwoPqw==",
			"dev": true
		},
		"p-queue": {
			"version": "6.6.2",
			"resolved": "https://registry.npmjs.org/p-queue/-/p-queue-6.6.2.tgz",
			"integrity": "sha512-RwFpb72c/BhQLEXIZ5K2e+AhgNVmIejGlTgiB9MzZ0e93GRvqZ7uSi0dvRF7/XIXDeNkra2fNHBxTyPDGySpjQ==",
			"dev": true,
			"requires": {
				"eventemitter3": "^4.0.4",
				"p-timeout": "^3.2.0"
			}
		},
		"p-reduce": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/p-reduce/-/p-reduce-2.1.0.tgz",
			"integrity": "sha512-2USApvnsutq8uoxZBGbbWM0JIYLiEMJ9RlaN7fAzVNb9OZN0SHjjTTfIcb667XynS5Y1VhwDJVDa72TnPzAYWw==",
			"dev": true
		},
		"p-timeout": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-3.2.0.tgz",
			"integrity": "sha512-rhIwUycgwwKcP9yTOOFK/AKsAopjjCakVqLHePO3CC6Mir1Z99xT+R63jZxAT5lFZLa2inS5h+ZS2GvR99/FBg==",
			"dev": true,
			"requires": {
				"p-finally": "^1.0.0"
			}
		},
		"p-try": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
			"integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="
		},
		"p-waterfall": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/p-waterfall/-/p-waterfall-2.1.1.tgz",
			"integrity": "sha512-RRTnDb2TBG/epPRI2yYXsimO0v3BXC8Yd3ogr1545IaqKK17VGhbWVeGGN+XfCm/08OK8635nH31c8bATkHuSw==",
			"dev": true,
			"requires": {
				"p-reduce": "^2.0.0"
			}
		},
		"package-json": {
			"version": "6.5.0",
			"resolved": "https://registry.npmjs.org/package-json/-/package-json-6.5.0.tgz",
			"integrity": "sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==",
			"dev": true,
			"requires": {
				"got": "^9.6.0",
				"registry-auth-token": "^4.0.0",
				"registry-url": "^5.0.0",
				"semver": "^6.2.0"
			}
		},
		"pacote": {
			"version": "11.3.5",
			"resolved": "https://registry.npmjs.org/pacote/-/pacote-11.3.5.tgz",
			"integrity": "sha512-fT375Yczn4zi+6Hkk2TBe1x1sP8FgFsEIZ2/iWaXY2r/NkhDJfxbcn5paz1+RTFCyNf+dPnaoBDJoAxXSU8Bkg==",
			"dev": true,
			"requires": {
				"@npmcli/git": "^2.1.0",
				"@npmcli/installed-package-contents": "^1.0.6",
				"@npmcli/promise-spawn": "^1.2.0",
				"@npmcli/run-script": "^1.8.2",
				"cacache": "^15.0.5",
				"chownr": "^2.0.0",
				"fs-minipass": "^2.1.0",
				"infer-owner": "^1.0.4",
				"minipass": "^3.1.3",
				"mkdirp": "^1.0.3",
				"npm-package-arg": "^8.0.1",
				"npm-packlist": "^2.1.4",
				"npm-pick-manifest": "^6.0.0",
				"npm-registry-fetch": "^11.0.0",
				"promise-retry": "^2.0.1",
				"read-package-json-fast": "^2.0.1",
				"rimraf": "^3.0.2",
				"ssri": "^8.0.1",
				"tar": "^6.1.0"
			},
			"dependencies": {
				"chownr": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
					"integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
					"dev": true
				},
				"fs-minipass": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
					"integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0"
					}
				},
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				},
				"minizlib": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
					"integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
					"dev": true,
					"requires": {
						"minipass": "^3.0.0",
						"yallist": "^4.0.0"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
					"dev": true
				},
				"tar": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/tar/-/tar-6.1.0.tgz",
					"integrity": "sha512-DUCttfhsnLCjwoDoFcI+B2iJgYa93vBnDUATYEeRx6sntCTdN01VnqsIuTlALXla/LWooNg0yEGeB+Y8WdFxGA==",
					"dev": true,
					"requires": {
						"chownr": "^2.0.0",
						"fs-minipass": "^2.0.0",
						"minipass": "^3.0.0",
						"minizlib": "^2.1.1",
						"mkdirp": "^1.0.3",
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"pad-component": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/pad-component/-/pad-component-0.0.1.tgz",
			"integrity": "sha1-rR8izhvw/cDW3dkIrxfzUaQEuKw="
		},
		"paged-request": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/paged-request/-/paged-request-2.0.2.tgz",
			"integrity": "sha512-NWrGqneZImDdcMU/7vMcAOo1bIi5h/pmpJqe7/jdsy85BA/s5MSaU/KlpxwW/IVPmIwBcq2uKPrBWWhEWhtxag==",
			"requires": {
				"axios": "^0.21.1"
			}
		},
		"pako": {
			"version": "0.2.9",
			"resolved": "https://registry.npmjs.org/pako/-/pako-0.2.9.tgz",
			"integrity": "sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=",
			"dev": true
		},
		"parcel-bundler": {
			"version": "1.12.5",
			"resolved": "https://registry.npmjs.org/parcel-bundler/-/parcel-bundler-1.12.5.tgz",
			"integrity": "sha512-hpku8mW67U6PXQIenW6NBbphBOMb8XzW6B9r093DUhYj5GN2FUB/CXCiz5hKoPYUsusZ35BpProH8AUF9bh5IQ==",
			"dev": true,
			"requires": {
				"@babel/code-frame": "^7.0.0",
				"@babel/core": "^7.4.4",
				"@babel/generator": "^7.4.4",
				"@babel/parser": "^7.4.4",
				"@babel/plugin-transform-flow-strip-types": "^7.4.4",
				"@babel/plugin-transform-modules-commonjs": "^7.4.4",
				"@babel/plugin-transform-react-jsx": "^7.0.0",
				"@babel/preset-env": "^7.4.4",
				"@babel/runtime": "^7.4.4",
				"@babel/template": "^7.4.4",
				"@babel/traverse": "^7.4.4",
				"@babel/types": "^7.4.4",
				"@iarna/toml": "^2.2.0",
				"@parcel/fs": "^1.11.0",
				"@parcel/logger": "^1.11.1",
				"@parcel/utils": "^1.11.0",
				"@parcel/watcher": "^1.12.1",
				"@parcel/workers": "^1.11.0",
				"ansi-to-html": "^0.6.4",
				"babylon-walk": "^1.0.2",
				"browserslist": "^4.1.0",
				"chalk": "^2.1.0",
				"clone": "^2.1.1",
				"command-exists": "^1.2.6",
				"commander": "^2.11.0",
				"core-js": "^2.6.5",
				"cross-spawn": "^6.0.4",
				"css-modules-loader-core": "^1.1.0",
				"cssnano": "^4.0.0",
				"deasync": "^0.1.14",
				"dotenv": "^5.0.0",
				"dotenv-expand": "^5.1.0",
				"envinfo": "^7.3.1",
				"fast-glob": "^2.2.2",
				"filesize": "^3.6.0",
				"get-port": "^3.2.0",
				"htmlnano": "^0.2.2",
				"is-glob": "^4.0.0",
				"is-url": "^1.2.2",
				"js-yaml": "^3.10.0",
				"json5": "^1.0.1",
				"micromatch": "^3.0.4",
				"mkdirp": "^0.5.1",
				"node-forge": "^0.10.0",
				"node-libs-browser": "^2.0.0",
				"opn": "^5.1.0",
				"postcss": "^7.0.11",
				"postcss-value-parser": "^3.3.1",
				"posthtml": "^0.11.2",
				"posthtml-parser": "^0.4.0",
				"posthtml-render": "^1.1.3",
				"resolve": "^1.4.0",
				"semver": "^5.4.1",
				"serialize-to-js": "^3.0.0",
				"serve-static": "^1.12.4",
				"source-map": "0.6.1",
				"terser": "^3.7.3",
				"v8-compile-cache": "^2.0.0",
				"ws": "^5.1.1"
			},
			"dependencies": {
				"@nodelib/fs.stat": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
					"integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==",
					"dev": true
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"dev": true,
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"clone": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
					"integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
					"dev": true
				},
				"commander": {
					"version": "2.20.3",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
					"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
					"dev": true
				},
				"fast-glob": {
					"version": "2.2.7",
					"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
					"integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
					"dev": true,
					"requires": {
						"@mrmlnc/readdir-enhanced": "^2.2.1",
						"@nodelib/fs.stat": "^1.1.2",
						"glob-parent": "^3.1.0",
						"is-glob": "^4.0.0",
						"merge2": "^1.2.3",
						"micromatch": "^3.1.10"
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"dev": true,
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"get-port": {
					"version": "3.2.0",
					"resolved": "https://registry.npmjs.org/get-port/-/get-port-3.2.0.tgz",
					"integrity": "sha1-3Xzn3hh8Bsi/NTeWrHHgmfCYDrw=",
					"dev": true
				},
				"glob-parent": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
					"integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
					"dev": true,
					"requires": {
						"is-glob": "^3.1.0",
						"path-dirname": "^1.0.0"
					},
					"dependencies": {
						"is-glob": {
							"version": "3.1.0",
							"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
							"integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
							"dev": true,
							"requires": {
								"is-extglob": "^2.1.0"
							}
						}
					}
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"dev": true,
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"dev": true,
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"json5": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
					"integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
					"dev": true,
					"requires": {
						"minimist": "^1.2.0"
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"dev": true,
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"dev": true,
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				},
				"ws": {
					"version": "5.2.3",
					"resolved": "https://registry.npmjs.org/ws/-/ws-5.2.3.tgz",
					"integrity": "sha512-jZArVERrMsKUatIdnLzqvcfydI85dvd/Fp1u/VOpfdDWQ4c9qWXe+VIeAbQ5FrDwciAkr+lzofXLz3Kuf26AOA==",
					"dev": true,
					"requires": {
						"async-limiter": "~1.0.0"
					}
				}
			}
		},
		"parent-module": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
			"integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
			"dev": true,
			"requires": {
				"callsites": "^3.0.0"
			}
		},
		"parse-asn1": {
			"version": "5.1.6",
			"resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.6.tgz",
			"integrity": "sha512-RnZRo1EPU6JBnra2vGHj0yhp6ebyjBZpmUCLHWiFhxlzvBCCpAuZ7elsBp1PVAbQN0/04VD/19rfzlBSwLstMw==",
			"dev": true,
			"requires": {
				"asn1.js": "^5.2.0",
				"browserify-aes": "^1.0.0",
				"evp_bytestokey": "^1.0.0",
				"pbkdf2": "^3.0.3",
				"safe-buffer": "^5.1.1"
			}
		},
		"parse-headers": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.3.tgz",
			"integrity": "sha512-QhhZ+DCCit2Coi2vmAKbq5RGTRcQUOE2+REgv8vdyu7MnYx2eZztegqtTx99TZ86GTIwqiy3+4nQTWZ2tgmdCA==",
			"dev": true
		},
		"parse-json": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
			"integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
			"requires": {
				"@babel/code-frame": "^7.0.0",
				"error-ex": "^1.3.1",
				"json-parse-even-better-errors": "^2.3.0",
				"lines-and-columns": "^1.1.6"
			}
		},
		"parse-passwd": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
			"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY=",
			"dev": true
		},
		"parse-path": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/parse-path/-/parse-path-4.0.3.tgz",
			"integrity": "sha512-9Cepbp2asKnWTJ9x2kpw6Fe8y9JDbqwahGCTvklzd/cEq5C5JC59x2Xb0Kx+x0QZ8bvNquGO8/BWP0cwBHzSAA==",
			"dev": true,
			"requires": {
				"is-ssh": "^1.3.0",
				"protocols": "^1.4.0",
				"qs": "^6.9.4",
				"query-string": "^6.13.8"
			},
			"dependencies": {
				"qs": {
					"version": "6.10.1",
					"resolved": "https://registry.npmjs.org/qs/-/qs-6.10.1.tgz",
					"integrity": "sha512-M528Hph6wsSVOBiYUnGf+K/7w0hNshs/duGsNXPUCLH5XAqjEtiPGwNONLV0tBH8NoGb0mvD5JubnUTrujKDTg==",
					"dev": true,
					"requires": {
						"side-channel": "^1.0.4"
					}
				},
				"query-string": {
					"version": "6.14.1",
					"resolved": "https://registry.npmjs.org/query-string/-/query-string-6.14.1.tgz",
					"integrity": "sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==",
					"dev": true,
					"requires": {
						"decode-uri-component": "^0.2.0",
						"filter-obj": "^1.1.0",
						"split-on-first": "^1.0.0",
						"strict-uri-encode": "^2.0.0"
					}
				},
				"strict-uri-encode": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
					"integrity": "sha1-ucczDHBChi9rFC3CdLvMWGbONUY=",
					"dev": true
				}
			}
		},
		"parse-url": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/parse-url/-/parse-url-6.0.0.tgz",
			"integrity": "sha512-cYyojeX7yIIwuJzledIHeLUBVJ6COVLeT4eF+2P6aKVzwvgKQPndCBv3+yQ7pcWjqToYwaligxzSYNNmGoMAvw==",
			"dev": true,
			"requires": {
				"is-ssh": "^1.3.0",
				"normalize-url": "^6.1.0",
				"parse-path": "^4.0.0",
				"protocols": "^1.4.0"
			},
			"dependencies": {
				"normalize-url": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
					"integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
					"dev": true
				}
			}
		},
		"parse5": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/parse5/-/parse5-6.0.1.tgz",
			"integrity": "sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==",
			"dev": true
		},
		"parseurl": {
			"version": "1.3.3",
			"resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
			"integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
			"dev": true
		},
		"pascalcase": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
			"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
		},
		"password-prompt": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/password-prompt/-/password-prompt-1.1.2.tgz",
			"integrity": "sha512-bpuBhROdrhuN3E7G/koAju0WjVw9/uQOG5Co5mokNj0MiOSBVZS1JTwM4zl55hu0WFmIEFvO9cU9sJQiBIYeIA==",
			"requires": {
				"ansi-escapes": "^3.1.0",
				"cross-spawn": "^6.0.5"
			},
			"dependencies": {
				"ansi-escapes": {
					"version": "3.2.0",
					"resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
					"integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="
				}
			}
		},
		"path-browserify": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz",
			"integrity": "sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==",
			"dev": true
		},
		"path-dirname": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
			"integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA="
		},
		"path-exists": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
			"integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w=="
		},
		"path-is-absolute": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
			"integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
		},
		"path-key": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
			"integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A="
		},
		"path-parse": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
			"integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw=="
		},
		"path-to-regexp": {
			"version": "0.1.7",
			"resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
			"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
			"dev": true
		},
		"path-type": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
			"integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
		},
		"pbkdf2": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.1.2.tgz",
			"integrity": "sha512-iuh7L6jA7JEGu2WxDwtQP1ddOpaJNC4KlDEFfdQajSGgGPNi4OyDc2R7QnbY2bR9QjBVGwgvTdNJZoE7RaxUMA==",
			"dev": true,
			"requires": {
				"create-hash": "^1.1.2",
				"create-hmac": "^1.1.4",
				"ripemd160": "^2.0.1",
				"safe-buffer": "^5.0.1",
				"sha.js": "^2.4.8"
			}
		},
		"performance-now": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
			"integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=",
			"dev": true
		},
		"physical-cpu-count": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/physical-cpu-count/-/physical-cpu-count-2.0.0.tgz",
			"integrity": "sha1-GN4vl+S/epVRrXURlCtUlverpmA=",
			"dev": true
		},
		"picomatch": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz",
			"integrity": "sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw=="
		},
		"pify": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
			"integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
		},
		"pinkie": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
			"integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="
		},
		"pinkie-promise": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
			"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
			"requires": {
				"pinkie": "^2.0.0"
			}
		},
		"pirates": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.1.tgz",
			"integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+Men7AuVdX6TA+s+uGA==",
			"dev": true,
			"requires": {
				"node-modules-regexp": "^1.0.0"
			}
		},
		"pkg-dir": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
			"integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
			"requires": {
				"find-up": "^4.0.0"
			}
		},
		"pn": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",
			"integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA==",
			"dev": true
		},
		"posix-character-classes": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
			"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
		},
		"postcss": {
			"version": "7.0.36",
			"resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.36.tgz",
			"integrity": "sha512-BebJSIUMwJHRH0HAQoxN4u1CN86glsrwsW0q7T+/m44eXOUAxSNdHRkNZPYz5vVUbg17hFgOQDE7fZk7li3pZw==",
			"dev": true,
			"requires": {
				"chalk": "^2.4.2",
				"source-map": "^0.6.1",
				"supports-color": "^6.1.0"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				},
				"supports-color": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
					"integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
					"dev": true,
					"requires": {
						"has-flag": "^3.0.0"
					}
				}
			}
		},
		"postcss-calc": {
			"version": "7.0.5",
			"resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.5.tgz",
			"integrity": "sha512-1tKHutbGtLtEZF6PT4JSihCHfIVldU72mZ8SdZHIYriIZ9fh9k9aWSppaT8rHsyI3dX+KSR+W+Ix9BMY3AODrg==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.27",
				"postcss-selector-parser": "^6.0.2",
				"postcss-value-parser": "^4.0.2"
			},
			"dependencies": {
				"postcss-value-parser": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.1.0.tgz",
					"integrity": "sha512-97DXOFbQJhk71ne5/Mt6cOu6yxsSfM0QGQyl0L25Gca4yGWEGJaig7l7gbCX623VqTBNGLRLaVUCnNkcedlRSQ==",
					"dev": true
				}
			}
		},
		"postcss-colormin": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",
			"integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"color": "^3.0.0",
				"has": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-convert-values": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",
			"integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-discard-comments": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",
			"integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"postcss-discard-duplicates": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",
			"integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"postcss-discard-empty": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",
			"integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"postcss-discard-overridden": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",
			"integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"postcss-merge-longhand": {
			"version": "4.0.11",
			"resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",
			"integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",
			"dev": true,
			"requires": {
				"css-color-names": "0.0.4",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0",
				"stylehacks": "^4.0.0"
			}
		},
		"postcss-merge-rules": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",
			"integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"caniuse-api": "^3.0.0",
				"cssnano-util-same-parent": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-selector-parser": "^3.0.0",
				"vendors": "^1.0.0"
			},
			"dependencies": {
				"dot-prop": {
					"version": "5.3.0",
					"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
					"integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
					"dev": true,
					"requires": {
						"is-obj": "^2.0.0"
					}
				},
				"postcss-selector-parser": {
					"version": "3.1.2",
					"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
					"integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
					"dev": true,
					"requires": {
						"dot-prop": "^5.2.0",
						"indexes-of": "^1.0.1",
						"uniq": "^1.0.1"
					}
				}
			}
		},
		"postcss-minify-font-values": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",
			"integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-minify-gradients": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",
			"integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",
			"dev": true,
			"requires": {
				"cssnano-util-get-arguments": "^4.0.0",
				"is-color-stop": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-minify-params": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",
			"integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",
			"dev": true,
			"requires": {
				"alphanum-sort": "^1.0.0",
				"browserslist": "^4.0.0",
				"cssnano-util-get-arguments": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0",
				"uniqs": "^2.0.0"
			}
		},
		"postcss-minify-selectors": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",
			"integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",
			"dev": true,
			"requires": {
				"alphanum-sort": "^1.0.0",
				"has": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-selector-parser": "^3.0.0"
			},
			"dependencies": {
				"dot-prop": {
					"version": "5.3.0",
					"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
					"integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
					"dev": true,
					"requires": {
						"is-obj": "^2.0.0"
					}
				},
				"postcss-selector-parser": {
					"version": "3.1.2",
					"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
					"integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
					"dev": true,
					"requires": {
						"dot-prop": "^5.2.0",
						"indexes-of": "^1.0.1",
						"uniq": "^1.0.1"
					}
				}
			}
		},
		"postcss-modules-extract-imports": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-1.1.0.tgz",
			"integrity": "sha1-thTJcgvmgW6u41+zpfqh26agXds=",
			"dev": true,
			"requires": {
				"postcss": "^6.0.1"
			},
			"dependencies": {
				"postcss": {
					"version": "6.0.23",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",
					"integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",
					"dev": true,
					"requires": {
						"chalk": "^2.4.1",
						"source-map": "^0.6.1",
						"supports-color": "^5.4.0"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"postcss-modules-local-by-default": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-1.2.0.tgz",
			"integrity": "sha1-99gMOYxaOT+nlkRmvRlQCn1hwGk=",
			"dev": true,
			"requires": {
				"css-selector-tokenizer": "^0.7.0",
				"postcss": "^6.0.1"
			},
			"dependencies": {
				"postcss": {
					"version": "6.0.23",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",
					"integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",
					"dev": true,
					"requires": {
						"chalk": "^2.4.1",
						"source-map": "^0.6.1",
						"supports-color": "^5.4.0"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"postcss-modules-scope": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-1.1.0.tgz",
			"integrity": "sha1-1upkmUx5+XtipytCb75gVqGUu5A=",
			"dev": true,
			"requires": {
				"css-selector-tokenizer": "^0.7.0",
				"postcss": "^6.0.1"
			},
			"dependencies": {
				"postcss": {
					"version": "6.0.23",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",
					"integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",
					"dev": true,
					"requires": {
						"chalk": "^2.4.1",
						"source-map": "^0.6.1",
						"supports-color": "^5.4.0"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"postcss-modules-values": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-1.3.0.tgz",
			"integrity": "sha1-7P+p1+GSUYOJ9CrQ6D9yrsRW6iA=",
			"dev": true,
			"requires": {
				"icss-replace-symbols": "^1.1.0",
				"postcss": "^6.0.1"
			},
			"dependencies": {
				"postcss": {
					"version": "6.0.23",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",
					"integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",
					"dev": true,
					"requires": {
						"chalk": "^2.4.1",
						"source-map": "^0.6.1",
						"supports-color": "^5.4.0"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"postcss-normalize-charset": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",
			"integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0"
			}
		},
		"postcss-normalize-display-values": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",
			"integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",
			"dev": true,
			"requires": {
				"cssnano-util-get-match": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-positions": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",
			"integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",
			"dev": true,
			"requires": {
				"cssnano-util-get-arguments": "^4.0.0",
				"has": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-repeat-style": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",
			"integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",
			"dev": true,
			"requires": {
				"cssnano-util-get-arguments": "^4.0.0",
				"cssnano-util-get-match": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-string": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",
			"integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",
			"dev": true,
			"requires": {
				"has": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-timing-functions": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",
			"integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",
			"dev": true,
			"requires": {
				"cssnano-util-get-match": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-unicode": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",
			"integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-normalize-url": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",
			"integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",
			"dev": true,
			"requires": {
				"is-absolute-url": "^2.0.0",
				"normalize-url": "^3.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			},
			"dependencies": {
				"normalize-url": {
					"version": "3.3.0",
					"resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",
					"integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg==",
					"dev": true
				}
			}
		},
		"postcss-normalize-whitespace": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",
			"integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-ordered-values": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",
			"integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",
			"dev": true,
			"requires": {
				"cssnano-util-get-arguments": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-reduce-initial": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",
			"integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"caniuse-api": "^3.0.0",
				"has": "^1.0.0",
				"postcss": "^7.0.0"
			}
		},
		"postcss-reduce-transforms": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",
			"integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",
			"dev": true,
			"requires": {
				"cssnano-util-get-match": "^4.0.0",
				"has": "^1.0.0",
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0"
			}
		},
		"postcss-selector-parser": {
			"version": "6.0.6",
			"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.6.tgz",
			"integrity": "sha512-9LXrvaaX3+mcv5xkg5kFwqSzSH1JIObIx51PrndZwlmznwXRfxMddDvo9gve3gVR8ZTKgoFDdWkbRFmEhT4PMg==",
			"dev": true,
			"requires": {
				"cssesc": "^3.0.0",
				"util-deprecate": "^1.0.2"
			}
		},
		"postcss-svgo": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.3.tgz",
			"integrity": "sha512-NoRbrcMWTtUghzuKSoIm6XV+sJdvZ7GZSc3wdBN0W19FTtp2ko8NqLsgoh/m9CzNhU3KLPvQmjIwtaNFkaFTvw==",
			"dev": true,
			"requires": {
				"postcss": "^7.0.0",
				"postcss-value-parser": "^3.0.0",
				"svgo": "^1.0.0"
			}
		},
		"postcss-unique-selectors": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",
			"integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",
			"dev": true,
			"requires": {
				"alphanum-sort": "^1.0.0",
				"postcss": "^7.0.0",
				"uniqs": "^2.0.0"
			}
		},
		"postcss-value-parser": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
			"integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
			"dev": true
		},
		"posthtml": {
			"version": "0.11.6",
			"resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.11.6.tgz",
			"integrity": "sha512-C2hrAPzmRdpuL3iH0TDdQ6XCc9M7Dcc3zEW5BLerY65G4tWWszwv6nG/ksi6ul5i2mx22ubdljgktXCtNkydkw==",
			"dev": true,
			"requires": {
				"posthtml-parser": "^0.4.1",
				"posthtml-render": "^1.1.5"
			}
		},
		"posthtml-parser": {
			"version": "0.4.2",
			"resolved": "https://registry.npmjs.org/posthtml-parser/-/posthtml-parser-0.4.2.tgz",
			"integrity": "sha512-BUIorsYJTvS9UhXxPTzupIztOMVNPa/HtAm9KHni9z6qEfiJ1bpOBL5DfUOL9XAc3XkLIEzBzpph+Zbm4AdRAg==",
			"dev": true,
			"requires": {
				"htmlparser2": "^3.9.2"
			},
			"dependencies": {
				"domhandler": {
					"version": "2.4.2",
					"resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",
					"integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",
					"dev": true,
					"requires": {
						"domelementtype": "1"
					}
				},
				"entities": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",
					"integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
					"dev": true
				},
				"htmlparser2": {
					"version": "3.10.1",
					"resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",
					"integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",
					"dev": true,
					"requires": {
						"domelementtype": "^1.3.1",
						"domhandler": "^2.3.0",
						"domutils": "^1.5.1",
						"entities": "^1.1.1",
						"inherits": "^2.0.1",
						"readable-stream": "^3.1.1"
					}
				}
			}
		},
		"posthtml-render": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/posthtml-render/-/posthtml-render-1.4.0.tgz",
			"integrity": "sha512-W1779iVHGfq0Fvh2PROhCe2QhB8mEErgqzo1wpIt36tCgChafP+hbXIhLDOM8ePJrZcFs0vkNEtdibEWVqChqw==",
			"dev": true
		},
		"prebuild-install": {
			"version": "6.1.3",
			"resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-6.1.3.tgz",
			"integrity": "sha512-iqqSR84tNYQUQHRXalSKdIaM8Ov1QxOVuBNWI7+BzZWv6Ih9k75wOnH1rGQ9WWTaaLkTpxWKIciOF0KyfM74+Q==",
			"dev": true,
			"optional": true,
			"requires": {
				"detect-libc": "^1.0.3",
				"expand-template": "^2.0.3",
				"github-from-package": "0.0.0",
				"minimist": "^1.2.3",
				"mkdirp-classic": "^0.5.3",
				"napi-build-utils": "^1.0.1",
				"node-abi": "^2.21.0",
				"npmlog": "^4.0.1",
				"pump": "^3.0.0",
				"rc": "^1.2.7",
				"simple-get": "^3.0.3",
				"tar-fs": "^2.0.0",
				"tunnel-agent": "^0.6.0"
			},
			"dependencies": {
				"decompress-response": {
					"version": "4.2.1",
					"resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
					"integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
					"dev": true,
					"optional": true,
					"requires": {
						"mimic-response": "^2.0.0"
					}
				},
				"mimic-response": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
					"integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
					"dev": true,
					"optional": true
				},
				"simple-get": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.0.tgz",
					"integrity": "sha512-bCR6cP+aTdScaQCnQKbPKtJOKDp/hj9EDLJo3Nw4y1QksqaovlW/bnptB6/c1e+qmNIDHRK+oXFDdEqBT8WzUA==",
					"dev": true,
					"optional": true,
					"requires": {
						"decompress-response": "^4.2.0",
						"once": "^1.3.1",
						"simple-concat": "^1.0.0"
					}
				}
			}
		},
		"precond": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/precond/-/precond-0.2.3.tgz",
			"integrity": "sha1-qpWRvKokkj8eD0hJ0kD0fvwQdaw=",
			"dev": true
		},
		"prelude-ls": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
			"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
			"dev": true
		},
		"prepend-http": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
			"integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw="
		},
		"pretty-bytes": {
			"version": "5.6.0",
			"resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.6.0.tgz",
			"integrity": "sha512-FFw039TmrBqFK8ma/7OL3sDz/VytdtJr044/QUJtH0wK9lb9jLq9tJyIxUwtQJHwar2BqtiA4iCWSwo9JLkzFg=="
		},
		"pretty-format": {
			"version": "26.6.2",
			"resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-26.6.2.tgz",
			"integrity": "sha512-7AeGuCYNGmycyQbCqd/3PWH4eOoX/OiCa0uphp57NVTeAGdJGaAliecxwBDHYQCIvrW7aDBZCYeNTP/WX69mkg==",
			"dev": true,
			"requires": {
				"@jest/types": "^26.6.2",
				"ansi-regex": "^5.0.0",
				"ansi-styles": "^4.0.0",
				"react-is": "^17.0.1"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				}
			}
		},
		"printj": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/printj/-/printj-1.1.2.tgz",
			"integrity": "sha512-zA2SmoLaxZyArQTOPj5LXecR+RagfPSU5Kw1qP+jkWeNlrq+eJZyY2oS68SU1Z/7/myXM4lo9716laOFAVStCQ==",
			"dev": true
		},
		"process": {
			"version": "0.11.10",
			"resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
			"integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
			"dev": true
		},
		"process-nextick-args": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
			"integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
		},
		"promise-inflight": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",
			"integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM=",
			"dev": true
		},
		"promise-retry": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/promise-retry/-/promise-retry-2.0.1.tgz",
			"integrity": "sha512-y+WKFlBR8BGXnsNlIHFGPZmyDf3DFMoLhaflAnyZgV6rG6xu+JwesTo2Q9R6XwYmtmwAFCkAk3e35jEdoeh/3g==",
			"dev": true,
			"requires": {
				"err-code": "^2.0.2",
				"retry": "^0.12.0"
			}
		},
		"promise-to-callback": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/promise-to-callback/-/promise-to-callback-1.0.0.tgz",
			"integrity": "sha1-XSp0kBC/tn2WNZj805YHRqaP7vc=",
			"dev": true,
			"requires": {
				"is-fn": "^1.0.0",
				"set-immediate-shim": "^1.0.1"
			}
		},
		"prompts": {
			"version": "2.4.1",
			"resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.1.tgz",
			"integrity": "sha512-EQyfIuO2hPDsX1L/blblV+H7I0knhgAd82cVneCwcdND9B8AuCDuRcBH6yIcG4dFzlOUqbazQqwGjx5xmsNLuQ==",
			"dev": true,
			"requires": {
				"kleur": "^3.0.3",
				"sisteransi": "^1.0.5"
			}
		},
		"promzard": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/promzard/-/promzard-0.3.0.tgz",
			"integrity": "sha1-JqXW7ox97kyxIggwWs+5O6OCqe4=",
			"dev": true,
			"requires": {
				"read": "1"
			}
		},
		"proto-list": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/proto-list/-/proto-list-1.2.4.tgz",
			"integrity": "sha1-IS1b/hMYMGpCD2QCuOJv85ZHqEk=",
			"dev": true
		},
		"protocols": {
			"version": "1.4.8",
			"resolved": "https://registry.npmjs.org/protocols/-/protocols-1.4.8.tgz",
			"integrity": "sha512-IgjKyaUSjsROSO8/D49Ab7hP8mJgTYcqApOqdPhLoPxAplXmkp+zRvsrSQjFn5by0rhm4VH0GAUELIPpx7B1yg==",
			"dev": true
		},
		"proxy-addr": {
			"version": "2.0.7",
			"resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
			"integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
			"dev": true,
			"requires": {
				"forwarded": "0.2.0",
				"ipaddr.js": "1.9.1"
			}
		},
		"prr": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",
			"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
			"dev": true
		},
		"pseudomap": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
			"integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM="
		},
		"psl": {
			"version": "1.8.0",
			"resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
			"integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==",
			"dev": true
		},
		"pstree.remy": {
			"version": "1.1.8",
			"resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
			"integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
			"dev": true
		},
		"public-encrypt": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",
			"integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",
			"dev": true,
			"requires": {
				"bn.js": "^4.1.0",
				"browserify-rsa": "^4.0.0",
				"create-hash": "^1.1.0",
				"parse-asn1": "^5.0.0",
				"randombytes": "^2.0.1",
				"safe-buffer": "^5.1.2"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"pump": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
			"integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
			"requires": {
				"end-of-stream": "^1.1.0",
				"once": "^1.3.1"
			}
		},
		"punycode": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
			"integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
			"dev": true
		},
		"pupa": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/pupa/-/pupa-2.1.1.tgz",
			"integrity": "sha512-l1jNAspIBSFqbT+y+5FosojNpVpF94nlI+wDUpqP9enwOTfHx9f0gh5nB96vl+6yTpsJsypeNrwfzPrKuHB41A==",
			"dev": true,
			"requires": {
				"escape-goat": "^2.0.0"
			}
		},
		"purgecss": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/purgecss/-/purgecss-2.3.0.tgz",
			"integrity": "sha512-BE5CROfVGsx2XIhxGuZAT7rTH9lLeQx/6M0P7DTXQH4IUc3BBzs9JUzt4yzGf3JrH9enkeq6YJBe9CTtkm1WmQ==",
			"dev": true,
			"requires": {
				"commander": "^5.0.0",
				"glob": "^7.0.0",
				"postcss": "7.0.32",
				"postcss-selector-parser": "^6.0.2"
			},
			"dependencies": {
				"commander": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/commander/-/commander-5.1.0.tgz",
					"integrity": "sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==",
					"dev": true
				},
				"postcss": {
					"version": "7.0.32",
					"resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.32.tgz",
					"integrity": "sha512-03eXong5NLnNCD05xscnGKGDZ98CyzoqPSMjOe6SuoQY7Z2hIj0Ld1g/O/UQRuOle2aRtiIRDg9tDcTGAkLfKw==",
					"dev": true,
					"requires": {
						"chalk": "^2.4.2",
						"source-map": "^0.6.1",
						"supports-color": "^6.1.0"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				},
				"supports-color": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
					"integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
					"dev": true,
					"requires": {
						"has-flag": "^3.0.0"
					}
				}
			}
		},
		"q": {
			"version": "1.5.1",
			"resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
			"integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=",
			"dev": true
		},
		"qqjs": {
			"version": "0.3.11",
			"resolved": "https://registry.npmjs.org/qqjs/-/qqjs-0.3.11.tgz",
			"integrity": "sha512-pB2X5AduTl78J+xRSxQiEmga1jQV0j43jOPs/MTgTLApGFEOn6NgdE2dEjp7nvDtjkIOZbvFIojAiYUx6ep3zg==",
			"requires": {
				"chalk": "^2.4.1",
				"debug": "^4.1.1",
				"execa": "^0.10.0",
				"fs-extra": "^6.0.1",
				"get-stream": "^5.1.0",
				"glob": "^7.1.2",
				"globby": "^10.0.1",
				"http-call": "^5.1.2",
				"load-json-file": "^6.2.0",
				"pkg-dir": "^4.2.0",
				"tar-fs": "^2.0.0",
				"tmp": "^0.1.0",
				"write-json-file": "^4.1.1"
			},
			"dependencies": {
				"array-union": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
					"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw=="
				},
				"execa": {
					"version": "0.10.0",
					"resolved": "https://registry.npmjs.org/execa/-/execa-0.10.0.tgz",
					"integrity": "sha512-7XOMnz8Ynx1gGo/3hyV9loYNPWM94jG3+3T3Y8tsfSstFmETmENCMU/A/zj8Lyaj1lkgEepKepvd6240tBRvlw==",
					"requires": {
						"cross-spawn": "^6.0.0",
						"get-stream": "^3.0.0",
						"is-stream": "^1.1.0",
						"npm-run-path": "^2.0.0",
						"p-finally": "^1.0.0",
						"signal-exit": "^3.0.0",
						"strip-eof": "^1.0.0"
					},
					"dependencies": {
						"get-stream": {
							"version": "3.0.0",
							"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
							"integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ="
						}
					}
				},
				"fs-extra": {
					"version": "6.0.1",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-6.0.1.tgz",
					"integrity": "sha512-GnyIkKhhzXZUWFCaJzvyDLEEgDkPfb4/TPvJCJVuS8MWZgoSsErf++QpiAlDnKFcqhRlm+tIOcencCjyJE6ZCA==",
					"requires": {
						"graceful-fs": "^4.1.2",
						"jsonfile": "^4.0.0",
						"universalify": "^0.1.0"
					}
				},
				"get-stream": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
					"integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
					"requires": {
						"pump": "^3.0.0"
					}
				},
				"globby": {
					"version": "10.0.2",
					"resolved": "https://registry.npmjs.org/globby/-/globby-10.0.2.tgz",
					"integrity": "sha512-7dUi7RvCoT/xast/o/dLN53oqND4yk0nsHkhRgn9w65C4PofCLOoJ39iSOg+qVDdWQPIEj+eszMHQ+aLVwwQSg==",
					"requires": {
						"@types/glob": "^7.1.1",
						"array-union": "^2.1.0",
						"dir-glob": "^3.0.1",
						"fast-glob": "^3.0.3",
						"glob": "^7.1.3",
						"ignore": "^5.1.1",
						"merge2": "^1.2.3",
						"slash": "^3.0.0"
					}
				},
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"requires": {
						"glob": "^7.1.3"
					}
				},
				"tmp": {
					"version": "0.1.0",
					"resolved": "https://registry.npmjs.org/tmp/-/tmp-0.1.0.tgz",
					"integrity": "sha512-J7Z2K08jbGcdA1kkQpJSqLF6T0tdQqpR2pnSUXsIchbPdTI9v3e85cLW0d6WDhwuAleOV71j2xWs8qMPfK7nKw==",
					"requires": {
						"rimraf": "^2.6.3"
					}
				}
			}
		},
		"qs": {
			"version": "6.5.2",
			"resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
			"integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
			"dev": true
		},
		"query-string": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
			"integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
			"dev": true,
			"requires": {
				"decode-uri-component": "^0.2.0",
				"object-assign": "^4.1.0",
				"strict-uri-encode": "^1.0.0"
			}
		},
		"querystring": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
			"integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
			"dev": true
		},
		"querystring-es3": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
			"integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=",
			"dev": true
		},
		"queue-microtask": {
			"version": "1.2.3",
			"resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
			"integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A=="
		},
		"quick-lru": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-4.0.1.tgz",
			"integrity": "sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==",
			"dev": true
		},
		"quote-stream": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/quote-stream/-/quote-stream-1.0.2.tgz",
			"integrity": "sha1-hJY/jJwmuULhU/7rU6rnRlK34LI=",
			"dev": true,
			"requires": {
				"buffer-equal": "0.0.1",
				"minimist": "^1.1.3",
				"through2": "^2.0.0"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"through2": {
					"version": "2.0.5",
					"resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
					"integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
					"dev": true,
					"requires": {
						"readable-stream": "~2.3.6",
						"xtend": "~4.0.1"
					}
				}
			}
		},
		"randombytes": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
			"integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
			"dev": true,
			"requires": {
				"safe-buffer": "^5.1.0"
			}
		},
		"randomfill": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",
			"integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",
			"dev": true,
			"requires": {
				"randombytes": "^2.0.5",
				"safe-buffer": "^5.1.0"
			}
		},
		"range-parser": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
			"integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
			"dev": true
		},
		"raw-body": {
			"version": "2.4.0",
			"resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
			"integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
			"dev": true,
			"requires": {
				"bytes": "3.1.0",
				"http-errors": "1.7.2",
				"iconv-lite": "0.4.24",
				"unpipe": "1.0.0"
			},
			"dependencies": {
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
					"dev": true
				},
				"http-errors": {
					"version": "1.7.2",
					"resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
					"integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
					"dev": true,
					"requires": {
						"depd": "~1.1.2",
						"inherits": "2.0.3",
						"setprototypeof": "1.1.1",
						"statuses": ">= 1.5.0 < 2",
						"toidentifier": "1.0.0"
					}
				},
				"inherits": {
					"version": "2.0.3",
					"resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
					"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
					"dev": true
				},
				"setprototypeof": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
					"integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
					"dev": true
				}
			}
		},
		"rc": {
			"version": "1.2.8",
			"resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
			"integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
			"requires": {
				"deep-extend": "^0.6.0",
				"ini": "~1.3.0",
				"minimist": "^1.2.0",
				"strip-json-comments": "~2.0.1"
			}
		},
		"react-is": {
			"version": "17.0.2",
			"resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
			"integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
			"dev": true
		},
		"react-shallow-renderer": {
			"version": "16.14.1",
			"resolved": "https://registry.npmjs.org/react-shallow-renderer/-/react-shallow-renderer-16.14.1.tgz",
			"integrity": "sha512-rkIMcQi01/+kxiTE9D3fdS959U1g7gs+/rborw++42m1O9FAQiNI/UNRZExVUoAOprn4umcXf+pFRou8i4zuBg==",
			"dev": true,
			"requires": {
				"object-assign": "^4.1.1",
				"react-is": "^16.12.0 || ^17.0.0"
			}
		},
		"react-test-renderer": {
			"version": "17.0.2",
			"resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-17.0.2.tgz",
			"integrity": "sha512-yaQ9cB89c17PUb0x6UfWRs7kQCorVdHlutU1boVPEsB8IDZH6n9tHxMacc3y0JoXOJUsZb/t/Mb8FUWMKaM7iQ==",
			"dev": true,
			"requires": {
				"object-assign": "^4.1.1",
				"react-is": "^17.0.2",
				"react-shallow-renderer": "^16.13.1",
				"scheduler": "^0.20.2"
			}
		},
		"read": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/read/-/read-1.0.7.tgz",
			"integrity": "sha1-s9oZvQUkMal2cdRKQmNK33ELQMQ=",
			"dev": true,
			"requires": {
				"mute-stream": "~0.0.4"
			}
		},
		"read-chunk": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/read-chunk/-/read-chunk-3.2.0.tgz",
			"integrity": "sha512-CEjy9LCzhmD7nUpJ1oVOE6s/hBkejlcJEgLQHVnQznOSilOPb+kpKktlLfFDK3/WP43+F80xkUTM2VOkYoSYvQ==",
			"requires": {
				"pify": "^4.0.1",
				"with-open-file": "^0.1.6"
			},
			"dependencies": {
				"pify": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
					"integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
				}
			}
		},
		"read-cmd-shim": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/read-cmd-shim/-/read-cmd-shim-2.0.0.tgz",
			"integrity": "sha512-HJpV9bQpkl6KwjxlJcBoqu9Ba0PQg8TqSNIOrulGt54a0uup0HtevreFHzYzkm0lpnleRdNBzXznKrgxglEHQw==",
			"dev": true
		},
		"read-package-json": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.2.tgz",
			"integrity": "sha512-D1KmuLQr6ZSJS0tW8hf3WGpRlwszJOXZ3E8Yd/DNRaM5d+1wVRZdHlpGBLAuovjr28LbWvjpWkBHMxpRGGjzNA==",
			"dev": true,
			"requires": {
				"glob": "^7.1.1",
				"json-parse-even-better-errors": "^2.3.0",
				"normalize-package-data": "^2.0.0",
				"npm-normalize-package-bin": "^1.0.0"
			}
		},
		"read-package-json-fast": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/read-package-json-fast/-/read-package-json-fast-2.0.2.tgz",
			"integrity": "sha512-5fyFUyO9B799foVk4n6ylcoAktG/FbE3jwRKxvwaeSrIunaoMc0u81dzXxjeAFKOce7O5KncdfwpGvvs6r5PsQ==",
			"dev": true,
			"requires": {
				"json-parse-even-better-errors": "^2.3.0",
				"npm-normalize-package-bin": "^1.0.1"
			}
		},
		"read-package-tree": {
			"version": "5.3.1",
			"resolved": "https://registry.npmjs.org/read-package-tree/-/read-package-tree-5.3.1.tgz",
			"integrity": "sha512-mLUDsD5JVtlZxjSlPPx1RETkNjjvQYuweKwNVt1Sn8kP5Jh44pvYuUHCp6xSVDZWbNxVxG5lyZJ921aJH61sTw==",
			"dev": true,
			"requires": {
				"read-package-json": "^2.0.0",
				"readdir-scoped-modules": "^1.0.0",
				"util-promisify": "^2.1.0"
			}
		},
		"read-pkg": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz",
			"integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==",
			"requires": {
				"@types/normalize-package-data": "^2.4.0",
				"normalize-package-data": "^2.5.0",
				"parse-json": "^5.0.0",
				"type-fest": "^0.6.0"
			},
			"dependencies": {
				"type-fest": {
					"version": "0.6.0",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz",
					"integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg=="
				}
			}
		},
		"read-pkg-up": {
			"version": "7.0.1",
			"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-7.0.1.tgz",
			"integrity": "sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==",
			"dev": true,
			"requires": {
				"find-up": "^4.1.0",
				"read-pkg": "^5.2.0",
				"type-fest": "^0.8.1"
			}
		},
		"readable-stream": {
			"version": "3.6.0",
			"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
			"integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
			"requires": {
				"inherits": "^2.0.3",
				"string_decoder": "^1.1.1",
				"util-deprecate": "^1.0.1"
			}
		},
		"readdir-scoped-modules": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/readdir-scoped-modules/-/readdir-scoped-modules-1.1.0.tgz",
			"integrity": "sha512-asaikDeqAQg7JifRsZn1NJZXo9E+VwlyCfbkZhwyISinqk5zNS6266HS5kah6P0SaQKGF6SkNnZVHUzHFYxYDw==",
			"dev": true,
			"requires": {
				"debuglog": "^1.0.1",
				"dezalgo": "^1.0.0",
				"graceful-fs": "^4.1.2",
				"once": "^1.3.0"
			}
		},
		"readdirp": {
			"version": "3.6.0",
			"resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
			"integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
			"dev": true,
			"requires": {
				"picomatch": "^2.2.1"
			}
		},
		"rechoir": {
			"version": "0.6.2",
			"resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
			"integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
			"requires": {
				"resolve": "^1.1.6"
			}
		},
		"redent": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/redent/-/redent-3.0.0.tgz",
			"integrity": "sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==",
			"dev": true,
			"requires": {
				"indent-string": "^4.0.0",
				"strip-indent": "^3.0.0"
			}
		},
		"redeyed": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz",
			"integrity": "sha1-iYS1gV2ZyyIEacme7v/jiRPmzAs=",
			"requires": {
				"esprima": "~4.0.0"
			}
		},
		"regenerate": {
			"version": "1.4.2",
			"resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
			"integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
			"dev": true
		},
		"regenerate-unicode-properties": {
			"version": "8.2.0",
			"resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.2.0.tgz",
			"integrity": "sha512-F9DjY1vKLo/tPePDycuH3dn9H1OTPIkVD9Kz4LODu+F2C75mgjAJ7x/gwy6ZcSNRAAkhNlJSOHRe8k3p+K9WhA==",
			"dev": true,
			"requires": {
				"regenerate": "^1.4.0"
			}
		},
		"regenerator-runtime": {
			"version": "0.13.7",
			"resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.7.tgz",
			"integrity": "sha512-a54FxoJDIr27pgf7IgeQGxmqUNYrcV338lf/6gH456HZ/PhX+5BcwHXG9ajESmwe6WRO0tAzRUrRmNONWgkrew=="
		},
		"regenerator-transform": {
			"version": "0.14.5",
			"resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.14.5.tgz",
			"integrity": "sha512-eOf6vka5IO151Jfsw2NO9WpGX58W6wWmefK3I1zEGr0lOD0u8rwPaNqQL1aRxUaxLeKO3ArNh3VYg1KbaD+FFw==",
			"dev": true,
			"requires": {
				"@babel/runtime": "^7.8.4"
			}
		},
		"regex-not": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
			"integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
			"requires": {
				"extend-shallow": "^3.0.2",
				"safe-regex": "^1.1.0"
			}
		},
		"regexpu-core": {
			"version": "4.7.1",
			"resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.7.1.tgz",
			"integrity": "sha512-ywH2VUraA44DZQuRKzARmw6S66mr48pQVva4LBeRhcOltJ6hExvWly5ZjFLYo67xbIxb6W1q4bAGtgfEl20zfQ==",
			"dev": true,
			"requires": {
				"regenerate": "^1.4.0",
				"regenerate-unicode-properties": "^8.2.0",
				"regjsgen": "^0.5.1",
				"regjsparser": "^0.6.4",
				"unicode-match-property-ecmascript": "^1.0.4",
				"unicode-match-property-value-ecmascript": "^1.2.0"
			}
		},
		"registry-auth-token": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.1.tgz",
			"integrity": "sha512-6gkSb4U6aWJB4SF2ZvLb76yCBjcvufXBqvvEx1HbmKPkutswjW1xNVRY0+daljIYRbogN7O0etYSlbiaEQyMyw==",
			"dev": true,
			"requires": {
				"rc": "^1.2.8"
			}
		},
		"registry-url": {
			"version": "5.1.0",
			"resolved": "https://registry.npmjs.org/registry-url/-/registry-url-5.1.0.tgz",
			"integrity": "sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==",
			"dev": true,
			"requires": {
				"rc": "^1.2.8"
			}
		},
		"regjsgen": {
			"version": "0.5.2",
			"resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.2.tgz",
			"integrity": "sha512-OFFT3MfrH90xIW8OOSyUrk6QHD5E9JOTeGodiJeBS3J6IwlgzJMNE/1bZklWz5oTg+9dCMyEetclvCVXOPoN3A==",
			"dev": true
		},
		"regjsparser": {
			"version": "0.6.9",
			"resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.9.tgz",
			"integrity": "sha512-ZqbNRz1SNjLAiYuwY0zoXW8Ne675IX5q+YHioAGbCw4X96Mjl2+dcX9B2ciaeyYjViDAfvIjFpQjJgLttTEERQ==",
			"dev": true,
			"requires": {
				"jsesc": "~0.5.0"
			},
			"dependencies": {
				"jsesc": {
					"version": "0.5.0",
					"resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
					"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
					"dev": true
				}
			}
		},
		"relateurl": {
			"version": "0.2.7",
			"resolved": "https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz",
			"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=",
			"dev": true
		},
		"remove-trailing-separator": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
			"integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8="
		},
		"repeat-element": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.4.tgz",
			"integrity": "sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2/+StMjK8Y6Vqd2MG7r/Qjw4ghtuCOjFvlnms/iMmLqpvW/ES/WQ=="
		},
		"repeat-string": {
			"version": "1.6.1",
			"resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
			"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
		},
		"repeating": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
			"integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
			"requires": {
				"is-finite": "^1.0.0"
			}
		},
		"replace-ext": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.1.tgz",
			"integrity": "sha512-yD5BHCe7quCgBph4rMQ+0KkIRKwWCrHDOX1p1Gp6HwjPM5kVoCdKGNhN7ydqqsX6lJEnQDKZ/tFMiEdQ1dvPEw=="
		},
		"request": {
			"version": "2.88.2",
			"resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
			"integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
			"dev": true,
			"requires": {
				"aws-sign2": "~0.7.0",
				"aws4": "^1.8.0",
				"caseless": "~0.12.0",
				"combined-stream": "~1.0.6",
				"extend": "~3.0.2",
				"forever-agent": "~0.6.1",
				"form-data": "~2.3.2",
				"har-validator": "~5.1.3",
				"http-signature": "~1.2.0",
				"is-typedarray": "~1.0.0",
				"isstream": "~0.1.2",
				"json-stringify-safe": "~5.0.1",
				"mime-types": "~2.1.19",
				"oauth-sign": "~0.9.0",
				"performance-now": "^2.1.0",
				"qs": "~6.5.2",
				"safe-buffer": "^5.1.2",
				"tough-cookie": "~2.5.0",
				"tunnel-agent": "^0.6.0",
				"uuid": "^3.3.2"
			},
			"dependencies": {
				"form-data": {
					"version": "2.3.3",
					"resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
					"integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
					"dev": true,
					"requires": {
						"asynckit": "^0.4.0",
						"combined-stream": "^1.0.6",
						"mime-types": "^2.1.12"
					}
				},
				"tough-cookie": {
					"version": "2.5.0",
					"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
					"integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
					"dev": true,
					"requires": {
						"psl": "^1.1.28",
						"punycode": "^2.1.1"
					}
				},
				"uuid": {
					"version": "3.4.0",
					"resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
					"integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
					"dev": true
				}
			}
		},
		"request-promise-core": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.4.tgz",
			"integrity": "sha512-TTbAfBBRdWD7aNNOoVOBH4pN/KigV6LyapYNNlAPA8JwbovRti1E88m3sYAwsLi5ryhPKsE9APwnjFTgdUjTpw==",
			"dev": true,
			"requires": {
				"lodash": "^4.17.19"
			}
		},
		"request-promise-native": {
			"version": "1.0.9",
			"resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.9.tgz",
			"integrity": "sha512-wcW+sIUiWnKgNY0dqCpOZkUbF/I+YPi+f09JZIDa39Ec+q82CpSYniDp+ISgTTbKmnpJWASeJBPZmoxH84wt3g==",
			"dev": true,
			"requires": {
				"request-promise-core": "1.1.4",
				"stealthy-require": "^1.1.1",
				"tough-cookie": "^2.3.3"
			},
			"dependencies": {
				"tough-cookie": {
					"version": "2.5.0",
					"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
					"integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
					"dev": true,
					"requires": {
						"psl": "^1.1.28",
						"punycode": "^2.1.1"
					}
				}
			}
		},
		"require-directory": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
			"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
			"dev": true
		},
		"require-main-filename": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
			"integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
			"dev": true
		},
		"resolve": {
			"version": "1.20.0",
			"resolved": "https://registry.npmjs.org/resolve/-/resolve-1.20.0.tgz",
			"integrity": "sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr067wjbmzOG8byDPBX63A==",
			"requires": {
				"is-core-module": "^2.2.0",
				"path-parse": "^1.0.6"
			}
		},
		"resolve-cwd": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
			"integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
			"dev": true,
			"requires": {
				"resolve-from": "^5.0.0"
			}
		},
		"resolve-from": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
			"integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
			"dev": true
		},
		"resolve-url": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
			"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
		},
		"responselike": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
			"integrity": "sha1-kYcg7ztjHFZCvgaPFa3lpG9Loec=",
			"dev": true,
			"requires": {
				"lowercase-keys": "^1.0.0"
			}
		},
		"restore-cursor": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
			"integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
			"requires": {
				"onetime": "^5.1.0",
				"signal-exit": "^3.0.2"
			}
		},
		"ret": {
			"version": "0.1.15",
			"resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
			"integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="
		},
		"retry": {
			"version": "0.12.0",
			"resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
			"integrity": "sha1-G0KmJmoh8HQh0bC1S33BZ7AcATs=",
			"dev": true
		},
		"reusify": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
			"integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw=="
		},
		"rgb-regex": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",
			"integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE=",
			"dev": true
		},
		"rgba-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",
			"integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM=",
			"dev": true
		},
		"rimraf": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
			"integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
			"dev": true,
			"requires": {
				"glob": "^7.1.3"
			}
		},
		"ripemd160": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
			"integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
			"dev": true,
			"requires": {
				"hash-base": "^3.0.0",
				"inherits": "^2.0.1"
			}
		},
		"rlp": {
			"version": "2.2.6",
			"resolved": "https://registry.npmjs.org/rlp/-/rlp-2.2.6.tgz",
			"integrity": "sha512-HAfAmL6SDYNWPUOJNrM500x4Thn4PZsEy5pijPh40U9WfNk0z15hUYzO9xVIMAdIHdFtD8CBDHd75Td1g36Mjg==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"rsvp": {
			"version": "4.8.5",
			"resolved": "https://registry.npmjs.org/rsvp/-/rsvp-4.8.5.tgz",
			"integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839HwjwhBzhFmdsaEAfauA==",
			"dev": true
		},
		"run-async": {
			"version": "2.4.1",
			"resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
			"integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ=="
		},
		"run-parallel": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
			"integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
			"requires": {
				"queue-microtask": "^1.2.2"
			}
		},
		"rustbn.js": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/rustbn.js/-/rustbn.js-0.2.0.tgz",
			"integrity": "sha512-4VlvkRUuCJvr2J6Y0ImW7NvTCriMi7ErOAqWk1y69vAdoNIzCF3yPmgeNzx+RQTLEDFq5sHfscn1MwHxP9hNfA==",
			"dev": true
		},
		"rx": {
			"version": "2.3.24",
			"resolved": "https://registry.npmjs.org/rx/-/rx-2.3.24.tgz",
			"integrity": "sha1-FPlQpCF9fjXapxu8vljv9o6ksrc="
		},
		"rxjs": {
			"version": "6.6.7",
			"resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
			"integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
			"requires": {
				"tslib": "^1.9.0"
			}
		},
		"safe-buffer": {
			"version": "5.2.1",
			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
			"integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
		},
		"safe-event-emitter": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
			"integrity": "sha512-e1wFe99A91XYYxoQbcq2ZJUWurxEyP8vfz7A7vuUe1s95q8r5ebraVaA1BukYJcpM6V16ugWoD9vngi8Ccu5fg==",
			"dev": true,
			"requires": {
				"events": "^3.0.0"
			}
		},
		"safe-regex": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
			"integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
			"requires": {
				"ret": "~0.1.10"
			}
		},
		"safer-buffer": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
			"integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
		},
		"sane": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/sane/-/sane-4.1.0.tgz",
			"integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",
			"dev": true,
			"requires": {
				"@cnakazawa/watch": "^1.0.3",
				"anymatch": "^2.0.0",
				"capture-exit": "^2.0.0",
				"exec-sh": "^0.3.2",
				"execa": "^1.0.0",
				"fb-watchman": "^2.0.0",
				"micromatch": "^3.1.4",
				"minimist": "^1.1.1",
				"walker": "~1.0.5"
			},
			"dependencies": {
				"anymatch": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
					"integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
					"dev": true,
					"requires": {
						"micromatch": "^3.1.4",
						"normalize-path": "^2.1.1"
					}
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"dev": true,
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"dev": true,
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"dev": true,
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"dev": true,
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"dev": true,
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"dev": true,
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"normalize-path": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
					"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
					"dev": true,
					"requires": {
						"remove-trailing-separator": "^1.0.1"
					}
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"dev": true,
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				}
			}
		},
		"sax": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
			"integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
			"dev": true
		},
		"saxes": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/saxes/-/saxes-5.0.1.tgz",
			"integrity": "sha512-5LBh1Tls8c9xgGjw3QrMwETmTMVk0oFgvrFSvWx62llR2hcEInrKNZ2GZCCuuy2lvWrdl5jhbpeqc5hRYKFOcw==",
			"dev": true,
			"requires": {
				"xmlchars": "^2.2.0"
			}
		},
		"scheduler": {
			"version": "0.20.2",
			"resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.20.2.tgz",
			"integrity": "sha512-2eWfGgAqqWFGqtdMmcL5zCMK1U8KlXv8SQFGglL3CEtd0aDVDWgeF/YoCmvln55m5zSk3J/20hTaSBeSObsQDQ==",
			"dev": true,
			"requires": {
				"loose-envify": "^1.1.0",
				"object-assign": "^4.1.1"
			}
		},
		"scoped-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/scoped-regex/-/scoped-regex-1.0.0.tgz",
			"integrity": "sha1-o0a7Gs1CB65wvXwMfKnlZra63bg="
		},
		"scrypt-js": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/scrypt-js/-/scrypt-js-3.0.1.tgz",
			"integrity": "sha512-cdwTTnqPu0Hyvf5in5asVdZocVDTNRmR7XEcJuIzMjJeSHybHl7vpB66AzwTaIg6CLSbtjcxc8fqcySfnTkccA==",
			"dev": true
		},
		"secp256k1": {
			"version": "3.8.0",
			"resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-3.8.0.tgz",
			"integrity": "sha512-k5ke5avRZbtl9Tqx/SA7CbY3NF6Ro+Sj9cZxezFzuBlLDmyqPiL8hJJ+EmzD8Ig4LUDByHJ3/iPOVoRixs/hmw==",
			"dev": true,
			"optional": true,
			"requires": {
				"bindings": "^1.5.0",
				"bip66": "^1.1.5",
				"bn.js": "^4.11.8",
				"create-hash": "^1.2.0",
				"drbg.js": "^1.0.1",
				"elliptic": "^6.5.2",
				"nan": "^2.14.0",
				"safe-buffer": "^5.1.2"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true,
					"optional": true
				}
			}
		},
		"semaphore": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/semaphore/-/semaphore-1.1.0.tgz",
			"integrity": "sha512-O4OZEaNtkMd/K0i6js9SL+gqy0ZCBMgUvlSqHKi4IBdjhe7wB8pwztUk1BbZ1fmrvpwFrPbHzqd2w5pTcJH6LA==",
			"dev": true
		},
		"semver": {
			"version": "6.3.0",
			"resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
			"integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
		},
		"semver-diff": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/semver-diff/-/semver-diff-3.1.1.tgz",
			"integrity": "sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==",
			"dev": true,
			"requires": {
				"semver": "^6.3.0"
			}
		},
		"send": {
			"version": "0.17.1",
			"resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
			"integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
			"dev": true,
			"requires": {
				"debug": "2.6.9",
				"depd": "~1.1.2",
				"destroy": "~1.0.4",
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"etag": "~1.8.1",
				"fresh": "0.5.2",
				"http-errors": "~1.7.2",
				"mime": "1.6.0",
				"ms": "2.1.1",
				"on-finished": "~2.3.0",
				"range-parser": "~1.2.1",
				"statuses": "~1.5.0"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					},
					"dependencies": {
						"ms": {
							"version": "2.0.0",
							"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
							"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
							"dev": true
						}
					}
				},
				"depd": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
					"integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=",
					"dev": true
				},
				"http-errors": {
					"version": "1.7.3",
					"resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.3.tgz",
					"integrity": "sha512-ZTTX0MWrsQ2ZAhA1cejAwDLycFsd7I7nVtnkT3Ol0aqodaKW+0CTZDQ1uBv5whptCnc8e8HeRRJxRs0kmm/Qfw==",
					"dev": true,
					"requires": {
						"depd": "~1.1.2",
						"inherits": "2.0.4",
						"setprototypeof": "1.1.1",
						"statuses": ">= 1.5.0 < 2",
						"toidentifier": "1.0.0"
					}
				},
				"ms": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
					"integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
					"dev": true
				},
				"setprototypeof": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
					"integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
					"dev": true
				}
			}
		},
		"serialize-to-js": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/serialize-to-js/-/serialize-to-js-3.1.1.tgz",
			"integrity": "sha512-F+NGU0UHMBO4Q965tjw7rvieNVjlH6Lqi2emq/Lc9LUURYJbiCzmpi4Cy1OOjjVPtxu0c+NE85LU6968Wko5ZA==",
			"dev": true
		},
		"serve-static": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
			"integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
			"dev": true,
			"requires": {
				"encodeurl": "~1.0.2",
				"escape-html": "~1.0.3",
				"parseurl": "~1.3.3",
				"send": "0.17.1"
			}
		},
		"servify": {
			"version": "0.1.12",
			"resolved": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz",
			"integrity": "sha512-/xE6GvsKKqyo1BAY+KxOWXcLpPsUUyji7Qg3bVD7hh1eRze5bR1uYiuDA/k3Gof1s9BTzQZEJK8sNcNGFIzeWw==",
			"dev": true,
			"requires": {
				"body-parser": "^1.16.0",
				"cors": "^2.8.1",
				"express": "^4.14.0",
				"request": "^2.79.0",
				"xhr": "^2.3.3"
			}
		},
		"set-blocking": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
			"integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",
			"dev": true
		},
		"set-getter": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/set-getter/-/set-getter-0.1.1.tgz",
			"integrity": "sha512-9sVWOy+gthr+0G9DzqqLaYNA7+5OKkSmcqjL9cBpDEaZrr3ShQlyX2cZ/O/ozE41oxn/Tt0LGEM/w4Rub3A3gw==",
			"requires": {
				"to-object-path": "^0.3.0"
			}
		},
		"set-immediate-shim": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/set-immediate-shim/-/set-immediate-shim-1.0.1.tgz",
			"integrity": "sha1-SysbJ+uAip+NzEgaWOXlb1mfP2E=",
			"dev": true
		},
		"set-value": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
			"integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
			"requires": {
				"extend-shallow": "^2.0.1",
				"is-extendable": "^0.1.1",
				"is-plain-object": "^2.0.3",
				"split-string": "^3.0.1"
			},
			"dependencies": {
				"extend-shallow": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
					"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
					"requires": {
						"is-extendable": "^0.1.0"
					}
				}
			}
		},
		"setimmediate": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
			"integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU=",
			"dev": true
		},
		"setprototypeof": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
			"integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
		},
		"sha.js": {
			"version": "2.4.11",
			"resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
			"integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.1",
				"safe-buffer": "^5.0.1"
			}
		},
		"shallow-clone": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
			"integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
			"requires": {
				"kind-of": "^6.0.2"
			}
		},
		"shallow-copy": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/shallow-copy/-/shallow-copy-0.0.1.tgz",
			"integrity": "sha1-QV9CcC1z2BAzApLMXuhurhoRoXA=",
			"dev": true
		},
		"shebang-command": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
			"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
			"requires": {
				"shebang-regex": "^1.0.0"
			}
		},
		"shebang-regex": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
			"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
		},
		"shelljs": {
			"version": "0.8.4",
			"resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.8.4.tgz",
			"integrity": "sha512-7gk3UZ9kOfPLIAbslLzyWeGiEqx9e3rxwZM0KE6EL8GlGwjym9Mrlx5/p33bWTu9YG6vcS4MBxYZDHYr5lr8BQ==",
			"requires": {
				"glob": "^7.0.0",
				"interpret": "^1.0.0",
				"rechoir": "^0.6.2"
			}
		},
		"shellwords": {
			"version": "0.1.1",
			"resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",
			"integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww==",
			"dev": true,
			"optional": true
		},
		"side-channel": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz",
			"integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.0",
				"get-intrinsic": "^1.0.2",
				"object-inspect": "^1.9.0"
			}
		},
		"signal-exit": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
			"integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA=="
		},
		"simple-concat": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
			"integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
			"dev": true
		},
		"simple-get": {
			"version": "2.8.1",
			"resolved": "https://registry.npmjs.org/simple-get/-/simple-get-2.8.1.tgz",
			"integrity": "sha512-lSSHRSw3mQNUGPAYRqo7xy9dhKmxFXIjLjp4KHpf99GEH2VH7C3AM+Qfx6du6jhfUi6Vm7XnbEVEf7Wb6N8jRw==",
			"dev": true,
			"requires": {
				"decompress-response": "^3.3.0",
				"once": "^1.3.1",
				"simple-concat": "^1.0.0"
			}
		},
		"simple-swizzle": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
			"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
			"dev": true,
			"requires": {
				"is-arrayish": "^0.3.1"
			},
			"dependencies": {
				"is-arrayish": {
					"version": "0.3.2",
					"resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
					"integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
					"dev": true
				}
			}
		},
		"sisteransi": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
			"integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==",
			"dev": true
		},
		"slash": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
			"integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q=="
		},
		"slide": {
			"version": "1.1.6",
			"resolved": "https://registry.npmjs.org/slide/-/slide-1.1.6.tgz",
			"integrity": "sha1-VusCfWW00tzmyy4tMsTUr8nh1wc=",
			"dev": true
		},
		"smart-buffer": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.1.0.tgz",
			"integrity": "sha512-iVICrxOzCynf/SNaBQCw34eM9jROU/s5rzIhpOvzhzuYHfJR/DhZfDkXiZSgKXfgv26HT3Yni3AV/DGw0cGnnw==",
			"dev": true
		},
		"snapdragon": {
			"version": "0.8.2",
			"resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
			"integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
			"requires": {
				"base": "^0.11.1",
				"debug": "^2.2.0",
				"define-property": "^0.2.5",
				"extend-shallow": "^2.0.1",
				"map-cache": "^0.2.2",
				"source-map": "^0.5.6",
				"source-map-resolve": "^0.5.0",
				"use": "^3.1.0"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"requires": {
						"ms": "2.0.0"
					}
				},
				"define-property": {
					"version": "0.2.5",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
					"integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
					"requires": {
						"is-descriptor": "^0.1.0"
					}
				},
				"extend-shallow": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
					"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
					"requires": {
						"is-extendable": "^0.1.0"
					}
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
				}
			}
		},
		"snapdragon-node": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
			"integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
			"requires": {
				"define-property": "^1.0.0",
				"isobject": "^3.0.0",
				"snapdragon-util": "^3.0.1"
			},
			"dependencies": {
				"define-property": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
					"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
					"requires": {
						"is-descriptor": "^1.0.0"
					}
				},
				"is-accessor-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
					"integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-data-descriptor": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
					"integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
					"requires": {
						"kind-of": "^6.0.0"
					}
				},
				"is-descriptor": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
					"integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
					"requires": {
						"is-accessor-descriptor": "^1.0.0",
						"is-data-descriptor": "^1.0.0",
						"kind-of": "^6.0.2"
					}
				}
			}
		},
		"snapdragon-util": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
			"integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
			"requires": {
				"kind-of": "^3.2.0"
			},
			"dependencies": {
				"kind-of": {
					"version": "3.2.2",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
					"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"socks": {
			"version": "2.6.1",
			"resolved": "https://registry.npmjs.org/socks/-/socks-2.6.1.tgz",
			"integrity": "sha512-kLQ9N5ucj8uIcxrDwjm0Jsqk06xdpBjGNQtpXy4Q8/QY2k+fY7nZH8CARy+hkbG+SGAovmzzuauCpBlb8FrnBA==",
			"dev": true,
			"requires": {
				"ip": "^1.1.5",
				"smart-buffer": "^4.1.0"
			}
		},
		"socks-proxy-agent": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-5.0.1.tgz",
			"integrity": "sha512-vZdmnjb9a2Tz6WEQVIurybSwElwPxMZaIc7PzqbJTrezcKNznv6giT7J7tZDZ1BojVaa1jvO/UiUdhDVB0ACoQ==",
			"dev": true,
			"requires": {
				"agent-base": "^6.0.2",
				"debug": "4",
				"socks": "^2.3.3"
			}
		},
		"sort-keys": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-1.1.2.tgz",
			"integrity": "sha1-RBttTTRnmPG05J6JIK37oOVD+a0=",
			"dev": true,
			"requires": {
				"is-plain-obj": "^1.0.0"
			}
		},
		"sort-pjson": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/sort-pjson/-/sort-pjson-1.0.3.tgz",
			"integrity": "sha512-h/xRX+8zuV9tbnbkRwmdNNyyJbjzVTh8YFpMgEgGU2umFDFg2EDfWKtA5YOfnBwT4YoZfJf6hrc0yuXLUvUDFA==",
			"requires": {
				"@oclif/fixpack": "^2.3.0"
			}
		},
		"source-map": {
			"version": "0.5.7",
			"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
			"integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w="
		},
		"source-map-resolve": {
			"version": "0.5.3",
			"resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
			"integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
			"requires": {
				"atob": "^2.1.2",
				"decode-uri-component": "^0.2.0",
				"resolve-url": "^0.2.1",
				"source-map-url": "^0.4.0",
				"urix": "^0.1.0"
			}
		},
		"source-map-support": {
			"version": "0.5.19",
			"resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.19.tgz",
			"integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi/Mdjv7Tip2cyVbLj5o0cFPN4EVkuTwb3GDDyUx2DGnGw==",
			"dev": true,
			"requires": {
				"buffer-from": "^1.0.0",
				"source-map": "^0.6.0"
			},
			"dependencies": {
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"source-map-url": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.1.tgz",
			"integrity": "sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw=="
		},
		"spawn-command": {
			"version": "0.0.2-1",
			"resolved": "https://registry.npmjs.org/spawn-command/-/spawn-command-0.0.2-1.tgz",
			"integrity": "sha1-YvXpRmmBwbeW3Fkpk34RycaSG9A="
		},
		"spdx-correct": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz",
			"integrity": "sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==",
			"requires": {
				"spdx-expression-parse": "^3.0.0",
				"spdx-license-ids": "^3.0.0"
			}
		},
		"spdx-exceptions": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz",
			"integrity": "sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A=="
		},
		"spdx-expression-parse": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz",
			"integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==",
			"requires": {
				"spdx-exceptions": "^2.1.0",
				"spdx-license-ids": "^3.0.0"
			}
		},
		"spdx-license-ids": {
			"version": "3.0.9",
			"resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.9.tgz",
			"integrity": "sha512-Ki212dKK4ogX+xDo4CtOZBVIwhsKBEfsEEcwmJfLQzirgc2jIWdzg40Unxz/HzEUqM1WFzVlQSMF9kZZ2HboLQ=="
		},
		"split": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/split/-/split-1.0.1.tgz",
			"integrity": "sha512-mTyOoPbrivtXnwnIxZRFYRrPNtEFKlpB2fvjSnCQUiAA6qAZzqwna5envK4uk6OIeP17CsdF3rSBGYVBsU0Tkg==",
			"dev": true,
			"requires": {
				"through": "2"
			}
		},
		"split-on-first": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
			"integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==",
			"dev": true
		},
		"split-string": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
			"integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
			"requires": {
				"extend-shallow": "^3.0.0"
			}
		},
		"split2": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/split2/-/split2-3.2.2.tgz",
			"integrity": "sha512-9NThjpgZnifTkJpzTZ7Eue85S49QwpNhZTq6GRJwObb6jnLFNGB7Qm73V5HewTROPyxD0C29xqmaI68bQtV+hg==",
			"dev": true,
			"requires": {
				"readable-stream": "^3.0.0"
			}
		},
		"sprintf-js": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
			"integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
		},
		"srcset": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/srcset/-/srcset-3.0.1.tgz",
			"integrity": "sha512-MM8wDGg5BQJEj94tDrZDrX9wrC439/Eoeg3sgmVLPMjHgrAFeXAKk3tmFlCbKw5k+yOEhPXRpPlRcisQmqWVSQ==",
			"dev": true
		},
		"sshpk": {
			"version": "1.16.1",
			"resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
			"integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
			"dev": true,
			"requires": {
				"asn1": "~0.2.3",
				"assert-plus": "^1.0.0",
				"bcrypt-pbkdf": "^1.0.0",
				"dashdash": "^1.12.0",
				"ecc-jsbn": "~0.1.1",
				"getpass": "^0.1.1",
				"jsbn": "~0.1.0",
				"safer-buffer": "^2.0.2",
				"tweetnacl": "~0.14.0"
			},
			"dependencies": {
				"tweetnacl": {
					"version": "0.14.5",
					"resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
					"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
					"dev": true
				}
			}
		},
		"ssri": {
			"version": "8.0.1",
			"resolved": "https://registry.npmjs.org/ssri/-/ssri-8.0.1.tgz",
			"integrity": "sha512-97qShzy1AiyxvPNIkLWoGua7xoQzzPjQ0HAH4B0rWKo7SZ6USuPcrUiAFrws0UH8RrbWmgq3LMTObhPIHbbBeQ==",
			"dev": true,
			"requires": {
				"minipass": "^3.1.1"
			},
			"dependencies": {
				"minipass": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.3.tgz",
					"integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7DecbQE9uOZhNm7PuJg==",
					"dev": true,
					"requires": {
						"yallist": "^4.0.0"
					}
				}
			}
		},
		"stable": {
			"version": "0.1.8",
			"resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
			"integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
			"dev": true
		},
		"stack-utils": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.3.tgz",
			"integrity": "sha512-gL//fkxfWUsIlFL2Tl42Cl6+HFALEaB1FU76I/Fy+oZjRreP7OPMXFlGbxM7NQsI0ZpUfw76sHnv0WNYuTb7Iw==",
			"dev": true,
			"requires": {
				"escape-string-regexp": "^2.0.0"
			},
			"dependencies": {
				"escape-string-regexp": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
					"integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
					"dev": true
				}
			}
		},
		"static-eval": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/static-eval/-/static-eval-2.1.0.tgz",
			"integrity": "sha512-agtxZ/kWSsCkI5E4QifRwsaPs0P0JmZV6dkLz6ILYfFYQGn+5plctanRN+IC8dJRiFkyXHrwEE3W9Wmx67uDbw==",
			"dev": true,
			"requires": {
				"escodegen": "^1.11.1"
			},
			"dependencies": {
				"escodegen": {
					"version": "1.14.3",
					"resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.14.3.tgz",
					"integrity": "sha512-qFcX0XJkdg+PB3xjZZG/wKSuT1PnQWx57+TVSjIMmILd2yC/6ByYElPwJnslDsuWuSAp4AwJGumarAAmJch5Kw==",
					"dev": true,
					"requires": {
						"esprima": "^4.0.1",
						"estraverse": "^4.2.0",
						"esutils": "^2.0.2",
						"optionator": "^0.8.1",
						"source-map": "~0.6.1"
					}
				},
				"estraverse": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
					"integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true,
					"optional": true
				}
			}
		},
		"static-extend": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
			"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
			"requires": {
				"define-property": "^0.2.5",
				"object-copy": "^0.1.0"
			},
			"dependencies": {
				"define-property": {
					"version": "0.2.5",
					"resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
					"integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
					"requires": {
						"is-descriptor": "^0.1.0"
					}
				}
			}
		},
		"static-module": {
			"version": "2.2.5",
			"resolved": "https://registry.npmjs.org/static-module/-/static-module-2.2.5.tgz",
			"integrity": "sha512-D8vv82E/Kpmz3TXHKG8PPsCPg+RAX6cbCOyvjM6x04qZtQ47EtJFVwRsdov3n5d6/6ynrOY9XB4JkaZwB2xoRQ==",
			"dev": true,
			"requires": {
				"concat-stream": "~1.6.0",
				"convert-source-map": "^1.5.1",
				"duplexer2": "~0.1.4",
				"escodegen": "~1.9.0",
				"falafel": "^2.1.0",
				"has": "^1.0.1",
				"magic-string": "^0.22.4",
				"merge-source-map": "1.0.4",
				"object-inspect": "~1.4.0",
				"quote-stream": "~1.0.2",
				"readable-stream": "~2.3.3",
				"shallow-copy": "~0.0.1",
				"static-eval": "^2.0.0",
				"through2": "~2.0.3"
			},
			"dependencies": {
				"concat-stream": {
					"version": "1.6.2",
					"resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
					"integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
					"dev": true,
					"requires": {
						"buffer-from": "^1.0.0",
						"inherits": "^2.0.3",
						"readable-stream": "^2.2.2",
						"typedarray": "^0.0.6"
					}
				},
				"escodegen": {
					"version": "1.9.1",
					"resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.9.1.tgz",
					"integrity": "sha512-6hTjO1NAWkHnDk3OqQ4YrCuwwmGHL9S3nPlzBOUG/R44rda3wLNrfvQ5fkSGjyhHFKM7ALPKcKGrwvCLe0lC7Q==",
					"dev": true,
					"requires": {
						"esprima": "^3.1.3",
						"estraverse": "^4.2.0",
						"esutils": "^2.0.2",
						"optionator": "^0.8.1",
						"source-map": "~0.6.1"
					}
				},
				"esprima": {
					"version": "3.1.3",
					"resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",
					"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=",
					"dev": true
				},
				"estraverse": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
					"integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
					"dev": true
				},
				"object-inspect": {
					"version": "1.4.1",
					"resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.4.1.tgz",
					"integrity": "sha512-wqdhLpfCUbEsoEwl3FXwGyv8ief1k/1aUdIPCqVnupM6e8l63BEJdiF/0swtn04/8p05tG/T0FrpTlfwvljOdw==",
					"dev": true
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true,
					"optional": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"through2": {
					"version": "2.0.5",
					"resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
					"integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
					"dev": true,
					"requires": {
						"readable-stream": "~2.3.6",
						"xtend": "~4.0.1"
					}
				}
			}
		},
		"statuses": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
			"integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
		},
		"stealthy-require": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
			"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks=",
			"dev": true
		},
		"stoppable": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/stoppable/-/stoppable-1.1.0.tgz",
			"integrity": "sha512-KXDYZ9dszj6bzvnEMRYvxgeTHU74QBFL54XKtP3nyMuJ81CFYtABZ3bAzL2EdFUaEwJOBOgENyFj3R7oTzDyyw==",
			"dev": true
		},
		"stream-browserify": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",
			"integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",
			"dev": true,
			"requires": {
				"inherits": "~2.0.1",
				"readable-stream": "^2.0.2"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"stream-http": {
			"version": "2.8.3",
			"resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",
			"integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",
			"dev": true,
			"requires": {
				"builtin-status-codes": "^3.0.0",
				"inherits": "^2.0.1",
				"readable-stream": "^2.3.6",
				"to-arraybuffer": "^1.0.0",
				"xtend": "^4.0.0"
			},
			"dependencies": {
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				}
			}
		},
		"strict-uri-encode": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
			"integrity": "sha1-J5siXfHVgrH1TmWt3UNS4Y+qBxM=",
			"dev": true
		},
		"string-length": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz",
			"integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
			"dev": true,
			"requires": {
				"char-regex": "^1.0.2",
				"strip-ansi": "^6.0.0"
			}
		},
		"string-template": {
			"version": "0.2.1",
			"resolved": "https://registry.npmjs.org/string-template/-/string-template-0.2.1.tgz",
			"integrity": "sha1-QpMuWYo1LQH8IuwzZ9nYTuxsmt0="
		},
		"string-width": {
			"version": "4.2.2",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.2.tgz",
			"integrity": "sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==",
			"requires": {
				"emoji-regex": "^8.0.0",
				"is-fullwidth-code-point": "^3.0.0",
				"strip-ansi": "^6.0.0"
			}
		},
		"string.prototype.trimend": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.4.tgz",
			"integrity": "sha512-y9xCjw1P23Awk8EvTpcyL2NIr1j7wJ39f+k6lvRnSMz+mz9CGz9NYPelDk42kOz6+ql8xjfK8oYzy3jAP5QU5A==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"define-properties": "^1.1.3"
			}
		},
		"string.prototype.trimstart": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.4.tgz",
			"integrity": "sha512-jh6e984OBfvxS50tdY2nRZnoC5/mLFKOREQfw8t5yytkoUsJRNxvI/E39qu1sD0OtWI3OC0XgKSmcWwziwYuZw==",
			"dev": true,
			"requires": {
				"call-bind": "^1.0.2",
				"define-properties": "^1.1.3"
			}
		},
		"string_decoder": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
			"integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
			"requires": {
				"safe-buffer": "~5.2.0"
			}
		},
		"strip-ansi": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
			"integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
			"requires": {
				"ansi-regex": "^5.0.0"
			}
		},
		"strip-bom": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz",
			"integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w=="
		},
		"strip-bom-buf": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/strip-bom-buf/-/strip-bom-buf-1.0.0.tgz",
			"integrity": "sha1-HLRar1dTD0yvhsf3UXnSyaUd1XI=",
			"requires": {
				"is-utf8": "^0.2.1"
			}
		},
		"strip-bom-stream": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-2.0.0.tgz",
			"integrity": "sha1-+H217yYT9paKpUWr/h7HKLaoKco=",
			"requires": {
				"first-chunk-stream": "^2.0.0",
				"strip-bom": "^2.0.0"
			},
			"dependencies": {
				"strip-bom": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
					"integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
					"requires": {
						"is-utf8": "^0.2.0"
					}
				}
			}
		},
		"strip-eof": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
			"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
		},
		"strip-final-newline": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
			"integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA=="
		},
		"strip-hex-prefix": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/strip-hex-prefix/-/strip-hex-prefix-1.0.0.tgz",
			"integrity": "sha1-DF8VX+8RUTczd96du1iNoFUA428=",
			"dev": true,
			"requires": {
				"is-hex-prefixed": "1.0.0"
			}
		},
		"strip-indent": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz",
			"integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
			"dev": true,
			"requires": {
				"min-indent": "^1.0.0"
			}
		},
		"strip-json-comments": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
			"integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="
		},
		"strip-outer": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/strip-outer/-/strip-outer-1.0.1.tgz",
			"integrity": "sha512-k55yxKHwaXnpYGsOzg4Vl8+tDrWylxDEpknGjhTiZB8dFRU5rTo9CAzeycivxV3s+zlTKwrs6WxMxR95n26kwg==",
			"dev": true,
			"requires": {
				"escape-string-regexp": "^1.0.2"
			}
		},
		"strip-url-auth": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/strip-url-auth/-/strip-url-auth-1.0.1.tgz",
			"integrity": "sha1-IrD6OkE4WzO+PzMVUbu4N/oM164=",
			"dev": true
		},
		"strong-log-transformer": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/strong-log-transformer/-/strong-log-transformer-2.1.0.tgz",
			"integrity": "sha512-B3Hgul+z0L9a236FAUC9iZsL+nVHgoCJnqCbN588DjYxvGXaXaaFbfmQ/JhvKjZwsOukuR72XbHv71Qkug0HxA==",
			"dev": true,
			"requires": {
				"duplexer": "^0.1.1",
				"minimist": "^1.2.0",
				"through": "^2.3.4"
			}
		},
		"stylehacks": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",
			"integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",
			"dev": true,
			"requires": {
				"browserslist": "^4.0.0",
				"postcss": "^7.0.0",
				"postcss-selector-parser": "^3.0.0"
			},
			"dependencies": {
				"dot-prop": {
					"version": "5.3.0",
					"resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
					"integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
					"dev": true,
					"requires": {
						"is-obj": "^2.0.0"
					}
				},
				"postcss-selector-parser": {
					"version": "3.1.2",
					"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
					"integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
					"dev": true,
					"requires": {
						"dot-prop": "^5.2.0",
						"indexes-of": "^1.0.1",
						"uniq": "^1.0.1"
					}
				}
			}
		},
		"supports-color": {
			"version": "5.5.0",
			"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
			"integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
			"requires": {
				"has-flag": "^3.0.0"
			}
		},
		"supports-hyperlinks": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-2.2.0.tgz",
			"integrity": "sha512-6sXEzV5+I5j8Bmq9/vUphGRM/RJNT9SCURJLjwfOg51heRtguGWDzcaBlgAzKhQa0EVNpPEKzQuBwZ8S8WaCeQ==",
			"requires": {
				"has-flag": "^4.0.0",
				"supports-color": "^7.0.0"
			},
			"dependencies": {
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ=="
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"svgo": {
			"version": "1.3.2",
			"resolved": "https://registry.npmjs.org/svgo/-/svgo-1.3.2.tgz",
			"integrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
			"dev": true,
			"requires": {
				"chalk": "^2.4.1",
				"coa": "^2.0.2",
				"css-select": "^2.0.0",
				"css-select-base-adapter": "^0.1.1",
				"css-tree": "1.0.0-alpha.37",
				"csso": "^4.0.2",
				"js-yaml": "^3.13.1",
				"mkdirp": "~0.5.1",
				"object.values": "^1.1.0",
				"sax": "~1.2.4",
				"stable": "^0.1.8",
				"unquote": "~1.1.1",
				"util.promisify": "~1.0.0"
			}
		},
		"swarm-js": {
			"version": "0.1.40",
			"resolved": "https://registry.npmjs.org/swarm-js/-/swarm-js-0.1.40.tgz",
			"integrity": "sha512-yqiOCEoA4/IShXkY3WKwP5PvZhmoOOD8clsKA7EEcRILMkTEYHCQ21HDCAcVpmIxZq4LyZvWeRJ6quIyHk1caA==",
			"dev": true,
			"requires": {
				"bluebird": "^3.5.0",
				"buffer": "^5.0.5",
				"eth-lib": "^0.1.26",
				"fs-extra": "^4.0.2",
				"got": "^7.1.0",
				"mime-types": "^2.1.16",
				"mkdirp-promise": "^5.0.1",
				"mock-fs": "^4.1.0",
				"setimmediate": "^1.0.5",
				"tar": "^4.0.2",
				"xhr-request": "^1.0.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"eth-lib": {
					"version": "0.1.29",
					"resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.1.29.tgz",
					"integrity": "sha512-bfttrr3/7gG4E02HoWTDUcDDslN003OlOoBxk9virpAZQ1ja/jDgwkWB8QfJF7ojuEowrqy+lzp9VcJG7/k5bQ==",
					"dev": true,
					"requires": {
						"bn.js": "^4.11.6",
						"elliptic": "^6.4.0",
						"nano-json-stream-parser": "^0.1.2",
						"servify": "^0.1.12",
						"ws": "^3.0.0",
						"xhr-request-promise": "^0.1.2"
					}
				},
				"fs-extra": {
					"version": "4.0.3",
					"resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
					"integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.2",
						"jsonfile": "^4.0.0",
						"universalify": "^0.1.0"
					}
				},
				"get-stream": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
					"integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ=",
					"dev": true
				},
				"got": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/got/-/got-7.1.0.tgz",
					"integrity": "sha512-Y5WMo7xKKq1muPsxD+KmrR8DH5auG7fBdDVueZwETwV6VytKyU9OX/ddpq2/1hp1vIPvVb4T81dKQz3BivkNLw==",
					"dev": true,
					"requires": {
						"decompress-response": "^3.2.0",
						"duplexer3": "^0.1.4",
						"get-stream": "^3.0.0",
						"is-plain-obj": "^1.1.0",
						"is-retry-allowed": "^1.0.0",
						"is-stream": "^1.0.0",
						"isurl": "^1.0.0-alpha5",
						"lowercase-keys": "^1.0.0",
						"p-cancelable": "^0.3.0",
						"p-timeout": "^1.1.1",
						"safe-buffer": "^5.0.1",
						"timed-out": "^4.0.0",
						"url-parse-lax": "^1.0.0",
						"url-to-options": "^1.0.1"
					}
				},
				"p-cancelable": {
					"version": "0.3.0",
					"resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-0.3.0.tgz",
					"integrity": "sha512-RVbZPLso8+jFeq1MfNvgXtCRED2raz/dKpacfTNxsx6pLEpEomM7gah6VeHSYV3+vo0OAi4MkArtQcWWXuQoyw==",
					"dev": true
				},
				"p-timeout": {
					"version": "1.2.1",
					"resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-1.2.1.tgz",
					"integrity": "sha1-XrOzU7f86Z8QGhA4iAuwVOu+o4Y=",
					"dev": true,
					"requires": {
						"p-finally": "^1.0.0"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"url-parse-lax": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
					"integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
					"dev": true,
					"requires": {
						"prepend-http": "^1.0.1"
					}
				},
				"ws": {
					"version": "3.3.3",
					"resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
					"integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
					"dev": true,
					"requires": {
						"async-limiter": "~1.0.0",
						"safe-buffer": "~5.1.0",
						"ultron": "~1.1.0"
					}
				}
			}
		},
		"symbol-tree": {
			"version": "3.2.4",
			"resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
			"integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
			"dev": true
		},
		"taketalk": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/taketalk/-/taketalk-1.0.0.tgz",
			"integrity": "sha1-tNTw3u0gauffd1sSnqLKbeUvJt0=",
			"requires": {
				"get-stdin": "^4.0.1",
				"minimist": "^1.1.0"
			}
		},
		"tar": {
			"version": "4.4.13",
			"resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
			"integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
			"dev": true,
			"requires": {
				"chownr": "^1.1.1",
				"fs-minipass": "^1.2.5",
				"minipass": "^2.8.6",
				"minizlib": "^1.2.1",
				"mkdirp": "^0.5.0",
				"safe-buffer": "^5.1.2",
				"yallist": "^3.0.3"
			},
			"dependencies": {
				"yallist": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
					"integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
					"dev": true
				}
			}
		},
		"tar-fs": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
			"integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
			"requires": {
				"chownr": "^1.1.1",
				"mkdirp-classic": "^0.5.2",
				"pump": "^3.0.0",
				"tar-stream": "^2.1.4"
			}
		},
		"tar-stream": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
			"integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
			"requires": {
				"bl": "^4.0.3",
				"end-of-stream": "^1.4.1",
				"fs-constants": "^1.0.0",
				"inherits": "^2.0.3",
				"readable-stream": "^3.1.1"
			}
		},
		"tcp-port-used": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/tcp-port-used/-/tcp-port-used-1.0.2.tgz",
			"integrity": "sha512-l7ar8lLUD3XS1V2lfoJlCBaeoaWo/2xfYt81hM7VlvR4RrMVFqfmzfhLVk40hAb368uitje5gPtBRL1m/DGvLA==",
			"dev": true,
			"requires": {
				"debug": "4.3.1",
				"is2": "^2.0.6"
			},
			"dependencies": {
				"debug": {
					"version": "4.3.1",
					"resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
					"integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
					"dev": true,
					"requires": {
						"ms": "2.1.2"
					}
				}
			}
		},
		"temp-dir": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-1.0.0.tgz",
			"integrity": "sha1-CnwOom06Oa+n4OvqnB/AvE2qAR0=",
			"dev": true
		},
		"temp-write": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/temp-write/-/temp-write-4.0.0.tgz",
			"integrity": "sha512-HIeWmj77uOOHb0QX7siN3OtwV3CTntquin6TNVg6SHOqCP3hYKmox90eeFOGaY1MqJ9WYDDjkyZrW6qS5AWpbw==",
			"dev": true,
			"requires": {
				"graceful-fs": "^4.1.15",
				"is-stream": "^2.0.0",
				"make-dir": "^3.0.0",
				"temp-dir": "^1.0.0",
				"uuid": "^3.3.2"
			},
			"dependencies": {
				"is-stream": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
					"integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
					"dev": true
				},
				"uuid": {
					"version": "3.4.0",
					"resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
					"integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
					"dev": true
				}
			}
		},
		"term-size": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.1.tgz",
			"integrity": "sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==",
			"dev": true
		},
		"terminal-link": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/terminal-link/-/terminal-link-2.1.1.tgz",
			"integrity": "sha512-un0FmiRUQNr5PJqy9kP7c40F5BOfpGlYTrxonDChEZB7pzZxRNp/bt+ymiy9/npwXya9KH99nJ/GXFIiUkYGFQ==",
			"dev": true,
			"requires": {
				"ansi-escapes": "^4.2.1",
				"supports-hyperlinks": "^2.0.0"
			}
		},
		"terser": {
			"version": "3.17.0",
			"resolved": "https://registry.npmjs.org/terser/-/terser-3.17.0.tgz",
			"integrity": "sha512-/FQzzPJmCpjAH9Xvk2paiWrFq+5M6aVOf+2KRbwhByISDX/EujxsK+BAvrhb6H+2rtrLCHK9N01wO014vrIwVQ==",
			"dev": true,
			"requires": {
				"commander": "^2.19.0",
				"source-map": "~0.6.1",
				"source-map-support": "~0.5.10"
			},
			"dependencies": {
				"commander": {
					"version": "2.20.3",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
					"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
					"dev": true
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true
				}
			}
		},
		"test-exclude": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
			"integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
			"dev": true,
			"requires": {
				"@istanbuljs/schema": "^0.1.2",
				"glob": "^7.1.4",
				"minimatch": "^3.0.4"
			}
		},
		"text-encoding-utf-8": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
			"integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
		},
		"text-extensions": {
			"version": "1.9.0",
			"resolved": "https://registry.npmjs.org/text-extensions/-/text-extensions-1.9.0.tgz",
			"integrity": "sha512-wiBrwC1EhBelW12Zy26JeOUkQ5mRu+5o8rpsJk5+2t+Y5vE7e842qtZDQ2g1NpX/29HdyFeJ4nSIhI47ENSxlQ==",
			"dev": true
		},
		"text-table": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
			"integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="
		},
		"textextensions": {
			"version": "2.6.0",
			"resolved": "https://registry.npmjs.org/textextensions/-/textextensions-2.6.0.tgz",
			"integrity": "sha512-49WtAWS+tcsy93dRt6P0P3AMD2m5PvXRhuEA0kaXos5ZLlujtYmpmFsB+QvWUSxE1ZsstmYXfQ7L40+EcQgpAQ=="
		},
		"throat": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/throat/-/throat-5.0.0.tgz",
			"integrity": "sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==",
			"dev": true
		},
		"through": {
			"version": "2.3.8",
			"resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
			"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
		},
		"through2": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/through2/-/through2-4.0.2.tgz",
			"integrity": "sha512-iOqSav00cVxEEICeD7TjLB1sueEL+81Wpzp2bY17uZjZN0pWZPuo4suZ/61VujxmqSGFfgOcNuTZ85QJwNZQpw==",
			"dev": true,
			"requires": {
				"readable-stream": "3"
			}
		},
		"timed-out": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
			"integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8="
		},
		"timers-browserify": {
			"version": "2.0.12",
			"resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.12.tgz",
			"integrity": "sha512-9phl76Cqm6FhSX9Xe1ZUAMLtm1BLkKj2Qd5ApyWkXzsMRaA7dgr81kf4wJmQf/hAvg8EEyJxDo3du/0KlhPiKQ==",
			"dev": true,
			"requires": {
				"setimmediate": "^1.0.4"
			}
		},
		"timsort": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
			"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q=",
			"dev": true
		},
		"tiny-inflate": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/tiny-inflate/-/tiny-inflate-1.0.3.tgz",
			"integrity": "sha512-pkY1fj1cKHb2seWDy0B16HeWyczlJA9/WW3u3c4z/NiWDsO3DOU5D7nhTLE9CF0yXv/QZFY7sEJmj24dK+Rrqw==",
			"dev": true
		},
		"tmp": {
			"version": "0.0.33",
			"resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
			"integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
			"requires": {
				"os-tmpdir": "~1.0.2"
			}
		},
		"tmpl": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz",
			"integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE=",
			"dev": true
		},
		"to-arraybuffer": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",
			"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
			"dev": true
		},
		"to-fast-properties": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
			"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
			"dev": true
		},
		"to-object-path": {
			"version": "0.3.0",
			"resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
			"integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
			"requires": {
				"kind-of": "^3.0.2"
			},
			"dependencies": {
				"kind-of": {
					"version": "3.2.2",
					"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
					"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
					"requires": {
						"is-buffer": "^1.1.5"
					}
				}
			}
		},
		"to-readable-stream": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
			"integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==",
			"dev": true
		},
		"to-regex": {
			"version": "3.0.2",
			"resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
			"integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
			"requires": {
				"define-property": "^2.0.2",
				"extend-shallow": "^3.0.2",
				"regex-not": "^1.0.2",
				"safe-regex": "^1.1.0"
			}
		},
		"to-regex-range": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
			"integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
			"requires": {
				"is-number": "^7.0.0"
			}
		},
		"toidentifier": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
			"integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw=="
		},
		"touch": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
			"integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
			"dev": true,
			"requires": {
				"nopt": "~1.0.10"
			},
			"dependencies": {
				"nopt": {
					"version": "1.0.10",
					"resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
					"integrity": "sha1-bd0hvSoxQXuScn3Vhfim83YI6+4=",
					"dev": true,
					"requires": {
						"abbrev": "1"
					}
				}
			}
		},
		"tough-cookie": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.0.0.tgz",
			"integrity": "sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg==",
			"dev": true,
			"requires": {
				"psl": "^1.1.33",
				"punycode": "^2.1.1",
				"universalify": "^0.1.2"
			}
		},
		"tr46": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/tr46/-/tr46-2.1.0.tgz",
			"integrity": "sha512-15Ih7phfcdP5YxqiB+iDtLoaTz4Nd35+IiAv0kQ5FNKHzXgdWqPoTIqEDDJmXceQt4JZk6lVPT8lnDlPpGDppw==",
			"dev": true,
			"requires": {
				"punycode": "^2.1.1"
			}
		},
		"tree-kill": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz",
			"integrity": "sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A=="
		},
		"treeify": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz",
			"integrity": "sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A=="
		},
		"trim-newlines": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-3.0.1.tgz",
			"integrity": "sha512-c1PTsA3tYrIsLGkJkzHF+w9F2EyxfXGo4UyJc4pFL++FMjnq0HJS69T3M7d//gKrFKwy429bouPescbjecU+Zw==",
			"dev": true
		},
		"trim-off-newlines": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/trim-off-newlines/-/trim-off-newlines-1.0.1.tgz",
			"integrity": "sha1-n5up2e+odkw4dpi8v+sshI8RrbM=",
			"dev": true
		},
		"trim-repeated": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/trim-repeated/-/trim-repeated-1.0.0.tgz",
			"integrity": "sha1-42RqLqTokTEr9+rObPsFOAvAHCE=",
			"dev": true,
			"requires": {
				"escape-string-regexp": "^1.0.2"
			}
		},
		"ts-node": {
			"version": "10.1.0",
			"resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.1.0.tgz",
			"integrity": "sha512-6szn3+J9WyG2hE+5W8e0ruZrzyk1uFLYye6IGMBadnOzDh8aP7t8CbFpsfCiEx2+wMixAhjFt7lOZC4+l+WbEA==",
			"dev": true,
			"requires": {
				"@tsconfig/node10": "^1.0.7",
				"@tsconfig/node12": "^1.0.7",
				"@tsconfig/node14": "^1.0.0",
				"@tsconfig/node16": "^1.0.1",
				"arg": "^4.1.0",
				"create-require": "^1.1.0",
				"diff": "^4.0.1",
				"make-error": "^1.1.1",
				"source-map-support": "^0.5.17",
				"yn": "3.1.1"
			}
		},
		"tslib": {
			"version": "1.14.1",
			"resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
			"integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg=="
		},
		"tty-browserify": {
			"version": "0.0.0",
			"resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",
			"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
			"dev": true
		},
		"tunnel-agent": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
			"integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
			"requires": {
				"safe-buffer": "^5.0.1"
			}
		},
		"tweetnacl": {
			"version": "1.0.3",
			"resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
			"integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
		},
		"tweetnacl-util": {
			"version": "0.15.1",
			"resolved": "https://registry.npmjs.org/tweetnacl-util/-/tweetnacl-util-0.15.1.tgz",
			"integrity": "sha512-RKJBIj8lySrShN4w6i/BonWp2Z/uxwC3h4y7xsRrpP59ZboCd0GpEVsOnMDYLMmKBpYhb5TgHzZXy7wTfYFBRw==",
			"dev": true
		},
		"type": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
			"integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg==",
			"dev": true
		},
		"type-check": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
			"integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
			"dev": true,
			"requires": {
				"prelude-ls": "~1.1.2"
			}
		},
		"type-detect": {
			"version": "4.0.8",
			"resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
			"integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
			"dev": true
		},
		"type-fest": {
			"version": "0.8.1",
			"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
			"integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
			"dev": true
		},
		"type-is": {
			"version": "1.6.18",
			"resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
			"integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
			"dev": true,
			"requires": {
				"media-typer": "0.3.0",
				"mime-types": "~2.1.24"
			}
		},
		"typedarray": {
			"version": "0.0.6",
			"resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
			"integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
			"dev": true
		},
		"typedarray-to-buffer": {
			"version": "3.1.5",
			"resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
			"integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
			"requires": {
				"is-typedarray": "^1.0.0"
			}
		},
		"typescript": {
			"version": "4.3.5",
			"resolved": "https://registry.npmjs.org/typescript/-/typescript-4.3.5.tgz",
			"integrity": "sha512-DqQgihaQ9cUrskJo9kIyW/+g0Vxsk8cDtZ52a3NGh0YNTfpUSArXSohyUGnvbPazEPLu398C0UxmKSOrPumUzA==",
			"dev": true
		},
		"u3": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/u3/-/u3-0.1.0.tgz",
			"integrity": "sha1-AGCSdmO2g1PFOc2pnpUR1mh+3Z0="
		},
		"uglify-js": {
			"version": "3.13.10",
			"resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.13.10.tgz",
			"integrity": "sha512-57H3ACYFXeo1IaZ1w02sfA71wI60MGco/IQFjOqK+WtKoprh7Go2/yvd2HPtoJILO2Or84ncLccI4xoHMTSbGg==",
			"dev": true,
			"optional": true
		},
		"uid-number": {
			"version": "0.0.6",
			"resolved": "https://registry.npmjs.org/uid-number/-/uid-number-0.0.6.tgz",
			"integrity": "sha1-DqEOgDXo61uOREnwbaHHMGY7qoE=",
			"dev": true
		},
		"ultron": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
			"integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og==",
			"dev": true
		},
		"umask": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/umask/-/umask-1.1.0.tgz",
			"integrity": "sha1-8pzr8B31F5ErtY/5xOUP3o4zMg0=",
			"dev": true
		},
		"unbox-primitive": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.1.tgz",
			"integrity": "sha512-tZU/3NqK3dA5gpE1KtyiJUrEB0lxnGkMFHptJ7q6ewdZ8s12QrODwNbhIJStmJkd1QDXa1NRA8aF2A1zk/Ypyw==",
			"dev": true,
			"requires": {
				"function-bind": "^1.1.1",
				"has-bigints": "^1.0.1",
				"has-symbols": "^1.0.2",
				"which-boxed-primitive": "^1.0.2"
			}
		},
		"uncss": {
			"version": "0.17.3",
			"resolved": "https://registry.npmjs.org/uncss/-/uncss-0.17.3.tgz",
			"integrity": "sha512-ksdDWl81YWvF/X14fOSw4iu8tESDHFIeyKIeDrK6GEVTQvqJc1WlOEXqostNwOCi3qAj++4EaLsdAgPmUbEyog==",
			"dev": true,
			"requires": {
				"commander": "^2.20.0",
				"glob": "^7.1.4",
				"is-absolute-url": "^3.0.1",
				"is-html": "^1.1.0",
				"jsdom": "^14.1.0",
				"lodash": "^4.17.15",
				"postcss": "^7.0.17",
				"postcss-selector-parser": "6.0.2",
				"request": "^2.88.0"
			},
			"dependencies": {
				"acorn": {
					"version": "6.4.2",
					"resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.2.tgz",
					"integrity": "sha512-XtGIhXwF8YM8bJhGxG5kXgjkEuNGLTkoYqVE+KMR+aspr4KGYmKYg7yUe3KghyQ9yheNwLnjmzh/7+gfDBmHCQ==",
					"dev": true
				},
				"acorn-globals": {
					"version": "4.3.4",
					"resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.4.tgz",
					"integrity": "sha512-clfQEh21R+D0leSbUdWf3OcfqyaCSAQ8Ryq00bofSekfr9W8u1jyYZo6ir0xu9Gtcf7BjcHJpnbZH7JOCpP60A==",
					"dev": true,
					"requires": {
						"acorn": "^6.0.1",
						"acorn-walk": "^6.0.1"
					}
				},
				"acorn-walk": {
					"version": "6.2.0",
					"resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.2.0.tgz",
					"integrity": "sha512-7evsyfH1cLOCdAzZAd43Cic04yKydNx0cF+7tiA19p1XnLLPU4dpCQOqpjqwokFe//vS0QqfqqjCS2JkiIs0cA==",
					"dev": true
				},
				"commander": {
					"version": "2.20.3",
					"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
					"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
					"dev": true
				},
				"cssom": {
					"version": "0.3.8",
					"resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
					"integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
					"dev": true
				},
				"cssstyle": {
					"version": "1.4.0",
					"resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.4.0.tgz",
					"integrity": "sha512-GBrLZYZ4X4x6/QEoBnIrqb8B/f5l4+8me2dkom/j1Gtbxy0kBv6OGzKuAsGM75bkGwGAFkt56Iwg28S3XTZgSA==",
					"dev": true,
					"requires": {
						"cssom": "0.3.x"
					}
				},
				"data-urls": {
					"version": "1.1.0",
					"resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",
					"integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",
					"dev": true,
					"requires": {
						"abab": "^2.0.0",
						"whatwg-mimetype": "^2.2.0",
						"whatwg-url": "^7.0.0"
					}
				},
				"domexception": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",
					"integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",
					"dev": true,
					"requires": {
						"webidl-conversions": "^4.0.2"
					}
				},
				"escodegen": {
					"version": "1.14.3",
					"resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.14.3.tgz",
					"integrity": "sha512-qFcX0XJkdg+PB3xjZZG/wKSuT1PnQWx57+TVSjIMmILd2yC/6ByYElPwJnslDsuWuSAp4AwJGumarAAmJch5Kw==",
					"dev": true,
					"requires": {
						"esprima": "^4.0.1",
						"estraverse": "^4.2.0",
						"esutils": "^2.0.2",
						"optionator": "^0.8.1",
						"source-map": "~0.6.1"
					}
				},
				"estraverse": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
					"integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
					"dev": true
				},
				"html-encoding-sniffer": {
					"version": "1.0.2",
					"resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
					"integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",
					"dev": true,
					"requires": {
						"whatwg-encoding": "^1.0.1"
					}
				},
				"is-absolute-url": {
					"version": "3.0.3",
					"resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz",
					"integrity": "sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q==",
					"dev": true
				},
				"jsdom": {
					"version": "14.1.0",
					"resolved": "https://registry.npmjs.org/jsdom/-/jsdom-14.1.0.tgz",
					"integrity": "sha512-O901mfJSuTdwU2w3Sn+74T+RnDVP+FuV5fH8tcPWyqrseRAb0s5xOtPgCFiPOtLcyK7CLIJwPyD83ZqQWvA5ng==",
					"dev": true,
					"requires": {
						"abab": "^2.0.0",
						"acorn": "^6.0.4",
						"acorn-globals": "^4.3.0",
						"array-equal": "^1.0.0",
						"cssom": "^0.3.4",
						"cssstyle": "^1.1.1",
						"data-urls": "^1.1.0",
						"domexception": "^1.0.1",
						"escodegen": "^1.11.0",
						"html-encoding-sniffer": "^1.0.2",
						"nwsapi": "^2.1.3",
						"parse5": "5.1.0",
						"pn": "^1.1.0",
						"request": "^2.88.0",
						"request-promise-native": "^1.0.5",
						"saxes": "^3.1.9",
						"symbol-tree": "^3.2.2",
						"tough-cookie": "^2.5.0",
						"w3c-hr-time": "^1.0.1",
						"w3c-xmlserializer": "^1.1.2",
						"webidl-conversions": "^4.0.2",
						"whatwg-encoding": "^1.0.5",
						"whatwg-mimetype": "^2.3.0",
						"whatwg-url": "^7.0.0",
						"ws": "^6.1.2",
						"xml-name-validator": "^3.0.0"
					}
				},
				"parse5": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",
					"integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ==",
					"dev": true
				},
				"postcss-selector-parser": {
					"version": "6.0.2",
					"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",
					"integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",
					"dev": true,
					"requires": {
						"cssesc": "^3.0.0",
						"indexes-of": "^1.0.1",
						"uniq": "^1.0.1"
					}
				},
				"saxes": {
					"version": "3.1.11",
					"resolved": "https://registry.npmjs.org/saxes/-/saxes-3.1.11.tgz",
					"integrity": "sha512-Ydydq3zC+WYDJK1+gRxRapLIED9PWeSuuS41wqyoRmzvhhh9nc+QQrVMKJYzJFULazeGhzSV0QleN2wD3boh2g==",
					"dev": true,
					"requires": {
						"xmlchars": "^2.1.1"
					}
				},
				"source-map": {
					"version": "0.6.1",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
					"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
					"dev": true,
					"optional": true
				},
				"tough-cookie": {
					"version": "2.5.0",
					"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
					"integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
					"dev": true,
					"requires": {
						"psl": "^1.1.28",
						"punycode": "^2.1.1"
					}
				},
				"tr46": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
					"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
					"dev": true,
					"requires": {
						"punycode": "^2.1.0"
					}
				},
				"w3c-xmlserializer": {
					"version": "1.1.2",
					"resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-1.1.2.tgz",
					"integrity": "sha512-p10l/ayESzrBMYWRID6xbuCKh2Fp77+sA0doRuGn4tTIMrrZVeqfpKjXHY+oDh3K4nLdPgNwMTVP6Vp4pvqbNg==",
					"dev": true,
					"requires": {
						"domexception": "^1.0.1",
						"webidl-conversions": "^4.0.2",
						"xml-name-validator": "^3.0.0"
					}
				},
				"webidl-conversions": {
					"version": "4.0.2",
					"resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
					"integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==",
					"dev": true
				},
				"whatwg-url": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
					"integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
					"dev": true,
					"requires": {
						"lodash.sortby": "^4.7.0",
						"tr46": "^1.0.1",
						"webidl-conversions": "^4.0.2"
					}
				},
				"ws": {
					"version": "6.2.2",
					"resolved": "https://registry.npmjs.org/ws/-/ws-6.2.2.tgz",
					"integrity": "sha512-zmhltoSR8u1cnDsD43TX59mzoMZsLKqUweyYBAIvTngR3shc0W6aOZylZmq/7hqyVxPdi+5Ud2QInblgyE72fw==",
					"dev": true,
					"requires": {
						"async-limiter": "~1.0.0"
					}
				}
			}
		},
		"undefsafe": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.3.tgz",
			"integrity": "sha512-nrXZwwXrD/T/JXeygJqdCO6NZZ1L66HrxM/Z7mIq2oPanoN0F1nLx3lwJMu6AwJY69hdixaFQOuoYsMjE5/C2A==",
			"dev": true,
			"requires": {
				"debug": "^2.2.0"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					}
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
					"dev": true
				}
			}
		},
		"underscore": {
			"version": "1.12.1",
			"resolved": "https://registry.npmjs.org/underscore/-/underscore-1.12.1.tgz",
			"integrity": "sha512-hEQt0+ZLDVUMhebKxL4x1BTtDY7bavVofhZ9KZ4aI26X9SRaE+Y3m83XUL1UP2jn8ynjndwCCpEHdUG+9pP1Tw==",
			"dev": true
		},
		"unicode-canonical-property-names-ecmascript": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",
			"integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ==",
			"dev": true
		},
		"unicode-match-property-ecmascript": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",
			"integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",
			"dev": true,
			"requires": {
				"unicode-canonical-property-names-ecmascript": "^1.0.4",
				"unicode-property-aliases-ecmascript": "^1.0.4"
			}
		},
		"unicode-match-property-value-ecmascript": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.2.0.tgz",
			"integrity": "sha512-wjuQHGQVofmSJv1uVISKLE5zO2rNGzM/KCYZch/QQvez7C1hUhBIuZ701fYXExuufJFMPhv2SyL8CyoIfMLbIQ==",
			"dev": true
		},
		"unicode-property-aliases-ecmascript": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.1.0.tgz",
			"integrity": "sha512-PqSoPh/pWetQ2phoj5RLiaqIk4kCNwoV3CI+LfGmWLKI3rE3kl1h59XpX2BjgDrmbxD9ARtQobPGU1SguCYuQg==",
			"dev": true
		},
		"unicode-trie": {
			"version": "0.3.1",
			"resolved": "https://registry.npmjs.org/unicode-trie/-/unicode-trie-0.3.1.tgz",
			"integrity": "sha1-1nHd3YkQGgi6w3tqUWEBBgIFIIU=",
			"dev": true,
			"requires": {
				"pako": "^0.2.5",
				"tiny-inflate": "^1.0.0"
			}
		},
		"union-value": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
			"integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
			"requires": {
				"arr-union": "^3.1.0",
				"get-value": "^2.0.6",
				"is-extendable": "^0.1.1",
				"set-value": "^2.0.1"
			}
		},
		"uniq": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
			"integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8=",
			"dev": true
		},
		"uniqs": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",
			"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI=",
			"dev": true
		},
		"unique-filename": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",
			"integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",
			"dev": true,
			"requires": {
				"unique-slug": "^2.0.0"
			}
		},
		"unique-slug": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.2.tgz",
			"integrity": "sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==",
			"dev": true,
			"requires": {
				"imurmurhash": "^0.1.4"
			}
		},
		"unique-string": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
			"integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
			"dev": true,
			"requires": {
				"crypto-random-string": "^2.0.0"
			}
		},
		"universal-user-agent": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/universal-user-agent/-/universal-user-agent-6.0.0.tgz",
			"integrity": "sha512-isyNax3wXoKaulPDZWHQqbmIx1k2tb9fb3GGDBRxCscfYV2Ch7WxPArBsFEG8s/safwXTT7H4QGhaIkTp9447w==",
			"dev": true
		},
		"universalify": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
			"integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="
		},
		"unload": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/unload/-/unload-2.2.0.tgz",
			"integrity": "sha512-B60uB5TNBLtN6/LsgAf3udH9saB5p7gqJwcFfbOEZ8BcBHnGwCf6G/TGiEqkRAxX7zAFIUtzdrXQSdL3Q/wqNA==",
			"dev": true,
			"requires": {
				"@babel/runtime": "^7.6.2",
				"detect-node": "^2.0.4"
			}
		},
		"unpipe": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
			"integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=",
			"dev": true
		},
		"unquote": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",
			"integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ=",
			"dev": true
		},
		"unset-value": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
			"integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
			"requires": {
				"has-value": "^0.3.1",
				"isobject": "^3.0.0"
			},
			"dependencies": {
				"has-value": {
					"version": "0.3.1",
					"resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
					"integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
					"requires": {
						"get-value": "^2.0.3",
						"has-values": "^0.1.4",
						"isobject": "^2.0.0"
					},
					"dependencies": {
						"isobject": {
							"version": "2.1.0",
							"resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
							"integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
							"requires": {
								"isarray": "1.0.0"
							}
						}
					}
				},
				"has-values": {
					"version": "0.1.4",
					"resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
					"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
				}
			}
		},
		"untildify": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/untildify/-/untildify-3.0.3.tgz",
			"integrity": "sha512-iSk/J8efr8uPT/Z4eSUywnqyrQU7DSdMfdqK4iWEaUVVmcP5JcnpRqmVMwcwcnmI1ATFNgC5V90u09tBynNFKA=="
		},
		"unzip-response": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/unzip-response/-/unzip-response-2.0.1.tgz",
			"integrity": "sha1-0vD3N9FrBhXnKmk17QQhRXLVb5c="
		},
		"upath": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/upath/-/upath-2.0.1.tgz",
			"integrity": "sha512-1uEe95xksV1O0CYKXo8vQvN1JEbtJp7lb7C5U9HMsIp6IVwntkH/oNUzyVNQSd4S1sYk2FpSSW44FqMc8qee5w==",
			"dev": true
		},
		"update-notifier": {
			"version": "5.1.0",
			"resolved": "https://registry.npmjs.org/update-notifier/-/update-notifier-5.1.0.tgz",
			"integrity": "sha512-ItnICHbeMh9GqUy31hFPrD1kcuZ3rpxDZbf4KUDavXwS0bW5m7SLbDQpGX3UYr072cbrF5hFUs3r5tUsPwjfHw==",
			"dev": true,
			"requires": {
				"boxen": "^5.0.0",
				"chalk": "^4.1.0",
				"configstore": "^5.0.1",
				"has-yarn": "^2.1.0",
				"import-lazy": "^2.1.0",
				"is-ci": "^2.0.0",
				"is-installed-globally": "^0.4.0",
				"is-npm": "^5.0.0",
				"is-yarn-global": "^0.3.0",
				"latest-version": "^5.1.0",
				"pupa": "^2.1.1",
				"semver": "^7.3.4",
				"semver-diff": "^3.1.1",
				"xdg-basedir": "^4.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"chalk": {
					"version": "4.1.1",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.1.tgz",
					"integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==",
					"dev": true,
					"requires": {
						"ansi-styles": "^4.1.0",
						"supports-color": "^7.1.0"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				},
				"has-flag": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
					"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
					"dev": true
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"dev": true,
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"supports-color": {
					"version": "7.2.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
					"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
					"dev": true,
					"requires": {
						"has-flag": "^4.0.0"
					}
				}
			}
		},
		"uri-js": {
			"version": "4.4.1",
			"resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
			"integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
			"dev": true,
			"requires": {
				"punycode": "^2.1.0"
			}
		},
		"urix": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
			"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
		},
		"url": {
			"version": "0.11.0",
			"resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
			"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
			"dev": true,
			"requires": {
				"punycode": "1.3.2",
				"querystring": "0.2.0"
			},
			"dependencies": {
				"punycode": {
					"version": "1.3.2",
					"resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
					"integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
					"dev": true
				}
			}
		},
		"url-parse-lax": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
			"integrity": "sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=",
			"dev": true,
			"requires": {
				"prepend-http": "^2.0.0"
			},
			"dependencies": {
				"prepend-http": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
					"integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc=",
					"dev": true
				}
			}
		},
		"url-set-query": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/url-set-query/-/url-set-query-1.0.0.tgz",
			"integrity": "sha1-AW6M/Xwg7gXK/neV6JK9BwL6ozk=",
			"dev": true
		},
		"url-to-options": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/url-to-options/-/url-to-options-1.0.1.tgz",
			"integrity": "sha1-FQWgOiiaSMvXpDTvuu7FBV9WM6k="
		},
		"usb": {
			"version": "1.7.1",
			"resolved": "https://registry.npmjs.org/usb/-/usb-1.7.1.tgz",
			"integrity": "sha512-HTCfx6NnNRhv5y98t04Y8j2+A8dmQnEGxCMY2/zN/0gkiioLYfTZ5w/PEKlWRVUY+3qLe9xwRv9pHLkjQYNw/g==",
			"dev": true,
			"optional": true,
			"requires": {
				"bindings": "^1.4.0",
				"node-addon-api": "3.0.2",
				"prebuild-install": "^5.3.3"
			},
			"dependencies": {
				"decompress-response": {
					"version": "4.2.1",
					"resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
					"integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
					"dev": true,
					"optional": true,
					"requires": {
						"mimic-response": "^2.0.0"
					}
				},
				"mimic-response": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
					"integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
					"dev": true,
					"optional": true
				},
				"node-addon-api": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-3.0.2.tgz",
					"integrity": "sha512-+D4s2HCnxPd5PjjI0STKwncjXTUKKqm74MDMz9OPXavjsGmjkvwgLtA5yoxJUdmpj52+2u+RrXgPipahKczMKg==",
					"dev": true,
					"optional": true
				},
				"prebuild-install": {
					"version": "5.3.6",
					"resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-5.3.6.tgz",
					"integrity": "sha512-s8Aai8++QQGi4sSbs/M1Qku62PFK49Jm1CbgXklGz4nmHveDq0wzJkg7Na5QbnO1uNH8K7iqx2EQ/mV0MZEmOg==",
					"dev": true,
					"optional": true,
					"requires": {
						"detect-libc": "^1.0.3",
						"expand-template": "^2.0.3",
						"github-from-package": "0.0.0",
						"minimist": "^1.2.3",
						"mkdirp-classic": "^0.5.3",
						"napi-build-utils": "^1.0.1",
						"node-abi": "^2.7.0",
						"noop-logger": "^0.1.1",
						"npmlog": "^4.0.1",
						"pump": "^3.0.0",
						"rc": "^1.2.7",
						"simple-get": "^3.0.3",
						"tar-fs": "^2.0.0",
						"tunnel-agent": "^0.6.0",
						"which-pm-runs": "^1.0.0"
					}
				},
				"simple-get": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.0.tgz",
					"integrity": "sha512-bCR6cP+aTdScaQCnQKbPKtJOKDp/hj9EDLJo3Nw4y1QksqaovlW/bnptB6/c1e+qmNIDHRK+oXFDdEqBT8WzUA==",
					"dev": true,
					"optional": true,
					"requires": {
						"decompress-response": "^4.2.0",
						"once": "^1.3.1",
						"simple-concat": "^1.0.0"
					}
				}
			}
		},
		"use": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
			"integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ=="
		},
		"utf-8-validate": {
			"version": "5.0.5",
			"resolved": "https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-5.0.5.tgz",
			"integrity": "sha512-+pnxRYsS/axEpkrrEpzYfNZGXp0IjC/9RIxwM5gntY4Koi8SHmUGSfxfWqxZdRxrtaoVstuOzUp/rbs3JSPELQ==",
			"dev": true,
			"requires": {
				"node-gyp-build": "^4.2.0"
			}
		},
		"utf8": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
			"integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ==",
			"dev": true
		},
		"util": {
			"version": "0.12.4",
			"resolved": "https://registry.npmjs.org/util/-/util-0.12.4.tgz",
			"integrity": "sha512-bxZ9qtSlGUWSOy9Qa9Xgk11kSslpuZwaxCg4sNIDj6FLucDab2JxnHwyNTCpHMtK1MjoQiWQ6DiUMZYbSrO+Sw==",
			"dev": true,
			"requires": {
				"inherits": "^2.0.3",
				"is-arguments": "^1.0.4",
				"is-generator-function": "^1.0.7",
				"is-typed-array": "^1.1.3",
				"safe-buffer": "^5.1.2",
				"which-typed-array": "^1.1.2"
			}
		},
		"util-deprecate": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
			"integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
		},
		"util-promisify": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/util-promisify/-/util-promisify-2.1.0.tgz",
			"integrity": "sha1-PCI2R2xNMsX/PEcAKt18E7moKlM=",
			"dev": true,
			"requires": {
				"object.getownpropertydescriptors": "^2.0.3"
			}
		},
		"util.promisify": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.1.tgz",
			"integrity": "sha512-g9JpC/3He3bm38zsLupWryXHoEcS22YHthuPQSJdMy6KNrzIRzWqcsHzD/WUnqe45whVou4VIsPew37DoXWNrA==",
			"dev": true,
			"requires": {
				"define-properties": "^1.1.3",
				"es-abstract": "^1.17.2",
				"has-symbols": "^1.0.1",
				"object.getownpropertydescriptors": "^2.1.0"
			}
		},
		"utils-merge": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
			"integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=",
			"dev": true
		},
		"uuid": {
			"version": "8.3.2",
			"resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
			"integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
			"dev": true
		},
		"v8-compile-cache": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz",
			"integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA==",
			"dev": true
		},
		"v8-to-istanbul": {
			"version": "7.1.2",
			"resolved": "https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-7.1.2.tgz",
			"integrity": "sha512-TxNb7YEUwkLXCQYeudi6lgQ/SZrzNO4kMdlqVxaZPUIUjCv6iSSypUQX70kNBSERpQ8fk48+d61FXk+tgqcWow==",
			"dev": true,
			"requires": {
				"@types/istanbul-lib-coverage": "^2.0.1",
				"convert-source-map": "^1.6.0",
				"source-map": "^0.7.3"
			},
			"dependencies": {
				"source-map": {
					"version": "0.7.3",
					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
					"integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
					"dev": true
				}
			}
		},
		"v8flags": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.2.0.tgz",
			"integrity": "sha512-mH8etigqMfiGWdeXpaaqGfs6BndypxusHHcv2qSHyZkGEznCd/qAXCWWRzeowtL54147cktFOC4P5y+kl8d8Jg==",
			"dev": true,
			"requires": {
				"homedir-polyfill": "^1.0.1"
			}
		},
		"validate-npm-package-license": {
			"version": "3.0.4",
			"resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
			"integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
			"requires": {
				"spdx-correct": "^3.0.0",
				"spdx-expression-parse": "^3.0.0"
			}
		},
		"validate-npm-package-name": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/validate-npm-package-name/-/validate-npm-package-name-3.0.0.tgz",
			"integrity": "sha1-X6kS2B630MdK/BQN5zF/DKffQ34=",
			"dev": true,
			"requires": {
				"builtins": "^1.0.3"
			}
		},
		"varint": {
			"version": "5.0.2",
			"resolved": "https://registry.npmjs.org/varint/-/varint-5.0.2.tgz",
			"integrity": "sha512-lKxKYG6H03yCZUpAGOPOsMcGxd1RHCu1iKvEHYDPmTyq2HueGhD73ssNBqqQWfvYs04G9iUFRvmAVLW20Jw6ow==",
			"dev": true
		},
		"vary": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
			"integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=",
			"dev": true
		},
		"vendors": {
			"version": "1.0.4",
			"resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.4.tgz",
			"integrity": "sha512-/juG65kTL4Cy2su4P8HjtkTxk6VmJDiOPBufWniqQ6wknac6jNiXS9vU+hO3wgusiyqWlzTbVHi0dyJqRONg3w==",
			"dev": true
		},
		"verror": {
			"version": "1.10.0",
			"resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
			"integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
			"dev": true,
			"requires": {
				"assert-plus": "^1.0.0",
				"core-util-is": "1.0.2",
				"extsprintf": "^1.2.0"
			}
		},
		"vinyl": {
			"version": "2.2.1",
			"resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.1.tgz",
			"integrity": "sha512-LII3bXRFBZLlezoG5FfZVcXflZgWP/4dCwKtxd5ky9+LOtM4CS3bIRQsmR1KMnMW07jpE8fqR2lcxPZ+8sJIcw==",
			"requires": {
				"clone": "^2.1.1",
				"clone-buffer": "^1.0.0",
				"clone-stats": "^1.0.0",
				"cloneable-readable": "^1.0.0",
				"remove-trailing-separator": "^1.0.1",
				"replace-ext": "^1.0.0"
			},
			"dependencies": {
				"clone": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
					"integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="
				}
			}
		},
		"vinyl-file": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-3.0.0.tgz",
			"integrity": "sha1-sQTZ5ECf+jJfqt1SBkLQo7SIs2U=",
			"requires": {
				"graceful-fs": "^4.1.2",
				"pify": "^2.3.0",
				"strip-bom-buf": "^1.0.0",
				"strip-bom-stream": "^2.0.0",
				"vinyl": "^2.0.1"
			}
		},
		"vlq": {
			"version": "0.2.3",
			"resolved": "https://registry.npmjs.org/vlq/-/vlq-0.2.3.tgz",
			"integrity": "sha512-DRibZL6DsNhIgYQ+wNdWDL2SL3bKPlVrRiBqV5yuMm++op8W4kGFtaQfCs4KEJn0wBZcHVHJ3eoywX8983k1ow==",
			"dev": true
		},
		"vm-browserify": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-1.1.2.tgz",
			"integrity": "sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==",
			"dev": true
		},
		"w3c-hr-time": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.2.tgz",
			"integrity": "sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkIFzXIEig3TdKT7JQ5fQ==",
			"dev": true,
			"requires": {
				"browser-process-hrtime": "^1.0.0"
			}
		},
		"w3c-xmlserializer": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-2.0.0.tgz",
			"integrity": "sha512-4tzD0mF8iSiMiNs30BiLO3EpfGLZUT2MSX/G+o7ZywDzliWQ3OPtTZ0PTC3B3ca1UAf4cJMHB+2Bf56EriJuRA==",
			"dev": true,
			"requires": {
				"xml-name-validator": "^3.0.0"
			}
		},
		"walker": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
			"integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",
			"dev": true,
			"requires": {
				"makeerror": "1.0.x"
			}
		},
		"wcwidth": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
			"integrity": "sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=",
			"dev": true,
			"requires": {
				"defaults": "^1.0.3"
			}
		},
		"web3": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3/-/web3-1.4.0.tgz",
			"integrity": "sha512-faT3pIX+1tuo+wqmUFQPe10MUGaB1UvRYxw9dmVJFLxaRAIfXErSilOf3jFhSwKbbPNkwG0bTiudCLN9JgeS7A==",
			"dev": true,
			"requires": {
				"web3-bzz": "1.4.0",
				"web3-core": "1.4.0",
				"web3-eth": "1.4.0",
				"web3-eth-personal": "1.4.0",
				"web3-net": "1.4.0",
				"web3-shh": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-bzz": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-bzz/-/web3-bzz-1.4.0.tgz",
			"integrity": "sha512-KhXmz8hcfGsqhplB7NrekAeNkG2edHjXV4bL3vnXde8RGMWpabpSNxuwiGv+dv/3nWlrHatH0vGooONYCkP5TA==",
			"dev": true,
			"requires": {
				"@types/node": "^12.12.6",
				"got": "9.6.0",
				"swarm-js": "^0.1.40",
				"underscore": "1.12.1"
			},
			"dependencies": {
				"@types/node": {
					"version": "12.20.16",
					"resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.16.tgz",
					"integrity": "sha512-6CLxw83vQf6DKqXxMPwl8qpF8I7THFZuIwLt4TnNsumxkp1VsRZWT8txQxncT/Rl2UojTsFzWgDG4FRMwafrlA==",
					"dev": true
				}
			}
		},
		"web3-core": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core/-/web3-core-1.4.0.tgz",
			"integrity": "sha512-VRNMNqwzvPeKIet2l9BMApPHoUv0UqwaZH0lZJhG2RBko42w9Xls+pQwfVNSV16j04t/ehm1aLRV2Sx6lzVfRg==",
			"dev": true,
			"requires": {
				"@types/bn.js": "^4.11.5",
				"@types/node": "^12.12.6",
				"bignumber.js": "^9.0.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-core-requestmanager": "1.4.0",
				"web3-utils": "1.4.0"
			},
			"dependencies": {
				"@types/node": {
					"version": "12.20.16",
					"resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.16.tgz",
					"integrity": "sha512-6CLxw83vQf6DKqXxMPwl8qpF8I7THFZuIwLt4TnNsumxkp1VsRZWT8txQxncT/Rl2UojTsFzWgDG4FRMwafrlA==",
					"dev": true
				}
			}
		},
		"web3-core-helpers": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core-helpers/-/web3-core-helpers-1.4.0.tgz",
			"integrity": "sha512-8Ebq0nmRfzw7iPoXbIRHEWOuPh+1cOV3OOEvKm5Od3McZOjja914vdk+DM3MgmbSpDzYJRFM6KoF0+Z/U/1bPw==",
			"dev": true,
			"requires": {
				"underscore": "1.12.1",
				"web3-eth-iban": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-core-method": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core-method/-/web3-core-method-1.4.0.tgz",
			"integrity": "sha512-KW9922fEkgKu8zDcJR8Iikg/epsuWMArAUVTipKVwzAI5TVdvOMRgSe/b7IIDRUIeoeXMARmJ+PrAlx+IU2acQ==",
			"dev": true,
			"requires": {
				"@ethersproject/transactions": "^5.0.0-beta.135",
				"underscore": "1.12.1",
				"web3-core-helpers": "1.4.0",
				"web3-core-promievent": "1.4.0",
				"web3-core-subscriptions": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-core-promievent": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core-promievent/-/web3-core-promievent-1.4.0.tgz",
			"integrity": "sha512-YEwko22kcry7lHwbe0k80BrjXCZ+73jMdvZtptRH5k2B+XZ1XtmXwYL1PFIlZy9V0zgZijdg+3GabCnAHjVXAw==",
			"dev": true,
			"requires": {
				"eventemitter3": "4.0.4"
			}
		},
		"web3-core-requestmanager": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core-requestmanager/-/web3-core-requestmanager-1.4.0.tgz",
			"integrity": "sha512-qIwKJO5T0KkUAIL7y9JRSUkk3+LaCwghdUHK8FzbMvq6R1W9lgCBnccqFGEI76EJjHvsiw4kEKBEXowdB3xenQ==",
			"dev": true,
			"requires": {
				"underscore": "1.12.1",
				"util": "^0.12.0",
				"web3-core-helpers": "1.4.0",
				"web3-providers-http": "1.4.0",
				"web3-providers-ipc": "1.4.0",
				"web3-providers-ws": "1.4.0"
			}
		},
		"web3-core-subscriptions": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-core-subscriptions/-/web3-core-subscriptions-1.4.0.tgz",
			"integrity": "sha512-/UMC9rSLEd0U+h6Qanx6CM29o/cfUyGWgl/HM6O/AIuth9G+34QBuKDa11Gr2Qg6F8Lr9tSFm8QIGVniOx9i5A==",
			"dev": true,
			"requires": {
				"eventemitter3": "4.0.4",
				"underscore": "1.12.1",
				"web3-core-helpers": "1.4.0"
			}
		},
		"web3-eth": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth/-/web3-eth-1.4.0.tgz",
			"integrity": "sha512-L990eMJeWh4h/Z3M8MJb9HrKq8tqvzdGZ7igdzd6Ba3B/VKgGFAJ/4XIqtLwAJ1Wg5Cj8my60tYY+34c2cLefw==",
			"dev": true,
			"requires": {
				"underscore": "1.12.1",
				"web3-core": "1.4.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-core-subscriptions": "1.4.0",
				"web3-eth-abi": "1.4.0",
				"web3-eth-accounts": "1.4.0",
				"web3-eth-contract": "1.4.0",
				"web3-eth-ens": "1.4.0",
				"web3-eth-iban": "1.4.0",
				"web3-eth-personal": "1.4.0",
				"web3-net": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-eth-abi": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-abi/-/web3-eth-abi-1.4.0.tgz",
			"integrity": "sha512-FtmWipG/dSSkTGFb72JCwky7Jd0PIvd0kGTInWQwIEZlw5qMOYl61WZ9gwfojFHvHF6q1eKncerQr+MRXHO6zg==",
			"dev": true,
			"requires": {
				"@ethersproject/abi": "5.0.7",
				"underscore": "1.12.1",
				"web3-utils": "1.4.0"
			}
		},
		"web3-eth-accounts": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-accounts/-/web3-eth-accounts-1.4.0.tgz",
			"integrity": "sha512-tETHBvfO3Z7BXZ7HJIwuX7ol6lPefP55X7b4IiX82C1PujHwsxENY7c/3wyxzqKoDyH6zfyEQo17yhxkhsM1oA==",
			"dev": true,
			"requires": {
				"@ethereumjs/common": "^2.3.0",
				"@ethereumjs/tx": "^3.2.1",
				"crypto-browserify": "3.12.0",
				"eth-lib": "0.2.8",
				"ethereumjs-util": "^7.0.10",
				"scrypt-js": "^3.0.1",
				"underscore": "1.12.1",
				"uuid": "3.3.2",
				"web3-core": "1.4.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-utils": "1.4.0"
			},
			"dependencies": {
				"@types/bn.js": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-5.1.0.tgz",
					"integrity": "sha512-QSSVYj7pYFN49kW77o2s9xTCwZ8F2xLbjLLSEVh8D2F4JUhZtPAGOFLTD+ffqksBx/u4cE/KImFjyhqCjn/LIA==",
					"dev": true,
					"requires": {
						"@types/node": "*"
					}
				},
				"ethereumjs-util": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-7.1.0.tgz",
					"integrity": "sha512-kR+vhu++mUDARrsMMhsjjzPduRVAeundLGXucGRHF3B4oEltOUspfgCVco4kckucj3FMlLaZHUl9n7/kdmr6Tw==",
					"dev": true,
					"requires": {
						"@types/bn.js": "^5.1.0",
						"bn.js": "^5.1.2",
						"create-hash": "^1.1.2",
						"ethereum-cryptography": "^0.1.3",
						"ethjs-util": "0.1.6",
						"rlp": "^2.2.4"
					}
				},
				"uuid": {
					"version": "3.3.2",
					"resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
					"integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==",
					"dev": true
				}
			}
		},
		"web3-eth-contract": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-contract/-/web3-eth-contract-1.4.0.tgz",
			"integrity": "sha512-GfIhOzfp/ZXKd+1tFEH3ePq0DEsvq9XO5tOsI0REDtEYUj2GNxO5e/x/Fhekk7iLZ7xAqSzDMweFruDQ1fxn0A==",
			"dev": true,
			"requires": {
				"@types/bn.js": "^4.11.5",
				"underscore": "1.12.1",
				"web3-core": "1.4.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-core-promievent": "1.4.0",
				"web3-core-subscriptions": "1.4.0",
				"web3-eth-abi": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-eth-ens": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-ens/-/web3-eth-ens-1.4.0.tgz",
			"integrity": "sha512-jR1KorjU1erpYFpFzsMXAWZnHhqUqWPBq/4+BGVj7/pJ43+A3mrE1eB0zl91Dwc1RTNwOhB02iOj1c9OlpGr3g==",
			"dev": true,
			"requires": {
				"content-hash": "^2.5.2",
				"eth-ens-namehash": "2.0.8",
				"underscore": "1.12.1",
				"web3-core": "1.4.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-promievent": "1.4.0",
				"web3-eth-abi": "1.4.0",
				"web3-eth-contract": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-eth-iban": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-iban/-/web3-eth-iban-1.4.0.tgz",
			"integrity": "sha512-YNx748VzwiBe0gvtZjvU9BQsooZ9s9sAlmiDWJOMcvMbUTDhC7SvxA7vV/vrnOxL6oGHRh0U/azsYNxxlKiTBw==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.9",
				"web3-utils": "1.4.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"web3-eth-personal": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-eth-personal/-/web3-eth-personal-1.4.0.tgz",
			"integrity": "sha512-8Ip6xZ8plmWqAD4ESbKUIPVV9gfTAFFm0ff1FQIw9I9kYvFlBIPzukvm852w2SftGem+/iRH+2+2mK7HvuKXZQ==",
			"dev": true,
			"requires": {
				"@types/node": "^12.12.6",
				"web3-core": "1.4.0",
				"web3-core-helpers": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-net": "1.4.0",
				"web3-utils": "1.4.0"
			},
			"dependencies": {
				"@types/node": {
					"version": "12.20.16",
					"resolved": "https://registry.npmjs.org/@types/node/-/node-12.20.16.tgz",
					"integrity": "sha512-6CLxw83vQf6DKqXxMPwl8qpF8I7THFZuIwLt4TnNsumxkp1VsRZWT8txQxncT/Rl2UojTsFzWgDG4FRMwafrlA==",
					"dev": true
				}
			}
		},
		"web3-net": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-net/-/web3-net-1.4.0.tgz",
			"integrity": "sha512-41WkKobL+KnKC0CY0RZ1KhMMyR/hMFGlbHZQac4KtB7ro1UdXeK+RiYX+GzSr1h7j9Dj+dQZqyBs70cxmL9cPQ==",
			"dev": true,
			"requires": {
				"web3-core": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-utils": "1.4.0"
			}
		},
		"web3-provider-engine": {
			"version": "15.0.12",
			"resolved": "https://registry.npmjs.org/web3-provider-engine/-/web3-provider-engine-15.0.12.tgz",
			"integrity": "sha512-/OfhQalKPND1iB5ggvGuYF0+SIb2Qj5OFTrT2VrZWP79UhMTdP7T+L2FtblmRdCeOetoAzZHdBaIwLOZsmIX+w==",
			"dev": true,
			"requires": {
				"async": "^2.5.0",
				"backoff": "^2.5.0",
				"clone": "^2.0.0",
				"cross-fetch": "^2.1.0",
				"eth-block-tracker": "^4.4.2",
				"eth-json-rpc-errors": "^2.0.2",
				"eth-json-rpc-filters": "^4.1.1",
				"eth-json-rpc-infura": "^4.0.1",
				"eth-json-rpc-middleware": "^4.1.5",
				"eth-sig-util": "^1.4.2",
				"ethereumjs-block": "^1.2.2",
				"ethereumjs-tx": "^1.2.0",
				"ethereumjs-util": "^5.1.5",
				"ethereumjs-vm": "^2.3.4",
				"json-stable-stringify": "^1.0.1",
				"promise-to-callback": "^1.0.0",
				"readable-stream": "^2.2.9",
				"request": "^2.85.0",
				"semaphore": "^1.0.3",
				"ws": "^5.1.1",
				"xhr": "^2.2.0",
				"xtend": "^4.0.1"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				},
				"clone": {
					"version": "2.1.2",
					"resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
					"integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
					"dev": true
				},
				"eth-sig-util": {
					"version": "1.4.2",
					"resolved": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-1.4.2.tgz",
					"integrity": "sha1-jZWCAsftuq6Dlwf7pvCf8ydgYhA=",
					"dev": true,
					"requires": {
						"ethereumjs-abi": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
						"ethereumjs-util": "^5.1.1"
					}
				},
				"ethereumjs-abi": {
					"version": "git+https://github.com/ethereumjs/ethereumjs-abi.git#ee3994657fa7a427238e6ba92a84d0b529bbcde0",
					"from": "git+https://github.com/ethereumjs/ethereumjs-abi.git",
					"dev": true,
					"requires": {
						"bn.js": "^4.11.8",
						"ethereumjs-util": "^6.0.0"
					},
					"dependencies": {
						"ethereumjs-util": {
							"version": "6.2.1",
							"resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.1.tgz",
							"integrity": "sha512-W2Ktez4L01Vexijrm5EB6w7dg4n/TgpoYU4avuT5T3Vmnw/eCRtiBrJfQYS/DCSvDIOLn2k57GcHdeBcgVxAqw==",
							"dev": true,
							"requires": {
								"@types/bn.js": "^4.11.3",
								"bn.js": "^4.11.0",
								"create-hash": "^1.1.2",
								"elliptic": "^6.5.2",
								"ethereum-cryptography": "^0.1.3",
								"ethjs-util": "0.1.6",
								"rlp": "^2.2.3"
							}
						}
					}
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"dev": true,
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					}
				},
				"safe-buffer": {
					"version": "5.1.2",
					"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
					"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
					"dev": true
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"dev": true,
					"requires": {
						"safe-buffer": "~5.1.0"
					}
				},
				"ws": {
					"version": "5.2.3",
					"resolved": "https://registry.npmjs.org/ws/-/ws-5.2.3.tgz",
					"integrity": "sha512-jZArVERrMsKUatIdnLzqvcfydI85dvd/Fp1u/VOpfdDWQ4c9qWXe+VIeAbQ5FrDwciAkr+lzofXLz3Kuf26AOA==",
					"dev": true,
					"requires": {
						"async-limiter": "~1.0.0"
					}
				}
			}
		},
		"web3-providers-http": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-providers-http/-/web3-providers-http-1.4.0.tgz",
			"integrity": "sha512-A9nLF4XGZfDb1KYYuKRwHY1H90Ee/0I0CqQQEELI0yuY9eca50qdCHEg3sJhvqBIG44JCm83amOGxR8wi+76tQ==",
			"dev": true,
			"requires": {
				"web3-core-helpers": "1.4.0",
				"xhr2-cookies": "1.1.0"
			}
		},
		"web3-providers-ipc": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-providers-ipc/-/web3-providers-ipc-1.4.0.tgz",
			"integrity": "sha512-ul/tSNUI5anhdBGBV+FWFH9EJgO73/G21haFDEXvTnSJQa9/byj401H/E2Xd8BXGk+2XB+CCGLZBiuAjhhhtTA==",
			"dev": true,
			"requires": {
				"oboe": "2.1.5",
				"underscore": "1.12.1",
				"web3-core-helpers": "1.4.0"
			}
		},
		"web3-providers-ws": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-providers-ws/-/web3-providers-ws-1.4.0.tgz",
			"integrity": "sha512-E5XfF58RLXuCtGiMSXxXEtjceCfPli+I4MDYCKx/J/bDJ6qvLUM2OnnGEmE7pq1Z03h0xh1ZezaB/qoweK3ZIQ==",
			"dev": true,
			"requires": {
				"eventemitter3": "4.0.4",
				"underscore": "1.12.1",
				"web3-core-helpers": "1.4.0",
				"websocket": "^1.0.32"
			}
		},
		"web3-shh": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-shh/-/web3-shh-1.4.0.tgz",
			"integrity": "sha512-OZMkMgo+VZnu1ErhIFXW+5ExnPKQg9v8/2DHGVtNEwuC5OHYuAEF5U7MQgbxYJYwbRmxQCt/hA3VwKjnkbmSAA==",
			"dev": true,
			"requires": {
				"web3-core": "1.4.0",
				"web3-core-method": "1.4.0",
				"web3-core-subscriptions": "1.4.0",
				"web3-net": "1.4.0"
			}
		},
		"web3-utils": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.4.0.tgz",
			"integrity": "sha512-b8mEhwh/J928Xk+SQFjtqrR2EGPhpknWLcIt9aCpVPVRXiqjUGo/kpOHKz0azu9c6/onEJ9tWXZt0cVjmH0N5Q==",
			"dev": true,
			"requires": {
				"bn.js": "^4.11.9",
				"eth-lib": "0.2.8",
				"ethereum-bloom-filters": "^1.0.6",
				"ethjs-unit": "0.1.6",
				"number-to-bn": "1.7.0",
				"randombytes": "^2.1.0",
				"underscore": "1.12.1",
				"utf8": "3.0.0"
			},
			"dependencies": {
				"bn.js": {
					"version": "4.12.0",
					"resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.12.0.tgz",
					"integrity": "sha512-c98Bf3tPniI+scsdk237ku1Dc3ujXQTSgyiPUDEOe7tRkhrqridvh8klBv0HCEso1OLOYcHuCv/cS6DNxKH+ZA==",
					"dev": true
				}
			}
		},
		"webidl-conversions": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-6.1.0.tgz",
			"integrity": "sha512-qBIvFLGiBpLjfwmYAaHPXsn+ho5xZnGvyGvsarywGNc8VyQJUMHJ8OBKGGrPER0okBeMDaan4mNBlgBROxuI8w==",
			"dev": true
		},
		"websocket": {
			"version": "1.0.34",
			"resolved": "https://registry.npmjs.org/websocket/-/websocket-1.0.34.tgz",
			"integrity": "sha512-PRDso2sGwF6kM75QykIesBijKSVceR6jL2G8NGYyq2XrItNC2P5/qL5XeR056GhA+Ly7JMFvJb9I312mJfmqnQ==",
			"dev": true,
			"requires": {
				"bufferutil": "^4.0.1",
				"debug": "^2.2.0",
				"es5-ext": "^0.10.50",
				"typedarray-to-buffer": "^3.1.5",
				"utf-8-validate": "^5.0.2",
				"yaeti": "^0.0.6"
			},
			"dependencies": {
				"debug": {
					"version": "2.6.9",
					"resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
					"integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
					"dev": true,
					"requires": {
						"ms": "2.0.0"
					}
				},
				"ms": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
					"integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
					"dev": true
				}
			}
		},
		"whatwg-encoding": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",
			"integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",
			"dev": true,
			"requires": {
				"iconv-lite": "0.4.24"
			}
		},
		"whatwg-fetch": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-2.0.4.tgz",
			"integrity": "sha512-dcQ1GWpOD/eEQ97k66aiEVpNnapVj90/+R+SXTPYGHpYBBypfKJEQjLrvMZ7YXbKm21gXd4NcuxUTjiv1YtLng==",
			"dev": true
		},
		"whatwg-mimetype": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",
			"integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g==",
			"dev": true
		},
		"whatwg-url": {
			"version": "8.7.0",
			"resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-8.7.0.tgz",
			"integrity": "sha512-gAojqb/m9Q8a5IV96E3fHJM70AzCkgt4uXYX2O7EmuyOnLrViCQlsEBmF9UQIu3/aeAIp2U17rtbpZWNntQqdg==",
			"dev": true,
			"requires": {
				"lodash": "^4.7.0",
				"tr46": "^2.1.0",
				"webidl-conversions": "^6.1.0"
			}
		},
		"which": {
			"version": "1.3.1",
			"resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
			"integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
			"requires": {
				"isexe": "^2.0.0"
			}
		},
		"which-boxed-primitive": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
			"integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
			"dev": true,
			"requires": {
				"is-bigint": "^1.0.1",
				"is-boolean-object": "^1.1.0",
				"is-number-object": "^1.0.4",
				"is-string": "^1.0.5",
				"is-symbol": "^1.0.3"
			}
		},
		"which-module": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
			"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
			"dev": true
		},
		"which-pm-runs": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/which-pm-runs/-/which-pm-runs-1.0.0.tgz",
			"integrity": "sha1-Zws6+8VS4LVd9rd4DKdGFfI60cs=",
			"dev": true,
			"optional": true
		},
		"which-typed-array": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.4.tgz",
			"integrity": "sha512-49E0SpUe90cjpoc7BOJwyPHRqSAd12c10Qm2amdEZrJPCY2NDxaW01zHITrem+rnETY3dwrbH3UUrUwagfCYDA==",
			"dev": true,
			"requires": {
				"available-typed-arrays": "^1.0.2",
				"call-bind": "^1.0.0",
				"es-abstract": "^1.18.0-next.1",
				"foreach": "^2.0.5",
				"function-bind": "^1.1.1",
				"has-symbols": "^1.0.1",
				"is-typed-array": "^1.1.3"
			}
		},
		"wide-align": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
			"integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
			"dev": true,
			"requires": {
				"string-width": "^1.0.2 || 2"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
					"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
					"dev": true
				},
				"is-fullwidth-code-point": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
					"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
					"dev": true
				},
				"string-width": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
					"integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
					"dev": true,
					"requires": {
						"is-fullwidth-code-point": "^2.0.0",
						"strip-ansi": "^4.0.0"
					}
				},
				"strip-ansi": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
					"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
					"dev": true,
					"requires": {
						"ansi-regex": "^3.0.0"
					}
				}
			}
		},
		"widest-line": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/widest-line/-/widest-line-3.1.0.tgz",
			"integrity": "sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==",
			"requires": {
				"string-width": "^4.0.0"
			}
		},
		"with-open-file": {
			"version": "0.1.7",
			"resolved": "https://registry.npmjs.org/with-open-file/-/with-open-file-0.1.7.tgz",
			"integrity": "sha512-ecJS2/oHtESJ1t3ZfMI3B7KIDKyfN0O16miWxdn30zdh66Yd3LsRFebXZXq6GU4xfxLf6nVxp9kIqElb5fqczA==",
			"requires": {
				"p-finally": "^1.0.0",
				"p-try": "^2.1.0",
				"pify": "^4.0.1"
			},
			"dependencies": {
				"pify": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
					"integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
				}
			}
		},
		"word-wrap": {
			"version": "1.2.3",
			"resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz",
			"integrity": "sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==",
			"dev": true
		},
		"wordwrap": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
			"integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
			"dev": true
		},
		"wrap-ansi": {
			"version": "6.2.0",
			"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
			"integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
			"dev": true,
			"requires": {
				"ansi-styles": "^4.0.0",
				"string-width": "^4.1.0",
				"strip-ansi": "^6.0.0"
			},
			"dependencies": {
				"ansi-styles": {
					"version": "4.3.0",
					"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
					"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
					"dev": true,
					"requires": {
						"color-convert": "^2.0.1"
					}
				},
				"color-convert": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
					"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
					"dev": true,
					"requires": {
						"color-name": "~1.1.4"
					}
				},
				"color-name": {
					"version": "1.1.4",
					"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
					"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
					"dev": true
				}
			}
		},
		"wrappy": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
			"integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
		},
		"write-file-atomic": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
			"integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
			"requires": {
				"imurmurhash": "^0.1.4",
				"is-typedarray": "^1.0.0",
				"signal-exit": "^3.0.2",
				"typedarray-to-buffer": "^3.1.5"
			}
		},
		"write-json-file": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/write-json-file/-/write-json-file-4.3.0.tgz",
			"integrity": "sha512-PxiShnxf0IlnQuMYOPPhPkhExoCQuTUNPOa/2JWCYTmBquU9njyyDuwRKN26IZBlp4yn1nt+Agh2HOOBl+55HQ==",
			"requires": {
				"detect-indent": "^6.0.0",
				"graceful-fs": "^4.1.15",
				"is-plain-obj": "^2.0.0",
				"make-dir": "^3.0.0",
				"sort-keys": "^4.0.0",
				"write-file-atomic": "^3.0.0"
			},
			"dependencies": {
				"detect-indent": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-6.1.0.tgz",
					"integrity": "sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA=="
				},
				"is-plain-obj": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz",
					"integrity": "sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA=="
				},
				"sort-keys": {
					"version": "4.2.0",
					"resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-4.2.0.tgz",
					"integrity": "sha512-aUYIEU/UviqPgc8mHR6IW1EGxkAXpeRETYcrzg8cLAvUPZcpAlleSXHV2mY7G12GphSH6Gzv+4MMVSSkbdteHg==",
					"requires": {
						"is-plain-obj": "^2.0.0"
					}
				}
			}
		},
		"write-pkg": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/write-pkg/-/write-pkg-4.0.0.tgz",
			"integrity": "sha512-v2UQ+50TNf2rNHJ8NyWttfm/EJUBWMJcx6ZTYZr6Qp52uuegWw/lBkCtCbnYZEmPRNL61m+u67dAmGxo+HTULA==",
			"dev": true,
			"requires": {
				"sort-keys": "^2.0.0",
				"type-fest": "^0.4.1",
				"write-json-file": "^3.2.0"
			},
			"dependencies": {
				"make-dir": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
					"integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
					"dev": true,
					"requires": {
						"pify": "^4.0.1",
						"semver": "^5.6.0"
					}
				},
				"pify": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
					"integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
					"dev": true
				},
				"semver": {
					"version": "5.7.1",
					"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
					"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
					"dev": true
				},
				"sort-keys": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-2.0.0.tgz",
					"integrity": "sha1-ZYU1WEhh7JfXMNbPQYIuH1ZoQSg=",
					"dev": true,
					"requires": {
						"is-plain-obj": "^1.0.0"
					}
				},
				"type-fest": {
					"version": "0.4.1",
					"resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.4.1.tgz",
					"integrity": "sha512-IwzA/LSfD2vC1/YDYMv/zHP4rDF1usCwllsDpbolT3D4fUepIO7f9K70jjmUewU/LmGUKJcwcVtDCpnKk4BPMw==",
					"dev": true
				},
				"write-file-atomic": {
					"version": "2.4.3",
					"resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.3.tgz",
					"integrity": "sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==",
					"dev": true,
					"requires": {
						"graceful-fs": "^4.1.11",
						"imurmurhash": "^0.1.4",
						"signal-exit": "^3.0.2"
					}
				},
				"write-json-file": {
					"version": "3.2.0",
					"resolved": "https://registry.npmjs.org/write-json-file/-/write-json-file-3.2.0.tgz",
					"integrity": "sha512-3xZqT7Byc2uORAatYiP3DHUUAVEkNOswEWNs9H5KXiicRTvzYzYqKjYc4G7p+8pltvAw641lVByKVtMpf+4sYQ==",
					"dev": true,
					"requires": {
						"detect-indent": "^5.0.0",
						"graceful-fs": "^4.1.15",
						"make-dir": "^2.1.0",
						"pify": "^4.0.1",
						"sort-keys": "^2.0.0",
						"write-file-atomic": "^2.4.2"
					}
				}
			}
		},
		"ws": {
			"version": "7.5.3",
			"resolved": "https://registry.npmjs.org/ws/-/ws-7.5.3.tgz",
			"integrity": "sha512-kQ/dHIzuLrS6Je9+uv81ueZomEwH0qVYstcAQ4/Z93K8zeko9gtAbttJWzoC5ukqXY1PpoouV3+VSOqEAFt5wg==",
			"dev": true
		},
		"xdg-basedir": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
			"integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
			"dev": true
		},
		"xhr": {
			"version": "2.6.0",
			"resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
			"integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
			"dev": true,
			"requires": {
				"global": "~4.4.0",
				"is-function": "^1.0.1",
				"parse-headers": "^2.0.0",
				"xtend": "^4.0.0"
			}
		},
		"xhr-request": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/xhr-request/-/xhr-request-1.1.0.tgz",
			"integrity": "sha512-Y7qzEaR3FDtL3fP30k9wO/e+FBnBByZeybKOhASsGP30NIkRAAkKD/sCnLvgEfAIEC1rcmK7YG8f4oEnIrrWzA==",
			"dev": true,
			"requires": {
				"buffer-to-arraybuffer": "^0.0.5",
				"object-assign": "^4.1.1",
				"query-string": "^5.0.1",
				"simple-get": "^2.7.0",
				"timed-out": "^4.0.1",
				"url-set-query": "^1.0.0",
				"xhr": "^2.0.4"
			}
		},
		"xhr-request-promise": {
			"version": "0.1.3",
			"resolved": "https://registry.npmjs.org/xhr-request-promise/-/xhr-request-promise-0.1.3.tgz",
			"integrity": "sha512-YUBytBsuwgitWtdRzXDDkWAXzhdGB8bYm0sSzMPZT7Z2MBjMSTHFsyCT1yCRATY+XC69DUrQraRAEgcoCRaIPg==",
			"dev": true,
			"requires": {
				"xhr-request": "^1.1.0"
			}
		},
		"xhr2-cookies": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/xhr2-cookies/-/xhr2-cookies-1.1.0.tgz",
			"integrity": "sha1-fXdEnQmZGX8VXLc7I99yUF7YnUg=",
			"dev": true,
			"requires": {
				"cookiejar": "^2.1.1"
			}
		},
		"xml-name-validator": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",
			"integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw==",
			"dev": true
		},
		"xmlchars": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
			"integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==",
			"dev": true
		},
		"xtend": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
			"integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ=="
		},
		"y18n": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
			"integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
			"dev": true
		},
		"yaeti": {
			"version": "0.0.6",
			"resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
			"integrity": "sha1-8m9ITXJoTPQr7ft2lwqhYI+/lXc=",
			"dev": true
		},
		"yallist": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
			"integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
		},
		"yaml": {
			"version": "1.10.2",
			"resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
			"integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
			"dev": true
		},
		"yargs": {
			"version": "15.4.1",
			"resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
			"integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
			"dev": true,
			"requires": {
				"cliui": "^6.0.0",
				"decamelize": "^1.2.0",
				"find-up": "^4.1.0",
				"get-caller-file": "^2.0.1",
				"require-directory": "^2.1.1",
				"require-main-filename": "^2.0.0",
				"set-blocking": "^2.0.0",
				"string-width": "^4.2.0",
				"which-module": "^2.0.0",
				"y18n": "^4.0.0",
				"yargs-parser": "^18.1.2"
			}
		},
		"yargs-parser": {
			"version": "18.1.3",
			"resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
			"integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
			"dev": true,
			"requires": {
				"camelcase": "^5.0.0",
				"decamelize": "^1.2.0"
			}
		},
		"yeoman-environment": {
			"version": "2.10.3",
			"resolved": "https://registry.npmjs.org/yeoman-environment/-/yeoman-environment-2.10.3.tgz",
			"integrity": "sha512-pLIhhU9z/G+kjOXmJ2bPFm3nejfbH+f1fjYRSOteEXDBrv1EoJE/e+kuHixSXfCYfTkxjYsvRaDX+1QykLCnpQ==",
			"requires": {
				"chalk": "^2.4.1",
				"debug": "^3.1.0",
				"diff": "^3.5.0",
				"escape-string-regexp": "^1.0.2",
				"execa": "^4.0.0",
				"globby": "^8.0.1",
				"grouped-queue": "^1.1.0",
				"inquirer": "^7.1.0",
				"is-scoped": "^1.0.0",
				"lodash": "^4.17.10",
				"log-symbols": "^2.2.0",
				"mem-fs": "^1.1.0",
				"mem-fs-editor": "^6.0.0",
				"npm-api": "^1.0.0",
				"semver": "^7.1.3",
				"strip-ansi": "^4.0.0",
				"text-table": "^0.2.0",
				"untildify": "^3.0.3",
				"yeoman-generator": "^4.8.2"
			},
			"dependencies": {
				"@nodelib/fs.stat": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
					"integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="
				},
				"ansi-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
					"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
				},
				"arrify": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
					"integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"cross-spawn": {
					"version": "7.0.3",
					"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
					"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
					"requires": {
						"path-key": "^3.1.0",
						"shebang-command": "^2.0.0",
						"which": "^2.0.1"
					}
				},
				"dargs": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/dargs/-/dargs-6.1.0.tgz",
					"integrity": "sha512-5dVBvpBLBnPwSsYXqfybFyehMmC/EenKEcf23AhCTgTf48JFBbmJKqoZBsERDnjL0FyiVTYWdFsRfTLHxLyKdQ=="
				},
				"debug": {
					"version": "3.2.7",
					"resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
					"integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
					"requires": {
						"ms": "^2.1.1"
					}
				},
				"diff": {
					"version": "3.5.0",
					"resolved": "https://registry.npmjs.org/diff/-/diff-3.5.0.tgz",
					"integrity": "sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA=="
				},
				"dir-glob": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",
					"integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",
					"requires": {
						"arrify": "^1.0.1",
						"path-type": "^3.0.0"
					}
				},
				"ejs": {
					"version": "3.1.6",
					"resolved": "https://registry.npmjs.org/ejs/-/ejs-3.1.6.tgz",
					"integrity": "sha512-9lt9Zse4hPucPkoP7FHDF0LQAlGyF9JVpnClFLFH3aSSbxmyoqINRpp/9wePWJTUl4KOQwRL72Iw3InHPDkoGw==",
					"requires": {
						"jake": "^10.6.1"
					}
				},
				"execa": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/execa/-/execa-4.1.0.tgz",
					"integrity": "sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA==",
					"requires": {
						"cross-spawn": "^7.0.0",
						"get-stream": "^5.0.0",
						"human-signals": "^1.1.1",
						"is-stream": "^2.0.0",
						"merge-stream": "^2.0.0",
						"npm-run-path": "^4.0.0",
						"onetime": "^5.1.0",
						"signal-exit": "^3.0.2",
						"strip-final-newline": "^2.0.0"
					}
				},
				"fast-glob": {
					"version": "2.2.7",
					"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
					"integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
					"requires": {
						"@mrmlnc/readdir-enhanced": "^2.2.1",
						"@nodelib/fs.stat": "^1.1.2",
						"glob-parent": "^3.1.0",
						"is-glob": "^4.0.0",
						"merge2": "^1.2.3",
						"micromatch": "^3.1.10"
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"find-up": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
					"integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
					"requires": {
						"locate-path": "^3.0.0"
					}
				},
				"get-stream": {
					"version": "5.2.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
					"integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
					"requires": {
						"pump": "^3.0.0"
					}
				},
				"glob-parent": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
					"integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
					"requires": {
						"is-glob": "^3.1.0",
						"path-dirname": "^1.0.0"
					},
					"dependencies": {
						"is-glob": {
							"version": "3.1.0",
							"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
							"integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
							"requires": {
								"is-extglob": "^2.1.0"
							}
						}
					}
				},
				"globby": {
					"version": "8.0.2",
					"resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",
					"integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",
					"requires": {
						"array-union": "^1.0.1",
						"dir-glob": "2.0.0",
						"fast-glob": "^2.0.2",
						"glob": "^7.1.2",
						"ignore": "^3.3.5",
						"pify": "^3.0.0",
						"slash": "^1.0.0"
					}
				},
				"ignore": {
					"version": "3.3.10",
					"resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
					"integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"is-stream": {
					"version": "2.0.1",
					"resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
					"integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg=="
				},
				"locate-path": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
					"integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
					"requires": {
						"p-locate": "^3.0.0",
						"path-exists": "^3.0.0"
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"mkdirp": {
					"version": "1.0.4",
					"resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
					"integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw=="
				},
				"multimatch": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/multimatch/-/multimatch-4.0.0.tgz",
					"integrity": "sha512-lDmx79y1z6i7RNx0ZGCPq1bzJ6ZoDDKbvh7jxr9SJcWLkShMzXrHbYVpTdnhNM5MXpDUxCQ4DgqVttVXlBgiBQ==",
					"requires": {
						"@types/minimatch": "^3.0.3",
						"array-differ": "^3.0.0",
						"array-union": "^2.1.0",
						"arrify": "^2.0.1",
						"minimatch": "^3.0.4"
					},
					"dependencies": {
						"array-union": {
							"version": "2.1.0",
							"resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
							"integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw=="
						},
						"arrify": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz",
							"integrity": "sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug=="
						}
					}
				},
				"npm-run-path": {
					"version": "4.0.1",
					"resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
					"integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
					"requires": {
						"path-key": "^3.0.0"
					}
				},
				"p-locate": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
					"integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
					"requires": {
						"p-limit": "^2.0.0"
					}
				},
				"path-exists": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
					"integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="
				},
				"path-key": {
					"version": "3.1.1",
					"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
					"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q=="
				},
				"path-type": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
					"integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
					"requires": {
						"pify": "^3.0.0"
					}
				},
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
				},
				"read-pkg-up": {
					"version": "5.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-5.0.0.tgz",
					"integrity": "sha512-XBQjqOBtTzyol2CpsQOw8LHV0XbDZVG7xMMjmXAJomlVY03WOBRmYgDJETlvcg0H63AJvPRwT7GFi5rvOzUOKg==",
					"requires": {
						"find-up": "^3.0.0",
						"read-pkg": "^5.0.0"
					}
				},
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"requires": {
						"glob": "^7.1.3"
					}
				},
				"semver": {
					"version": "7.3.5",
					"resolved": "https://registry.npmjs.org/semver/-/semver-7.3.5.tgz",
					"integrity": "sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==",
					"requires": {
						"lru-cache": "^6.0.0"
					}
				},
				"shebang-command": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
					"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
					"requires": {
						"shebang-regex": "^3.0.0"
					}
				},
				"shebang-regex": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
					"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A=="
				},
				"slash": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
					"integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="
				},
				"strip-ansi": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
					"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
					"requires": {
						"ansi-regex": "^3.0.0"
					}
				},
				"through2": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/through2/-/through2-3.0.2.tgz",
					"integrity": "sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==",
					"requires": {
						"inherits": "^2.0.4",
						"readable-stream": "2 || 3"
					}
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				},
				"which": {
					"version": "2.0.2",
					"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
					"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
					"requires": {
						"isexe": "^2.0.0"
					}
				},
				"yeoman-generator": {
					"version": "4.13.0",
					"resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-4.13.0.tgz",
					"integrity": "sha512-f2/5N5IR3M2Ozm+QocvZQudlQITv2DwI6Mcxfy7R7gTTzaKgvUpgo/pQMJ+WQKm0KN0YMWCFOZpj0xFGxevc1w==",
					"requires": {
						"async": "^2.6.2",
						"chalk": "^2.4.2",
						"cli-table": "^0.3.1",
						"cross-spawn": "^6.0.5",
						"dargs": "^6.1.0",
						"dateformat": "^3.0.3",
						"debug": "^4.1.1",
						"diff": "^4.0.1",
						"error": "^7.0.2",
						"find-up": "^3.0.0",
						"github-username": "^3.0.0",
						"grouped-queue": "^1.1.0",
						"istextorbinary": "^2.5.1",
						"lodash": "^4.17.11",
						"make-dir": "^3.0.0",
						"mem-fs-editor": "^7.0.1",
						"minimist": "^1.2.5",
						"pretty-bytes": "^5.2.0",
						"read-chunk": "^3.2.0",
						"read-pkg-up": "^5.0.0",
						"rimraf": "^2.6.3",
						"run-async": "^2.0.0",
						"semver": "^7.2.1",
						"shelljs": "^0.8.4",
						"text-table": "^0.2.0",
						"through2": "^3.0.1",
						"yeoman-environment": "^2.9.5"
					},
					"dependencies": {
						"cross-spawn": {
							"version": "6.0.5",
							"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
							"integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
							"requires": {
								"nice-try": "^1.0.4",
								"path-key": "^2.0.1",
								"semver": "^5.5.0",
								"shebang-command": "^1.2.0",
								"which": "^1.2.9"
							},
							"dependencies": {
								"semver": {
									"version": "5.7.1",
									"resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
									"integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
								}
							}
						},
						"debug": {
							"version": "4.3.2",
							"resolved": "https://registry.npmjs.org/debug/-/debug-4.3.2.tgz",
							"integrity": "sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==",
							"requires": {
								"ms": "2.1.2"
							}
						},
						"diff": {
							"version": "4.0.2",
							"resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
							"integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A=="
						},
						"dir-glob": {
							"version": "2.2.2",
							"resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz",
							"integrity": "sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==",
							"requires": {
								"path-type": "^3.0.0"
							}
						},
						"globby": {
							"version": "9.2.0",
							"resolved": "https://registry.npmjs.org/globby/-/globby-9.2.0.tgz",
							"integrity": "sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==",
							"requires": {
								"@types/glob": "^7.1.1",
								"array-union": "^1.0.2",
								"dir-glob": "^2.2.2",
								"fast-glob": "^2.2.6",
								"glob": "^7.1.3",
								"ignore": "^4.0.3",
								"pify": "^4.0.1",
								"slash": "^2.0.0"
							}
						},
						"ignore": {
							"version": "4.0.6",
							"resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",
							"integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="
						},
						"mem-fs-editor": {
							"version": "7.1.0",
							"resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-7.1.0.tgz",
							"integrity": "sha512-BH6QEqCXSqGeX48V7zu+e3cMwHU7x640NB8Zk8VNvVZniz+p4FK60pMx/3yfkzo6miI6G3a8pH6z7FeuIzqrzA==",
							"requires": {
								"commondir": "^1.0.1",
								"deep-extend": "^0.6.0",
								"ejs": "^3.1.5",
								"glob": "^7.1.4",
								"globby": "^9.2.0",
								"isbinaryfile": "^4.0.0",
								"mkdirp": "^1.0.0",
								"multimatch": "^4.0.0",
								"rimraf": "^3.0.0",
								"through2": "^3.0.2",
								"vinyl": "^2.2.1"
							},
							"dependencies": {
								"rimraf": {
									"version": "3.0.2",
									"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
									"integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
									"requires": {
										"glob": "^7.1.3"
									}
								}
							}
						},
						"path-key": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
							"integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A="
						},
						"pify": {
							"version": "4.0.1",
							"resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
							"integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="
						},
						"shebang-command": {
							"version": "1.2.0",
							"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
							"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
							"requires": {
								"shebang-regex": "^1.0.0"
							}
						},
						"shebang-regex": {
							"version": "1.0.0",
							"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
							"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
						},
						"slash": {
							"version": "2.0.0",
							"resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",
							"integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A=="
						},
						"which": {
							"version": "1.3.1",
							"resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
							"integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
							"requires": {
								"isexe": "^2.0.0"
							}
						}
					}
				}
			}
		},
		"yeoman-generator": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/yeoman-generator/-/yeoman-generator-3.2.0.tgz",
			"integrity": "sha512-iR/qb2je3GdXtSfxgvOXxUW0Cp8+C6LaZaNlK2BAICzFNzwHtM10t/QBwz5Ea9nk6xVDQNj4Q889TjCXGuIv8w==",
			"requires": {
				"async": "^2.6.0",
				"chalk": "^2.3.0",
				"cli-table": "^0.3.1",
				"cross-spawn": "^6.0.5",
				"dargs": "^6.0.0",
				"dateformat": "^3.0.3",
				"debug": "^4.1.0",
				"detect-conflict": "^1.0.0",
				"error": "^7.0.2",
				"find-up": "^3.0.0",
				"github-username": "^4.0.0",
				"istextorbinary": "^2.2.1",
				"lodash": "^4.17.10",
				"make-dir": "^1.1.0",
				"mem-fs-editor": "^5.0.0",
				"minimist": "^1.2.0",
				"pretty-bytes": "^5.1.0",
				"read-chunk": "^3.0.0",
				"read-pkg-up": "^4.0.0",
				"rimraf": "^2.6.2",
				"run-async": "^2.0.0",
				"shelljs": "^0.8.0",
				"text-table": "^0.2.0",
				"through2": "^3.0.0",
				"yeoman-environment": "^2.0.5"
			},
			"dependencies": {
				"@nodelib/fs.stat": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
					"integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="
				},
				"array-differ": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",
					"integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE="
				},
				"arrify": {
					"version": "1.0.1",
					"resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
					"integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="
				},
				"braces": {
					"version": "2.3.2",
					"resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
					"integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
					"requires": {
						"arr-flatten": "^1.1.0",
						"array-unique": "^0.3.2",
						"extend-shallow": "^2.0.1",
						"fill-range": "^4.0.0",
						"isobject": "^3.0.1",
						"repeat-element": "^1.1.2",
						"snapdragon": "^0.8.1",
						"snapdragon-node": "^2.0.1",
						"split-string": "^3.0.2",
						"to-regex": "^3.0.1"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"dargs": {
					"version": "6.1.0",
					"resolved": "https://registry.npmjs.org/dargs/-/dargs-6.1.0.tgz",
					"integrity": "sha512-5dVBvpBLBnPwSsYXqfybFyehMmC/EenKEcf23AhCTgTf48JFBbmJKqoZBsERDnjL0FyiVTYWdFsRfTLHxLyKdQ=="
				},
				"dir-glob": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",
					"integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",
					"requires": {
						"arrify": "^1.0.1",
						"path-type": "^3.0.0"
					}
				},
				"fast-glob": {
					"version": "2.2.7",
					"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz",
					"integrity": "sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==",
					"requires": {
						"@mrmlnc/readdir-enhanced": "^2.2.1",
						"@nodelib/fs.stat": "^1.1.2",
						"glob-parent": "^3.1.0",
						"is-glob": "^4.0.0",
						"merge2": "^1.2.3",
						"micromatch": "^3.1.10"
					}
				},
				"fill-range": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
					"integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
					"requires": {
						"extend-shallow": "^2.0.1",
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1",
						"to-regex-range": "^2.1.0"
					},
					"dependencies": {
						"extend-shallow": {
							"version": "2.0.1",
							"resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
							"integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
							"requires": {
								"is-extendable": "^0.1.0"
							}
						}
					}
				},
				"find-up": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
					"integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
					"requires": {
						"locate-path": "^3.0.0"
					}
				},
				"get-stream": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
					"integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ="
				},
				"gh-got": {
					"version": "6.0.0",
					"resolved": "https://registry.npmjs.org/gh-got/-/gh-got-6.0.0.tgz",
					"integrity": "sha512-F/mS+fsWQMo1zfgG9MD8KWvTWPPzzhuVwY++fhQ5Ggd+0P+CAMHtzMZhNxG+TqGfHDChJKsbh6otfMGqO2AKBw==",
					"requires": {
						"got": "^7.0.0",
						"is-plain-obj": "^1.1.0"
					}
				},
				"github-username": {
					"version": "4.1.0",
					"resolved": "https://registry.npmjs.org/github-username/-/github-username-4.1.0.tgz",
					"integrity": "sha1-y+KABBiDIG2kISrp5LXxacML9Bc=",
					"requires": {
						"gh-got": "^6.0.0"
					}
				},
				"glob-parent": {
					"version": "3.1.0",
					"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
					"integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
					"requires": {
						"is-glob": "^3.1.0",
						"path-dirname": "^1.0.0"
					},
					"dependencies": {
						"is-glob": {
							"version": "3.1.0",
							"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
							"integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
							"requires": {
								"is-extglob": "^2.1.0"
							}
						}
					}
				},
				"globby": {
					"version": "8.0.2",
					"resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",
					"integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",
					"requires": {
						"array-union": "^1.0.1",
						"dir-glob": "2.0.0",
						"fast-glob": "^2.0.2",
						"glob": "^7.1.2",
						"ignore": "^3.3.5",
						"pify": "^3.0.0",
						"slash": "^1.0.0"
					}
				},
				"got": {
					"version": "7.1.0",
					"resolved": "https://registry.npmjs.org/got/-/got-7.1.0.tgz",
					"integrity": "sha512-Y5WMo7xKKq1muPsxD+KmrR8DH5auG7fBdDVueZwETwV6VytKyU9OX/ddpq2/1hp1vIPvVb4T81dKQz3BivkNLw==",
					"requires": {
						"decompress-response": "^3.2.0",
						"duplexer3": "^0.1.4",
						"get-stream": "^3.0.0",
						"is-plain-obj": "^1.1.0",
						"is-retry-allowed": "^1.0.0",
						"is-stream": "^1.0.0",
						"isurl": "^1.0.0-alpha5",
						"lowercase-keys": "^1.0.0",
						"p-cancelable": "^0.3.0",
						"p-timeout": "^1.1.1",
						"safe-buffer": "^5.0.1",
						"timed-out": "^4.0.0",
						"url-parse-lax": "^1.0.0",
						"url-to-options": "^1.0.1"
					}
				},
				"ignore": {
					"version": "3.3.10",
					"resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
					"integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="
				},
				"is-number": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
					"integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
					"requires": {
						"kind-of": "^3.0.2"
					},
					"dependencies": {
						"kind-of": {
							"version": "3.2.2",
							"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
							"integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
							"requires": {
								"is-buffer": "^1.1.5"
							}
						}
					}
				},
				"isbinaryfile": {
					"version": "3.0.3",
					"resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.3.tgz",
					"integrity": "sha512-8cJBL5tTd2OS0dM4jz07wQd5g0dCCqIhUxPIGtZfa5L6hWlvV5MHTITy/DBAsF+Oe2LS1X3krBUhNwaGUWpWxw==",
					"requires": {
						"buffer-alloc": "^1.2.0"
					}
				},
				"load-json-file": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",
					"integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",
					"requires": {
						"graceful-fs": "^4.1.2",
						"parse-json": "^4.0.0",
						"pify": "^3.0.0",
						"strip-bom": "^3.0.0"
					}
				},
				"locate-path": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
					"integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
					"requires": {
						"p-locate": "^3.0.0",
						"path-exists": "^3.0.0"
					}
				},
				"make-dir": {
					"version": "1.3.0",
					"resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.3.0.tgz",
					"integrity": "sha512-2w31R7SJtieJJnQtGc7RVL2StM2vGYVfqUOvUDxH6bC6aJTxPxTF0GnIgCyu7tjockiUWAYQRbxa7vKn34s5sQ==",
					"requires": {
						"pify": "^3.0.0"
					}
				},
				"mem-fs-editor": {
					"version": "5.1.0",
					"resolved": "https://registry.npmjs.org/mem-fs-editor/-/mem-fs-editor-5.1.0.tgz",
					"integrity": "sha512-2Yt2GCYEbcotYbIJagmow4gEtHDqzpq5XN94+yAx/NT5+bGqIjkXnm3KCUQfE6kRfScGp9IZknScoGRKu8L78w==",
					"requires": {
						"commondir": "^1.0.1",
						"deep-extend": "^0.6.0",
						"ejs": "^2.5.9",
						"glob": "^7.0.3",
						"globby": "^8.0.1",
						"isbinaryfile": "^3.0.2",
						"mkdirp": "^0.5.0",
						"multimatch": "^2.0.0",
						"rimraf": "^2.2.8",
						"through2": "^2.0.0",
						"vinyl": "^2.0.1"
					},
					"dependencies": {
						"through2": {
							"version": "2.0.5",
							"resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
							"integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
							"requires": {
								"readable-stream": "~2.3.6",
								"xtend": "~4.0.1"
							}
						}
					}
				},
				"micromatch": {
					"version": "3.1.10",
					"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
					"integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
					"requires": {
						"arr-diff": "^4.0.0",
						"array-unique": "^0.3.2",
						"braces": "^2.3.1",
						"define-property": "^2.0.2",
						"extend-shallow": "^3.0.2",
						"extglob": "^2.0.4",
						"fragment-cache": "^0.2.1",
						"kind-of": "^6.0.2",
						"nanomatch": "^1.2.9",
						"object.pick": "^1.3.0",
						"regex-not": "^1.0.0",
						"snapdragon": "^0.8.1",
						"to-regex": "^3.0.2"
					}
				},
				"multimatch": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/multimatch/-/multimatch-2.1.0.tgz",
					"integrity": "sha1-nHkGoi+0wCkZ4vX3UWG0zb1LKis=",
					"requires": {
						"array-differ": "^1.0.0",
						"array-union": "^1.0.1",
						"arrify": "^1.0.0",
						"minimatch": "^3.0.0"
					}
				},
				"p-cancelable": {
					"version": "0.3.0",
					"resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-0.3.0.tgz",
					"integrity": "sha512-RVbZPLso8+jFeq1MfNvgXtCRED2raz/dKpacfTNxsx6pLEpEomM7gah6VeHSYV3+vo0OAi4MkArtQcWWXuQoyw=="
				},
				"p-locate": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
					"integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
					"requires": {
						"p-limit": "^2.0.0"
					}
				},
				"p-timeout": {
					"version": "1.2.1",
					"resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-1.2.1.tgz",
					"integrity": "sha1-XrOzU7f86Z8QGhA4iAuwVOu+o4Y=",
					"requires": {
						"p-finally": "^1.0.0"
					}
				},
				"parse-json": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
					"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
					"requires": {
						"error-ex": "^1.3.1",
						"json-parse-better-errors": "^1.0.1"
					}
				},
				"path-exists": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
					"integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="
				},
				"path-type": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
					"integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
					"requires": {
						"pify": "^3.0.0"
					}
				},
				"pify": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
					"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
				},
				"read-pkg": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
					"integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",
					"requires": {
						"load-json-file": "^4.0.0",
						"normalize-package-data": "^2.3.2",
						"path-type": "^3.0.0"
					}
				},
				"read-pkg-up": {
					"version": "4.0.0",
					"resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",
					"integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",
					"requires": {
						"find-up": "^3.0.0",
						"read-pkg": "^3.0.0"
					}
				},
				"readable-stream": {
					"version": "2.3.7",
					"resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
					"integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
					"requires": {
						"core-util-is": "~1.0.0",
						"inherits": "~2.0.3",
						"isarray": "~1.0.0",
						"process-nextick-args": "~2.0.0",
						"safe-buffer": "~5.1.1",
						"string_decoder": "~1.1.1",
						"util-deprecate": "~1.0.1"
					},
					"dependencies": {
						"safe-buffer": {
							"version": "5.1.2",
							"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
							"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
						}
					}
				},
				"rimraf": {
					"version": "2.7.1",
					"resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
					"integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
					"requires": {
						"glob": "^7.1.3"
					}
				},
				"slash": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
					"integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="
				},
				"string_decoder": {
					"version": "1.1.1",
					"resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
					"integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
					"requires": {
						"safe-buffer": "~5.1.0"
					},
					"dependencies": {
						"safe-buffer": {
							"version": "5.1.2",
							"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
							"integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
						}
					}
				},
				"strip-bom": {
					"version": "3.0.0",
					"resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
					"integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="
				},
				"through2": {
					"version": "3.0.2",
					"resolved": "https://registry.npmjs.org/through2/-/through2-3.0.2.tgz",
					"integrity": "sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==",
					"requires": {
						"inherits": "^2.0.4",
						"readable-stream": "2 || 3"
					}
				},
				"to-regex-range": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
					"integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
					"requires": {
						"is-number": "^3.0.0",
						"repeat-string": "^1.6.1"
					}
				},
				"url-parse-lax": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
					"integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
					"requires": {
						"prepend-http": "^1.0.1"
					}
				}
			}
		},
		"yn": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
			"integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
			"dev": true
		},
		"yosay": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/yosay/-/yosay-2.0.2.tgz",
			"integrity": "sha512-avX6nz2esp7IMXGag4gu6OyQBsMh/SEn+ZybGu3yKPlOTE6z9qJrzG/0X5vCq/e0rPFy0CUYCze0G5hL310ibA==",
			"requires": {
				"ansi-regex": "^2.0.0",
				"ansi-styles": "^3.0.0",
				"chalk": "^1.0.0",
				"cli-boxes": "^1.0.0",
				"pad-component": "0.0.1",
				"string-width": "^2.0.0",
				"strip-ansi": "^3.0.0",
				"taketalk": "^1.0.0",
				"wrap-ansi": "^2.0.0"
			},
			"dependencies": {
				"ansi-regex": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
					"integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
				},
				"chalk": {
					"version": "1.1.3",
					"resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
					"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
					"requires": {
						"ansi-styles": "^2.2.1",
						"escape-string-regexp": "^1.0.2",
						"has-ansi": "^2.0.0",
						"strip-ansi": "^3.0.0",
						"supports-color": "^2.0.0"
					},
					"dependencies": {
						"ansi-styles": {
							"version": "2.2.1",
							"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
							"integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="
						}
					}
				},
				"cli-boxes": {
					"version": "1.0.0",
					"resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-1.0.0.tgz",
					"integrity": "sha1-T6kXw+WclKAEzWH47lCdplFocUM="
				},
				"is-fullwidth-code-point": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
					"integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="
				},
				"string-width": {
					"version": "2.1.1",
					"resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
					"integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
					"requires": {
						"is-fullwidth-code-point": "^2.0.0",
						"strip-ansi": "^4.0.0"
					},
					"dependencies": {
						"ansi-regex": {
							"version": "3.0.0",
							"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
							"integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="
						},
						"strip-ansi": {
							"version": "4.0.0",
							"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
							"integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
							"requires": {
								"ansi-regex": "^3.0.0"
							}
						}
					}
				},
				"strip-ansi": {
					"version": "3.0.1",
					"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
					"integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
					"requires": {
						"ansi-regex": "^2.0.0"
					}
				},
				"supports-color": {
					"version": "2.0.0",
					"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
					"integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="
				},
				"wrap-ansi": {
					"version": "2.1.0",
					"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
					"integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
					"requires": {
						"string-width": "^1.0.1",
						"strip-ansi": "^3.0.1"
					},
					"dependencies": {
						"is-fullwidth-code-point": {
							"version": "1.0.0",
							"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
							"integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
							"requires": {
								"number-is-nan": "^1.0.0"
							}
						},
						"string-width": {
							"version": "1.0.2",
							"resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
							"integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
							"requires": {
								"code-point-at": "^1.0.0",
								"is-fullwidth-code-point": "^1.0.0",
								"strip-ansi": "^3.0.0"
							}
						}
					}
				}
			}
		}
	}
}

'''
'''--- rust/package.json ---
{
  "name": "rust",
  "version": "0.1.0",
  "license": "UNLICENSED",
  "scripts": {
    "test": "jest test --runInBand"
  },
  "devDependencies": {
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-react": "~7.13.13",
    "@babel/preset-typescript": "^7.14.5",
    "@baf-wallet/near": "^0.0.22",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.8",
    "@types/shelljs": "^0.8.9",
    "babel-jest": "~26.6.2",
    "bs58": "^4.0.1",
    "env-cmd": "~10.1.0",
    "gh-pages": "~3.1.0",
    "jest": "~26.6.2",
    "jest-environment-node": "~26.6.2",
    "lerna": "^4.0.0",
    "near-cli": "~1.6.0",
    "nodemon": "~2.0.3",
    "parcel-bundler": "~1.12.4",
    "react-test-renderer": "~17.0.1",
    "shelljs": "~0.8.4",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.4"
  },
  "dependencies": {
    "bn.js": "^5.2.0",
    "near-api-js": "~0.41.0",
    "oclif": "^1.18.1",
    "regenerator-runtime": "~0.13.5",
    "shelljs": "^0.8.4"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/tests/jest.init.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/src/",
      "<rootDir>/contract/",
      "<rootDir>/node_modules/"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- rust/packages/contract/Cargo.toml ---
[package]
name = "malloc-contract"
version = "0.1.0"
authors = ["Near Inc <hello@near.org>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../malloc-call-core" }
uint = "0.9.1"

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/contract/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/contract/compile.js ---
// This file does two things:
//
// 1. Compile the Rust contract using cargo (see buildCmd below). This will
//    create a wasm file in the 'build' folder.
// 2. Create a symbolic link (symlink) to the generated wasm file in the root
//    project's `out` folder, for easy use with near-cli.
//
// First, import some helper libraries. `shelljs` is included in the
// devDependencies of the root project, which is why it's available here. It
// makes it easy to use *NIX-style scripting (which works on Linux distros,
// macOS, and Unix systems) on Windows as well.
const sh = require('shelljs')

// Figure out which directory the user called this script from, which we'll use
// later to set up the symlink.
const calledFromDir = sh.pwd().toString()

// For the duration of this script, we want to operate from within the
// Rust project's folder. Let's change into that directory.
sh.cd(__dirname)

// You can call this script with `node compile.js` or `node compile.js
// --debug`. Let's set a variable to track whether `--debug` was used.
const debug = process.argv.pop() === '--debug'

// You can call this script with `node compile.js` or `node compile.js --debug`.
// Let's set a variable to track whether `--debug` was used.
// Note: see other flags in ./cargo/config. Unfortunately, you cannot set the
// `--target option` in Cargo.toml.
const buildCmd = debug
  ? 'cargo build --target wasm32-unknown-unknown'
  : 'cargo build --target wasm32-unknown-unknown --release'

// Execute the build command, storing exit code for later use
const { code } = sh.exec(buildCmd)

// Assuming this is compiled from the root project directory, link the compiled
// contract to the `out` folder â€“
// When running commands like `near deploy`, near-cli looks for a contract at
// <CURRENT_DIRECTORY>/out/main.wasm
if (code === 0 && calledFromDir !== __dirname) {
  const linkDir = `${calledFromDir}/out`
  const link = `${calledFromDir}/out/main.wasm`
  const packageName = require('fs').readFileSync(`${__dirname}/Cargo.toml`).toString().match(/name = "([^"]+)"/)[1]
  const outFile = `./target/wasm32-unknown-unknown/${debug ? 'debug' : 'release'}/${packageName}.wasm`
  sh.mkdir('-p', linkDir)
  sh.rm('-f', link)
  //fixes #831: copy-update instead of linking .- sometimes sh.ln does not work on Windows
  sh.cp('-u',outFile,link)
}

// exit script with the same code as the build command
process.exit(code)

'''
'''--- rust/packages/contract/neardev/dev-account.env ---
CONTRACT_NAME=dev-1629304735257-47782394333265
'''
'''--- rust/packages/contract/scripts/dev-deploy-init.sh ---
node compile.js && \
	near dev-deploy target/wasm32-unknown-unknown/release/splitter.wasm && \
	(near call $(cat ./neardev/dev-account) new --accountId=levtester.testnet || true)
'''
'''--- rust/packages/contract/src/action.rs ---
use core::panic;
use std::convert::TryFrom;
use std::str::FromStr;

use malloc_call_core::ft::MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL;
use malloc_call_core::ReturnItem;
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{
    env, log,
    serde_json::{self, json},
    AccountId, Promise,
};
use near_sdk::{utils, Gas};

use crate::actions::{self, ActionFunctions};
use crate::errors::PanicError;
use crate::malloc_utils::GenericId;
use crate::{
    errors::panic_errors, vector_wrapper::VectorWrapper, Construction, ConstructionCall,
    ConstructionCallId, ConstructionId, Contract,
};

pub type ActionId = GenericId;

pub type NextActionsIndicesForAction = VectorWrapper<VectorWrapper<u64>>;
pub type NextActionsSplitsForAction = VectorWrapper<VectorWrapper<U128>>;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub enum ActionCallStatus {
    /// The splitter call errored
    Error { message: String },
    /// The splitter call is waiting to be started
    WaitingCall,
    /// The splitter call is currently executing and waiting for a result
    Executing { block_index_start: u64 },
    /// The splitter call succeeded
    Success,
}

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]

// TODO: expected_number_inputs if we make this a dag
// https://github.com/Lev-Stambler/malloc-near-2/issues/26
pub struct ActionCall {
    action_index_in_construction: u64,
    block_index: u64,
    pub amount: u128,
    /// The length of children_status should always equal the length of the splitter's children
    status: ActionCallStatus,
}

pub type ActionCallId = u64;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug, Clone)]
#[serde(crate = "near_sdk::serde")]
pub enum Action {
    // TODO: add ft transfer see https://github.com/Lev-Stambler/malloc-near-2/issues/20
    // FtTransfer {
    //     receiver_id: AccountId,
    //     token_id: AccountId,
    // },
    FtTransferCallToMallocCall(actions::ft_calls::FtTransferCallToMallocCall),
    WithdrawFromMallocCall(actions::ft_calls::WithdrawFromMallocCall),
    MallocCall(actions::malloc_call::MallocCall),
}

impl Contract {
    /// Increments the next action call id and returns the current one
    fn incr_action_call_id(&mut self) -> ActionCallId {
        let curr = self.next_action_call_id;
        self.next_action_call_id = curr + 1;
        curr
    }
}

impl ActionCall {
    pub fn new_call_id(contract: &mut Contract) -> ActionCallId {
        contract.incr_action_call_id()
    }

    pub fn new(
        contract: &mut Contract,
        amount: u128,
        action_index_in_construction: u64,
    ) -> (ActionCall, ActionCallId) {
        (
            ActionCall {
                amount,
                status: ActionCallStatus::WaitingCall,
                block_index: env::block_index(),
                action_index_in_construction,
            },
            ActionCall::new_call_id(contract),
        )
    }

    pub fn action_calls_from_construction_indices(
        contract: &mut Contract,
        action_indices: Vec<u64>,
        amounts: Vec<u128>,
    ) -> Result<Vec<ActionCallId>, PanicError> {
        if action_indices.len() != amounts.len() {
            return Err(panic_errors::NUMB_NODES_DNE_NUMB_SPLITS.to_string());
        }

        let mut action_calls: Vec<ActionCallId> = Vec::with_capacity(action_indices.len());
        for i in 0..action_indices.len() {
            let (action_call, id) =
                ActionCall::new(contract, amounts[i], action_indices[i].to_owned());
            contract.action_calls.insert(&id, &action_call);

            action_calls.push(id);
        }

        Ok(action_calls)
    }
}

impl Contract {
    /// This call on _run assumes a well formed splitter
    /// Returns a refunded amount
    pub(crate) fn _run_step(&mut self, construction_call_id: ConstructionCallId) -> u64 {
        let mut construction_call = self.get_construction_call_unchecked(&construction_call_id);

        let action_call_index = construction_call
            .next_action_calls_stack
            .0
            .pop()
            .unwrap_or_else(|| panic!(panic_errors::CONSTRUCTION_CALL_SPLITTER_STACK_EMPTY));
        let action_call_id = construction_call
            .action_calls
            .0
            .get(action_call_index)
            .unwrap();
        let mut action_call = self
            .action_calls
            .get(&action_call_id)
            .unwrap_or_else(|| panic!(panic_errors::NODE_CALL_NOT_FOUND));

        let construction = self
            .get_construction(&construction_call.construction_id)
            .unwrap_or_else(|e| panic!("{}", e));

        let action_index = action_call.action_index_in_construction;
        let action_id = construction.actions.0.get(action_index).unwrap();

        let mut action = self.actions.get(&action_id).unwrap();

        self.construction_calls
            .insert(&construction_call_id, &&construction_call);

        let (prom, action_call) = action
            .handle_action(
                self,
                action_call,
                &construction_call_id,
                action_call_id,
                &env::predecessor_account_id(),
            )
            .unwrap_or_else(|e| panic!("{}", e));
        self.action_calls.insert(&action_call_id, &action_call);
        prom
    }
}

impl Action {
    // TODO: split up into helper functions
    // TODO: how to make sure all one input token type for a splitter?
    pub fn handle_action(
        &mut self,
        contract: &mut Contract,
        mut action_call: ActionCall,
        construction_call_id: &ConstructionCallId,
        action_call_id: ActionCallId,
        caller: &AccountId,
    ) -> Result<(u64, ActionCall), String> {
        // Set the child's status in the splitter call
        action_call.status = ActionCallStatus::Executing {
            block_index_start: env::block_index(),
        };
        let prom = match self {
            Action::FtTransferCallToMallocCall(ft_transfer_action) => ft_transfer_action.handle(
                contract,
                &action_call,
                construction_call_id,
                action_call_id,
                caller,
            ),
            Action::MallocCall(call) => call.handle(
                contract,
                &action_call,
                construction_call_id,
                action_call_id,
                caller,
            ),
            Action::WithdrawFromMallocCall(ft_withdraw_action) => ft_withdraw_action.handle(
                contract,
                &action_call,
                construction_call_id,
                action_call_id,
                caller,
            ),
        };
        let prom_ret = prom?;
        Ok((prom_ret, action_call))
    }
}

impl ActionCall {
    pub(crate) fn get_callback_args(
        construction_call_id: &ConstructionCallId,
        action_call_id: &ActionCallId,
        caller: &AccountId,
        token_return_id: Option<&AccountId>,
    ) -> String {
        let callback_args = match token_return_id {
            None => json!({
                    "construction_call_id": construction_call_id,
                "action_call_id": action_call_id,
                "caller": caller }),
            Some(token_id) => json!({
                    "construction_call_id": construction_call_id,
                "action_call_id": action_call_id,
                "token_return_id": token_id,
                "caller": caller }),
        };
        callback_args.to_string()
    }

    // TODO: error handling
    pub(crate) fn get_results_from_returned_bytes(
        ret_bytes: Vec<u8>,
        token_id: Option<ValidAccountId>,
    ) -> Result<Vec<ReturnItem>, String> {
        let as_u128: Result<String, _> = serde_json::from_slice(&ret_bytes);
        if let Ok(amount_ret) = as_u128 {
            let token_id = token_id.unwrap();
            return Ok(vec![ReturnItem {
                token_id: token_id,
                amount: amount_ret,
            }]);
        };

        let as_return_vec: Result<Vec<ReturnItem>, _> = serde_json::from_slice(&ret_bytes);
        if let Ok(return_vec) = as_return_vec {
            return Ok(return_vec);
        }
        panic!("EXPECTED ONE OF THESE TO WORK")
    }

    pub(crate) fn handle_action_callback_internal(
        &mut self,
        contract: &mut Contract,
        construction_call_id: ConstructionCallId,
        caller: AccountId,
        results: Vec<ReturnItem>,
    ) -> Option<u64> {
        let mut construction_call = contract.get_construction_call_unchecked(&construction_call_id);
        let construction_res = contract.get_construction(&construction_call.construction_id);
        // TODO: error handling with the malloc call cores
        let construction = construction_res.unwrap();

        // // TODO: error handling with the malloc call cores
        // let action_call_res = self.action_calls.get(&action_call_id);
        // let action_call = action_call_res.unwrap();

        // TODO: error handle with malloc call core
        let next_actions_indices = construction_call
            .next_actions_indices_in_construction
            .0
            .get(self.action_index_in_construction)
            .unwrap();

        // TODO: error handle with malloc call core
        let next_actions_splits = construction_call
            .next_actions_splits
            .0
            .get(self.action_index_in_construction)
            .unwrap();
        if next_actions_indices.0.len() != next_actions_splits.0.len() {
            // TODO: error handling with the malloc call cores
            panic!("");
        }

        // TODO: error handle here
        let amounts: Vec<u128> = results
            .iter()
            .map(|r| r.amount.parse::<u128>().unwrap())
            .collect();

        if amounts.len() != next_actions_indices.0.len() as usize {
            // TODO: error handling
            panic!("Expected the returned number of tokens to be the same length as next actions")
        }

        for i in 0..next_actions_indices.0.len() {
            construction_call = self.handle_next_split_set(
                contract,
                construction_call,
                next_actions_indices.0.get(i).unwrap(),
                next_actions_splits.0.get(i).unwrap(),
                amounts[i as usize],
            );
        }
        contract
            .construction_calls
            .insert(&construction_call_id, &construction_call);
        None
    }

    fn handle_next_split_set(
        &mut self,
        contract: &mut Contract,
        mut construction_call: ConstructionCall,
        next_action_indxs: VectorWrapper<u64>,
        next_splits: VectorWrapper<U128>,
        amount: u128,
    ) -> ConstructionCall {
        let next_amounts = Construction::get_split_amounts(amount, next_splits);
        for i in 0..next_amounts.len() {
            let (action_call, action_call_id) = ActionCall::new(
                contract,
                next_amounts[i],
                next_action_indxs.0.get(i as u64).unwrap(),
            );
            contract.action_calls.insert(&action_call_id, &action_call);
            log!(
                "Pushing a action_call with index into construction action calls of {}",
                action_call.action_index_in_construction
            );
            construction_call
                .next_action_calls_stack
                .0
                .push(&construction_call.action_calls.0.len());
            construction_call.action_calls.0.push(&action_call_id);
        }
        construction_call
    }
}

#[cfg(test)]
mod tests {
    use crate::test_utils::tests::return_item_eq;

    // Note this useful idiom: importing names from outer (for mod tests) scope.
    use super::*;

    #[test]
    fn test_getting_result_from_bytes_error() {}

    #[test]
    fn test_getting_result_from_bytes() {
        let amount = "10".to_string();
        let token_id = ValidAccountId::try_from("wrap.testnet").unwrap();
        let amount_json = json!(amount.clone());
        let ret_items_json = json!(vec![ReturnItem {
            token_id: token_id.clone(),
            amount: amount.clone()
        },]);
        let from_amount = ActionCall::get_results_from_returned_bytes(
            amount_json.to_string().into_bytes(),
            Some(token_id.clone()),
        )
        .unwrap();

        let from_ret_items = ActionCall::get_results_from_returned_bytes(
            ret_items_json.to_string().into_bytes(),
            None,
        )
        .unwrap();

        assert_eq!(from_ret_items.len(), 1);
        assert_eq!(from_amount.len(), 1);

        assert!(return_item_eq(
            &from_amount[0],
            &ReturnItem { amount, token_id }
        ));
        assert!(return_item_eq(&from_amount[0], &from_ret_items[0]));
    }
}

'''
'''--- rust/packages/contract/src/actions/ft_calls.rs ---
use malloc_call_core::ft::{
    FungibleTokenBalances, TransferType, MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL,
    MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_WITH_FT_TRANSFER_CALL,
    MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_TO
};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{env, log, AccountId, Gas};

use crate::action::ActionCall;
use crate::errors::PanicError;
use crate::gas::{CALLBACK_GAS, CROSS_CONTRACT_BASE_GAS};

use super::ActionFunctions;

const HANDLE_GAS: Gas = 2_000_000_000_000;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug, Clone)]
#[serde(crate = "near_sdk::serde")]
pub struct FtTransferCallToMallocCall {
    pub malloc_call_id: ValidAccountId,
    pub token_id: ValidAccountId,
}

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug, Clone)]
#[serde(crate = "near_sdk::serde")]
pub struct WithdrawFromMallocCall {
    pub malloc_call_id: ValidAccountId,
    pub token_id: ValidAccountId,
    pub recipient: Option<ValidAccountId>,
}

impl ActionFunctions for WithdrawFromMallocCall {
    fn handle(
        &self,
        contract: &mut crate::Contract,
        action_call: &ActionCall,
        construction_call_id: &crate::construction::ConstructionCallId,
        action_call_id: crate::action::ActionCallId,
        caller: &AccountId,
    ) -> Result<u64, PanicError> {
        let token_id: AccountId = self.token_id.to_string();
        let malloc_call_id: AccountId = self.malloc_call_id.to_string();

        // Use a transfer call malloc if the call is calling itself
        // Use a transfer if it is transferring to an account
        let transfer_type = if self.recipient == None {
            TransferType::TransferCallMalloc()
        } else {
            TransferType::Transfer()
        };

        let recipient = self
            .recipient
            .as_ref()
            .map(|v| v.to_string())
            .unwrap_or(env::current_account_id());

        let args = FungibleTokenBalances::get_withdraw_to_args(
            caller,
            U128(action_call.amount),
            &token_id,
            &recipient,
            None,
            transfer_type,
        )
        .map_err(|e| e.to_string())?;

        let prom = env::promise_batch_create(malloc_call_id);
        env::promise_batch_action_function_call(
            prom,
            "withdraw_to".as_bytes(),
            args.as_bytes(),
            1,
            MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_TO + CROSS_CONTRACT_BASE_GAS,
        );

        let callback = env::promise_batch_then(prom, env::current_account_id());
        let callback_args = ActionCall::get_callback_args(
            construction_call_id,
            &action_call_id,
            caller,
            Some(&token_id),
        );
        env::promise_batch_action_function_call(
            callback,
            b"handle_action_callback",
            callback_args.as_bytes(),
            0,
            CALLBACK_GAS,
        );

        Ok(callback)
    }

    fn get_gas_requirement(&self, action_call: &ActionCall) -> Result<Gas, PanicError> {
        Ok(MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_TO + HANDLE_GAS + CALLBACK_GAS + CROSS_CONTRACT_BASE_GAS)
    }
}

impl ActionFunctions for FtTransferCallToMallocCall {
    fn handle(
        &self,
        contract: &mut crate::Contract,
        action_call: &ActionCall,
        construction_call_id: &crate::construction::ConstructionCallId,
        action_call_id: crate::action::ActionCallId,
        caller: &AccountId,
    ) -> Result<u64, crate::errors::PanicError> {
        let token_id: AccountId = self.token_id.to_string();
        let malloc_call_id: AccountId = self.malloc_call_id.to_string();
        let prom = contract.balances.internal_ft_transfer_call(
            &token_id,
            malloc_call_id,
            U128(action_call.amount),
            caller.clone(),
            None,
        );
        let callback = env::promise_batch_then(prom, env::current_account_id());
        let callback_args = ActionCall::get_callback_args(
            construction_call_id,
            &action_call_id,
            caller,
            Some(&token_id),
        );
        env::promise_batch_action_function_call(
            callback,
            b"handle_action_callback",
            callback_args.as_bytes(),
            0,
            CALLBACK_GAS,
        );
        Ok(callback)
    }

    fn get_gas_requirement(&self, _action_call: &ActionCall) -> Result<Gas, PanicError> {
        Ok(MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL + CALLBACK_GAS + HANDLE_GAS)
    }
}

'''
'''--- rust/packages/contract/src/actions/malloc_call.rs ---
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::json_types::U128;
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{env, log, AccountId, Gas};

use crate::errors::PanicError;
use crate::gas::CALLBACK_GAS;
use crate::action::ActionCall;

use super::ActionFunctions;

const HANDLE_GAS: Gas = 2_000_000_000_000;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug, Clone)]
#[serde(crate = "near_sdk::serde")]
pub struct MallocCall {
    check_callback: Option<bool>,
    skip_ft_transfer: Option<bool>,
    malloc_call_id: AccountId,
    token_id: AccountId,
    json_args: String,
    gas: Gas,
    attached_amount: near_sdk::json_types::U128,
}

impl ActionFunctions for MallocCall {
    fn handle(
        &self,
        contract: &mut crate::Contract,
        action_call: &ActionCall,
        construction_call_id: &crate::construction::ConstructionCallId,
        action_call_id: crate::action::ActionCallId,
        caller: &AccountId,
    ) -> Result<u64, crate::errors::PanicError> {
        let token_contract_id = self.token_id.clone();
        let call_data = format!(
            "{{\"args\": {}, \"amount\": \"{}\", \"token_id\": \"{}\", \"caller\": \"{}\"}}",
            self.json_args,
            action_call.amount.to_string(),
            token_contract_id.clone(),
            caller
        );

        log!("Action call amount: {}", action_call.amount);

        let call_prom = if action_call.amount > 0 && !self.skip_ft_transfer.unwrap_or(false) {
            // TODO: what if the ft_transfer prom fails???
            // See https://github.com/Lev-Stambler/malloc-near-2/issues/27
            let transfer_call_prom = contract.balances.internal_ft_transfer_call(
                &self.token_id,
                self.malloc_call_id.clone(),
                U128(action_call.amount),
                caller.clone(),
                None,
            );

            let call_prom = env::promise_then(
                transfer_call_prom,
                self.malloc_call_id.to_string(),
                &malloc_call_core::call_method_name(),
                call_data.as_bytes(),
                self.attached_amount.into(),
                self.gas,
            );
            call_prom
        } else {
            let call_prom = env::promise_batch_create(self.malloc_call_id.clone());
            env::promise_batch_action_function_call(
                call_prom,
                &malloc_call_core::call_method_name(),
                call_data.as_bytes(),
                self.attached_amount.into(),
                self.gas,
            );
            call_prom
        };

        // If check callback is false, finish the call and return
        if let Some(check_cb) = self.check_callback {
            if !check_cb {
                return Ok(call_prom);
            }
        }

        let callback = env::promise_batch_then(call_prom, env::current_account_id());
        let callback_args =
            ActionCall::get_callback_args(construction_call_id, &action_call_id, caller, None);
        env::promise_batch_action_function_call(
            callback,
            b"handle_action_callback",
            callback_args.as_bytes(),
            0,
            CALLBACK_GAS,
        );
        Ok(callback)
    }

    fn get_gas_requirement(&self, action_call: &ActionCall) -> Result<Gas, PanicError> {
        let callback_gas = if self.check_callback.unwrap_or(true) {
            CALLBACK_GAS
        } else {
            0
        };
        let ft_transfer_call_gas =
            if self.skip_ft_transfer.unwrap_or(false) || action_call.amount == 0 {
                0
            } else {
                malloc_call_core::ft::MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL
            };
        Ok(callback_gas + self.gas + ft_transfer_call_gas + HANDLE_GAS)
    }
}

'''
'''--- rust/packages/contract/src/actions/mod.rs ---
use near_sdk::{AccountId, Gas};

use crate::{Contract, construction::ConstructionCallId, errors::PanicError, action::{ActionCall, ActionCallId}};

pub mod ft_calls;
pub mod malloc_call;

pub trait ActionFunctions {
		/// Handle a action
		/// @returns a result of a promise index
    fn handle(
        &self,
        contract: &mut Contract,
        action_call: &ActionCall,
        construction_call_id: &ConstructionCallId,
        action_call_id: ActionCallId,
        caller: &AccountId,
    ) -> Result<u64, PanicError>;

		fn get_gas_requirement(&self, action_call: &ActionCall) -> Result<Gas, PanicError>;
}

'''
'''--- rust/packages/contract/src/construction.rs ---
use crate::action::{
    ActionCall, ActionId, NextActionsIndicesForAction, NextActionsSplitsForAction,
};
use crate::malloc_utils::GenericId;
use crate::malloc_utils::U256;
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::json_types::U128;
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{collections::Vector, env, AccountId};

pub type ConstructionCallId = String;

/// A Construction is the collection of actions. It can be used to form the call DAG
#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug, Clone)]
#[serde(crate = "near_sdk::serde")]
pub struct Construction {
    pub actions: VectorWrapper<ActionId>,
}

pub type ConstructionId = GenericId;

pub type NextActionsIndicesForConstruction = VectorWrapper<NextActionsIndicesForAction>;
pub type NextActionsSplitsForConstruction = VectorWrapper<NextActionsSplitsForAction>;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, PartialEq, Debug)]
#[serde(crate = "near_sdk::serde")]
/// ConstructionCalls contain all the dynamic data when calling a construction
/// They are unique per construction call, so once a user is done calling a construction,
/// They should delete the construction call
pub struct ConstructionCall {
    pub caller: AccountId,
    pub construction_id: ConstructionId,
    // TODO: ideally we want to have a queue not a stack (so we have BFS not DFS). But, Vector only supports O(1) stack ops.
    // See https://github.com/Lev-Stambler/malloc-near-2/issues/16
    /// A vector which indexes into the action call vector
    /// Indicates which action_calls should be called next
    pub next_action_calls_stack: VectorWrapper<u64>,
    /// A vector which contains the action call id's for all the actions which the
    /// construction call already interacted with (either pushing it onto the stack, executing it, or handling a action's return
    pub action_calls: VectorWrapper<ActionCallId>,

    // TODO: move into separate lookup table with id ref: See https://github.com/Lev-Stambler/malloc-near-2/issues/17
    pub next_actions_indices_in_construction: NextActionsIndicesForConstruction,
    pub next_actions_splits: NextActionsSplitsForConstruction,
}

use crate::errors::panic_errors::{self, NUMB_OF_SPLITS_DOES_NOT_EQUAL_NUMB_AMOUNTS};
use crate::{errors::PanicError, vector_wrapper::VectorWrapper, ActionCallId, Contract};

impl Construction {
    /// Convert a vector of splits and a given amount to a Vec of amount values.
    /// All of the amounts are rounded down except the last one. So, if there is any remainder, it will be summed to the last output
    /// Smaller than the input amount
    pub fn get_split_amounts(amount: u128, splits: VectorWrapper<U128>) -> Vec<u128> {
        let mut amounts = vec![];

        // TODO: to u256
        let mut split_sum: U256 = U256::from(0);
        for i in 0..splits.0.len() {
            split_sum += U256::from(splits.0.get(i).unwrap().0);
        }

        for i in 0..splits.0.len() {
            let transfer_amount_u256: U256 =
                U256::from(splits.0.get(i).unwrap().0) * U256::from(amount) / split_sum;
            let transfer_amount = transfer_amount_u256.as_u128();
            // let frac = (splits.0.get(i).unwrap() as f64) / (split_sum as f64);
            // let transfer_amount_float = frac * amount as f64;
            // let transfer_amount = transfer_amount_float.floor() as u128;
            amounts.push(transfer_amount);
        }
        let unused: u128 = amount - amounts.iter().sum::<u128>();
        assert_eq!(
            amounts.len() as u64,
            splits.0.len(),
            "{}",
            NUMB_OF_SPLITS_DOES_NOT_EQUAL_NUMB_AMOUNTS.to_owned()
        );
        if amounts.len() > 1 {
            amounts[splits.0.len() as usize - 1] += unused;
        }
        amounts
    }
}

impl ConstructionCall {
    /// Creates a new construction call and also places all elements from action_call_ids into the new stack
    pub fn new(
        contract: &mut Contract,
        caller: AccountId,
        construction_id: ConstructionId,
        construction_call_id: &ConstructionCallId,
        amount: u128,
        initial_action_indices: Vec<u64>,
        initial_splits: VectorWrapper<U128>,
        next_actions_indices: NextActionsIndicesForConstruction,
        next_actions_splits: NextActionsSplitsForConstruction,
    ) -> Result<ConstructionCall, PanicError> {
        // Ensure the construction call id is not already registered
        assert!(
            contract
                .construction_calls
                .get(&construction_call_id)
                .is_none(),
            "{}",
            panic_errors::CONSTRUCTION_CALL_ID_ALREADY_USED
        );

        // Ensure the construction actually exists
        let _construction = contract.get_construction(&construction_id)?;

        // Create the vectors necessary for the construction call
        let vect_prefix_str_action_stack = format!("constcall-stack-{}", construction_call_id);
        let vect_prefix_action_call_stack = vect_prefix_str_action_stack.as_bytes();

        let initial_amounts = Construction::get_split_amounts(amount, initial_splits);
        let init_action_calls = ActionCall::action_calls_from_construction_indices(
            contract,
            initial_action_indices,
            initial_amounts,
        )
        .unwrap_or_else(|e| panic!("{}", e));

        let action_call_ids_prefix = format!("{}-actions", construction_call_id);
        let action_call_ids =
            VectorWrapper::from_vec(init_action_calls, action_call_ids_prefix.as_bytes());

        // Create the call stack and push the initial calls onto it
        let mut action_call_stack = VectorWrapper(Vector::new(vect_prefix_action_call_stack));
        for i in 0..action_call_ids.0.len() {
            action_call_stack.0.push(&i);
        }

        Ok(ConstructionCall {
            caller,
            construction_id,
            action_calls: action_call_ids,
            next_action_calls_stack: action_call_stack,
            next_actions_indices_in_construction: next_actions_indices,
            next_actions_splits,
        })
    }
}

impl Contract {
    pub fn get_construction(&self, id: &ConstructionId) -> Result<Construction, PanicError> {
        self.constructions
            .get(&id)
            .ok_or(panic_errors::CONSTRUCTION_NOT_FOUND.to_string())
    }
}
#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use std::convert::TryFrom;

    use crate::actions::ft_calls::FtTransferCallToMallocCall;
    use crate::malloc_utils::GenericId;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_get_split_amount_with_leftover() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());

        let ret = Construction::get_split_amounts(
            100,
            VectorWrapper::from_vec(vec![U128(10), U128(10), U128(10)], "1".as_bytes()),
        );
        assert_eq!(ret, vec![33, 33, 34]);
    }

    #[test]
    fn test_get_split_amount_even_numbers() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());

        let ret = Construction::get_split_amounts(
            1_000_000,
            VectorWrapper::from_vec(vec![U128(10), U128(40), U128(50)], "1".as_bytes()),
        );
        assert_eq!(ret, vec![100_000, 400_000, 500_000]);
    }
}

'''
'''--- rust/packages/contract/src/errors.rs ---
pub type PanicError = String;

pub mod panic_errors {
    // Malloc Call panic_errors
    pub const MALLOC_CALL_FAILED: &str = "The malloc call failed";

    // Not found errors
    pub const NODE_CALL_NOT_FOUND: &str = "The action call was not found";
    pub const CONSTRUCTION_CALL_SPLITTER_CALL_NOT_FOUND: &str = "The splitter call for the given splitter call id was not found within the construction call";
    pub const CONSTRUCTION_CALL_ID_NOT_FOUND: &str = "Construction Call ID does not exist";
    pub const SPLITTER_OWNER_NOT_FOUND: &str = "Splitter owner not found";
    pub const CONSTRUCTION_CALL_NOT_FOUND: &str = "The construction call was not found";
    pub const CONSTRUCTION_NOT_FOUND: &str =
        "The construction with the given id not found in the owner's construction collection";
    pub const SPLITTER_NOT_FOUND: &str =
        "The Splitter with the given id not found in the owner's splitter collection";
    pub const CONSTRUCTION_OWNER_NOT_FOUND: &str = "Construction owner not found";
    pub const SPLITTER_NOT_FOUND_IN_CONSTRUCTION: &str =
        "The supplied splitter index is not found in the construction's splitter list";
    pub const NEXT_SPLITTER_SET_NOT_FOUND_PER_SPLITTER: &str = "The next splitter set for a splitter was not found for the construction with the given index";
    pub const NEXT_SPLITTER_SET_NOT_FOUND_PER_CHILD: &str =
        "The next splitter set for a child of a splitter was not found for the construction";

    // Unauthorized errors
    pub const CALLER_DOES_NOT_OWN_CONSTRUCTION: &str = "The caller does not own the construction";

    // Parsing panic_errors
    pub const FAILED_TO_PARSE_NUMBER: &str = "Failed to parse a number from the string";
    pub const FAILED_TO_PARSE_SPLITTER: &str = "Failed to parse the splitter string";

    // Funding panic_errors
    pub const CALLEE_DID_NOT_DEPOSIT_SUFFICIENT_FUNDS: &str =
        "The callee did not deposit sufficient funds";

    // ID Registration errors
    pub const CONSTRUCTION_CALL_ID_ALREADY_USED: &str =
        "The given construction call id has already been registered";
    pub const NODE_CALL_ID_ALREADY_USED: &str =
        "The given action call id has already been registered";

    // Malformed panic_errors: panic_errors corresponding to splitters and constructions with incorrect shapes and/or inputs
    pub const NUMB_OF_NODES_NOT_EQUAL_TO_NUMB_NAMES: &str =
        "The number of actions does not equal to the number of names";
    pub const CONSTRUCTION_CALL_SPLITTER_STACK_EMPTY: &str =
        "The splitter stack for the construction call is empty";
    pub const NUMBER_OF_SPLITTERS_DID_NOT_MATCH_RETURN: &str =
        "The number of splitters for the next set of inputs does not match the call's return";
    pub const FT_CONTRACT_ID_NOT_MATCH: &str = "The returned fungible token contract type and the required fungible token type do not match";
    pub const NO_CHILDREN_SPECIFIED: &str = "At least one child must be specified";
    pub const MORE_USED_THAN_ALLOWED: &str = "More currency was used than specified by the call";
    pub const NUMB_NODES_DNE_NUMB_SPLITS: &str =
        "The number of endpoints specified does not match the number of splits";
    pub const NUMB_OF_SPLITTER_IDXS_DID_NOT_MATCH_SPLITTERS: &str =
        "The number of splitter indixes does not match the number of splitters";

    // Assertion errors for code proving
    pub const NUMB_OF_SPLITS_DOES_NOT_EQUAL_NUMB_AMOUNTS: &str =
        "Unexpected: the number of splits does not equal the number of amounts";
}

'''
'''--- rust/packages/contract/src/gas.rs ---
use near_sdk::Gas;

// This can be brought down probs?
pub const CALLBACK_GAS: Gas = 5_000_000_000_000 * 5;
pub const CROSS_CONTRACT_BASE_GAS: Gas = 20_000_000_000_000;

'''
'''--- rust/packages/contract/src/lib.rs ---
/*
 * This is an example of a Rust smart contract with two simple, symmetric functions:
 *
 * 1. set_greeting: accepts a greeting, such as "howdy", and records it for the user (account_id)
 *    who sent the request
 * 2. get_greeting: accepts an account_id and returns the greeting saved for it, defaulting to
 *    "Hello"
 *
 * Learn more about writing NEAR smart contracts with Rust:
 * https://github.com/near/near-sdk-rs
 *
 */

use construction::{
    Construction, ConstructionCall, ConstructionCallId, ConstructionId,
    NextActionsIndicesForConstruction, NextActionsSplitsForConstruction,
};
use malloc_call_core::ft::{FungibleTokenBalances, FungibleTokenHandlers};
use malloc_call_core::{MallocCallFT, ReturnItem};
// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use action::{Action, ActionCall, ActionCallId, ActionId};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::UnorderedMap;
use near_sdk::json_types::{ValidAccountId, U128, U64};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{
    env, log, near_bindgen, serde, serde_json, setup_alloc, utils, AccountId, Gas, PanicOnDefault,
};
use vector_wrapper::VectorWrapper;

use crate::errors::panic_errors;

mod action;
mod actions;
mod construction;
pub mod errors;
mod gas;
mod malloc_utils;
mod test_utils;
mod vector_wrapper;

setup_alloc!();
#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault, MallocCallFT)]
/// The Contract's state
pub struct Contract {
    /// A store for all the constructions. Constructions are meant to be immutable objects
    // TODO: enforce immutability: https://github.com/Lev-Stambler/malloc-near-2/issues/18
    constructions: UnorderedMap<ConstructionId, Construction>,
    /// A store of all the construction calls. Construction calls are mutable and ephemeral objects
    /// They should only live as long as a single call to a construction
    construction_calls: UnorderedMap<ConstructionCallId, ConstructionCall>,
    /// A store of all the action calls. Action calls are mutable and ephemeral objects
    /// They should only live as long as a single call to a construction. They get deleted
    /// When a construction call gets deleted
    action_calls: UnorderedMap<ActionCallId, ActionCall>,
    /// A store for all the actions. Actions are meant to be immutable objects
    // TODO: enforce immutability: https://github.com/Lev-Stambler/malloc-near-2/issues/18
    actions: UnorderedMap<ActionId, Action>,
    /// Balances keeps track of all the users' balances. See malloc-call-core's documentation for more information
    balances: FungibleTokenBalances,
    /// Keeps track of the next action call id so that action call id's can all be unique and need not be supplied by the caller
    next_action_call_id: ActionCallId,
    /// The current contract's ID. This field is needed for MallocCallFT
    malloc_contract_id: AccountId,
}

pub trait CoreFunctionality {
    fn register_actions(&mut self, action_names: Vec<String>, actions: Vec<Action>);
    fn register_construction(&mut self, construction_name: String, construction: Construction);
    fn init_construction(
        &mut self,
        construction_call_id: ConstructionCallId,
        construction_id: ConstructionId,
        amount: U128,
        initial_action_indices: Vec<u64>,
        initial_splits: VectorWrapper<U128>,
        next_actions_indices: NextActionsIndicesForConstruction,
        next_actions_splits: NextActionsSplitsForConstruction,
    );
    fn delete_construction(&mut self, construction_id: ConstructionId);
    fn process_next_action_call(&mut self, construction_call_id: ConstructionCallId);
}

#[near_bindgen]
impl CoreFunctionality for Contract {
    fn delete_construction(&mut self, construction_id: ConstructionId) {
        todo!();
        // self.delete_construction_internal(construction_id, env::predecessor_account_id())
        //     .unwrap_or_else(|e| panic!(e))
    }

    fn register_actions(&mut self, action_names: Vec<String>, actions: Vec<Action>) {
        assert_eq!(
            action_names.len(),
            actions.len(),
            "{}",
            panic_errors::NUMB_OF_NODES_NOT_EQUAL_TO_NUMB_NAMES
        );

        let owner = Some(env::predecessor_account_id());
        for i in 0..action_names.len() {
            self.actions.insert(
                &ActionId::new(action_names[i].clone(), owner.clone()),
                &actions[i],
            );
        }
    }

    fn register_construction(&mut self, construction_name: String, construction: Construction) {
        self.constructions
            .insert(&ConstructionId::new(construction_name, None), &construction);
    }

    fn init_construction(
        &mut self,
        construction_call_id: ConstructionCallId,
        construction_id: ConstructionId,
        amount: U128,
        initial_action_indices: Vec<u64>,
        initial_splits: VectorWrapper<U128>,
        next_actions_indices: NextActionsIndicesForConstruction,
        next_actions_splits: NextActionsSplitsForConstruction,
    ) {
        let caller = env::predecessor_account_id();

        let construction = self
            .get_construction(&construction_id)
            .unwrap_or_else(|e| panic!(e));

        let construction_call = ConstructionCall::new(
            self,
            caller,
            construction_id,
            &construction_call_id,
            amount.into(),
            initial_action_indices,
            initial_splits,
            next_actions_indices,
            next_actions_splits,
        )
        .unwrap_or_else(|e| panic!(e));

        self.construction_calls
            .insert(&construction_call_id, &construction_call);
    }

    fn process_next_action_call(&mut self, construction_call_id: ConstructionCallId) {
        self._run_step(construction_call_id);
        log!("Gas used: {}", env::used_gas());
    }
}

#[near_bindgen]
impl Contract {
    pub fn get_action_call_unchecked(&self, id: U64) -> ActionCall {
        self.action_calls.get(&id.into()).unwrap()
    }

    pub fn get_construction_call_unchecked(&self, id: &ConstructionCallId) -> ConstructionCall {
        self.construction_calls
            .get(&id)
            .unwrap_or_else(|| panic!(panic_errors::CONSTRUCTION_NOT_FOUND))
    }
}

#[near_bindgen]
impl Contract {
    fn get_gas_usage(&self) -> Gas {
        75_000_000_000_000
    }
}

#[near_bindgen]
impl Contract {
    #[private]
    pub fn handle_action_callback(
        &mut self,
        construction_call_id: ConstructionCallId,
        action_call_id: u64,
        caller: AccountId,
        token_return_id: Option<ValidAccountId>,
    ) -> Option<u64> {
        // TODO: err handle!!
        let mut action_call = self.action_calls.get(&action_call_id).unwrap();
        let ret_bytes = match utils::promise_result_as_success() {
            None => panic!("TODO:"),
            Some(bytes) => bytes,
        };
        let results: Vec<ReturnItem> =
            ActionCall::get_results_from_returned_bytes(ret_bytes, token_return_id).unwrap();
        action_call.handle_action_callback_internal(self, construction_call_id, caller, results)
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new() -> Self {
        Contract {
            balances: FungibleTokenBalances::new("malloc-ft".as_bytes()),
            action_calls: UnorderedMap::<ActionCallId, ActionCall>::new("actioncalls".as_bytes()),
            actions: UnorderedMap::new("actions".as_bytes()),
            next_action_call_id: 0,
            constructions: UnorderedMap::new("constructions".as_bytes()),
            construction_calls: UnorderedMap::new("construction-call-stack".as_bytes()),
            malloc_contract_id: env::current_account_id(),
        }
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use std::convert::TryFrom;

    use crate::actions::ft_calls::FtTransferCallToMallocCall;
    use crate::malloc_utils::GenericId;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_register_construction() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new();
        let token_id1 = ValidAccountId::try_from("wrapp.localnet".to_string()).unwrap();
        let token_id2 = ValidAccountId::try_from("wrappppp.localnet".to_string()).unwrap();

        let action2 = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id1,
        });
        let action1 = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id2,
        });
        contract.register_actions(
            vec!["action1".to_string(), "action2".to_string()],
            vec![action1.clone(), action2.clone()],
        );
        let construction_name = "Jimbe First Son of the Sea".to_string();
        let construction = Construction {
            actions: VectorWrapper::from_vec(
                vec![
                    GenericId {
                        name: "action1".to_string(),
                        owner: accounts(0).to_string(),
                    },
                    GenericId {
                        name: "action2".to_string(),
                        owner: accounts(0).to_string(),
                    },
                ],
                "my prefix".as_bytes(),
            ),
        };
        contract.register_construction(construction_name.clone(), construction.clone());
        let construction_got = contract.get_construction(&GenericId {
            name: construction_name,
            owner: accounts(0).to_string(),
        });
        assert_eq!(construction_got.unwrap(), construction);
    }

    #[test]
    fn test_init_construction() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new();
        let token_id1 = ValidAccountId::try_from("wrapp.localnet".to_string()).unwrap();
        let token_id2 = ValidAccountId::try_from("wrappppp.localnet".to_string()).unwrap();

        let action2 = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id1,
        });
        let action1 = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id2,
        });
        contract.register_actions(
            vec!["action1".to_string(), "action2".to_string()],
            vec![action1.clone(), action2.clone()],
        );
        let construction_name = "Jimbe First Son of the Sea".to_string();
        let construction = Construction {
            actions: VectorWrapper::from_vec(
                vec![
                    GenericId {
                        name: "action1".to_string(),
                        owner: accounts(0).to_string(),
                    },
                    GenericId {
                        name: "action2".to_string(),
                        owner: accounts(0).to_string(),
                    },
                ],
                "my prefix".as_bytes(),
            ),
        };
        contract.register_construction(construction_name.clone(), construction.clone());

        let construction_call_id = "mycall".to_string();
        let construction_id = GenericId {
            name: construction_name.clone(),
            owner: accounts(0).into(),
        };
        let amount = U128(100);
        let initial_action_indices = vec![0, 1];
        let initial_splits: VectorWrapper<U128> = serde_json::from_str("[\"1\", \"2\"]").unwrap();
        let next_actions_indices: NextActionsIndicesForConstruction =
            serde_json::from_str("[[[]], [[]]]").unwrap();
        let next_actions_splits: NextActionsSplitsForConstruction =
            serde_json::from_str("[[[]], [[]]]").unwrap();

        contract.init_construction(
            construction_call_id.clone(),
            construction_id.clone(),
            amount.clone(),
            initial_action_indices.clone(),
            initial_splits.clone(),
            next_actions_indices.clone(),
            next_actions_splits.clone(),
        );

        let construction_call = ConstructionCall::new(
            &mut &mut contract,
            accounts(0).to_string(),
            construction_id,
            &"aaaaaaa".to_string(), // Have a new construction call id to avoid re-registering
            amount.0,
            initial_action_indices,
            initial_splits,
            next_actions_indices,
            next_actions_splits,
        )
        .unwrap();
        let registered = contract.get_construction_call_unchecked(&construction_call_id);
        assert_ne!(&registered.action_calls, &construction_call.action_calls);

        assert_eq!(&registered.caller, &construction_call.caller);
        assert_eq!(
            &registered.construction_id,
            &construction_call.construction_id
        );
        assert_eq!(
            &registered.next_action_calls_stack,
            &construction_call.next_action_calls_stack
        );
        assert_eq!(
            &registered.next_actions_indices_in_construction,
            &construction_call.next_actions_indices_in_construction
        );
        assert_eq!(
            &registered.next_actions_splits,
            &construction_call.next_actions_splits
        );
    }

    #[test]
    fn test_register_actions() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new();

        let token_id1 = ValidAccountId::try_from("wrapp.localnet".to_string()).unwrap();
        let token_id2 = ValidAccountId::try_from("wrappppp.localnet".to_string()).unwrap();

        let action2_prereigster = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id1,
        });
        let action1_prereigster = Action::FtTransferCallToMallocCall(FtTransferCallToMallocCall {
            malloc_call_id: accounts(2),
            token_id: token_id2,
        });
        contract.register_actions(
            vec!["action1".to_string(), "action2".to_string()],
            vec![action1_prereigster.clone(), action2_prereigster.clone()],
        );
        let action1 = contract.actions.get(&GenericId {
            owner: accounts(0).to_string(),
            name: "action1".to_string(),
        });
        let action2 = contract.actions.get(&GenericId {
            owner: accounts(0).to_string(),
            name: "action2".to_string(),
        });
        assert!(action1.is_some());
        assert!(action2.is_some());

        assert_eq!(action1.unwrap(), action1_prereigster);
        assert_eq!(action2.unwrap(), action2_prereigster);
    }
}

'''
'''--- rust/packages/contract/src/malloc_utils.rs ---
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{env, serde, AccountId};
use uint::construct_uint;

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, Clone, PartialEq, Debug)]
#[serde(crate = "near_sdk::serde")]
pub struct GenericId {
    pub owner: AccountId,
    pub name: String,
}

impl GenericId {
    pub fn new(name: String, owner: Option<AccountId>) -> GenericId {
        GenericId {
            name,
            owner: owner.unwrap_or(env::predecessor_account_id()),
        }
    }
}

construct_uint! {
    /// 256-bit unsigned integer.
    pub struct U256(4);
}

'''
'''--- rust/packages/contract/src/test_utils.rs ---
#[cfg(all(test, not(target_arch = "wasm32")))]
pub mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;
    use malloc_call_core::ReturnItem;
    use near_sdk::{
        borsh::BorshSerialize,
        collections::Vector,
        json_types::ValidAccountId,
        test_utils::{accounts, VMContextBuilder},
        AccountId,
    };

    use crate::vector_wrapper::VectorWrapper;

    pub(crate) fn return_item_eq(a: &ReturnItem, b: &ReturnItem) -> bool {
        let a_tok_id: AccountId = a.token_id.clone().into();
        let b_tok_id: AccountId = b.token_id.clone().into();
        return a.amount == b.amount && a_tok_id == b_tok_id;
    }

    pub(crate) fn vec_to_vector<T: BorshSerialize>(v: &[T], prefix: &[u8]) -> VectorWrapper<T> {
        let mut vector = Vector::new(prefix);
        for i in v.iter() {
            vector.push(i);
        }
        VectorWrapper(vector)
    }

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    pub fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }
}

'''
'''--- rust/packages/contract/src/vector_wrapper.rs ---
use core::fmt;
use std::{fmt::Debug, marker::PhantomData};

use near_sdk::{
    borsh::{self, BorshDeserialize, BorshSerialize},
    collections::Vector,
    env::{self, random_seed, used_gas},
    log,
    serde::{
        self,
        de::{value::BoolDeserializer, SeqAccess, Visitor},
        ser::SerializeSeq,
        Deserialize, Deserializer, Serialize,
    },
    serde_json, BorshIntoStorageKey, IntoStorageKey,
};

#[derive(BorshDeserialize, BorshSerialize)]
pub struct VectorWrapper<T>(pub Vector<T>);

fn get_random_bytes_prefix() -> Vec<u8> {
    let mut unique_prefix = env::random_seed();
    unique_prefix.append(&mut used_gas().to_be_bytes().to_vec());
    unique_prefix
}

impl<T: BorshSerialize> VectorWrapper<T> {
    pub fn new<S: IntoStorageKey>(prefix: S) -> Self {
        VectorWrapper(Vector::new(prefix))
    }

    pub fn from_vec<S: IntoStorageKey>(v: Vec<T>, prefix: S) -> Self {
        let mut vector = Vector::new(prefix);
        v.iter().for_each(|i| vector.push(i));
        VectorWrapper(vector)
    }
}

pub struct VectorWrapperVisitor<T> {
    marker: PhantomData<fn() -> VectorWrapper<T>>,
}

impl<T> Serialize for VectorWrapper<T>
where
    T: Serialize + BorshDeserialize + BorshSerialize,
{
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: near_sdk::serde::Serializer,
    {
        let mut seq = serializer.serialize_seq(Some(self.0.len() as usize))?;
        for i in 0..self.0.len() {
            seq.serialize_element(&self.0.get(i).unwrap())?;
        }
        seq.end()
    }
}

impl<T> VectorWrapperVisitor<T> {
    fn new() -> Self {
        VectorWrapperVisitor {
            marker: PhantomData,
        }
    }
}

impl<'de, T> Visitor<'de> for VectorWrapperVisitor<T>
where
    T: Deserialize<'de> + BorshDeserialize + BorshSerialize + Serialize,
{
    // The type that our Visitor is going to produce.
    type Value = VectorWrapper<T>;

    // Format a message stating what data this Visitor expects to receive.
    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {
        formatter.write_str("an array")
    }

    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>
    where
        A: near_sdk::serde::de::SeqAccess<'de>,
    {
        let rand_prefix = get_random_bytes_prefix();
        let mut ret_seq: VectorWrapper<T> = VectorWrapper(Vector::new(rand_prefix.as_slice()));
        while let Some(v) = seq.next_element()? {
            ret_seq.0.push(&v);
        }
        Ok(ret_seq)
    }
}

impl<'de, T: Deserialize<'de> + BorshDeserialize + BorshSerialize + Serialize> Deserialize<'de>
    for VectorWrapper<T>
where
    T: BorshSerialize,
{
    fn deserialize<D>(deserializer: D) -> Result<VectorWrapper<T>, D::Error>
    where
        D: Deserializer<'de>,
    {
        deserializer.deserialize_seq(VectorWrapperVisitor::new())
    }
}

impl<T: PartialEq + BorshDeserialize> PartialEq for VectorWrapper<T> {
    fn eq(&self, other: &Self) -> bool {
        let vec1 = &self.0;
        let vec2 = &other.0;
        if vec1.len() != vec2.len() {
            return false;
        }
        for i in 0..vec1.len() {
            let elem_eq = vec1.get(i).unwrap().eq(&vec2.get(i).unwrap());
            if !elem_eq {
                return false;
            }
        }
        true
    }

    fn ne(&self, other: &Self) -> bool {
        let vec1 = &self.0;
        let vec2 = &other.0;
        if vec1.len() != vec2.len() {
            return false;
        }
        for i in 0..vec1.len() {
            let elem_ne = vec1.get(i).unwrap().ne(&vec2.get(i).unwrap());
            if elem_ne {
                return true;
            }
        }
        false
    }
}

impl<T: BorshDeserialize + Debug> Debug for VectorWrapper<T> {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        f.debug_list().entries(self.0.to_vec().iter()).finish()
    }
}

impl<T: Clone + BorshDeserialize + BorshSerialize> Clone for VectorWrapper<T> {
    fn clone(&self) -> Self {
        let v = &self.0;
        let mut ret: Vector<T> = Vector::new(get_random_bytes_prefix().as_slice());

        for i in 0..v.len() {
            ret.push(&v.get(i).unwrap());
        }
        VectorWrapper(ret)
    }

    fn clone_from(&mut self, source: &Self) {
        *self = source.clone()
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;
    use crate::test_utils::tests::get_context;
    use near_sdk::MockedBlockchain;
    use near_sdk::{
        collections::Vector,
        json_types::ValidAccountId,
        serde_json,
        test_utils::{accounts, VMContextBuilder},
        testing_env,
    };

    use super::VectorWrapper;
    // TODO: should panic type
    #[test]
    fn test_serialize() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut v = VectorWrapper::<u64>(Vector::new("asas".as_bytes()));
        v.0.push(&10);
        v.0.push(&11);
        let str = serde_json::to_string(&v).unwrap();
        println!("{}", str);
        assert_eq!(str, "[10,11]");
    }

    #[test]
    fn test_deserialize() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let v: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        assert_eq!(v.0.len(), 2);
        assert_eq!(v.0.get(0).unwrap(), 10);
        assert_eq!(v.0.get(1).unwrap(), 11);
    }

    #[test]
    fn test_eq() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let v1: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        let v2: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        assert!(v1.eq(&v2));

        let v3: VectorWrapper<u64> = serde_json::from_str("[11, 11]").unwrap();
        assert!(!v1.eq(&v3))
    }

    #[test]
    fn test_ne() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let v1: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        let v2: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        assert!(!v1.ne(&v2));

        let v3: VectorWrapper<u64> = serde_json::from_str("[11, 11]").unwrap();
        assert!(v1.ne(&v3))
    }

    #[test]
    fn test_clone() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let v1: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        let v1_again: VectorWrapper<u64> = serde_json::from_str("[10, 11]").unwrap();
        let v2 = v1.clone();
        let mut v3: VectorWrapper<u64> = serde_json::from_str("[12, 11]").unwrap();

        assert_eq!(&v1, &v2);

        assert_ne!(&v1, &v3);
        v3.clone_from(&v1_again);
        assert_eq!(v1, v3);
    }
}

'''
'''--- rust/packages/malloc-call-core/Cargo.toml ---
[package]
name = "malloc-call-core"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
near-sdk = "3.1.0"
malloc-call-core-internal = { path = "./malloc-call-core-internal" }
malloc-call-core-mac = { path = "./malloc-call-core-mac" }
'''
'''--- rust/packages/malloc-call-core/malloc-call-core-internal/Cargo.toml ---
[package]
name = "malloc-call-core-internal"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
near-sdk = "3.1.0"

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-internal/src/ft.rs ---
use std::fmt::format;
use std::thread::panicking;

use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};

use near_sdk::collections::UnorderedMap;
use near_sdk::env::attached_deposit;
use near_sdk::json_types::ValidAccountId;
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::{json, Value};
use near_sdk::{collections::LookupMap, json_types::U128, AccountId, Balance};
use near_sdk::{env, log, serde_json, Gas, Promise, PromiseResult};

// TODO: make lower??
const GAS_BUFFER: Gas = 5_000_000_000_000;
const GAS_FOR_INTERNAL_RESOLVE: Gas = 5_000_000_000_000;
const GAS_FOR_ON_TRANSFER_NEP141: Gas = 5_000_000_000_000;
const GAS_FOR_FT_RESOLVE_TRANSFER_NEP141: Gas = 5_000_000_000_000;
const GAS_FOR_FT_TRANSFER_CALL_NEP141: Gas = GAS_FOR_FT_RESOLVE_TRANSFER_NEP141
    + GAS_FOR_ON_TRANSFER_NEP141
    + 25_000_000_000_000
    + GAS_BUFFER;

pub const MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL: Gas =
    GAS_FOR_FT_TRANSFER_CALL_NEP141 + GAS_FOR_INTERNAL_RESOLVE + GAS_BUFFER;
pub const MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER: Gas =
    GAS_FOR_FT_RESOLVE_TRANSFER_NEP141 + GAS_BUFFER;

pub const MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_WITH_FT_TRANSFER_CALL: Gas =
    MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL + GAS_BUFFER;
pub const MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_WITH_FT_TRANSFER: Gas =
    MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER + GAS_BUFFER;

pub const MALLOC_CALL_CORE_GAS_FOR_WITHDRAW_TO: Gas = MALLOC_CALL_CORE_GAS_FOR_FT_TRANSFER_CALL + GAS_BUFFER;

const RESOLVE_FT_NAME: &str = "resolve_internal_ft_transfer_call";
const FT_TRANSFER_CALL_METHOD_NAME: &str = "ft_transfer_call";
const FT_TRANSFER_METHOD_NAME: &str = "ft_transfer";

#[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub enum TransferType {
    Transfer(),
    TransferCallMalloc(),
}

#[derive(BorshDeserialize, BorshSerialize)]
pub struct FungibleTokenBalances {
    /// AccountID -> Account balance.
    // TODO: does it make more sense to go the other way
    pub account_to_contract_balances: LookupMap<String, Balance>,
}

pub trait FungibleTokenHandlers {
    fn ft_on_transfer(&mut self, sender_id: String, amount: String, msg: String) -> String;
    fn get_ft_balance(&self, account_id: ValidAccountId, token_id: ValidAccountId) -> U128;
    /// A private contract function which resolves the ft transfer by updating the amount used in the balances
    /// @returns the amount used
    fn resolve_internal_ft_transfer_call(
        &mut self,
        account_id: ValidAccountId,
        token_id: ValidAccountId,
        amount: U128,
    ) -> U128;
    fn withdraw_to(
        &mut self,
        account_id: ValidAccountId,
        amount: U128,
        token_id: ValidAccountId,
        recipient: Option<ValidAccountId>,
        msg: Option<String>,
        transfer_type: TransferType,
    );
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct OnTransferOpts {
    // The account to log the transfer to
    pub sender_id: AccountId,
}

impl TransferType {
    fn to_value(&self) -> Result<Value, serde_json::error::Error> {
        serde_json::to_value(self)
    }
}

impl FungibleTokenBalances {
    pub fn new(prefix: &[u8]) -> Self {
        FungibleTokenBalances {
            account_to_contract_balances: LookupMap::new(prefix),
        }
    }

    pub fn get_withdraw_to_args(
        account_id: &AccountId,
        amount: U128,
        token_id: &AccountId,
        recipient: &AccountId,
        msg: Option<String>,
        transfer_type: TransferType,
    ) -> Result<String, serde_json::error::Error> {
        let ret = json!({
            "account_id": account_id,
            "amount": amount,
            "token_id": token_id,
            "recipient": recipient,
            "msg": msg,
            "transfer_type": transfer_type.to_value()?
        });
        Ok(ret.to_string())
    }

    /// Withdraw funds to another account.
    /// @param recipient - If it is none, then the malloc_contract_id is the recipient
    /// if it is a value, then there must be 1 yocto Near attached for UX security purposes
    pub fn withdraw_to(
        &mut self,
        account_id: AccountId,
        amount: u128,
        token_id: AccountId,
        recipient: Option<AccountId>,
        msg: Option<String>,
        transfer_type: TransferType,
        malloc_contract_id: &AccountId,
    ) {
        let caller = env::predecessor_account_id();
        if account_id != caller && malloc_contract_id != &caller {
            panic!("Only the malloc contract or the fund's owner can call withdraw");
        }

        // If the recipient is not none, make sure 1 yocto is attached
        if recipient != None {
            assert_eq!(
                env::attached_deposit(),
                1,
                "Expected an attached deposit of 1 as recipient is non-empty"
            );
        }

        let recipient = recipient.unwrap_or(caller);

        let prom = match transfer_type {
            TransferType::Transfer() => {
                self.internal_ft_transfer(&token_id, recipient, U128(amount), account_id, msg, None)
            }
            TransferType::TransferCallMalloc() => {
                self.internal_ft_transfer_call(&token_id, recipient, U128(amount), account_id, None)
            }
        };
        env::promise_return(prom);
    }

    // TODO:?
    // pub fn ft_transfer_call_with_result(&mut self,

    pub fn get_ft_balance(&self, account_id: &AccountId, token_id: &AccountId) -> Balance {
        let current_amount = self
            .account_to_contract_balances
            .get(&Self::get_balances_key(&account_id, &token_id))
            .unwrap_or(0);
        current_amount
    }

    pub fn ft_on_transfer(
        &mut self,
        ft_transfer_sender_id: String,
        amount: String,
        msg: String,
    ) -> String {
        let opts: OnTransferOpts = if (&msg).len() == 0 {
            OnTransferOpts {
                sender_id: ft_transfer_sender_id.clone().into(),
            }
        } else {
            serde_json::from_str(&msg)
                .unwrap_or_else(|e| panic!("Failed to deserialize transfer opts: {}", e))
        };
        let token_id = env::predecessor_account_id();
        let current_amount = self.get_ft_balance(&opts.sender_id, &token_id);
        let amount = amount.parse::<u128>().unwrap();
        self.account_to_contract_balances.insert(
            &Self::get_balances_key(&opts.sender_id, &token_id),
            &(amount + current_amount),
        );

        "0".to_string()
    }

    pub fn internal_ft_transfer(
        &mut self,
        token_id: &AccountId,
        recipient: AccountId,
        amount: U128,
        sender: AccountId,
        msg: Option<String>,
        prior_promise: Option<u64>,
    ) -> u64 {
        let data = Self::get_transfer_data(recipient, amount.clone(), sender.clone(), msg);

        self.subtract_balance(&sender, token_id, amount.0);

        let ft_transfer_prom = match prior_promise {
            None => {
                let prom = env::promise_batch_create(token_id);
                env::promise_batch_action_function_call(
                    prom,
                    FT_TRANSFER_METHOD_NAME.as_bytes(),
                    &data,
                    1,
                    GAS_FOR_FT_TRANSFER_CALL_NEP141,
                );
                prom
            }
            Some(prior_prom) => env::promise_then(
                prior_prom,
                token_id.to_string(),
                FT_TRANSFER_METHOD_NAME.as_bytes(),
                &data,
                1,
                GAS_FOR_FT_TRANSFER_CALL_NEP141,
            ),
        };
        let internal_resolve_args =
            Self::get_internal_resolve_data(&sender, token_id, amount, TransferType::Transfer())
                .unwrap();
        env::promise_then(
            ft_transfer_prom,
            env::current_account_id(),
            RESOLVE_FT_NAME.as_bytes(),
            internal_resolve_args.to_string().as_bytes(),
            0,
            GAS_FOR_INTERNAL_RESOLVE,
        )
    }

    pub fn internal_ft_transfer_call_custom(
        &mut self,
        token_id: &AccountId,
        recipient: AccountId,
        amount: U128,
        sender: AccountId,
        prior_promise: Option<u64>,
        custom_message: String,
        amount_near: Balance,
    ) -> u64 {
        self._internal_ft_transfer_call(
            token_id,
            recipient,
            amount,
            sender,
            prior_promise,
            Some(custom_message),
            amount_near,
        )
    }

    pub fn internal_ft_transfer_call(
        &mut self,
        token_id: &AccountId,
        recipient: AccountId,
        amount: U128,
        sender: AccountId,
        prior_promise: Option<u64>,
    ) -> u64 {
        self._internal_ft_transfer_call(token_id, recipient, amount, sender, prior_promise, None, 1)
    }

    /// Do an internal transfer and subtract the internal balance for {@param sender}
    ///
    /// If there is a custom message, use that for the ft transfer. If not, use the default On Transfer Message
    fn _internal_ft_transfer_call(
        &mut self,
        token_id: &AccountId,
        recipient: AccountId,
        amount: U128,
        sender: AccountId,
        prior_promise: Option<u64>,
        custom_message: Option<String>,
        amount_near: Balance,
    ) -> u64 {
        let data =
            Self::get_transfer_call_data(recipient, amount.clone(), sender.clone(), custom_message);

        let amount_parsed = amount.0;

        self.subtract_balance(&sender, token_id, amount_parsed);

        let ft_transfer_prom = match prior_promise {
            None => {
                let prom_batch = env::promise_batch_create(token_id);
                env::promise_batch_action_function_call(
                    prom_batch,
                    FT_TRANSFER_CALL_METHOD_NAME.as_bytes(),
                    &data,
                    amount_near,
                    GAS_FOR_FT_TRANSFER_CALL_NEP141,
                );
                prom_batch
            }
            Some(prior_prom) => env::promise_then(
                prior_prom,
                token_id.to_string(),
                FT_TRANSFER_CALL_METHOD_NAME.as_bytes(),
                &data,
                amount_near,
                GAS_FOR_FT_TRANSFER_CALL_NEP141,
            ),
        };
        let internal_resolve_args =
            json!({"account_id": &sender, "token_id": &token_id, "amount": amount});
        env::promise_then(
            ft_transfer_prom,
            env::current_account_id(),
            RESOLVE_FT_NAME.as_bytes(),
            internal_resolve_args.to_string().as_bytes(),
            0,
            GAS_FOR_INTERNAL_RESOLVE,
        )
    }

    /// Resolve the ft transfer by updating the amount used in the balances
    /// @returns the amount used
    pub fn resolve_internal_ft_transfer_call(
        &mut self,
        account_id: &AccountId,
        token_id: AccountId,
        amount: U128,
    ) -> U128 {
        let amount: u128 = amount.into();
        if amount == 0 {
            return U128(0);
        }

        let current_balance = self.get_ft_balance(account_id, &token_id);
        match near_sdk::utils::promise_result_as_success() {
            None => {
                log!("The FT transfer call failed, redepositing funds");
                self.account_to_contract_balances.insert(
                    &Self::get_balances_key(&account_id, &token_id),
                    &(current_balance + amount),
                );
                U128(0)
            }
            Some(data) => {
                // TODO: err handling?
                let amount_used_str: String = serde_json::from_slice(data.as_slice())
                    .unwrap_or_else(|e| {
                        panic!("Failed to deserialize ft_transfer_call result {}", e)
                    });
                let amount_used = amount_used_str
                    .parse::<u128>()
                    .unwrap_or_else(|e| panic!("Failed to parse result with {}", e));
                let amount_unused = amount - amount_used;
                log!("Amount unused {}", amount_unused);
                if amount_unused > 0 {
                    self.account_to_contract_balances.insert(
                        &Self::get_balances_key(&account_id, &token_id),
                        &(current_balance + amount_unused),
                    );
                }
                U128(amount_used)
            }
        }
    }

    /********** Helper functions **************/
    fn subtract_balance(&mut self, sender: &AccountId, token_id: &AccountId, amount: u128) {
        let current_balance = self.get_ft_balance(sender, token_id);

        if current_balance < amount {
            panic!("The callee did not deposit sufficient funds");
        }

        self.account_to_contract_balances.insert(
            &Self::get_balances_key(sender, token_id),
            &(current_balance - amount),
        );
    }

    fn get_balances_key(account_id: &AccountId, token_id: &AccountId) -> String {
        format!("{}-.-{}", account_id, token_id)
    }

    fn get_internal_resolve_data(
        sender: &AccountId,
        token_id: &AccountId,
        amount: U128,
        transfer_type: TransferType,
    ) -> Result<String, serde_json::error::Error> {
        let internal_resolve_args = json!({"account_id": sender, "token_id": token_id, "amount": amount, "transfer_type": transfer_type.to_value()?});
        Ok(internal_resolve_args.to_string())
    }

    fn get_transfer_data(
        recipient: AccountId,
        amount: U128,
        sender: AccountId,
        custom_message: Option<String>,
    ) -> Vec<u8> {
        if let Some(msg) = custom_message {
            json!({"receiver_id": recipient, "amount": amount, "msg": msg})
                .to_string()
                .into_bytes()
        } else {
            json!({"receiver_id": recipient, "amount": amount})
                .to_string()
                .into_bytes()
        }
    }

    fn get_transfer_call_data(
        recipient: String,
        amount: U128,
        sender: String,
        custom_message: Option<String>,
    ) -> Vec<u8> {
        if let Some(msg) = custom_message {
            json!({ "receiver_id": recipient, "amount": amount, "msg": msg})
                .to_string()
                .into_bytes()
        } else {
            let on_transfer_opts = OnTransferOpts { sender_id: sender };
            // TODO: unwrapping ok?
            json!({ "receiver_id": recipient, "amount": amount, "msg": serde_json::to_string(&on_transfer_opts).unwrap() })
                .to_string()
                .into_bytes()
        }
    }
}

// TODO:!
#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use super::*;

    // TODO: should panic type
    #[test]
    #[should_panic]
    fn test_ft_not_enough_balance() {}

    #[test]
    #[should_panic]
    fn test_ft_not_enough_balance_never_registered() {}

    #[test]
    fn test_ft_adding_balances_and_then_subtracting() {}

    #[test]
    fn test_ft_adding_balances() {}
}

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-internal/src/gas.rs ---
use near_sdk::Gas;

pub const MALLOC_CALL_DEFAULT_GAS: Gas = 150_000_000_000_000;
pub const MAX_MALLOC_CALL_GAS: Gas = 240_000_000_000_000;

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-internal/src/lib.rs ---
use near_sdk::json_types::ValidAccountId;
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{Balance, Gas};
use near_sdk::{json_types::U128, AccountId, Promise};
pub mod ft;
pub mod utils;
pub mod gas;

pub fn call_method_name() -> Vec<u8> {
    "malloc_call".to_string().into_bytes()
}

pub fn resolver_method_name() -> Vec<u8> {
    "resolver".to_string().into_bytes()
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct MallocCallMetadata {
    pub name: String,
    pub gas_required: Gas,
    pub attachment_required: U128,
}

/// The call should return a Vec of ReturnItems
#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct ReturnItem {
    pub token_id: ValidAccountId,
    pub amount: String,
}

// TODO: implement for calls
pub trait Revert {
    //    fn revert()
}

pub trait MallocCallNoCallback<CallArgs> {
    /// The wrapper function which takes in some amount of tokens which are
    /// defined by token_contract
    fn malloc_call(
        &mut self,
        args: CallArgs,
        amount: String,
        token_id: ValidAccountId,
        caller: ValidAccountId,
    ) -> Vec<ReturnItem>;

    fn metadata(&self) -> MallocCallMetadata;
}

pub trait MallocCallWithCallback<CallArgs, ResolverArgs> {
    /// The wrapper function which takes in some amount of tokens which are
    /// defined by token_contract
    fn malloc_call(
        &mut self,
        args: CallArgs,
        amount: U128,
        token_id: ValidAccountId,
        caller: ValidAccountId,
    );

    fn metadata(&self) -> MallocCallMetadata;

    fn resolver(&self, args: ResolverArgs) -> Vec<ReturnItem>;
}

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-internal/src/utils.rs ---
use crate::ft::FungibleTokenBalances;

pub fn new_balances() -> FungibleTokenBalances {
    FungibleTokenBalances::new("balances".as_bytes())
}

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-mac/Cargo.toml ---
[package]
name = "malloc-call-core-mac"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
near-sdk = "3.1.0"
quote = "1.0.9"
proc-macro2 = "1.0"
syn = "1.0.57"

[lib]
proc-macro = true

'''
'''--- rust/packages/malloc-call-core/malloc-call-core-mac/src/lib.rs ---
use proc_macro::TokenStream;
use quote::{quote, ToTokens};
use syn::parse::{Nothing, Parser};
use syn::token::{Struct, Token};
use syn::{
    parse_macro_input, parse_quote, DataEnum, DataUnion, DeriveInput, Field, FieldsNamed,
    FieldsUnnamed, ItemStruct,
};

#[proc_macro_derive(MallocCallFT)]
pub fn malloc_call_ft(input: TokenStream) -> TokenStream {
    let mut input_struct = parse_macro_input!(input as ItemStruct);
    let mut fields = input_struct.fields;

    // // Add the whitelisted malloc contract
    // let malloc_contract_id = Field::parse_named
    //     .parse2(quote! {
    //         pub malloc_contract_id: near_sdk::AccountId
    //     })
    //     .unwrap();
    // match &mut fields {
    //     syn::Fields::Named(fields) => fields.named.push(malloc_contract_id),
    //     _ => panic!("Expected named fields"),
    // }

    // // Add the balances field
    // let bal_field = Field::parse_named
    //     .parse2(quote! {
    //         pub balances: malloc_call_core::ft::FungibleTokenBalances
    //     })
    //     .unwrap();
    // match &mut fields {
    //     syn::Fields::Named(fields) => fields.named.push(bal_field),
    //     _ => panic!("Expected named fields"),
    // }

    // input_struct.fields = fields;
    let (impl_generics, ty_generics, where_clause) = input_struct.generics.split_for_impl();
    let struct_name = &input_struct.ident;

    let stream = quote! {

    //    #vis struct #struct_name #ty_generics #where_clause {
    //        #(#fields),*
    //        balances: malloc_call_core::ft::FungibleTokenBalances,
    //     }

        #[near_sdk::near_bindgen]
        impl #impl_generics malloc_call_core::ft::FungibleTokenHandlers for #struct_name #ty_generics #where_clause {
            fn ft_on_transfer(&mut self, sender_id: String, amount: String, msg: String) -> String {
                self.balances.ft_on_transfer(sender_id, amount, msg)
            }

            fn get_ft_balance(&self, account_id: near_sdk::json_types::ValidAccountId, token_id: near_sdk::json_types::ValidAccountId) -> near_sdk::json_types::U128 {
                self.balances.get_ft_balance(&account_id.into(), &token_id.into()).into()
            }

            fn resolve_internal_ft_transfer_call(&mut self, account_id: near_sdk::json_types::ValidAccountId, token_id: near_sdk::json_types::ValidAccountId, amount: near_sdk::json_types::U128) -> near_sdk::json_types::U128 {
                // This check is the same thing as decorating with #[private], but the macro within a macro causes
                if near_sdk::env::predecessor_account_id() != near_sdk::env::current_account_id() {
                    panic!("Resolve internal ft transfer is a private call");
                }
                self.balances
                    .resolve_internal_ft_transfer_call(&account_id.into(), token_id.into(), amount)
            }

            #[payable]
            fn withdraw_to(
                &mut self,
                account_id: near_sdk::json_types::ValidAccountId,
                amount: near_sdk::json_types::U128,
                token_id: near_sdk::json_types::ValidAccountId,
                recipient: Option<near_sdk::json_types::ValidAccountId>,
                msg: Option<String>,
                transfer_type: malloc_call_core::ft::TransferType) 
            {
                self.balances.withdraw_to(
                    account_id.into(),
                    amount.0,
                    token_id.into(),
                    recipient.map(|v| v.into()),
                    msg,
                    transfer_type,
                    &self.malloc_contract_id
                );
            }
        }
    };
    TokenStream::from(stream)
}

'''
'''--- rust/packages/malloc-call-core/src/lib.rs ---
pub use malloc_call_core_internal::*;
pub use malloc_call_core_mac::*; // Re-export macro // Re-export functionality

'''
'''--- rust/packages/malloc-calls/blackwhole-call/Cargo.toml ---
[package]
name = "blackwhole-call"
version = "0.1.0"
authors = ["Lev Stambler <lev.stambler@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../../malloc-call-core" }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/malloc-calls/blackwhole-call/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/malloc-calls/blackwhole-call/neardev/dev-account.env ---
CONTRACT_NAME=dev-1629304780956-89310803304206
'''
'''--- rust/packages/malloc-calls/blackwhole-call/src/lib.rs ---
use std::{u64, usize};

use malloc_call_core::MallocCallFT;
use malloc_call_core::{self, ft::FungibleTokenHandlers, gas::MALLOC_CALL_DEFAULT_GAS};
// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use malloc_call_core::{
    utils::new_balances, MallocCallMetadata, MallocCallNoCallback, ReturnItem,
};
use near_sdk;
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LookupMap, UnorderedMap, Vector};
use near_sdk::env::predecessor_account_id;
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::{
    env, ext_contract, log, near_bindgen, serde, setup_alloc, AccountId, Gas, PanicOnDefault,
    Promise,
};

setup_alloc!();

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct NewArgs {}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct BlackWholeArgs {
    log_message: String,
}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault, MallocCallFT)]
pub struct Contract {
    balances: malloc_call_core::ft::FungibleTokenBalances,
    malloc_contract_id: AccountId,
}

#[near_bindgen]
impl MallocCallNoCallback<BlackWholeArgs> for Contract {
    fn metadata(&self) -> MallocCallMetadata {
        MallocCallMetadata {
            gas_required: MALLOC_CALL_DEFAULT_GAS,
            attachment_required: U128(1),
            name: "Send Fungible Tokens".to_string(),
        }
    }

    #[payable]
    fn malloc_call(
        &mut self,
        args: BlackWholeArgs,
        amount: String,
        token_id: ValidAccountId,
        caller: ValidAccountId,
    ) -> Vec<ReturnItem> {
        log!("Log from the blackwhole: {}", args.log_message);
        let caller: AccountId = caller.into();
        let token_id: AccountId = token_id.into();
        let bal = self.balances.get_ft_balance(&caller, &token_id);
        log!(
            "Caller {} balance of {} for contract {} with amount in of {}",
            caller,
            bal,
            token_id,
            amount
        );
        vec![]
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new(malloc_contract_id: ValidAccountId) -> Self {
        Contract {
            balances: new_balances(),
            malloc_contract_id: malloc_contract_id.into(),
        }
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use core::time;
    use std::thread;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_blackwhole() {
        todo!();
    }
}

'''
'''--- rust/packages/malloc-calls/error-malloc-call/Cargo.toml ---
[package]
name = "error-malloc-call"
version = "0.1.0"
authors = ["Lev Stambler <lev.stambler@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../../malloc-call-core" }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/malloc-calls/error-malloc-call/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/malloc-calls/error-malloc-call/neardev/dev-account.env ---
CONTRACT_NAME=dev-1629219116799-14969208745966
'''
'''--- rust/packages/malloc-calls/error-malloc-call/src/lib.rs ---
use std::{u64, usize};

// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use malloc_call_core::{gas::MALLOC_CALL_DEFAULT_GAS, MallocCallWithCallback, ReturnItem};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LookupMap, UnorderedMap, Vector};
use near_sdk::env::predecessor_account_id;
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{
    env, ext_contract, log, near_bindgen, serde, setup_alloc, AccountId, Gas, PanicOnDefault,
    Promise,
};

setup_alloc!();

const BASIC_GAS: Gas = 5_000_000_000_000;
const BASIC_RESOLVER_GAS: Gas = 1_000_000_000_000;

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct ErrorArgs {
    log_message: String,
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct ResolverArgs {
    token_id: ValidAccountId,
    amount: String,
}

// TODO: makes me wonder if there should be some macro magic to get these malloc calls
#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault)]
pub struct Contract {}

#[near_bindgen]
impl MallocCallWithCallback<ErrorArgs, ResolverArgs> for Contract {
    fn metadata(&self) -> malloc_call_core::MallocCallMetadata {
        malloc_call_core::MallocCallMetadata {
            gas_required: MALLOC_CALL_DEFAULT_GAS,
            attachment_required: U128(1),
            name: "Send Fungible Tokens".to_string(),
        }
    }

    fn resolver(&self, args: ResolverArgs) -> Vec<ReturnItem> {
        panic!("Yooo joke is on you");
    }

    #[payable]
    fn malloc_call(
        &mut self,
        args: ErrorArgs,
        amount: U128,
        token_id: ValidAccountId,
        caller: ValidAccountId,
    ) {
        log!("Log from the error: {}", args.log_message);
        let ret_args = json!({
            "args": {
                "token_id": token_id.to_string(),
                "amount": "0"
            }
        });
        let ret_prom = Promise::new(env::current_account_id()).function_call(
            malloc_call_core::resolver_method_name(),
            ret_args.to_string().into_bytes(),
            0,
            BASIC_RESOLVER_GAS,
        );
        ret_prom.as_return();
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new() -> Self {
        Contract {}
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use core::time;
    use std::thread;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_blackwhole() {
        todo!();
    }
}

'''
'''--- rust/packages/malloc-calls/passthrough-call/Cargo.toml ---
[package]
name = "ref-fi-wcall"
version = "0.1.0"
authors = ["Lev Stambler <lev.stambler@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../../malloc-call-core" }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/malloc-calls/passthrough-call/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/malloc-calls/passthrough-call/neardev/dev-account.env ---
CONTRACT_NAME=dev-1629219216020-17543548469310
'''
'''--- rust/packages/malloc-calls/passthrough-call/src/lib.rs ---
use std::{u64, usize};

// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use malloc_call_core::MallocCallFT;
use malloc_call_core::gas::MALLOC_CALL_DEFAULT_GAS;
use malloc_call_core::{self, ft::FungibleTokenHandlers, MallocCallWithCallback, ReturnItem};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LookupMap, UnorderedMap, Vector};
use near_sdk::env::predecessor_account_id;
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{
    env, ext_contract, log, near_bindgen, serde, setup_alloc, AccountId, Balance, Gas,
    PanicOnDefault, Promise, PromiseId,
};

setup_alloc!();

const BASIC_GAS: Gas = 5_000_000_000_000;
const BASIC_RESOLVER_GAS: Gas = 1_000_000_000_000;

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct PassThroughArgs {
    log_message: String,
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct ResolverArgs {
    token_id: ValidAccountId,
    amount: String,
}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault, MallocCallFT)]
pub struct Contract {
    balances: malloc_call_core::ft::FungibleTokenBalances,
}

#[near_bindgen]
impl MallocCallWithCallback<PassThroughArgs, ResolverArgs> for Contract {
    fn metadata(&self) -> malloc_call_core::MallocCallMetadata {
        malloc_call_core::MallocCallMetadata {
            gas_required: MALLOC_CALL_DEFAULT_GAS,
            attachment_required: U128(1),
            name: "Send Fungible Tokens".to_string(),
        }
    }

    fn resolver(&self, args: ResolverArgs) -> Vec<ReturnItem> {
        vec![ReturnItem {
            token_id: args.token_id,
            amount: args.amount,
        }]
    }

    #[payable]
    fn malloc_call(
        &mut self,
        args: PassThroughArgs,
        amount: U128,
        token_id: ValidAccountId,
        caller: ValidAccountId,
    ) {
        log!("Log from the passthrough: {}", args.log_message);
        let token_id: AccountId = token_id.into();
        let ret_args = json!({
            "args": {
                "token_id": token_id,
                "amount": amount
            }
        });
        let caller: AccountId = caller.into();
        // Send the money back to malloc contract
        let transfer_prom = self
            .balances
            .internal_ft_transfer_call(&token_id, env::predecessor_account_id(), amount, caller, None);
        // TODO: needs to chec that the transfer was successful
        let ret_prom = env::promise_then(
            transfer_prom,
            env::current_account_id(),
            &malloc_call_core::resolver_method_name(),
            ret_args.to_string().as_bytes(),
            0,
            BASIC_RESOLVER_GAS,
        );
        env::promise_return(ret_prom);
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new() -> Self {
        Contract {
            balances: malloc_call_core::utils::new_balances(),
        }
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use core::time;
    use std::thread;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_blackwhole() {
        todo!();
    }
}

'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/Cargo.toml ---
[package]
name = "ref-fi-wcall"
version = "0.1.0"
authors = ["Lev Stambler <lev.stambler@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../../malloc-call-core" }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/compile.js ---
// This file does two things:
//
// 1. Compile the Rust contract using cargo (see buildCmd below). This will
//    create a wasm file in the 'build' folder.
// 2. Create a symbolic link (symlink) to the generated wasm file in the root
//    project's `out` folder, for easy use with near-cli.
//
// First, import some helper libraries. `shelljs` is included in the
// devDependencies of the root project, which is why it's available here. It
// makes it easy to use *NIX-style scripting (which works on Linux distros,
// macOS, and Unix systems) on Windows as well.
const sh = require('shelljs')

// Figure out which directory the user called this script from, which we'll use
// later to set up the symlink.
const calledFromDir = sh.pwd().toString()

// For the duration of this script, we want to operate from within the
// Rust project's folder. Let's change into that directory.
sh.cd(__dirname)

// You can call this script with `node compile.js` or `node compile.js
// --debug`. Let's set a variable to track whether `--debug` was used.
const debug = process.argv.pop() === '--debug'

// You can call this script with `node compile.js` or `node compile.js --debug`.
// Let's set a variable to track whether `--debug` was used.
// Note: see other flags in ./cargo/config. Unfortunately, you cannot set the
// `--target option` in Cargo.toml.
const buildCmd = debug
  ? 'cargo build --target wasm32-unknown-unknown'
  : 'cargo build --target wasm32-unknown-unknown --release'

// Execute the build command, storing exit code for later use
const { code } = sh.exec(buildCmd)

// Assuming this is compiled from the root project directory, link the compiled
// contract to the `out` folder â€“
// When running commands like `near deploy`, near-cli looks for a contract at
// <CURRENT_DIRECTORY>/out/main.wasm
if (code === 0 && calledFromDir !== __dirname) {
  const linkDir = `${calledFromDir}/out`
  const link = `${calledFromDir}/out/main.wasm`
  const packageName = require('fs').readFileSync(`${__dirname}/Cargo.toml`).toString().match(/name = "([^"]+)"/)[1]
  const outFile = `./target/wasm32-unknown-unknown/${debug ? 'debug' : 'release'}/${packageName}.wasm`
  sh.mkdir('-p', linkDir)
  sh.rm('-f', link)
  //fixes #831: copy-update instead of linking .- sometimes sh.ln does not work on Windows
  sh.cp('-u',outFile,link)
}

// exit script with the same code as the build command
process.exit(code)

'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/neardev/dev-account.env ---
CONTRACT_NAME=dev-1629664251608-31847817465912
'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/scripts/dep-and-init.js ---
const execSync = require("child_process").execSync;
const path = require("path");
const process = require("process");
const { readFileSync } = require("fs");

const refContract =
  process.argv.length > 2 ? process.argv[2] : "ref-finance.testnet";

execSync(`node ${path.join(__dirname, "../compile.js")}`);

const getDevAccount = () =>
  readFileSync(path.join(__dirname, "../neardev/dev-account"))
    .toString()
    .replace("\n", "");

const output = execSync(
  `near dev-deploy ${path.join(
    __dirname,
    "../target/wasm32-unknown-unknown/release/ref_fi_wcall.wasm"
  )}`,
  { encoding: "utf-8" }
); // the default is 'buffer'
console.log("Output for dev deploy:\n", output);

try {
  execSync(
    `near call ${getDevAccount()} new --accountId=levtester.testnet '{"ref_finance": "${refContract}"}'`,
    { encoding: "utf-8" }
  );
} catch (e) {
  if (e?.stderr?.indexOf("The contract has already been initialized") === -1)
    throw e;
}
console.log(getDevAccount())
// TODO: change this up, and use the near sdk rather than cli
// Then check how much is deposited and if its > 0.5, don't do anything
// const ret = execSync(
//   `near call ${refContract} storage_deposit --accountId=levtester.testnet --amount 0.5 '${JSON.stringify({
//     account_id: getDevAccount(),
//     registration_only: false,
//   })}'`,
//   { encoding: "utf-8" }
// );

// console.log(ret)
'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/src/lib.rs ---
use std::{u64, usize, vec};

// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use malloc_call_core::{MallocCallFT, MallocCallWithCallback, ReturnItem, ft::{FungibleTokenHandlers, FungibleTokenBalances}, gas::{MAX_MALLOC_CALL_GAS}};
use near_sdk::{Balance, borsh::{self, BorshDeserialize, BorshSerialize}, serde_json};
use near_sdk::collections::{LookupMap, UnorderedMap, Vector};
use near_sdk::env::predecessor_account_id;
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{
    env, ext_contract, log, near_bindgen, serde, setup_alloc, AccountId, Gas, PanicOnDefault,
    Promise,
};

use crate::ref_interfaces::{Action, SwapAction, TokenReceiverMessage};

setup_alloc!();

// See https://github.com/mikedotexe/nep-141-examples/blob/master/basic/src/fungible_token_core.rs
const GAS_FOR_RESOLVE_TRANSFER: Gas = 5_000_000_000_000;
const GAS_FOR_FT_TRANSFER_CALL: Gas = 25_000_000_000_000 + GAS_FOR_RESOLVE_TRANSFER;
const BASIC_GAS: Gas = 5_000_000_000_000;
const GAS_FOR_RESOLVE_GET_AMOUNT: Gas = WITHDRAW_GAS + 10 * BASIC_GAS + 1_000_000_000_000;
const SWAP_GAS: Gas = BASIC_GAS + BASIC_GAS;
const WITHDRAW_GAS: Gas = BASIC_GAS + BASIC_GAS + BASIC_GAS + GAS_FOR_FT_TRANSFER_CALL;

mod ref_interfaces;

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct RefSwapArgs {
    pool_ids: Vec<u64>,
    token_outs: Vec<AccountId>,
    min_amount_outs: Vec<U128>,
    register_tokens: Vec<ValidAccountId>,
    recipient: Option<AccountId>,
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct NewArgs {
    pub ref_finance: ValidAccountId
}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault, MallocCallFT)]
pub struct Contract {
    pub ref_finance: AccountId,
    balances: FungibleTokenBalances,
    malloc_contract_id: AccountId
}

#[ext_contract]
pub trait RefFiContract {
    fn mft_balance_of(&self, token_id: String, account_id: ValidAccountId) -> U128;
}

impl Contract {
    // TODO: get # of tokens and make unregister true
    fn get_withdraw(&mut self, token_out_id: String, amount_out: &str) -> u64 {
        // ref_fi_contract.mft_balance_of(swap_args.token_out, env::current_account_id());
        let withdraw_data = json!({
            "token_id": token_out_id,
            "amount": amount_out,
            "unregister": false,
            "msg": ""
        });
        env::promise_create(
            self.ref_finance.to_owned(),
            "withdraw".as_bytes(),
            withdraw_data.to_string().as_bytes(),
            1,
            WITHDRAW_GAS,
        )
    }

    fn get_register_tokens(&mut self, tokens: &[ValidAccountId]) -> u64 {
        let data = json!({ "token_ids": tokens });
        let prom = env::promise_batch_create(&self.ref_finance);
        env::promise_batch_action_function_call(
            prom,
            "register_tokens".to_string().as_bytes(),
            data.to_string().as_bytes(),
            1,
            BASIC_GAS,
        );
        prom
    }

    fn get_transfer(
        &mut self,
        promise_idx: u64,
        receiver_id: &AccountId,
        amount: &str,
        token_contract: &AccountId,
    ) -> u64 {
        let ft_transfer_data = json!({
            "receiver_id": receiver_id,
            "amount": amount,
            "msg": ""
        });
        env::promise_then(
            promise_idx,
            token_contract.to_owned(),
            "ft_transfer".to_string().as_bytes(),
            ft_transfer_data.to_string().as_bytes(),
            1,
            BASIC_GAS,
        )
    }

    fn get_transfer_call_to_ref(
        &mut self,
        register_token_prom: u64,
        receiver_id: &str,
        amount: U128,
        token_id: &AccountId,
        caller: &AccountId,
    ) -> u64 {
        self.balances.internal_ft_transfer_call_custom(token_id, receiver_id.to_owned(), amount, caller.to_owned(), Some(register_token_prom), "".to_string(), 1 )
    }

    fn get_swap(
        &mut self,
        promise_idx: u64,
        amount: &U128,
        token_contract: &AccountId,
        swap_args: &RefSwapArgs,
    ) -> u64 {
        let mut swap_actions: Vec<SwapAction> = vec![];
        let mut token_in= token_contract;
        for (i, &pool_id) in swap_args.pool_ids.iter().enumerate() {
            let token_out = &swap_args.token_outs[i];
            swap_actions.push(SwapAction {
                pool_id,
                token_in: token_in.to_owned(),
                token_out: token_out.clone(),
               min_amount_out: swap_args.min_amount_outs[i], 
               amount_in: if i == 0 {Some(amount.clone())} else {None }
            });
            token_in = token_out;
        };
        // let swap_actions: Vec<SwapAction> = swap_args.pool_ids.iter().enumerate().map(|(i, pool_id)| {
        //     SwapAction {
        //         pool_id: *pool_id,
        //         token_in: 

        //     }
        // }).collect();

        let data = json!({
            "actions": swap_actions
        });
        env::promise_then(
            promise_idx,
            (&self.ref_finance).to_owned(),
            "swap".to_string().as_bytes(),
            data.to_string().as_bytes(),
            1,
            SWAP_GAS,
        )
    }
}

#[near_bindgen]
impl Contract {
    #[private]
    pub fn _resolve_get_amount(
        &mut self,
        token_out_id: ValidAccountId,
        recipient: ValidAccountId,
        #[callback] amount: U128,
    ) {
        let amount: u128 = amount.into();
        let amount: String = amount.to_string();
        let token_out_id: AccountId = token_out_id.into();
        log!("A");
        let withdraw = self.get_withdraw(token_out_id.clone(), &amount);
        log!("A");
        let transfer =
            self.get_transfer(withdraw, &recipient.into(), &amount, &token_out_id);
        log!("A");
        let resolver_args = format!(
            "{{\"ret\": {{\"amount\": \"{}\", \"token_id\": \"{}\"}}}}",
            amount, &token_out_id
        );
        log!("A");
        let resolver = env::promise_then(
            transfer,
            env::current_account_id(),
            "resolver".as_bytes(),
            resolver_args.as_bytes(),
            0,
            BASIC_GAS,
        );
        log!("A");
        env::promise_return(resolver);
    }
}

#[near_bindgen]
impl MallocCallWithCallback<RefSwapArgs, ReturnItem> for Contract {
    fn resolver(&self, ret: ReturnItem) -> Vec<malloc_call_core::ReturnItem> {
        vec![ret]
    }

    #[payable]
    fn malloc_call(&mut self, args: RefSwapArgs, amount: U128, token_id: ValidAccountId, caller: ValidAccountId) {
        assert!(args.min_amount_outs.len() == args.pool_ids.len(), "Expected equal length min outs and pool ids");
        assert!(args.token_outs.len() == args.pool_ids.len(), "Expected equal length token outs and pool ids");
        assert!(args.pool_ids.len() > 0, "Expected at least 1 pool id");

        let final_token_out = args.token_outs.last().unwrap();

        let token_id: AccountId = token_id.into();
        // Send the funds back to the Malloc Contract if their is no recipient
        // TODO: change this so that if there is no recipient, just skip the sending of funds and let it sit in the malloc call pls
        let recipient = args
            .recipient
            .clone()
            .unwrap_or(env::predecessor_account_id());
        let register_tokens = self.get_register_tokens(&args.register_tokens);
        let transfer_call = self.get_transfer_call_to_ref(register_tokens, &self.ref_finance.clone(), amount, &token_id, &caller.into());
        let swap = self.get_swap(transfer_call, &amount, &token_id, &args);

        let callback = env::promise_batch_then(swap, env::current_account_id());
        let callback_args = json!({ 
        "token_out_id": final_token_out,
        "recipient": &recipient});
        env::promise_batch_action_function_call(
            callback,
            b"_resolve_get_amount",
            callback_args.to_string().as_bytes(),
            0,
            GAS_FOR_RESOLVE_GET_AMOUNT,
        );
        env::promise_return(callback);
    }

    fn metadata(&self) -> malloc_call_core::MallocCallMetadata {
        // Leave 50 Tgas for the malloc processing
        let gas = MAX_MALLOC_CALL_GAS;
        malloc_call_core::MallocCallMetadata {
            gas_required: gas,
            attachment_required: 15.into(),
            name: "Ref Dex Swap".to_string(),
        }
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new(malloc_contract_id: ValidAccountId, ref_finance: ValidAccountId) -> Self {
        Contract {  
            balances: malloc_call_core::utils::new_balances(),
            malloc_contract_id: malloc_contract_id.into(), 
            ref_finance: ref_finance.into()
        }
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use core::time;
    use std::thread;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_simple_swap() {}
}

/*
Helper for deploy:
mallocrustcli deploy malloc-calls/ref-swap-malloc-call -n '{"ref_finance": "ref-finance.testnet"}' -m

    malloc_contract_id: ValidAccountId, ref_finance: ValidAccountId
*/
'''
'''--- rust/packages/malloc-calls/ref-swap-malloc-call/src/ref_interfaces.rs ---
use near_sdk::{AccountId, json_types::{U128, ValidAccountId}, serde::{self, Deserialize, Serialize}};

// From https://github.com/ref-finance/ref-contracts/blob/main/ref-exchange/src/action.rs#L8
/// Single swap action.
#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct SwapAction {
    /// Pool which should be used for swapping.
    pub pool_id: u64,
    /// Token to swap from.
    pub token_in: AccountId,
    /// Amount to exchange.
    /// If amount_in is None, it will take amount_out from previous step.
    /// Will fail if amount_in is None on the first step.
    pub amount_in: Option<U128>,
    /// Token to swap into.
    pub token_out: AccountId,
    /// Required minimum amount of token_out.
    pub min_amount_out: U128,
}

/// Single action. Allows to execute sequence of various actions initiated by an account.
#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
#[serde(untagged)]
pub enum Action {
    Swap(SwapAction),
}

// From https://github.com/ref-finance/ref-contracts/blob/main/ref-exchange/src/token_receiver.rs
/// Message parameters to receive via token function call.
#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
#[serde(untagged)]
pub enum TokenReceiverMessage {
    /// Alternative to deposit + execute actions call.
    Execute {
        referral_id: Option<ValidAccountId>,
        /// If force != 0, doesn't require user to even have account. In case of failure to deposit to the user's outgoing balance, tokens will be returned to the exchange and can be "saved" via governance.
        /// If force == 0, the account for this user still have been registered. If deposit of outgoing tokens will fail, it will deposit it back into the account.
        force: u8,
        /// List of sequential actions.
        actions: Vec<Action>,
    },
}
'''
'''--- rust/packages/malloc-calls/send-malloc-call/Cargo.toml ---
[package]
name = "ref-fi-wcall"
version = "0.1.0"
authors = ["Lev Stambler <lev.stambler@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
near-contract-standards = "3.2.0"
near-sdk = "3.1.0"
malloc-call-core = { path = "../../malloc-call-core" }

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[workspace]
members = []

'''
'''--- rust/packages/malloc-calls/send-malloc-call/README.md ---
new-awesome-project Smart Contract
==================

A [smart contract] written in [Rust] for an app initialized with [create-near-app]

Quick Start
===========

Before you compile this code, you will need to install Rust with [correct target]

Exploring The Code
==================

1. The main smart contract code lives in `src/lib.rs`. You can compile it with
   the `./compile` script.
2. Tests: You can run smart contract tests with the `./test` script. This runs
   standard Rust tests using [cargo] with a `--nocapture` flag so that you
   can see any debug info you print to the console.

  [smart contract]: https://docs.near.org/docs/develop/contracts/overview
  [Rust]: https://www.rust-lang.org/
  [create-near-app]: https://github.com/near/create-near-app
  [correct target]: https://github.com/near/near-sdk-rs#pre-requisites
  [cargo]: https://doc.rust-lang.org/book/ch01-03-hello-cargo.html

'''
'''--- rust/packages/malloc-calls/send-malloc-call/neardev/dev-account.env ---
CONTRACT_NAME=dev-1628021588643-7173953
'''
'''--- rust/packages/malloc-calls/send-malloc-call/src/lib.rs ---
use std::{u64, usize};

// To conserve gas, efficient serialization is achieved through Borsh (http://borsh.io/)
use malloc_call_core::{MallocCallWithCallback, ReturnItem};
use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};
use near_sdk::collections::{LookupMap, UnorderedMap, Vector};
use near_sdk::env::predecessor_account_id;
use near_sdk::json_types::{ValidAccountId, U128};
use near_sdk::serde::{Deserialize, Serialize};
use near_sdk::serde_json::json;
use near_sdk::{
    env, ext_contract, log, near_bindgen, serde, setup_alloc, AccountId, Gas, PanicOnDefault,
    Promise,
};

setup_alloc!();

const BASIC_GAS: Gas = 5_000_000_000_000;
const BASIC_RESOLVER_GAS: Gas = 1_000_000_000_000;

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct SendArgs {
    recipient: AccountId,
}

#[derive(Serialize, Deserialize)]
#[serde(crate = "near_sdk::serde")]
pub struct ResolverArgs {}

#[near_bindgen]
#[derive(BorshDeserialize, BorshSerialize, PanicOnDefault)]
pub struct Contract {}

#[near_bindgen]
impl MallocCallWithCallback<SendArgs, ResolverArgs, Promise> for Contract {
    fn metadata(&self) -> malloc_call_core::MallocCallMetadata {
        malloc_call_core::MallocCallMetadata {
            minimum_gas: None,
            minimum_attached_deposit: Some(1.into()),
            name: "Send Fungible Tokens".to_string(),
        }
    }

    fn resolver(&self, args: ResolverArgs) -> Vec<ReturnItem> {
        vec![]
    }

    #[payable]
    fn call(&mut self, args: SendArgs, amount: String, token_contract: AccountId) -> Promise {
        let json_args = json!({"receiver_id": args.recipient, "amount": amount});
        Promise::new(token_contract)
            .function_call(
                "ft_transfer".to_string().into_bytes(),
                json_args.to_string().into_bytes(),
                1,
                BASIC_GAS,
            )
            .then(Promise::new(env::current_account_id()).function_call(
                malloc_call_core::resolver_method_name(),
                "{}".to_string().into_bytes(),
                0,
                BASIC_RESOLVER_GAS,
            ))
    }
}

#[near_bindgen]
impl Contract {
    #[init]
    pub fn new() -> Self {
        Contract {}
    }
}

#[cfg(all(test, not(target_arch = "wasm32")))]
mod tests {
    const INIT_ACCOUNT_BAL: u128 = 10_000;

    use core::time;
    use std::thread;

    use super::*;
    use near_sdk::json_types::ValidAccountId;
    use near_sdk::test_utils::{accounts, VMContextBuilder};
    use near_sdk::testing_env;
    use near_sdk::MockedBlockchain;

    // mock the context for testing, notice "signer_account_id" that was accessed above from env::
    fn get_context(predecessor_account_id: ValidAccountId) -> VMContextBuilder {
        let mut builder = VMContextBuilder::new();
        builder
            .current_account_id(accounts(0))
            .signer_account_id(predecessor_account_id.clone())
            .predecessor_account_id(predecessor_account_id)
            .account_balance(INIT_ACCOUNT_BAL);
        builder
    }

    #[test]
    fn test_simple_send() {
        let mut context = get_context(accounts(0));
        testing_env!(context.build());
        let mut contract = Contract::new();
        testing_env!(context
            .storage_usage(env::storage_usage())
            .attached_deposit(110) // give a little extra for transfers
            .predecessor_account_id(accounts(0))
            .build());
    }
}

'''
'''--- rust/scripts/deploy-all.sh ---

'''
'''--- rust/tests/__mocks__/basic-ft.json ---
{
  "splits": [100],
  "nodes": [
    {
      "FTTransfer": {
        "recipient": "lev.testnet"
      }
    }
  ],
  "ft_contract_id": "wrap.testnet"
}

'''
'''--- rust/tests/integration/shared.ts ---
import BN from "bn.js";
import { readFileSync } from "fs";
import {
  Account,
  connect,
  Contract,
  KeyPair,
  keyStores,
  Near,
  providers,
  utils,
} from "near-api-js";
import { KeyPairEd25519, PublicKey } from "near-api-js/lib/utils";
import { join } from "path";

const generatedAccounts: Account[] = [];
export const rpcAction = "https://rpc.testnet.near.org";
export const MAX_GAS = new BN("300000000000000");
export const WCALL_SIMPLE_GAS = new BN("15000000000000");
export const provider = new providers.JsonRpcProvider(rpcAction);

interface CreateConnectionOpts {
  privateKey?: string;
  keyPair?: KeyPair;
  accountId: string;
}

export const getContract = () =>
  readFileSync(
    join(__dirname, "../../packages/contract/neardev/dev-account")
  ).toString();
export const createNear = async (opts: CreateConnectionOpts): Promise<Near> => {
  const keyStore = new keyStores.InMemoryKeyStore();
  const _keyPair =
    opts.keyPair ?? opts.privateKey
      ? KeyPair.fromString(opts.privateKey as string)
      : null;
  if (!_keyPair) throw "Either a key pair or a private key has to be passed in";
  await keyStore.setKey("testnet", opts.accountId, _keyPair);

  const near = await connect({
    networkId: "testnet",
    actionUrl: rpcAction,
    masterAccount: opts.accountId,
    keyPath: `${__dirname}/tester-malloc2.levtester.testnet.json`,
    keyStore: keyStore,
  });
  return near;
};

export const getFtContract = async (
  caller: Account,
  contractId: string
): Promise<Contract> => {
  return new Contract(caller, contractId, {
    changeMethods: ["near_deposit", "storage_deposit", "ft_transfer_call"],
    viewMethods: ["ft_balance_of", "storage_balance_of"],
  });
};

export const setupFT = async (
  contractAddr: string,
  accountId: string,
  caller: Account
) => {
  const NEW_ACCOUNT_STORAGE_COST = utils.format.parseNearAmount("0.00125");
  const storageBal = await caller.viewFunction(
    contractAddr,
    "storage_balance_of",
    {
      account_id: accountId,
    }
  );
  if (!storageBal || storageBal.total === "0")
    await caller.functionCall({
      contractId: contractAddr,
      methodName: "storage_deposit",
      args: { account_id: accountId },
      attachedDeposit: new BN(NEW_ACCOUNT_STORAGE_COST as string),
      gas: MAX_GAS,
    });
};

export const setupWNearAccount = async (
  contractAddr: string,
  accountId: string,
  caller: Account,
  initDeposit = false,
  amountInitDeposit: number | string = 10000
) => {
  await setupFT(contractAddr, accountId, caller);
  if (initDeposit) {
    const wNearbal = await caller.viewFunction(contractAddr, "ft_balance_of", {
      account_id: accountId,
    });
    console.info("Current wNear balance of", wNearbal);
    if (wNearbal < amountInitDeposit)
      await caller.functionCall({
        contractId: contractAddr,
        methodName: "near_deposit",
        args: {},
        gas: MAX_GAS,
        attachedDeposit: new BN(amountInitDeposit).sub(new BN(wNearbal)),
      });
  }
};

export const newRandAccount = async (
  masterAccount: Account
): Promise<Account> => {
  const randName = Math.random();
  // remove the 0.
  const newAccountId = `${randName.toString().substr(2)}.${
    masterAccount.accountId
  }`;
  const kp = KeyPairEd25519.fromRandom();
  await masterAccount.createAccount(
    newAccountId,
    kp.getPublicKey(),
    new BN(utils.format.parseNearAmount("0.5") as string)
  );
  const near = await createNear({
    accountId: newAccountId,
    privateKey: kp.secretKey,
  });
  const account = await near.account(newAccountId);
  console.log("Created account", newAccountId);
  generatedAccounts.push(account);
  return account;
};

export const getResults = async (txHash: string, accountId: string) => {
  const res = await provider.txStatusReceipts(
    new Uint8Array(utils.serialize.base_decode(txHash)),
    accountId
  );
  return res.receipts_outcome.map((outcome) => outcome.outcome.status);
};

export const allResultsSuccess = (results: any[]) =>
  results.every(
    (result) =>
      result["SuccessValue"] === "" ||
      result["SuccessValue"] ||
      result["SuccessReceiptId"] === "" ||
      result["SuccessReceiptId"]
  );

export const cleanUp = async (beneficiaryId: string) => {
  console.log(
    "Deleteing the following accounts",
    generatedAccounts.map((account) => account.accountId)
  );
  await Promise.all(
    generatedAccounts.map((account) => account.deleteAccount(beneficiaryId))
  );
};

export const addBigNumberish = (
  a: string | BN | number,
  b: string | BN | number
): string => {
  return new BN(a).add(new BN(b)).toString();
};

'''
'''--- rust/tests/integration/splitter.spec.ts ---
import { Balances, runEphemeralTree } from "./test-framework";
import {
  addBigNumberish,
  cleanUp,
  createNear,
  getContract,
  MAX_GAS,
  newRandAccount,
  setupWNearAccount,
  WCALL_SIMPLE_GAS,
} from "./shared";
import * as NearAPI from "near-api-js";
import "regenerator-runtime/runtime";
import type {
  AccountId,
  MallocContract,
  SerializedSplitter,
} from "../../../ts-packages/malloc-frontend/src/types";
// TODO: change
import tester from "./tester-malloc2.levtester.testnet.json";

import "near-cli/test_environment";
import BN from "bn.js";
import { readFileSync } from "fs";
import { join } from "path";
let near: NearAPI.Near;
let contract: MallocContract;
let contractName: string;

const WCALL_SEND_CONTRACT_ID = readFileSync(
  join(__dirname, "../../packages/wcalls/send-wcall/neardev/dev-account")
).toString();

jest.setTimeout(60000);

beforeAll(async () => {
  near = await createNear({
    privateKey: tester.private_key,
    accountId: tester.account_id,
  });
  contractName = getContract();
  contract = new NearAPI.Contract(
    await near.account(tester.account_id),
    contractName,
    {
      changeMethods: ["run_ephemeral"],
      viewMethods: [],
    }
  ) as MallocContract;
});

it("should send near to Alice and Bob", async () => {
  const amount = 150;
  const masterAccount = await near.account(tester.account_id);
  const alice = await newRandAccount(masterAccount);
  const bob = await newRandAccount(masterAccount);
  const splitter = {
    splits: [100, 50],
    actions: [
      {
        SimpleTransfer: {
          recipient: alice.accountId,
        },
      },
      {
        SimpleTransfer: {
          recipient: bob.accountId,
        },
      },
    ],
  };
  const expected: Balances = {};
  expected[bob.accountId] = {
    account: bob,
    bal: {
      nativeBal: addBigNumberish((await bob.getAccountBalance()).total, 50),
      ftBals: {},
    },
  };
  expected[alice.accountId] = {
    account: alice,
    bal: {
      nativeBal: addBigNumberish((await alice.getAccountBalance()).total, 100),
      ftBals: {},
    },
  };
  await runEphemeralTree(
    masterAccount,
    contractName,
    splitter,
    amount,
    amount,
    expected,
    near,
    expect
  );
});

it.only("should send wrapped near to Alice and Bob via a Wcall", async () => {
  const amount = 152;
  const masterAccount = await near.account(tester.account_id);
  const alice = await newRandAccount(masterAccount);
  const bob = await newRandAccount(masterAccount);

  await setupWNearAccount(
    "wrap.testnet",
    tester.account_id,
    masterAccount,
    true,
    amount + 20
  );
  await setupWNearAccount("wrap.testnet", alice.accountId, alice);
  await setupWNearAccount("wrap.testnet", bob.accountId, bob);
  await setupWNearAccount("wrap.testnet", contractName, masterAccount);
  await setupWNearAccount("wrap.testnet", WCALL_SEND_CONTRACT_ID, masterAccount);

  await masterAccount.functionCall({
    contractId: "wrap.testnet",
    methodName: "ft_transfer",
    args: {
      receiver_id: contractName,
      amount: amount.toString(),
      msg: "",
      memo: "",
    },
    attachedDeposit: new BN(1),
    gas: MAX_GAS,
  });

  const splitter: SerializedSplitter = {
    splits: [3, 1],
    actions: [
      {
        WCall: {
          contract_id: WCALL_SEND_CONTRACT_ID,
          json_args: JSON.stringify({
            recipient: bob.accountId,
          }),
          gas: WCALL_SIMPLE_GAS.toNumber(),
          attached_amount: 10,
        },
      },
      {
        WCall: {
          contract_id: WCALL_SEND_CONTRACT_ID,
          json_args: JSON.stringify({
            recipient: bob.accountId,
          }),
          gas: WCALL_SIMPLE_GAS.toNumber(),
          attached_amount: 10,
        },
      },
    ],
    ft_contract_id: "wrap.testnet",
  };
  const expected: Balances = {};
  expected[bob.accountId] = {
    account: bob,
    bal: {
      ftBals: {
        "wrap.testnet": (0.75 * amount).toString(),
      },
    },
  };
  expected[alice.accountId] = {
    account: alice,
    bal: {
      ftBals: {
        "wrap.testnet": (0.25 * amount).toString(),
      },
    },
  };

  await runEphemeralTree(
    masterAccount,
    contractName,
    splitter,
    amount,
    30,
    expected,
    near,
    expect
  );
});

it("should send wrapped near to Alice and Bob", async () => {
  const amount = 152;
  const masterAccount = await near.account(tester.account_id);
  const alice = await newRandAccount(masterAccount);
  const bob = await newRandAccount(masterAccount);

  await setupWNearAccount(
    "wrap.testnet",
    tester.account_id,
    masterAccount,
    true,
    amount + 20
  );
  await setupWNearAccount("wrap.testnet", alice.accountId, alice);
  await setupWNearAccount("wrap.testnet", bob.accountId, bob);
  await setupWNearAccount("wrap.testnet", contractName, masterAccount);

  await masterAccount.functionCall({
    contractId: "wrap.testnet",
    methodName: "ft_transfer",
    args: {
      receiver_id: contractName,
      amount: amount.toString(),
      msg: "",
      memo: "",
    },
    attachedDeposit: new BN(1),
    gas: MAX_GAS,
  });

  const splitter = {
    splits: [3, 1],
    actions: [
      {
        FTTransfer: {
          recipient: bob.accountId,
        },
      },
      {
        FTTransfer: {
          recipient: alice.accountId,
        },
      },
    ],
    ft_contract_id: "wrap.testnet",
  };
  const expected: Balances = {};
  expected[bob.accountId] = {
    account: bob,
    bal: {
      ftBals: {
        "wrap.testnet": (0.75 * amount).toString(),
      },
    },
  };
  expected[alice.accountId] = {
    account: alice,
    bal: {
      ftBals: {
        "wrap.testnet": (0.25 * amount).toString(),
      },
    },
  };

  await runEphemeralTree(
    masterAccount,
    contractName,
    splitter,
    amount,
    3,
    expected,
    near,
    expect
  );
});

afterAll(async () => {
  await cleanUp(tester.account_id);
});

// TODO: test if transfer fails, no one gets the funds (atomicity)

'''
'''--- rust/tests/integration/test-framework.ts ---
import BN from "bn.js";
import { Account, Near } from "near-api-js";
import { SerializedSplitter } from "../../src/types";
import { allResultsSuccess, getResults, MAX_GAS } from "./shared";

interface AccountBalance {
  nativeBal?: string;
  ftBals: {
    [contractAccountId: string]: string;
  };
}

// Change to an array
export interface Balances {
  [recipientAccountId: string]: {
    bal: AccountBalance;
    account: Account;
  };
}

/**
 * Run an ephemeral tree
 * Then get all the resulting balances of the different accounts involved
 * Then transfer all the funds back to the caller
 * Then assert that all the resulting funds are correct
 */
// TODO: add err optn
export const runEphemeralTree = async (
  caller: Account,
  contractName: string,
  splitter: SerializedSplitter,
  amount: number,
  attachedDeposit: number,
  expectedResults: Balances,
  near: Near,
  expect: any
) => {
  const ret = await caller.functionCall({
    contractId: contractName,
    methodName: "run_ephemeral",
    args: {
      splitter,
      amount,
    },
    gas: MAX_GAS,
    attachedDeposit: new BN(attachedDeposit),
  });

  const results = await getResults(ret.transaction.hash, caller.accountId);
  // TODO: transfer from bob and alice
  const currentBals: Balances[] = await Promise.all(
    Object.keys(expectedResults).map(async (accountId) => {
      const expectedBal = expectedResults[accountId].bal;
      const account = expectedResults[accountId].account;

      const ftBals = await Promise.all(
        Object.keys(expectedBal.ftBals).map(async (contractId) => {
          const bal = await caller.viewFunction(contractId, "ft_balance_of", {
            account_id: accountId,
          });
          const ret: { [contractId: string]: string } = {};
          ret[contractId] = bal;
          if (new BN(bal).gt(new BN(0))) {
            await account.functionCall({
              contractId: contractId,
              methodName: "ft_transfer",
              args: {
                receiver_id: caller.accountId,
                amount: bal,
                msg: "",
                memo: "",
              },
              attachedDeposit: new BN(1),
              gas: MAX_GAS,
            });
          }
          return ret;
        })
      );
      const ftBalsFlat = ftBals.reduce((allBals, currBal) => {
        return { ...allBals, ...currBal };
      }, {});

      let currentNativeBal: string | undefined = undefined;

      // Do not worry about sending back the native balances, this should be handled on clean up of the tests
      if (expectedBal.nativeBal) {
        currentNativeBal = (
          await (await near.account(accountId)).getAccountBalance()
        ).total;
      }

      const ret: Balances = {};
      ret[accountId] = {
        bal: {
          nativeBal: currentNativeBal,
          ftBals: ftBalsFlat,
        },
        account,
      };
      return ret;
    })
  );
  const currentBalsFlat: Balances = currentBals.reduce((prev, curr) => {
    return { ...prev, ...curr };
  }, {});

  expect(allResultsSuccess(results)).toBeTruthy();
  for (const accountId in expectedResults) {
    expect(currentBalsFlat[accountId].bal.nativeBal).toEqual(
      expectedResults[accountId].bal.nativeBal
    );
    // Check that the ft token values are greater than or equal to the expected values
    // because swaps return a min amount of tokens, but it is not deterministic
    console.log(currentBalsFlat.map(i => i.bal), expectedResults.map(i => i.bal))
    for (const contract in expectedResults[accountId].bal.ftBals) {
      expect(
        new BN(currentBalsFlat[accountId].bal.ftBals[contract]).gte(
          new BN(expectedResults[accountId].bal.ftBals[contract])
        )
      ).toBeTruthy();
    }
  }
};

'''
'''--- rust/tests/integration/wcalls/ref-fi-swap.spec.ts ---
import {
  addBigNumberish,
  allResultsSuccess,
  cleanUp,
  createNear,
  getContract,
  getFtContract,
  getResults,
  MAX_GAS,
  newRandAccount,
  provider,
  setupFT,
  setupWNearAccount,
} from "../shared";
import * as NearAPI from "near-api-js";
import bs58 from "bs58";
import { InMemoryKeyStore, KeyStore } from "near-api-js/lib/key_stores";
import { KeyPair, KeyPairEd25519, PublicKey } from "near-api-js/lib/utils";
import "regenerator-runtime/runtime";
import tester from "../tester-malloc2.levtester.testnet.json";
import { Account, Contract, providers, utils } from "near-api-js";

import "near-cli/test_environment";
import BN from "bn.js";
import { readFileSync } from "fs";
import { join } from "path";
let near: NearAPI.Near;
let wNearContract: Contract & any;
let contractName: string;

jest.setTimeout(60000);

const REF_FINANCE_CONTRACT = "ref-finance.testnet";
const WNEAR_CONTRACT_ID = "wrap.testnet";
const NDAI_CONTRACT_ID = "ndai.ft-fin.testnet";

beforeAll(async () => {
  near = await createNear({
    privateKey: tester.private_key,
    accountId: tester.account_id,
  });
  // TODO: seperate folder/lib for getting/ storing the contract paths
  contractName = readFileSync(
    join(__dirname, "../../../packages/wcalls/ref-swap-wcall/neardev/dev-account")
  ).toString();
  console.log("Got dev contract of", contractName);
  wNearContract = await getFtContract(
    await near.account(tester.account_id),
    WNEAR_CONTRACT_ID
  );
});

// TODO: have a common utils file
// TODO: swap back
xit("should swap wNEAR to DAI and back", async () => {
  const masterAccount = await near.account(tester.account_id);
  const amountWNear = "10000000000000000000";
  const amountWNearPlus1 = "10000000000000000001";
  await setupWNearAccount(
    WNEAR_CONTRACT_ID,
    tester.account_id,
    masterAccount,
    true,
    amountWNearPlus1
  );
  await setupWNearAccount(WNEAR_CONTRACT_ID, contractName, masterAccount);
  // The NDAI contract panics
  try {
    await setupFT(NDAI_CONTRACT_ID, contractName, masterAccount);
  } catch (e) {
    if (!(e.toString() as string).includes("account is already registered"))
      throw e;
  }
  try {
    await setupFT(NDAI_CONTRACT_ID, masterAccount.accountId, masterAccount);
  } catch (e) {
    if (!(e.toString() as string).includes("account is already registered"))
      throw e;
  }
  const tx = await masterAccount.functionCall({
    contractId: WNEAR_CONTRACT_ID,
    methodName: "ft_transfer",
    args: {
      receiver_id: contractName,
      amount: amountWNearPlus1,
      msg: "",
      memo: "",
    },
    attachedDeposit: new BN(1),
    gas: MAX_GAS,
  });
  console.log("AAAA", tx.transaction.hash);
  // 	pub fn get_return(
  // 		&self,
  // 		pool_id: u64,
  // 		token_in: ValidAccountId,
  // 		amount_in: U128,
  // 		token_out: ValidAccountId,
  // ) -> U128 {
  // 		let pool = self.pools.get(pool_id).expect("ERR_NO_POOL");
  // 		pool.get_return(token_in.as_ref(), amount_in.into(), token_out.as_ref())
  // 				.into()
  // }
  const wNearToDAIPoolId = 20;
  const poolReturn = await masterAccount.viewFunction(
    REF_FINANCE_CONTRACT,
    "get_return",
    {
      pool_id: wNearToDAIPoolId,
      token_in: WNEAR_CONTRACT_ID,
      amount_in: amountWNear,
      token_out: NDAI_CONTRACT_ID,
    }
  );
  console.log("A pool return of", poolReturn);
  const minDaiRetrun = new BN(poolReturn).muln(90).divn(100);
  const wcallTx = await masterAccount.functionCall({
    methodName: "wcall",
    contractId: contractName,
    args: {
      args: {
        token_out: NDAI_CONTRACT_ID,
        pool_id: wNearToDAIPoolId,
        min_amount_out: minDaiRetrun.toString(),
        register_tokens: [NDAI_CONTRACT_ID, WNEAR_CONTRACT_ID],
        recipient: tester.account_id,
      },
      amount: amountWNear.toString(),
      token_contract: WNEAR_CONTRACT_ID,
    },
    attachedDeposit: new BN(3),
    gas: MAX_GAS,
  });
  const results = await getResults(wcallTx.transaction.hash, tester.account_id);
  expect(allResultsSuccess(results)).toBeTruthy();
  const balDai = await masterAccount.viewFunction(
    NDAI_CONTRACT_ID,
    "ft_balance_of",
    { account_id: masterAccount.accountId }
  );
  expect(new BN(balDai).gte(new BN(minDaiRetrun))).toBeTruthy();
});

afterAll(async () => {
  await cleanUp(tester.account_id);
});

/*
Arguments: {
  "actions": [
    {
      "pool_id": 20,
      "token_in":WNEAR_CONTRACT_ID,
      "token_out": ndaiContract,
      "amount_in": "1000000000000000000000000",
      "min_amount_out": "91479657"
    }
  ]
}
Swap from wNEAR to nDAI, then test with nDAI to nUSDC?
*/

'''
'''--- rust/tests/jest.init.js ---
import 'regenerator-runtime/runtime'

'''
'''--- rust/tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "strict": true /* Enable all strict type-checking options. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,

    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
  },
  "exclude": ["**/*.spec.ts"]
}

'''
'''--- src/assets/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- src/assets/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- src/global.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #FF585D;
  --secondary: #0072CE;

  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  margin: 0 auto;
  max-width: 25em;
}

h1 {
  background-image: url(assets/logo-black.svg);
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0.5em;
  text-align: center;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}

button {
  background-color: var(--secondary);
  border-radius: 5px;
  border: none;
  color: #efefef;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}
button:hover, button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
}
button:active {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.1) inset;
}
button.link {
  background: none;
  border: none;
  box-shadow: none;
  display: inline;
}
[disabled] button, button[disabled] {
  box-shadow: none;
  background-color: var(--light-gray);
  color: gray;
  cursor: not-allowed;
  transform: none;
}
[disabled] button {
  text-indent: -900em;
  width: 2em;
  position: relative;
}
[disabled] button:after {
  content: " ";
  display: block;
  width: 0.8em;
  height: 0.8em;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: var(--fg) transparent var(--fg) transparent;
  animation: loader 1.2s linear infinite;
  position: absolute;
  top: 0.45em;
  right: 0.5em;
}
@keyframes loader {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}

fieldset {
  border: none;
  padding: 2em 0;
}

input {
  background-color: var(--shadow);
  border: none;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 1em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

aside {
  animation: notify ease-in-out 10s;
  background-color: var(--shadow);
  border-radius: 5px;
  bottom: 0;
  font-size: 0.8em;
  margin: 1em;
  padding: 1em;
  position: fixed;
  transform: translateY(10em);
  right: 0;
}
aside footer {
  display: flex;
  font-size: 0.9em;
  justify-content: space-between;
  margin-top: 0.5em;
}
aside footer *:first-child {
  color: var(--success);
}
aside footer *:last-child {
  color: var(--gray);
}
@keyframes notify {
  0% { transform: translateY(10em) }
  5% { transform: translateY(0) }
  95% { transform: translateY(0) }
  100% { transform: translateY(10em) }
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    background-image: url(assets/logo-white.svg);
  }
  input:focus {
    box-shadow: 0 0 10em rgba(255, 255, 255, 0.02) inset;
  }
}

'''
'''--- src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="./assets/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="./assets/favicon.ico" />
    <title>Welcome to NEAR with React</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="./index.tsx"></script>
  </body>
</html>

'''
'''--- src/main.test.js ---
beforeAll(async function () {
  // NOTE: nearlib and nearConfig are made available by near-cli/test_environment
  // const near = await nearlib.connect(nearConfig)
  // window.accountId = nearConfig.contractName
  // window.contract = await near.loadContract(nearConfig.contractName, {
  //   viewMethods: ['get_greeting'],
  //   changeMethods: [],
  //   sender: window.accountId
  // })

  // window.walletConnection = {
  //   requestSignIn() {
  //   },
  //   signOut() {
  //   },
  //   isSignedIn() {
  //     return true
  //   },
  //   getAccountId() {
  //     return window.accountId
  //   }
  // }
})

// test('get_greeting', async () => {
//   const message = await window.contract.get_greeting({ account_id: window.accountId })
//   expect(message).toEqual('Hello')
// })

'''
'''--- src/types.d.ts ---
import BN from "bn.js";
import type { Contract, WalletConnection } from "near-api-js";

type BigNumberish = number | string;
type AccountId = string;

// Enum endpoint
interface Endpoint {
  SimpleTransfer?: { recipient: AccountId };
  FTTransfer?: { recipient: AccountId };
  WCall?: {
    contract_id: AccountId;
    json_args: String;
    gas: number
  };
}

interface SerializedSplitter {
  actions: Endpoint[];
  splits: BigNumberish[];
  ft_contract_id?: AccountId;
}

export interface MallocContract extends Contract {
  run_ephemeral: (
    args: { splitter: SerializedSplitter; amount?: BigNumberish },
    gas?: BigNumberish,
    attachedDeposit?: BigNumberish
  ) => Promise<any>;
}
declare global {
  interface Window {
    contract: MallocContract;
    walletConnection: WalletConnection;
    accountId: AccountId;
    nearInitPromise: Promise<void>;
  }
}

'''
'''--- src/wallet/login/index.html ---
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
</head>
<body style="background: #fff; margin-top: 3em">
  <div>For local account login, Please run the following command in NEAR CLI, then enter account id here.
  </div>
  <div>
      <code id="shell-command"></code>
  </div>
  <input type="text" id="accountId" name="accountId" placeholder="Account id"></input>
  <button type="button" onClick="done()">done</button>
  <script>
    const currentUrl = new URL(window.location.href);
    const message = `NODE_ENV=local near create_account {newAccountId} --masterAccount {masterAccountId} --publicKey ${currentUrl.searchParams.get('public_key')} --initialAmount 10000000000000000000`;
    document.getElementById('shell-command').innerText = message;

    function done() {
      const successUrl = new URL(currentUrl.searchParams.get('success_url'));
      successUrl.searchParams.set('account_id', document.getElementById('accountId').value);
      successUrl.searchParams.set('public_key', currentUrl.searchParams.get('public_key'));
      window.location.assign(successUrl.toString());
    }
  </script>
</body>
</html>
'''
'''--- test-files/jest.init.js ---
import 'regenerator-runtime/runtime'

'''
'''--- ts-packages/malloc-client/README.md ---
# `malloc-client`

> TODO: description

## Usage

```
const mallocClient = require('malloc-client');

// TODO: DEMONSTRATE API
```

'''
'''--- ts-packages/malloc-client/__tests__/malloc-call/ref-swap.spec.ts ---
import * as MallocClient from "../../lib/malloc-client";
import * as TestingUtils from "../../../testing-utils/lib/testing-utils";
import {
  SpecialAccountType,
  TransactionWithPromiseResultFlag,
} from "../../lib/interfaces";
import BN from "bn.js";
import { wrap } from "module";
import { MAX_GAS } from "../../lib/tx";
import { MALLOC_CALL_SIMPLE_GAS } from "../../../testing-utils/lib/testing-utils";
import { Account } from "near-api-js";
import { readFileSync } from "fs";
import { join } from "path";

let malloc: MallocClient.MallocClient<MallocClient.SpecialAccountWithKeyPair>;
const NDAI_CONTRACT = "ndai.ft-fin.testnet";
const BANANA_CONTRACT = "banana.ft-fin.testnet";
const TOKEN_ACCOUNT_IDS = [
  TestingUtils.WRAP_TESTNET_CONTRACT,
  NDAI_CONTRACT,
  BANANA_CONTRACT,
];
let masterAccount: Account;
let wrappedTesterAccount: MallocClient.SpecialAccountWithKeyPair;
const REF_FINANCE_CONTRACT = "ref-finance.testnet";
const EXTRA_DEPOSIT_FOR_FT_STORE = "3660000000000000000000";

export const getMallocCallRefSwapContract = () =>
  readFileSync(
    join(
      __dirname,
      "../../../../rust/packages/malloc-calls/ref-swap-malloc-call/neardev/dev-account"
    )
  ).toString();

describe("ref-swap call", () => {
  jest.setTimeout(60 * 1000);
  beforeAll(async () => {
    masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    // const testerAccount = await TestingUtils.newRandAccount(masterAccount);
    //@ts-ignore
    wrappedTesterAccount = masterAccount;
    malloc = new MallocClient.MallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract(),
      {
        executeTxsByDefault: true,
      }
    );
  });

  it.only("should make calls to a multi level splitter with pass throughs and black whole at then end", async () => {
    const MALLOC_CALL_SWAP_CONTRACT_ID = getMallocCallRefSwapContract();

    // TODO: have while loop with number of 0s at the end until the pool return > 10
    const amount = "100000000000000000000";

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount
    );

    await malloc.registerAccountDeposits(
      [REF_FINANCE_CONTRACT],
      [MALLOC_CALL_SWAP_CONTRACT_ID],
      { extraAmount: EXTRA_DEPOSIT_FOR_FT_STORE }
    );

    await malloc.registerAccountDeposits(TOKEN_ACCOUNT_IDS, [
      wrappedTesterAccount.accountId,
      malloc.mallocAccountId,
      MALLOC_CALL_SWAP_CONTRACT_ID,
    ]);

    const oldDaiBal = await TestingUtils.ftBalOf(
      NDAI_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const { hashes: depositTransactionHash } = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const wNearToDAIPoolId = 20;
    const wNearToBananaPoolId = 11;

    const bananaPoolReturn = await masterAccount.viewFunction(
      REF_FINANCE_CONTRACT,
      "get_return",
      {
        pool_id: wNearToBananaPoolId,
        token_in: TestingUtils.WRAP_TESTNET_CONTRACT,
        amount_in: new BN(amount).divn(2).toString(),
        token_out: BANANA_CONTRACT,
      }
    );
    const daiPoolReturn = await masterAccount.viewFunction(
      REF_FINANCE_CONTRACT,
      "get_return",
      {
        pool_id: wNearToDAIPoolId,
        token_in: TestingUtils.WRAP_TESTNET_CONTRACT,
        amount_in: new BN(amount).divn(2).toString(),
        token_out: NDAI_CONTRACT,
      }
    );
    console.log("A pool return of", daiPoolReturn);
    const minDaiRetrun = new BN(daiPoolReturn).muln(90).divn(100);
    const minBananaReturn = new BN(bananaPoolReturn).muln(90).divn(100);

    const txRess = await malloc.runEphemeralConstruction({
      actions: [
        {
          FtTransferCallToMallocCall: {
            malloc_call_id: MALLOC_CALL_SWAP_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_SWAP_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            check_callback: false,
            skip_ft_transfer: true,
            json_args: JSON.stringify({
              token_outs: [NDAI_CONTRACT],
              pool_ids: [wNearToDAIPoolId],
              min_amount_outs: [minDaiRetrun.toString()],
              // TODO: this will be removed
              register_tokens: [
                NDAI_CONTRACT,
                TestingUtils.WRAP_TESTNET_CONTRACT,
              ],
              recipient: masterAccount.accountId,
            }),
            // 2/3 rds of max gas and have the remaining third for processing the call
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_SWAP_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            check_callback: false,
            skip_ft_transfer: true,
            json_args: JSON.stringify({
              token_outs: [BANANA_CONTRACT],
              pool_ids: [wNearToBananaPoolId],
              min_amount_outs: [minBananaReturn.toString()],
              // TODO: this will be removed
              register_tokens: [
                NDAI_CONTRACT,
                TestingUtils.WRAP_TESTNET_CONTRACT,
              ],
              recipient: masterAccount.accountId,
            }),
          },
        },
      ],
      amount: amount.toString(),
      initialActionIndices: [0],
      initialSplits: [1],
      nextActionsIndices: [[[1, 2]], [[]], [[]]],
      nextActionsSplits: [[[1, 1]], [[]], [[]]],
      opts: { gas: MAX_GAS, depositTransactionHashes: depositTransactionHash },
    });
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newDaiBal = await TestingUtils.ftBalOf(
      NDAI_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(myBal, newmyBal, "-" + amount, expect);
    expect(
      new BN(newDaiBal).sub(new BN(oldDaiBal)).gte(new BN(minDaiRetrun))
    ).toBeTruthy();
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(masterAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/malloc-client-construction_new.spec.ts ---
import * as MallocClient from "../lib/malloc-client";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  SpecialAccountType,
  TransactionWithPromiseResultFlag,
} from "../lib/interfaces";
import BN from "bn.js";
import { wrap } from "module";
import { MAX_GAS } from "../lib/tx";
import { MALLOC_CALL_SIMPLE_GAS } from "../../testing-utils/lib/testing-utils";
import { Account } from "near-api-js";

let malloc: MallocClient.MallocClient<MallocClient.SpecialAccountWithKeyPair>;
const TOKEN_ACCOUNT_IDS = [
  TestingUtils.WRAP_TESTNET_CONTRACT,
  "ndai.ft-fin.testnet",
];
let masterAccount: Account;
let wrappedTesterAccount: MallocClient.SpecialAccountWithKeyPair;

describe("malloc-client's ft capabilities", () => {
  jest.setTimeout(120 * 1000);
  beforeAll(async () => {
    masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    const testerAccount = await TestingUtils.newRandAccount(masterAccount);
    wrappedTesterAccount = testerAccount;
    malloc = new MallocClient.MallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract(),
      {
        executeTxsByDefault: true,
      }
    );
  });

  it("should test multi layered calls with a passthrough", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();
    const MALLOC_CALL_PASSTHROUGH =
      TestingUtils.getMallocCallPassthroughContract();

    const amount = 100;

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
        MALLOC_CALL_PASSTHROUGH,
      ],
      {
        executeTransactions: true,
      }
    );

    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const { hashes: depositTransactionHash }= await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txRess = await malloc.runEphemeralConstruction({
      actions: [
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_PASSTHROUGH,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            // check_callback: false,

            json_args: JSON.stringify({
              log_message: "hello for jimbo the flimbo",
            }),
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_PASSTHROUGH,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            // check_callback: false,

            json_args: JSON.stringify({
              log_message: "hello for bob",
            }),
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_PASSTHROUGH,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            // check_callback: false,

            json_args: JSON.stringify({
              log_message: "hello for alice",
            }),
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            check_callback: false,
            json_args: JSON.stringify({
              log_message: "hello for bob",
            }),
          },
        },
      ],
      amount: amount.toString(),
      initialActionIndices: [0, 1, 2],
      initialSplits: [1, 2, 3],
      nextActionsIndices: [[[1]], [[2]], [[3]], []],
      nextActionsSplits: [[[1]], [[1]], [[1]], []],
      opts: { gas: MAX_GAS,  depositTransactionHashes: depositTransactionHash },
    });
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(myBal, newmyBal, -1 * amount, expect);
  });

  it("should make a couple black whole calls and make sure that the most basic splitter succeeds", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();

    const amount = 100;

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
      ],
      {
        executeTransactions: true,
      }
    );

    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const { hashes: depositTransactionHash }= await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txRess = await malloc.runEphemeralConstruction({
      actions: [
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            // check_callback: false,

            json_args: JSON.stringify({
              log_message: "hello for alice",
            }),
          },
        },
        {
          MallocCall: {
            malloc_call_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
            check_callback: false,
            json_args: JSON.stringify({
              log_message: "hello for bob",
            }),
          },
        },
      ],
      amount: amount.toString(),
      initialActionIndices: [0, 1],
      initialSplits: [1, 1],
      nextActionsIndices: [[], []],
      nextActionsSplits: [[], []],
      opts: { gas: MAX_GAS, depositTransactionHashes: depositTransactionHash },
    });
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(myBal, newmyBal, -1 * amount, expect);
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(masterAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/malloc-client-deposit.spec.ts ---
import * as MallocClient from "../lib/malloc-client";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  SpecialAccountType,
  SpecialAccountWithKeyPair,
} from "../lib/interfaces";

let malloc: MallocClient.MallocClient<SpecialAccountWithKeyPair>;
const TOKEN_ACCOUNT_IDS = [
  TestingUtils.WRAP_TESTNET_CONTRACT,
  "ndai.ft-fin.testnet",
];
let wrappedAccount: MallocClient.SpecialAccountWithKeyPair;

describe("malloc-client's ft capabilities", () => {
  jest.setTimeout(30 * 1000);
  beforeAll(async () => {
    const account = await TestingUtils.getDefaultTesterAccountNear();
    wrappedAccount = MallocClient.wrapAccountKeyPair(
      account,
      TestingUtils.getDefaultTesterKeypair()
    ) as MallocClient.SpecialAccountWithKeyPair;
    malloc = new MallocClient.MallocClient(
      wrappedAccount,
      TestingUtils.getMallocContract(),
      {
        executeTxsByDefault: true,
      }
    );
  });

  // TODO: test w/ the multiple account ids

  it("should register an accountId with the given fungible tokens with one tx call, then ensure that the tokens are not reregistered", async () => {
    const bob = await TestingUtils.newRandAccount(wrappedAccount);
    const alice = await TestingUtils.newRandAccount(wrappedAccount);
    const { txs, contractsToRegisterWith } =
      await malloc.registerAccountDeposits(TOKEN_ACCOUNT_IDS, [bob.accountId], {
        executeTransactions: true,
      });
    const tokensRegistered = contractsToRegisterWith;
    console.log(tokensRegistered);
    expect(tokensRegistered.sort()).toEqual(TOKEN_ACCOUNT_IDS.sort());
    for (let i = 0; i < tokensRegistered.length; i++) {
      expect(
        await TestingUtils.isFtRegistered(
          tokensRegistered[i],
          bob.accountId,
          wrappedAccount
        )
      ).toBeTruthy();
    }
    const newTokensRegistered = await malloc.registerAccountDeposits(
      TOKEN_ACCOUNT_IDS,
      [bob.accountId]
    );
    expect(newTokensRegistered).toEqual([]);
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(wrappedAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/malloc-client-fttransfer-withdraw.spec.ts ---
import * as MallocClient from "../lib/malloc-client";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  SpecialAccountType,
  TransactionWithPromiseResultFlag,
} from "../lib/interfaces";
import BN from "bn.js";
import { wrap } from "module";
import { MAX_GAS } from "../lib/tx";
import { MALLOC_CALL_SIMPLE_GAS } from "../../testing-utils/lib/testing-utils";
import { Account } from "near-api-js";
import { readFileSync } from "fs";
import { join } from "path";
import { MallocErrors } from "../lib/errors";

let malloc: MallocClient.MallocClient<MallocClient.SpecialAccountWithKeyPair>;
const TOKEN_ACCOUNT_IDS = [TestingUtils.WRAP_TESTNET_CONTRACT];
let masterAccount: Account;
let wrappedTesterAccount: MallocClient.SpecialAccountWithKeyPair;

let depositTxHash: string;

const amountWNearPerTest = 100000;
const NUMB_TESTS = 2;
const MALLOC_CALL_BLACKWHOLE = TestingUtils.getMallocCallBlackwholeContract();

describe("FtTransferCallToMallocCall and WithdrawFromMallocCall", () => {
  jest.setTimeout(60 * 1000);
  beforeAll(async () => {
    masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    //@ts-ignore
    wrappedTesterAccount = masterAccount;
    malloc = new MallocClient.MallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract(),
      {
        executeTxsByDefault: true,
      }
    );
    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amountWNearPerTest * NUMB_TESTS
    );

    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_BLACKWHOLE,
      ],
      {
        executeTransactions: true,
      }
    );
    await malloc.deposit(
      (amountWNearPerTest * NUMB_TESTS).toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );
  });

  xit("should fail when trying to withdraw someone else's balance", () => {});

  xit("should transfer some wNear to the blackwhole, then from the blackwhole withdraw back to this account, then check the balances", async () => {});

  it("should transfer some wNear to the blackwhole, check that the balance increased there, then withdraw that amount back to the Malloc Contract", async () => {
    const oldBlackwholeBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE,
      wrappedTesterAccount
    );

    const oldBlackwholeBalForAccount = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE
    );

    const oldMallocBal = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txs = await malloc.runEphemeralConstruction({
      actions: [
        {
          FtTransferCallToMallocCall: {
            malloc_call_id: MALLOC_CALL_BLACKWHOLE,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        },
      ],
      amount: amountWNearPerTest.toString(),
      initialActionIndices: [0],
      initialSplits: [1],
      nextActionsIndices: [[[]]],
      nextActionsSplits: [[[]]],
    });
    await malloc.resolveTransactions(txs);

    const newBlackwholeBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE,
      wrappedTesterAccount
    );

    const newMallocBal = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const newBlackwholeBalForAccount = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE
    );

    TestingUtils.checkBalDifferences(
      oldMallocBal,
      newMallocBal,
      amountWNearPerTest * -1,
      expect
    );

    TestingUtils.checkBalDifferences(
      oldBlackwholeBal,
      newBlackwholeBal,
      amountWNearPerTest,
      expect
    );

    TestingUtils.checkBalDifferences(
      oldBlackwholeBalForAccount,
      newBlackwholeBalForAccount,
      amountWNearPerTest,
      expect
    );

    const txsWithdraw = await malloc.runEphemeralConstruction({
      actions: [
        {
          WithdrawFromMallocCall: {
            malloc_call_id: MALLOC_CALL_BLACKWHOLE,
            token_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        },
      ],
      amount: amountWNearPerTest.toString(),
      initialActionIndices: [0],
      initialSplits: [1],
      nextActionsIndices: [[[]]],
      nextActionsSplits: [[[]]],
    });
    await malloc.resolveTransactions(txsWithdraw);

    const afterWithdrawBlackwholeBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE,
      wrappedTesterAccount
    );

    const afterWithdrawMallocBal = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const afterWithdrawBlackwholeBalAccount = await malloc.getTokenBalance(
      wrappedTesterAccount.accountId,
      TestingUtils.WRAP_TESTNET_CONTRACT,
      MALLOC_CALL_BLACKWHOLE
    );

    TestingUtils.checkBalDifferences(
      newBlackwholeBal,
      afterWithdrawBlackwholeBal,
      amountWNearPerTest * -1,
      expect
    );
    TestingUtils.checkBalDifferences(
      newMallocBal,
      afterWithdrawMallocBal,
      amountWNearPerTest,
      expect
    );
    TestingUtils.checkBalDifferences(
      newBlackwholeBalForAccount,
      afterWithdrawBlackwholeBalAccount,
      amountWNearPerTest * -1,
      expect
    );

    await malloc.withdraw(
      amountWNearPerTest.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(masterAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/to_change_or_del/malloc-client-construction-errors.spec.ts ---
import * as MallocClient from "../lib/malloc-client";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  CallEphemeralError,
  SpecialAccountType,
  Splitter,
  TransactionWithPromiseResultFlag,
} from "../lib/interfaces";
import BN from "bn.js";
import { wrap } from "module";
import { MAX_GAS } from "../lib/tx";
import { MALLOC_CALL_SIMPLE_GAS } from "../../testing-utils/lib/testing-utils";
import { Account } from "near-api-js";

let malloc: MallocClient.MallocClient<MallocClient.SpecialAccountWithKeyPair>;
const TOKEN_ACCOUNT_IDS = [
  TestingUtils.WRAP_TESTNET_CONTRACT,
  "ndai.ft-fin.testnet",
];
let masterAccount: Account;
let wrappedTesterAccount: MallocClient.SpecialAccountWithKeyPair;

xdescribe("malloc-client's error handling", () => {
  jest.setTimeout(60 * 1000);
  beforeAll(async () => {
    masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    const testerAccount = await TestingUtils.newRandAccount(masterAccount);
    wrappedTesterAccount = testerAccount;
    malloc = await MallocClient.createMallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract()
    );
  });

  xit("should fail because the construction is not found (this happens by deleting a construction midway through a call)", async () => {});

  xit("should fail because a splitter is not found (this happens by deleting a splitter midway through a call)", async () => {});

  it("should fail to make the call because the number of splitters from one child to the next splitter set does not match", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();

    const amount = 100;

    console.log("Account ID", wrappedTesterAccount.accountId);
    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        TestingUtils.getMallocCallPassthroughContract(),
      ],
      {
        executeTransactions: true,
      }
    );

    const depositTransactionHash = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    try {
      await malloc.runEphemeralConstruction(
        [
          {
            splits: [1],
            children: [
              {
                MallocCall: {
                  contract_id: TestingUtils.getMallocCallPassthroughContract(),

                  json_args: JSON.stringify({
                    log_message: "hello an error for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
          {
            splits: [1],
            children: [
              {
                MallocCall: {
                  check_callback: false,
                  contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,

                  json_args: JSON.stringify({
                    log_message: "hello for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        ],
        [[[1, 2]], [[]]],
        amount.toString(),
        { gas: MAX_GAS, depositTransactionHash }
      );
      throw "Expected the call to fail";
    } catch (_e) {
      let e: CallEphemeralError = _e as any;
      console.log(e);
      expect(
        (e.message as string).includes(
          "The transaction's promises failed with a message"
        )
      ).toBeTruthy();
      const callData = await malloc.getConstructionCallData(
        e.constructionCallId
      );
      console.log(JSON.stringify(callData));
      expect(callData.splitter_calls.length).toEqual(1);
      expect(callData.next_splitter_call_stack.length).toEqual(0);
      expect(callData.splitter_calls[0].status.Error.message).toEqual(
        "The malloc call failed"
      );
    }
  });

  it("should make calls to a multi level splitter which fails on the first level of the splitter due to calling a call which panics. This failure should be logged", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();

    const amount = 0;

    console.log("Account ID", wrappedTesterAccount.accountId);
    try {
      await malloc.runEphemeralConstruction(
        [
          {
            splits: [1],
            children: [
              {
                MallocCall: {
                  contract_id: TestingUtils.getMallocCallPassthroughContract(),

                  json_args: JSON.stringify({
                    log_message: "hello an error for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
          {
            splits: [1],
            children: [
              {
                MallocCall: {
                  contract_id: TestingUtils.getMallocCallErrorContract(),

                  json_args: JSON.stringify({
                    log_message: "hello an error for alice level 2",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
          {
            splits: [1],
            children: [
              {
                MallocCall: {
                  check_callback: false,
                  contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,

                  json_args: JSON.stringify({
                    log_message: "hello for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        ],
        [[[1]], [[2]], [[]]],
        amount.toString(),
        { gas: MAX_GAS }
      );
      throw "Expected the call to fail";
    } catch (_e) {
      let e: CallEphemeralError = _e as any;
      console.log(e);
      expect(
        (e.message as string).includes(
          "The transaction's promises failed with a message"
        )
      ).toBeTruthy();
      const callData = await malloc.getConstructionCallData(
        e.constructionCallId
      );
      console.log(JSON.stringify(callData));
      expect(callData.splitter_calls.length).toEqual(2);
      expect(callData.next_splitter_call_stack.length).toEqual(0);
      expect(callData.splitter_calls[1].status.Error.message).toEqual(
        "The number of splitters for the next set of inputs does not match the call's return"
      );
    }
  });

  // TODO: this is fully wrong now
  xit("should revert an entire splitter's execution if one child fails", async () => {
    const amount = 150;
    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        TestingUtils.getMallocCallBlackwholeContract(),
        TestingUtils.getMallocCallErrorContract(),
      ]
    );
    console.log(
      "WRAP BAL DEPOSITED 1",
      await malloc.getTokenBalance(
        wrappedTesterAccount.accountId,
        TestingUtils.WRAP_TESTNET_CONTRACT
      )
    );

    const depositTransactionHash = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    console.log("Account ID", wrappedTesterAccount.accountId);
    try {
      await malloc.runEphemeralConstruction(
        [
          {
            splits: [1, 1],
            children: [
              {
                MallocCall: {
                  contract_id: TestingUtils.getMallocCallBlackwholeContract(),

                  json_args: JSON.stringify({
                    log_message: "hello an error for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
              {
                MallocCall: {
                  contract_id: TestingUtils.getMallocCallErrorContract(),

                  json_args: JSON.stringify({
                    log_message: "hello an error for alice level 1",
                  }),
                  gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                  attached_amount: "0",
                },
              },
            ],
            ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
          },
        ],
        [[[], []]],
        amount.toString(),
        { gas: MAX_GAS, depositTransactionHash }
      );
      throw "Expected the call to fail";
    } catch (_e) {
      let e: CallEphemeralError = _e as any;
      console.log(e);
      expect(
        (e.message as string).includes(
          "The transaction's promises failed with a message"
        )
      ).toBeTruthy();
      const callData = await malloc.getConstructionCallData(
        e.constructionCallId
      );
      console.log(JSON.stringify(callData));

      console.log(
        "WRAP BAL DEPOSITED",
        await malloc.getTokenBalance(
          wrappedTesterAccount.accountId,
          TestingUtils.WRAP_TESTNET_CONTRACT
        )
      );
    }
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/to_change_or_del/malloc-client-construction.spec.ts ---
import * as MallocClient from "../lib/malloc-client";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  SpecialAccountType,
  TransactionWithPromiseResultFlag,
} from "../lib/interfaces";
import BN from "bn.js";
import { wrap } from "module";
import { MAX_GAS } from "../lib/tx";
import { MALLOC_CALL_SIMPLE_GAS } from "../../testing-utils/lib/testing-utils";
import { Account } from "near-api-js";

let malloc: MallocClient.MallocClient<MallocClient.SpecialAccountWithKeyPair>;
const TOKEN_ACCOUNT_IDS = [
  TestingUtils.WRAP_TESTNET_CONTRACT,
  "ndai.ft-fin.testnet",
];
let masterAccount: Account;
let wrappedTesterAccount: MallocClient.SpecialAccountWithKeyPair;

xdescribe("malloc-client's ft capabilities", () => {
  jest.setTimeout(60 * 1000);
  beforeAll(async () => {
    masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    const testerAccount = await TestingUtils.newRandAccount(masterAccount);
    wrappedTesterAccount = testerAccount;
    malloc = new MallocClient.MallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract(),
      { executeTxsByDefault: true }
    );
  });

  it("should make calls to a multi level splitter with pass throughs and black whole at then end", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();
    const MALLOC_CALL_PASSTHROUGH_CONTRACT_ID =
      TestingUtils.getMallocCallPassthroughContract();

    const amount = 100;

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
        MALLOC_CALL_PASSTHROUGH_CONTRACT_ID,
      ]
    );

    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const depositTransactionHash = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txRess = await malloc.runEphemeralConstruction(
      [
        {
          splits: [3, 1, 2],
          children: [
            {
              MallocCall: {
                contract_id: MALLOC_CALL_PASSTHROUGH_CONTRACT_ID,

                json_args: JSON.stringify({
                  log_message: "hello for alice level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
            {
              MallocCall: {
                contract_id: MALLOC_CALL_PASSTHROUGH_CONTRACT_ID,

                json_args: JSON.stringify({
                  log_message: "hello for karen level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
            {
              MallocCall: {
                check_callback: false,
                contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
                json_args: JSON.stringify({
                  log_message: "hello for bob level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
          ],
          ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
        },
        {
          splits: [1, 1],
          children: [
            {
              MallocCall: {
                contract_id: MALLOC_CALL_PASSTHROUGH_CONTRACT_ID,

                json_args: JSON.stringify({
                  log_message: "hello for alice level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
            {
              MallocCall: {
                contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
                check_callback: false,

                json_args: JSON.stringify({
                  log_message: "hello for karen level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
          ],
          ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
        },
        {
          splits: [1],
          children: [
            {
              MallocCall: {
                check_callback: false,
                contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,

                json_args: JSON.stringify({
                  log_message: "hello for alice level 1",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
          ],
          ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
        },
      ],
      amount.toString(),
      { gas: MAX_GAS, depositTransactionHash }
    );
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(myBal, newmyBal, -1 * amount, expect);
  });

  it.only("should make a couple black whole calls and make sure that the most basic splitter succeeds", async () => {
    const MALLOC_CALL_BLACKWHOLE_CONTRACT_ID =
      TestingUtils.getMallocCallBlackwholeContract();

    const amount = 100;

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
      ]
    );

    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const depositTransactionHash = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txRess = await malloc.runEphemeralConstruction(
      [
        {
          splits: [3, 1],
          children: [
            {
              MallocCall: {
                contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
                check_callback: false,

                json_args: JSON.stringify({
                  log_message: "hello for alice",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
            {
              MallocCall: {
                contract_id: MALLOC_CALL_BLACKWHOLE_CONTRACT_ID,
                check_callback: false,
                json_args: JSON.stringify({
                  log_message: "hello for bob",
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "0",
              },
            },
          ],
          ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
        },
      ],
      [[[], []]],
      amount.toString(),
      { gas: MAX_GAS, depositTransactionHash }
    );
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(myBal, newmyBal, -1 * amount, expect);
  });

  xit("should send Wrapped Near using the SimpleTransferMallocCall", async () => {
    const MALLOC_CALL_SEND_CONTRACT_ID =
      TestingUtils.getMallocCallSendContract();

    const amount = 600;
    const alice = await TestingUtils.newRandAccount(masterAccount);
    const bob = await TestingUtils.newRandAccount(masterAccount);

    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amount + 20
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        alice.accountId,
        bob.accountId,
        wrappedTesterAccount.accountId,
        malloc.mallocAccountId,
        MALLOC_CALL_SEND_CONTRACT_ID,
      ]
    );
    const aliceBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      alice.accountId,
      wrappedTesterAccount
    );
    const bobBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      bob.accountId,
      wrappedTesterAccount
    );
    const myBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );

    const depositTransactionHash = await malloc.deposit(
      amount.toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );

    const txRess = await malloc.runEphemeralConstruction(
      [
        {
          splits: [3, 1],
          children: [
            {
              MallocCall: {
                contract_id: MALLOC_CALL_SEND_CONTRACT_ID,

                json_args: JSON.stringify({
                  recipient: alice.accountId,
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "5",
              },
            },
            {
              MallocCall: {
                contract_id: MALLOC_CALL_SEND_CONTRACT_ID,
                json_args: JSON.stringify({
                  recipient: bob.accountId,
                }),
                gas: MALLOC_CALL_SIMPLE_GAS.toNumber(),
                attached_amount: "5",
              },
            },
          ],
          ft_contract_id: TestingUtils.WRAP_TESTNET_CONTRACT,
        },
      ],
      [[[], []]],
      amount.toString(),
      { gas: MAX_GAS, depositTransactionHash }
    );
    const ret = await malloc.resolveTransactions(txRess);
    expect(ret.flag).toBe(TransactionWithPromiseResultFlag.SUCCESS);

    const newaliceBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      alice.accountId,
      wrappedTesterAccount
    );
    const newbobBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      bob.accountId,
      wrappedTesterAccount
    );
    const newmyBal = await TestingUtils.ftBalOf(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount
    );
    TestingUtils.checkBalDifferences(aliceBal, newaliceBal, 450, expect);
    TestingUtils.checkBalDifferences(bobBal, newbobBal, 150, expect);
    TestingUtils.checkBalDifferences(myBal, newmyBal, -600, expect);
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(masterAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/__tests__/tx.spec.ts ---
import { utils } from "near-api-js";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  SpecialAccount,
  SpecialAccountType,
  SpecialAccountWithKeyPair,
} from "../lib/interfaces";
import { MallocClient, wrapAccountKeyPair } from "../lib/malloc-client";
import { executeMultipleTx, executeMultipleTxNoDeposit } from "../lib/tx";

const TOKEN_ACCOUNT_IDS = [TestingUtils.WRAP_TESTNET_CONTRACT];
let malloc: MallocClient<SpecialAccountWithKeyPair>;

describe("test transaction utils", () => {
  jest.setTimeout(30 * 1000);
  let wrappedAccount: SpecialAccount;

  beforeAll(async () => {
    const account = await TestingUtils.getDefaultTesterAccountNear();
    wrappedAccount = wrapAccountKeyPair(
      account,
      TestingUtils.getDefaultTesterKeypair()
    );
    malloc = new MallocClient(
      wrappedAccount,
      TestingUtils.getMallocContract(),
      {
        executeTxsByDefault: true,
      }
    );
  });

  // TODO: test w/ the multiple account ids
  it("should run multiple txs with a special wallets", async () => {
    // test depositing wrap near
    const alice = await TestingUtils.newRandAccount(wrappedAccount);
    const NEW_ACCOUNT_STORAGE_COST = utils.format.parseNearAmount("0.00125");
    await executeMultipleTx(alice, [
      {
        receiverId: TestingUtils.WRAP_TESTNET_CONTRACT,
        functionCalls: [
          {
            methodName: "storage_deposit",
            amount: NEW_ACCOUNT_STORAGE_COST,
          },
        ],
      },
    ]);
    const storageBal = await alice.viewFunction(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      "storage_balance_of",
      {
        account_id: alice.accountId,
      }
    );
    expect(storageBal.total).toEqual(NEW_ACCOUNT_STORAGE_COST);
  });

  it("should register an accountId with the given fungible tokens with one tx call, then ensure that the tokens are not reregistered", async () => {
    const bob = await TestingUtils.newRandAccount(wrappedAccount);
    const alice = await TestingUtils.newRandAccount(wrappedAccount);
    const { contractsToRegisterWith: tokensRegistered } =
      await malloc.registerAccountDeposits(TOKEN_ACCOUNT_IDS, [bob.accountId], {
        executeTransactions: true,
      });
    expect(tokensRegistered).toEqual(TOKEN_ACCOUNT_IDS);
    for (let i = 0; i < tokensRegistered.length; i++) {
      expect(
        await TestingUtils.isFtRegistered(
          tokensRegistered[i],
          bob.accountId,
          wrappedAccount
        )
      ).toBeTruthy();
    }
    const { contractsToRegisterWith: newTokensRegistered } =
      await malloc.registerAccountDeposits(TOKEN_ACCOUNT_IDS, [bob.accountId], {
        executeTransactions: true,
      });
    expect(newTokensRegistered).toEqual([]);
  });

  afterAll(async () => {
    await TestingUtils.cleanUp(wrappedAccount.accountId, TOKEN_ACCOUNT_IDS);
  });
});

'''
'''--- ts-packages/malloc-client/babel.config.js ---
module.exports = {
  presets: [
    "@babel/preset-env",
    "@babel/preset-typescript",
  ],
};

'''
'''--- ts-packages/malloc-client/lib/access-key.ts ---
import BN from "bn.js";
import {
  AccessKeyInfoView,
  FunctionCallPermissionView,
} from "near-api-js/lib/providers/provider";
import {
  AccessKey,
  addKey,
  deleteKey,
  functionCallAccessKey as functionCallAccessKeyFn,
} from "near-api-js/lib/transaction";
import { KeyPair, KeyPairEd25519, PublicKey } from "near-api-js/lib/utils";
import { MallocErrors } from "./errors";
import {
  Transaction,
  AccountId,
  SpecialAccount,
  SpecialAccountConnectedWallet,
  SpecialAccountWithKeyPair,
  TxAction,
  BigNumberish,
} from "./interfaces";
import { isRunningBrowser } from "./utils";

const KEY_FOR_MALLOC_ACCESS_KEY = "MallocAccessKey";

export const addAccessKeyForFunctionCalls = async (
  account: SpecialAccount,
  mallocId: AccountId,
  methodNames: string[],
  allowance: BigNumberish
): Promise<{ tx: Transaction; kp: KeyPair }> => {
  const accessKeys = await account.getAccessKeys();
  const oldAccessKey = findAccessMatching(accessKeys, mallocId);
  let prependActions: TxAction[] = [];
  if (oldAccessKey) {
    prependActions.push({
      deleteKey: {
        publicKey: oldAccessKey.pk,
      },
    });
  }

  const kp = KeyPairEd25519.fromRandom();
  const tx: Transaction = {
    receiverId: account.accountId,
    actions: [
      {
        functionCallAccessKey: {
          accessKey: {
            receiverId: mallocId,
            methodNames,
            allowance: allowance.toString(),
          },
          publicKey: kp.publicKey,
          // by having a init step which looks for this pk
        },
      },
    ],
  };
  return {
    tx,
    kp,
  };
};

export const storeKeyPair = (kp: KeyPair) => {
  if (!isRunningBrowser)
    throw MallocErrors.ONLY_WEB_WALLET_SUPPORTED("Loading an access key");
  (globalThis as any).window.localStorage.setItem(
    KEY_FOR_MALLOC_ACCESS_KEY,
    kp.toString()
  );
};

export const loadKeyPair = (): KeyPair | undefined => {
  if (!isRunningBrowser)
    throw MallocErrors.ONLY_WEB_WALLET_SUPPORTED("Loading an access key");
  const privStr: string | null = (
    globalThis as any
  ).window.localStorage.getItem(KEY_FOR_MALLOC_ACCESS_KEY);

  if (!privStr) return undefined;
  return KeyPairEd25519.fromString(privStr);
};

const findAccessMatching = (
  accessKeyInfos: AccessKeyInfoView[],
  contract_id: AccountId
): { pk: PublicKey; i: number } | null => {
  let i = 0;
  for (const info of accessKeyInfos) {
    if (
      (info.access_key.permission as FunctionCallPermissionView).FunctionCall &&
      (info.access_key.permission as FunctionCallPermissionView).FunctionCall
        .receiver_id === contract_id
    ) {
      return { pk: PublicKey.from(info.public_key), i };
    }
    i++;
  }
  return null;
};

'''
'''--- ts-packages/malloc-client/lib/action.ts ---
import BN from "bn.js";
import { MallocErrors } from "./errors";
import {
  SpecialAccount,
  TxAction,
  MallocCallMetadata,
  AccountId,
  ActionTypesLibraryFacing,
  ActionTypesContractFacing,
  Action,
} from "./interfaces";

/**
 * Fill in the the metadata from malloc call's metadata into the given action
 */
export const actionLibraryFacingToContractFacing = async (
  callerAccount: SpecialAccount,
  action: Action<ActionTypesLibraryFacing>
): Promise<Action<ActionTypesContractFacing>> => {
  if (action.MallocCall) {
    const metadata = await getMallocCallMetadata(
      callerAccount,
      action.MallocCall.malloc_call_id
    );
    return {
      MallocCall: {
        ...action.MallocCall,
        gas: metadata.gas_required,
        attached_amount: new BN(metadata.attachment_required).toString(),
      },
    };
  }
  return action
};

export const getMallocCallMetadata = async (
  callerAccount: SpecialAccount,
  malloc_call_id: AccountId
): Promise<MallocCallMetadata> => {
  const metadata: MallocCallMetadata = await callerAccount.viewFunction(
    malloc_call_id,
    "metadata"
  );
  return metadata;
};

export const getActionInputToken = (
  action: Action<ActionTypesLibraryFacing>
): AccountId => {
  if (action.MallocCall) {
    return action.MallocCall.token_id;
  } else if (action.WithdrawFromMallocCall) {
    return action.WithdrawFromMallocCall.token_id;
  } else if (action.FtTransferCallToMallocCall) {
    return action.FtTransferCallToMallocCall.token_id;
  }
  throw MallocErrors.EXPECTED_ACTION_PROPERTY();
};

'''
'''--- ts-packages/malloc-client/lib/construction.ts ---
import BN from "bn.js";
import { Account, KeyPair } from "near-api-js";
import { actionLibraryFacingToContractFacing } from "./action";
import {
  AccountId,
  BigNumberish,
  TxAction,
  SpecialAccount,
  Transaction,
  MallocCallMetadata,
  ConstructionId,
  ConstructionCall,
  SpecialAccountWithKeyPair,
  TransactionWithPromiseResultFlag,
  ConstructionCallId,
  TxHashOrUndefined,
  RegisterConstructionArgs,
  RegisterActionsArgs,
  Construction,
  ProcessNextActionCallArgs,
  InitConstructionArgs,
  ActionCall,
  ActionCallId,
  CallEphemeralError,
  ActionTypesLibraryFacing,
  ActionTypesContractFacing,
  Action,
} from "./interfaces";
import {
  executeMultipleTx,
  executeMultipleTxNoDeposit,
  MAX_GAS,
  MAX_GAS_STR,
  resolveTransactionsReducedWithPromises,
} from "./tx";

interface RunEphemeralOpts {
  gas: BigNumberish;
  depositTransactionHash?: string | null;
}

const defaultRunEphemeralOpts: RunEphemeralOpts = {
  gas: MAX_GAS,
  depositTransactionHash: null,
};

const makeid = (length: number) => {
  let result = "";
  const characters =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  const charactersLength = characters.length;
  for (var i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
  }
  return result;
};

/**
 * @returns the transaction's hash
 */
export const deleteConstruction = async <
  SpecialAccountGeneric extends SpecialAccount
>(
  callerAccount: SpecialAccountGeneric,
  mallocAccountId: AccountId,
  constructionId: ConstructionId
): Promise<TxHashOrUndefined<SpecialAccountGeneric>> => {
  const txs: Transaction[] = [
    {
      receiverId: mallocAccountId,
      actions: [
        {
          functionCall: {
            methodName: "delete_construction",
            args: {
              construction_id: constructionId,
            },
            gas: MAX_GAS_STR,
            amount: "0", //TODO: storage deposit goes here ya heard
          },
        },
      ],
    },
  ];

  const txRetsInit = await executeMultipleTxNoDeposit(callerAccount, txs, {});

  //@ts-ignore
  if (txRetsInit instanceof Array) return txRetsInit[0];
  //@ts-ignore
  return txRetsInit;
};

export const getActionCallData = async (
  callerAccount: SpecialAccount,
  mallocAccountId: AccountId,
  actionCallId: ActionCallId
): Promise<ActionCall> => {
  return await callerAccount.viewFunction(
    mallocAccountId,
    "get_action_call_unchecked",
    { id: actionCallId.toString() }
  );
};

export const getConstructionCallData = async (
  callerAccount: SpecialAccount,
  mallocAccountId: AccountId,
  constructionCallId: string
): Promise<ConstructionCall> => {
  return await callerAccount.viewFunction(
    mallocAccountId,
    "get_construction_call_unchecked",
    { id: constructionCallId }
  );
};

const checkTransactionSuccessful = async (
  hashes: string[],
  accountId: string
) => {
  const ret = await resolveTransactionsReducedWithPromises(hashes, accountId);
  if (ret.flag !== TransactionWithPromiseResultFlag.SUCCESS) {
    throw JSON.stringify(ret.message);
  }
};

/**
 * runEphemeralConstruction will create a construction with a random name and then delete it
 *
 * @error Errors with a object of type CallEphemeralError
 * {@link CallEphemeralError | CallEphemeralError interface}
 */
export const runEphemeralConstruction = async (
  callerAccount: SpecialAccount,
  mallocAccountId: AccountId,
  actions: Action<ActionTypesLibraryFacing>[],
  amount: BigNumberish,
  initial_action_indices: number[],
  initial_splits: BigNumberish[],
  next_actions_indices: number[][][],
  next_actions_splits: BigNumberish[][][],
  signerKp: KeyPair,
  opts?: Partial<RunEphemeralOpts>
): Promise<string[]> => {
  const _opts: RunEphemeralOpts = {
    ...defaultRunEphemeralOpts,
    ...(opts || {}),
  };
  const construction_call_id = makeid(16);
  const constructionName = makeid(10);
  const actionNames = actions.map((n) => makeid(12));
  const construction: Construction = {
    actions: actionNames.map((name) => {
      return {
        name,
        owner: callerAccount.accountId,
      };
    }),
  };

  const actionsContractFacing: Action<ActionTypesContractFacing>[] =
    await Promise.all(
      actions.map((action) =>
        actionLibraryFacingToContractFacing(callerAccount, action)
      )
    );

  // TODO: move this out to a separate function and test registration
  // Use the get malloc call state for testing!
  const storeAndStartConstruction = async (): Promise<string[]> => {
    // const attachedDeposit = await getActionAttachedDepositForAction(
    //   callerAccount,
    //   actions[0]
    // );
    const txs: Transaction[] = [
      {
        receiverId: mallocAccountId,
        actions: [
          {
            functionCall: {
              methodName: "register_actions",
              args: {
                action_names: actionNames,
                actions: actionsContractFacing,
              } as RegisterActionsArgs,
              gas: MAX_GAS.toString(),
              amount: "0", // TODO: storage
            },
          },
        ],
      },
      {
        receiverId: mallocAccountId,
        actions: [
          {
            functionCall: {
              methodName: "register_construction",
              args: {
                construction_name: constructionName,
                construction,
              } as RegisterConstructionArgs,
              gas: MAX_GAS.toString(),
              amount: "0", //TODO: storage deposit goes here ya heard
            },
          },
        ],
      },
    ];

    const initTx: Transaction[] = [
      {
        receiverId: mallocAccountId,
        actions: [
          {
            functionCall: {
              methodName: "init_construction",
              args: {
                construction_call_id,
                construction_id: {
                  name: constructionName,
                  owner: callerAccount.accountId,
                },
                amount: amount.toString(),
                initial_action_indices: initial_action_indices,
                initial_splits: initial_splits.map((i) => i.toString()),
                next_actions_indices,
                next_actions_splits: next_actions_splits.map((o) =>
                  o.map((o) => o.map((item) => item.toString()))
                ),
              } as InitConstructionArgs,
              gas: MAX_GAS.divn(3).toString(),
              amount: "0", //TODO: storage deposit goes here ya heard
            },
          },
        ],
      },
    ];

    const txRetsInit = await executeMultipleTxNoDeposit(callerAccount, [
      ...txs,
      ...initTx,
    ]);

    // Throws if unsuccessful
    await checkTransactionSuccessful(txRetsInit || [], callerAccount.accountId);

    return txRetsInit || [];
  };

  const runNextActionCalls = async (): Promise<string[]> => {
    let constructionCallData = await getConstructionCallData(
      callerAccount,
      mallocAccountId,
      construction_call_id
    );
    let txHashes: string[] = [];

    while (constructionCallData.next_action_calls_stack.length > 0) {
      const action_call_index =
        constructionCallData.next_action_calls_stack[
          constructionCallData.next_action_calls_stack.length - 1
        ];

      const action_call_id =
        constructionCallData.action_calls[action_call_index];
      const action_call = await getActionCallData(
        callerAccount,
        mallocAccountId,
        action_call_id as any
      );
      // console.log(action_call);
      console.log(constructionCallData);
      const txs: Transaction[] = new Array(
        constructionCallData.next_action_calls_stack.length
      )
        .fill(0)
        .map((_) => {
          return {
            receiverId: mallocAccountId,
            actions: [
              {
                functionCall: {
                  methodName: "process_next_action_call",
                  args: {
                    construction_call_id,
                  } as ProcessNextActionCallArgs,
                  gas: _opts.gas.toString(),
                  amount: "0", //TODO: consider adding back //attachedDeposit.toString(),
                },
              },
            ],
          };
        });

      const txRets = await executeMultipleTxNoDeposit(callerAccount, txs, {});

      // Throws if unsuccessful
      await checkTransactionSuccessful(txRets || [], callerAccount.accountId);
      txHashes.push(...(txRets || []));

      constructionCallData = await getConstructionCallData(
        callerAccount,
        mallocAccountId,
        construction_call_id
      );
    }
    return txHashes;
  };
  // TODO: delete the construction once all is done!!

  try {
    const txsInit = await storeAndStartConstruction();
    await resolveTransactionsReducedWithPromises(
      txsInit,
      callerAccount.accountId
    );
    const txsNextStep = await runNextActionCalls();
    return [...txsInit, ...txsNextStep];
  } catch (e) {
    console.trace(e);
    const call_state = await getConstructionCallData(
      callerAccount,
      mallocAccountId,
      construction_call_id
    );
    console.info(
      "The error resolved with malloc in the following state",
      JSON.stringify(call_state)
    );
    throw {
      ...e,
      constructionCallId: construction_call_id,
    } as CallEphemeralError;
  }
};

'''
'''--- ts-packages/malloc-client/lib/errors.ts ---
import { AccountId, MallocError } from "./interfaces";

export namespace MallocErrors {
  export const TRANSACTION_PROMISE_FAILED = (message?: string) =>
    createError(
      `The transaction's promises failed with a message of: ${message}`
    );
  export const EXPECTED_ACTION_PROPERTY = () =>
    createError(
      `Expected an action name to match FtTransferCallToMallocCall, MallocCall, or one another appropriate Action`
    );
  export const EXPECTED_TX_ACTION_PROPERTY = () =>
    createError(
      `Expected a tx action name to match functionCall, functionCallAccessKey, or deleteKey`
    );

  export const COULD_NOT_FIND_ACCESS_KEY = (contract_id: AccountId) =>
    createError(
      `Failed to find an access key which has access to contract ${contract_id}`
    );

  export const ONLY_WEB_WALLET_SUPPORTED = (action: string) =>
    createError(`${action} is only supported by web connected wallets`);

  export const EXPECTED_A_MALLOC_ACCESS_KEY = (action: string) => 
      createError(`${action} requires having an access key specifically for malloc`)
}

const createError = (message: string): MallocError => {
  return {
    message,
  };
};

'''
'''--- ts-packages/malloc-client/lib/ft-token.ts ---
import * as nearAPI from "near-api-js";
import {
  AccountId,
  FunctionCallOptions,
  Transaction,
  TransferType,
} from "./interfaces";
import { executeMultipleTx, MAX_GAS, MAX_GAS_STR } from "./tx";

export const getTokenBalance = (
  caller: nearAPI.Account,
  mallocOrCallContractId: AccountId,
  accountId: AccountId,
  tokenId: AccountId
): Promise<string> => {
  return caller.viewFunction(mallocOrCallContractId, "get_ft_balance", {
    account_id: accountId,
    token_id: tokenId,
  });
};

export const TransferTypeTransfer = (): TransferType => {
  return { Transfer: [] };
};
export const TransferTypeTransferCallMalloc = (): TransferType => {
  return { TransferCallMalloc: [] };
};

'''
'''--- ts-packages/malloc-client/lib/interfaces/action-interfaces.ts ---
import { AccountId } from "./shared";

export interface MallocCall {
  check_callback?: boolean;
  malloc_call_id: AccountId;
  json_args: string;
  skip_ft_transfer?: boolean;
  token_id: AccountId;
}

export interface MallocCallWithGasAndAttached extends MallocCall {
  gas: number;
  attached_amount: string;
}

export interface FtTransferCallToMallocCall {
  malloc_call_id: AccountId;
  token_id: AccountId;
}

export interface WithdrawFromMallocCall {
  malloc_call_id: AccountId;
  token_id: AccountId;
  recipient?: AccountId;
}

export interface Action<
  T extends ActionTypesLibraryFacing | ActionTypesContractFacing
> {
  // SimpleTransfer?: { recipient: AccountId };
  // FTTransfer?: { recipient: AccountId };
  MallocCall?: T extends MallocCallWithGasAndAttached
    ? MallocCallWithGasAndAttached
    : T extends MallocCall
    ? MallocCall
    : undefined;
  FtTransferCallToMallocCall?: T extends MallocCall
    ? undefined
    : T extends FtTransferCallToMallocCall
    ? FtTransferCallToMallocCall
    : undefined;
  WithdrawFromMallocCall?: T extends MallocCall
    ? undefined
    : T extends WithdrawFromMallocCall
    ? WithdrawFromMallocCall
    : undefined;
}

export type ActionTypesLibraryFacing =
  | FtTransferCallToMallocCall
  | MallocCall
  | WithdrawFromMallocCall;

export type ActionTypesContractFacing =
  | FtTransferCallToMallocCall
  | WithdrawFromMallocCall
  | MallocCallWithGasAndAttached;

'''
'''--- ts-packages/malloc-client/lib/interfaces/call-interfaces.ts ---
/********** Call Interfaces ************/

import { AccountId, ConstructionId, ActionCallId } from "./shared";

export interface ActionCallStatus {
  Error?: { message: string };
  // empty enum
  WaitingCall?: any;
  Executing?: { block_index_start: number };
  Success?: any;
}

export interface ActionCall {
  action_index_in_construction: string,
  block_index: string,
  amount: string,
  status: ActionCallStatus
}

export interface ConstructionCall {
  caller: AccountId;
  construction_id: ConstructionId;
  next_action_calls_stack: number[];
  action_calls: ActionCallId[];
}

'''
'''--- ts-packages/malloc-client/lib/interfaces/construction-interfaces.ts ---
import { ActionId } from "./shared";

// TODO:?
export interface Construction {
	actions: ActionId[]
}
'''
'''--- ts-packages/malloc-client/lib/interfaces/error-interfaces.ts ---
import { ConstructionCallId } from "./shared";

export interface CallEphemeralError {
  constructionCallId?: ConstructionCallId;
  message?: string;
}
'''
'''--- ts-packages/malloc-client/lib/interfaces/index.ts ---
export * from "./shared";
export * from "./action-interfaces";
export * from "./construction-interfaces";
export * from "./call-interfaces";
export * from "./malloc-call-interaces";
export * from "./malloc-contract-interfaces";
export * from "./error-interfaces";

'''
'''--- ts-packages/malloc-client/lib/interfaces/malloc-call-interaces.ts ---
import BN from "bn.js";

export interface MallocCallMetadata {
  gas_required: number;
  attachment_required: BN | string;
  name: string;
}
'''
'''--- ts-packages/malloc-client/lib/interfaces/malloc-contract-interfaces.ts ---
import { Construction } from "./construction-interfaces";
import { Action, ActionTypesContractFacing } from "./action-interfaces";
import { ConstructionCallId, ConstructionId, TransferType } from "./shared";

export interface InitConstructionArgs {
  construction_call_id: ConstructionCallId;
  construction_id: ConstructionId;
  amount: string;
  initial_action_indices: number[];
  initial_splits: string[];
  next_actions_indices: number[][][];
  next_actions_splits: string[][][];
}

export interface RegisterConstructionArgs {
  construction_name: string;
  construction: Construction;
}

export interface RegisterActionsArgs {
  action_names: string[];
  actions: Action<ActionTypesContractFacing>[];
}

export interface ProcessNextActionCallArgs {
  construction_call_id: ConstructionCallId;
}

export interface WithdrawToArgs {
  account_id: string,
  amount: string,
  token_id: string,
  recipient?: string,
  msg?: string,
  transfer_type: TransferType
}
'''
'''--- ts-packages/malloc-client/lib/interfaces/shared/index.ts ---
import BN from "bn.js";
import { Account, ConnectedWalletAccount, KeyPair } from "near-api-js";
import {
  AccessKey,
  AccessKeyPermission,
  DeleteKey,
} from "near-api-js/lib/transaction";
import { PublicKey } from "near-api-js/lib/utils";

/************* Near Helpers ***************/
export type AccountId = string;
export type BigNumberish = BN | number | string;

/********** Special Accounts **************/
export enum SpecialAccountType {
  KeyPair = "KEY_PAIR",
  WebConnected = "WEB_CONNECTED",
}

interface SpecialAccountBase {
  type: SpecialAccountType;
}

export interface SpecialAccountWithKeyPair extends SpecialAccountBase, Account {
  type: SpecialAccountType.KeyPair;
  keypair: KeyPair;
}

export interface SpecialAccountConnectedWallet
  extends SpecialAccountBase,
    ConnectedWalletAccount {
  type: SpecialAccountType.WebConnected;
}

export type SpecialAccount =
  | SpecialAccountConnectedWallet
  | SpecialAccountWithKeyPair;

/************ Transactions *******************/

export interface TxAction {
  functionCall?: FunctionCallOptions;
  functionCallAccessKey?: FunctionCallAccessKey;
  deleteKey?: DeleteKey;
}
export interface Transaction {
  receiverId: string;
  actions: TxAction[];
}

export enum TransactionWithPromiseResultFlag {
  SUCCESS = "success",
  FAILURE = "failure",
  PENDING = "pending",
}

export interface TransactionWithPromiseResult {
  flag: TransactionWithPromiseResultFlag;
  message?: string;
}

export type TxHashesOrUndefined<SpecialAccountTypeGeneric> =
  SpecialAccountTypeGeneric extends SpecialAccountConnectedWallet
    ? undefined
    : string[];

export type TxHashOrUndefined<SpecialAccountTypeGeneric> =
  SpecialAccountTypeGeneric extends SpecialAccountConnectedWallet
    ? undefined
    : string;

export interface ExecuteMultipleTxOpts<
  T extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
> {
  callbackUrl?: T extends SpecialAccountConnectedWallet ? string : never;
}

/********** ID interfaces *************/
export type ConstructionCallId = string;
export type ActionCallId = number | string;

interface GenericId {
  owner: AccountId;
  name: string;
}
export type ConstructionId = GenericId;
export type ActionId = GenericId;

export interface ViewFunctionOpts {
  methodName: string;
  args?: object;
}

export interface FunctionCallOptions extends ViewFunctionOpts {
  gas?: string;
  amount?: string;
}

export type FunctionCallAccessKey = {
  accessKey: {
    allowance: string;
    receiverId: string;
    methodNames: string[];
  };
  publicKey: PublicKey;
};

/*********** Error handling *************/
export interface MallocError {
  message: string;
}

/*********** Fungible Token from Malloc Call Core *********/
export interface TransferType {
  Transfer?: [];
  TransferCallMalloc?: [];
}

'''
'''--- ts-packages/malloc-client/lib/interfaces/shared/near-standards.ts ---
/**** NEP 145 Standards *****/
export interface StorageBounds {
  min: string;
  max: string;
}

'''
'''--- ts-packages/malloc-client/lib/malloc-client.ts ---
import {
  Account,
  ConnectedWalletAccount,
  Contract,
  KeyPair,
  Near,
  utils,
  WalletConnection,
} from "near-api-js";
import { MallocErrors } from "./errors";
import {
  AccountId,
  SpecialAccountWithKeyPair,
  TxAction,
  SpecialAccountConnectedWallet,
  SpecialAccountType,
  SpecialAccount,
  TransactionWithPromiseResultFlag,
  TransactionWithPromiseResult,
  Transaction,
  ConstructionCallId,
  ConstructionId,
  TxHashOrUndefined,
  ConstructionCall,
  BigNumberish,
  MallocCallMetadata,
  ExecuteMultipleTxOpts,
  ActionTypesLibraryFacing,
  WithdrawToArgs,
  TxHashesOrUndefined,
  Action,
} from "./interfaces";
import {
  deleteConstruction,
  getConstructionCallData,
  runEphemeralConstruction,
} from "./construction";
import {
  executeMultipleTx,
  MAX_GAS,
  resolveTransactionsReducedWithPromises,
  resolveTransactionsWithPromise,
} from "./tx";
import { getTokenBalance, TransferTypeTransfer } from "./ft-token";
import { registerDepositsTxs } from "./storage-deposit";
import { getMallocCallMetadata } from "./action";
import {
  addAccessKeyForFunctionCalls,
  loadKeyPair,
  storeKeyPair,
} from "./access-key";
import BN from "bn.js";

export * from "./interfaces";

export const wrapAccountConnectedWallet = (
  near: Near
): SpecialAccountConnectedWallet => {
  const newNear = new Near(near.config);
  const walletConnection = new WalletConnection(newNear, null);
  const account = new ConnectedWalletAccount(
    walletConnection,
    walletConnection.account().connection,
    walletConnection.account().accountId
  );

  (account as any).type = SpecialAccountType.WebConnected;
  //@ts-ignore
  return account;
};

// TODO: may need same new thingy as above
export const wrapAccountKeyPair = (
  account: Account,
  keypair: KeyPair
): SpecialAccountWithKeyPair => {
  const newAccountKP = new Account(account.connection, account.accountId);
  (newAccountKP as any).type = SpecialAccountType.KeyPair;
  (newAccountKP as any).keypair = keypair;
  // @ts-ignore
  return newAccountKP as SpecialAccountWithKeyPair;
};

interface RunEphemeralOpts {
  gas: BigNumberish;
  depositTransactionHashes: string[];
}

interface MallocClientOpts {
  executeTxsByDefault: boolean;
}

const mallocClientDefaultOpts: MallocClientOpts = {
  executeTxsByDefault: false,
};

interface OptsBase<
  AccountType extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
> extends ExecuteMultipleTxOpts<AccountType> {
  priorTransactions?: Transaction[];
  executeTransactions?: boolean;
}

interface AddAccessKeyOpts<
  AccountType extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
> extends OptsBase<AccountType> {
  allowance?: BigNumberish;
}

interface DefaultReturn<
  AccountType extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
> {
  txs: Transaction[];
  hashes?: TxHashesOrUndefined<AccountType>;
}

/**
 * @param extraAmount - The extra amount in Near Lamports to give to each deposit
 * @param executeTransactions - Whether to execute the transactions or simply just return an array of transactions, defaults to true
 */
interface RegisterAccountDepositsOpts<T extends SpecialAccount>
  extends OptsBase<T> {
  extraAmount?: BigNumberish;
}

export interface IRunEphemeralConstruction {
  actions: Action<ActionTypesLibraryFacing>[];
  amount: string;
  initialActionIndices: number[];
  initialSplits: BigNumberish[];
  nextActionsIndices: number[][][];
  nextActionsSplits: BigNumberish[][][];
  opts?: Partial<RunEphemeralOpts>;
}

/**
 * MallocClient is the for interacting with the set of Malloc Contracts via the Malloc SDK
 *
 * @param SpecialAccountTypeGeneric the type of special account. If the special account is a web connected wallet, then
 * deposit and runEphemeralConstruction do not return. If they are accounts derived from a key pair, then they return the transaction's hashes
 *
 */
export class MallocClient<
  AccountType extends SpecialAccountWithKeyPair | SpecialAccountConnectedWallet
> {
  private readonly account: AccountType;
  public readonly mallocAccountId: AccountId;
  private readonly opts: MallocClientOpts;

  constructor(
    account: AccountType,
    mallocAccountId: AccountId,
    opts?: Partial<MallocClientOpts>
  ) {
    this.account = account;
    this.mallocAccountId = mallocAccountId;
    this.opts = opts
      ? { ...mallocClientDefaultOpts, ...opts }
      : mallocClientDefaultOpts;
  }

  public async resolveTransactions(
    hashes: string[]
  ): Promise<TransactionWithPromiseResult> {
    return resolveTransactionsReducedWithPromises(
      hashes,
      this.account.accountId
    );
  }

  public async withdraw(
    amount: string,
    tokenAccountId: string,
    opts?: OptsBase<AccountType>
  ): Promise<DefaultReturn<AccountType>> {
    let txs: Transaction[] = [];
    txs.push({
      receiverId: this.mallocAccountId,
      actions: [
        {
          functionCall: {
            methodName: "withdraw_to",
            amount: "1",
            args: {
              account_id: this.account.accountId,
              amount: amount,
              token_id: tokenAccountId,
              recipient: this.account.accountId,
              transfer_type: TransferTypeTransfer(),
            } as WithdrawToArgs,
          },
        },
      ],
    });
    let hashes: TxHashesOrUndefined<AccountType> | undefined = undefined;
    if (opts?.executeTransactions || this.opts.executeTxsByDefault) {
      hashes = await executeMultipleTx(
        this.account,
        [...(opts?.priorTransactions || []), ...txs],
        opts
      );
    }

    return {
      txs,
      hashes,
    };
  }

  public async addAccessKey(opts?: AddAccessKeyOpts<AccountType>) {
    if (this.account.type !== SpecialAccountType.WebConnected) {
      throw MallocErrors.ONLY_WEB_WALLET_SUPPORTED(
        "Adding an access key for malloc"
      );
    }
    const { tx, kp } = await addAccessKeyForFunctionCalls(
      this.account,
      this.mallocAccountId,
      [
        "register_actions",
        "register_construction",
        "init_construction",
        "process_next_action_call",
        "delete_construction",
      ],
      new BN(
        // this is a couple of hundred calls at max gas for the default
        // TODO: document calculation
        opts?.allowance || (utils.format.parseNearAmount("0.02") as string)
      )
    );
    storeKeyPair(kp);
    let hashes;
    if (opts?.executeTransactions || this.opts.executeTxsByDefault) {
      hashes = await executeMultipleTx(this.account, [tx]);
    }
    return {
      txs: [tx],
      hashes,
    };
  }

  public async deposit(
    amount: string,
    tokenAccountId: string,
    opts?: OptsBase<AccountType>
  ): Promise<DefaultReturn<AccountType>> {
    let txs: Transaction[] = [];
    txs.push({
      receiverId: tokenAccountId,
      actions: [
        {
          functionCall: {
            methodName: "ft_transfer_call",
            amount: "1",
            args: {
              receiver_id: this.mallocAccountId,
              amount: amount.toString(),
              msg: "",
            },
          },
        },
      ],
    });
    if (opts?.priorTransactions) {
      txs = [...opts.priorTransactions, ...txs];
    }
    let hashes;
    if (opts?.executeTransactions || this.opts.executeTxsByDefault) {
      hashes = await executeMultipleTx(this.account, txs, opts);
    }

    if (!hashes || !hashes?.length)
      return {
        txs,
      };

    return {
      txs,
      hashes,
    };
  }

  public executeMultipleTransaction(
    txs: Transaction[],
    opts?: ExecuteMultipleTxOpts<AccountType>
  ): Promise<TxHashesOrUndefined<AccountType>> {
    return executeMultipleTx(this.account, txs, opts);
  }

  public getMallocCallMetadata(
    mallocCallId: AccountId
  ): Promise<MallocCallMetadata> {
    return getMallocCallMetadata(this.account, mallocCallId);
  }

  /**
   * @param accountId - Account Balance to check
   * @param tokenId
   * @param mallocCallId - If this is set, then the balance of a malloc call will be
   * checked rather than the main Malloc Contract
   */
  public getTokenBalance(
    accountId: AccountId,
    tokenId: AccountId,
    mallocCallId?: string
  ): Promise<string> {
    return getTokenBalance(
      this.account,
      mallocCallId || this.mallocAccountId,
      accountId,
      tokenId
    );
  }

  // TODO: implement delete construction
  public deleteConstruction(
    constructionID: ConstructionId
  ): Promise<TxHashOrUndefined<AccountType>> {
    return deleteConstruction(
      this.account,
      this.mallocAccountId,
      constructionID
    );
  }

  public getConstructionCallData(
    constructionCallID: ConstructionCallId
  ): Promise<ConstructionCall> {
    return getConstructionCallData(
      this.account,
      this.mallocAccountId,
      constructionCallID
    );
  }

  /**
   * See {@link runEphemeralConstruction}
   */
  public async runEphemeralConstruction({
    actions,
    amount,
    initialActionIndices: initial_action_indices,
    initialSplits: initial_splits,
    nextActionsIndices: next_actions_indices,
    nextActionsSplits: next_actions_splits,
    opts,
  }: IRunEphemeralConstruction): Promise<string[]> {
    let kp =
      this.account.type === SpecialAccountType.KeyPair
        ? (this.account as SpecialAccountWithKeyPair).keypair
        : loadKeyPair();
    if (!kp) {
      throw MallocErrors.EXPECTED_A_MALLOC_ACCESS_KEY(
        "Running an ephemeral construction"
      );
    }

    // Wait for the deposit transactions to go through
    if (opts?.depositTransactionHashes) {
      const depositResult = await resolveTransactionsWithPromise(
        [...opts.depositTransactionHashes],
        this.account.accountId
      );
      if (depositResult[0].flag !== TransactionWithPromiseResultFlag.SUCCESS) {
        throw MallocErrors.TRANSACTION_PROMISE_FAILED(depositResult[0].message);
      }
    }

    return await runEphemeralConstruction(
      this.account as SpecialAccountWithKeyPair,
      this.mallocAccountId,
      actions,
      amount,
      initial_action_indices,
      initial_splits,
      next_actions_indices,
      next_actions_splits,
      kp,
      opts
    );
    // return txRets;
  }

  /**
   * @param  {AccountId[]} contracts A list of the token contract account ids
   * @param  {AccountId[]} registerForAccounts The accounts to register for all the token contracts
   * @param  {RegisterAccountDepositsOpts} opts - {@link RegisterAccountDepositsOpts}
   * @returns A list of token account ids which were newly registered
   */
  public async registerAccountDeposits(
    contracts: AccountId[],
    registerForAccounts: AccountId[],
    opts?: RegisterAccountDepositsOpts<AccountType>
  ): Promise<
    { contractsToRegisterWith: AccountId[] } & DefaultReturn<AccountType>
  > {
    const { txs, contractsToRegister } = await registerDepositsTxs(
      contracts,
      registerForAccounts,
      this.account,
      opts?.extraAmount
    );
    let hashes;
    if (opts?.executeTransactions || this.opts.executeTxsByDefault) {
      hashes = await executeMultipleTx(this.account, [
        ...(opts?.priorTransactions || []),
        ...txs,
      ]);
    }
    return {
      txs,
      contractsToRegisterWith: contractsToRegister,
      hashes,
    };
  }
}

'''
'''--- ts-packages/malloc-client/lib/near-rexport.ts ---
export * from 'near-api-js'
export * from 'near-api-js/lib/utils'
'''
'''--- ts-packages/malloc-client/lib/storage-deposit.ts ---
import BN from "bn.js";
import { Account, utils } from "near-api-js";
import { AccountId, BigNumberish, Transaction } from "./interfaces";
import { StorageBounds } from "./interfaces/shared/near-standards";
import { MAX_GAS_STR } from "./tx";

// TODO: looks at service/storage in ref ui and just use that
const getStorageBounds = async (
  caller: Account,
  contract: AccountId
): Promise<StorageBounds> => {
  console.log(contract);
  try {
    return await caller.viewFunction(contract, "storage_balance_bounds", {});
  } catch (e) {
    return {
      min: utils.format.parseNearAmount("0.00125") as string,
      max: utils.format.parseNearAmount("0.00125") as string,
    };
  }
};

export const doStorageDeposit = async (
  caller: Account,
  contractAddr: string,
  accountId: string,
  opts?: {
    extraAmount?: BigNumberish;
  }
): Promise<Transaction | null> => {
  // TODO: from where??

  const storageBounds = await getStorageBounds(caller, contractAddr);
  const NEW_ACCOUNT_STORAGE_COST_bn = new BN(storageBounds.min).add(
    new BN(opts?.extraAmount || 0)
  );
  const NEW_ACCOUNT_STORAGE_COST = NEW_ACCOUNT_STORAGE_COST_bn.toString();
  const storageBal = await caller.viewFunction(
    contractAddr,
    "storage_balance_of",
    {
      account_id: accountId,
    }
  );

  if (
    !storageBal ||
    new BN(storageBal?.total || 0).lt(NEW_ACCOUNT_STORAGE_COST_bn)
  ) {
    return {
      receiverId: contractAddr,
      actions: [
        {
          functionCall: {
            methodName: "storage_deposit",
            amount: NEW_ACCOUNT_STORAGE_COST,
            gas: MAX_GAS_STR,
            args: {
              account_id: accountId,
            },
          },
        },
      ],
    };
  } else return null;
};

const registerFtTxsForSingleAccount = async (
  ftAccountIds: string[],
  accountId: string,
  caller: Account,
  extraAmount?: BigNumberish
): Promise<{ txs: Transaction[]; contractsToRegister: AccountId[] }> => {
  const txOptions = await Promise.all(
    ftAccountIds.map((ftAccount) =>
      doStorageDeposit(caller, ftAccount, accountId, { extraAmount })
    )
  );
  const txs: Transaction[] = txOptions.filter(
    (tx) => tx !== null
  ) as Transaction[];
  const contractsToRegister: string[] = ftAccountIds
    .map((token, i) => (txOptions[i] ? token : null))
    .filter((token) => token !== null) as string[];
  return { txs, contractsToRegister };
};

// TODO: use setupFt to get a list of transactions, filter through em
export const registerDepositsTxs = async (
  ftAccountIds: string[],
  accountIds: string[],
  caller: Account,
  extraAmount?: BigNumberish
): Promise<{ txs: Transaction[]; contractsToRegister: AccountId[] }> => {
  const registerResp = await Promise.all(
    accountIds.map((accountId) =>
      registerFtTxsForSingleAccount(
        ftAccountIds,
        accountId,
        caller,
        extraAmount
      )
    )
  );
  const txs = registerResp.map((r) => r.txs).flat();
  const tokensToRegisterDup = registerResp
    .map((r) => r.contractsToRegister)
    .flat();

  const tokensToRegisterSet = new Set(tokensToRegisterDup);
  return { txs, contractsToRegister: Array.from(tokensToRegisterSet) };
};

'''
'''--- ts-packages/malloc-client/lib/tx.ts ---
import BN from "bn.js";
import { baseDecode, serialize } from "borsh";
import { sha256 } from "js-sha256";
import * as nearAPI from "near-api-js";
import {
  Action as NearAction,
  addKey,
  createTransaction as nearCreateTransaction,
  deleteKey,
  functionCallAccessKey,
  signTransaction,
  Transaction as NearTransaction,
} from "near-api-js/lib/transaction";
import { KeyPair, PublicKey } from "near-api-js/lib/utils";
import { functionCall, SCHEMA } from "near-api-js/lib/transaction";
import {
  TxAction,
  AccountId,
  Transaction,
  SpecialAccount,
  SpecialAccountConnectedWallet,
  SpecialAccountType,
  SpecialAccountWithKeyPair,
  TransactionWithPromiseResult,
  TransactionWithPromiseResultFlag,
  ExecuteMultipleTxOpts,
  TxHashesOrUndefined,
} from "./interfaces";
import {
  Account,
  ConnectedWalletAccount,
  Connection,
  Contract,
  utils,
  WalletConnection,
} from "near-api-js";
import { Wallet } from "web3-eth-accounts";
import {
  ExecutionStatus,
  ExecutionStatusBasic,
} from "near-api-js/lib/providers/provider";
import { MallocErrors } from "./errors";
import { SignAndSendTransactionOptions } from "near-api-js/lib/account";

export const MAX_GAS_STR = "300000000000000";
export const MAX_GAS = new BN(MAX_GAS_STR);

// TODO: handle env w/ testnet
const provider = new nearAPI.providers.JsonRpcProvider(
  `https://rpc.testnet.near.org`
);

export const createTransactionKP = async (
  account: SpecialAccountWithKeyPair,
  receiverId: AccountId,
  actions: NearAction[],
  nonceOffset = 1
) => {
  const publicKey = account.keypair.getPublicKey();

  const accessKey = await provider.query<any>(
    `access_key/${account.accountId}/${publicKey.toString()}`,
    ""
  );
  const nonce = accessKey.nonce + nonceOffset;
  const recentBlockHash = nearAPI.utils.serialize.base_decode(
    accessKey.block_hash
  );
  return nearAPI.transactions.createTransaction(
    account.accountId,
    account.keypair.getPublicKey(),
    receiverId,
    nonce,
    actions,
    recentBlockHash
  );
};

export const createTransactionWalletAccount = async (
  account: ConnectedWalletAccount,
  receiverId: AccountId,
  actions: NearAction[],
  nonceOffset = 1
): Promise<nearAPI.transactions.Transaction> => {
  const localKey = await account.connection.signer.getPublicKey(
    account.accountId,
    account.connection.networkId
  );
  let accessKey = await (
    account as ConnectedWalletAccount
  ).accessKeyForTransaction(receiverId, actions, localKey);
  if (!accessKey) {
    throw new Error(
      `Cannot find matching key for transaction sent to ${receiverId}`
    );
  }

  const block = await account.connection.provider.block({
    finality: "final",
  });
  const blockHash = baseDecode(block.header.hash);

  const publicKey = PublicKey.from(accessKey.public_key);
  const nonce = accessKey.access_key.nonce + nonceOffset;

  return nearCreateTransaction(
    account.accountId,
    publicKey,
    receiverId,
    nonce,
    actions,
    blockHash
  );
};

const signAndSendKPSpecified = async (
  txs: nearAPI.transactions.Transaction[],
  account: SpecialAccount,
  kp: KeyPair
) => {
  const lazyTxCalls = txs.map((tx) => {
    tx.publicKey = new PublicKey(kp.getPublicKey());
    const serializedTx = tx.encode();
    const serializedTxHash = new Uint8Array(sha256.array(serializedTx));

    const signature = kp.sign(serializedTxHash);
    const signedTransaction = new nearAPI.transactions.SignedTransaction({
      transaction: tx,
      signature: new nearAPI.transactions.Signature({
        keyType: tx.publicKey.keyType,
        data: signature.signature,
      }),
    });

    // sends transaction to NEAR blockchain via JSON RPC call and records the result
    return async () => {
      const ret = await provider.sendTransaction(signedTransaction);
      return ret.transaction.hash;
    };
  });

  const sleepMS = 20;
  const txHashProms: Promise<string>[] = [];
  for (let i = 0; i < lazyTxCalls.length; i++) {
    await new Promise<void>((res, rej) => {
      setTimeout(() => {
        txHashProms.push(lazyTxCalls[i]());
        res();
      }, sleepMS);
    });
  }

  return await Promise.all(txHashProms);
};

export const signAndSendKP = async (
  txs: nearAPI.transactions.Transaction[],
  account: SpecialAccountWithKeyPair
): Promise<string[]> => {
  return signAndSendKPSpecified(txs, account, account.keypair);
};

const actionToNearAction = (action: TxAction): NearAction => {
  if (action.functionCall) {
    return functionCall(
      action.functionCall.methodName,
      action.functionCall.args || {},
      new BN(action.functionCall.gas || MAX_GAS),
      new BN(action.functionCall.amount || 0)
    );
  } else if (action.functionCallAccessKey) {
    const accessKey = functionCallAccessKey(
      action.functionCallAccessKey.accessKey.receiverId,
      action.functionCallAccessKey.accessKey.methodNames,
      // new BN(action.functionCallAccessKey.accessKey.allowance)
    );
    return addKey(
      PublicKey.from(action.functionCallAccessKey.publicKey),
      accessKey
    );
  } else if (action.deleteKey) {
    return deleteKey(action.deleteKey.publicKey);
  }
  throw MallocErrors.EXPECTED_TX_ACTION_PROPERTY();
};

// TODO: how can we have the tx hashes here... maybe something w/ callback url??
const signAndSendTxsWalletConnect = async (
  txs: NearTransaction[],
  account: SpecialAccountConnectedWallet,
  callbackUrl?: string
): Promise<void> => {
  account.walletConnection.requestSignTransactions({
    transactions: txs,
    callbackUrl,
  });
};

// TODO: is there a better way of doing this?
/**
 * signAndSendTxsWalletConnectNoAttachedDeposit - send transactions without an attached amount
 * This is useful for sending transactions without a popup
 */
// TODO: this is really slow and should be parallelized somehow, maybe either reaching out to near team or having malloc add a key pair
// const signAndSendTxFunctionCallsWalletConnectNoDeposit = async (
//   txs: NearTransaction[],
//   account: SpecialAccountConnectedWallet,
// ): Promise<string[]> => {
//   const signAndSendActionsInTx = async (
//     tx: NearTransaction
//   ): Promise<string[]> => {
//     return await Promise.all(
//       tx.actions.map(async (action) => {
//         if (!action.functionCall) {
//           throw "Only function calls are allowed when signing and sending a tx to malloc";
//         }
//         const ret = await account.functionCall({
//           contractId: tx.receiverId,
//           methodName: action.functionCall.methodName,
//           args: action.functionCall.args,
//           gas: action.functionCall.gas,
//           attachedDeposit: action.functionCall.deposit,
//         });
//         return ret.transaction.hash;
//       })
//     );
//   };
//   let txHashes = [] as string[];
//   for (let i = 0; i < txs.length; i++) {
//     txHashes.push(...(await signAndSendActionsInTx(txs[i])));
//   }
//   return txHashes;
// };

type ExecuteMultiTxNoDepositOpts<
  T extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
> = {
  keyPair?: KeyPair;
} & ExecuteMultipleTxOpts<T>;

export const executeMultipleTxNoDeposit = async <
  T extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
>(
  signerAccount: T,
  transactions: Transaction[],
  opts?: ExecuteMultiTxNoDepositOpts<T>
): Promise<string[]> => {
  if (
    signerAccount.type === SpecialAccountType.WebConnected &&
    (!opts || !opts?.keyPair)
  )
    throw MallocErrors.EXPECTED_A_MALLOC_ACCESS_KEY(
      "Sending a tx with no deposit"
    );
  const signAndSendTxsMethod =
    signerAccount.type === SpecialAccountType.KeyPair
      ? signAndSendKP
      : (txs: NearTransaction[], account: SpecialAccount) =>
          signAndSendKPSpecified(
            txs,
            account,
            (opts as ExecuteMultiTxNoDepositOpts<T>).keyPair as KeyPair
          );
  return (await _executeMultipleTx<T>(
    signerAccount,
    transactions,
    //@ts-ignore
    signAndSendTxsMethod,
    opts
  )) as string[];
};

export const executeMultipleTx = async <
  T extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
>(
  signerAccount: T,
  transactions: Transaction[],
  opts?: ExecuteMultipleTxOpts<T>
): Promise<TxHashesOrUndefined<T>> => {
  const signAndSendTxsMethod =
    signerAccount.type === SpecialAccountType.KeyPair
      ? signAndSendKP
      : signAndSendTxsWalletConnect;
  return (await _executeMultipleTx<T>(
    signerAccount,
    transactions,
    //@ts-ignore
    signAndSendTxsMethod,
    opts
  )) as TxHashesOrUndefined<T>;
};

// TODO: have signerAccount be some idiomatic thingy where ConnectedWalletAccount is wrapped in interface
const _executeMultipleTx = async <
  T extends SpecialAccountConnectedWallet | SpecialAccountWithKeyPair
>(
  signerAccount: T,
  transactions: Transaction[],
  signAndSendTxsMethod: (
    txs: NearTransaction[],
    account: SpecialAccount,
    callbackUrl?: string
  ) => Promise<TxHashesOrUndefined<T> | string[]>,
  opts?: ExecuteMultipleTxOpts<T>
): Promise<TxHashesOrUndefined<T> | string[]> => {
  const createTransaction =
    signerAccount.type === SpecialAccountType.KeyPair
      ? createTransactionKP
      : createTransactionWalletAccount;

  const nearTransactions = await Promise.all(
    transactions.map((t, i) => {
      return createTransaction(
        signerAccount as any,
        t.receiverId,
        t.actions.map(actionToNearAction),
        i + 1
      );
    })
  );
  console.log("Transactions", JSON.stringify(nearTransactions));
  return (await signAndSendTxsMethod(
    nearTransactions,
    signerAccount as any,
    opts?.callbackUrl || ""
  )) as TxHashesOrUndefined<T>;
};

export const resolveTransactionsWithPromise = async (
  hashes: string[],
  accountId: string
): Promise<TransactionWithPromiseResult[]> => {
  const resolveTxWithPromise = async (hash: string) => {
    const res = await provider.txStatusReceipts(
      new Uint8Array(utils.serialize.base_decode(hash)),
      accountId
    );
    return res.receipts_outcome.map((outcome) => outcome.outcome.status);
  };
  const parseResult = (
    result: ExecutionStatus | ExecutionStatusBasic
  ): TransactionWithPromiseResult => {
    const isResultSuccess =
      (result as ExecutionStatus)["SuccessValue"] === "" ||
      (result as ExecutionStatus)["SuccessValue"] ||
      (result as ExecutionStatus)["SuccessReceiptId"] === "" ||
      (result as ExecutionStatus)["SuccessReceiptId"];

    if (isResultSuccess) {
      return {
        flag: TransactionWithPromiseResultFlag.SUCCESS,
      };
    }
    console.log(JSON.stringify(result));
    return {
      // TODO: add some reason or something for this!!
      flag: TransactionWithPromiseResultFlag.FAILURE,
      message:
        JSON.stringify(
          (result as ExecutionStatus)["Failure"]?.error_message ||
            (result as any).Failure?.ActionError
        ) ?? undefined,
    };
  };

  const resultStatuses: (ExecutionStatus | ExecutionStatusBasic)[] = (
    await Promise.all(hashes.map(resolveTxWithPromise))
  ).flat();
  return resultStatuses.map(parseResult);
};

export const resolveTransactionsReducedWithPromises = async (
  hashes: string[],
  accountId: string
): Promise<TransactionWithPromiseResult> => {
  {
    const results = await resolveTransactionsWithPromise(hashes, accountId);
    results.forEach((result) => {
      if (result.flag !== "success")
        throw MallocErrors.TRANSACTION_PROMISE_FAILED(result.message);
    });
    return {
      flag: TransactionWithPromiseResultFlag.SUCCESS,
    };
  }
};

'''
'''--- ts-packages/malloc-client/lib/utils.ts ---
import BN from "bn.js";

export const sumSplits = (splits: number[]): BN =>
  splits.reduce((x, y) => new BN(x).add(new BN(y)), new BN(0)) as BN;

export const isRunningBrowser = (): boolean =>
  typeof (globalThis as any).window !== "undefined";

'''
'''--- ts-packages/malloc-client/package.json ---
{
  "name": "@malloc/sdk",
  "version": "0.0.0",
  "description": "> TODO: description",
  "author": "Lev Stambler <levstamb@gmail.com>",
  "homepage": "https://github.com/Lev-Stambler/malloc-near-2#readme",
  "license": "ISC",
  "main": "dist/malloc-client.js",
  "directories": {
    "lib": "lib",
    "test": "__tests__"
  },
  "files": [
    "lib"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Lev-Stambler/malloc-near-2.git"
  },
  "scripts": {
    "test": "jest test --runInBand"
  },
  "bugs": {
    "url": "https://github.com/Lev-Stambler/malloc-near-2/issues"
  },
  "dependencies": {
    "borsh": "^0.4.0",
    "js-sha256": "^0.9.0",
    "near-api-js": "~0.42.0",
    "near": "^0.2.2",
    "regenerator-runtime": "~0.13.5"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "devDependencies": {
    "jest": "^27.0.6",
    "@malloc/testing-utils": "file:../testing-utils",
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-typescript": "^7.14.5",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.8",
    "babel-jest": "~26.6.2",
    "bs58": "^4.0.1",
    "env-cmd": "~10.1.0",
    "jest-environment-node": "~26.6.2",
    "nodemon": "~2.0.3",
    "typescript": "^4.3.4"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/../../test-files/jest.init.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/src/",
      "<rootDir>/contract/",
      "<rootDir>/node_modules/"
    ]
  }
}

'''
'''--- ts-packages/malloc-client/tsconfig.json ---
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "outDir": "./dist"
  },
  "include": ["./lib"]
}

'''
'''--- ts-packages/malloc-client/tsconfig.spec.json ---
{
  "extends": "../../tsconfig.spec.json",
  "include": ["**/*.spec.ts", "**/*.d.ts", "../../testing-utils/**/*.ts"]
}

'''
'''--- ts-packages/malloc-frontend/README.md ---
# `malloc-frontend`

> TODO: description

## Usage

```
const mallocFrontend = require('malloc-frontend');

// TODO: DEMONSTRATE API
```

'''
'''--- ts-packages/malloc-frontend/package.json ---
{
  "name": "malloc-frontend",
  "version": "0.1.0",
  "license": "UNLICENSED",
  "scripts": {
    "build": "npm run build:web",
    "build:web": "parcel build src/index.html --public-url ./",
    "deploy:pages": "gh-pages -d dist/",
    "start": "echo The app is starting! It will automatically open in your browser when ready && env-cmd -f ../../rust/packages/contract/neardev/dev-account.env parcel src/index.html --open",
  },
  "devDependencies": {
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-react": "~7.13.13",
    "@babel/preset-typescript": "^7.14.5",
    "@baf-wallet/near": "^0.0.22",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.8",
    "babel-jest": "~26.6.2",
    "bs58": "^4.0.1",
    "env-cmd": "~10.1.0",
    "gh-pages": "~3.1.0",
    "jest": "~26.6.2",
    "jest-environment-node": "~26.6.2",
    "lerna": "^4.0.0",
    "near-cli": "~1.6.0",
    "nodemon": "~2.0.3",
    "parcel-bundler": "~1.12.4",
    "react-test-renderer": "~17.0.1",
    "shelljs": "~0.8.4",
    "typescript": "^4.3.4"
  },
  "dependencies": {
    "@material-ui/core": "^4.12.3",
    "@material-ui/lab": "^4.0.0-alpha.60",
    "bn.js": "^5.2.0",
    "formik": "^2.2.9",
    "http-errors": "^1.8.0",
    "near-api-js": "~0.42.0",
    "@malloc/sdk": "file:../malloc-client",
    "react": "~17.0.1",
    "react-dom": "~17.0.1",
    "react-flow-renderer": "^9.6.6",
    "react-hook-form": "^7.12.2",
    "react-stores": "^5.2.0",
    "regenerator-runtime": "~0.13.5"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- ts-packages/malloc-frontend/src/assets/logo-black.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#24272a"/></svg>
'''
'''--- ts-packages/malloc-frontend/src/assets/logo-white.svg ---
<svg viewBox="0 0 288 288" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="76.81" x2="211.16" y1="211.17" y2="76.81"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><path d="m88.46 216a16.45 16.45 0 0 0 12.46-5.71l112.56-130.57a16.42 16.42 0 0 0 -13.94-7.72 16.46 16.46 0 0 0 -12.41 5.65l-113.13 129.8a16.46 16.46 0 0 0 14.46 8.55z" fill="url(#a)"/><path d="m88.46 216a16.46 16.46 0 0 0 7.54-1.83v-109l87.45 104.94a16.44 16.44 0 0 0 12.64 5.89h3.45a16.46 16.46 0 0 0 16.46-16.46v-111.08a16.46 16.46 0 0 0 -16.46-16.46 16.36 16.36 0 0 0 -7.54 1.81v109.05l-87.45-104.94a16.44 16.44 0 0 0 -12.64-5.92h-3.45a16.46 16.46 0 0 0 -16.46 16.46v111.08a16.46 16.46 0 0 0 16.46 16.46z" fill="#fff"/></svg>
'''
'''--- ts-packages/malloc-frontend/src/components/FlowChart/flowchart.css ---
.flow--wrapper {
  border: 1px black solid;
}

.menu {
  z-index: 100;
  display: grid;
  gap: 1em;
  grid-template-columns: repeat(2, 1fr);
  width: 100%;
  justify-content: center;
  padding-top: 1em;
  justify-items: center;
}

.menu .menu--item {
  padding: 1em;
  border: black solid 1px;
}

.node {
  padding: 1rem;
  border: black solid 1px;
  border-radius: 1rem;
}

.node.malloc-call {
  background: rgb(236, 172, 172);
}

form .submit--cta {
  grid-column: 1 / span 4;
}

form label {
  font-size: 0.5em;
}

.menu--form {
  display: grid;
  gap: 0.5em;
  justify-items: center;
  grid-template-columns: repeat(2, auto);
}

.submit--cta {
  width: min-content;
  border-radius: 1rem;
  background: rgb(72, 72, 255);
  color: white;
}

'''
'''--- ts-packages/malloc-frontend/src/global.css ---
* {
  box-sizing: border-box;
}

html {
  --bg: #efefef;
  --fg: #1e1e1e;
  --gray: #555;
  --light-gray: #ccc;
  --shadow: #e6e6e6;
  --success: rgb(90, 206, 132);
  --primary: #FF585D;
  --secondary: #0072CE;

  background-color: var(--bg);
  color: var(--fg);
  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;
  font-size: calc(0.9em + 0.5vw);
  line-height: 1.3;
}

body {
  margin: 0;
  padding: 1em;
}

main {
  margin: 0 auto;
  width: 100%;
}

h1 {
  background-image: url(assets/logo-black.svg);
  background-position: center 1em;
  background-repeat: no-repeat;
  background-size: auto 1.5em;
  margin-top: 0;
  padding: 3.5em 0 0.5em;
  text-align: center;
}

a,
.link {
  color: var(--primary);
  text-decoration: none;
}
a:hover,
a:focus,
.link:hover,
.link:focus {
  text-decoration: underline;
}
a:active,
.link:active {
  color: var(--secondary);
}

button, input {
  font: inherit;
  outline: none;
}

button {
  background-color: var(--secondary);
  border-radius: 5px;
  border: none;
  color: #efefef;
  cursor: pointer;
  padding: 0.3em 0.75em;
  transition: transform 30ms;
}
button:hover, button:focus {
  box-shadow: 0 0 10em rgba(255, 255, 255, 0.2) inset;
}
button:active {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.1) inset;
}
button.link {
  background: none;
  border: none;
  box-shadow: none;
  display: inline;
}
[disabled] button, button[disabled] {
  box-shadow: none;
  background-color: var(--light-gray);
  color: gray;
  cursor: not-allowed;
  transform: none;
}
[disabled] button {
  text-indent: -900em;
  width: 2em;
  position: relative;
}
[disabled] button:after {
  content: " ";
  display: block;
  width: 0.8em;
  height: 0.8em;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: var(--fg) transparent var(--fg) transparent;
  animation: loader 1.2s linear infinite;
  position: absolute;
  top: 0.45em;
  right: 0.5em;
}
@keyframes loader {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}

fieldset {
  border: none;
  padding: 2em 0;
}

input {
  background-color: var(--shadow);
  border: none;
  border-radius: 5px 0 0 5px;
  caret-color: var(--primary);
  color: inherit;
  padding: 0.25em 1em;
}
input::selection {
  background-color: var(--secondary);
  color: #efefef;
}
input:focus {
  box-shadow: 0 0 10em rgba(0, 0, 0, 0.02) inset;
}

code {
  color: var(--gray);
}

li {
  padding-bottom: 1em;
}

aside {
  animation: notify ease-in-out 10s;
  background-color: var(--shadow);
  border-radius: 5px;
  bottom: 0;
  font-size: 0.8em;
  margin: 1em;
  padding: 1em;
  position: fixed;
  transform: translateY(10em);
  right: 0;
}
aside footer {
  display: flex;
  font-size: 0.9em;
  justify-content: space-between;
  margin-top: 0.5em;
}
aside footer *:first-child {
  color: var(--success);
}
aside footer *:last-child {
  color: var(--gray);
}
@keyframes notify {
  0% { transform: translateY(10em) }
  5% { transform: translateY(0) }
  95% { transform: translateY(0) }
  100% { transform: translateY(10em) }
}

@media (prefers-color-scheme: dark) {
  html {
    --bg: #1e1e1e;
    --fg: #efefef;
    --gray: #aaa;
    --shadow: #2a2a2a;
    --light-gray: #444;
  }
  h1 {
    background-image: url(assets/logo-white.svg);
  }
  input:focus {
    box-shadow: 0 0 10em rgba(255, 255, 255, 0.02) inset;
  }
}

'''
'''--- ts-packages/malloc-frontend/src/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="./assets/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" href="./assets/favicon.ico" />
    <title>Welcome to NEAR with React</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
    <script src="./index.tsx"></script>
  </body>
</html>

'''
'''--- ts-packages/malloc-frontend/src/main.test.js ---
beforeAll(async function () {
  // NOTE: nearlib and nearConfig are made available by near-cli/test_environment
  // const near = await nearlib.connect(nearConfig)
  // window.accountId = nearConfig.contractName
  // window.contract = await near.loadContract(nearConfig.contractName, {
  //   viewMethods: ['get_greeting'],
  //   changeMethods: [],
  //   sender: window.accountId
  // })

  // window.walletConnection = {
  //   requestSignIn() {
  //   },
  //   signOut() {
  //   },
  //   isSignedIn() {
  //     return true
  //   },
  //   getAccountId() {
  //     return window.accountId
  //   }
  // }
})

// test('get_greeting', async () => {
//   const message = await window.contract.get_greeting({ account_id: window.accountId })
//   expect(message).toEqual('Hello')
// })

'''
'''--- ts-packages/malloc-frontend/src/types.d.ts ---
import type { Contract, WalletConnection } from "near-api-js";
import {
  SpecialAccountConnectedWallet,
  MallocClient,
} from "../../malloc-client/lib/malloc-client";

type BigNumberish = number | string;
type AccountId = string;

// Enum endpoint
interface Endpoint {
  SimpleTransfer?: { recipient: AccountId };
  FTTransfer?: { recipient: AccountId };
  WCall?: {
    contract_id: AccountId;
    json_args: string;
    gas: number;
    attached_amount: number;
  };
}

interface SerializedSplitter {
  actions: Endpoint[];
  splits: BigNumberish[];
  ft_contract_id?: AccountId;
}

export interface MallocContract extends Contract {
  run_ephemeral: (
    args: { splitter: SerializedSplitter; amount?: BigNumberish },
    gas?: BigNumberish,
    attachedDeposit?: BigNumberish
  ) => Promise<any>;
}
declare global {
  interface Window {
    contract: MallocContract;
    walletConnection: WalletConnection;
    account: SpecialAccountConnectedWallet;
    accountId: AccountId;
    mallocClient: MallocClient;
    nearInitPromise: Promise<void>;
  }
}

'''
'''--- ts-packages/malloc-frontend/src/wallet/login/index.html ---
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
</head>
<body style="background: #fff; margin-top: 3em">
  <div>For local account login, Please run the following command in NEAR CLI, then enter account id here.
  </div>
  <div>
      <code id="shell-command"></code>
  </div>
  <input type="text" id="accountId" name="accountId" placeholder="Account id"></input>
  <button type="button" onClick="done()">done</button>
  <script>
    const currentUrl = new URL(window.location.href);
    const message = `NODE_ENV=local near create_account {newAccountId} --masterAccount {masterAccountId} --publicKey ${currentUrl.searchParams.get('public_key')} --initialAmount 10000000000000000000`;
    document.getElementById('shell-command').innerText = message;

    function done() {
      const successUrl = new URL(currentUrl.searchParams.get('success_url'));
      successUrl.searchParams.set('account_id', document.getElementById('accountId').value);
      successUrl.searchParams.set('public_key', currentUrl.searchParams.get('public_key'));
      window.location.assign(successUrl.toString());
    }
  </script>
</body>
</html>
'''
'''--- ts-packages/malloc-frontend/tsconfig.json ---
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "outDir": "./dist",
    "lib": ["DOM"],
    "jsx": "react-jsx",
    "types": [
      "./src/types.d.ts"
    ] /* Type declaration files to be included in compilation. */,
    "paths": {
      "@malloc/sdk": ["../malloc-client/lib/malloc-client.ts"]
    }
  },
  "include": ["./src", "../malloc-client/lib"]
}

'''
'''--- ts-packages/malloc-ops/README.md ---
# Malloc Ops 
Malloc Ops is like the assembly language of Malloc 

## Example program
```
```
'''
'''--- ts-packages/malloc-ops/__tests__/basic-ops.spec.ts ---
import { MallocClient } from "../../malloc-client/lib/malloc-client";
import { SpecialAccountWithKeyPair } from "../../malloc-client/lib/interfaces";
import * as TestingUtils from "../../testing-utils/lib/testing-utils";
import {
  compile,
  Construction,
  FtTransferCallToMallocCallAction,
  MallocCallAction,
} from "../lib/malloc-ops";
import { BindParameter } from "../lib/parameter";

const BLACKWHOLE = TestingUtils.getMallocCallBlackwholeContract();
const PASSTHROUGH = TestingUtils.getMallocCallPassthroughContract();

let malloc: MallocClient<SpecialAccountWithKeyPair>;
const amountWNearPerTest = 100000;
const NUMB_TESTS = 1;
let depositTx: string;

describe("using the basic Action, Group, Construction, and Compile ops to create a construction", () => {
  jest.setTimeout(60 * 1000);

  beforeAll(async () => {
    const masterAccount = await TestingUtils.getDefaultTesterAccountNear();
    // const testerAccount = await TestingUtils.newRandAccount(masterAccount);
    const wrappedTesterAccount = masterAccount;
    malloc = new MallocClient(
      wrappedTesterAccount,
      TestingUtils.getMallocContract()
    );
    await malloc.registerAccountDeposits(
      [TestingUtils.WRAP_TESTNET_CONTRACT],
      [
        TestingUtils.getMallocContract(),
        wrappedTesterAccount.accountId,
        BLACKWHOLE,
        PASSTHROUGH,
      ]
    );
    await TestingUtils.setupWNearAccount(
      TestingUtils.WRAP_TESTNET_CONTRACT,
      wrappedTesterAccount.accountId,
      wrappedTesterAccount,
      true,
      amountWNearPerTest * NUMB_TESTS
    );
    depositTx = await malloc.deposit(
      (amountWNearPerTest * NUMB_TESTS).toString(),
      TestingUtils.WRAP_TESTNET_CONTRACT
    );
  });

  it("Should create a two level construction with a ft transfer and then 2 blackwholes", async () => {
    /////////////////////////////////////////////////////
    const coolBlackWhole = MallocCallAction({
      mallocCallContractID: BLACKWHOLE,
      callArgNames: ["log_message"],
    });
    const coolPassThrough = MallocCallAction({
      mallocCallContractID: PASSTHROUGH,
      prefilledParameters: {
        log_message: "HEEE",
      },
      callArgNames: ["log_message"],
    });
    const ftTransfer = FtTransferCallToMallocCallAction({
      mallocCallContractID: PASSTHROUGH,
    });

    const constructionPassThroughSimp = Construction({
      in: coolPassThrough({
        myCoolPassThroughToken: BindParameter("tokenIn"),
      }),
      out: [
        {
          token_id: "wrap.testnet",
          next: [
            {
              element: ftTransfer(),
              fraction: 9,
            },
            {
              element: coolBlackWhole({
                log_message: BindParameter("fromTheTop"),
              }),
              fraction: 1,
            },
          ],
        },
      ],
    });

    const construction = Construction({
      in: ftTransfer({ tokenIn: "wrap.testnet" }),
      out: [
        {
          token_id: BindParameter("parameterTokenId"),
          next: [
            {
              element: constructionPassThroughSimp({ tokenIn: "wrap.testnet" }),
              fraction: 1,
            },
            {
              element: coolBlackWhole({
                log_message: "Nishad is the mans",
              }),
              fraction: "fractionBlackwhole",
            },
          ],
        },
      ],
    });
    const toRun = construction({
      fractionBlackwhole: 10,
      fromTheTop: "Lev is the mans",
      parameterTokenId: "wrap.testnet",
    });
    //////////////////////////////////////////////////

    const inst = await compile({
      initialConstructionOrActions: [{ element: toRun, fraction: 1 }],
    });
    console.log(JSON.stringify(inst(amountWNearPerTest.toString())));
    const txs = await malloc.runEphemeralConstruction(
      inst(amountWNearPerTest.toString())
    );
    await malloc.resolveTransactions(txs);
  });
});

// TODO: finish up instr and running
// Then think of some way that makes sense to have malloc calls have some sort of typing
// Rn everything is untyped an ugly, static typing for the GenericParameters would be so,
// damn, nice... (it could be having GenericType take in a T and then having the function builder take in a generic

'''
'''--- ts-packages/malloc-ops/__tests__/construction-internal.spec.ts ---
import { _InternalConstruction } from "../lib/internal/construction-internal";

const ACTION_FT_TRANSFER = {
  FtTransferCallToMallocCall: {
    malloc_call_id: "fake.testnet",
    token_id: "wrap.testnet",
  },
};

const internalConstructionToObj = (i: _InternalConstruction) => {
  return {
    actions: i.actions,
    nextActionsIndices: i.nextActionsIndices,
    nextActionsSplits: i.nextActionsSplits,
    initialIndices: i.initialIndices,
  };
};

describe("Test instruction internal", () => {
  it("Should successfully unroll an action with not outputs", () => {
    const expected = {
      actions: [ACTION_FT_TRANSFER],
      nextActionsIndices: [[]],
      nextActionsSplits: [[]],
      initialIndices: [0],
    };
    const internalConst1 = _InternalConstruction.fromConstructionInOut(
      ACTION_FT_TRANSFER,
      null
    );

    const internalConst2 = _InternalConstruction.fromConstructionInOut(
      ACTION_FT_TRANSFER,
      []
    );

    expect(expected).toEqual(internalConstructionToObj(internalConst1));
    expect(expected).toEqual(internalConstructionToObj(internalConst2));
  });

  it("Should successfully unroll in action and outputs into internal construction for a height 2 construction", () => {
    const expected1 = {
      actions: [ACTION_FT_TRANSFER, ACTION_FT_TRANSFER, ACTION_FT_TRANSFER],
      nextActionsIndices: [[], [], [[0, 1]]],
      nextActionsSplits: [[], [], [[1, 1]]],
      initialIndices: [2],
    };

    const c1 = _InternalConstruction.fromConstructionInOut(ACTION_FT_TRANSFER, [
      {
        token_id: "wrap.testnet",
        next: [
          { element: ACTION_FT_TRANSFER, fraction: 1 },
          { element: ACTION_FT_TRANSFER, fraction: 1 },
        ],
      },
    ]);
    expect(expected1).toEqual(internalConstructionToObj(c1));
  });

  it("Should successfully unroll in action and outputs into internal construction for a construction made up of height 2 constructions", () => {
    const expectedWrappedWrapped = {
      actions: [
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
      ],
      nextActionsSplits: [
        [],
        [],
        [[1, 1]],
        [],
        [],
        [[1, 1]],
        [],
        [],
        [[1, 1]],
        [],
        [],
        [[1, 1]],
        [
          [1, 1],
          [1, 1],
        ],
      ],
      nextActionsIndices: [
        [],
        [],
        [[0, 1]],
        [],
        [],
        [[3, 4]],
        [],
        [],
        [[6, 7]],
        [],
        [],
        [[9, 10]],
        [
          [2, 5],
          [4, 7],
        ],
      ],
      initialIndices: [12],
    };

    const expectedWrapped = {
      actions: [
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
      ],
      nextActionsIndices: [[], [], [[0, 1]], [], [], [[3, 4]], [[2, 5]]],
      nextActionsSplits: [[], [], [[1, 1]], [], [], [[1, 1]], [[1, 1]]],
      initialIndices: [6],
    };

    const c1 = _InternalConstruction.fromConstructionInOut(ACTION_FT_TRANSFER, [
      {
        token_id: "wrap.testnet",
        next: [
          { element: ACTION_FT_TRANSFER, fraction: 1 },
          { element: ACTION_FT_TRANSFER, fraction: 1 },
        ],
      },
    ]);

    const cWrapped = _InternalConstruction.fromConstructionInOut(
      ACTION_FT_TRANSFER,
      [
        {
          token_id: "wrap.testnet",
          next: [
            { element: c1, fraction: 1 },
            { element: c1, fraction: 1 },
          ],
        },
      ]
    );

    const cWrappedWrapped = _InternalConstruction.fromConstructionInOut(
      ACTION_FT_TRANSFER,
      [
        {
          token_id: "wrap.testnet",
          next: [
            { element: c1, fraction: 1 },
            { element: c1, fraction: 1 },
          ],
        },
        {
          token_id: "wrap2.testnet",
          next: [
            { element: c1, fraction: 1 },
            { element: c1, fraction: 1 },
          ],
        },
      ]
    );
    expect(expectedWrapped).toEqual(internalConstructionToObj(cWrapped));
    expect(expectedWrappedWrapped).toEqual(
      internalConstructionToObj(cWrappedWrapped)
    );
  });

  it("Should merge internal constructions and have a list of elements more than 1 of initial indices", () => {
    const expected1 = {
      actions: [
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
        ACTION_FT_TRANSFER,
      ],
      nextActionsIndices: [
        [],
        [],
        [[0, 1]],
        [],
        [],
        [[3, 4]],
        [],
        [],
        [[6, 7]],
      ],
      nextActionsSplits: [[], [], [[1, 1]], [], [], [[1, 1]], [], [], [[1, 1]]],
      initialIndices: [2, 5, 8],
    };

    const c1 = _InternalConstruction.fromConstructionInOut(ACTION_FT_TRANSFER, [
      {
        token_id: "wrap.testnet",
        next: [
          { element: ACTION_FT_TRANSFER, fraction: 1 },
          { element: ACTION_FT_TRANSFER, fraction: 1 },
        ],
      },
    ]);
    const merged = _InternalConstruction.mergeMulti([c1, c1, c1]);
    expect(expected1).toEqual(internalConstructionToObj(merged));
  });

  it("Should work to create a two level construction without specifying next tokens", () => {
    const internalConst3 = _InternalConstruction.fromConstructionInOut(
      ACTION_FT_TRANSFER,
      [
        {
          next: [
            {
              element: ACTION_FT_TRANSFER,
              fraction: 1,
            },
          ],
        },
      ]
    );
    const expected = {
      actions: [
        {
          FtTransferCallToMallocCall: {
            malloc_call_id: "fake.testnet",
            token_id: "wrap.testnet",
          },
        },
        {
          FtTransferCallToMallocCall: {
            malloc_call_id: "fake.testnet",
            token_id: "wrap.testnet",
          },
        },
      ],
      nextActionsIndices: [[], [[0]]],
      nextActionsSplits: [[], [[1]]],
      initialIndices: [1],
    };
    expect(internalConstructionToObj(internalConst3)).toEqual(expected);
  });

  it("Should throw if the output token has an empty array", () => {
    try {
      const internalConst3 = _InternalConstruction.fromConstructionInOut(
        ACTION_FT_TRANSFER,
        [{ token_id: "wrap.testnet", next: [] }]
      );
      expect(false).toBe(true);
    } catch (e) {
      expect(e.toString()).toBe(
        "Expected the outputs to have at least 1 following action or construction"
      );
    }
  });
});

'''
'''--- ts-packages/malloc-ops/__tests__/params-internal.spec.ts ---
import {
  ActionOutputsForConstruction,
  GenericParameters,
} from "../lib/interfaces";
import { MallocCallAction } from "../lib/malloc-ops";
import { _InternalConstruction } from "../lib/internal/construction-internal";
import {
  fillFractionSplitsAndToken,
  resolveParameters,
} from "../lib/internal/parameter-replacement-internal";
import { BindParameter } from "../lib/parameter";

const ACTION_FT_TRANSFER = {
  FtTransferCallToMallocCall: {
    malloc_call_id: "fake.testnet",
    token_id: "wrap.testnet",
  },
};

const internalConstructionToObj = (i: _InternalConstruction) => {
  return {
    actions: i.actions,
    nextActionsIndices: i.nextActionsIndices,
    nextActionsSplits: i.nextActionsSplits,
  };
};

describe("Test internal parameter replacement", () => {
  it("Should resolve the binded parameters in a child", () => {
    const params: GenericParameters = {
      tokenIn: "X",
      other: "Y",
      final: BindParameter("AA"),
    };
    const parentParameters: GenericParameters = {
      AA: "COOL BOY",
    };
    const resolved = resolveParameters(params, parentParameters);
    expect(resolved).toEqual({
      AA: "COOL BOY",
      tokenIn: "X",
      other: "Y",
      final: "COOL BOY",
    });
  });

  it("Should resolve a binded parameter in a grandchild", () => {
    const params: GenericParameters = {
      tokenIn: "X",
      other: "Y",
      final: BindParameter("AA"),
    };
    const parentParameters: GenericParameters = {
      XX: "COOL BOY",
    };
    const grandParentParameters: GenericParameters = {
      AA: "COOL BOY: electric boogala",
    };
    const resolved = resolveParameters(
      params,
      resolveParameters(parentParameters, grandParentParameters)
    );
    expect(resolved).toEqual({
      AA: "COOL BOY: electric boogala",
      XX: "COOL BOY",
      tokenIn: "X",
      other: "Y",
      final: "COOL BOY: electric boogala",
    });
  });

  it("Should fail because a binded parameter was not found in the parent", () => {
    try {
      resolveParameters({ a: BindParameter("A") }, {});
      expect(false).toBeTruthy();
    } catch (error) {
      expect(error).toEqual(
        `Expected the parameter a to have parameter A in its parent's parameters`
      );
    }
  });
});

describe("Test fill fraction and splits", () => {
  it("Should fill a token out which is a binded value", () => {
    const out: ActionOutputsForConstruction = [
      {
        token_id: BindParameter("G"),
        next: [],
      },
    ];
    const filled = fillFractionSplitsAndToken(out, { G: "tok.testnet" });
    expect(filled).toEqual([{ next: [], token_id: "tok.testnet" }]);
  });

  it("Should fill a parameter in the next item", () => {
    {
      const out: ActionOutputsForConstruction = [
        {
          token_id: "token",
          next: [
            {
              element: MallocCallAction({
                mallocCallContractID: "fake",
                callArgNames: ["lev"],
                prefilledParameters: { tokenIn: "l" },
              })(),
              fraction: "1",
            },
          ],
        },
      ];
      const filled = fillFractionSplitsAndToken(out, { lev: "is fun" });
      expect(filled).toEqual([
        {
          token_id: "token",
          next: [
            {
              element: MallocCallAction({
                mallocCallContractID: "fake",
                prefilledParameters: { tokenIn: "l" },
                callArgNames: ["lev"],
              })()({ lev: "is fun" }),
              fraction: "1",
            },
          ],
        },
      ]);
    }
  });

  it("Should fill a fraction which is a binded value", () => {
    {
      const out: ActionOutputsForConstruction = [
        {
          token_id: "token",
          next: [
            {
              element: () => ACTION_FT_TRANSFER,
              fraction: BindParameter("A"),
            },
          ],
        },
      ];
      const filled = fillFractionSplitsAndToken(out, { A: "1" });
      expect(filled).toEqual([
        {
          token_id: "token",
          next: [
            {
              element: ACTION_FT_TRANSFER,
              fraction: "1",
            },
          ],
        },
      ]);
    }
  });
});

'''
'''--- ts-packages/malloc-ops/babel.config.js ---
module.exports = {
  presets: [
    "@babel/preset-env",
    "@babel/preset-typescript",
  ],
};

'''
'''--- ts-packages/malloc-ops/lib/index.ts ---
export * from "./malloc-ops";

'''
'''--- ts-packages/malloc-ops/lib/interfaces.ts ---
import {
  AccountId,
  Construction,
  FtTransferCallToMallocCall,
  InitConstructionArgs,
  MallocCall,
  Action,
  WithdrawFromMallocCall,
  ActionTypesLibraryFacing,
  MallocClient,
  SpecialAccountType,
  SpecialAccount,
  IRunEphemeralConstruction,
} from "@malloc/sdk";
import { _InternalConstruction } from "./internal/construction-internal";

// ---------------- Base interface

export interface ActionOrConstructionWithSplitParametersFilledLazy {
  element:
    | ReturnType<MallocCallActionReturn>
    | ReturnType<FtTransferCallToMallocCallActionReturn>
    | ReturnType<WithdrawFromMallocCallReturn>
    | ReturnType<ConstructionReturn>;
  // If a string is used, assume that a parameter is being used for the fraction
  fraction: number;
}

export interface ActionOrConstructionWithSplitParametersFilled {
  element:
    | ReturnType<ReturnType<MallocCallActionReturn>>
    | ReturnType<ReturnType<FtTransferCallToMallocCallActionReturn>>
    | ReturnType<ReturnType<WithdrawFromMallocCallReturn>>
    | ReturnType<ReturnType<ConstructionReturn>>;
  // If a string is used, assume that a parameter is being used for the fraction
  fraction: number | string;
}

export interface ActionOrConstructionWithSplit {
  element:
    | ReturnType<MallocCallActionReturn>
    | ReturnType<FtTransferCallToMallocCallActionReturn>
    | ReturnType<WithdrawFromMallocCallReturn>
    | ReturnType<ConstructionReturn>;
  fraction: number | string | BindedParameter;
}

// -------------- Parameter Interfaces

export interface BindedParameter {
  type: "BINDED_PARAMETER";
  name: string;
}

/**
 * Parameters passed into both Actions and Constructions
 *
 * If a parameter is a string and begins with a $$, then assume that it is a binded
 */
export interface GenericParameters {
  tokenIn?: AccountId;
  expectedTokensOut?: AccountId[];
  [args: string]: any | BindedParameter;
}

// ----------------- Malloc Call Action Interfaces

interface MallocCallOverrides {
  checkCallback?: boolean;
  gasForCall?: number;
  attachedAmount?: number;
}

export interface IMallocCallAction {
  mallocCallContractID: AccountId;
  prefilledParameters?: GenericParameters;
  parameters?: GenericParameters;
  opts?: MallocCallOpts;
  callArgNames: string[];
}

export interface MallocCallOpts {
  skipFtTransfer?: boolean;
  overrides?: MallocCallOverrides;
}

export type MallocCallActionReturn = (
  parameters?: GenericParameters
) => (parametersFromParent?: GenericParameters) => Action<MallocCall>;

// ----------------- Ft Transfer Call Interface
export interface IFtTransferCallToMallocCallAction {
  mallocCallContractID: AccountId;
  tokenIn?: AccountId;
}

export type FtTransferCallToMallocCallActionReturn = (parameters?: {
  tokenIn?: string;
}) => () => Action<FtTransferCallToMallocCall>;

// ------------------ WithdrawFromMallocCall Interface
export interface IWithdrawFromMallocCall {
  mallocCallContractID: AccountId;
  tokenIn?: AccountId;
  recipient?: AccountId;
}

export interface WithdrawFromMallocCallParams {
  tokenIn?: string;
  recipient?: AccountId;
}

export type WithdrawFromMallocCallReturn = (
  parameters?: WithdrawFromMallocCallParams
) => () => Action<WithdrawFromMallocCall>;

// ------------------------- Construction Interfaces
// TODO: we would like to make this token_id be optional here
type _ActionOutputsForConstruction<T, TOKEN_ID> = {
  token_id?: TOKEN_ID;
  next: T[];
}[];

export type ActionOutputsForConstruction = _ActionOutputsForConstruction<
  ActionOrConstructionWithSplit,
  AccountId | BindedParameter
>;
export type ActionOutputsForConstructionWithParamsFilled =
  _ActionOutputsForConstruction<
    ActionOrConstructionWithSplitParametersFilled,
    AccountId
  >;

/**
 * Input to the construction builder.
 *
 * @param in - The input action into the construction
 * @param out - If null, then assume that the action is an endpoint and does not have anything
 * following it. If the output is not null, then it is a map of Token IDs to a list of actions/ constructions
 * and associated splits. Each token ID should correspond to a returned token from the input Action
 */
export interface IConstruction {
  in:
    | ReturnType<MallocCallActionReturn>
    | ReturnType<FtTransferCallToMallocCallActionReturn>;
  out: null | ActionOutputsForConstruction;
}

export type ConstructionReturn = (
  parameters?: GenericParameters
) => (parametersFromParent?: GenericParameters) => _InternalConstruction;

// --------------- Compile Interfaces
export interface ICompile {
  initialConstructionOrActions: ActionOrConstructionWithSplitParametersFilledLazy[];
}

export type CompileReturn = (amount: string) => IRunEphemeralConstruction;

'''
'''--- ts-packages/malloc-ops/lib/internal/construction-internal.ts ---
import { AccountId, Action, ActionTypesLibraryFacing } from "@malloc/sdk";
import {
  ActionOrConstructionWithSplit,
  ActionOrConstructionWithSplitParametersFilled,
  ActionOutputsForConstruction,
  ActionOutputsForConstructionWithParamsFilled,
  IConstruction,
} from "../interfaces";
import { getActionInputToken } from "@malloc/sdk/dist/action";
import { scanlAccum } from "../utils";

export const INTERNAL_CONSTRUCTION_TYPE = "InternalConstruction";

export class _InternalConstruction {
  public readonly type = INTERNAL_CONSTRUCTION_TYPE;

  /**
   * @param initialIndices - indices into actions for what the initial action indices are
   */
  protected constructor(
    public readonly actions: Action<ActionTypesLibraryFacing>[],
    public readonly nextActionsIndices: number[][][],
    public readonly nextActionsSplits: number[][][],
    public readonly initialIndices: number[]
  ) {}

  /**
   * Create an _InternalConstruction from an action without any outputs
   */
  public static fromActionEndpoint(
    action: Action<ActionTypesLibraryFacing>
  ): _InternalConstruction {
    return new _InternalConstruction([action], [[]], [[]], [0]);
  }

  /**
   * Takes in an object with the {@param in} being the input action to the construction
   * and {@param out} being the output action/construction to the input action
   */
  public static fromConstructionInOut(
    inAction: Action<ActionTypesLibraryFacing>,
    out: ActionOutputsForConstructionWithParamsFilled | null
  ): _InternalConstruction {
    if (out === null) {
      return _InternalConstruction.fromActionEndpoint(inAction);
    }

    if (Object.keys(out).length === 0) {
      return _InternalConstruction.fromActionEndpoint(inAction);
    }

    const outputsByToken = out.map((actionOrConstWithSplit) => {
      const merged = _InternalConstruction.mergeActionOrConstructionsWithSplits(
        actionOrConstWithSplit.next
      );
      if (merged.internalConstruction === null) {
        throw "Expected the outputs to have at least 1 following action or construction";
      }
      return merged;
    });

    const mergedConstructions = _InternalConstruction.mergeMulti(
      outputsByToken.map((o) => o.internalConstruction)
    );

    if (mergedConstructions === null) {
      throw "Internal error, expected merged construction to not be null";
    }

    const nextSplits = outputsByToken.map((o) => o.splits);

    // TODO: seperate function for like scanl accum
    let totalActions: number[] = scanlAccum(
      outputsByToken.map((o) => o.numberOfNextActionsOrConstructions || 0)
    );

    console.log("TOTAL ACTIONS", totalActions);

    const nextIndices: number[][] = outputsByToken.map((o, tokIndx) => {
      if (!o.internalConstruction) return [];
      const indices: number[] = o.internalConstruction.initialIndices.map(
        (initIndex) => initIndex + totalActions[tokIndx]
      );
      return indices;
      // return indices.map((e, nextActionIndex) => e + totalActions[nextActionIndex]);
    });

    return mergedConstructions.pushActionToParent(
      inAction,
      nextIndices,
      nextSplits
    );
  }

  // Returns null if constructions' length is 0
  public static mergeMulti(
    constructions: (_InternalConstruction | null)[]
  ): _InternalConstruction | null {
    const first = constructions.shift();
    if (!first) return null;
    return constructions.reduce(
      (a: _InternalConstruction | null, b: _InternalConstruction | null) => {
        if (!a && !b) return null;
        else if (!a) return b;
        else if (!b) return a;
        else return a.merge(b);
      },
      first
    );
  }

  protected merge(other: _InternalConstruction): _InternalConstruction {
    // if (other.tokenId !== this.tokenId) {
    //   throw "Expected the input token id's to equal each other";
    // }
    const mergedActions = [...this.actions, ...other.actions];
    const mergedSplits = [
      ...this.nextActionsSplits,
      ...other.nextActionsSplits,
    ];
    const mergedIndices: number[][][] = _InternalConstruction.mergeIndices(
      this.nextActionsIndices,
      other.nextActionsIndices
    );

    const otherInitialIndicesOffset = other.initialIndices.map(
      (i) => i + this.actions.length
    );
    const mergedInitialIndices: number[] = [
      ...this.initialIndices,
      ...otherInitialIndicesOffset,
    ];
    return new _InternalConstruction(
      mergedActions,
      mergedIndices,
      mergedSplits,
      mergedInitialIndices
    );
  }

  protected pushActionToParent(
    action: Action<ActionTypesLibraryFacing>,
    nextActionIndices: number[][],
    nextActionSplits: number[][]
  ): _InternalConstruction {
    return new _InternalConstruction(
      [...this.actions, action],
      [...this.nextActionsIndices, nextActionIndices],
      [...this.nextActionsSplits, nextActionSplits],
      [this.nextActionsIndices.length]
    );
  }

  /**
   * Merge two next node index indices. This is done by offsetting all elements in b by
   * the length of a
   */
  protected static mergeIndices(
    a: number[][][],
    b: number[][][]
  ): number[][][] {
    const bOffset: number[][][] = b.map((b1: number[][]) =>
      b1.map((b2: number[]) => b2.map((index) => index + a.length))
    );
    return [...a, ...bOffset];
  }

  protected static mergeActionOrConstructionsWithSplits(
    actionOrConstWithSplit: ActionOrConstructionWithSplitParametersFilled[]
  ): {
    splits: number[];
    internalConstruction: _InternalConstruction | null;
    numberOfNextActionsOrConstructions: number;
  } {
    const internalConstructions: _InternalConstruction[] =
      actionOrConstWithSplit.map((inp) => {
        const elem = inp.element;
        if (
          (elem as _InternalConstruction).type === INTERNAL_CONSTRUCTION_TYPE
        ) {
          return elem as _InternalConstruction;
        } else {
          // Assume that the element is an endpoint if it is included in a construction as an output
          // TODO: have some type checking system here to make sure that the element is indeed and endpoint
          return _InternalConstruction.fromConstructionInOut(
            elem as Action<ActionTypesLibraryFacing>,
            null
          );
        }
      });

    let newInternalConstruction: _InternalConstruction | null =
      _InternalConstruction.mergeMulti(internalConstructions);

    return {
      splits: actionOrConstWithSplit.map((inp) => inp.fraction),
      internalConstruction: newInternalConstruction,
      numberOfNextActionsOrConstructions: actionOrConstWithSplit.length,
    };
  }
}

'''
'''--- ts-packages/malloc-ops/lib/internal/parameter-replacement-internal.ts ---
import {
  ActionOrConstructionWithSplitParametersFilled,
  ActionOutputsForConstruction,
  ActionOutputsForConstructionWithParamsFilled,
  BindedParameter,
  GenericParameters,
} from "../interfaces";
import { BINDED_PARAMETER_TYPE, BindParameter } from "../parameter";

// TODO: test parameter replacement
/**
 * Resolve all parameters to their final values.
 * So, the return should have no binded parameters
 *
 * @returns Generic Parameters without any binded values. It also merges the parent and child parameters
 */
export const resolveParameters = (
  parameters: GenericParameters,
  parentParameters?: GenericParameters
): GenericParameters => {
  const _parentParams = parentParameters || {};

  const resolvedParams = Object.keys(parameters).reduce((prior, k) => {
    if (isBinded(parameters[k])) {
      const bind = parameters[k] as BindedParameter;
      const parentVal = _parentParams[bind.name];
      if (!parentVal)
        throw `Expected the parameter ${k} to have parameter ${bind.name} in its parent's parameters`;
      prior[k] = parentVal;
      return prior;
    } else {
      return prior;
    }
  }, parameters);
  if (hasBinded(resolveParameters)) {
    throw "Not all binded parameters were resolved";
  }
  return { ..._parentParams, ...parameters, ...resolvedParams };
};

export const fillFractionSplitsAndToken = (
  actionOutput: ActionOutputsForConstruction,
  params: GenericParameters
): ActionOutputsForConstructionWithParamsFilled => {
  return actionOutput.map((outputsForTok) => {
    // First guess that the tokenId is a parameter. If no such parameter exists, assume that it is the raw token id
    // const outputsForTok = actionOutput[tokenIdOrParam];
    const tokenIdOrParam = outputsForTok.token_id;
    const tokenIdOut = !tokenIdOrParam
      ? undefined
      : (tokenIdOrParam as BindedParameter).type === BINDED_PARAMETER_TYPE
      ? params[(tokenIdOrParam as BindedParameter).name]
      : (tokenIdOrParam as string);

    if (!params.tokenIn && !tokenIdOut) {
      throw "Expected a token in to be specified either in the out of a construction or within the given element";
    }
    const paramsWithToken: GenericParameters = {
      tokenIn: tokenIdOut,
      ...params,
    };
    const withSplitsFilled: ActionOrConstructionWithSplitParametersFilled[] =
      outputsForTok.next.map((o) => {
        // If the fraction part is a string, assume that it needs to be filled in
        // TODO: allow for BigNumbers which are passed in as strings, this could be via checking for the first char being a digit
        if ((o.fraction as BindedParameter).type === BINDED_PARAMETER_TYPE) {
          const name = (o.fraction as BindedParameter).name;
          const val = params[name];
          if (!val) throw `Expected param here for parameter ${name}`;
          else if (typeof val !== "number" && typeof val !== "string")
            throw "Expected the parameter for fraction to be a number or string";
          return {
            element: o.element(paramsWithToken),
            fraction: val as number | string,
          };
        }
        return {
          element: o.element(paramsWithToken),
          fraction: o.fraction as number,
        };
      });
    return {
      next: withSplitsFilled,
      token_id: tokenIdOut,
    };
  }, {} as ActionOutputsForConstructionWithParamsFilled);
};

const hasBinded = (parameters: GenericParameters): boolean =>
  Object.keys(parameters).some((k) => isBinded(parameters[k]));

const isBinded = (v: any) => v?.type === BINDED_PARAMETER_TYPE;

'''
'''--- ts-packages/malloc-ops/lib/malloc-ops.ts ---
import {
  AccountId,
  MallocCall,
  Action,
  ActionCall,
  FtTransferCallToMallocCall,
  WithdrawFromMallocCall as MallocClientWithdrawFromMallocCall,
  SpecialAccount,
  ActionTypesLibraryFacing,
} from "@malloc/sdk";
import {
  ConstructionReturn,
  FtTransferCallToMallocCallActionReturn,
  IConstruction,
  IFtTransferCallToMallocCallAction,
  IMallocCallAction,
  MallocCallActionReturn,
  MallocCallOpts,
  ActionOrConstructionWithSplit,
  GenericParameters,
  ActionOrConstructionWithSplitParametersFilled,
  ActionOutputsForConstruction,
  ActionOutputsForConstructionWithParamsFilled,
  IWithdrawFromMallocCall,
  WithdrawFromMallocCallReturn,
  WithdrawFromMallocCallParams,
  ICompile,
  CompileReturn,
} from "./interfaces";
import {
  INTERNAL_CONSTRUCTION_TYPE,
  _InternalConstruction,
} from "./internal/construction-internal";
import { fillFractionSplitsAndToken, resolveParameters } from "./internal/parameter-replacement-internal";

export const MallocCallAction = <T>(
  input: IMallocCallAction
): MallocCallActionReturn => {
  return (parameters?: GenericParameters) => {
    return (parametersFromParent?: GenericParameters) => {
      const params: GenericParameters = resolveParameters(
        parameters || {},
        parametersFromParent
      );

      const callArgsFiltered = input.callArgNames.reduce((prev, key) => {
        const val = params[key] || (input.prefilledParameters || {})[key];
        if (!val)
          throw `Expected a call argument with key ${key} to be present in the parameters for the Malloc Call`;
        prev[key] = val;
        return prev;
      }, {} as any);

      const tokenId = validateInputToken(
        input.prefilledParameters?.tokenIn || params?.tokenIn
      );
      const ret: Action<MallocCall> = {
        MallocCall: {
          malloc_call_id: input.mallocCallContractID,
          json_args: JSON.stringify({
            ...callArgsFiltered,
          }),
          token_id: tokenId,
        },
      };
      return ret;
    };
  };
};

export const WithdrawFromMallocCall = (
  input: IWithdrawFromMallocCall
): WithdrawFromMallocCallReturn => {
  return (parameters?: WithdrawFromMallocCallParams) => {
    return (parametersFromParents?: GenericParameters) => {
      const params = resolveParameters(parameters || {}, parametersFromParents);
      const tokenIn = validateInputToken(input.tokenIn || params?.tokenIn);
      return {
        WithdrawFromMallocCall: {
          malloc_call_id: input.mallocCallContractID,
          token_id: tokenIn,
          recipient: input.recipient || params?.recipient || undefined,
        },
      } as Action<MallocClientWithdrawFromMallocCall>;
    };
  };
};

export const FtTransferCallToMallocCallAction = (
  input: IFtTransferCallToMallocCallAction
): FtTransferCallToMallocCallActionReturn => {
  return (parameters?: { tokenIn?: string }) => {
    return (parametersFromParent?: { tokenIn?: string }) => {
      const params = resolveParameters(parameters || {}, parametersFromParent);
      const tokenIn = validateInputToken(input.tokenIn || params?.tokenIn);
      return {
        FtTransferCallToMallocCall: {
          malloc_call_id: input.mallocCallContractID,
          token_id: tokenIn,
        },
      } as Action<FtTransferCallToMallocCall>;
    };
  };
};

export const Construction = (input: IConstruction): ConstructionReturn => {
  return (parameters?: GenericParameters) => {
    return (parametersFromParent?: GenericParameters) => {
      const params = resolveParameters(parameters || {}, parametersFromParent);
      const output: ActionOutputsForConstructionWithParamsFilled | null =
        input.out ? fillFractionSplitsAndToken(input.out, params) : null;
      return _InternalConstruction.fromConstructionInOut(
        input.in(params),
        output
      );
    };
  };
};

export const compile = (input: ICompile): CompileReturn => {
  const initialInternalConstructions: _InternalConstruction[] =
    input.initialConstructionOrActions.map((e) => {
      const elem = e.element();
      if ((elem as _InternalConstruction).type === INTERNAL_CONSTRUCTION_TYPE) {
        return elem as _InternalConstruction;
      } else {
        return _InternalConstruction.fromActionEndpoint(
          elem as Action<ActionTypesLibraryFacing>
        );
      }
    });
  const merged = _InternalConstruction.mergeMulti(initialInternalConstructions);
  if (!merged)
    throw "Expected there to be at least 1 valid construction or action in initial construction or actions";
  let initSplits = input.initialConstructionOrActions.map((e) => e.fraction);
  return (amount: string) => {
    return {
      actions: merged.actions,
      nextActionsIndices: merged.nextActionsIndices,
      nextActionsSplits: merged.nextActionsSplits,
      initialActionIndices: merged.initialIndices,
      initialSplits: initSplits,
      amount,
    };
  };
};

// ---------------- Helper functions

const validateInputToken = (tokenId?: string): string => {
  if (!tokenId)
    throw "Expected a tokenIn from either the prefilled parameters of from the given parameters";
  return tokenId;
};

'''
'''--- ts-packages/malloc-ops/lib/parameter.ts ---
import { BindedParameter } from "./interfaces";

export const BINDED_PARAMETER_TYPE = "BINDED_PARAMETER";

export const BindParameter = (parameterName: string): BindedParameter => {
  return {
    type: BINDED_PARAMETER_TYPE,
    name: parameterName,
  };
};

'''
'''--- ts-packages/malloc-ops/lib/utils.ts ---
// TODO: tests here
/**
 * Scan an array of numbers in O(n) time and have it be non-inclusive.
 * I.e. the first element is 0
 */
export const scanlAccum = (inp: number[]): number[] => {
  let sums: number[] = [];
  // Alas a perfect opportunity for Scan, but it is not built into JS :(
  for (let i = 0; i < inp.length; i++) {
    if (i === 0) sums.push(0);
    else sums.push(sums[i - 1] + inp[i - 1]);
  }
	return sums
};

'''
'''--- ts-packages/malloc-ops/package.json ---
{
  "name": "@malloc/ops",
  "version": "0.0.0",
  "description": "> TODO: description",
  "author": "Lev Stambler <levstamb@gmail.com>",
  "homepage": "https://github.com/Lev-Stambler/malloc-near-2#readme",
  "license": "ISC",
  "main": "dist/index.js",
  "directories": {
    "lib": "lib",
    "test": "__tests__"
  },
  "files": [
    "lib"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Lev-Stambler/malloc-near-2.git"
  },
  "scripts": {
    "test": "jest test --runInBand"
  },
  "bugs": {
    "url": "https://github.com/Lev-Stambler/malloc-near-2/issues"
  },
  "dependencies": {
    "@malloc/sdk": "file:../malloc-client",
    "borsh": "^0.4.0",
    "js-sha256": "^0.9.0",
    "regenerator-runtime": "~0.13.5"
  },
  "resolutions": {
    "@babel/preset-env": "7.13.8"
  },
  "devDependencies": {
    "@babel/core": "~7.14.0",
    "@babel/preset-env": "~7.14.0",
    "@babel/preset-typescript": "^7.14.5",
    "@malloc/testing-utils": "file:../testing-utils",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.8",
    "babel-jest": "~26.6.2",
    "bs58": "^4.0.1",
    "env-cmd": "~10.1.0",
    "jest": "^27.0.6",
    "jest-environment-node": "~26.6.2",
    "nodemon": "~2.0.3",
    "typescript": "^4.3.4"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/../../test-files/jest.init.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/src/",
      "<rootDir>/contract/",
      "<rootDir>/node_modules/"
    ]
  }
}

'''
'''--- ts-packages/malloc-ops/tsconfig.json ---
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "outDir": "./dist"
  },
  "include": ["./lib"]
}

'''
'''--- ts-packages/malloc-ops/tsconfig.spec.json ---
{
  "extends": "../../tsconfig.spec.json",
  "include": ["**/*.spec.ts", "**/*.d.ts", "../../testing-utils/**/*.ts"]
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/.eslintrc.json ---
{
  "ignorePatterns": ["!**/*"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "parserOptions": { "project": ["apps/frontend/tsconfig.*?.json"] },
      "rules": {}
    },
    { "files": ["*.ts", "*.tsx"], "rules": {} },
    { "files": ["*.js", "*.jsx"], "rules": {} }
  ]
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/README.md ---
# Svelte Webpack Starter

A starter template for [Svelte](https://svelte.dev) that comes preconfigured with Webpack, TypeScript, SCSS, Babel,
Autoprefixer, and HMR.

- [Getting started](#getting-started)
  - [Installation](#installation)
  - [Starting the development server](#starting-the-development-server)
  - [Building for production](#building-for-production)
  - [Running in production](#running-in-production)
- [Usage](#usage)
  - [Global stylesheets](#global-stylesheets)
  - [Single page applications](#single-page-applications)
  - [Browsers list](#browsers-list)
  - [Babel customization](#babel-customization)
  - [Source maps in production](#source-maps-in-production)
  - [Import path aliases](#import-path-aliases)

---

## Getting started

### Installation

Pull the template files with [`degit`](https://github.com/Rich-Harris/degit) and install dependencies.

**ðŸš€ Webpack 5 (recommended)**

```bash
npx degit baileyherbert/svelte-webpack-starter
npm install
```

**ðŸš€ Webpack 4**

```bash
npx degit baileyherbert/svelte-webpack-starter#4
npm install
```

### Starting the development server

Run the `dev` script to start a live development server with hot module replacement. Then check the output for a link
to the app, which is usually `http://localhost:8080/`:

```bash
npm run dev
```

### Building for production

Run the `build` script to bundle the app for production. The bundle will be created at `/public/build/` and the `public`
directory will contain all files you need to host the app:

```bash
npm run build
```

> ðŸ’¡ **Tip:** You can quickly test the production build by running `npm start` locally.

### Running in production

First upload the following files and folders to your target server:

- `package.json`
- `package-lock.json`
- `public`

Then install dependencies:

```bash
npm install --production
```

Finally run the `start` command to launch the included web server:

```bash
npm start
```

---

## Usage

### Global stylesheets

Add one or more global stylesheets to the bundle by editing the `stylesheets` variable at the top of
`webpack.config.ts`:

```ts
const stylesheets = ['./src/styles/index.scss'];
```

You can specify `css`, `scss`, and `sass` files here, and they will be compiled and minified as necessary. These styles
will be added to the beginning of the bundle in the order specified. Svelte's styles will always appear last.

### Single page applications

For single page applications that use history routing instead of hash routing, edit the `package.json` file to serve
the `index.html` file when a requested file is not found:

- Add the `--history-api-fallback` flag to the `"dev"` command
- Add the `--single` flag to the `"start"` command.

```json
"scripts": {
    "dev": "webpack serve --history-api-fallback",
    "start": "serve public --listen 8080 --single",
}
```

### Browsers list

The bundle will be compiled to run on the browsers specified in `package.json`:

```json
"browserslist": [
    "defaults"
]
```

The default value is recommended. If you wish to customize this, please refer to the list of
[example browserslist queries](https://github.com/browserslist/browserslist#full-list).

> ðŸ’¡ **Note:** This template includes `core-js` and `regenerator-runtime` which means your source code will be
> transpiled and polyfilled to run on old browsers automatically.

### Babel customization

Production builds are compiled with Babel automatically. If you wish to disable it, edit the `webpack.config.ts` file:

```ts
const useBabel = false;
```

Babel is disabled during development in order to improve build speeds. Please enable it manually if you need:

```ts
const useBabelInDevelopment = true;
```

### Source maps in production

Source maps are generated automatically during development. They are not included in production builds by default. If
you wish to change this behavior, edit the `webpack.config.ts` file:

```ts
const sourceMapsInProduction = true;
```

### Import path aliases

Define import path aliases from the `tsconfig.json` file. For example:

```json
"paths": {
    "@stores/*": ["src/stores/*"]
}
```

You can then import files under these aliases and Webpack will resolve them. Your code editor should also use them
for automatic imports:

```ts
import { users } from '@stores/users'; // src/stores/users.ts
```

The root directory is configured as a base path for imports. This means you can also import modules with an absolute
path from anywhere in the project instead of using a large number of `..` to traverse directories.

```ts
import { users } from 'src/stores/users';
```

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/jest.config.js ---
module.exports = {
  displayName: 'frontend',
  globals: {
    'ts-jest': {
      tsConfig: '<rootDir>/tsconfig.spec.json',
    },
  },
  transform: {
    '^.+\\.[tj]s$': 'ts-jest',
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: './coverage/apps/frontend',
};

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/package.json ---
{
  "name": "svelte-app",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "build": "cross-env NODE_ENV=production webpack",
    "dev": "webpack serve",
    "start": "serve public --listen 8080",
    "validate": "svelte-check"
  },
  "devDependencies": {
    "@babel/core": "^7.12.17",
    "@babel/plugin-transform-runtime": "^7.12.17",
    "@babel/preset-env": "^7.12.17",
    "@babel/runtime": "^7.12.18",
    "@testing-library/svelte": "^3.0.3",
    "@tsconfig/svelte": "^1.0.10",
    "@types/bn.js": "^5.1.0",
    "@types/mini-css-extract-plugin": "^1.2.2",
    "@types/webpack-dev-server": "^3.11.1",
    "@typescript-eslint/eslint-plugin": "4.3.0",
    "@typescript-eslint/parser": "4.3.0",
    "autoprefixer": "^10.2.5",
    "babel-loader": "^8.2.2",
    "clean-webpack-plugin": "^4.0.0-alpha.0",
    "core-js": "^3.9.0",
    "cross-env": "^7.0.3",
    "css-loader": "^5.0.2",
    "css-minimizer-webpack-plugin": "^3.0.0",
    "mini-css-extract-plugin": "^1.4.1",
    "node-polyfill-webpack-plugin": "^1.1.0",
    "optimize-css-assets-webpack-plugin": "^5.0.4",
    "postcss": "^8.2.10",
    "postcss-import": "^14.0.0",
    "postcss-load-config": "^3.0.1",
    "postcss-loader": "^5.2.0",
    "postcss-nested": "^5.0.5",
    "precss": "^4.0.0",
    "prettier": "2.2.1",
    "regenerator-runtime": "^0.13.7",
    "require-json5": "^1.1.0",
    "sass": "^1.32.8",
    "sass-loader": "^11.0.1",
    "svelte": "^3.35.0",
    "svelte-check": "^1.2.6",
    "svelte-forms": "^1.1.51",
    "svelte-jester": "^1.3.0",
    "svelte-loader": "^3.0.0",
    "svelte-preprocess": "^4.6.9",
    "tailwindcss": "^2.0.4",
    "ts-jest": "26.4.0",
    "ts-loader": "^8.0.17",
    "ts-node": "~9.1.1",
    "tsconfig-paths-webpack-plugin": "^3.5.1",
    "tslib": "^2.2.0",
    "tsoa": "^3.6.1",
    "typescript": "^4.2.4",
    "webpack": "^5.32.0",
    "webpack-cli": "^4.6.0",
    "webpack-dev-server": "^3.11.2"
  },
  "dependencies": {
    "@malloc/sdk": "../malloc-client",
    "@smui/textfield": "^4.2.0",
    "serve": "^11.3.2"
  }
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/postcss.config.js ---
module.exports = {
  plugins: [require('precss'), require('autoprefixer')],
};

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />

    <title>Simple Malloc</title>

    <!-- This is a temporary favicon from https://icons8.com/icon/set/money/emoji -->
    <link rel="icon" type="image/png" href="/favicon.png" />

    <link rel="stylesheet" href="/build/bundle.css" />
    <script defer src="/build/bundle.js"></script>
    <script>
      navigator.serviceWorker
        .register('/serviceworker/sw.js')
        .then(function (serviceWorkerRegistration) {
          console.log('Service worker registered');
        })
        .catch(console.error);
    </script>
  </head>
  <body>
    <noscript>Please enable JavaScript to view this application.</noscript>
  </body>
</html>

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/public/serviceworker/sw.js ---
/**
 * This file was taken directly from torus, the file can be found on
 * https://github.com/torusresearch/torus-direct-web-sdk/blob/master/serviceworker/sw.js
 */
/* eslint-disable */
function getScope() {
  return self.registration.scope;
}

self.addEventListener('message', function (event) {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});

self.addEventListener('fetch', function (event) {
  try {
    const url = new URL(event.request.url);
    if (url.pathname.includes('redirect') && url.href.includes(getScope())) {
      event.respondWith(
        new Response(
          new Blob(
            [
              `
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>Redirect</title>
    <style>
      * {
        box-sizing: border-box;
      }
      html,
      body {
        background: #fcfcfc;
        height: 100%;
        padding: 0;
        margin: 0;
      }
      .container {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
      }
      h1.title {
        font-size: 14px;
        color: #0f1222;
        font-family: "Roboto", sans-serif !important;
        margin: 0;
        text-align: center;
      }
      .spinner .beat {
        background-color: #0364ff;
        height: 12px;
        width: 12px;
        margin: 24px 2px 10px;
        border-radius: 100%;
        -webkit-animation: beatStretchDelay 0.7s infinite linear;
        animation: beatStretchDelay 0.7s infinite linear;
        -webkit-animation-fill-mode: both;
        animation-fill-mode: both;
        display: inline-block;
      }
      .spinner .beat-odd {
        animation-delay: 0s;
      }
      .spinner .beat-even {
        animation-delay: 0.35s;
      }
      @-webkit-keyframes beatStretchDelay {
        50% {
          -webkit-transform: scale(0.75);
          transform: scale(0.75);
          -webkit-opacity: 0.2;
          opacity: 0.2;
        }
        100% {
          -webkit-transform: scale(1);
          transform: scale(1);
          -webkit-opacity: 1;
          opacity: 1;
        }
      }
      @keyframes beatStretchDelay {
        50% {
          -webkit-transform: scale(0.75);
          transform: scale(0.75);
          -webkit-opacity: 0.2;
          opacity: 0.2;
        }
        100% {
          -webkit-transform: scale(1);
          transform: scale(1);
          -webkit-opacity: 1;
          opacity: 1;
        }
      }
      @media (min-width: 768px) {
        h1.title {
          font-size: 14px;
        }
        p.info {
          font-size: 28px;
        }
        .spinner .beat {
          height: 12px;
          width: 12px;
        }
      }
    </style>
  </head>
  <body>
    <div id="message" class="container">
      <div class="spinner content" id="spinner">
        <div class="beat beat-odd"></div>
        <div class="beat beat-even"></div>
        <div class="beat beat-odd"></div>
      </div>
      <h1 class="title content" id="closeText" style="display: none;">You can close this window now</h1>
    </div>
    <script
      src="https://scripts.toruswallet.io/broadcastChannel_3_5_3.js"
      integrity="sha384-skU9kn0NAhJbaUxr/WTkc56HLM8U6akUpv4H4WmR+ZYh9+ChxbuN7GnALGNFSPzq"
      crossorigin="anonymous"
    ></script>
    <script>
      function storageAvailable(type) {
        var storage;
        try {
          storage = window[type];
          var x = "__storage_test__";
          storage.setItem(x, x);
          storage.removeItem(x);
          return true;
        } catch (e) {
          return (
            e &&
            // everything except Firefox
            (e.code === 22 ||
              // Firefox
              e.code === 1014 ||
              // test name field too, because code might not be present
              // everything except Firefox
              e.name === "QuotaExceededError" ||
              // Firefox
              e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
            // acknowledge QuotaExceededError only if there's something already stored
            storage &&
            storage.length !== 0
          );
        }
      }
      function showCloseText() {
        var closeText = document.getElementById("closeText");
        var spinner = document.getElementById("spinner");
        if (closeText) {
          closeText.style.display = "block";
        }
        if (spinner) {
          spinner.style.display = "none";
        }
      }
      var isLocalStorageAvailable = storageAvailable("localStorage");
      var isSessionStorageAvailable = storageAvailable("sessionStorage");
      // set theme
      let theme = "light";
      if (isLocalStorageAvailable) {
        var torusTheme = localStorage.getItem("torus-theme");
        if (torusTheme) {
          theme = torusTheme.split("-")[0];
        }
      }
      if (theme === "dark") {
        document.querySelector("body").style.backgroundColor = "#24252A";
      }
      var bc;
      var broadcastChannelOptions = {
        // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node'
        webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increase performance)
      };
      var instanceParams = {};
      var preopenInstanceId = new URL(window.location.href).searchParams.get("preopenInstanceId");
      if (!preopenInstanceId) {
        document.getElementById("message").style.visibility = "visible";
        // in general oauth redirect
        try {
          var url = new URL(location.href);
          var hash = url.hash.substr(1);
          var hashParams = {};
          if (hash) {
            hashParams = hash.split("&").reduce(function (result, item) {
              var parts = item.split("=");
              result[parts[0]] = parts[1];
              return result;
            }, {});
          }
          var queryParams = {};
          for (var key of url.searchParams.keys()) {
            queryParams[key] = url.searchParams.get(key);
          }
          var error = "";
          try {
            if (Object.keys(hashParams).length > 0 && hashParams.state) {
              instanceParams = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParams.state)))) || {};
              if (hashParams.error) error = hashParams.error;
            } else if (Object.keys(queryParams).length > 0 && queryParams.state) {
              instanceParams = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParams.state)))) || {};
              if (queryParams.error) error = queryParams.error;
            }
          } catch (e) {
            console.error(e);
          }
          if (instanceParams.redirectToOpener) {
            // communicate to window.opener
            window.opener.postMessage(
              {
                channel: "redirect_channel_" + instanceParams.instanceId,
                data: {
                  instanceParams: instanceParams,
                  hashParams: hashParams,
                  queryParams: queryParams,
                },
                error: error,
              },
              "http://localhost:3000"
            );
          } else {
            // communicate via broadcast channel
            bc = new broadcastChannelLib.BroadcastChannel("redirect_channel_" + instanceParams.instanceId, broadcastChannelOptions);
            bc.addEventListener("message", function (ev) {
              if (ev.success) {
                bc.close();
                console.log("posted", {
                  queryParams,
                  instanceParams,
                  hashParams,
                });
              } else {
                window.close();
                showCloseText();
              }
            });
            bc.postMessage({
              data: {
                instanceParams: instanceParams,
                hashParams: hashParams,
                queryParams: queryParams,
              },
              error: error,
            }).then(function () {
              setTimeout(function () {
                window.location.href = url.origin + location.search + location.hash;
              }, 5000);
            });
          }
        } catch (err) {
          console.error(err, "service worker error in redirect");
          bc && bc.close();
          window.close();
          showCloseText();
        }
      } else {
        // in preopen, awaiting redirect
        try {
          bc = new broadcastChannelLib.BroadcastChannel("preopen_channel_" + preopenInstanceId, broadcastChannelOptions);
          bc.onmessage = function (ev) {
            var { preopenInstanceId: oldId, payload, message } = ev.data;
            if (oldId === preopenInstanceId && payload && payload.url) {
              window.location.href = payload.url;
            } else if (oldId === preopenInstanceId && message === "setup_complete") {
              bc.postMessage({
                data: {
                  preopenInstanceId: preopenInstanceId,
                  message: "popup_loaded",
                },
              });
            }
            if (ev.error && ev.error !== "") {
              console.error(ev.error);
              bc.close();
            }
          };
        } catch (err) {
          console.error(err, "service worker error in preopen");
          bc && bc.close();
          window.close();
          showCloseText();
        }
      }
    </script>
  </body>
</html>
                        
${''}
  `,
            ],
            { type: 'text/html' }
          )
        )
      );
    }
  } catch (error) {
    console.error(error);
  }
});

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/components/SendRaw/exampleCall.ts ---
import { MAX_GAS } from "../../../../malloc-client/lib/tx";

export const exampleCall = {
  actions: [
    {
      FtTransferCallToMallocCall: {
        malloc_call_id: "dev-1628779354953-97648315357960",
        token_id: "wrap.testnet",
      },
    },
    {
      MallocCall: {
        malloc_call_id: "dev-1628779354953-97648315357960",
        token_id: "wrap.testnet",
        check_callback: false,
        skip_ft_transfer: true,
        json_args: JSON.stringify({
          token_out: "ndai.ft-fin.testnet",
          pool_id: 20,
          min_amount_out: "1",
          // TODO: this will be removed
          register_tokens: ["wrap.testnet", "ndai.ft-fin.testnet"],
          recipient: "levtester.testnet",
        }),
        gas: MAX_GAS.divn(100).muln(80).toNumber(),
        // 2/3 rds of max gas and have the remaining third for processing the call
        attached_amount: "0",
      },
    },
    {
      MallocCall: {
        malloc_call_id: "dev-1628779354953-97648315357960",
        token_id: "wrap.testnet",
        check_callback: false,
        skip_ft_transfer: true,
        json_args: JSON.stringify({
          token_out: "banana.ft-fin.testnet",
          pool_id: 11,
          min_amount_out: "1",
          // TODO: this will be removed
          register_tokens: ["ndai.ft-fin.testnet", "wrap.testnet"],
          recipient: "levtester.testnet",
        }),
        // 2/3 rds of max gas and have the remaining third for processing the call
        gas: MAX_GAS.divn(100).muln(80).toNumber(),
        attached_amount: "0",
      },
    },
  ],
  amount: "100000000000000000000",
  initial_action_indices: [0],
  initial_action_splits: [1],
  next_action_indices: [[[1, 2]], [[]], [[]]],
  next_action_splits: [[[1, 1]], [[]], [[]]],
};

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/global.d.ts ---
/// <reference types="svelte" />
'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/main.ts ---
import App from './App.svelte';

const app = new App({
	target: document.body,
	props: {
		name: 'world'
	}
});

export default app;
'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/stores/near-store.ts ---
import {
  ConnectedWalletAccount,
  Connection,
  Near,
  WalletConnection,
} from "@malloc/sdk/dist/near-rexport";
// TODO: change back to package form
import { SpecialAccountType, MallocClient, wrapAccountConnectedWallet } from "@malloc/sdk";
import { writable } from "svelte/store";
import type {
  SpecialAccount,
  SpecialAccountConnectedWallet,
} from "@malloc/sdk";
import getConfig from "src/utils/config";

interface NearStore {
  walletConnection: WalletConnection;
  config: ReturnType<typeof getConfig>;
  account?: SpecialAccount;
  mallocClient?: MallocClient<SpecialAccountConnectedWallet>;
}

export const nearStore = writable<null | NearStore>(null);

export const initNearStore = (near: Near) => {
  // TODO: env
  const config = getConfig("development");

  const account = wrapAccountConnectedWallet(
    near
  ) as SpecialAccountConnectedWallet;

  // Initializing our contract APIs by contract name and configuration
  // window.contract = ((await new Contract(
  //   window.walletConnection.account(),
  //   nearConfig.contractName,
  //   {
  //     changeMethods: ["run_ephemeral"],
  //     viewMethods: [],
  //   }
  // )) as any) as MallocContract;

  // TODO: env var
  const mallocClient = new MallocClient(account, config.contractName);

  nearStore.set({
    walletConnection: account.walletConnection,
    config,
    mallocClient,
    account,
  });
};
'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/utils/browser.ts ---
export function parseQuery(queryString: string): any {
  var query = {};
  var pairs = (queryString[0] === "?"
    ? queryString.substr(1)
    : queryString
  ).split("&");
  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i].split("=");
    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || "");
  }
  return query;
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/src/utils/config.ts ---
const CONTRACT_NAME = "dev-1628729326940-20289955091332";

export const env: Env = "development";
export type Env =
  | "production"
  | "development"
  | "test"
  | "mainnet"
  | "testnet"
  | "betanet"
  | "local"
  | "ci-betanet"
  | "ci";
export default function getConfig(env: Env) {
  switch (env) {
    case "production":
    case "mainnet":
      return {
        networkId: "mainnet",
        nodeUrl: "https://rpc.mainnet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.near.org",
        helperUrl: "https://helper.mainnet.near.org",
        explorerUrl: "https://explorer.mainnet.near.org",
      };
    case "development":
    case "testnet":
      return {
        networkId: "testnet",
        nodeUrl: "https://rpc.testnet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.testnet.near.org",
        helperUrl: "https://helper.testnet.near.org",
        explorerUrl: "https://explorer.testnet.near.org",
      };
    case "betanet":
      return {
        networkId: "betanet",
        nodeUrl: "https://rpc.betanet.near.org",
        contractName: CONTRACT_NAME,
        walletUrl: "https://wallet.betanet.near.org",
        helperUrl: "https://helper.betanet.near.org",
        explorerUrl: "https://explorer.betanet.near.org",
      };
    case "test":
    case "ci":
      return {
        networkId: "shared-test",
        nodeUrl: "https://rpc.ci-testnet.near.org",
        contractName: CONTRACT_NAME,
        masterAccount: "test.near",
      };
    case "ci-betanet":
      return {
        networkId: "shared-test-staging",
        nodeUrl: "https://rpc.ci-betanet.near.org",
        contractName: CONTRACT_NAME,
        masterAccount: "test.near",
      };
    default:
      throw Error(
        `Unconfigured environment '${env}'. Can be configured in src/config.js.`
      );
  }
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/tsconfig.json ---
{
  "include": ["src/**/*", "webpack.config.ts", "../malloc-client/lib/**/*"],
  "exclude": ["node_modules/*", "__sapper__/*", "public/*", "**/*.spec.ts"],
  "compilerOptions": {
    "declaration": false,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "importHelpers": true,
    "skipLibCheck": true,
    "skipDefaultLibCheck": true,
    "resolveJsonModule": true,

    "moduleResolution": "node",
    "target": "es2017",
    "importsNotUsedAsValues": "remove",
    "isolatedModules": true,
    "esModuleInterop": true,
    "sourceMap": true,
    "strict": false,
    "baseUrl": "./",
    "lib": ["DOM", "es2019"],
    "types": [
      "svelte",
      "svelte/store",
      "svelte/motion",
      "svelte/transition",
      "svelte/animate",
      "svelte/easing"
    ],
    "typeRoots": ["./src/types", "./node_modules/@types"]
  }
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/tsconfig.spec.json ---
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "../../dist/out-tsc",
    "module": "commonjs",
    "types": ["jest", "node"]
  },
  "include": ["**/*.spec.ts", "**/*.d.ts"]
}

'''
'''--- ts-packages/malloc-simple-graph-svelte-2/webpack.config.ts ---
/**
 * Babel will compile modern JavaScript down to a format compatible with older browsers, but it will also increase your
 * final bundle size and build speed. Edit the `browserslist` property in the package.json file to define which
 * browsers Babel should target.
 *
 * Browserslist documentation: https://github.com/browserslist/browserslist#browserslist-
 */
const useBabel = true;

/**
 * This option controls whether or not development builds should be compiled with Babel. Change this to `true` if you
 * intend to test with older browsers during development, but it could significantly impact your build speed.
 */
const useBabelInDevelopment = false;

/**
 * Define paths to any stylesheets you wish to include at the top of the CSS bundle. Any styles compiled from svelte
 * will be added to the bundle after these. In other words, these are global styles for your svelte app. You can also
 * specify paths to SCSS or SASS files, and they will be compiled automatically.
 */
const stylesheets = ['./src/styles/index.scss'];

/**
 * Change this to `true` to generate source maps alongside your production bundle. This is useful for debugging, but
 * will increase total bundle size and expose your source code.
 */
const sourceMapsInProduction = false;

/*********************************************************************************************************************/
/**********                                             Webpack                                             **********/
/*********************************************************************************************************************/

import TsconfigPathsPlugin from 'tsconfig-paths-webpack-plugin';
import ActionPolyfillPlugin from 'action-polyfill-webpack-plugin';
import Webpack, { NormalModuleReplacementPlugin } from 'webpack';
import WebpackDev from 'webpack-dev-server';
import SveltePreprocess from 'svelte-preprocess';
import Autoprefixer from 'autoprefixer';
import MiniCssExtractPlugin from 'mini-css-extract-plugin';
import OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';

import { CleanWebpackPlugin } from 'clean-webpack-plugin';

import fs from 'fs';
import path from 'path';

const mode = process.env.NODE_ENV ?? 'development';
const isProduction = mode === 'production';
const isDevelopment = !isProduction;

function getEnvPath() {
  switch (process.env.NODE_ENV) {
    case 'test':
      return 'src/environments/environment.test';
    case 'production':
      return 'src/environments/environment.prod';
    case 'development':
    default:
      return 'src/environments/environment';
  }
}

const config: Configuration = {
  mode: isProduction ? 'production' : 'development',
  entry: {
    bundle: [...stylesheets, './src/main.ts'],
  },
  resolve: {
    alias: {
      // Note: Later in this config file, we'll automatically add paths from `tsconfig.compilerOptions.paths`
      svelte: path.resolve('./action_modules', 'svelte'),
      [path.resolve(__dirname, 'src/environments/environment')]: path.resolve(
        __dirname,
        getEnvPath()
      ),
    },
    extensions: ['.mjs', '.js', '.ts', '.svelte'],
    mainFields: ['svelte', 'browser', 'module', 'main'],
    plugins: [new TsconfigPathsPlugin({})],
    fallback: {
      fs: false,
    },
  },
  output: {
    path: path.resolve(__dirname, 'public/build'),
    publicPath: '/build/',
    filename: '[name].js',
    chunkFilename: '[name].[id].js',
  },
  module: {
    rules: [
      // Rule: Svelte
      {
        test: /\.svelte$/,
        // exclude: /action_modules/,
        use: {
          loader: 'svelte-loader',
          options: {
            compilerOptions: {
              // Dev mode must be enabled for HMR to work!
              dev: isDevelopment,
            },
            emitCss: isProduction,
            hotReload: isDevelopment,
            hotOptions: {
              // List of options and defaults: https://www.npmjs.com/package/svelte-loader-hot#usage
              acceptAccessors: true,
              acceptNamedExports: true,
              noPreserveState: false,
              optimistic: true,
            },
            preprocess: SveltePreprocess({
              scss: true,
              sass: true,
              postcss: true,
            }),
          },
        },
      },

      // Required to prevent errors from Svelte on Webpack 5+, omit on Webpack 4
      // See: https://github.com/sveltejs/svelte-loader#usage
      {
        test: /action_modules\/svelte\/.*\.mjs$/,
        resolve: {
          fullySpecified: false,
        },
      },

      // Rule: SASS
      {
        test: /\.(scss|sass)$/,
        use: [
          {
            loader: MiniCssExtractPlugin.loader,
          },
          'css-loader',
          {
            loader: 'postcss-loader',
            options: {
              postcssOptions: {
                plugins: [Autoprefixer],
              },
            },
          },
          'sass-loader',
        ],
      },

      // Rule: CSS
      {
        test: /\.css$/,
        use: [
          {
            loader: MiniCssExtractPlugin.loader,
          },
          'css-loader',
        ],
      },

      // {
      //   loader: 'postcss-loader'
      // },

      // Rule: TypeScript
      {
        test: /\.ts$/,
        use: 'ts-loader',
        exclude: /action_modules/,
      },
    ],
  },
  devServer: {
    hot: true,
    stats: 'none',
    contentBase: 'public',
    watchContentBase: true,
  },
  target: isDevelopment ? 'web' : 'browserslist',
  plugins: [
    new MiniCssExtractPlugin({
      filename: '[name].css',
    }),
    new ActionPolyfillPlugin({}),
    new Webpack.DefinePlugin({
      'process.env.BASE_URL': JSON.stringify(process.env.BASE_URL),
    }),
  ],
  devtool: isProduction && !sourceMapsInProduction ? false : 'source-map',
  stats: {
    chunks: false,
    chunkModules: false,
    modules: false,
    assets: true,
    entrypoints: false,
  },
};

/**
 * This interface combines configuration from `webpack` and `webpack-dev-server`. You can add or override properties
 * in this interface to change the config object type used above.
 */
export interface Configuration
  extends Webpack.Configuration,
    WebpackDev.Configuration {}

/*********************************************************************************************************************/
/**********                                             Advanced                                            **********/
/*********************************************************************************************************************/

// Configuration for production bundles
if (isProduction) {
  // Clean the build directory for production builds
  config.plugins?.push(new CleanWebpackPlugin());

  // Minify CSS files
  config.optimization?.minimizer?.push(
    new OptimizeCSSAssetsPlugin({
      cssProcessorOptions: {
        map: sourceMapsInProduction
          ? { inline: false, annotation: true }
          : false,
      },
      cssProcessorPluginOptions: {
        preset: [
          'default',
          {
            discardComments: {
              removeAll: !sourceMapsInProduction,
            },
          },
        ],
      },
    })
  );

  // Minify and treeshake JS
  if (config.optimization === undefined) {
    config.optimization = {};
  }

  config.optimization.minimize = true;
}

// Load path aliases from the tsconfig.json file
const tsconfigPath = path.resolve('apps/frontend', 'tsconfig.json');
const tsconfig = fs.existsSync(tsconfigPath) ? require(tsconfigPath) : {};

if ('compilerOptions' in tsconfig && 'paths' in tsconfig.compilerOptions) {
  const aliases = tsconfig.compilerOptions.paths;

  for (const alias in aliases) {
    const paths = aliases[alias].map((p: string) => path.resolve(__dirname, p));

    // Our tsconfig uses glob path formats, whereas webpack just wants directories
    // We'll need to transform the glob format into a format acceptable to webpack

    const wpAlias = alias.replace(/(\\|\/)\*$/, '');
    const wpPaths = paths.map((p: string) => p.replace(/(\\|\/)\*$/, ''));

    if (config.resolve && config.resolve.alias) {
      if (!(wpAlias in config.resolve.alias) && wpPaths.length) {
        config.resolve.alias[wpAlias] =
          wpPaths.length > 1 ? wpPaths : wpPaths[0];
      }
    }
  }
}

// Babel
if (useBabel && (isProduction || useBabelInDevelopment)) {
  const loader = {
    loader: 'babel-loader',
    options: {
      sourceType: 'unambiguous',
      presets: [
        [
          // Docs: https://babeljs.io/docs/en/babel-preset-env
          '@babel/preset-env',
          {
            debug: false,
            corejs: { version: 3 },
            useBuiltIns: 'usage',
          },
        ],
      ],
      plugins: ['@babel/plugin-transform-runtime'],
    },
  };

  config.module?.rules.unshift({
    test: /\.(?:m?js|ts)$/,
    include: [
      path.resolve(__dirname, 'src'),
      path.resolve('action_modules', 'svelte'),
    ],
    exclude: [
      /action_modules[/\\](css-loader|core-js|webpack|regenerator-runtime)/,
    ],
    use: loader,
  });

  const svelte = config.module?.rules.find((rule) => {
    if (typeof rule !== 'object') return false;
    else if (Array.isArray(rule.use))
      return rule.use.includes(
        (e: any) =>
          typeof e.loader === 'string' && e.loader.startsWith('svelte-loader')
      );
    else if (typeof rule.use === 'object')
      return rule.use.loader?.startsWith('svelte-loader') ?? false;
    return false;
  }) as Webpack.RuleSetRule;

  if (!svelte) {
    console.error('ERR: Could not find svelte-loader for babel injection!');
    process.exit(1);
  }

  if (!Array.isArray(svelte.use)) {
    svelte.use = [svelte.use as any];
  }

  svelte.use.unshift(loader);
}

export default config;

'''
'''--- ts-packages/testing-utils/README.md ---
# `malloc-client`

> TODO: description

## Usage

```
const mallocClient = require('malloc-client');

// TODO: DEMONSTRATE API
```

'''
'''--- ts-packages/testing-utils/babel.config.js ---
module.exports = {
  presets: [
    "@babel/preset-env",
    "@babel/preset-react",
    "@babel/preset-typescript",
  ],
};

'''
'''--- ts-packages/testing-utils/lib/tester-malloc2.levtester.testnet.json ---
{
  "account_id": "tester-malloc2.levtester.testnet",
  "public_key": "ed25519:DthMfNgtkBxhJ5s11hmjDLxT21Yr3A43oHXTRJyn4W1n",
  "private_key": "ed25519:KtfEehSLqJPruyQ8rnTouRnsQ9DCNg29ge5EyyjaKBQEGzX34Q7hijJzvwdZA3jUDUn51XfPQpMePf28AHSe1ax"
}

'''
'''--- ts-packages/testing-utils/lib/tester.example.json ---
// This is an example for the tester.json file which contains the Near Key used for testing
{
  "account_id": "<ACCOUNT_ID>.testnet",
  "public_key": "ed25519:<PUBLIC KEY>",
  "private_key": "ed25519:<PRIVATE KEY>"
}

'''
'''--- ts-packages/testing-utils/lib/testing-utils.ts ---
import BN from "bn.js";
import { readFileSync } from "fs";
import {
  Account,
  connect,
  Contract,
  KeyPair,
  keyStores,
  Near,
  providers,
  utils,
} from "../../malloc-client/lib/near-rexport";
import { KeyPairEd25519, PublicKey } from "../../malloc-client/lib/near-rexport";
import { join } from "path";
import {
  AccountId,
  BigNumberish,
  SpecialAccount,
  SpecialAccountType,
  SpecialAccountWithKeyPair,
} from "../../malloc-client/lib/interfaces";
import {
  MallocClient,
  wrapAccountKeyPair,
} from "../../malloc-client/lib/malloc-client";
import tester from "./tester.json";

let generatedAccounts: Account[] = [];
export const rpcNode = "https://rpc.testnet.near.org";
export const MAX_GAS = new BN("300000000000000");
const NEW_ACCOUNT_STORAGE_COST = utils.format.parseNearAmount("0.00125");
export const MALLOC_CALL_SIMPLE_GAS = new BN("10000000000000");
export const provider = new providers.JsonRpcProvider(rpcNode);
export const WRAP_TESTNET_CONTRACT = "wrap.testnet";

interface CreateConnectionOpts {
  privateKey?: string;
  keyPair?: KeyPair;
  accountId: string;
}

export const getMallocCallPassthroughContract = () =>
  readFileSync(
    join(
      __dirname,
      "../../../rust/packages/malloc-calls/passthrough-call/neardev/dev-account"
    )
  ).toString();
export const getMallocCallErrorContract = () =>
  readFileSync(
    join(
      __dirname,
      "../../../rust/packages/malloc-calls/error-malloc-call/neardev/dev-account"
    )
  ).toString();
export const getMallocCallBlackwholeContract = () =>
  readFileSync(
    join(
      __dirname,
      "../../../rust/packages/malloc-calls/blackwhole-call/neardev/dev-account"
    )
  ).toString();
export const getMallocCallSendContract = () =>
  readFileSync(
    join(
      __dirname,
      "../../../rust/packages/malloc-calls/send-malloc-call/neardev/dev-account"
    )
  ).toString();

export const getMallocContract = () =>
  readFileSync(
    join(__dirname, "../../../rust/packages/contract/neardev/dev-account")
  ).toString();

export const getDefaultTesterAccountNear =
  async (): Promise<SpecialAccountWithKeyPair> => {
    const near = await createNear({
      privateKey: tester.private_key,
      accountId: tester.account_id,
    });
    return wrapAccountKeyPair(
      await near.account(tester.account_id),
      new KeyPairEd25519(tester.private_key.split(":")[1])
    ) as SpecialAccountWithKeyPair;
  };

export const getDefaultTesterKeypair = (): KeyPair =>
  KeyPair.fromString(tester.private_key);

export const createNear = async (opts: CreateConnectionOpts): Promise<Near> => {
  const keyStore = new keyStores.InMemoryKeyStore();
  const _keyPair =
    opts.keyPair ?? opts.privateKey
      ? KeyPair.fromString(opts.privateKey as string)
      : null;
  if (!_keyPair) throw "Either a key pair or a private key has to be passed in";
  await keyStore.setKey("testnet", opts.accountId, _keyPair);

  const near = await connect({
    networkId: "testnet",
    nodeUrl: rpcNode,
    masterAccount: opts.accountId,
    keyPath: `${__dirname}/tester-malloc2.levtester.testnet.json`,
    keyStore: keyStore,
  });
  return near;
};

export const getFtContract = async (
  caller: Account,
  contractId: string
): Promise<Contract> => {
  return new Contract(caller, contractId, {
    changeMethods: ["near_deposit", "storage_deposit", "ft_transfer_call"],
    viewMethods: ["ft_balance_of", "storage_balance_of"],
  });
};

export const ftBalOf = async (
  ftContractId: AccountId,
  accountId: AccountId,
  caller: Account
): Promise<string> => {
  const bal = await caller.viewFunction(ftContractId, "ft_balance_of", {
    account_id: accountId,
  });
  return bal;
};

export const isFtRegistered = async (
  contractAddr: string,
  accountId: string,
  caller: Account
) => {
  const storageBal = await caller.viewFunction(
    contractAddr,
    "storage_balance_of",
    {
      account_id: accountId,
    }
  );
  return storageBal && storageBal.total !== "0";
};

export const setupFT = async (
  contractAddr: string,
  accountId: string,
  caller: Account
) => {
  if (!(await isFtRegistered(contractAddr, accountId, caller)))
    await caller.functionCall({
      contractId: contractAddr,
      methodName: "storage_deposit",
      args: { account_id: accountId },
      attachedDeposit: new BN(NEW_ACCOUNT_STORAGE_COST as string),
      gas: MAX_GAS,
    });
};

export const setupWNearAccount = async (
  contractAddr: string,
  accountId: string,
  caller: Account,
  initDeposit = false,
  amountInitDeposit: number | string = 10000
) => {
  await setupFT(contractAddr, accountId, caller);
  if (initDeposit) {
    const wNearbal = await caller.viewFunction(contractAddr, "ft_balance_of", {
      account_id: accountId,
    });
    console.info("Current wNear balance of", wNearbal);
    if (wNearbal < amountInitDeposit)
      await caller.functionCall({
        contractId: contractAddr,
        methodName: "near_deposit",
        args: {
        },
        gas: MAX_GAS,
        attachedDeposit: new BN(amountInitDeposit).sub(new BN(wNearbal)),
      });
  }
};

export const newRandAccount = async (
  masterAccount?: Account
): Promise<SpecialAccountWithKeyPair> => {
  let _masterAccount = masterAccount ?? (await getDefaultTesterAccountNear());
  const randName = Math.random();
  // remove the 0.
  const newAccountId = `${randName.toString().substr(2)}.${
    _masterAccount.accountId
  }`;
  const kp = KeyPairEd25519.fromRandom();
  await _masterAccount.createAccount(
    newAccountId,
    kp.getPublicKey(),
    new BN(utils.format.parseNearAmount("1.2") as string)
  );
  const near = await createNear({
    accountId: newAccountId,
    privateKey: kp.secretKey,
  });
  const account = await near.account(newAccountId);
  console.log("Created account", newAccountId);
  generatedAccounts.push(account);
  return wrapAccountKeyPair(
    account,
    kp
  ) as SpecialAccountWithKeyPair;
};

export const getResults = async (txHash: string, accountId: string) => {
  const res = await provider.txStatusReceipts(
    new Uint8Array(utils.serialize.base_decode(txHash)),
    accountId
  );
  return res.receipts_outcome.map((outcome) => outcome.outcome.status);
};

export const allResultsSuccess = (results: any[]) =>
  results.every(
    (result) =>
      result["SuccessValue"] === "" ||
      result["SuccessValue"] ||
      result["SuccessReceiptId"] === "" ||
      result["SuccessReceiptId"]
  );

// TODO: remove storage deposit from tokenAccountIds
// TODO: convert balances of token accounts to wNear, then convert that back to Near and give to OG account
export const cleanUp = async (
  beneficiaryId: string,
  tokenAccountIds: AccountId[]
) => {
  console.log(
    "Deleteing the following accounts",
    generatedAccounts.map((account) => account.accountId)
  );
  try {
    await Promise.all(
      generatedAccounts.map((account) => account.deleteAccount(beneficiaryId))
    );
  } catch (e) {}
  generatedAccounts = [];
};

export const addBigNumberish = (
  a: string | BN | number,
  b: string | BN | number
): string => {
  return new BN(a).add(new BN(b)).toString();
};

export const checkBalDifferences = (
  oldBal: BigNumberish,
  newBal: BigNumberish,
  expectedDiff: BigNumberish,
  expect: any
) => {
  expect(new BN(newBal).toString()).toBe(
    new BN(oldBal).add(new BN(expectedDiff)).toString()
  );
};

'''
'''--- ts-packages/testing-utils/package-lock.json ---
{
  "name": "testing-utils",
  "version": "0.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "@types/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/node": {
      "version": "16.3.3",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-16.3.3.tgz",
      "integrity": "sha512-8h7k1YgQKxKXWckzFCMfsIwn0Y61UK6tlD6y2lOb3hTOIMlK3t9/QwHOhc81TwU+RMf0As5fj7NPjroERCnejQ=="
    },
    "base-x": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.8.tgz",
      "integrity": "sha512-Rl/1AWP4J/zRrk54hhlxH4drNxPJXYUaKffODVI53/dAsV4t9fBxyxYKAVPU1XBHxYwOWP9h9H0hM2MVw4YfJA==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "bn.js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.2.0.tgz",
      "integrity": "sha512-D7iWRBvnZE8ecXiLj/9wbxH7Tk79fAh8IHaTNq1RWRixsS02W+5qS+iE9yq6RYl0asXx5tw0bLhmT5pIfbSquw=="
    },
    "borsh": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/borsh/-/borsh-0.4.0.tgz",
      "integrity": "sha512-aX6qtLya3K0AkT66CmYWCCDr77qsE9arV05OmdFpmat9qu8Pg9J5tBUPDztAW5fNh/d/MyVG/OYziP52Ndzx1g==",
      "requires": {
        "@types/bn.js": "^4.11.5",
        "bn.js": "^5.0.0",
        "bs58": "^4.0.0",
        "text-encoding-utf-8": "^1.0.2"
      }
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha1-vhYedsNU9veIrkBx9j806MTwpCo=",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha1-Ua2HNT8ZNv/Xfy8hx0YzpN6oiAE="
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
    },
    "error-polyfill": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.2.tgz",
      "integrity": "sha512-8uhnXlJuhFkmIfhw2tAHtWQGpXcw5rrc0dhuY3bhn8tBHvh6l0oL9VJvR2suqx9eltglKKhVPv8luPQy+UxLTA==",
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.0"
      }
    },
    "http-errors": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.0.tgz",
      "integrity": "sha512-4I8r0C5JDhT5VkvI47QktDW75rNlGVsUf/8hzjCC/wkWI/jdTRmBb9aI7erSG82r1bjKY3F6k28WnsVxB1C73A==",
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
          "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
        }
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "mustache": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz",
      "integrity": "sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ=="
    },
    "near": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/near/-/near-0.2.2.tgz",
      "integrity": "sha1-EECXrM0K4uFRWy7hnDcXsQ/eJ+w="
    },
    "near-api-js": {
      "version": "0.42.0",
      "resolved": "https://registry.npmjs.org/near-api-js/-/near-api-js-0.42.0.tgz",
      "integrity": "sha512-YtDR0sXHL2CclXZdscqUIjoc4Vp/o09CSY1lQ6mygSNbWp5ghLAR1kNBQnALGGQhYC6NLBCzJQJZMb2IQr2WzA==",
      "requires": {
        "bn.js": "5.2.0",
        "borsh": "^0.4.0",
        "bs58": "^4.0.0",
        "depd": "^2.0.0",
        "error-polyfill": "^0.1.2",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.6.1",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      }
    },
    "node-fetch": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
      "integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw=="
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha1-GSzod6iC36Z1HwQSqGX6+y2h2sA=",
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw=="
    },
    "tweetnacl": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
      "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
    },
    "u3": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.0.tgz",
      "integrity": "sha1-AGCSdmO2g1PFOc2pnpUR1mh+3Z0="
    }
  }
}

'''
'''--- ts-packages/testing-utils/package.json ---
{
  "name": "testing-utils",
  "version": "0.0.0",
  "description": "> TODO: description",
  "author": "Lev Stambler <levstamb@gmail.com>",
  "homepage": "https://github.com/Lev-Stambler/malloc-near-2#readme",
  "license": "ISC",
  "main": "lib/testing-utils.js",
  "directories": {
    "lib": "lib",
    "test": "__tests__"
  },
  "files": [
    "lib"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Lev-Stambler/malloc-near-2.git"
  },
  "scripts": {
    "test": "jest test --runInBand"
  },
  "bugs": {
    "url": "https://github.com/Lev-Stambler/malloc-near-2/issues"
  },
  "dependencies": {
    "borsh": "^0.4.0",
    "js-sha256": "^0.9.0",
    "near": "^0.2.2",
    "near-api-js": "^0.42.0"
  }
}

'''
'''--- ts-packages/testing-utils/tsconfig.json ---
{
  "extends": "../../tsconfig.json",
  "compilerOptions": {
    "outDir": "./lib"
  },
  "include": ["./src"]
}

'''
'''--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "strict": true /* Enable all strict type-checking options. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "lib": ["es2019"],

    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
  },
  "exclude": ["**/*.spec.ts"]
}

'''
'''--- tsconfig.spec.json ---
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "../../dist/out-tsc",
    "module": "commonjs",
    "types": ["jest", "node"],
    "lib": ["dom", "es2019"]
  },
  "include": ["**/*.spec.ts", "**/*.d.ts"]
}

'''