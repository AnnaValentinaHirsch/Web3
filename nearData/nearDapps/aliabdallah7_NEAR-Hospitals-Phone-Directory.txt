*GitHub Repository "aliabdallah7/NEAR-Hospitals-Phone-Directory"*

'''--- contract/as-pect.config.js ---
module.exports = require("near-sdk-as/imports");
module.exports.include.push("**/*.unit.spec.ts");

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>Hospitals Phone Directory</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>
'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- src/App.js ---
import "./App.css";

import Login from "./components/login/login";
import Main from "./components/main/main";

function App() {
  const isLoggedIn = localStorage.getItem(
    "near-api-js:keystore:miguelislas.testnet:testnet"
  );
  return <div className="App">{isLoggedIn ? <Main /> : <Login />}</div>;
}

export default App;

'''
'''--- src/App.test.js ---
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

'''
'''--- src/components/login/description.js ---
function Description() {
  return (
    <p>
      Here's a phone directory where you will find contact data of many hospitals
      <br />
      You will find the name of the hospital, their phone number, a contact
      email, their location, etc.
      <br />
      <br />
      Also you can register your own hospital if you are a CEO of a one, so other users can find you
      easily.
    </p>
  );
}

export default Description;

'''
'''--- src/components/login/header.js ---
function Header() {
  return <h1>Hospital phone directory</h1>;
}

export default Header;

'''
'''--- src/components/login/login-button.js ---
import { useState, useEffect } from "react";

import Button from "react-bootstrap/Button";
import Login from "./login";
import Row from "react-bootstrap/Row";
import Container from "react-bootstrap/Container";

import { getWallet, gethospitalsData, CONTRACT_ID } from "../../lib/near";

function LoginButton(props) {
  const [wallet, setWallet] = useState();
  const [accountId, setAccountId] = useState("");
  const [infoMessage, setInfoMessage] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    (async () => {
      try {
        setLoading(true);
        const tempWallet = await getWallet();
        setWallet(tempWallet);
        setAccountId(tempWallet.getAccountId());
        setLoading(false);
      } catch (e) {
        console.log(e);
      }
    })();
  }, []);

  const login = async () => {
    setLoading(true);
    try {
      await wallet.requestSignIn(CONTRACT_ID, "hospitals phone directory");
    } catch (e) {
      console.log(e);
    }
    setLoading(false);
    // eslint-disable-next-line no-restricted-globals
    //location.reload();
  };

  return (
    <Container className="">
      <Button
        variant="success"
        className="m-4"
        size="md"
        onClick={() => login()}
      >
        Log in
      </Button>
      <span>Log in to start viewing hospitals's data</span>
    </Container>
  );
}

export default LoginButton;

'''
'''--- src/components/login/login.js ---
import Header from "./header";
import Description from "./description";
import LoginButton from "./login-button";

import classes from "./login.module.css";

function Login(props) {
  return (
    <div className={classes.fondo}>
      <Header />
      <Description />
      <LoginButton setIsLoggedIn={props.setIsLoggedIn} />
    </div>
  );
}

export default Login;

'''
'''--- src/components/main/hospital-card.js ---
import Card from "react-bootstrap/Card";

function HospitalCard(props) {
  return (
    <Card border="secondary" style={{ width: "18rem" }}>
      <Card.Header>{props.name}</Card.Header>
      <Card.Body>
        <Card.Title>{props.creatorId}</Card.Title>
        <Card.Text>
          <p>Location: {props.location}</p>
          <p>Phone: {props.phone}</p>
          <p>Number employees: {props.numberEmployees}</p>
          <p>email: {props.email}</p>
          <p>website: {props.website}</p>
        </Card.Text>
      </Card.Body>
    </Card>
  );
}

export default HospitalCard;

'''
'''--- src/components/main/hospitals-list.js ---
import Row from "react-bootstrap/Row";

import HospitalCard from "./hospital-card";

import classes from "./hospitals.module.css";

function HospitalsList(props) {
  return (
    <Row className="d-flex justify-content-around">
      {props.hospitals.map((hospital) => {
        return (
          <HospitalCard
            className={classes.hospitalCard}
            name={hospital.name}
            creatorId={hospital.creatorId}
            phone={hospital.phone}
            email={hospital.email}
            numberEmployees={hospital.numberEmployees}
            location={hospital.location}
            website={hospital.website}
          />
        );
      })}
    </Row>
  );
}

export default HospitalsList;

'''
'''--- src/components/main/hospitals.js ---
import { useState, useEffect } from "react";

import Container from "react-bootstrap/Container";

import { getHospitalsData, getWallet } from "../../lib/near";
import HospitalsList from "./hospitals-list";

function Hospital(props) {
  const [wallet, setWallet] = useState();
  const [accountId, setAccountId] = useState("");
  const [loading, setLoading] = useState(true);
  const [hospitalsData, setHospitalsData] = useState([]);

  useEffect(() => {
    (async () => {
      try {
        const tempWallet = await getWallet();
        console.log(tempWallet);
        setWallet(tempWallet);
        setAccountId(tempWallet.getAccountId());
      } catch (e) {
        console.log(e);
      }
    })();
  }, []);

  useEffect(() => {
    setLoading(true);
    (async () => {
      try {
        const result = await getHospitalsData(wallet);
        const {
          status: { SuccessValue },
        } = result;
        const contractResponse = atob(SuccessValue).split("\\n");
        const jsonData = JSON.parse(contractResponse);
        console.log(props.hospitalName);
        if (props.hospitalName) {
          jsonData.forEach((hospital) => {
            if (hospital.name === props.hospitalName) {
              setHospitalsData([hospital]);
              setLoading(false);
            }
          });
        } else {
          setHospitalsData(jsonData);
          setLoading(false);
        }
      } catch (e) {
        console.log(e);
      }
    })();
  }, [wallet, props.hospitalName]);

  return (
    <Container className="m-4">
      {console.log(accountId)}
      {loading ? (
        <p>loading...</p>
      ) : (
        <HospitalsList hospitals={hospitalsData} />
      )}
    </Container>
  );
}

export default Hospital;

'''
'''--- src/components/main/main.js ---
import { useState } from "react";

import NavBar from "./navbar";

import Hospitals from "./hospitals";

function Main() {
  const [hospitalName, setHospitalName] = useState("");

  return (
    <div>
      <NavBar setHospitalName={setHospitalName} />
      <Hospitals hospitalName={hospitalName} />
    </div>
  );
}

export default Main;

'''
'''--- src/components/main/navbar.js ---
import { useState, useEffect, useRef } from "react";

import Navbar from "react-bootstrap/Navbar";
import Button from "react-bootstrap/Button";
import Form from "react-bootstrap/Form";
import FormControl from "react-bootstrap/FormControl";

import { getWallet } from "../../lib/near";
import RegisterModal from "./registerModal";

import classes from "./navbar.module.css";

function NavBar(props) {
  const [wallet, setWallet] = useState();
  const [accountId, setAccountId] = useState("");
  const [showModal, setShowModal] = useState(false);

  const searchRef = useRef();

  useEffect(() => {
    (async () => {
      try {
        const tempWallet = await getWallet();
        setWallet(tempWallet);
        setAccountId(tempWallet.getAccountId());
      } catch (e) {
        console.log(e);
      }
    })();
  }, []);

  const signOut = () => {
    try {
      wallet.signOut();
      localStorage.removeItem(
        "near-api-js:keystore:miguelislas.testnet:testnet"
      );
    } catch (e) {
      console.log(e);
    }
    // eslint-disable-next-line no-restricted-globals
    location.reload();
  };

  return (
    <>
      <Navbar bg="light" expand="lg">
        <Navbar.Brand href="#">Companies phone directory</Navbar.Brand>
        <Navbar.Toggle aria-controls="navbarScroll" />
        <Navbar.Collapse id="navbarScroll">
          <Form className="d-flex justify-content-between">
            <FormControl
              type="search"
              placeholder="Search"
              className={classes.myNavbar}
              aria-label="Search"
              ref={searchRef}
            />
            <Button
              variant="outline-info"
              onClick={() => props.setHospitalName(searchRef.current.value)}
            >
              Search
            </Button>
          </Form>
          <Navbar.Collapse className="justify-content-end">
            <Button variant="success" onClick={() => setShowModal(true)}>
              Register hospital
            </Button>
            <Button variant="danger" className="m-2" onClick={signOut}>
              Log out
            </Button>
          </Navbar.Collapse>
        </Navbar.Collapse>
      </Navbar>
      <RegisterModal show={showModal} handleClose={() => setShowModal(false)} />
    </>
  );
}

export default NavBar;

'''
'''--- src/components/main/registerModal.js ---
import { useRef, useState, useEffect } from "react";

import Modal from "react-bootstrap/Modal";
import Button from "react-bootstrap/Button";
import Form from "react-bootstrap/Form";

import { getWallet, registerHospital } from "../../lib/near";

function RegisterModal(props) {
  const nameRef = useRef();
  const phoneRef = useRef();
  const emailRef = useRef();
  const numberRef = useRef();
  const websiteRef = useRef();
  const locationRef = useRef();

  const [wallet, setWallet] = useState();
  const [accountId, setAccountId] = useState("");

  useEffect(() => {
    (async () => {
      try {
        const tempWallet = await getWallet();
        console.log(tempWallet);
        setWallet(tempWallet);
        setAccountId(tempWallet.getAccountId());
      } catch (e) {
        console.log(e);
      }
    })();
  }, []);

  const registerHospitalHandler = async () => {
    const hospital = {
      name: nameRef.current.value,
      phone: phoneRef.current.value,
      email: emailRef.current.value,
      numberEmployees: numberRef.current.value,
      website: websiteRef.current.value,
      location: locationRef.current.value,
    };

    console.log(hospital);

    try {
      console.log("Por llamar");
      const res = await registerHospital(wallet, hospital);
      console.log(res);
      // eslint-disable-next-line no-restricted-globals
      location.reload();
    } catch (e) {
      console.log("error");
      console.log(e);
    }
  };

  return (
    <Modal show={props.show} onHide={props.handleClose}>
      <Modal.Dialog>
        <Modal.Header>
          <Modal.Title>Register hospital</Modal.Title>
        </Modal.Header>
        {console.log(accountId)}
        <Modal.Body>
          <Form>
            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Hospital's name:</Form.Label>
              <Form.Control
                type="text"
                placeholder="Name of the hospital"
                ref={nameRef}
              />
            </Form.Group>

            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Hospital's phone:</Form.Label>
              <Form.Control
                type="text"
                placeholder="phone of the hospital"
                ref={phoneRef}
              />
            </Form.Group>

            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Hospital's email:</Form.Label>
              <Form.Control
                type="email"
                placeholder="email of the hospital"
                ref={emailRef}
              />
            </Form.Group>

            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Number of employees:</Form.Label>
              <Form.Control
                type="text"
                placeholder="How many employees are working here?"
                ref={numberRef}
              />
            </Form.Group>

            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Hospital's website:</Form.Label>
              <Form.Control
                type="text"
                placeholder="website of the hospital"
                ref={websiteRef}
              />
            </Form.Group>

            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Hospital's location:</Form.Label>
              <Form.Control
                type="text"
                placeholder="Location of the hospital"
                ref={locationRef}
              />
            </Form.Group>
          </Form>
        </Modal.Body>

        <Modal.Footer>
          <Button variant="secondary" onClick={props.handleClose}>
            Close
          </Button>
          <Button variant="primary" onClick={() => registerHospitalHandler()}>
            Register hospital
          </Button>
        </Modal.Footer>
      </Modal.Dialog>
    </Modal>
  );
}

export default RegisterModal;

'''
'''--- src/index.js ---
import "bootstrap/dist/css/bootstrap.min.css";
import React from "react";
import ReactDOM from "react-dom";
import "./index.css";
import App from "./App";
import reportWebVitals from "./reportWebVitals";

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById("root")
);

reportWebVitals();

'''
'''--- src/lib/near.js ---
import { keyStores, connect, WalletConnection, utils } from "near-api-js";
import BN from "bn.js";

export const CONTRACT_ID = "dev-1634742185963-52355839606274";
export const gas = new BN("70000000000000");

export const getWallet = async () => {
  const near = await connect({
    networkId: "testnet",
    keyStore: new keyStores.BrowserLocalStorageKeyStore(),
    nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
  });
  const wallet = new WalletConnection(near, "miguelislas");
  return wallet;
};

export const getHospitalsData = async (wallet) => {
  const response = await wallet.account().functionCall({
    contractId: CONTRACT_ID,
    methodName: "getHospitalsData",
    gas,
  });
  return response;
};

export const registerHospital = async (wallet, hospital) => {
  const response = await wallet.account().functionCall({
    contractId: CONTRACT_ID,
    methodName: "registerHospital",
    args: hospital,
    gas,
  });
  return response;
};

'''
'''--- src/reportWebVitals.js ---
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

'''