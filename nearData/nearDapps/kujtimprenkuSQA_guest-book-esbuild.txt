*GitHub Repository "kujtimprenkuSQA/guest-book-esbuild"*

'''--- Readme.md ---
Install dependencies:

```bash
yarn install
```

Build project:

```bash
yarn build
```

Start project locally:

```bash
yarn start
```

'''
'''--- esbuild.config.js ---
// esbuild.config.js
const res = require('esbuild').buildSync({
  bundle: true,
  entryPoints: ['src/App.tsx'],
  outfile: 'dist/output.js',
  minify: true,
  format: 'esm',
  target: "es2017",
  sourcemap: true,
  platform: "browser",
  // external: ['react', 'react-dom'],
})

'''
'''--- index.html ---
<html>
    <head>
        <link rel="stylesheet" href="./dist/output.css">
    </head>
    <body>
        <script type="module" src="./dist/output.js"></script>
        <div id="root"></div>
    </body>
</html>

'''
'''--- package.json ---
{
  "scripts": {
    "build": "node ./esbuild.config.js",
    "start": "npx lite-server"
  },
  "dependencies": {
    "@near-wallet-selector/account-export": "^7.9.2",
    "@near-wallet-selector/core": "^7.9.2",
    "@near-wallet-selector/modal-ui": "^7.9.2",
    "@near-wallet-selector/my-near-wallet": "^7.9.2",
    "big.js": "^6.2.1",
    "buffer": "^6.0.3",
    "esbuild": "^0.17.15",
    "near-api-js": "1.1.0",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "regenerator-runtime": "^0.13.11",
    "rxjs": "^7.8.0"
  },
  "devDependencies": {
    "@types/big.js": "^6.1.6"
  }
}

'''
'''--- src/constants.ts ---
export const CONTRACT_ID = "guest-book.testnet";

'''
'''--- src/interfaces.ts ---
import type { AccountView } from "near-api-js/lib/providers/provider";

export interface Message {
  premium: boolean;
  sender: string;
  text: string;
}

export type Account = AccountView & {
  account_id: string;
};

'''
'''--- src/polyfills.ts ---
import * as process from "process";
import { Buffer } from "buffer";
// @ts-ignore
Object.assign(self, {
    process,
    global: self,
    Buffer,
});

'''
'''--- src/styles.css ---
* {
    box-sizing: border-box;
}

html {
    --bg: #fff;
    --fg: #25282A;
    --gray: #888;
    --royal: #0072CE;
    --blue: #6AD1E3;
    --primary: #D1CCBD;
    --secondary: var(--royal);
    --tertiary: #FF585D;
    background-color: var(--bg);
    color: var(--fg);
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
    font-size: calc(.65em + 0.7vw);
    line-height: 1.3;
}
html ::selection {
    background: var(--secondary);
    color: var(--bg);
}
@media (prefers-color-scheme: dark) {
    html {
        --bg: #25282A;
        --fg: #fff;
        --secondary: var(--blue);
    }
    html ::selection {
        background: var(--secondary);
        color: var(--fg);
    }
}
body {
    margin: 0 auto;
    padding: 0 1em;
    max-width: 40em;
}
fieldset {
    border: none;
    margin: 0;
    padding: 0;
}
.highlight {
    align-items: center;
    display: flex;
    margin-bottom: 0.5em;
    width: 100%;
}
.highlight label {
    margin-right: 0.5em;
}
.highlight input {
    caret-color: var(--secondary);
}
label {
    color: var(--gray);
}
button, .highlight {
    border-radius: 5px;
    border-color: var(--primary);
    border: 0.1em solid var(--primary);
    padding: 0.5em 1em;
}
button:hover, .highlight:hover, button:focus, .highlight:focus, button:focus-within, .highlight:focus-within {
    border-color: var(--secondary);
}
input {
    border: none;
    flex: 1;
}
input:read-only {
    color: var(--primary);
}
input[type="number"] {
    text-align: center;
    border-bottom: 0.1em solid var(--primary);
    margin: 0 1em;
    width: 4em;
    padding-left: 0.5em;
}
input[type="number"]:hover, input[type="number"]:focus {
    border-color: var(--secondary);
}
input[type="checkbox"] {
    margin: 0 1em;
}
button, input {
    background: transparent;
    color: inherit;
    cursor: pointer;
    font: inherit;
    outline: none;
}
button {
    position: relative;
    transition: top 50ms;
}
button:hover, button:focus {
    top: -1px;
}
button:active {
    background: var(--secondary);
    border-color: var(--secondary);
    top: 1px;
}
.is-premium {
    border-left: 0.25em solid var(--secondary);
    padding-left: 0.25em;
    margin-left: -0.5em;
}
.title-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.lds-ellipsis {
    position: relative;
    width: 80px;
    height: 80px;
    margin: auto;
}
.lds-ellipsis div {
    position: absolute;
    top: 33px;
    width: 13px;
    height: 13px;
    border-radius: 50%;
    background: var(--fg);
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
    left: 8px;
    animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
    left: 8px;
    animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
    left: 32px;
    animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
}
@keyframes lds-ellipsis1 {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1);
    }
}
@keyframes lds-ellipsis3 {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(0);
    }
}
@keyframes lds-ellipsis2 {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate(24px, 0);
    }
}

'''