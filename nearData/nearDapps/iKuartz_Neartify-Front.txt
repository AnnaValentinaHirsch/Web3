*GitHub Repository "iKuartz/Neartify-Front"*

'''--- .eslintrc.json ---
{
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "extends": ["airbnb", "plugin:react/recommended"],
  "plugins": ["react"],
  "rules": {
    "react/jsx-filename-extension": ["warn", { "extensions": [".js", ".jsx"] }],
    "react/react-in-jsx-scope": "off",
    "import/no-unresolved": "off",
    "no-shadow": "off",
    "jsx-a11y/label-has-associated-control": "off"
  },
  "ignorePatterns": [
    "dist/",
    "build/"
  ]
}
'''
'''--- .github/workflows/linters.yml ---
name: Linters

on: pull_request

env:
  FORCE_COLOR: 1

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Setup ESLint
        run: |
          npm install --save-dev eslint@7.x eslint-config-airbnb@18.x eslint-plugin-import@2.x eslint-plugin-jsx-a11y@6.x eslint-plugin-react@7.x eslint-plugin-react-hooks@4.x @babel/eslint-parser@7.x @babel/core@7.x  @babel/plugin-syntax-jsx@7.x @babel/preset-env@7.x  @babel/preset-react@7.x
          [ -f .eslintrc.json ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux/.eslintrc.json
          [ -f .babelrc ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux/.babelrc
      - name: ESLint Report
        run: npx eslint .

'''
'''--- README copy.md ---
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `yarn start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `yarn test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `yarn build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `yarn eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `yarn build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

'''
'''--- README.md ---
# Neartify-Front

'''
'''--- package.json ---
{
  "name": "neartify-front-end",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@babel/core": "7.x",
    "@babel/eslint-parser": "7.x",
    "@babel/plugin-syntax-jsx": "7.x",
    "@babel/preset-react": "7.x",
    "@reduxjs/toolkit": "^1.8.5",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^13.0.0",
    "@testing-library/user-event": "^13.2.1",
    "autoprefixer": "^10.4.8",
    "eslint-config-airbnb": "18.x",
    "eslint-plugin-import": "2.x",
    "eslint-plugin-jsx-a11y": "6.x",
    "eslint-plugin-react": "7.x",
    "eslint-plugin-react-hooks": "4.x",
    "n": "^9.0.0",
    "near-api-js": "^1.0.0",
    "postcss": "^8.4.16",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-redux": "^8.0.2",
    "react-router-dom": "^6.3.0",
    "react-scripts": "5.0.1",
    "tailwindcss": "^3.1.8",
    "tw-elements": "^1.0.0-alpha12",
    "web-vitals": "^2.1.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

'''
'''--- postcss.config.js ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

'''
'''--- public/index.html ---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>Neartify</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

'''
'''--- public/manifest.json ---
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

'''
'''--- public/robots.txt ---
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

'''
'''--- src/App.js ---
import { Routes, Route } from 'react-router-dom';
import { useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { initContract } from './assets/near/utils';
import { setUserData } from './redux/reducers/user';
import { getVaccinateds } from './redux/reducers/vaccinated';
import Homepage from './pages/Homepage';
import VaccinatedSearch from './pages/VaccinatedSearch';

function App() {
  const dispatch = useDispatch();

  function flow() {
    if (window.walletConnection.isSignedIn()) {
      const userId = window.walletConnection.getAccountId();
      dispatch(setUserData(userId));
    }
  }
  useEffect(() => {
    if (localStorage.getItem('vaccinatedList')) {
      dispatch(
        getVaccinateds(JSON.parse(localStorage.getItem('vaccinatedList'))),
      );
    }

    window.nearInitPromise = initContract().then(flow).catch(console.error);
  }, []);
  return (
    <>
      <Routes>
        <Route path="/" element={<Homepage />} />
        <Route path="/search" element={<VaccinatedSearch />} />
      </Routes>
    </>
  );
}

export default App;

'''
'''--- src/assets/near/config.js ---
import { keyStores } from 'near-api-js';

const CONTRACT_NAME = process.env.CONTRACT_NAME || 'new-awesome-project';

function getConfig(env) {
  switch (env) {
    case 'production':
    case 'mainnet':
      return {
        networkId: 'mainnet',
        nodeUrl: 'https://rpc.mainnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.near.org',
        helperUrl: 'https://helper.mainnet.near.org',
        explorerUrl: 'https://explorer.mainnet.near.org',
        deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() },
      };
    case 'development':
    case 'testnet':
      return {
        networkId: 'testnet',
        nodeUrl: 'https://rpc.testnet.near.org',
        contractName: CONTRACT_NAME,
        walletUrl: 'https://wallet.testnet.near.org',
        helperUrl: 'https://helper.testnet.near.org',
        explorerUrl: 'https://explorer.testnet.near.org',
        deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() },
      };
    default:
      throw Error(
        `Unconfigured environment '${env}'. Can be configured in src/config.js.`,
      );
  }
}

export default getConfig;

'''
'''--- src/assets/near/utils.js ---
import { connect, Contract, WalletConnection } from 'near-api-js';
import getConfig from './config';

const nearConfig = getConfig(process.env.NODE_ENV || 'development');

// Initialize contract & set global variables
export const initContract = async () => {
  // Set a connection to the NEAR network
  window.near = await connect(nearConfig);

  // Initialize a Wallet Object
  window.walletConnection = new WalletConnection(window.near);

  // Initialize a Contract Object (to interact with the contract)
  window.contract = await new Contract(
    window.walletConnection.account(), // user's account
    nearConfig.contractName, // contract's account
    {
      viewMethods: ['beneficiary', 'get_donations', 'total_donations'],
      changeMethods: ['donate'],
    },
  );
};

export const login = () => {
  // Allows to make calls to the contract on the user's behalf.
  // Works by creating a new access key for the user's account
  // and storing the private key in localStorage.
  window.walletConnection.requestSignIn(nearConfig.contractName);
};

'''
'''--- src/components/Container.js ---
import React from 'react';
import PropTypes from 'prop-types';

const Container = ({ children, className }) => (
  <div className={`min-h-screen p-6 ${className}`}>{children}</div>
);

Container.propTypes = {
  children: PropTypes.node.isRequired,
  className: PropTypes.string,
};

Container.defaultProps = {
  className: '',
};

export default Container;

'''
'''--- src/components/Navbar.js ---
const Navbar = () => (
  <nav
    className="
fixed
top-0
left-0
right-0
w-full
flex flex-wrap
items-center
justify-between
py-4
bg-gray-100
text-gray-500
hover:text-gray-700
focus:text-gray-700
shadow-lg
navbar navbar-expand-lg navbar-light
"
  >
    <div className="container-fluid w-full flex flex-wrap items-center justify-between px-6">
      <button
        className="
    navbar-toggler
    text-gray-500
    border-0
    hover:shadow-none hover:no-underline
    py-2
    px-2.5
    bg-transparent
    focus:outline-none focus:ring-0 focus:shadow-none focus:no-underline
  "
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <svg
          aria-hidden="true"
          focusable="false"
          data-prefix="fas"
          data-icon="bars"
          className="w-6"
          role="img"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 448 512"
        >
          <path
            fill="currentColor"
            d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"
          />
        </svg>
      </button>
      <div
        className="collapse navbar-collapse flex-grow items-center"
        id="navbarSupportedContent"
      >
        <a className="text-xl text-black" href="/">
          Neartify
        </a>
        {/* <!-- Left links --> */}
        <ul className="navbar-nav flex flex-col pl-2 list-style-none mr-auto">
          <li className="nav-item pr-2">
            <a
              className="nav-link text-gray-500 hover:text-gray-700 focus:text-gray-700 p-0"
              href="/"
            >
              Add New Vaccinated
            </a>
          </li>
          <li className="nav-item pr-2">
            <a
              className="nav-link text-gray-500 hover:text-gray-700 focus:text-gray-700 p-0"
              href="/search"
            >
              Search
            </a>
          </li>
        </ul>
        {/* <!-- Left links --> */}
      </div>
      {/* <!-- Collapsible wrapper --> */}
    </div>
  </nav>
);

export default Navbar;

'''
'''--- src/components/VaccinesTable.js ---
/* eslint-disable react/prop-types */
const VaccinesTable = ({ vaccines }) => (
  <div className="flex flex-col mt-auto">
    <div className="overflow-x-auto sm:-mx-6 lg:-mx-8">
      <div className="inline-block min-w-full sm:px-6 lg:px-8">
        <div className="overflow-hidden">
          <table className="min-w-full">
            <thead className="bg-white border-b">
              <tr>
                <th
                  scope="col"
                  className="text-sm font-medium text-gray-900 px-6 py-4 text-left"
                >
                  Vaccine
                </th>
                <th
                  scope="col"
                  className="text-sm font-medium text-gray-900 px-6 py-4 text-left"
                >
                  Dose
                </th>
                <th
                  scope="col"
                  className="text-sm font-medium text-gray-900 px-6 py-4 text-left"
                >
                  Date
                </th>
              </tr>
            </thead>
            <tbody>
              {vaccines.map((vaccine, index) => (
                <tr
                  // eslint-disable-next-line react/no-array-index-key
                  key={index}
                  className="bg-white border-t transition duration-300 ease-in-out hover:bg-gray-100"
                >
                  <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                    {vaccine.name}
                  </td>
                  <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                    {vaccine.dose}
                  </td>
                  <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
                    {vaccine.date}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
);

export default VaccinesTable;

'''
'''--- src/data/vaccinated.js ---
export default {
  'jonas.testnet': {
    person: 'Jonas',
    vaccines: [
      { name: 'covid19', dose: 1, date: '2021-01-01' },
      { name: 'covid19', dose: 2, date: '2021-03-31' },
    ],
  },
  'maria.testnet': {
    person: 'Maria',
    vaccines: [
      { name: 'covid19', dose: 1, date: '2022-01-15' },
      { name: 'covid19', dose: 2, date: '2022-05-16' },
    ],
  },
  'victor.testnet': {
    person: 'Victor',
    vaccines: [{ name: 'covid19', dose: 1, date: '2022-01-14' }],
  },
  'elizabeth.testnet': {
    person: 'Elizabeth',
    vaccines: [
      { name: 'covid19', dose: 1, date: '2022-03-26' },
      { name: 'covid19', dose: 2, date: '2022-05-20' },
      { name: 'covid19', dose: 3, date: '2022-08-04' },
    ],
  },
};

'''
'''--- src/helpers/formValidator/validator.js ---
import walletValidator from './walletValidator';

// Input names
export const WALLET_INPUT_NAME = 'walletAddress';
export const VACCINE_INPUT = 'vaccine';
export const PERSON_INPUT = 'person';
export const DATE_INPUT = 'date';
export const DOSE_INPUT = 'dose';

const validator = (input) => {
  switch (input.name) {
    case WALLET_INPUT_NAME:
      return walletValidator(input.value);
    default:
      return { status: true, message: '' };
  }
};

export default validator;

'''
'''--- src/helpers/formValidator/walletValidator.js ---
import stringValidator from '../validators/stringValidator';

const WALLET_REGEX = /^[a-z0-9][a-z0-9_-]{0,62}[a-z0-9].near|.testnet$/;

const walletValidator = (wallet) => {
  if (!stringValidator(wallet, WALLET_REGEX)) {
    return { status: false, message: 'Invalid wallet address' };
  }
  return { status: true, message: 'Valid wallet address' };
};

export default walletValidator;

'''
'''--- src/helpers/validators/stringValidator.js ---
const stringValidator = (string, regex) => regex.test(string);

export default stringValidator;

'''
'''--- src/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@layer components {
  .input-form-text {
    @apply block w-full px-3 py-1.5 text-base font-normal text-gray-700
    bg-white bg-clip-padding border border-solid border-gray-300 rounded
    transition ease-in-out m-0 focus:text-gray-700 focus:bg-white
    focus:border-blue-600 focus:outline-none;
  }

  .input-error {
    @apply text-red-700 border-red-300;
  }
  .submit-btn {
    @apply px-6 py-2.5 bg-blue-600 text-white font-medium text-xs
    leading-tight uppercase
    rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700
    focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg
    transition duration-150 ease-in-out;
  }
}

'''
'''--- src/index.js ---
import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import 'tw-elements';
import './index.css';
import App from './App';
import store from './redux/store';

const root = ReactDOM.createRoot(document.getElementById('root'));

root.render(
  <BrowserRouter>
    <Provider store={store}>
      <App />
    </Provider>
  </BrowserRouter>,
);

'''
'''--- src/logo.svg ---
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
'''
'''--- src/pages/Homepage.js ---
import { useSelector } from 'react-redux';
import LoginPage from './LoginPage';
import VaccinationFormPage from './VaccinationFormPage';

const Homepage = () => {
  const user = useSelector((state) => state.user);

  return <>{user.isSignedIn ? <VaccinationFormPage /> : <LoginPage />}</>;
};

export default Homepage;

'''
'''--- src/pages/LoginPage.js ---
import React from 'react';
import Container from '../components/Container';
import { login } from '../assets/near/utils';

const LoginPage = () => {
  const handleSubmit = (e) => {
    e.preventDefault();
    login();
  };
  return (
    <Container className="flex justify-center items-center">
      <form onSubmit={handleSubmit} className="">
        <h1 className="text-3xl text-center mb-4">Neartify</h1>
        <button type="submit" className="submit-btn">
          Login in with your Near account
        </button>
      </form>
    </Container>
  );
};

export default LoginPage;

'''
'''--- src/pages/VaccinatedSearch.js ---
import { useSelector } from 'react-redux';
import { useState } from 'react';
import Container from '../components/Container';
import Navbar from '../components/Navbar';
import VaccinesTable from '../components/VaccinesTable';

const VaccinatedSearch = () => {
  const NULL = '';
  const FOUND = 'FOUND';
  const NOT_FOUND = 'NOT_FOUND';

  const vaccinatedList = useSelector(
    (state) => state.vaccinated.vaccinatedList,
  );
  const [search, setSearch] = useState({ status: NULL, value: '', data: null });

  const handleChange = (e) => {
    setSearch({ ...search, status: NULL, value: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (vaccinatedList[search.value]) {
      setSearch({
        ...search,
        status: FOUND,
        data: vaccinatedList[search.value],
      });
    } else {
      setSearch({
        ...search,
        status: NOT_FOUND,
        data: null,
      });
    }
  };

  return (
    <Container>
      <Navbar />
      <h2 className="font-extrabold text-2xl text-center mt-16 mb-4">
        Search Vaccinated
      </h2>
      <div className="flex justify-center">
        <div className="mb-3 xl:w-96">
          <form
            onSubmit={handleSubmit}
            className="input-group relative flex flex-wrap items-stretch w-full mb-4"
          >
            <input
              type="search"
              className="form-control relative flex-auto min-w-0 block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
              placeholder="Search"
              aria-label="Search"
              aria-describedby="button-addon2"
              onChange={handleChange}
            />
            <button
              className="btn inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700  focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out flex items-center"
              type="submit"
              id="button-addon2"
            >
              <svg
                aria-hidden="true"
                focusable="false"
                data-prefix="fas"
                data-icon="search"
                className="w-4"
                role="img"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
              >
                <path
                  fill="currentColor"
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                />
              </svg>
            </button>
          </form>
        </div>
      </div>
      <div id="result">
        {search.status === FOUND && (
          <div className="border-2 flex flex-col">
            <h3 className="text-center text-xl">
              Name:
              <strong>{` ${search.data.person}`}</strong>
            </h3>
            <h5 className="text-center">Vaccines:</h5>
            <VaccinesTable vaccines={search.data.vaccines} />
          </div>
        )}
        {search.status === NOT_FOUND && <p>Not found</p>}
      </div>
    </Container>
  );
};

export default VaccinatedSearch;

'''
'''--- src/pages/VaccinationFormPage.js ---
import React, { useState } from 'react';
import { useDispatch } from 'react-redux';
import Container from '../components/Container';
import Navbar from '../components/Navbar';
import validator, {
  WALLET_INPUT_NAME,
} from '../helpers/formValidator/validator';
import { setVaccine } from '../redux/reducers/vaccinated';

export default function VaccinationFormPage() {
  const dispatch = useDispatch();
  const validStatus = { status: true, message: '' };
  const dateNow = new Date();
  const vaccinesAvailable = [
    {
      id: 0,
      name: 'DTP',
    },
    {
      id: 1,
      name: 'Hep A',
    },
    {
      id: 2,
      name: 'Hep B',
    },
    {
      id: 3,
      name: 'covid19',
    },
  ];

  const [formData, setFormData] = useState({
    walletAddress: null,
    name: vaccinesAvailable[0].name,
    person: null,
    date: null,
    dose: null,
  });

  const [formErrors, setFormErrors] = useState({});

  const handleSubmit = (e) => {
    e.preventDefault();
    if (Object.keys(formData).every((key) => formData[key])) {
      dispatch(setVaccine(formData));
      return alert('Form submitted!');
    }
    return alert('Please fill all fields!');
  };

  const handleChange = (e) => {
    const valid = validator(e.target);
    if (valid.status) {
      setFormData({ ...formData, [e.target.name]: e.target.value });
      setFormErrors({ ...formErrors, [e.target.name]: validStatus });
    } else {
      setFormData({ ...formData, [e.target.name]: null });
      setFormErrors({ ...formErrors, [e.target.name]: valid });
    }
  };

  return (
    <Container className="flex flex-col">
      <Navbar />
      <div className="mt-16 mx-auto block p-6 rounded-lg shadow-lg bg-white max-w-sm">
        <div className="w-full">
          <h2 className="text-2xl text-center mx-auto font-bold uppercase text-gray-700 mb-3">
            Add New Vaccinated
          </h2>
        </div>
        <form onSubmit={handleSubmit}>
          <div className="form-group mb-6">
            <label
              htmlFor={WALLET_INPUT_NAME}
              className="form-label inline-block mb-2 text-gray-700"
            >
              Wallet
            </label>
            <input
              type="text"
              className={`form-control input-form-text ${
                formErrors[WALLET_INPUT_NAME]
                && !formErrors[WALLET_INPUT_NAME].status
                  ? 'input-error'
                  : ''
              }`}
              name={WALLET_INPUT_NAME}
              id={WALLET_INPUT_NAME}
              placeholder="wallet.near"
              onChange={handleChange}
            />
          </div>
          <div className="form-group mb-6">
            <label
              htmlFor="name"
              className="form-label inline-block mb-2 text-gray-700"
            >
              Vaccine
            </label>
            <select
              name="name"
              id="name"
              className="form-control input-form-text"
              onChange={handleChange}
              defaultValue={vaccinesAvailable[0].name}
            >
              {vaccinesAvailable.map((vaccine) => (
                <option key={vaccine.id} value={vaccine.name}>
                  {vaccine.name}
                </option>
              ))}
            </select>
          </div>
          <div className="form-group mb-6">
            <label
              htmlFor="person"
              className="form-label inline-block mb-2 text-gray-700"
            >
              Vaccinated Person
            </label>
            <input
              type="text"
              className="form-control input-form-text"
              name="person"
              id="person"
              placeholder="Vaccinated Person"
              onChange={handleChange}
            />
          </div>
          <div className="form-group mb-6">
            <label
              htmlFor="date"
              className="form-label inline-block mb-2 text-gray-700"
            >
              Date
            </label>
            <input
              type="date"
              max={dateNow.toLocaleDateString('en-CA')}
              className="form-control input-form-text"
              name="date"
              id="date"
              onChange={handleChange}
            />
          </div>
          <div className="form-group mb-6">
            <label
              htmlFor="dose"
              className="form-label inline-block mb-2 text-gray-700"
            >
              Dose
            </label>
            <input
              type="number"
              className="form-control input-form-text"
              name="dose"
              id="dose"
              max={9}
              min={1}
              onChange={handleChange}
            />
          </div>
          <button type="submit" className="submit-btn">
            Submit
          </button>
        </form>
      </div>
    </Container>
  );
}

'''
'''--- src/redux/reducers/user.js ---
/* eslint-disable no-param-reassign */
import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  userId: '',
  isSignedIn: false,
};

export const userSlice = createSlice({
  name: 'user',
  initialState,
  reducers: {
    setUserData: (state, action) => {
      state.userId = action.payload;
      state.isSignedIn = true;
    },
  },
});

export const { setUserData } = userSlice.actions;
export default userSlice.reducer;

'''
'''--- src/redux/reducers/vaccinated.js ---
/* eslint-disable no-param-reassign */
import { createSlice } from '@reduxjs/toolkit';
import vaccinatedList from '../../data/vaccinated';

const initialState = { vaccinatedList };

export const vaccinatedSlice = createSlice({
  name: 'vaccinated',
  initialState,
  reducers: {
    getVaccinateds: (state, action) => {
      state.vaccinatedList = action.payload;
    },
    setVaccine: (state, action) => {
      if (!state.vaccinatedList[action.payload.walletAddress]) {
        state.vaccinatedList[action.payload.walletAddress] = {
          person: action.payload.person,
          vaccines: [],
        };
      }
      state.vaccinatedList[action.payload.walletAddress].vaccines.push({
        name: action.payload.name,
        dose: action.payload.dose,
        date: action.payload.date,
      });

      localStorage.setItem(
        'vaccinatedList',
        JSON.stringify(state.vaccinatedList),
      );
    },
  },
});

export const { setVaccine, getVaccinateds } = vaccinatedSlice.actions;
export default vaccinatedSlice.reducer;

'''
'''--- src/redux/store.js ---
import { configureStore } from '@reduxjs/toolkit';
import userReducer from './reducers/user';
import vaccinatedReducer from './reducers/vaccinated';

const store = configureStore({
  reducer: {
    user: userReducer,
    vaccinated: vaccinatedReducer,
  },
});

export default store;

'''
'''--- src/reportWebVitals.js ---
const reportWebVitals = (onPerfEntry) => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({
      getCLS, getFID, getFCP, getLCP, getTTFB,
    }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

'''
'''--- src/setupTests.js ---
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

'''
'''--- tailwind.config.js ---
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/**/*.{js,jsx,ts,tsx}',
    './node_modules/tw-elements/dist/js/**/*.js',
  ],
  theme: {
    extend: {},
  },
  // eslint-disable-next-line global-require
  plugins: [require('tw-elements/dist/plugin')],
};

'''