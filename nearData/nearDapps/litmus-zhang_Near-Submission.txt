*GitHub Repository "litmus-zhang/Near-Submission"*

'''--- README.md ---
# Near-Submission
This is an ecommerce dapp built on NEAR blockchain, where anyone can  add product to sell, and also get paid directly to their account

Link to demo: https://litmus-zhang.github.io/near-marketplace/

'''
'''--- asconfig.json ---
{
    "extends": "near-sdk-as/asconfig.json"
}
'''
'''--- assembly/as_types.d.ts ---

'''
'''--- assembly/index.ts ---
import { context, ContractPromiseBatch } from "near-sdk-core";
import { Product, listedProducts } from "./model";

// import { PersistentUnorderedMap } from "near-sdk-as";

// export const products = new PersistentUnorderedMap<string, string>("PRODUCTS");

export function setProduct(product: Product): void
{
    let storedProduct = listedProducts.get(product.id)
    if (storedProduct !== null)
    {
        throw new Error(`a product with ${product.id} already exist`)
    }
    listedProducts.set(product.id, Product.fromPayload(product))
}

export function getProduct(id: string): Product | null {
    return listedProducts.get(id);
}

export function getProducts(): Product[]
{
    return listedProducts.values();
}

//When you buy a product the amount sold , the qty sold and the likes increases.

export function buyProduct(productId: string): void
{
    const product = getProduct(productId)
    if (product === null)
    {
        throw new Error("Product not found")
    }
    if (product.price.toString() != context.attachedDeposit.toString())
    {
        throw new Error("Attached deposit should equal to the product's price");
    }
    ContractPromiseBatch.create(product.owner).transfer(context.attachedDeposit);
    product.incrementSoldAmount();
    product.incrementLikes();
    listedProducts.set(product.id, product);
}

'''
'''--- assembly/model.ts ---
import { PersistentUnorderedMap, u128, context } from "near-sdk-as";

@nearBindgen
export class Product {
    id: string;
    name: string;
    description: string;
    image: string;
    location: string;
    price: u128;
    owner: string;
    sold: u32;
    likes: u32;
    public static fromPayload(payload: Product): Product {
        const product = new Product();
        product.id = payload.id;
        product.name = payload.name;
        product.description = payload.description;
        product.image = payload.image;
        product.location = payload.location;
        product.price = payload.price;
        product.owner = context.sender;
        return product;
    }
    public incrementSoldAmount(): void {
        this.sold = this.sold + 1;
    }
    public incrementLikes(): void {
        this.likes = this.likes + 1;
    }
}

export const listedProducts = new PersistentUnorderedMap<string, Product>("LISTED_PRODUCTS");
'''
'''--- assembly/tsconfig.json ---
{
    "extends": "../node_modules/assemblyscript/std/assembly.json",
    "include": [
      "./**/*.ts"
    ]
  }
'''
'''--- package.json ---
{
  "name": "near-marketplace-contract",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "scripts": {
    "deploy": "yarn asb && near deploy --accountId=dev.litmus.testnet --wasmFile=build/release/near-marketplace-contract.wasm"
  },
  "devDependencies": {
    "near-sdk-as": "^3.2.3"
  }
}

'''